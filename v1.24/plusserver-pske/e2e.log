I1108 12:11:26.356587      22 e2e.go:129] Starting e2e run "271a9262-9e70-4f05-a237-4c0cd6fb35b6" on Ginkgo node 1
{"msg":"Test Suite starting","total":356,"completed":0,"skipped":0,"failed":0}
Running Suite: Kubernetes e2e suite
===================================
Random Seed: 1667909486 - Will randomize all specs
Will run 356 of 6973 specs

Nov  8 12:11:28.028: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:11:28.030: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Nov  8 12:11:28.082: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Nov  8 12:11:28.156: INFO: 31 / 31 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Nov  8 12:11:28.156: INFO: expected 7 pod replicas in namespace 'kube-system', 7 are Running and Ready.
Nov  8 12:11:28.156: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Nov  8 12:11:28.174: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'apiserver-proxy' (0 seconds elapsed)
Nov  8 12:11:28.174: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
Nov  8 12:11:28.174: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'csi-driver-node' (0 seconds elapsed)
Nov  8 12:11:28.174: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy-worker-als7z-v1.24.7' (0 seconds elapsed)
Nov  8 12:11:28.174: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy-worker-ld4ha-v1.24.7' (0 seconds elapsed)
Nov  8 12:11:28.174: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'node-exporter' (0 seconds elapsed)
Nov  8 12:11:28.174: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'node-problem-detector' (0 seconds elapsed)
Nov  8 12:11:28.174: INFO: e2e test version: v1.24.7
Nov  8 12:11:28.177: INFO: kube-apiserver version: v1.24.7
Nov  8 12:11:28.177: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:11:28.182: INFO: Cluster IP family: ipv4
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:11:28.184: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename crd-webhook
W1108 12:11:28.206169      22 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Nov  8 12:11:28.209: INFO: Found PodSecurityPolicies; testing pod creation to see if PodSecurityPolicy is enabled
Nov  8 12:11:28.230: INFO: PSP annotation exists on dry run pod: "gardener.privileged"; assuming PodSecurityPolicy is enabled
W1108 12:11:28.237044      22 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W1108 12:11:28.241881      22 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Nov  8 12:11:28.259: INFO: Found ClusterRoles; assuming RBAC is enabled.
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-2274
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:11:28.883: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
Nov  8 12:11:30.902: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.November, 8, 12, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-656754656d\" is progressing."}}, CollisionCount:(*int32)(nil)}
Nov  8 12:11:32.909: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.November, 8, 12, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-656754656d\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:11:35.939: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:11:35.946: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Creating a v1 custom resource
STEP: v2 custom resource should be converted
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:11:39.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-2274" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

â€¢ [SLOW TEST:11.231 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]","total":356,"completed":1,"skipped":7,"failed":0}
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:11:39.415: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-9700
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-projected-g5z5
STEP: Creating a pod to test atomic-volume-subpath
Nov  8 12:11:39.584: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-g5z5" in namespace "subpath-9700" to be "Succeeded or Failed"
Nov  8 12:11:39.597: INFO: Pod "pod-subpath-test-projected-g5z5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.21709ms
Nov  8 12:11:41.606: INFO: Pod "pod-subpath-test-projected-g5z5": Phase="Running", Reason="", readiness=true. Elapsed: 2.022158016s
Nov  8 12:11:43.618: INFO: Pod "pod-subpath-test-projected-g5z5": Phase="Running", Reason="", readiness=true. Elapsed: 4.033842785s
Nov  8 12:11:45.634: INFO: Pod "pod-subpath-test-projected-g5z5": Phase="Running", Reason="", readiness=true. Elapsed: 6.049922677s
Nov  8 12:11:47.643: INFO: Pod "pod-subpath-test-projected-g5z5": Phase="Running", Reason="", readiness=true. Elapsed: 8.058954212s
Nov  8 12:11:49.657: INFO: Pod "pod-subpath-test-projected-g5z5": Phase="Running", Reason="", readiness=true. Elapsed: 10.072216394s
Nov  8 12:11:51.717: INFO: Pod "pod-subpath-test-projected-g5z5": Phase="Running", Reason="", readiness=true. Elapsed: 12.132661673s
Nov  8 12:11:53.726: INFO: Pod "pod-subpath-test-projected-g5z5": Phase="Running", Reason="", readiness=true. Elapsed: 14.142026413s
Nov  8 12:11:55.735: INFO: Pod "pod-subpath-test-projected-g5z5": Phase="Running", Reason="", readiness=true. Elapsed: 16.151078253s
Nov  8 12:11:57.743: INFO: Pod "pod-subpath-test-projected-g5z5": Phase="Running", Reason="", readiness=true. Elapsed: 18.158915508s
Nov  8 12:11:59.754: INFO: Pod "pod-subpath-test-projected-g5z5": Phase="Running", Reason="", readiness=true. Elapsed: 20.169639996s
Nov  8 12:12:01.800: INFO: Pod "pod-subpath-test-projected-g5z5": Phase="Running", Reason="", readiness=false. Elapsed: 22.216008379s
Nov  8 12:12:03.812: INFO: Pod "pod-subpath-test-projected-g5z5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.227250477s
STEP: Saw pod success
Nov  8 12:12:03.812: INFO: Pod "pod-subpath-test-projected-g5z5" satisfied condition "Succeeded or Failed"
Nov  8 12:12:03.816: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-subpath-test-projected-g5z5 container test-container-subpath-projected-g5z5: <nil>
STEP: delete the pod
Nov  8 12:12:03.845: INFO: Waiting for pod pod-subpath-test-projected-g5z5 to disappear
Nov  8 12:12:03.848: INFO: Pod pod-subpath-test-projected-g5z5 no longer exists
STEP: Deleting pod pod-subpath-test-projected-g5z5
Nov  8 12:12:03.848: INFO: Deleting pod "pod-subpath-test-projected-g5z5" in namespace "subpath-9700"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Nov  8 12:12:03.853: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-9700" for this suite.

â€¢ [SLOW TEST:24.503 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]","total":356,"completed":2,"skipped":9,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:12:03.918: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-1688
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test service account token: 
Nov  8 12:12:04.075: INFO: Waiting up to 5m0s for pod "test-pod-2352a686-3731-4494-9295-cae49dea57e3" in namespace "svcaccounts-1688" to be "Succeeded or Failed"
Nov  8 12:12:04.080: INFO: Pod "test-pod-2352a686-3731-4494-9295-cae49dea57e3": Phase="Pending", Reason="", readiness=false. Elapsed: 5.185624ms
Nov  8 12:12:06.091: INFO: Pod "test-pod-2352a686-3731-4494-9295-cae49dea57e3": Phase="Running", Reason="", readiness=true. Elapsed: 2.015921106s
Nov  8 12:12:08.102: INFO: Pod "test-pod-2352a686-3731-4494-9295-cae49dea57e3": Phase="Running", Reason="", readiness=false. Elapsed: 4.026648422s
Nov  8 12:12:10.117: INFO: Pod "test-pod-2352a686-3731-4494-9295-cae49dea57e3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.042158485s
STEP: Saw pod success
Nov  8 12:12:10.117: INFO: Pod "test-pod-2352a686-3731-4494-9295-cae49dea57e3" satisfied condition "Succeeded or Failed"
Nov  8 12:12:10.123: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod test-pod-2352a686-3731-4494-9295-cae49dea57e3 container agnhost-container: <nil>
STEP: delete the pod
Nov  8 12:12:10.149: INFO: Waiting for pod test-pod-2352a686-3731-4494-9295-cae49dea57e3 to disappear
Nov  8 12:12:10.154: INFO: Pod test-pod-2352a686-3731-4494-9295-cae49dea57e3 no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Nov  8 12:12:10.154: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-1688" for this suite.

â€¢ [SLOW TEST:6.253 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts should mount projected service account token [Conformance]","total":356,"completed":3,"skipped":21,"failed":0}
SS
------------------------------
[sig-auth] ServiceAccounts 
  should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:12:10.172: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-844
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:12:10.328: INFO: created pod pod-service-account-defaultsa
Nov  8 12:12:10.328: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Nov  8 12:12:10.341: INFO: created pod pod-service-account-mountsa
Nov  8 12:12:10.341: INFO: pod pod-service-account-mountsa service account token volume mount: true
Nov  8 12:12:10.349: INFO: created pod pod-service-account-nomountsa
Nov  8 12:12:10.349: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Nov  8 12:12:10.358: INFO: created pod pod-service-account-defaultsa-mountspec
Nov  8 12:12:10.358: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Nov  8 12:12:10.369: INFO: created pod pod-service-account-mountsa-mountspec
Nov  8 12:12:10.369: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Nov  8 12:12:10.377: INFO: created pod pod-service-account-nomountsa-mountspec
Nov  8 12:12:10.377: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Nov  8 12:12:10.385: INFO: created pod pod-service-account-defaultsa-nomountspec
Nov  8 12:12:10.386: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Nov  8 12:12:10.393: INFO: created pod pod-service-account-mountsa-nomountspec
Nov  8 12:12:10.393: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Nov  8 12:12:10.403: INFO: created pod pod-service-account-nomountsa-nomountspec
Nov  8 12:12:10.403: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Nov  8 12:12:10.403: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-844" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]","total":356,"completed":4,"skipped":23,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:12:10.433: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2902
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Nov  8 12:12:10.580: INFO: Waiting up to 5m0s for pod "pod-a9f25908-ea04-4c47-92d6-dcb315037cb2" in namespace "emptydir-2902" to be "Succeeded or Failed"
Nov  8 12:12:10.585: INFO: Pod "pod-a9f25908-ea04-4c47-92d6-dcb315037cb2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.34934ms
Nov  8 12:12:12.594: INFO: Pod "pod-a9f25908-ea04-4c47-92d6-dcb315037cb2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013673833s
Nov  8 12:12:14.605: INFO: Pod "pod-a9f25908-ea04-4c47-92d6-dcb315037cb2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024631077s
STEP: Saw pod success
Nov  8 12:12:14.605: INFO: Pod "pod-a9f25908-ea04-4c47-92d6-dcb315037cb2" satisfied condition "Succeeded or Failed"
Nov  8 12:12:14.611: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-a9f25908-ea04-4c47-92d6-dcb315037cb2 container test-container: <nil>
STEP: delete the pod
Nov  8 12:12:14.637: INFO: Waiting for pod pod-a9f25908-ea04-4c47-92d6-dcb315037cb2 to disappear
Nov  8 12:12:14.641: INFO: Pod pod-a9f25908-ea04-4c47-92d6-dcb315037cb2 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 12:12:14.641: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2902" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":5,"skipped":88,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:12:14.658: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-3117
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig...
Nov  8 12:12:14.815: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3117  c02cc778-80ee-4fad-9402-b5ac93bd3b0b 5515 0 2022-11-08 12:12:14 +0000 UTC <nil> <nil> map[] map[kubernetes.io/psp:e2e-test-privileged-psp] [] []  [{e2e.test Update v1 2022-11-08 12:12:14 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8w97j,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8w97j,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:12:14.842: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:12:16.848: INFO: The status of Pod test-dns-nameservers is Running (Ready = true)
STEP: Verifying customized DNS suffix list is configured on pod...
Nov  8 12:12:16.848: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3117 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 12:12:16.848: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:12:16.849: INFO: ExecWithOptions: Clientset creation
Nov  8 12:12:16.849: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/dns-3117/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod...
Nov  8 12:12:17.220: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3117 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 12:12:17.220: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:12:17.220: INFO: ExecWithOptions: Clientset creation
Nov  8 12:12:17.221: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/dns-3117/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Nov  8 12:12:17.615: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Nov  8 12:12:17.634: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-3117" for this suite.
â€¢{"msg":"PASSED [sig-network] DNS should support configurable pod DNS nameservers [Conformance]","total":356,"completed":6,"skipped":113,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:12:17.654: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6034
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Nov  8 12:12:17.965: INFO: Waiting up to 5m0s for pod "downward-api-a5e1b509-de39-4e77-ba86-33bcb7805e48" in namespace "downward-api-6034" to be "Succeeded or Failed"
Nov  8 12:12:17.975: INFO: Pod "downward-api-a5e1b509-de39-4e77-ba86-33bcb7805e48": Phase="Pending", Reason="", readiness=false. Elapsed: 9.51038ms
Nov  8 12:12:19.984: INFO: Pod "downward-api-a5e1b509-de39-4e77-ba86-33bcb7805e48": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018645497s
Nov  8 12:12:21.991: INFO: Pod "downward-api-a5e1b509-de39-4e77-ba86-33bcb7805e48": Phase="Pending", Reason="", readiness=false. Elapsed: 4.025823261s
Nov  8 12:12:24.001: INFO: Pod "downward-api-a5e1b509-de39-4e77-ba86-33bcb7805e48": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.03594966s
STEP: Saw pod success
Nov  8 12:12:24.001: INFO: Pod "downward-api-a5e1b509-de39-4e77-ba86-33bcb7805e48" satisfied condition "Succeeded or Failed"
Nov  8 12:12:24.006: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downward-api-a5e1b509-de39-4e77-ba86-33bcb7805e48 container dapi-container: <nil>
STEP: delete the pod
Nov  8 12:12:24.144: INFO: Waiting for pod downward-api-a5e1b509-de39-4e77-ba86-33bcb7805e48 to disappear
Nov  8 12:12:24.149: INFO: Pod downward-api-a5e1b509-de39-4e77-ba86-33bcb7805e48 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Nov  8 12:12:24.149: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6034" for this suite.

â€¢ [SLOW TEST:6.512 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]","total":356,"completed":7,"skipped":152,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:12:24.167: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-5649
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's command
Nov  8 12:12:24.316: INFO: Waiting up to 5m0s for pod "var-expansion-26ea8757-888e-464a-a6cf-deeb161f7e5f" in namespace "var-expansion-5649" to be "Succeeded or Failed"
Nov  8 12:12:24.323: INFO: Pod "var-expansion-26ea8757-888e-464a-a6cf-deeb161f7e5f": Phase="Pending", Reason="", readiness=false. Elapsed: 6.925357ms
Nov  8 12:12:26.332: INFO: Pod "var-expansion-26ea8757-888e-464a-a6cf-deeb161f7e5f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016046817s
Nov  8 12:12:28.342: INFO: Pod "var-expansion-26ea8757-888e-464a-a6cf-deeb161f7e5f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02540793s
STEP: Saw pod success
Nov  8 12:12:28.342: INFO: Pod "var-expansion-26ea8757-888e-464a-a6cf-deeb161f7e5f" satisfied condition "Succeeded or Failed"
Nov  8 12:12:28.347: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod var-expansion-26ea8757-888e-464a-a6cf-deeb161f7e5f container dapi-container: <nil>
STEP: delete the pod
Nov  8 12:12:28.373: INFO: Waiting for pod var-expansion-26ea8757-888e-464a-a6cf-deeb161f7e5f to disappear
Nov  8 12:12:28.377: INFO: Pod var-expansion-26ea8757-888e-464a-a6cf-deeb161f7e5f no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Nov  8 12:12:28.377: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-5649" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]","total":356,"completed":8,"skipped":160,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:12:28.394: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-9698
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-9698
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating stateful set ss in namespace statefulset-9698
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9698
Nov  8 12:12:28.556: INFO: Found 0 stateful pods, waiting for 1
Nov  8 12:12:38.567: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod
Nov  8 12:12:38.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-9698 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Nov  8 12:12:39.177: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Nov  8 12:12:39.177: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Nov  8 12:12:39.177: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Nov  8 12:12:39.183: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Nov  8 12:12:49.193: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Nov  8 12:12:49.193: INFO: Waiting for statefulset status.replicas updated to 0
Nov  8 12:12:49.216: INFO: POD   NODE                                                        PHASE    GRACE  CONDITIONS
Nov  8 12:12:49.216: INFO: ss-0  shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:12:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:12:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:12:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:12:28 +0000 UTC  }]
Nov  8 12:12:49.216: INFO: 
Nov  8 12:12:49.216: INFO: StatefulSet ss has not reached scale 3, at 1
Nov  8 12:12:50.225: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994122487s
Nov  8 12:12:51.234: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.984644892s
Nov  8 12:12:52.244: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.974481226s
Nov  8 12:12:53.336: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.884070264s
Nov  8 12:12:54.345: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.873646832s
Nov  8 12:12:55.355: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.864310023s
Nov  8 12:12:56.365: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.854968057s
Nov  8 12:12:57.375: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.844536844s
Nov  8 12:12:58.385: INFO: Verifying statefulset ss doesn't scale past 3 for another 834.654798ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9698
Nov  8 12:12:59.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-9698 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Nov  8 12:12:59.692: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Nov  8 12:12:59.692: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Nov  8 12:12:59.692: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Nov  8 12:12:59.692: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-9698 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Nov  8 12:13:00.128: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Nov  8 12:13:00.128: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Nov  8 12:13:00.128: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Nov  8 12:13:00.128: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-9698 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Nov  8 12:13:00.555: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Nov  8 12:13:00.555: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Nov  8 12:13:00.555: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Nov  8 12:13:00.563: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Nov  8 12:13:00.563: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Nov  8 12:13:00.563: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod
Nov  8 12:13:00.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-9698 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Nov  8 12:13:00.990: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Nov  8 12:13:00.990: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Nov  8 12:13:00.990: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Nov  8 12:13:00.990: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-9698 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Nov  8 12:13:01.413: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Nov  8 12:13:01.413: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Nov  8 12:13:01.413: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Nov  8 12:13:01.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-9698 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Nov  8 12:13:01.803: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Nov  8 12:13:01.803: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Nov  8 12:13:01.803: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Nov  8 12:13:01.803: INFO: Waiting for statefulset status.replicas updated to 0
Nov  8 12:13:01.812: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
Nov  8 12:13:11.825: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Nov  8 12:13:11.825: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Nov  8 12:13:11.825: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Nov  8 12:13:11.842: INFO: POD   NODE                                                        PHASE    GRACE  CONDITIONS
Nov  8 12:13:11.842: INFO: ss-0  shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:12:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:13:01 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:13:01 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:12:28 +0000 UTC  }]
Nov  8 12:13:11.842: INFO: ss-1  shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:12:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:13:01 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:13:01 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:12:49 +0000 UTC  }]
Nov  8 12:13:11.842: INFO: ss-2  shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:12:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:13:02 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:13:02 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:12:49 +0000 UTC  }]
Nov  8 12:13:11.842: INFO: 
Nov  8 12:13:11.842: INFO: StatefulSet ss has not reached scale 0, at 3
Nov  8 12:13:12.852: INFO: POD   NODE                                                        PHASE    GRACE  CONDITIONS
Nov  8 12:13:12.852: INFO: ss-0  shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:12:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:13:01 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:13:01 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 12:12:28 +0000 UTC  }]
Nov  8 12:13:12.852: INFO: 
Nov  8 12:13:12.852: INFO: StatefulSet ss has not reached scale 0, at 1
Nov  8 12:13:13.859: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.984180413s
Nov  8 12:13:14.866: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.977114729s
Nov  8 12:13:15.874: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.970096641s
Nov  8 12:13:16.880: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.962444992s
Nov  8 12:13:17.890: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.955881618s
Nov  8 12:13:18.900: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.94602425s
Nov  8 12:13:19.910: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.934165791s
Nov  8 12:13:20.917: INFO: Verifying statefulset ss doesn't scale past 0 for another 925.797829ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9698
Nov  8 12:13:21.924: INFO: Scaling statefulset ss to 0
Nov  8 12:13:21.939: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Nov  8 12:13:21.943: INFO: Deleting all statefulset in ns statefulset-9698
Nov  8 12:13:21.948: INFO: Scaling statefulset ss to 0
Nov  8 12:13:21.964: INFO: Waiting for statefulset status.replicas updated to 0
Nov  8 12:13:21.969: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Nov  8 12:13:21.983: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-9698" for this suite.

â€¢ [SLOW TEST:53.606 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]","total":356,"completed":9,"skipped":188,"failed":0}
SSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:13:22.000: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-7543
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override arguments
Nov  8 12:13:22.147: INFO: Waiting up to 5m0s for pod "client-containers-ea008187-499c-410f-b366-db8a46f1ceae" in namespace "containers-7543" to be "Succeeded or Failed"
Nov  8 12:13:22.153: INFO: Pod "client-containers-ea008187-499c-410f-b366-db8a46f1ceae": Phase="Pending", Reason="", readiness=false. Elapsed: 5.982525ms
Nov  8 12:13:24.163: INFO: Pod "client-containers-ea008187-499c-410f-b366-db8a46f1ceae": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015847118s
Nov  8 12:13:26.180: INFO: Pod "client-containers-ea008187-499c-410f-b366-db8a46f1ceae": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03265529s
STEP: Saw pod success
Nov  8 12:13:26.180: INFO: Pod "client-containers-ea008187-499c-410f-b366-db8a46f1ceae" satisfied condition "Succeeded or Failed"
Nov  8 12:13:26.185: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod client-containers-ea008187-499c-410f-b366-db8a46f1ceae container agnhost-container: <nil>
STEP: delete the pod
Nov  8 12:13:26.222: INFO: Waiting for pod client-containers-ea008187-499c-410f-b366-db8a46f1ceae to disappear
Nov  8 12:13:26.227: INFO: Pod client-containers-ea008187-499c-410f-b366-db8a46f1ceae no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Nov  8 12:13:26.228: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-7543" for this suite.
â€¢{"msg":"PASSED [sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]","total":356,"completed":10,"skipped":194,"failed":0}
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:13:26.245: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9237
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:13:27.178: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:13:30.222: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that should be mutated
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that should not be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:13:31.075: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9237" for this suite.
STEP: Destroying namespace "webhook-9237-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]","total":356,"completed":11,"skipped":196,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:13:31.166: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-5518
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Nov  8 12:13:33.367: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-5518" for this suite.
â€¢{"msg":"PASSED [sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]","total":356,"completed":12,"skipped":242,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:13:33.385: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2477
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Nov  8 12:13:33.528: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: mark a version not serverd
STEP: check the unserved version gets removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:13:52.600: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2477" for this suite.

â€¢ [SLOW TEST:19.246 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]","total":356,"completed":13,"skipped":262,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:13:52.632: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-602
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 12:13:52.911: INFO: Waiting up to 5m0s for pod "downwardapi-volume-cbfcbe2b-19fe-491d-a7c0-ece45825acbb" in namespace "downward-api-602" to be "Succeeded or Failed"
Nov  8 12:13:52.920: INFO: Pod "downwardapi-volume-cbfcbe2b-19fe-491d-a7c0-ece45825acbb": Phase="Pending", Reason="", readiness=false. Elapsed: 8.652449ms
Nov  8 12:13:54.931: INFO: Pod "downwardapi-volume-cbfcbe2b-19fe-491d-a7c0-ece45825acbb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019733782s
Nov  8 12:13:56.939: INFO: Pod "downwardapi-volume-cbfcbe2b-19fe-491d-a7c0-ece45825acbb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027654012s
STEP: Saw pod success
Nov  8 12:13:56.939: INFO: Pod "downwardapi-volume-cbfcbe2b-19fe-491d-a7c0-ece45825acbb" satisfied condition "Succeeded or Failed"
Nov  8 12:13:56.947: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downwardapi-volume-cbfcbe2b-19fe-491d-a7c0-ece45825acbb container client-container: <nil>
STEP: delete the pod
Nov  8 12:13:56.991: INFO: Waiting for pod downwardapi-volume-cbfcbe2b-19fe-491d-a7c0-ece45825acbb to disappear
Nov  8 12:13:56.996: INFO: Pod downwardapi-volume-cbfcbe2b-19fe-491d-a7c0-ece45825acbb no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Nov  8 12:13:56.996: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-602" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":14,"skipped":277,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:13:57.014: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4341
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Nov  8 12:13:57.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 create -f -'
Nov  8 12:13:57.738: INFO: stderr: ""
Nov  8 12:13:57.738: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Nov  8 12:13:57.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Nov  8 12:13:57.801: INFO: stderr: ""
Nov  8 12:13:57.801: INFO: stdout: "update-demo-nautilus-gpwhk update-demo-nautilus-zrxfm "
Nov  8 12:13:57.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 get pods update-demo-nautilus-gpwhk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Nov  8 12:13:57.860: INFO: stderr: ""
Nov  8 12:13:57.860: INFO: stdout: ""
Nov  8 12:13:57.860: INFO: update-demo-nautilus-gpwhk is created but not running
Nov  8 12:14:02.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Nov  8 12:14:02.939: INFO: stderr: ""
Nov  8 12:14:02.939: INFO: stdout: "update-demo-nautilus-gpwhk update-demo-nautilus-zrxfm "
Nov  8 12:14:02.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 get pods update-demo-nautilus-gpwhk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Nov  8 12:14:03.008: INFO: stderr: ""
Nov  8 12:14:03.008: INFO: stdout: "true"
Nov  8 12:14:03.008: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 get pods update-demo-nautilus-gpwhk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Nov  8 12:14:03.072: INFO: stderr: ""
Nov  8 12:14:03.073: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Nov  8 12:14:03.073: INFO: validating pod update-demo-nautilus-gpwhk
Nov  8 12:14:03.134: INFO: got data: {
  "image": "nautilus.jpg"
}

Nov  8 12:14:03.135: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Nov  8 12:14:03.135: INFO: update-demo-nautilus-gpwhk is verified up and running
Nov  8 12:14:03.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 get pods update-demo-nautilus-zrxfm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Nov  8 12:14:03.199: INFO: stderr: ""
Nov  8 12:14:03.199: INFO: stdout: ""
Nov  8 12:14:03.199: INFO: update-demo-nautilus-zrxfm is created but not running
Nov  8 12:14:08.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Nov  8 12:14:08.279: INFO: stderr: ""
Nov  8 12:14:08.279: INFO: stdout: "update-demo-nautilus-gpwhk update-demo-nautilus-zrxfm "
Nov  8 12:14:08.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 get pods update-demo-nautilus-gpwhk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Nov  8 12:14:08.344: INFO: stderr: ""
Nov  8 12:14:08.344: INFO: stdout: "true"
Nov  8 12:14:08.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 get pods update-demo-nautilus-gpwhk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Nov  8 12:14:08.407: INFO: stderr: ""
Nov  8 12:14:08.407: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Nov  8 12:14:08.407: INFO: validating pod update-demo-nautilus-gpwhk
Nov  8 12:14:08.418: INFO: got data: {
  "image": "nautilus.jpg"
}

Nov  8 12:14:08.418: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Nov  8 12:14:08.418: INFO: update-demo-nautilus-gpwhk is verified up and running
Nov  8 12:14:08.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 get pods update-demo-nautilus-zrxfm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Nov  8 12:14:08.493: INFO: stderr: ""
Nov  8 12:14:08.493: INFO: stdout: "true"
Nov  8 12:14:08.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 get pods update-demo-nautilus-zrxfm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Nov  8 12:14:08.559: INFO: stderr: ""
Nov  8 12:14:08.559: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Nov  8 12:14:08.559: INFO: validating pod update-demo-nautilus-zrxfm
Nov  8 12:14:08.623: INFO: got data: {
  "image": "nautilus.jpg"
}

Nov  8 12:14:08.623: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Nov  8 12:14:08.623: INFO: update-demo-nautilus-zrxfm is verified up and running
STEP: using delete to clean up resources
Nov  8 12:14:08.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 delete --grace-period=0 --force -f -'
Nov  8 12:14:08.683: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Nov  8 12:14:08.683: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Nov  8 12:14:08.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 get rc,svc -l name=update-demo --no-headers'
Nov  8 12:14:08.782: INFO: stderr: "No resources found in kubectl-4341 namespace.\n"
Nov  8 12:14:08.782: INFO: stdout: ""
Nov  8 12:14:08.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4341 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Nov  8 12:14:08.855: INFO: stderr: ""
Nov  8 12:14:08.855: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 12:14:08.855: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4341" for this suite.

â€¢ [SLOW TEST:11.864 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should create and stop a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]","total":356,"completed":15,"skipped":312,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:14:08.879: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-6243
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in volume subpath
Nov  8 12:14:09.030: INFO: Waiting up to 5m0s for pod "var-expansion-dc8bc88f-9009-45e3-9e20-a3824bd74e4f" in namespace "var-expansion-6243" to be "Succeeded or Failed"
Nov  8 12:14:09.035: INFO: Pod "var-expansion-dc8bc88f-9009-45e3-9e20-a3824bd74e4f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.937998ms
Nov  8 12:14:11.043: INFO: Pod "var-expansion-dc8bc88f-9009-45e3-9e20-a3824bd74e4f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012800877s
Nov  8 12:14:13.053: INFO: Pod "var-expansion-dc8bc88f-9009-45e3-9e20-a3824bd74e4f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022211135s
Nov  8 12:14:15.062: INFO: Pod "var-expansion-dc8bc88f-9009-45e3-9e20-a3824bd74e4f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.032017539s
STEP: Saw pod success
Nov  8 12:14:15.062: INFO: Pod "var-expansion-dc8bc88f-9009-45e3-9e20-a3824bd74e4f" satisfied condition "Succeeded or Failed"
Nov  8 12:14:15.067: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod var-expansion-dc8bc88f-9009-45e3-9e20-a3824bd74e4f container dapi-container: <nil>
STEP: delete the pod
Nov  8 12:14:15.092: INFO: Waiting for pod var-expansion-dc8bc88f-9009-45e3-9e20-a3824bd74e4f to disappear
Nov  8 12:14:15.096: INFO: Pod var-expansion-dc8bc88f-9009-45e3-9e20-a3824bd74e4f no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Nov  8 12:14:15.097: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-6243" for this suite.

â€¢ [SLOW TEST:6.237 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]","total":356,"completed":16,"skipped":326,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:14:15.116: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-7295
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Nov  8 12:14:15.269: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Nov  8 12:14:15.292: INFO: Waiting for terminating namespaces to be deleted...
Nov  8 12:14:15.301: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm before test
Nov  8 12:14:15.339: INFO: apiserver-proxy-b2tpk from kube-system started at 2022-11-08 12:05:58 +0000 UTC (2 container statuses recorded)
Nov  8 12:14:15.339: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:14:15.339: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:14:15.340: INFO: cilium-c6w8t from kube-system started at 2022-11-08 12:05:58 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.340: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:14:15.340: INFO: csi-driver-node-qgnwd from kube-system started at 2022-11-08 12:05:58 +0000 UTC (3 container statuses recorded)
Nov  8 12:14:15.340: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:14:15.340: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:14:15.340: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:14:15.340: INFO: kube-proxy-worker-als7z-v1.24.7-d8gkj from kube-system started at 2022-11-08 12:05:58 +0000 UTC (2 container statuses recorded)
Nov  8 12:14:15.340: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:14:15.340: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:14:15.340: INFO: node-exporter-4ff28 from kube-system started at 2022-11-08 12:05:58 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.340: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:14:15.340: INFO: node-problem-detector-v668n from kube-system started at 2022-11-08 12:05:58 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.340: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:14:15.340: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-5ppr7 from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:14:15.340: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:14:15.340: INFO: 	Container systemd-logs ready: true, restart count 0
Nov  8 12:14:15.340: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z before test
Nov  8 12:14:15.375: INFO: apiserver-proxy-wcz5q from kube-system started at 2022-11-08 12:05:57 +0000 UTC (2 container statuses recorded)
Nov  8 12:14:15.375: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:14:15.375: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:14:15.375: INFO: cilium-p8wkv from kube-system started at 2022-11-08 12:05:57 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.375: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:14:15.375: INFO: csi-driver-node-z4gvc from kube-system started at 2022-11-08 12:05:57 +0000 UTC (3 container statuses recorded)
Nov  8 12:14:15.375: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:14:15.375: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:14:15.375: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:14:15.375: INFO: kube-proxy-worker-als7z-v1.24.7-bqnlf from kube-system started at 2022-11-08 12:05:57 +0000 UTC (2 container statuses recorded)
Nov  8 12:14:15.375: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:14:15.375: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:14:15.375: INFO: node-exporter-vsvv9 from kube-system started at 2022-11-08 12:05:57 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.375: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:14:15.375: INFO: node-problem-detector-cttk5 from kube-system started at 2022-11-08 12:05:57 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.376: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:14:15.376: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-grsjl from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:14:15.376: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:14:15.376: INFO: 	Container systemd-logs ready: true, restart count 0
Nov  8 12:14:15.376: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc before test
Nov  8 12:14:15.407: INFO: apiserver-proxy-lbkkq from kube-system started at 2022-11-08 11:56:30 +0000 UTC (2 container statuses recorded)
Nov  8 12:14:15.407: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:14:15.407: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:14:15.407: INFO: blackbox-exporter-7c445d84b4-p9b7s from kube-system started at 2022-11-08 11:56:40 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.407: INFO: 	Container blackbox-exporter ready: true, restart count 0
Nov  8 12:14:15.407: INFO: blackbox-exporter-7c445d84b4-r2cn2 from kube-system started at 2022-11-08 11:56:40 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.407: INFO: 	Container blackbox-exporter ready: true, restart count 0
Nov  8 12:14:15.408: INFO: cilium-ntlkq from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.408: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:14:15.408: INFO: cilium-operator-fb5f68d45-hf2vx from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.408: INFO: 	Container cilium-operator ready: true, restart count 0
Nov  8 12:14:15.408: INFO: csi-driver-node-tbftn from kube-system started at 2022-11-08 11:56:30 +0000 UTC (3 container statuses recorded)
Nov  8 12:14:15.408: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:14:15.408: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:14:15.408: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:14:15.408: INFO: kube-proxy-worker-ld4ha-v1.24.7-j8gzf from kube-system started at 2022-11-08 11:56:40 +0000 UTC (2 container statuses recorded)
Nov  8 12:14:15.408: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:14:15.408: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:14:15.408: INFO: node-exporter-69tsx from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.408: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:14:15.408: INFO: node-problem-detector-74vkx from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.408: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:14:15.408: INFO: sonobuoy from sonobuoy started at 2022-11-08 12:11:02 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.408: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Nov  8 12:14:15.408: INFO: sonobuoy-e2e-job-a84be4cdb9164430 from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:14:15.408: INFO: 	Container e2e ready: true, restart count 0
Nov  8 12:14:15.408: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:14:15.408: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-l25mf from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:14:15.408: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:14:15.408: INFO: 	Container systemd-logs ready: true, restart count 0
Nov  8 12:14:15.408: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw before test
Nov  8 12:14:15.444: INFO: apiserver-proxy-67kl9 from kube-system started at 2022-11-08 11:56:37 +0000 UTC (2 container statuses recorded)
Nov  8 12:14:15.444: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:14:15.444: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:14:15.444: INFO: cilium-427j9 from kube-system started at 2022-11-08 11:56:37 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.444: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:14:15.444: INFO: coredns-8686744dd4-5fk2d from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.444: INFO: 	Container coredns ready: true, restart count 0
Nov  8 12:14:15.444: INFO: coredns-8686744dd4-tpzbm from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.444: INFO: 	Container coredns ready: true, restart count 0
Nov  8 12:14:15.444: INFO: csi-driver-node-8zqbd from kube-system started at 2022-11-08 11:56:37 +0000 UTC (3 container statuses recorded)
Nov  8 12:14:15.444: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:14:15.444: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:14:15.444: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:14:15.444: INFO: kube-proxy-worker-ld4ha-v1.24.7-tzm8r from kube-system started at 2022-11-08 11:56:46 +0000 UTC (2 container statuses recorded)
Nov  8 12:14:15.444: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:14:15.444: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:14:15.444: INFO: metrics-server-848ccfb6d4-9cgtc from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.444: INFO: 	Container metrics-server ready: true, restart count 0
Nov  8 12:14:15.444: INFO: node-exporter-jkkr8 from kube-system started at 2022-11-08 11:56:37 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.444: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:14:15.444: INFO: node-problem-detector-r2gkf from kube-system started at 2022-11-08 11:56:37 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.444: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:14:15.444: INFO: vpn-shoot-56ddcc9878-bj6wb from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:14:15.444: INFO: 	Container vpn-shoot ready: true, restart count 0
Nov  8 12:14:15.444: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-f6s9d from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:14:15.444: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:14:15.444: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to schedule Pod with nonempty NodeSelector.
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.17259afea56c9d7f], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.]
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Nov  8 12:14:16.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-7295" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
â€¢{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]","total":356,"completed":17,"skipped":353,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:14:16.531: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5862
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Service
STEP: watching for the Service to be added
Nov  8 12:14:16.768: INFO: Found Service test-service-fg9ms in namespace services-5862 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Nov  8 12:14:16.768: INFO: Service test-service-fg9ms created
STEP: Getting /status
Nov  8 12:14:16.774: INFO: Service test-service-fg9ms has LoadBalancer: {[]}
STEP: patching the ServiceStatus
STEP: watching for the Service to be patched
Nov  8 12:14:16.784: INFO: observed Service test-service-fg9ms in namespace services-5862 with annotations: map[] & LoadBalancer: {[]}
Nov  8 12:14:16.784: INFO: Found Service test-service-fg9ms in namespace services-5862 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Nov  8 12:14:16.784: INFO: Service test-service-fg9ms has service status patched
STEP: updating the ServiceStatus
Nov  8 12:14:16.796: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated
Nov  8 12:14:16.800: INFO: Observed Service test-service-fg9ms in namespace services-5862 with annotations: map[] & Conditions: {[]}
Nov  8 12:14:16.800: INFO: Observed event: &Service{ObjectMeta:{test-service-fg9ms  services-5862  4b2c41d2-f6e3-41ca-a9ab-54a0c6aa6a4b 6533 0 2022-11-08 12:14:16 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] []  [{e2e.test Update v1 2022-11-08 12:14:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2022-11-08 12:14:16 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.121.222.140,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.121.222.140],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Nov  8 12:14:16.800: INFO: Found Service test-service-fg9ms in namespace services-5862 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Nov  8 12:14:16.800: INFO: Service test-service-fg9ms has service status updated
STEP: patching the service
STEP: watching for the Service to be patched
Nov  8 12:14:16.814: INFO: observed Service test-service-fg9ms in namespace services-5862 with labels: map[test-service-static:true]
Nov  8 12:14:16.814: INFO: observed Service test-service-fg9ms in namespace services-5862 with labels: map[test-service-static:true]
Nov  8 12:14:16.814: INFO: observed Service test-service-fg9ms in namespace services-5862 with labels: map[test-service-static:true]
Nov  8 12:14:16.814: INFO: Found Service test-service-fg9ms in namespace services-5862 with labels: map[test-service:patched test-service-static:true]
Nov  8 12:14:16.815: INFO: Service test-service-fg9ms patched
STEP: deleting the service
STEP: watching for the Service to be deleted
Nov  8 12:14:16.838: INFO: Observed event: ADDED
Nov  8 12:14:16.839: INFO: Observed event: MODIFIED
Nov  8 12:14:16.839: INFO: Observed event: MODIFIED
Nov  8 12:14:16.839: INFO: Observed event: MODIFIED
Nov  8 12:14:16.839: INFO: Found Service test-service-fg9ms in namespace services-5862 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Nov  8 12:14:16.839: INFO: Service test-service-fg9ms deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 12:14:16.839: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5862" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should complete a service status lifecycle [Conformance]","total":356,"completed":18,"skipped":391,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label 
  should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:14:16.857: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-359
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1334
STEP: creating the pod
Nov  8 12:14:16.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-359 create -f -'
Nov  8 12:14:17.212: INFO: stderr: ""
Nov  8 12:14:17.212: INFO: stdout: "pod/pause created\n"
Nov  8 12:14:17.212: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Nov  8 12:14:17.212: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-359" to be "running and ready"
Nov  8 12:14:17.219: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 6.686187ms
Nov  8 12:14:19.231: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.01879294s
Nov  8 12:14:19.231: INFO: Pod "pause" satisfied condition "running and ready"
Nov  8 12:14:19.231: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
STEP: adding the label testing-label with value testing-label-value to a pod
Nov  8 12:14:19.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-359 label pods pause testing-label=testing-label-value'
Nov  8 12:14:19.305: INFO: stderr: ""
Nov  8 12:14:19.305: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value
Nov  8 12:14:19.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-359 get pod pause -L testing-label'
Nov  8 12:14:19.371: INFO: stderr: ""
Nov  8 12:14:19.371: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod
Nov  8 12:14:19.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-359 label pods pause testing-label-'
Nov  8 12:14:19.442: INFO: stderr: ""
Nov  8 12:14:19.442: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label
Nov  8 12:14:19.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-359 get pod pause -L testing-label'
Nov  8 12:14:19.507: INFO: stderr: ""
Nov  8 12:14:19.507: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1340
STEP: using delete to clean up resources
Nov  8 12:14:19.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-359 delete --grace-period=0 --force -f -'
Nov  8 12:14:19.618: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Nov  8 12:14:19.618: INFO: stdout: "pod \"pause\" force deleted\n"
Nov  8 12:14:19.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-359 get rc,svc -l name=pause --no-headers'
Nov  8 12:14:19.692: INFO: stderr: "No resources found in kubectl-359 namespace.\n"
Nov  8 12:14:19.692: INFO: stdout: ""
Nov  8 12:14:19.692: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-359 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Nov  8 12:14:19.748: INFO: stderr: ""
Nov  8 12:14:19.748: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 12:14:19.748: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-359" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]","total":356,"completed":19,"skipped":419,"failed":0}
SSSS
------------------------------
[sig-storage] Secrets 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:14:19.768: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-7455
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-76f28330-e115-4e2f-8136-79ee951b4ba5
STEP: Creating a pod to test consume secrets
Nov  8 12:14:19.924: INFO: Waiting up to 5m0s for pod "pod-secrets-89e727b8-0c2e-43d0-971a-d5170ce744ef" in namespace "secrets-7455" to be "Succeeded or Failed"
Nov  8 12:14:19.930: INFO: Pod "pod-secrets-89e727b8-0c2e-43d0-971a-d5170ce744ef": Phase="Pending", Reason="", readiness=false. Elapsed: 6.430453ms
Nov  8 12:14:21.937: INFO: Pod "pod-secrets-89e727b8-0c2e-43d0-971a-d5170ce744ef": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012851956s
Nov  8 12:14:23.948: INFO: Pod "pod-secrets-89e727b8-0c2e-43d0-971a-d5170ce744ef": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024084279s
STEP: Saw pod success
Nov  8 12:14:23.948: INFO: Pod "pod-secrets-89e727b8-0c2e-43d0-971a-d5170ce744ef" satisfied condition "Succeeded or Failed"
Nov  8 12:14:23.953: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-secrets-89e727b8-0c2e-43d0-971a-d5170ce744ef container secret-volume-test: <nil>
STEP: delete the pod
Nov  8 12:14:23.983: INFO: Waiting for pod pod-secrets-89e727b8-0c2e-43d0-971a-d5170ce744ef to disappear
Nov  8 12:14:23.989: INFO: Pod pod-secrets-89e727b8-0c2e-43d0-971a-d5170ce744ef no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Nov  8 12:14:23.990: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7455" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":20,"skipped":423,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] CronJob 
  should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:14:24.008: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-4102
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Nov  8 12:14:24.160: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Nov  8 12:14:24.168: INFO: starting watch
STEP: patching
STEP: updating
Nov  8 12:14:24.189: INFO: waiting for watch events with expected annotations
Nov  8 12:14:24.189: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Nov  8 12:14:24.244: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-4102" for this suite.
â€¢{"msg":"PASSED [sig-apps] CronJob should support CronJob API operations [Conformance]","total":356,"completed":21,"skipped":431,"failed":0}

------------------------------
[sig-network] DNS 
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:14:24.263: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-4204
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4204 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4204;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4204 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4204;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4204.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4204.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4204.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4204.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4204.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4204.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4204.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4204.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4204.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4204.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4204.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4204.svc;check="$$(dig +notcp +noall +answer +search 113.172.122.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.122.172.113_udp@PTR;check="$$(dig +tcp +noall +answer +search 113.172.122.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.122.172.113_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4204 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4204;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4204 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4204;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4204.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4204.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4204.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4204.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4204.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4204.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4204.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4204.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4204.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4204.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4204.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4204.svc;check="$$(dig +notcp +noall +answer +search 113.172.122.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.122.172.113_udp@PTR;check="$$(dig +tcp +noall +answer +search 113.172.122.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.122.172.113_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Nov  8 12:14:32.543: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.554: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.564: INFO: Unable to read wheezy_udp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.612: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.621: INFO: Unable to read wheezy_udp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.631: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.639: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.648: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.694: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.703: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.711: INFO: Unable to read jessie_udp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.720: INFO: Unable to read jessie_tcp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.730: INFO: Unable to read jessie_udp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.739: INFO: Unable to read jessie_tcp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.749: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.763: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:32.804: INFO: Lookups using dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4204 wheezy_tcp@dns-test-service.dns-4204 wheezy_udp@dns-test-service.dns-4204.svc wheezy_tcp@dns-test-service.dns-4204.svc wheezy_udp@_http._tcp.dns-test-service.dns-4204.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4204.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4204 jessie_tcp@dns-test-service.dns-4204 jessie_udp@dns-test-service.dns-4204.svc jessie_tcp@dns-test-service.dns-4204.svc jessie_udp@_http._tcp.dns-test-service.dns-4204.svc jessie_tcp@_http._tcp.dns-test-service.dns-4204.svc]

Nov  8 12:14:37.815: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:37.824: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:37.872: INFO: Unable to read wheezy_udp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:37.884: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:37.893: INFO: Unable to read wheezy_udp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:37.902: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:37.912: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:37.921: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:37.968: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:37.979: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:37.988: INFO: Unable to read jessie_udp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:37.996: INFO: Unable to read jessie_tcp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:38.006: INFO: Unable to read jessie_udp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:38.014: INFO: Unable to read jessie_tcp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:38.023: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:38.031: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:38.063: INFO: Lookups using dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4204 wheezy_tcp@dns-test-service.dns-4204 wheezy_udp@dns-test-service.dns-4204.svc wheezy_tcp@dns-test-service.dns-4204.svc wheezy_udp@_http._tcp.dns-test-service.dns-4204.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4204.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4204 jessie_tcp@dns-test-service.dns-4204 jessie_udp@dns-test-service.dns-4204.svc jessie_tcp@dns-test-service.dns-4204.svc jessie_udp@_http._tcp.dns-test-service.dns-4204.svc jessie_tcp@_http._tcp.dns-test-service.dns-4204.svc]

Nov  8 12:14:42.815: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:42.824: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:42.833: INFO: Unable to read wheezy_udp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:42.880: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:42.889: INFO: Unable to read wheezy_udp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:42.899: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:42.909: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:42.918: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:42.962: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:42.972: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:42.983: INFO: Unable to read jessie_udp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:42.992: INFO: Unable to read jessie_tcp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:43.001: INFO: Unable to read jessie_udp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:43.011: INFO: Unable to read jessie_tcp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:43.020: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:43.030: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:43.067: INFO: Lookups using dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4204 wheezy_tcp@dns-test-service.dns-4204 wheezy_udp@dns-test-service.dns-4204.svc wheezy_tcp@dns-test-service.dns-4204.svc wheezy_udp@_http._tcp.dns-test-service.dns-4204.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4204.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4204 jessie_tcp@dns-test-service.dns-4204 jessie_udp@dns-test-service.dns-4204.svc jessie_tcp@dns-test-service.dns-4204.svc jessie_udp@_http._tcp.dns-test-service.dns-4204.svc jessie_tcp@_http._tcp.dns-test-service.dns-4204.svc]

Nov  8 12:14:47.817: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:47.831: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:47.840: INFO: Unable to read wheezy_udp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:47.874: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:47.919: INFO: Unable to read wheezy_udp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:47.928: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:47.937: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:47.945: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:47.990: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:47.999: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:48.009: INFO: Unable to read jessie_udp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:48.018: INFO: Unable to read jessie_tcp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:48.030: INFO: Unable to read jessie_udp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:48.076: INFO: Unable to read jessie_tcp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:48.085: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:48.096: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:48.131: INFO: Lookups using dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4204 wheezy_tcp@dns-test-service.dns-4204 wheezy_udp@dns-test-service.dns-4204.svc wheezy_tcp@dns-test-service.dns-4204.svc wheezy_udp@_http._tcp.dns-test-service.dns-4204.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4204.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4204 jessie_tcp@dns-test-service.dns-4204 jessie_udp@dns-test-service.dns-4204.svc jessie_tcp@dns-test-service.dns-4204.svc jessie_udp@_http._tcp.dns-test-service.dns-4204.svc jessie_tcp@_http._tcp.dns-test-service.dns-4204.svc]

Nov  8 12:14:52.816: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:52.826: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:52.835: INFO: Unable to read wheezy_udp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:52.880: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:52.890: INFO: Unable to read wheezy_udp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:52.900: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:52.909: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:52.919: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:52.963: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:52.971: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:52.980: INFO: Unable to read jessie_udp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:52.988: INFO: Unable to read jessie_tcp@dns-test-service.dns-4204 from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:52.996: INFO: Unable to read jessie_udp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:53.009: INFO: Unable to read jessie_tcp@dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:53.019: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:53.028: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:53.071: INFO: Lookups using dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4204 wheezy_tcp@dns-test-service.dns-4204 wheezy_udp@dns-test-service.dns-4204.svc wheezy_tcp@dns-test-service.dns-4204.svc wheezy_udp@_http._tcp.dns-test-service.dns-4204.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4204.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4204 jessie_tcp@dns-test-service.dns-4204 jessie_udp@dns-test-service.dns-4204.svc jessie_tcp@dns-test-service.dns-4204.svc jessie_udp@_http._tcp.dns-test-service.dns-4204.svc jessie_tcp@_http._tcp.dns-test-service.dns-4204.svc]

Nov  8 12:14:57.959: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4204.svc from pod dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1: the server could not find the requested resource (get pods dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1)
Nov  8 12:14:58.114: INFO: Lookups using dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4204.svc]

Nov  8 12:15:03.083: INFO: DNS probes using dns-4204/dns-test-9cc060ca-9558-4dc8-a813-3d3ab7b131c1 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Nov  8 12:15:03.151: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-4204" for this suite.

â€¢ [SLOW TEST:38.906 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]","total":356,"completed":22,"skipped":431,"failed":0}
SSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] 
  should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:15:03.170: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename certificates
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in certificates-3068
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/certificates.k8s.io
STEP: getting /apis/certificates.k8s.io/v1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Nov  8 12:15:03.667: INFO: starting watch
STEP: patching
STEP: updating
Nov  8 12:15:03.688: INFO: waiting for watch events with expected annotations
Nov  8 12:15:03.688: INFO: saw patched and updated annotations
STEP: getting /approval
STEP: patching /approval
STEP: updating /approval
STEP: getting /status
STEP: patching /status
STEP: updating /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:15:03.770: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "certificates-3068" for this suite.
â€¢{"msg":"PASSED [sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]","total":356,"completed":23,"skipped":437,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:15:03.792: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7277
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ConfigMap
STEP: Ensuring resource quota status captures configMap creation
STEP: Deleting a ConfigMap
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Nov  8 12:15:32.005: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7277" for this suite.

â€¢ [SLOW TEST:28.234 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]","total":356,"completed":24,"skipped":471,"failed":0}
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:15:32.026: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-8105
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-8105
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Nov  8 12:15:32.164: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Nov  8 12:15:32.359: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:15:34.371: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:15:36.370: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:15:38.371: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 12:15:40.372: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 12:15:42.370: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 12:15:44.371: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 12:15:46.369: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 12:15:48.381: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 12:15:50.371: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 12:15:52.367: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 12:15:54.370: INFO: The status of Pod netserver-0 is Running (Ready = true)
Nov  8 12:15:54.381: INFO: The status of Pod netserver-1 is Running (Ready = true)
Nov  8 12:15:54.391: INFO: The status of Pod netserver-2 is Running (Ready = true)
Nov  8 12:15:54.402: INFO: The status of Pod netserver-3 is Running (Ready = true)
STEP: Creating test pods
Nov  8 12:15:56.435: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
Nov  8 12:15:56.435: INFO: Breadth first check of 10.96.3.219 on host 10.250.3.16...
Nov  8 12:15:56.439: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.96.1.245:9080/dial?request=hostname&protocol=http&host=10.96.3.219&port=8083&tries=1'] Namespace:pod-network-test-8105 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 12:15:56.440: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:15:56.440: INFO: ExecWithOptions: Clientset creation
Nov  8 12:15:56.440: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-8105/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.96.1.245%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.96.3.219%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Nov  8 12:15:56.801: INFO: Waiting for responses: map[]
Nov  8 12:15:56.801: INFO: reached 10.96.3.219 after 0/1 tries
Nov  8 12:15:56.801: INFO: Breadth first check of 10.96.2.117 on host 10.250.2.17...
Nov  8 12:15:56.807: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.96.1.245:9080/dial?request=hostname&protocol=http&host=10.96.2.117&port=8083&tries=1'] Namespace:pod-network-test-8105 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 12:15:56.807: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:15:56.808: INFO: ExecWithOptions: Clientset creation
Nov  8 12:15:56.808: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-8105/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.96.1.245%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.96.2.117%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Nov  8 12:15:57.137: INFO: Waiting for responses: map[]
Nov  8 12:15:57.137: INFO: reached 10.96.2.117 after 0/1 tries
Nov  8 12:15:57.137: INFO: Breadth first check of 10.96.0.141 on host 10.250.2.170...
Nov  8 12:15:57.144: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.96.1.245:9080/dial?request=hostname&protocol=http&host=10.96.0.141&port=8083&tries=1'] Namespace:pod-network-test-8105 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 12:15:57.144: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:15:57.144: INFO: ExecWithOptions: Clientset creation
Nov  8 12:15:57.144: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-8105/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.96.1.245%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.96.0.141%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Nov  8 12:15:57.494: INFO: Waiting for responses: map[]
Nov  8 12:15:57.494: INFO: reached 10.96.0.141 after 0/1 tries
Nov  8 12:15:57.494: INFO: Breadth first check of 10.96.1.16 on host 10.250.2.53...
Nov  8 12:15:57.501: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.96.1.245:9080/dial?request=hostname&protocol=http&host=10.96.1.16&port=8083&tries=1'] Namespace:pod-network-test-8105 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 12:15:57.501: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:15:57.502: INFO: ExecWithOptions: Clientset creation
Nov  8 12:15:57.502: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-8105/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.96.1.245%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.96.1.16%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Nov  8 12:15:57.834: INFO: Waiting for responses: map[]
Nov  8 12:15:57.834: INFO: reached 10.96.1.16 after 0/1 tries
Nov  8 12:15:57.834: INFO: Going to retry 0 out of 4 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Nov  8 12:15:57.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-8105" for this suite.

â€¢ [SLOW TEST:25.828 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]","total":356,"completed":25,"skipped":476,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits 
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:15:57.855: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-7415
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpa': should get the expected 'State'
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpof': should get the expected 'State'
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpn': should get the expected 'State'
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance]
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Nov  8 12:16:23.467: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-7415" for this suite.

â€¢ [SLOW TEST:25.640 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    when starting a container that exits
    test/e2e/common/node/runtime.go:44
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]","total":356,"completed":26,"skipped":490,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:16:23.495: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-1529
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Updating PodDisruptionBudget status
STEP: Waiting for all pods to be running
Nov  8 12:16:23.663: INFO: running pods: 0 < 1
STEP: locating a running pod
STEP: Waiting for the pdb to be processed
STEP: Patching PodDisruptionBudget status
STEP: Waiting for the pdb to be processed
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Nov  8 12:16:25.718: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-1529" for this suite.
â€¢{"msg":"PASSED [sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]","total":356,"completed":27,"skipped":523,"failed":0}
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints 
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:16:25.739: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-6592
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Nov  8 12:16:25.889: INFO: Waiting up to 1m0s for all nodes to be ready
Nov  8 12:17:25.955: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:17:25.961: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-4396
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:690
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:17:26.119: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: Value: Forbidden: may not be changed in an update.
Nov  8 12:17:26.124: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: Value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/framework.go:188
Nov  8 12:17:26.147: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-4396" for this suite.
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:706
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Nov  8 12:17:26.176: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-6592" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

â€¢ [SLOW TEST:60.517 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:683
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]","total":356,"completed":28,"skipped":525,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:17:26.257: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8958
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on node default medium
Nov  8 12:17:26.405: INFO: Waiting up to 5m0s for pod "pod-91cb2aa3-bc6c-4260-a8f2-4a3b5630978d" in namespace "emptydir-8958" to be "Succeeded or Failed"
Nov  8 12:17:26.415: INFO: Pod "pod-91cb2aa3-bc6c-4260-a8f2-4a3b5630978d": Phase="Pending", Reason="", readiness=false. Elapsed: 9.958259ms
Nov  8 12:17:28.429: INFO: Pod "pod-91cb2aa3-bc6c-4260-a8f2-4a3b5630978d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024183752s
Nov  8 12:17:30.441: INFO: Pod "pod-91cb2aa3-bc6c-4260-a8f2-4a3b5630978d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.035853547s
STEP: Saw pod success
Nov  8 12:17:30.441: INFO: Pod "pod-91cb2aa3-bc6c-4260-a8f2-4a3b5630978d" satisfied condition "Succeeded or Failed"
Nov  8 12:17:30.445: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-91cb2aa3-bc6c-4260-a8f2-4a3b5630978d container test-container: <nil>
STEP: delete the pod
Nov  8 12:17:30.480: INFO: Waiting for pod pod-91cb2aa3-bc6c-4260-a8f2-4a3b5630978d to disappear
Nov  8 12:17:30.484: INFO: Pod pod-91cb2aa3-bc6c-4260-a8f2-4a3b5630978d no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 12:17:30.484: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8958" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":29,"skipped":533,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:17:30.504: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8352
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:17:31.393: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:17:34.436: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:17:34.445: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7510-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:17:37.751: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8352" for this suite.
STEP: Destroying namespace "webhook-8352-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:7.401 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]","total":356,"completed":30,"skipped":552,"failed":0}
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:17:37.907: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3754
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:17:38.771: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:17:41.877: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod that should be denied by the webhook
STEP: create a pod that causes the webhook to hang
STEP: create a configmap that should be denied by the webhook
STEP: create a configmap that should be admitted by the webhook
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: create a namespace that bypass the webhook
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:17:52.367: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3754" for this suite.
STEP: Destroying namespace "webhook-3754-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:14.544 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]","total":356,"completed":31,"skipped":556,"failed":0}
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:17:52.451: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7355
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:17:53.077: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:17:56.120: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod
STEP: 'kubectl attach' the pod, should be denied by the webhook
Nov  8 12:17:58.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=webhook-7355 attach --namespace=webhook-7355 to-be-attached-pod -i -c=container1'
Nov  8 12:17:58.375: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:17:58.383: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7355" for this suite.
STEP: Destroying namespace "webhook-7355-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:6.013 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]","total":356,"completed":32,"skipped":558,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:17:58.465: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-2504
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Nov  8 12:17:58.618: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Nov  8 12:17:58.640: INFO: Waiting for terminating namespaces to be deleted...
Nov  8 12:17:58.645: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm before test
Nov  8 12:17:58.677: INFO: apiserver-proxy-b2tpk from kube-system started at 2022-11-08 12:05:58 +0000 UTC (2 container statuses recorded)
Nov  8 12:17:58.677: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:17:58.677: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:17:58.677: INFO: cilium-c6w8t from kube-system started at 2022-11-08 12:05:58 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.677: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:17:58.677: INFO: csi-driver-node-qgnwd from kube-system started at 2022-11-08 12:05:58 +0000 UTC (3 container statuses recorded)
Nov  8 12:17:58.677: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:17:58.677: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:17:58.677: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:17:58.677: INFO: kube-proxy-worker-als7z-v1.24.7-d8gkj from kube-system started at 2022-11-08 12:05:58 +0000 UTC (2 container statuses recorded)
Nov  8 12:17:58.677: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:17:58.677: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:17:58.677: INFO: node-exporter-4ff28 from kube-system started at 2022-11-08 12:05:58 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.677: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:17:58.677: INFO: node-problem-detector-v668n from kube-system started at 2022-11-08 12:05:58 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.677: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:17:58.677: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-5ppr7 from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:17:58.677: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:17:58.677: INFO: 	Container systemd-logs ready: true, restart count 0
Nov  8 12:17:58.677: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z before test
Nov  8 12:17:58.712: INFO: apiserver-proxy-wcz5q from kube-system started at 2022-11-08 12:05:57 +0000 UTC (2 container statuses recorded)
Nov  8 12:17:58.712: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:17:58.712: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:17:58.712: INFO: cilium-p8wkv from kube-system started at 2022-11-08 12:05:57 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.712: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:17:58.712: INFO: csi-driver-node-z4gvc from kube-system started at 2022-11-08 12:05:57 +0000 UTC (3 container statuses recorded)
Nov  8 12:17:58.712: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:17:58.712: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:17:58.712: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:17:58.712: INFO: kube-proxy-worker-als7z-v1.24.7-bqnlf from kube-system started at 2022-11-08 12:05:57 +0000 UTC (2 container statuses recorded)
Nov  8 12:17:58.712: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:17:58.712: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:17:58.713: INFO: node-exporter-vsvv9 from kube-system started at 2022-11-08 12:05:57 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.713: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:17:58.713: INFO: node-problem-detector-cttk5 from kube-system started at 2022-11-08 12:05:57 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.713: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:17:58.713: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-grsjl from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:17:58.713: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:17:58.713: INFO: 	Container systemd-logs ready: true, restart count 0
Nov  8 12:17:58.713: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc before test
Nov  8 12:17:58.746: INFO: apiserver-proxy-lbkkq from kube-system started at 2022-11-08 11:56:30 +0000 UTC (2 container statuses recorded)
Nov  8 12:17:58.746: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:17:58.746: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:17:58.746: INFO: blackbox-exporter-7c445d84b4-p9b7s from kube-system started at 2022-11-08 11:56:40 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.746: INFO: 	Container blackbox-exporter ready: true, restart count 0
Nov  8 12:17:58.746: INFO: blackbox-exporter-7c445d84b4-r2cn2 from kube-system started at 2022-11-08 11:56:40 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.746: INFO: 	Container blackbox-exporter ready: true, restart count 0
Nov  8 12:17:58.746: INFO: cilium-ntlkq from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.746: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:17:58.746: INFO: cilium-operator-fb5f68d45-hf2vx from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.746: INFO: 	Container cilium-operator ready: true, restart count 0
Nov  8 12:17:58.746: INFO: csi-driver-node-tbftn from kube-system started at 2022-11-08 11:56:30 +0000 UTC (3 container statuses recorded)
Nov  8 12:17:58.746: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:17:58.746: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:17:58.746: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:17:58.746: INFO: kube-proxy-worker-ld4ha-v1.24.7-j8gzf from kube-system started at 2022-11-08 11:56:40 +0000 UTC (2 container statuses recorded)
Nov  8 12:17:58.746: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:17:58.746: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:17:58.746: INFO: node-exporter-69tsx from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.746: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:17:58.746: INFO: node-problem-detector-74vkx from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.746: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:17:58.746: INFO: sonobuoy from sonobuoy started at 2022-11-08 12:11:02 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.746: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Nov  8 12:17:58.746: INFO: sonobuoy-e2e-job-a84be4cdb9164430 from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:17:58.746: INFO: 	Container e2e ready: true, restart count 0
Nov  8 12:17:58.746: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:17:58.746: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-l25mf from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:17:58.746: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:17:58.746: INFO: 	Container systemd-logs ready: true, restart count 0
Nov  8 12:17:58.746: INFO: to-be-attached-pod from webhook-7355 started at 2022-11-08 12:17:56 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.746: INFO: 	Container container1 ready: true, restart count 0
Nov  8 12:17:58.746: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw before test
Nov  8 12:17:58.780: INFO: apiserver-proxy-67kl9 from kube-system started at 2022-11-08 11:56:37 +0000 UTC (2 container statuses recorded)
Nov  8 12:17:58.780: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:17:58.780: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:17:58.780: INFO: cilium-427j9 from kube-system started at 2022-11-08 11:56:37 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.780: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:17:58.780: INFO: coredns-8686744dd4-5fk2d from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.780: INFO: 	Container coredns ready: true, restart count 0
Nov  8 12:17:58.780: INFO: coredns-8686744dd4-tpzbm from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.780: INFO: 	Container coredns ready: true, restart count 0
Nov  8 12:17:58.780: INFO: csi-driver-node-8zqbd from kube-system started at 2022-11-08 11:56:37 +0000 UTC (3 container statuses recorded)
Nov  8 12:17:58.780: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:17:58.780: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:17:58.780: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:17:58.780: INFO: kube-proxy-worker-ld4ha-v1.24.7-tzm8r from kube-system started at 2022-11-08 11:56:46 +0000 UTC (2 container statuses recorded)
Nov  8 12:17:58.781: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:17:58.781: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:17:58.781: INFO: metrics-server-848ccfb6d4-9cgtc from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.781: INFO: 	Container metrics-server ready: true, restart count 0
Nov  8 12:17:58.781: INFO: node-exporter-jkkr8 from kube-system started at 2022-11-08 11:56:37 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.781: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:17:58.781: INFO: node-problem-detector-r2gkf from kube-system started at 2022-11-08 11:56:37 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.781: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:17:58.781: INFO: vpn-shoot-56ddcc9878-bj6wb from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:17:58.781: INFO: 	Container vpn-shoot ready: true, restart count 0
Nov  8 12:17:58.781: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-f6s9d from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:17:58.781: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:17:58.781: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-ab6953ce-038f-408b-b956-ebe676b7a50f 42
STEP: Trying to relaunch the pod, now with labels.
STEP: removing the label kubernetes.io/e2e-ab6953ce-038f-408b-b956-ebe676b7a50f off the node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
STEP: verifying the node doesn't have the label kubernetes.io/e2e-ab6953ce-038f-408b-b956-ebe676b7a50f
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Nov  8 12:18:04.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-2504" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

â€¢ [SLOW TEST:6.455 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]","total":356,"completed":33,"skipped":577,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:18:04.920: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-6124
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-9dd2b860-f240-49fc-b209-c0a1daabf882 in namespace container-probe-6124
Nov  8 12:18:07.095: INFO: Started pod liveness-9dd2b860-f240-49fc-b209-c0a1daabf882 in namespace container-probe-6124
STEP: checking the pod's current state and verifying that restartCount is present
Nov  8 12:18:07.100: INFO: Initial restart count of pod liveness-9dd2b860-f240-49fc-b209-c0a1daabf882 is 0
Nov  8 12:18:27.277: INFO: Restart count of pod container-probe-6124/liveness-9dd2b860-f240-49fc-b209-c0a1daabf882 is now 1 (20.177299845s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Nov  8 12:18:27.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6124" for this suite.

â€¢ [SLOW TEST:22.387 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":34,"skipped":594,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:18:27.306: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-2165
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Nov  8 12:18:27.521: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:18:29.531: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Nov  8 12:18:29.601: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:18:31.608: INFO: The status of Pod pod-with-prestop-exec-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Nov  8 12:18:31.624: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Nov  8 12:18:31.630: INFO: Pod pod-with-prestop-exec-hook still exists
Nov  8 12:18:33.630: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Nov  8 12:18:33.640: INFO: Pod pod-with-prestop-exec-hook still exists
Nov  8 12:18:35.630: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Nov  8 12:18:35.638: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Nov  8 12:18:35.660: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-2165" for this suite.

â€¢ [SLOW TEST:8.371 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]","total":356,"completed":35,"skipped":605,"failed":0}
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem 
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:18:35.678: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-1257
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:18:35.828: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-f24902fe-c2e9-4794-846b-ed5e102964e0" in namespace "security-context-test-1257" to be "Succeeded or Failed"
Nov  8 12:18:35.834: INFO: Pod "busybox-readonly-false-f24902fe-c2e9-4794-846b-ed5e102964e0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.3471ms
Nov  8 12:18:37.845: INFO: Pod "busybox-readonly-false-f24902fe-c2e9-4794-846b-ed5e102964e0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017441433s
Nov  8 12:18:39.857: INFO: Pod "busybox-readonly-false-f24902fe-c2e9-4794-846b-ed5e102964e0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028991417s
Nov  8 12:18:39.857: INFO: Pod "busybox-readonly-false-f24902fe-c2e9-4794-846b-ed5e102964e0" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Nov  8 12:18:39.857: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-1257" for this suite.
â€¢{"msg":"PASSED [sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]","total":356,"completed":36,"skipped":605,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:18:39.878: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8857
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-3ded6555-ec89-486c-abf4-3ae02370ae2b
STEP: Creating a pod to test consume configMaps
Nov  8 12:18:40.033: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-13a3633e-fe59-4c7c-8eb2-c0a0641b0513" in namespace "projected-8857" to be "Succeeded or Failed"
Nov  8 12:18:40.041: INFO: Pod "pod-projected-configmaps-13a3633e-fe59-4c7c-8eb2-c0a0641b0513": Phase="Pending", Reason="", readiness=false. Elapsed: 7.267065ms
Nov  8 12:18:42.048: INFO: Pod "pod-projected-configmaps-13a3633e-fe59-4c7c-8eb2-c0a0641b0513": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014931553s
Nov  8 12:18:44.061: INFO: Pod "pod-projected-configmaps-13a3633e-fe59-4c7c-8eb2-c0a0641b0513": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027813998s
STEP: Saw pod success
Nov  8 12:18:44.061: INFO: Pod "pod-projected-configmaps-13a3633e-fe59-4c7c-8eb2-c0a0641b0513" satisfied condition "Succeeded or Failed"
Nov  8 12:18:44.068: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-projected-configmaps-13a3633e-fe59-4c7c-8eb2-c0a0641b0513 container projected-configmap-volume-test: <nil>
STEP: delete the pod
Nov  8 12:18:44.100: INFO: Waiting for pod pod-projected-configmaps-13a3633e-fe59-4c7c-8eb2-c0a0641b0513 to disappear
Nov  8 12:18:44.106: INFO: Pod pod-projected-configmaps-13a3633e-fe59-4c7c-8eb2-c0a0641b0513 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Nov  8 12:18:44.106: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8857" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":37,"skipped":648,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:18:44.125: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8386
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Nov  8 12:18:44.277: INFO: Waiting up to 5m0s for pod "pod-e804b990-6aac-41a8-bac6-67abf6bb9aed" in namespace "emptydir-8386" to be "Succeeded or Failed"
Nov  8 12:18:44.282: INFO: Pod "pod-e804b990-6aac-41a8-bac6-67abf6bb9aed": Phase="Pending", Reason="", readiness=false. Elapsed: 5.227654ms
Nov  8 12:18:46.293: INFO: Pod "pod-e804b990-6aac-41a8-bac6-67abf6bb9aed": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016394419s
Nov  8 12:18:48.313: INFO: Pod "pod-e804b990-6aac-41a8-bac6-67abf6bb9aed": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.036119136s
STEP: Saw pod success
Nov  8 12:18:48.313: INFO: Pod "pod-e804b990-6aac-41a8-bac6-67abf6bb9aed" satisfied condition "Succeeded or Failed"
Nov  8 12:18:48.322: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-e804b990-6aac-41a8-bac6-67abf6bb9aed container test-container: <nil>
STEP: delete the pod
Nov  8 12:18:48.351: INFO: Waiting for pod pod-e804b990-6aac-41a8-bac6-67abf6bb9aed to disappear
Nov  8 12:18:48.355: INFO: Pod pod-e804b990-6aac-41a8-bac6-67abf6bb9aed no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 12:18:48.355: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8386" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":38,"skipped":685,"failed":0}

------------------------------
[sig-network] Services 
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:18:48.373: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-2309
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-2309
Nov  8 12:18:48.530: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:18:50.543: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Nov  8 12:18:50.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-2309 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Nov  8 12:18:50.926: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Nov  8 12:18:50.926: INFO: stdout: "iptables"
Nov  8 12:18:50.926: INFO: proxyMode: iptables
Nov  8 12:18:50.939: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Nov  8 12:18:50.944: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-nodeport-timeout in namespace services-2309
STEP: creating replication controller affinity-nodeport-timeout in namespace services-2309
I1108 12:18:50.983039      22 runners.go:193] Created replication controller with name: affinity-nodeport-timeout, namespace: services-2309, replica count: 3
I1108 12:18:54.034061      22 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Nov  8 12:18:54.060: INFO: Creating new exec pod
Nov  8 12:18:57.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-2309 exec execpod-affinity5qq8p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-timeout 80'
Nov  8 12:18:57.401: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-timeout 80\nConnection to affinity-nodeport-timeout 80 port [tcp/http] succeeded!\n"
Nov  8 12:18:57.401: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:18:57.401: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-2309 exec execpod-affinity5qq8p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.118.14.49 80'
Nov  8 12:18:57.767: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.118.14.49 80\nConnection to 10.118.14.49 80 port [tcp/http] succeeded!\n"
Nov  8 12:18:57.767: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:18:57.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-2309 exec execpod-affinity5qq8p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.170 31425'
Nov  8 12:18:58.129: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 10.250.2.170 31425\nConnection to 10.250.2.170 31425 port [tcp/*] succeeded!\n"
Nov  8 12:18:58.129: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:18:58.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-2309 exec execpod-affinity5qq8p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.17 31425'
Nov  8 12:18:58.473: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.17 31425\nConnection to 10.250.2.17 31425 port [tcp/*] succeeded!\n"
Nov  8 12:18:58.473: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:18:58.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-2309 exec execpod-affinity5qq8p -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.250.3.16:31425/ ; done'
Nov  8 12:18:58.932: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n"
Nov  8 12:18:58.932: INFO: stdout: "\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt\naffinity-nodeport-timeout-mjnrt"
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Received response from host: affinity-nodeport-timeout-mjnrt
Nov  8 12:18:58.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-2309 exec execpod-affinity5qq8p -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.250.3.16:31425/'
Nov  8 12:18:59.363: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n"
Nov  8 12:18:59.363: INFO: stdout: "affinity-nodeport-timeout-mjnrt"
Nov  8 12:19:19.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-2309 exec execpod-affinity5qq8p -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.250.3.16:31425/'
Nov  8 12:19:19.751: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n"
Nov  8 12:19:19.751: INFO: stdout: "affinity-nodeport-timeout-mjnrt"
Nov  8 12:19:39.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-2309 exec execpod-affinity5qq8p -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.250.3.16:31425/'
Nov  8 12:19:40.102: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.250.3.16:31425/\n"
Nov  8 12:19:40.102: INFO: stdout: "affinity-nodeport-timeout-95f2p"
Nov  8 12:19:40.102: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-timeout in namespace services-2309, will wait for the garbage collector to delete the pods
Nov  8 12:19:40.186: INFO: Deleting ReplicationController affinity-nodeport-timeout took: 7.475149ms
Nov  8 12:19:40.287: INFO: Terminating ReplicationController affinity-nodeport-timeout pods took: 100.24647ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 12:19:42.423: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2309" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:54.067 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":39,"skipped":685,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:19:42.442: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5106
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 12:19:42.591: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6ab61bef-ca70-4337-8729-ebf01cbbb2e0" in namespace "projected-5106" to be "Succeeded or Failed"
Nov  8 12:19:42.597: INFO: Pod "downwardapi-volume-6ab61bef-ca70-4337-8729-ebf01cbbb2e0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.239546ms
Nov  8 12:19:44.610: INFO: Pod "downwardapi-volume-6ab61bef-ca70-4337-8729-ebf01cbbb2e0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018844414s
Nov  8 12:19:46.616: INFO: Pod "downwardapi-volume-6ab61bef-ca70-4337-8729-ebf01cbbb2e0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025462845s
STEP: Saw pod success
Nov  8 12:19:46.617: INFO: Pod "downwardapi-volume-6ab61bef-ca70-4337-8729-ebf01cbbb2e0" satisfied condition "Succeeded or Failed"
Nov  8 12:19:46.621: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downwardapi-volume-6ab61bef-ca70-4337-8729-ebf01cbbb2e0 container client-container: <nil>
STEP: delete the pod
Nov  8 12:19:46.645: INFO: Waiting for pod downwardapi-volume-6ab61bef-ca70-4337-8729-ebf01cbbb2e0 to disappear
Nov  8 12:19:46.649: INFO: Pod downwardapi-volume-6ab61bef-ca70-4337-8729-ebf01cbbb2e0 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Nov  8 12:19:46.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5106" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":40,"skipped":699,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:19:46.666: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9965
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 12:19:46.844: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9965" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]","total":356,"completed":41,"skipped":707,"failed":0}
SSS
------------------------------
[sig-apps] Deployment 
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:19:46.862: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-4434
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
STEP: waiting for Deployment to be created
STEP: waiting for all Replicas to be Ready
Nov  8 12:19:47.025: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Nov  8 12:19:47.025: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Nov  8 12:19:47.025: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Nov  8 12:19:47.025: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Nov  8 12:19:47.032: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Nov  8 12:19:47.032: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Nov  8 12:19:47.051: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Nov  8 12:19:47.051: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Nov  8 12:19:48.110: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Nov  8 12:19:48.110: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Nov  8 12:19:48.291: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment
Nov  8 12:19:48.309: INFO: observed event type ADDED
STEP: waiting for Replicas to scale
Nov  8 12:19:48.313: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0
Nov  8 12:19:48.313: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0
Nov  8 12:19:48.313: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0
Nov  8 12:19:48.314: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0
Nov  8 12:19:48.314: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0
Nov  8 12:19:48.314: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0
Nov  8 12:19:48.314: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0
Nov  8 12:19:48.314: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 0
Nov  8 12:19:48.314: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1
Nov  8 12:19:48.314: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1
Nov  8 12:19:48.314: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:48.314: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:48.314: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:48.314: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:48.315: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:48.315: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:48.331: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:48.331: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:48.342: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1
Nov  8 12:19:48.342: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1
Nov  8 12:19:48.349: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1
Nov  8 12:19:48.349: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1
Nov  8 12:19:50.128: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:50.128: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:50.145: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1
STEP: listing Deployments
Nov  8 12:19:50.156: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment
Nov  8 12:19:50.171: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1
STEP: fetching the DeploymentStatus
Nov  8 12:19:50.190: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Nov  8 12:19:50.190: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Nov  8 12:19:50.226: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Nov  8 12:19:50.238: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Nov  8 12:19:50.245: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Nov  8 12:19:51.347: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Nov  8 12:19:51.362: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Nov  8 12:19:51.367: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Nov  8 12:19:51.375: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Nov  8 12:19:51.388: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Nov  8 12:19:53.141: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus
STEP: fetching the DeploymentStatus
Nov  8 12:19:53.172: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1
Nov  8 12:19:53.172: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1
Nov  8 12:19:53.172: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1
Nov  8 12:19:53.173: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1
Nov  8 12:19:53.173: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 1
Nov  8 12:19:53.173: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:53.173: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:53.173: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:53.173: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:53.173: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 2
Nov  8 12:19:53.173: INFO: observed Deployment test-deployment in namespace deployment-4434 with ReadyReplicas 3
STEP: deleting the Deployment
Nov  8 12:19:53.190: INFO: observed event type MODIFIED
Nov  8 12:19:53.190: INFO: observed event type MODIFIED
Nov  8 12:19:53.190: INFO: observed event type MODIFIED
Nov  8 12:19:53.190: INFO: observed event type MODIFIED
Nov  8 12:19:53.190: INFO: observed event type MODIFIED
Nov  8 12:19:53.191: INFO: observed event type MODIFIED
Nov  8 12:19:53.191: INFO: observed event type MODIFIED
Nov  8 12:19:53.191: INFO: observed event type MODIFIED
Nov  8 12:19:53.191: INFO: observed event type MODIFIED
Nov  8 12:19:53.191: INFO: observed event type MODIFIED
Nov  8 12:19:53.191: INFO: observed event type MODIFIED
Nov  8 12:19:53.191: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Nov  8 12:19:53.198: INFO: Log out all the ReplicaSets if there is no deployment created
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Nov  8 12:19:53.206: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-4434" for this suite.

â€¢ [SLOW TEST:6.366 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]","total":356,"completed":42,"skipped":710,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application 
  should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:19:53.228: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8865
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating all guestbook components
Nov  8 12:19:53.420: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Nov  8 12:19:53.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8865 create -f -'
Nov  8 12:19:54.281: INFO: stderr: ""
Nov  8 12:19:54.281: INFO: stdout: "service/agnhost-replica created\n"
Nov  8 12:19:54.281: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Nov  8 12:19:54.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8865 create -f -'
Nov  8 12:19:55.110: INFO: stderr: ""
Nov  8 12:19:55.110: INFO: stdout: "service/agnhost-primary created\n"
Nov  8 12:19:55.110: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Nov  8 12:19:55.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8865 create -f -'
Nov  8 12:19:55.370: INFO: stderr: ""
Nov  8 12:19:55.370: INFO: stdout: "service/frontend created\n"
Nov  8 12:19:55.371: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Nov  8 12:19:55.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8865 create -f -'
Nov  8 12:19:55.564: INFO: stderr: ""
Nov  8 12:19:55.564: INFO: stdout: "deployment.apps/frontend created\n"
Nov  8 12:19:55.565: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Nov  8 12:19:55.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8865 create -f -'
Nov  8 12:19:55.738: INFO: stderr: ""
Nov  8 12:19:55.738: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Nov  8 12:19:55.738: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Nov  8 12:19:55.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8865 create -f -'
Nov  8 12:19:55.978: INFO: stderr: ""
Nov  8 12:19:55.978: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app
Nov  8 12:19:55.978: INFO: Waiting for all frontend pods to be Running.
Nov  8 12:20:01.030: INFO: Waiting for frontend to serve content.
Nov  8 12:20:01.097: INFO: Trying to add a new entry to the guestbook.
Nov  8 12:20:01.112: INFO: Verifying that added entry can be retrieved.
Nov  8 12:20:01.129: INFO: Failed to get response from guestbook. err: <nil>, response: {"data":""}
STEP: using delete to clean up resources
Nov  8 12:20:06.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8865 delete --grace-period=0 --force -f -'
Nov  8 12:20:06.262: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Nov  8 12:20:06.262: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources
Nov  8 12:20:06.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8865 delete --grace-period=0 --force -f -'
Nov  8 12:20:06.363: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Nov  8 12:20:06.363: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Nov  8 12:20:06.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8865 delete --grace-period=0 --force -f -'
Nov  8 12:20:06.458: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Nov  8 12:20:06.458: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Nov  8 12:20:06.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8865 delete --grace-period=0 --force -f -'
Nov  8 12:20:06.527: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Nov  8 12:20:06.527: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Nov  8 12:20:06.527: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8865 delete --grace-period=0 --force -f -'
Nov  8 12:20:06.601: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Nov  8 12:20:06.601: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Nov  8 12:20:06.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8865 delete --grace-period=0 --force -f -'
Nov  8 12:20:06.676: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Nov  8 12:20:06.676: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 12:20:06.676: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8865" for this suite.

â€¢ [SLOW TEST:13.476 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:340
    should create and stop a working application  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]","total":356,"completed":43,"skipped":732,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:20:06.704: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5234
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-5234
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Nov  8 12:20:06.868: INFO: Found 0 stateful pods, waiting for 3
Nov  8 12:20:16.878: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Nov  8 12:20:16.878: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Nov  8 12:20:16.878: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Nov  8 12:20:16.919: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Not applying an update when the partition is greater than the number of replicas
STEP: Performing a canary update
Nov  8 12:20:26.966: INFO: Updating stateful set ss2
Nov  8 12:20:26.979: INFO: Waiting for Pod statefulset-5234/ss2-2 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
STEP: Restoring Pods to the correct revision when they are deleted
Nov  8 12:20:37.043: INFO: Found 2 stateful pods, waiting for 3
Nov  8 12:20:47.053: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Nov  8 12:20:47.053: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Nov  8 12:20:47.053: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update
Nov  8 12:20:47.086: INFO: Updating stateful set ss2
Nov  8 12:20:47.101: INFO: Waiting for Pod statefulset-5234/ss2-1 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
Nov  8 12:20:57.138: INFO: Updating stateful set ss2
Nov  8 12:20:57.149: INFO: Waiting for StatefulSet statefulset-5234/ss2 to complete update
Nov  8 12:20:57.149: INFO: Waiting for Pod statefulset-5234/ss2-0 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Nov  8 12:21:07.163: INFO: Deleting all statefulset in ns statefulset-5234
Nov  8 12:21:07.168: INFO: Scaling statefulset ss2 to 0
Nov  8 12:21:17.192: INFO: Waiting for statefulset status.replicas updated to 0
Nov  8 12:21:17.196: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Nov  8 12:21:17.212: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5234" for this suite.

â€¢ [SLOW TEST:70.526 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]","total":356,"completed":44,"skipped":748,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:21:17.231: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-86
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:21:17.379: INFO: Pod name rollover-pod: Found 0 pods out of 1
Nov  8 12:21:22.386: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Nov  8 12:21:22.386: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Nov  8 12:21:24.397: INFO: Creating deployment "test-rollover-deployment"
Nov  8 12:21:24.411: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Nov  8 12:21:26.430: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Nov  8 12:21:26.440: INFO: Ensure that both replica sets have 1 created replica
Nov  8 12:21:26.449: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Nov  8 12:21:26.461: INFO: Updating deployment test-rollover-deployment
Nov  8 12:21:26.461: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Nov  8 12:21:28.476: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Nov  8 12:21:28.489: INFO: Make sure deployment "test-rollover-deployment" is complete
Nov  8 12:21:28.507: INFO: all replica sets need to contain the pod-template-hash label
Nov  8 12:21:28.507: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 21, 28, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Nov  8 12:21:30.524: INFO: all replica sets need to contain the pod-template-hash label
Nov  8 12:21:30.524: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 21, 28, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Nov  8 12:21:32.522: INFO: all replica sets need to contain the pod-template-hash label
Nov  8 12:21:32.522: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 21, 28, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Nov  8 12:21:34.523: INFO: all replica sets need to contain the pod-template-hash label
Nov  8 12:21:34.523: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 21, 28, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Nov  8 12:21:36.525: INFO: all replica sets need to contain the pod-template-hash label
Nov  8 12:21:36.525: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 21, 28, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 21, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Nov  8 12:21:38.530: INFO: 
Nov  8 12:21:38.530: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Nov  8 12:21:38.545: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-86  eee5b9f4-ff3a-46f5-93e8-3cdb97f4fc08 9972 2 2022-11-08 12:21:24 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-11-08 12:21:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 12:21:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00476d718 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-11-08 12:21:24 +0000 UTC,LastTransitionTime:2022-11-08 12:21:24 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-779c67f4f8" has successfully progressed.,LastUpdateTime:2022-11-08 12:21:38 +0000 UTC,LastTransitionTime:2022-11-08 12:21:24 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Nov  8 12:21:38.551: INFO: New ReplicaSet "test-rollover-deployment-779c67f4f8" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-779c67f4f8  deployment-86  bcbf2348-ce2a-4618-b35b-3ed95ff8cd30 9964 2 2022-11-08 12:21:26 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment eee5b9f4-ff3a-46f5-93e8-3cdb97f4fc08 0xc002ff8377 0xc002ff8378}] []  [{kube-controller-manager Update apps/v1 2022-11-08 12:21:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"eee5b9f4-ff3a-46f5-93e8-3cdb97f4fc08\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 12:21:38 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 779c67f4f8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002ff8428 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Nov  8 12:21:38.551: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Nov  8 12:21:38.551: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-86  83d25814-563f-497a-8170-64610d6ad17c 9970 2 2022-11-08 12:21:17 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment eee5b9f4-ff3a-46f5-93e8-3cdb97f4fc08 0xc002ff824f 0xc002ff8260}] []  [{e2e.test Update apps/v1 2022-11-08 12:21:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 12:21:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"eee5b9f4-ff3a-46f5-93e8-3cdb97f4fc08\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-11-08 12:21:38 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc002ff8318 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Nov  8 12:21:38.552: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-87f8f6dcf  deployment-86  3cc603d0-7c49-4302-9d9f-765f55cf3665 9897 2 2022-11-08 12:21:24 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment eee5b9f4-ff3a-46f5-93e8-3cdb97f4fc08 0xc002ff8480 0xc002ff8481}] []  [{kube-controller-manager Update apps/v1 2022-11-08 12:21:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"eee5b9f4-ff3a-46f5-93e8-3cdb97f4fc08\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 12:21:26 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 87f8f6dcf,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[] [] []  []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002ff8528 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Nov  8 12:21:38.558: INFO: Pod "test-rollover-deployment-779c67f4f8-hlkhr" is available:
&Pod{ObjectMeta:{test-rollover-deployment-779c67f4f8-hlkhr test-rollover-deployment-779c67f4f8- deployment-86  b56c8a21-e7ad-4f9c-bf6d-e9a6b0f5cd66 9914 0 2022-11-08 12:21:26 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rollover-deployment-779c67f4f8 bcbf2348-ce2a-4618-b35b-3ed95ff8cd30 0xc002ff8a27 0xc002ff8a28}] []  [{kube-controller-manager Update v1 2022-11-08 12:21:26 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"bcbf2348-ce2a-4618-b35b-3ed95ff8cd30\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:21:28 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.1.76\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-b7ghw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-b7ghw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:21:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:21:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:21:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:21:26 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.53,PodIP:10.96.1.76,StartTime:2022-11-08 12:21:26 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-11-08 12:21:27 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://b6137a457760ff7e618190dc1a71647aa001be537507b445f2a68ef11fac1f6c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.1.76,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Nov  8 12:21:38.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-86" for this suite.

â€¢ [SLOW TEST:21.345 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support rollover [Conformance]","total":356,"completed":45,"skipped":775,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:21:38.578: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9507
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Nov  8 12:21:38.725: INFO: Waiting up to 5m0s for pod "downward-api-5e984c70-c315-43d6-9f5d-717dee9efeab" in namespace "downward-api-9507" to be "Succeeded or Failed"
Nov  8 12:21:38.730: INFO: Pod "downward-api-5e984c70-c315-43d6-9f5d-717dee9efeab": Phase="Pending", Reason="", readiness=false. Elapsed: 5.25715ms
Nov  8 12:21:40.740: INFO: Pod "downward-api-5e984c70-c315-43d6-9f5d-717dee9efeab": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015439639s
Nov  8 12:21:42.750: INFO: Pod "downward-api-5e984c70-c315-43d6-9f5d-717dee9efeab": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024576163s
STEP: Saw pod success
Nov  8 12:21:42.750: INFO: Pod "downward-api-5e984c70-c315-43d6-9f5d-717dee9efeab" satisfied condition "Succeeded or Failed"
Nov  8 12:21:42.754: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod downward-api-5e984c70-c315-43d6-9f5d-717dee9efeab container dapi-container: <nil>
STEP: delete the pod
Nov  8 12:21:42.783: INFO: Waiting for pod downward-api-5e984c70-c315-43d6-9f5d-717dee9efeab to disappear
Nov  8 12:21:42.787: INFO: Pod downward-api-5e984c70-c315-43d6-9f5d-717dee9efeab no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Nov  8 12:21:42.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9507" for this suite.
â€¢{"msg":"PASSED [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]","total":356,"completed":46,"skipped":808,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:21:42.808: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-69
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-db7843c7-cb26-458b-af30-533e79a65753
STEP: Creating a pod to test consume configMaps
Nov  8 12:21:42.969: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-85c9a4dd-b594-49fc-a14f-4a634196084f" in namespace "projected-69" to be "Succeeded or Failed"
Nov  8 12:21:42.976: INFO: Pod "pod-projected-configmaps-85c9a4dd-b594-49fc-a14f-4a634196084f": Phase="Pending", Reason="", readiness=false. Elapsed: 6.904884ms
Nov  8 12:21:44.987: INFO: Pod "pod-projected-configmaps-85c9a4dd-b594-49fc-a14f-4a634196084f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018240488s
Nov  8 12:21:46.994: INFO: Pod "pod-projected-configmaps-85c9a4dd-b594-49fc-a14f-4a634196084f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025540369s
STEP: Saw pod success
Nov  8 12:21:46.994: INFO: Pod "pod-projected-configmaps-85c9a4dd-b594-49fc-a14f-4a634196084f" satisfied condition "Succeeded or Failed"
Nov  8 12:21:46.999: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-projected-configmaps-85c9a4dd-b594-49fc-a14f-4a634196084f container agnhost-container: <nil>
STEP: delete the pod
Nov  8 12:21:47.028: INFO: Waiting for pod pod-projected-configmaps-85c9a4dd-b594-49fc-a14f-4a634196084f to disappear
Nov  8 12:21:47.032: INFO: Pod pod-projected-configmaps-85c9a4dd-b594-49fc-a14f-4a634196084f no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Nov  8 12:21:47.032: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-69" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":47,"skipped":816,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:21:47.048: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1871
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 12:21:47.198: INFO: Waiting up to 5m0s for pod "downwardapi-volume-9b2435b3-ba4f-4ddc-87e5-921f2b2984ab" in namespace "projected-1871" to be "Succeeded or Failed"
Nov  8 12:21:47.207: INFO: Pod "downwardapi-volume-9b2435b3-ba4f-4ddc-87e5-921f2b2984ab": Phase="Pending", Reason="", readiness=false. Elapsed: 9.455152ms
Nov  8 12:21:49.219: INFO: Pod "downwardapi-volume-9b2435b3-ba4f-4ddc-87e5-921f2b2984ab": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021031547s
Nov  8 12:21:51.230: INFO: Pod "downwardapi-volume-9b2435b3-ba4f-4ddc-87e5-921f2b2984ab": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032598174s
STEP: Saw pod success
Nov  8 12:21:51.231: INFO: Pod "downwardapi-volume-9b2435b3-ba4f-4ddc-87e5-921f2b2984ab" satisfied condition "Succeeded or Failed"
Nov  8 12:21:51.236: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downwardapi-volume-9b2435b3-ba4f-4ddc-87e5-921f2b2984ab container client-container: <nil>
STEP: delete the pod
Nov  8 12:21:51.272: INFO: Waiting for pod downwardapi-volume-9b2435b3-ba4f-4ddc-87e5-921f2b2984ab to disappear
Nov  8 12:21:51.276: INFO: Pod downwardapi-volume-9b2435b3-ba4f-4ddc-87e5-921f2b2984ab no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Nov  8 12:21:51.276: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1871" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":48,"skipped":826,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:21:51.294: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6812
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Nov  8 12:21:51.453: INFO: Waiting up to 5m0s for pod "pod-b08951a1-3b9a-4045-9a7f-d47f42eba751" in namespace "emptydir-6812" to be "Succeeded or Failed"
Nov  8 12:21:51.459: INFO: Pod "pod-b08951a1-3b9a-4045-9a7f-d47f42eba751": Phase="Pending", Reason="", readiness=false. Elapsed: 6.160365ms
Nov  8 12:21:53.469: INFO: Pod "pod-b08951a1-3b9a-4045-9a7f-d47f42eba751": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01583401s
Nov  8 12:21:55.480: INFO: Pod "pod-b08951a1-3b9a-4045-9a7f-d47f42eba751": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026897026s
STEP: Saw pod success
Nov  8 12:21:55.480: INFO: Pod "pod-b08951a1-3b9a-4045-9a7f-d47f42eba751" satisfied condition "Succeeded or Failed"
Nov  8 12:21:55.485: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-b08951a1-3b9a-4045-9a7f-d47f42eba751 container test-container: <nil>
STEP: delete the pod
Nov  8 12:21:55.513: INFO: Waiting for pod pod-b08951a1-3b9a-4045-9a7f-d47f42eba751 to disappear
Nov  8 12:21:55.518: INFO: Pod pod-b08951a1-3b9a-4045-9a7f-d47f42eba751 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 12:21:55.518: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6812" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":49,"skipped":842,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:21:55.533: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-9196
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:21:55.681: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Nov  8 12:22:00.696: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Nov  8 12:22:00.696: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Nov  8 12:22:02.737: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-9196  1da8f679-8359-4eff-9954-4178cda5dcee 10221 1 2022-11-08 12:22:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-11-08 12:22:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 12:22:02 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0030ae5a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-11-08 12:22:00 +0000 UTC,LastTransitionTime:2022-11-08 12:22:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-cleanup-deployment-6755c7b765" has successfully progressed.,LastUpdateTime:2022-11-08 12:22:02 +0000 UTC,LastTransitionTime:2022-11-08 12:22:00 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Nov  8 12:22:02.742: INFO: New ReplicaSet "test-cleanup-deployment-6755c7b765" of Deployment "test-cleanup-deployment":
&ReplicaSet{ObjectMeta:{test-cleanup-deployment-6755c7b765  deployment-9196  fe0e25b6-8556-47c4-8c35-7b73fc17bee5 10213 1 2022-11-08 12:22:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment 1da8f679-8359-4eff-9954-4178cda5dcee 0xc0030ae977 0xc0030ae978}] []  [{kube-controller-manager Update apps/v1 2022-11-08 12:22:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1da8f679-8359-4eff-9954-4178cda5dcee\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 12:22:02 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 6755c7b765,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0030aea28 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Nov  8 12:22:02.747: INFO: Pod "test-cleanup-deployment-6755c7b765-2bj2n" is available:
&Pod{ObjectMeta:{test-cleanup-deployment-6755c7b765-2bj2n test-cleanup-deployment-6755c7b765- deployment-9196  cc81625b-0fd1-4d2f-8a16-679f7221adae 10212 0 2022-11-08 12:22:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-cleanup-deployment-6755c7b765 fe0e25b6-8556-47c4-8c35-7b73fc17bee5 0xc0004cb637 0xc0004cb638}] []  [{kube-controller-manager Update v1 2022-11-08 12:22:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fe0e25b6-8556-47c4-8c35-7b73fc17bee5\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:22:02 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.1.74\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-96kd8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-96kd8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:22:00 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:22:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:22:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:22:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.53,PodIP:10.96.1.74,StartTime:2022-11-08 12:22:00 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-11-08 12:22:01 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://9626d06d631330510b63a026415f85bce8830c9019dce8166756b24f9cf23fbb,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.1.74,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Nov  8 12:22:02.747: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-9196" for this suite.

â€¢ [SLOW TEST:7.233 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should delete old replica sets [Conformance]","total":356,"completed":50,"skipped":852,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:22:02.767: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-602
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-602.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-602.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-602.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-602.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done

STEP: creating a pod to probe /etc/hosts
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Nov  8 12:22:15.134: INFO: DNS probes using dns-602/dns-test-6793374f-aaa9-4d0d-9d42-a59d7530189e succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Nov  8 12:22:15.148: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-602" for this suite.

â€¢ [SLOW TEST:12.400 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]","total":356,"completed":51,"skipped":863,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:22:15.168: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4728
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Nov  8 12:22:15.363: INFO: Waiting up to 5m0s for pod "downward-api-392a727e-4d7d-48d7-981d-e9ddcd80fc08" in namespace "downward-api-4728" to be "Succeeded or Failed"
Nov  8 12:22:15.370: INFO: Pod "downward-api-392a727e-4d7d-48d7-981d-e9ddcd80fc08": Phase="Pending", Reason="", readiness=false. Elapsed: 7.701642ms
Nov  8 12:22:17.379: INFO: Pod "downward-api-392a727e-4d7d-48d7-981d-e9ddcd80fc08": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016085956s
Nov  8 12:22:19.393: INFO: Pod "downward-api-392a727e-4d7d-48d7-981d-e9ddcd80fc08": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030311558s
STEP: Saw pod success
Nov  8 12:22:19.393: INFO: Pod "downward-api-392a727e-4d7d-48d7-981d-e9ddcd80fc08" satisfied condition "Succeeded or Failed"
Nov  8 12:22:19.399: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downward-api-392a727e-4d7d-48d7-981d-e9ddcd80fc08 container dapi-container: <nil>
STEP: delete the pod
Nov  8 12:22:19.436: INFO: Waiting for pod downward-api-392a727e-4d7d-48d7-981d-e9ddcd80fc08 to disappear
Nov  8 12:22:19.441: INFO: Pod downward-api-392a727e-4d7d-48d7-981d-e9ddcd80fc08 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Nov  8 12:22:19.441: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4728" for this suite.
â€¢{"msg":"PASSED [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]","total":356,"completed":52,"skipped":875,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:22:19.459: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-274
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:22:19.599: INFO: Creating ReplicaSet my-hostname-basic-87c8f579-071a-4092-aae9-bd3785eeba0a
Nov  8 12:22:19.610: INFO: Pod name my-hostname-basic-87c8f579-071a-4092-aae9-bd3785eeba0a: Found 0 pods out of 1
Nov  8 12:22:24.622: INFO: Pod name my-hostname-basic-87c8f579-071a-4092-aae9-bd3785eeba0a: Found 1 pods out of 1
Nov  8 12:22:24.622: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-87c8f579-071a-4092-aae9-bd3785eeba0a" is running
Nov  8 12:22:24.627: INFO: Pod "my-hostname-basic-87c8f579-071a-4092-aae9-bd3785eeba0a-kpmzc" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-11-08 12:22:19 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-11-08 12:22:20 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-11-08 12:22:20 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-11-08 12:22:19 +0000 UTC Reason: Message:}])
Nov  8 12:22:24.627: INFO: Trying to dial the pod
Nov  8 12:22:29.708: INFO: Controller my-hostname-basic-87c8f579-071a-4092-aae9-bd3785eeba0a: Got expected result from replica 1 [my-hostname-basic-87c8f579-071a-4092-aae9-bd3785eeba0a-kpmzc]: "my-hostname-basic-87c8f579-071a-4092-aae9-bd3785eeba0a-kpmzc", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Nov  8 12:22:29.708: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-274" for this suite.

â€¢ [SLOW TEST:10.266 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":53,"skipped":903,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:22:29.725: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-390
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:22:30.423: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:22:33.473: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Creating a dummy validating-webhook-configuration object
STEP: Deleting the validating-webhook-configuration, which should be possible to remove
STEP: Creating a dummy mutating-webhook-configuration object
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:22:33.816: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-390" for this suite.
STEP: Destroying namespace "webhook-390-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]","total":356,"completed":54,"skipped":911,"failed":0}
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:22:33.899: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-7639
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
STEP: get a list of Events with a label in the current namespace
STEP: delete a list of events
Nov  8 12:22:34.058: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Nov  8 12:22:34.077: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-7639" for this suite.
â€¢{"msg":"PASSED [sig-instrumentation] Events API should delete a collection of events [Conformance]","total":356,"completed":55,"skipped":921,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:22:34.098: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-3878
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:22:34.234: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Nov  8 12:22:37.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-3878 --namespace=crd-publish-openapi-3878 create -f -'
Nov  8 12:22:38.638: INFO: stderr: ""
Nov  8 12:22:38.638: INFO: stdout: "e2e-test-crd-publish-openapi-7665-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Nov  8 12:22:38.638: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-3878 --namespace=crd-publish-openapi-3878 delete e2e-test-crd-publish-openapi-7665-crds test-cr'
Nov  8 12:22:38.704: INFO: stderr: ""
Nov  8 12:22:38.704: INFO: stdout: "e2e-test-crd-publish-openapi-7665-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Nov  8 12:22:38.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-3878 --namespace=crd-publish-openapi-3878 apply -f -'
Nov  8 12:22:38.898: INFO: stderr: ""
Nov  8 12:22:38.898: INFO: stdout: "e2e-test-crd-publish-openapi-7665-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Nov  8 12:22:38.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-3878 --namespace=crd-publish-openapi-3878 delete e2e-test-crd-publish-openapi-7665-crds test-cr'
Nov  8 12:22:38.964: INFO: stderr: ""
Nov  8 12:22:38.964: INFO: stdout: "e2e-test-crd-publish-openapi-7665-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Nov  8 12:22:38.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-3878 explain e2e-test-crd-publish-openapi-7665-crds'
Nov  8 12:22:39.121: INFO: stderr: ""
Nov  8 12:22:39.121: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7665-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:22:42.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-3878" for this suite.

â€¢ [SLOW TEST:8.420 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]","total":356,"completed":56,"skipped":953,"failed":0}
S
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:22:42.518: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-6090
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods
STEP: Gathering metrics
Nov  8 12:23:22.760: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Nov  8 12:23:22.760: INFO: Deleting pod "simpletest.rc-24kpw" in namespace "gc-6090"
W1108 12:23:22.760534      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Nov  8 12:23:22.772: INFO: Deleting pod "simpletest.rc-2bn9s" in namespace "gc-6090"
Nov  8 12:23:22.782: INFO: Deleting pod "simpletest.rc-47t6b" in namespace "gc-6090"
Nov  8 12:23:22.799: INFO: Deleting pod "simpletest.rc-4v7rr" in namespace "gc-6090"
Nov  8 12:23:22.815: INFO: Deleting pod "simpletest.rc-56h5f" in namespace "gc-6090"
Nov  8 12:23:22.829: INFO: Deleting pod "simpletest.rc-59kv7" in namespace "gc-6090"
Nov  8 12:23:22.840: INFO: Deleting pod "simpletest.rc-5fql6" in namespace "gc-6090"
Nov  8 12:23:22.851: INFO: Deleting pod "simpletest.rc-5hmn9" in namespace "gc-6090"
Nov  8 12:23:22.878: INFO: Deleting pod "simpletest.rc-5pjwc" in namespace "gc-6090"
Nov  8 12:23:22.889: INFO: Deleting pod "simpletest.rc-5th52" in namespace "gc-6090"
Nov  8 12:23:22.903: INFO: Deleting pod "simpletest.rc-5wgwt" in namespace "gc-6090"
Nov  8 12:23:22.919: INFO: Deleting pod "simpletest.rc-5z4q4" in namespace "gc-6090"
Nov  8 12:23:22.930: INFO: Deleting pod "simpletest.rc-668lh" in namespace "gc-6090"
Nov  8 12:23:22.940: INFO: Deleting pod "simpletest.rc-6ldfd" in namespace "gc-6090"
Nov  8 12:23:22.955: INFO: Deleting pod "simpletest.rc-6t6rb" in namespace "gc-6090"
Nov  8 12:23:22.967: INFO: Deleting pod "simpletest.rc-784ch" in namespace "gc-6090"
Nov  8 12:23:22.982: INFO: Deleting pod "simpletest.rc-7b2rb" in namespace "gc-6090"
Nov  8 12:23:22.993: INFO: Deleting pod "simpletest.rc-7cshz" in namespace "gc-6090"
Nov  8 12:23:23.005: INFO: Deleting pod "simpletest.rc-7nj5t" in namespace "gc-6090"
Nov  8 12:23:23.017: INFO: Deleting pod "simpletest.rc-7rvp8" in namespace "gc-6090"
Nov  8 12:23:23.028: INFO: Deleting pod "simpletest.rc-7stsb" in namespace "gc-6090"
Nov  8 12:23:23.039: INFO: Deleting pod "simpletest.rc-8qp59" in namespace "gc-6090"
Nov  8 12:23:23.049: INFO: Deleting pod "simpletest.rc-8xls5" in namespace "gc-6090"
Nov  8 12:23:23.058: INFO: Deleting pod "simpletest.rc-95vnc" in namespace "gc-6090"
Nov  8 12:23:23.072: INFO: Deleting pod "simpletest.rc-96xm9" in namespace "gc-6090"
Nov  8 12:23:23.087: INFO: Deleting pod "simpletest.rc-98wtc" in namespace "gc-6090"
Nov  8 12:23:23.097: INFO: Deleting pod "simpletest.rc-9d8rr" in namespace "gc-6090"
Nov  8 12:23:23.109: INFO: Deleting pod "simpletest.rc-9dhsw" in namespace "gc-6090"
Nov  8 12:23:23.120: INFO: Deleting pod "simpletest.rc-9qdmc" in namespace "gc-6090"
Nov  8 12:23:23.133: INFO: Deleting pod "simpletest.rc-bdgvc" in namespace "gc-6090"
Nov  8 12:23:23.148: INFO: Deleting pod "simpletest.rc-bg6bc" in namespace "gc-6090"
Nov  8 12:23:23.160: INFO: Deleting pod "simpletest.rc-bqxl2" in namespace "gc-6090"
Nov  8 12:23:23.177: INFO: Deleting pod "simpletest.rc-bsjbw" in namespace "gc-6090"
Nov  8 12:23:23.192: INFO: Deleting pod "simpletest.rc-c2kr7" in namespace "gc-6090"
Nov  8 12:23:23.207: INFO: Deleting pod "simpletest.rc-c6q5n" in namespace "gc-6090"
Nov  8 12:23:23.218: INFO: Deleting pod "simpletest.rc-cnt5h" in namespace "gc-6090"
Nov  8 12:23:23.235: INFO: Deleting pod "simpletest.rc-cr5zg" in namespace "gc-6090"
Nov  8 12:23:23.247: INFO: Deleting pod "simpletest.rc-d62pq" in namespace "gc-6090"
Nov  8 12:23:23.260: INFO: Deleting pod "simpletest.rc-dph6m" in namespace "gc-6090"
Nov  8 12:23:23.271: INFO: Deleting pod "simpletest.rc-dvzs2" in namespace "gc-6090"
Nov  8 12:23:23.286: INFO: Deleting pod "simpletest.rc-dxqwt" in namespace "gc-6090"
Nov  8 12:23:23.297: INFO: Deleting pod "simpletest.rc-f6rxc" in namespace "gc-6090"
Nov  8 12:23:23.312: INFO: Deleting pod "simpletest.rc-fj2n7" in namespace "gc-6090"
Nov  8 12:23:23.326: INFO: Deleting pod "simpletest.rc-fm2nz" in namespace "gc-6090"
Nov  8 12:23:23.339: INFO: Deleting pod "simpletest.rc-fp4zk" in namespace "gc-6090"
Nov  8 12:23:23.349: INFO: Deleting pod "simpletest.rc-fq4qj" in namespace "gc-6090"
Nov  8 12:23:23.362: INFO: Deleting pod "simpletest.rc-fz4qx" in namespace "gc-6090"
Nov  8 12:23:23.373: INFO: Deleting pod "simpletest.rc-g2ms7" in namespace "gc-6090"
Nov  8 12:23:23.388: INFO: Deleting pod "simpletest.rc-g5w87" in namespace "gc-6090"
Nov  8 12:23:23.403: INFO: Deleting pod "simpletest.rc-g7khh" in namespace "gc-6090"
Nov  8 12:23:23.416: INFO: Deleting pod "simpletest.rc-gb8cg" in namespace "gc-6090"
Nov  8 12:23:23.428: INFO: Deleting pod "simpletest.rc-gm95f" in namespace "gc-6090"
Nov  8 12:23:23.468: INFO: Deleting pod "simpletest.rc-gv56f" in namespace "gc-6090"
Nov  8 12:23:23.485: INFO: Deleting pod "simpletest.rc-hh7lz" in namespace "gc-6090"
Nov  8 12:23:23.499: INFO: Deleting pod "simpletest.rc-hhn5v" in namespace "gc-6090"
Nov  8 12:23:23.509: INFO: Deleting pod "simpletest.rc-hmzn5" in namespace "gc-6090"
Nov  8 12:23:23.522: INFO: Deleting pod "simpletest.rc-hq25g" in namespace "gc-6090"
Nov  8 12:23:23.536: INFO: Deleting pod "simpletest.rc-ht56l" in namespace "gc-6090"
Nov  8 12:23:23.550: INFO: Deleting pod "simpletest.rc-jg5tr" in namespace "gc-6090"
Nov  8 12:23:23.562: INFO: Deleting pod "simpletest.rc-jndgf" in namespace "gc-6090"
Nov  8 12:23:23.572: INFO: Deleting pod "simpletest.rc-jwrp4" in namespace "gc-6090"
Nov  8 12:23:23.585: INFO: Deleting pod "simpletest.rc-k894r" in namespace "gc-6090"
Nov  8 12:23:23.596: INFO: Deleting pod "simpletest.rc-kgsq2" in namespace "gc-6090"
Nov  8 12:23:23.613: INFO: Deleting pod "simpletest.rc-mnv5q" in namespace "gc-6090"
Nov  8 12:23:23.623: INFO: Deleting pod "simpletest.rc-mrzzc" in namespace "gc-6090"
Nov  8 12:23:23.639: INFO: Deleting pod "simpletest.rc-nc452" in namespace "gc-6090"
Nov  8 12:23:23.652: INFO: Deleting pod "simpletest.rc-nnk4x" in namespace "gc-6090"
Nov  8 12:23:23.665: INFO: Deleting pod "simpletest.rc-p857z" in namespace "gc-6090"
Nov  8 12:23:23.717: INFO: Deleting pod "simpletest.rc-pfc9t" in namespace "gc-6090"
Nov  8 12:23:23.767: INFO: Deleting pod "simpletest.rc-pg644" in namespace "gc-6090"
Nov  8 12:23:23.815: INFO: Deleting pod "simpletest.rc-qct8l" in namespace "gc-6090"
Nov  8 12:23:23.865: INFO: Deleting pod "simpletest.rc-qgwbp" in namespace "gc-6090"
Nov  8 12:23:23.924: INFO: Deleting pod "simpletest.rc-qqwtv" in namespace "gc-6090"
Nov  8 12:23:23.966: INFO: Deleting pod "simpletest.rc-r6mbp" in namespace "gc-6090"
Nov  8 12:23:24.016: INFO: Deleting pod "simpletest.rc-r88s5" in namespace "gc-6090"
Nov  8 12:23:24.068: INFO: Deleting pod "simpletest.rc-r97bp" in namespace "gc-6090"
Nov  8 12:23:24.115: INFO: Deleting pod "simpletest.rc-rgkbt" in namespace "gc-6090"
Nov  8 12:23:24.162: INFO: Deleting pod "simpletest.rc-rm7lz" in namespace "gc-6090"
Nov  8 12:23:24.212: INFO: Deleting pod "simpletest.rc-rxwjz" in namespace "gc-6090"
Nov  8 12:23:24.266: INFO: Deleting pod "simpletest.rc-s87qj" in namespace "gc-6090"
Nov  8 12:23:24.315: INFO: Deleting pod "simpletest.rc-sx9zk" in namespace "gc-6090"
Nov  8 12:23:24.367: INFO: Deleting pod "simpletest.rc-t25jb" in namespace "gc-6090"
Nov  8 12:23:24.413: INFO: Deleting pod "simpletest.rc-tl95v" in namespace "gc-6090"
Nov  8 12:23:24.464: INFO: Deleting pod "simpletest.rc-tsgrl" in namespace "gc-6090"
Nov  8 12:23:24.516: INFO: Deleting pod "simpletest.rc-tv82r" in namespace "gc-6090"
Nov  8 12:23:24.565: INFO: Deleting pod "simpletest.rc-v6rfg" in namespace "gc-6090"
Nov  8 12:23:24.613: INFO: Deleting pod "simpletest.rc-vcp85" in namespace "gc-6090"
Nov  8 12:23:24.667: INFO: Deleting pod "simpletest.rc-vcsrr" in namespace "gc-6090"
Nov  8 12:23:24.715: INFO: Deleting pod "simpletest.rc-vgsrh" in namespace "gc-6090"
Nov  8 12:23:24.767: INFO: Deleting pod "simpletest.rc-vm4vt" in namespace "gc-6090"
Nov  8 12:23:24.818: INFO: Deleting pod "simpletest.rc-vnrjw" in namespace "gc-6090"
Nov  8 12:23:24.886: INFO: Deleting pod "simpletest.rc-vr4mt" in namespace "gc-6090"
Nov  8 12:23:24.914: INFO: Deleting pod "simpletest.rc-vxbff" in namespace "gc-6090"
Nov  8 12:23:24.967: INFO: Deleting pod "simpletest.rc-w6xh2" in namespace "gc-6090"
Nov  8 12:23:25.016: INFO: Deleting pod "simpletest.rc-wgwft" in namespace "gc-6090"
Nov  8 12:23:25.068: INFO: Deleting pod "simpletest.rc-wr97b" in namespace "gc-6090"
Nov  8 12:23:25.113: INFO: Deleting pod "simpletest.rc-wrn6v" in namespace "gc-6090"
Nov  8 12:23:25.165: INFO: Deleting pod "simpletest.rc-zm4vz" in namespace "gc-6090"
Nov  8 12:23:25.224: INFO: Deleting pod "simpletest.rc-zm59p" in namespace "gc-6090"
Nov  8 12:23:25.268: INFO: Deleting pod "simpletest.rc-zzlqs" in namespace "gc-6090"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Nov  8 12:23:25.313: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6090" for this suite.

â€¢ [SLOW TEST:42.893 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]","total":356,"completed":57,"skipped":954,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:23:25.411: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5674
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-6cd9b61e-2456-45de-9ab1-c97698c316f0
STEP: Creating a pod to test consume secrets
Nov  8 12:23:25.570: INFO: Waiting up to 5m0s for pod "pod-secrets-a2ce7c60-bd80-4889-9f99-6a3b9901cf97" in namespace "secrets-5674" to be "Succeeded or Failed"
Nov  8 12:23:25.575: INFO: Pod "pod-secrets-a2ce7c60-bd80-4889-9f99-6a3b9901cf97": Phase="Pending", Reason="", readiness=false. Elapsed: 5.199285ms
Nov  8 12:23:27.584: INFO: Pod "pod-secrets-a2ce7c60-bd80-4889-9f99-6a3b9901cf97": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014679755s
Nov  8 12:23:29.596: INFO: Pod "pod-secrets-a2ce7c60-bd80-4889-9f99-6a3b9901cf97": Phase="Pending", Reason="", readiness=false. Elapsed: 4.02616333s
Nov  8 12:23:31.607: INFO: Pod "pod-secrets-a2ce7c60-bd80-4889-9f99-6a3b9901cf97": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.03722314s
STEP: Saw pod success
Nov  8 12:23:31.607: INFO: Pod "pod-secrets-a2ce7c60-bd80-4889-9f99-6a3b9901cf97" satisfied condition "Succeeded or Failed"
Nov  8 12:23:31.612: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-secrets-a2ce7c60-bd80-4889-9f99-6a3b9901cf97 container secret-env-test: <nil>
STEP: delete the pod
Nov  8 12:23:31.653: INFO: Waiting for pod pod-secrets-a2ce7c60-bd80-4889-9f99-6a3b9901cf97 to disappear
Nov  8 12:23:31.658: INFO: Pod pod-secrets-a2ce7c60-bd80-4889-9f99-6a3b9901cf97 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Nov  8 12:23:31.658: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5674" for this suite.

â€¢ [SLOW TEST:6.269 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]","total":356,"completed":58,"skipped":1019,"failed":0}
[sig-node] Pods 
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:23:31.680: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-6620
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:23:31.832: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: creating the pod
STEP: submitting the pod to kubernetes
Nov  8 12:23:31.854: INFO: The status of Pod pod-logs-websocket-232922e2-96d2-474e-94c9-56167f775e32 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:23:33.862: INFO: The status of Pod pod-logs-websocket-232922e2-96d2-474e-94c9-56167f775e32 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Nov  8 12:23:33.901: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-6620" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]","total":356,"completed":59,"skipped":1019,"failed":0}

------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:23:33.929: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5310
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-0f54479f-f619-4a3d-88e7-74e356eca8d0
STEP: Creating a pod to test consume configMaps
Nov  8 12:23:34.092: INFO: Waiting up to 5m0s for pod "pod-configmaps-2755e151-6ac5-44aa-ad8d-ea7f515f2e1b" in namespace "configmap-5310" to be "Succeeded or Failed"
Nov  8 12:23:34.100: INFO: Pod "pod-configmaps-2755e151-6ac5-44aa-ad8d-ea7f515f2e1b": Phase="Pending", Reason="", readiness=false. Elapsed: 7.632467ms
Nov  8 12:23:36.109: INFO: Pod "pod-configmaps-2755e151-6ac5-44aa-ad8d-ea7f515f2e1b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017475136s
Nov  8 12:23:38.119: INFO: Pod "pod-configmaps-2755e151-6ac5-44aa-ad8d-ea7f515f2e1b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026837077s
STEP: Saw pod success
Nov  8 12:23:38.119: INFO: Pod "pod-configmaps-2755e151-6ac5-44aa-ad8d-ea7f515f2e1b" satisfied condition "Succeeded or Failed"
Nov  8 12:23:38.124: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-configmaps-2755e151-6ac5-44aa-ad8d-ea7f515f2e1b container agnhost-container: <nil>
STEP: delete the pod
Nov  8 12:23:38.199: INFO: Waiting for pod pod-configmaps-2755e151-6ac5-44aa-ad8d-ea7f515f2e1b to disappear
Nov  8 12:23:38.204: INFO: Pod pod-configmaps-2755e151-6ac5-44aa-ad8d-ea7f515f2e1b no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 12:23:38.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5310" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":60,"skipped":1019,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:23:38.222: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5289
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Nov  8 12:23:38.378: INFO: Waiting up to 5m0s for pod "pod-ad0ea18c-d42b-4c80-81e0-58595c81d6ef" in namespace "emptydir-5289" to be "Succeeded or Failed"
Nov  8 12:23:38.387: INFO: Pod "pod-ad0ea18c-d42b-4c80-81e0-58595c81d6ef": Phase="Pending", Reason="", readiness=false. Elapsed: 9.264382ms
Nov  8 12:23:40.401: INFO: Pod "pod-ad0ea18c-d42b-4c80-81e0-58595c81d6ef": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022702694s
Nov  8 12:23:42.410: INFO: Pod "pod-ad0ea18c-d42b-4c80-81e0-58595c81d6ef": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032077347s
STEP: Saw pod success
Nov  8 12:23:42.410: INFO: Pod "pod-ad0ea18c-d42b-4c80-81e0-58595c81d6ef" satisfied condition "Succeeded or Failed"
Nov  8 12:23:42.416: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-ad0ea18c-d42b-4c80-81e0-58595c81d6ef container test-container: <nil>
STEP: delete the pod
Nov  8 12:23:42.441: INFO: Waiting for pod pod-ad0ea18c-d42b-4c80-81e0-58595c81d6ef to disappear
Nov  8 12:23:42.445: INFO: Pod pod-ad0ea18c-d42b-4c80-81e0-58595c81d6ef no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 12:23:42.446: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5289" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":61,"skipped":1028,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath 
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:23:42.465: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-205
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Nov  8 12:23:42.621: INFO: Waiting up to 1m0s for all nodes to be ready
Nov  8 12:24:42.683: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:24:42.688: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-359
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:496
STEP: Finding an available node
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
Nov  8 12:24:44.864: INFO: found a healthy node: shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:24:56.989: INFO: pods created so far: [1 1 1]
Nov  8 12:24:56.989: INFO: length of pods created so far: 3
Nov  8 12:24:59.009: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:188
Nov  8 12:25:06.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-359" for this suite.
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:470
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Nov  8 12:25:06.072: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-205" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

â€¢ [SLOW TEST:83.691 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:458
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]","total":356,"completed":62,"skipped":1071,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:06.157: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-614
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-6c210d97-b139-404a-a321-a7bd29db549e
STEP: Creating a pod to test consume configMaps
Nov  8 12:25:06.311: INFO: Waiting up to 5m0s for pod "pod-configmaps-fb7ef529-0ff1-4827-b84e-c595c79f6102" in namespace "configmap-614" to be "Succeeded or Failed"
Nov  8 12:25:06.316: INFO: Pod "pod-configmaps-fb7ef529-0ff1-4827-b84e-c595c79f6102": Phase="Pending", Reason="", readiness=false. Elapsed: 5.13073ms
Nov  8 12:25:08.326: INFO: Pod "pod-configmaps-fb7ef529-0ff1-4827-b84e-c595c79f6102": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01465258s
Nov  8 12:25:10.337: INFO: Pod "pod-configmaps-fb7ef529-0ff1-4827-b84e-c595c79f6102": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025675306s
STEP: Saw pod success
Nov  8 12:25:10.337: INFO: Pod "pod-configmaps-fb7ef529-0ff1-4827-b84e-c595c79f6102" satisfied condition "Succeeded or Failed"
Nov  8 12:25:10.344: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-configmaps-fb7ef529-0ff1-4827-b84e-c595c79f6102 container agnhost-container: <nil>
STEP: delete the pod
Nov  8 12:25:10.514: INFO: Waiting for pod pod-configmaps-fb7ef529-0ff1-4827-b84e-c595c79f6102 to disappear
Nov  8 12:25:10.519: INFO: Pod pod-configmaps-fb7ef529-0ff1-4827-b84e-c595c79f6102 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 12:25:10.519: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-614" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":63,"skipped":1093,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:10.539: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8333
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Nov  8 12:25:10.694: INFO: The status of Pod annotationupdate3ecd0998-ac7a-4fd4-9568-7c19bbd03589 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:25:12.702: INFO: The status of Pod annotationupdate3ecd0998-ac7a-4fd4-9568-7c19bbd03589 is Running (Ready = true)
Nov  8 12:25:13.243: INFO: Successfully updated pod "annotationupdate3ecd0998-ac7a-4fd4-9568-7c19bbd03589"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Nov  8 12:25:17.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8333" for this suite.

â€¢ [SLOW TEST:6.773 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":64,"skipped":1098,"failed":0}
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:17.312: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-722
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Nov  8 12:25:17.462: INFO: Waiting up to 5m0s for pod "pod-7d6d3115-fc97-45be-b84b-54b0f94a83f4" in namespace "emptydir-722" to be "Succeeded or Failed"
Nov  8 12:25:17.468: INFO: Pod "pod-7d6d3115-fc97-45be-b84b-54b0f94a83f4": Phase="Pending", Reason="", readiness=false. Elapsed: 6.434613ms
Nov  8 12:25:19.478: INFO: Pod "pod-7d6d3115-fc97-45be-b84b-54b0f94a83f4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016427713s
Nov  8 12:25:21.488: INFO: Pod "pod-7d6d3115-fc97-45be-b84b-54b0f94a83f4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026768867s
STEP: Saw pod success
Nov  8 12:25:21.488: INFO: Pod "pod-7d6d3115-fc97-45be-b84b-54b0f94a83f4" satisfied condition "Succeeded or Failed"
Nov  8 12:25:21.493: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-7d6d3115-fc97-45be-b84b-54b0f94a83f4 container test-container: <nil>
STEP: delete the pod
Nov  8 12:25:21.656: INFO: Waiting for pod pod-7d6d3115-fc97-45be-b84b-54b0f94a83f4 to disappear
Nov  8 12:25:21.661: INFO: Pod pod-7d6d3115-fc97-45be-b84b-54b0f94a83f4 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 12:25:21.661: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-722" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":65,"skipped":1105,"failed":0}
SSS
------------------------------
[sig-cli] Kubectl client Kubectl diff 
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:21.683: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3347
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
STEP: create deployment with httpd image
Nov  8 12:25:21.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3347 create -f -'
Nov  8 12:25:22.514: INFO: stderr: ""
Nov  8 12:25:22.514: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image
Nov  8 12:25:22.514: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3347 diff -f -'
Nov  8 12:25:22.729: INFO: rc: 1
Nov  8 12:25:22.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3347 delete -f -'
Nov  8 12:25:22.799: INFO: stderr: ""
Nov  8 12:25:22.799: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 12:25:22.799: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3347" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]","total":356,"completed":66,"skipped":1108,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser 
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:22.822: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-9290
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:25:22.970: INFO: Waiting up to 5m0s for pod "busybox-user-65534-904d6620-2190-4c96-9fcd-03068628b000" in namespace "security-context-test-9290" to be "Succeeded or Failed"
Nov  8 12:25:22.977: INFO: Pod "busybox-user-65534-904d6620-2190-4c96-9fcd-03068628b000": Phase="Pending", Reason="", readiness=false. Elapsed: 6.397805ms
Nov  8 12:25:24.986: INFO: Pod "busybox-user-65534-904d6620-2190-4c96-9fcd-03068628b000": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016237887s
Nov  8 12:25:26.995: INFO: Pod "busybox-user-65534-904d6620-2190-4c96-9fcd-03068628b000": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024354213s
Nov  8 12:25:26.995: INFO: Pod "busybox-user-65534-904d6620-2190-4c96-9fcd-03068628b000" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Nov  8 12:25:26.995: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-9290" for this suite.
â€¢{"msg":"PASSED [sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":67,"skipped":1118,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery 
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:27.017: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename discovery
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in discovery-3087
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:25:27.317: INFO: Checking APIGroup: apiregistration.k8s.io
Nov  8 12:25:27.319: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Nov  8 12:25:27.319: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Nov  8 12:25:27.319: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Nov  8 12:25:27.319: INFO: Checking APIGroup: apps
Nov  8 12:25:27.322: INFO: PreferredVersion.GroupVersion: apps/v1
Nov  8 12:25:27.322: INFO: Versions found [{apps/v1 v1}]
Nov  8 12:25:27.322: INFO: apps/v1 matches apps/v1
Nov  8 12:25:27.322: INFO: Checking APIGroup: events.k8s.io
Nov  8 12:25:27.324: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Nov  8 12:25:27.324: INFO: Versions found [{events.k8s.io/v1 v1} {events.k8s.io/v1beta1 v1beta1}]
Nov  8 12:25:27.324: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Nov  8 12:25:27.324: INFO: Checking APIGroup: authentication.k8s.io
Nov  8 12:25:27.327: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Nov  8 12:25:27.327: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Nov  8 12:25:27.327: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Nov  8 12:25:27.327: INFO: Checking APIGroup: authorization.k8s.io
Nov  8 12:25:27.330: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Nov  8 12:25:27.330: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Nov  8 12:25:27.330: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Nov  8 12:25:27.330: INFO: Checking APIGroup: autoscaling
Nov  8 12:25:27.333: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Nov  8 12:25:27.333: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1} {autoscaling/v2beta1 v2beta1} {autoscaling/v2beta2 v2beta2}]
Nov  8 12:25:27.333: INFO: autoscaling/v2 matches autoscaling/v2
Nov  8 12:25:27.333: INFO: Checking APIGroup: batch
Nov  8 12:25:27.335: INFO: PreferredVersion.GroupVersion: batch/v1
Nov  8 12:25:27.335: INFO: Versions found [{batch/v1 v1} {batch/v1beta1 v1beta1}]
Nov  8 12:25:27.335: INFO: batch/v1 matches batch/v1
Nov  8 12:25:27.335: INFO: Checking APIGroup: certificates.k8s.io
Nov  8 12:25:27.338: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Nov  8 12:25:27.338: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Nov  8 12:25:27.338: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Nov  8 12:25:27.338: INFO: Checking APIGroup: networking.k8s.io
Nov  8 12:25:27.340: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Nov  8 12:25:27.340: INFO: Versions found [{networking.k8s.io/v1 v1}]
Nov  8 12:25:27.340: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Nov  8 12:25:27.340: INFO: Checking APIGroup: policy
Nov  8 12:25:27.343: INFO: PreferredVersion.GroupVersion: policy/v1
Nov  8 12:25:27.343: INFO: Versions found [{policy/v1 v1} {policy/v1beta1 v1beta1}]
Nov  8 12:25:27.343: INFO: policy/v1 matches policy/v1
Nov  8 12:25:27.343: INFO: Checking APIGroup: rbac.authorization.k8s.io
Nov  8 12:25:27.346: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Nov  8 12:25:27.346: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Nov  8 12:25:27.346: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Nov  8 12:25:27.346: INFO: Checking APIGroup: storage.k8s.io
Nov  8 12:25:27.348: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Nov  8 12:25:27.348: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Nov  8 12:25:27.348: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Nov  8 12:25:27.348: INFO: Checking APIGroup: admissionregistration.k8s.io
Nov  8 12:25:27.351: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Nov  8 12:25:27.351: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Nov  8 12:25:27.351: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Nov  8 12:25:27.351: INFO: Checking APIGroup: apiextensions.k8s.io
Nov  8 12:25:27.354: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Nov  8 12:25:27.354: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Nov  8 12:25:27.354: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Nov  8 12:25:27.354: INFO: Checking APIGroup: scheduling.k8s.io
Nov  8 12:25:27.356: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Nov  8 12:25:27.356: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Nov  8 12:25:27.356: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Nov  8 12:25:27.356: INFO: Checking APIGroup: coordination.k8s.io
Nov  8 12:25:27.360: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Nov  8 12:25:27.360: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Nov  8 12:25:27.360: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Nov  8 12:25:27.360: INFO: Checking APIGroup: node.k8s.io
Nov  8 12:25:27.362: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Nov  8 12:25:27.362: INFO: Versions found [{node.k8s.io/v1 v1} {node.k8s.io/v1beta1 v1beta1}]
Nov  8 12:25:27.362: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Nov  8 12:25:27.362: INFO: Checking APIGroup: discovery.k8s.io
Nov  8 12:25:27.365: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Nov  8 12:25:27.365: INFO: Versions found [{discovery.k8s.io/v1 v1} {discovery.k8s.io/v1beta1 v1beta1}]
Nov  8 12:25:27.365: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Nov  8 12:25:27.365: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Nov  8 12:25:27.367: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta2
Nov  8 12:25:27.367: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta2 v1beta2} {flowcontrol.apiserver.k8s.io/v1beta1 v1beta1}]
Nov  8 12:25:27.367: INFO: flowcontrol.apiserver.k8s.io/v1beta2 matches flowcontrol.apiserver.k8s.io/v1beta2
Nov  8 12:25:27.367: INFO: Checking APIGroup: snapshot.storage.k8s.io
Nov  8 12:25:27.370: INFO: PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
Nov  8 12:25:27.370: INFO: Versions found [{snapshot.storage.k8s.io/v1 v1} {snapshot.storage.k8s.io/v1beta1 v1beta1}]
Nov  8 12:25:27.370: INFO: snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
Nov  8 12:25:27.370: INFO: Checking APIGroup: cilium.io
Nov  8 12:25:27.372: INFO: PreferredVersion.GroupVersion: cilium.io/v2
Nov  8 12:25:27.372: INFO: Versions found [{cilium.io/v2 v2}]
Nov  8 12:25:27.372: INFO: cilium.io/v2 matches cilium.io/v2
Nov  8 12:25:27.372: INFO: Checking APIGroup: metrics.k8s.io
Nov  8 12:25:27.375: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
Nov  8 12:25:27.375: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
Nov  8 12:25:27.375: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:188
Nov  8 12:25:27.375: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "discovery-3087" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]","total":356,"completed":68,"skipped":1135,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:27.395: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-2432
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
STEP: listing events with field selection filtering on source
STEP: listing events with field selection filtering on reportingController
STEP: getting the test event
STEP: patching the test event
STEP: getting the test event
STEP: updating the test event
STEP: getting the test event
STEP: deleting the test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Nov  8 12:25:27.652: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-2432" for this suite.
â€¢{"msg":"PASSED [sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":69,"skipped":1159,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:27.671: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-4429
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:25:29.852: INFO: Deleting pod "var-expansion-84e68a34-d477-4dd3-9fc9-4c721c8bd812" in namespace "var-expansion-4429"
Nov  8 12:25:29.863: INFO: Wait up to 5m0s for pod "var-expansion-84e68a34-d477-4dd3-9fc9-4c721c8bd812" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Nov  8 12:25:31.874: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-4429" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]","total":356,"completed":70,"skipped":1167,"failed":0}
SSSS
------------------------------
[sig-node] Secrets 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:31.894: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-729
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating secret secrets-729/secret-test-83529668-49c5-4734-8a57-4cec9fca6989
STEP: Creating a pod to test consume secrets
Nov  8 12:25:32.061: INFO: Waiting up to 5m0s for pod "pod-configmaps-afb36f12-e321-409a-ad19-fe66961b7bbc" in namespace "secrets-729" to be "Succeeded or Failed"
Nov  8 12:25:32.069: INFO: Pod "pod-configmaps-afb36f12-e321-409a-ad19-fe66961b7bbc": Phase="Pending", Reason="", readiness=false. Elapsed: 7.751642ms
Nov  8 12:25:34.075: INFO: Pod "pod-configmaps-afb36f12-e321-409a-ad19-fe66961b7bbc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014514344s
Nov  8 12:25:36.086: INFO: Pod "pod-configmaps-afb36f12-e321-409a-ad19-fe66961b7bbc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024935138s
STEP: Saw pod success
Nov  8 12:25:36.086: INFO: Pod "pod-configmaps-afb36f12-e321-409a-ad19-fe66961b7bbc" satisfied condition "Succeeded or Failed"
Nov  8 12:25:36.094: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-configmaps-afb36f12-e321-409a-ad19-fe66961b7bbc container env-test: <nil>
STEP: delete the pod
Nov  8 12:25:36.126: INFO: Waiting for pod pod-configmaps-afb36f12-e321-409a-ad19-fe66961b7bbc to disappear
Nov  8 12:25:36.130: INFO: Pod pod-configmaps-afb36f12-e321-409a-ad19-fe66961b7bbc no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Nov  8 12:25:36.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-729" for this suite.
â€¢{"msg":"PASSED [sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":71,"skipped":1171,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:36.152: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4371
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-4371
STEP: changing the ExternalName service to type=ClusterIP
STEP: creating replication controller externalname-service in namespace services-4371
I1108 12:25:36.347678      22 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4371, replica count: 2
I1108 12:25:39.400764      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Nov  8 12:25:39.400: INFO: Creating new exec pod
Nov  8 12:25:42.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-4371 exec execpodbjtlk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Nov  8 12:25:42.834: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Nov  8 12:25:42.834: INFO: stdout: ""
Nov  8 12:25:43.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-4371 exec execpodbjtlk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Nov  8 12:25:44.194: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Nov  8 12:25:44.194: INFO: stdout: ""
Nov  8 12:25:44.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-4371 exec execpodbjtlk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Nov  8 12:25:45.261: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Nov  8 12:25:45.261: INFO: stdout: ""
Nov  8 12:25:45.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-4371 exec execpodbjtlk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Nov  8 12:25:46.215: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Nov  8 12:25:46.215: INFO: stdout: "externalname-service-mjjk4"
Nov  8 12:25:46.215: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-4371 exec execpodbjtlk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.121.224.41 80'
Nov  8 12:25:46.610: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.121.224.41 80\nConnection to 10.121.224.41 80 port [tcp/http] succeeded!\n"
Nov  8 12:25:46.610: INFO: stdout: "externalname-service-pvqtd"
Nov  8 12:25:46.610: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 12:25:46.635: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4371" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:10.502 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]","total":356,"completed":72,"skipped":1185,"failed":0}
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:46.654: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-163
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Nov  8 12:25:46.817: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:25:48.827: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Nov  8 12:25:48.848: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:25:50.859: INFO: The status of Pod pod-with-poststart-http-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Nov  8 12:25:50.885: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Nov  8 12:25:50.891: INFO: Pod pod-with-poststart-http-hook still exists
Nov  8 12:25:52.892: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Nov  8 12:25:52.901: INFO: Pod pod-with-poststart-http-hook still exists
Nov  8 12:25:54.892: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Nov  8 12:25:54.901: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Nov  8 12:25:54.901: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-163" for this suite.

â€¢ [SLOW TEST:8.266 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]","total":356,"completed":73,"skipped":1191,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:54.921: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-7851
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Nov  8 12:25:59.165: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Nov  8 12:25:59.183: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-7851" for this suite.
â€¢{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]","total":356,"completed":74,"skipped":1212,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class 
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:59.204: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2223
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
STEP: verifying QOS class is set on the pod
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:188
Nov  8 12:25:59.369: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2223" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]","total":356,"completed":75,"skipped":1230,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged 
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:25:59.387: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-7286
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:25:59.541: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-c8da9482-a5fe-42c7-953f-5ffea0e2766e" in namespace "security-context-test-7286" to be "Succeeded or Failed"
Nov  8 12:25:59.548: INFO: Pod "busybox-privileged-false-c8da9482-a5fe-42c7-953f-5ffea0e2766e": Phase="Pending", Reason="", readiness=false. Elapsed: 6.502672ms
Nov  8 12:26:01.559: INFO: Pod "busybox-privileged-false-c8da9482-a5fe-42c7-953f-5ffea0e2766e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01717576s
Nov  8 12:26:03.569: INFO: Pod "busybox-privileged-false-c8da9482-a5fe-42c7-953f-5ffea0e2766e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027700654s
Nov  8 12:26:03.569: INFO: Pod "busybox-privileged-false-c8da9482-a5fe-42c7-953f-5ffea0e2766e" satisfied condition "Succeeded or Failed"
Nov  8 12:26:03.585: INFO: Got logs for pod "busybox-privileged-false-c8da9482-a5fe-42c7-953f-5ffea0e2766e": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Nov  8 12:26:03.585: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-7286" for this suite.
â€¢{"msg":"PASSED [sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":76,"skipped":1268,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:26:03.602: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3685
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-e96eab5c-989a-4564-bf22-63b8ce841563
STEP: Creating the pod
STEP: Waiting for pod with text data
STEP: Waiting for pod with binary data
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 12:26:05.876: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3685" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":77,"skipped":1284,"failed":0}
SSSSS
------------------------------
[sig-storage] Downward API volume 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:26:05.899: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7411
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 12:26:06.049: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2976121a-3d90-42ef-8d23-c4a5d1dfbc92" in namespace "downward-api-7411" to be "Succeeded or Failed"
Nov  8 12:26:06.055: INFO: Pod "downwardapi-volume-2976121a-3d90-42ef-8d23-c4a5d1dfbc92": Phase="Pending", Reason="", readiness=false. Elapsed: 6.478096ms
Nov  8 12:26:08.066: INFO: Pod "downwardapi-volume-2976121a-3d90-42ef-8d23-c4a5d1dfbc92": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016784895s
Nov  8 12:26:10.076: INFO: Pod "downwardapi-volume-2976121a-3d90-42ef-8d23-c4a5d1dfbc92": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027292341s
STEP: Saw pod success
Nov  8 12:26:10.076: INFO: Pod "downwardapi-volume-2976121a-3d90-42ef-8d23-c4a5d1dfbc92" satisfied condition "Succeeded or Failed"
Nov  8 12:26:10.081: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downwardapi-volume-2976121a-3d90-42ef-8d23-c4a5d1dfbc92 container client-container: <nil>
STEP: delete the pod
Nov  8 12:26:10.110: INFO: Waiting for pod downwardapi-volume-2976121a-3d90-42ef-8d23-c4a5d1dfbc92 to disappear
Nov  8 12:26:10.114: INFO: Pod downwardapi-volume-2976121a-3d90-42ef-8d23-c4a5d1dfbc92 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Nov  8 12:26:10.114: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7411" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":78,"skipped":1289,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:26:10.133: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-5685
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:26:10.285: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:26:11.320: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-5685" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]","total":356,"completed":79,"skipped":1295,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:26:11.343: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-8101
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with one valid and two invalid sysctls
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Nov  8 12:26:11.490: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-8101" for this suite.
â€¢{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":80,"skipped":1337,"failed":0}
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:26:11.510: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-8414
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Nov  8 12:26:15.716: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Nov  8 12:26:15.735: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-8414" for this suite.
â€¢{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":81,"skipped":1338,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:26:15.756: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6072
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 12:26:15.910: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d092ff82-b3e0-4adf-beab-2cd8e45c6282" in namespace "projected-6072" to be "Succeeded or Failed"
Nov  8 12:26:15.917: INFO: Pod "downwardapi-volume-d092ff82-b3e0-4adf-beab-2cd8e45c6282": Phase="Pending", Reason="", readiness=false. Elapsed: 7.336017ms
Nov  8 12:26:17.926: INFO: Pod "downwardapi-volume-d092ff82-b3e0-4adf-beab-2cd8e45c6282": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016055004s
Nov  8 12:26:19.938: INFO: Pod "downwardapi-volume-d092ff82-b3e0-4adf-beab-2cd8e45c6282": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028446438s
STEP: Saw pod success
Nov  8 12:26:19.938: INFO: Pod "downwardapi-volume-d092ff82-b3e0-4adf-beab-2cd8e45c6282" satisfied condition "Succeeded or Failed"
Nov  8 12:26:19.945: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod downwardapi-volume-d092ff82-b3e0-4adf-beab-2cd8e45c6282 container client-container: <nil>
STEP: delete the pod
Nov  8 12:26:19.972: INFO: Waiting for pod downwardapi-volume-d092ff82-b3e0-4adf-beab-2cd8e45c6282 to disappear
Nov  8 12:26:19.981: INFO: Pod downwardapi-volume-d092ff82-b3e0-4adf-beab-2cd8e45c6282 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Nov  8 12:26:19.981: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6072" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":82,"skipped":1343,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod 
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:26:20.001: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-6275
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:26:20.163: INFO: The status of Pod busybox-scheduling-62cc727a-6731-4182-af72-aafa6cdbcc12 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:26:22.171: INFO: The status of Pod busybox-scheduling-62cc727a-6731-4182-af72-aafa6cdbcc12 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Nov  8 12:26:22.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-6275" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]","total":356,"completed":83,"skipped":1357,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:26:22.208: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-937
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Nov  8 12:27:22.366: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-937" for this suite.

â€¢ [SLOW TEST:60.177 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]","total":356,"completed":84,"skipped":1375,"failed":0}
SSSSSSS
------------------------------
[sig-storage] ConfigMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:27:22.385: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3717
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-1fa164d0-d349-435f-99de-6ed520b41060
STEP: Creating the pod
Nov  8 12:27:22.561: INFO: The status of Pod pod-configmaps-f451c76d-e68f-4881-9af4-a44708bd73c8 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:27:24.573: INFO: The status of Pod pod-configmaps-f451c76d-e68f-4881-9af4-a44708bd73c8 is Running (Ready = true)
STEP: Updating configmap configmap-test-upd-1fa164d0-d349-435f-99de-6ed520b41060
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 12:27:26.676: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3717" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":85,"skipped":1382,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:27:26.697: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-4392
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-97167fd1-478d-4311-9c0f-1bf3c591c2c8 in namespace container-probe-4392
Nov  8 12:27:28.862: INFO: Started pod liveness-97167fd1-478d-4311-9c0f-1bf3c591c2c8 in namespace container-probe-4392
STEP: checking the pod's current state and verifying that restartCount is present
Nov  8 12:27:28.868: INFO: Initial restart count of pod liveness-97167fd1-478d-4311-9c0f-1bf3c591c2c8 is 0
Nov  8 12:27:48.972: INFO: Restart count of pod container-probe-4392/liveness-97167fd1-478d-4311-9c0f-1bf3c591c2c8 is now 1 (20.103556511s elapsed)
Nov  8 12:28:09.077: INFO: Restart count of pod container-probe-4392/liveness-97167fd1-478d-4311-9c0f-1bf3c591c2c8 is now 2 (40.208632125s elapsed)
Nov  8 12:28:29.188: INFO: Restart count of pod container-probe-4392/liveness-97167fd1-478d-4311-9c0f-1bf3c591c2c8 is now 3 (1m0.32002506s elapsed)
Nov  8 12:28:49.286: INFO: Restart count of pod container-probe-4392/liveness-97167fd1-478d-4311-9c0f-1bf3c591c2c8 is now 4 (1m20.418207034s elapsed)
Nov  8 12:29:59.660: INFO: Restart count of pod container-probe-4392/liveness-97167fd1-478d-4311-9c0f-1bf3c591c2c8 is now 5 (2m30.791994928s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Nov  8 12:29:59.675: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-4392" for this suite.

â€¢ [SLOW TEST:152.999 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]","total":356,"completed":86,"skipped":1393,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:29:59.697: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-3300
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation
Nov  8 12:29:59.830: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:30:02.425: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:30:15.283: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-3300" for this suite.

â€¢ [SLOW TEST:15.623 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]","total":356,"completed":87,"skipped":1409,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:30:15.319: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-944
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-11d5951a-782b-4c9f-a1c5-ecaaf417ce37
STEP: Creating a pod to test consume configMaps
Nov  8 12:30:15.496: INFO: Waiting up to 5m0s for pod "pod-configmaps-96543b04-8329-4644-b045-c63c04861923" in namespace "configmap-944" to be "Succeeded or Failed"
Nov  8 12:30:15.501: INFO: Pod "pod-configmaps-96543b04-8329-4644-b045-c63c04861923": Phase="Pending", Reason="", readiness=false. Elapsed: 5.153509ms
Nov  8 12:30:17.516: INFO: Pod "pod-configmaps-96543b04-8329-4644-b045-c63c04861923": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020160465s
Nov  8 12:30:19.527: INFO: Pod "pod-configmaps-96543b04-8329-4644-b045-c63c04861923": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031126161s
STEP: Saw pod success
Nov  8 12:30:19.527: INFO: Pod "pod-configmaps-96543b04-8329-4644-b045-c63c04861923" satisfied condition "Succeeded or Failed"
Nov  8 12:30:19.534: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-configmaps-96543b04-8329-4644-b045-c63c04861923 container configmap-volume-test: <nil>
STEP: delete the pod
Nov  8 12:30:19.563: INFO: Waiting for pod pod-configmaps-96543b04-8329-4644-b045-c63c04861923 to disappear
Nov  8 12:30:19.568: INFO: Pod pod-configmaps-96543b04-8329-4644-b045-c63c04861923 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 12:30:19.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-944" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":88,"skipped":1421,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:30:19.583: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5262
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-c9c37045-397d-4c62-9412-7db63a034728
STEP: Creating a pod to test consume configMaps
Nov  8 12:30:19.743: INFO: Waiting up to 5m0s for pod "pod-configmaps-9394fb76-edca-40b6-ad67-0c7ccefa0beb" in namespace "configmap-5262" to be "Succeeded or Failed"
Nov  8 12:30:19.748: INFO: Pod "pod-configmaps-9394fb76-edca-40b6-ad67-0c7ccefa0beb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.942858ms
Nov  8 12:30:21.758: INFO: Pod "pod-configmaps-9394fb76-edca-40b6-ad67-0c7ccefa0beb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015215327s
Nov  8 12:30:23.772: INFO: Pod "pod-configmaps-9394fb76-edca-40b6-ad67-0c7ccefa0beb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028915186s
STEP: Saw pod success
Nov  8 12:30:23.772: INFO: Pod "pod-configmaps-9394fb76-edca-40b6-ad67-0c7ccefa0beb" satisfied condition "Succeeded or Failed"
Nov  8 12:30:23.777: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-configmaps-9394fb76-edca-40b6-ad67-0c7ccefa0beb container agnhost-container: <nil>
STEP: delete the pod
Nov  8 12:30:23.804: INFO: Waiting for pod pod-configmaps-9394fb76-edca-40b6-ad67-0c7ccefa0beb to disappear
Nov  8 12:30:23.810: INFO: Pod pod-configmaps-9394fb76-edca-40b6-ad67-0c7ccefa0beb no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 12:30:23.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5262" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":89,"skipped":1429,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:30:23.829: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7600
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-7600
STEP: creating service affinity-nodeport-transition in namespace services-7600
STEP: creating replication controller affinity-nodeport-transition in namespace services-7600
I1108 12:30:23.998956      22 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-7600, replica count: 3
I1108 12:30:27.050438      22 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Nov  8 12:30:27.078: INFO: Creating new exec pod
Nov  8 12:30:30.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7600 exec execpod-affinityhkn96 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
Nov  8 12:30:30.462: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Nov  8 12:30:30.462: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:30:30.462: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7600 exec execpod-affinityhkn96 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.123.231.163 80'
Nov  8 12:30:30.877: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.123.231.163 80\nConnection to 10.123.231.163 80 port [tcp/http] succeeded!\n"
Nov  8 12:30:30.877: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:30:30.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7600 exec execpod-affinityhkn96 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.53 30835'
Nov  8 12:30:31.389: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.53 30835\nConnection to 10.250.2.53 30835 port [tcp/*] succeeded!\n"
Nov  8 12:30:31.389: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:30:31.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7600 exec execpod-affinityhkn96 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.170 30835'
Nov  8 12:30:31.816: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.170 30835\nConnection to 10.250.2.170 30835 port [tcp/*] succeeded!\n"
Nov  8 12:30:31.816: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:30:31.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7600 exec execpod-affinityhkn96 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.250.3.16:30835/ ; done'
Nov  8 12:30:32.317: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n"
Nov  8 12:30:32.317: INFO: stdout: "\naffinity-nodeport-transition-xrtvk\naffinity-nodeport-transition-xrtvk\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-rd668\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-rd668\naffinity-nodeport-transition-xrtvk\naffinity-nodeport-transition-rd668\naffinity-nodeport-transition-xrtvk\naffinity-nodeport-transition-rd668\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-rd668\naffinity-nodeport-transition-xrtvk\naffinity-nodeport-transition-tm4zb"
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-xrtvk
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-xrtvk
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-rd668
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-rd668
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-xrtvk
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-rd668
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-xrtvk
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-rd668
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-rd668
Nov  8 12:30:32.317: INFO: Received response from host: affinity-nodeport-transition-xrtvk
Nov  8 12:30:32.318: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.336: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7600 exec execpod-affinityhkn96 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.250.3.16:30835/ ; done'
Nov  8 12:30:32.778: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:30835/\n"
Nov  8 12:30:32.778: INFO: stdout: "\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb\naffinity-nodeport-transition-tm4zb"
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Received response from host: affinity-nodeport-transition-tm4zb
Nov  8 12:30:32.778: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7600, will wait for the garbage collector to delete the pods
Nov  8 12:30:32.866: INFO: Deleting ReplicationController affinity-nodeport-transition took: 7.432737ms
Nov  8 12:30:32.967: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.054626ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 12:30:35.290: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7600" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:11.480 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":90,"skipped":1460,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:30:35.310: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-5207
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test externalName service
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5207.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5207.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local; sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Nov  8 12:30:37.600: INFO: DNS probes using dns-test-e8961687-43cc-4fa8-9b48-b7ff2be8d1e6 succeeded

STEP: deleting the pod
STEP: changing the externalName to bar.example.com
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5207.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5207.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local; sleep 1; done

STEP: creating a second pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Nov  8 12:30:39.732: INFO: File wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local from pod  dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 contains '' instead of 'bar.example.com.'
Nov  8 12:30:39.742: INFO: File jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local from pod  dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Nov  8 12:30:39.742: INFO: Lookups using dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 failed for: [wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local]

Nov  8 12:30:44.753: INFO: File wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local from pod  dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Nov  8 12:30:44.761: INFO: File jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local from pod  dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Nov  8 12:30:44.761: INFO: Lookups using dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 failed for: [wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local]

Nov  8 12:30:49.777: INFO: File wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local from pod  dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Nov  8 12:30:49.786: INFO: File jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local from pod  dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Nov  8 12:30:49.786: INFO: Lookups using dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 failed for: [wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local]

Nov  8 12:30:54.757: INFO: File wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local from pod  dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Nov  8 12:30:54.802: INFO: File jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local from pod  dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Nov  8 12:30:54.802: INFO: Lookups using dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 failed for: [wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local]

Nov  8 12:30:59.761: INFO: File wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local from pod  dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Nov  8 12:30:59.770: INFO: File jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local from pod  dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Nov  8 12:30:59.770: INFO: Lookups using dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 failed for: [wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local]

Nov  8 12:31:04.756: INFO: File wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local from pod  dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Nov  8 12:31:04.766: INFO: File jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local from pod  dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Nov  8 12:31:04.766: INFO: Lookups using dns-5207/dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 failed for: [wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local]

Nov  8 12:31:09.766: INFO: DNS probes using dns-test-4d540d58-4b5c-47d7-8032-ba490e75cdf3 succeeded

STEP: deleting the pod
STEP: changing the service to type=ClusterIP
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5207.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5207.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5207.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5207.svc.cluster.local; sleep 1; done

STEP: creating a third pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Nov  8 12:31:11.971: INFO: DNS probes using dns-test-ffdb17af-1634-4062-9e1e-836ca3a9ee67 succeeded

STEP: deleting the pod
STEP: deleting the test externalName service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Nov  8 12:31:12.005: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-5207" for this suite.

â€¢ [SLOW TEST:36.712 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for ExternalName services [Conformance]","total":356,"completed":91,"skipped":1475,"failed":0}
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:31:12.022: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9069
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Nov  8 12:31:12.186: INFO: Waiting up to 5m0s for pod "pod-1644169d-3bc6-4ad4-939a-3f7c0e1fceff" in namespace "emptydir-9069" to be "Succeeded or Failed"
Nov  8 12:31:12.203: INFO: Pod "pod-1644169d-3bc6-4ad4-939a-3f7c0e1fceff": Phase="Pending", Reason="", readiness=false. Elapsed: 17.775014ms
Nov  8 12:31:14.216: INFO: Pod "pod-1644169d-3bc6-4ad4-939a-3f7c0e1fceff": Phase="Pending", Reason="", readiness=false. Elapsed: 2.030592719s
Nov  8 12:31:16.229: INFO: Pod "pod-1644169d-3bc6-4ad4-939a-3f7c0e1fceff": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.043340739s
STEP: Saw pod success
Nov  8 12:31:16.229: INFO: Pod "pod-1644169d-3bc6-4ad4-939a-3f7c0e1fceff" satisfied condition "Succeeded or Failed"
Nov  8 12:31:16.234: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-1644169d-3bc6-4ad4-939a-3f7c0e1fceff container test-container: <nil>
STEP: delete the pod
Nov  8 12:31:16.302: INFO: Waiting for pod pod-1644169d-3bc6-4ad4-939a-3f7c0e1fceff to disappear
Nov  8 12:31:16.306: INFO: Pod pod-1644169d-3bc6-4ad4-939a-3f7c0e1fceff no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 12:31:16.306: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9069" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":92,"skipped":1481,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:31:16.322: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9124
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Discovering how many secrets are in namespace by default
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Secret
STEP: Ensuring resource quota status captures secret creation
STEP: Deleting a secret
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Nov  8 12:31:32.548: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9124" for this suite.

â€¢ [SLOW TEST:16.251 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]","total":356,"completed":93,"skipped":1487,"failed":0}
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:31:32.574: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-8941
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Nov  8 12:31:32.720: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Nov  8 12:31:36.313: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-8941" for this suite.
â€¢{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]","total":356,"completed":94,"skipped":1492,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:31:36.339: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-9610
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Nov  8 12:31:36.481: INFO: PodSpec: initContainers in spec.initContainers
Nov  8 12:32:23.887: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-a3182dfc-85dc-4b15-9f66-d4ba65005a85", GenerateName:"", Namespace:"init-container-9610", SelfLink:"", UID:"0daffaae-9ef1-4b2f-bd9e-6d32c482481d", ResourceVersion:"15230", Generation:0, CreationTimestamp:time.Date(2022, time.November, 8, 12, 31, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"481864917"}, Annotations:map[string]string{"kubernetes.io/psp":"e2e-test-privileged-psp"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.November, 8, 12, 31, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003028030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.November, 8, 12, 31, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003028060), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-zhjpm", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc003c12000), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"KUBERNETES_SERVICE_HOST", Value:"api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zhjpm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"KUBERNETES_SERVICE_HOST", Value:"api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zhjpm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"k8s.gcr.io/pause:3.7", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"KUBERNETES_SERVICE_HOST", Value:"api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zhjpm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0047840d8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc001174000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004784150)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004784170)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004784178), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00478417c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00400c030), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.November, 8, 12, 31, 36, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.November, 8, 12, 31, 36, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.November, 8, 12, 31, 36, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.November, 8, 12, 31, 36, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.250.2.170", PodIP:"10.96.0.172", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.96.0.172"}}, StartTime:time.Date(2022, time.November, 8, 12, 31, 36, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc001174150)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0011741c0)}, Ready:false, RestartCount:3, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"k8s.gcr.io/e2e-test-images/busybox@sha256:c318242786b139d18676b1c09a0ad7f15fc17f8f16a5b2e625cd0dc8c9703daf", ContainerID:"containerd://850bd4486c07f0fe27f4dfc34aea7b2ad70d975c7bb0ab8f947a93ec28bd4699", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003c12080), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003c12060), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/pause:3.7", ImageID:"", ContainerID:"", Started:(*bool)(0xc00478420f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Nov  8 12:32:23.887: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-9610" for this suite.

â€¢ [SLOW TEST:47.569 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]","total":356,"completed":95,"skipped":1524,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:32:23.908: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-5849
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Nov  8 12:32:24.119: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:32:26.129: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Nov  8 12:32:26.152: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:32:28.164: INFO: The status of Pod pod-with-poststart-exec-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Nov  8 12:32:28.199: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Nov  8 12:32:28.205: INFO: Pod pod-with-poststart-exec-hook still exists
Nov  8 12:32:30.206: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Nov  8 12:32:30.216: INFO: Pod pod-with-poststart-exec-hook still exists
Nov  8 12:32:32.206: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Nov  8 12:32:32.218: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Nov  8 12:32:32.218: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-5849" for this suite.

â€¢ [SLOW TEST:8.331 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]","total":356,"completed":96,"skipped":1536,"failed":0}
SSSS
------------------------------
[sig-network] DNS 
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:32:32.240: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-9168
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9168.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9168.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9168.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9168.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9168.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9168.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9168.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9168.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9168.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9168.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 93.89.116.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.116.89.93_udp@PTR;check="$$(dig +tcp +noall +answer +search 93.89.116.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.116.89.93_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9168.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9168.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9168.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9168.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9168.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9168.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9168.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9168.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9168.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9168.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 93.89.116.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.116.89.93_udp@PTR;check="$$(dig +tcp +noall +answer +search 93.89.116.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.116.89.93_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Nov  8 12:32:36.565: INFO: Unable to read wheezy_udp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:36.577: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:36.587: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:36.629: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:36.671: INFO: Unable to read jessie_udp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:36.679: INFO: Unable to read jessie_tcp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:36.689: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:36.698: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:36.737: INFO: Lookups using dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1 failed for: [wheezy_udp@dns-test-service.dns-9168.svc.cluster.local wheezy_tcp@dns-test-service.dns-9168.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local jessie_udp@dns-test-service.dns-9168.svc.cluster.local jessie_tcp@dns-test-service.dns-9168.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local]

Nov  8 12:32:41.749: INFO: Unable to read wheezy_udp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:41.800: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:41.810: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:41.817: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:41.862: INFO: Unable to read jessie_udp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:41.872: INFO: Unable to read jessie_tcp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:41.880: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:41.890: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:41.928: INFO: Lookups using dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1 failed for: [wheezy_udp@dns-test-service.dns-9168.svc.cluster.local wheezy_tcp@dns-test-service.dns-9168.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local jessie_udp@dns-test-service.dns-9168.svc.cluster.local jessie_tcp@dns-test-service.dns-9168.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local]

Nov  8 12:32:46.748: INFO: Unable to read wheezy_udp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:46.755: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:46.800: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:46.809: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:46.902: INFO: Unable to read jessie_udp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:46.912: INFO: Unable to read jessie_tcp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:46.919: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:46.928: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:46.962: INFO: Lookups using dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1 failed for: [wheezy_udp@dns-test-service.dns-9168.svc.cluster.local wheezy_tcp@dns-test-service.dns-9168.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local jessie_udp@dns-test-service.dns-9168.svc.cluster.local jessie_tcp@dns-test-service.dns-9168.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local]

Nov  8 12:32:51.748: INFO: Unable to read wheezy_udp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:51.758: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:51.766: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:51.817: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:51.892: INFO: Unable to read jessie_udp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:51.900: INFO: Unable to read jessie_tcp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:51.909: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:51.919: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:51.958: INFO: Lookups using dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1 failed for: [wheezy_udp@dns-test-service.dns-9168.svc.cluster.local wheezy_tcp@dns-test-service.dns-9168.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local jessie_udp@dns-test-service.dns-9168.svc.cluster.local jessie_tcp@dns-test-service.dns-9168.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local]

Nov  8 12:32:56.750: INFO: Unable to read wheezy_udp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:56.759: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:56.767: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:56.813: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:56.859: INFO: Unable to read jessie_udp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:56.869: INFO: Unable to read jessie_tcp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:56.878: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:56.887: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:32:56.920: INFO: Lookups using dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1 failed for: [wheezy_udp@dns-test-service.dns-9168.svc.cluster.local wheezy_tcp@dns-test-service.dns-9168.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local jessie_udp@dns-test-service.dns-9168.svc.cluster.local jessie_tcp@dns-test-service.dns-9168.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local]

Nov  8 12:33:01.753: INFO: Unable to read wheezy_udp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:33:01.763: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:33:01.808: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:33:01.818: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:33:01.902: INFO: Unable to read jessie_udp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:33:01.912: INFO: Unable to read jessie_tcp@dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:33:01.922: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:33:01.931: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local from pod dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1: the server could not find the requested resource (get pods dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1)
Nov  8 12:33:01.964: INFO: Lookups using dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1 failed for: [wheezy_udp@dns-test-service.dns-9168.svc.cluster.local wheezy_tcp@dns-test-service.dns-9168.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local jessie_udp@dns-test-service.dns-9168.svc.cluster.local jessie_tcp@dns-test-service.dns-9168.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9168.svc.cluster.local]

Nov  8 12:33:06.938: INFO: DNS probes using dns-9168/dns-test-f0e38b6e-a025-45b7-a65c-67eb1c8c46a1 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Nov  8 12:33:06.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-9168" for this suite.

â€¢ [SLOW TEST:34.764 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for services  [Conformance]","total":356,"completed":97,"skipped":1540,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:33:07.004: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5773
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service endpoint-test2 in namespace services-5773
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5773 to expose endpoints map[]
Nov  8 12:33:07.177: INFO: successfully validated that service endpoint-test2 in namespace services-5773 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-5773
Nov  8 12:33:07.198: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:33:09.210: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5773 to expose endpoints map[pod1:[80]]
Nov  8 12:33:09.235: INFO: successfully validated that service endpoint-test2 in namespace services-5773 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1
Nov  8 12:33:09.235: INFO: Creating new exec pod
Nov  8 12:33:12.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-5773 exec execpodvfqtm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Nov  8 12:33:12.615: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Nov  8 12:33:12.615: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:33:12.615: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-5773 exec execpodvfqtm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.127.2.25 80'
Nov  8 12:33:13.000: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.127.2.25 80\nConnection to 10.127.2.25 80 port [tcp/http] succeeded!\n"
Nov  8 12:33:13.000: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Creating pod pod2 in namespace services-5773
Nov  8 12:33:13.020: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:33:15.028: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5773 to expose endpoints map[pod1:[80] pod2:[80]]
Nov  8 12:33:15.053: INFO: successfully validated that service endpoint-test2 in namespace services-5773 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2
Nov  8 12:33:16.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-5773 exec execpodvfqtm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Nov  8 12:33:16.482: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Nov  8 12:33:16.483: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:33:16.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-5773 exec execpodvfqtm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.127.2.25 80'
Nov  8 12:33:16.908: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.127.2.25 80\nConnection to 10.127.2.25 80 port [tcp/http] succeeded!\n"
Nov  8 12:33:16.908: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-5773
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5773 to expose endpoints map[pod2:[80]]
Nov  8 12:33:16.983: INFO: successfully validated that service endpoint-test2 in namespace services-5773 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2
Nov  8 12:33:17.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-5773 exec execpodvfqtm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Nov  8 12:33:18.361: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Nov  8 12:33:18.361: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:33:18.361: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-5773 exec execpodvfqtm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.127.2.25 80'
Nov  8 12:33:18.744: INFO: stderr: "+ + nc -v -t -w 2echo 10.127.2.25 80\n hostName\nConnection to 10.127.2.25 80 port [tcp/http] succeeded!\n"
Nov  8 12:33:18.744: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod2 in namespace services-5773
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5773 to expose endpoints map[]
Nov  8 12:33:18.789: INFO: successfully validated that service endpoint-test2 in namespace services-5773 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 12:33:18.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5773" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:11.818 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve a basic endpoint from pods  [Conformance]","total":356,"completed":98,"skipped":1552,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:33:18.822: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9447
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-738cc228-4c7b-4f11-8b67-e135943037d7
STEP: Creating a pod to test consume secrets
Nov  8 12:33:18.986: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-bf59b018-a2ab-4c8b-ae57-7dba61cdacdd" in namespace "projected-9447" to be "Succeeded or Failed"
Nov  8 12:33:18.993: INFO: Pod "pod-projected-secrets-bf59b018-a2ab-4c8b-ae57-7dba61cdacdd": Phase="Pending", Reason="", readiness=false. Elapsed: 6.920901ms
Nov  8 12:33:21.005: INFO: Pod "pod-projected-secrets-bf59b018-a2ab-4c8b-ae57-7dba61cdacdd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018201796s
Nov  8 12:33:23.017: INFO: Pod "pod-projected-secrets-bf59b018-a2ab-4c8b-ae57-7dba61cdacdd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030855981s
STEP: Saw pod success
Nov  8 12:33:23.017: INFO: Pod "pod-projected-secrets-bf59b018-a2ab-4c8b-ae57-7dba61cdacdd" satisfied condition "Succeeded or Failed"
Nov  8 12:33:23.023: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-projected-secrets-bf59b018-a2ab-4c8b-ae57-7dba61cdacdd container projected-secret-volume-test: <nil>
STEP: delete the pod
Nov  8 12:33:23.057: INFO: Waiting for pod pod-projected-secrets-bf59b018-a2ab-4c8b-ae57-7dba61cdacdd to disappear
Nov  8 12:33:23.083: INFO: Pod pod-projected-secrets-bf59b018-a2ab-4c8b-ae57-7dba61cdacdd no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Nov  8 12:33:23.083: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9447" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":99,"skipped":1557,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:33:23.103: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3643
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service multi-endpoint-test in namespace services-3643
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3643 to expose endpoints map[]
Nov  8 12:33:23.324: INFO: successfully validated that service multi-endpoint-test in namespace services-3643 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-3643
Nov  8 12:33:23.345: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:33:25.353: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3643 to expose endpoints map[pod1:[100]]
Nov  8 12:33:25.374: INFO: successfully validated that service multi-endpoint-test in namespace services-3643 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-3643
Nov  8 12:33:25.425: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:33:27.435: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3643 to expose endpoints map[pod1:[100] pod2:[101]]
Nov  8 12:33:27.465: INFO: successfully validated that service multi-endpoint-test in namespace services-3643 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods
Nov  8 12:33:27.465: INFO: Creating new exec pod
Nov  8 12:33:30.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-3643 exec execpodsvs7z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
Nov  8 12:33:30.910: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Nov  8 12:33:30.910: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:33:30.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-3643 exec execpodsvs7z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.122.223.250 80'
Nov  8 12:33:31.356: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.122.223.250 80\nConnection to 10.122.223.250 80 port [tcp/http] succeeded!\n"
Nov  8 12:33:31.356: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:33:31.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-3643 exec execpodsvs7z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
Nov  8 12:33:31.734: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Nov  8 12:33:31.734: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:33:31.734: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-3643 exec execpodsvs7z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.122.223.250 81'
Nov  8 12:33:32.133: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.122.223.250 81\nConnection to 10.122.223.250 81 port [tcp/*] succeeded!\n"
Nov  8 12:33:32.133: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-3643
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3643 to expose endpoints map[pod2:[101]]
Nov  8 12:33:32.230: INFO: successfully validated that service multi-endpoint-test in namespace services-3643 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-3643
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3643 to expose endpoints map[]
Nov  8 12:33:32.261: INFO: successfully validated that service multi-endpoint-test in namespace services-3643 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 12:33:32.276: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3643" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:9.193 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve multiport endpoints from pods  [Conformance]","total":356,"completed":100,"skipped":1586,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Pods 
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:33:32.297: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7925
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: setting up watch
STEP: submitting the pod to kubernetes
Nov  8 12:33:32.524: INFO: observed the pod list
STEP: verifying the pod is in kubernetes
STEP: verifying pod creation was observed
STEP: deleting the pod gracefully
STEP: verifying pod deletion was observed
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Nov  8 12:33:37.077: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7925" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]","total":356,"completed":101,"skipped":1595,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:33:37.096: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-2491
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Nov  8 12:33:37.243: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Nov  8 12:33:42.080: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-2491" for this suite.

â€¢ [SLOW TEST:5.011 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]","total":356,"completed":102,"skipped":1642,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:33:42.107: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-3076
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Nov  8 12:33:46.280: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-3076" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]","total":356,"completed":103,"skipped":1659,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:33:46.300: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-9551
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Nov  8 12:33:46.520: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-9551" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]","total":356,"completed":104,"skipped":1679,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch 
  watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:33:46.538: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename crd-watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-watch-5572
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:33:46.684: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Creating first CR 
Nov  8 12:33:49.265: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-11-08T12:33:49Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-11-08T12:33:49Z]] name:name1 resourceVersion:15925 uid:aecaa545-806c-44fb-8732-a83ffcf1c78a] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR
Nov  8 12:33:59.284: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-11-08T12:33:59Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-11-08T12:33:59Z]] name:name2 resourceVersion:15989 uid:87734c33-9760-4a1d-a860-e883b87a693b] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR
Nov  8 12:34:09.301: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-11-08T12:33:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-11-08T12:34:09Z]] name:name1 resourceVersion:16036 uid:aecaa545-806c-44fb-8732-a83ffcf1c78a] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR
Nov  8 12:34:19.320: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-11-08T12:33:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-11-08T12:34:19Z]] name:name2 resourceVersion:16083 uid:87734c33-9760-4a1d-a860-e883b87a693b] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR
Nov  8 12:34:29.338: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-11-08T12:33:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-11-08T12:34:09Z]] name:name1 resourceVersion:16129 uid:aecaa545-806c-44fb-8732-a83ffcf1c78a] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR
Nov  8 12:34:39.352: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-11-08T12:33:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-11-08T12:34:19Z]] name:name2 resourceVersion:16177 uid:87734c33-9760-4a1d-a860-e883b87a693b] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:34:49.880: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-watch-5572" for this suite.

â€¢ [SLOW TEST:63.359 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]","total":356,"completed":105,"skipped":1718,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:34:49.898: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9623
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-9623
STEP: changing the ExternalName service to type=NodePort
STEP: creating replication controller externalname-service in namespace services-9623
I1108 12:34:50.094770      22 runners.go:193] Created replication controller with name: externalname-service, namespace: services-9623, replica count: 2
I1108 12:34:53.145461      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Nov  8 12:34:53.145: INFO: Creating new exec pod
Nov  8 12:34:56.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-9623 exec execpodh58qk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Nov  8 12:34:56.597: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Nov  8 12:34:56.597: INFO: stdout: "externalname-service-nn88q"
Nov  8 12:34:56.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-9623 exec execpodh58qk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.121.119.17 80'
Nov  8 12:34:56.980: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.121.119.17 80\nConnection to 10.121.119.17 80 port [tcp/http] succeeded!\n"
Nov  8 12:34:56.980: INFO: stdout: "externalname-service-mcvzd"
Nov  8 12:34:56.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-9623 exec execpodh58qk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.170 32175'
Nov  8 12:34:57.342: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.170 32175\nConnection to 10.250.2.170 32175 port [tcp/*] succeeded!\n"
Nov  8 12:34:57.342: INFO: stdout: ""
Nov  8 12:34:58.342: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-9623 exec execpodh58qk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.170 32175'
Nov  8 12:34:58.738: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.170 32175\nConnection to 10.250.2.170 32175 port [tcp/*] succeeded!\n"
Nov  8 12:34:58.738: INFO: stdout: ""
Nov  8 12:34:59.342: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-9623 exec execpodh58qk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.170 32175'
Nov  8 12:34:59.637: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.170 32175\nConnection to 10.250.2.170 32175 port [tcp/*] succeeded!\n"
Nov  8 12:34:59.637: INFO: stdout: ""
Nov  8 12:35:00.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-9623 exec execpodh58qk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.170 32175'
Nov  8 12:35:00.750: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.170 32175\nConnection to 10.250.2.170 32175 port [tcp/*] succeeded!\n"
Nov  8 12:35:00.750: INFO: stdout: "externalname-service-mcvzd"
Nov  8 12:35:00.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-9623 exec execpodh58qk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.53 32175'
Nov  8 12:35:01.175: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.53 32175\nConnection to 10.250.2.53 32175 port [tcp/*] succeeded!\n"
Nov  8 12:35:01.175: INFO: stdout: "externalname-service-nn88q"
Nov  8 12:35:01.175: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 12:35:01.199: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9623" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:11.329 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]","total":356,"completed":106,"skipped":1733,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:35:01.227: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2000
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Nov  8 12:35:01.392: INFO: The status of Pod annotationupdate6d5255d9-8761-4c5d-9787-51422b5250fe is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:35:03.407: INFO: The status of Pod annotationupdate6d5255d9-8761-4c5d-9787-51422b5250fe is Running (Ready = true)
Nov  8 12:35:03.948: INFO: Successfully updated pod "annotationupdate6d5255d9-8761-4c5d-9787-51422b5250fe"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Nov  8 12:35:07.990: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2000" for this suite.

â€¢ [SLOW TEST:6.784 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":107,"skipped":1756,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:35:08.012: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-108
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service nodeport-service with the type=NodePort in namespace services-108
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-108
STEP: creating replication controller externalsvc in namespace services-108
I1108 12:35:08.201300      22 runners.go:193] Created replication controller with name: externalsvc, namespace: services-108, replica count: 2
I1108 12:35:11.255024      22 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName
Nov  8 12:35:11.288: INFO: Creating new exec pod
Nov  8 12:35:13.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-108 exec execpodnrdx7 -- /bin/sh -x -c nslookup nodeport-service.services-108.svc.cluster.local'
Nov  8 12:35:13.735: INFO: stderr: "+ nslookup nodeport-service.services-108.svc.cluster.local\n"
Nov  8 12:35:13.735: INFO: stdout: "Server:\t\t10.112.0.10\nAddress:\t10.112.0.10#53\n\nnodeport-service.services-108.svc.cluster.local\tcanonical name = externalsvc.services-108.svc.cluster.local.\nName:\texternalsvc.services-108.svc.cluster.local\nAddress: 10.121.249.152\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-108, will wait for the garbage collector to delete the pods
Nov  8 12:35:13.802: INFO: Deleting ReplicationController externalsvc took: 8.329432ms
Nov  8 12:35:13.903: INFO: Terminating ReplicationController externalsvc pods took: 100.53137ms
Nov  8 12:35:15.920: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 12:35:15.930: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-108" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:7.937 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]","total":356,"completed":108,"skipped":1759,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:35:15.949: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9916
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Nov  8 12:35:16.110: INFO: Waiting up to 5m0s for pod "downward-api-a2a664a3-a501-436e-8a4a-1bb0a117d427" in namespace "downward-api-9916" to be "Succeeded or Failed"
Nov  8 12:35:16.117: INFO: Pod "downward-api-a2a664a3-a501-436e-8a4a-1bb0a117d427": Phase="Pending", Reason="", readiness=false. Elapsed: 7.285848ms
Nov  8 12:35:18.130: INFO: Pod "downward-api-a2a664a3-a501-436e-8a4a-1bb0a117d427": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019506598s
Nov  8 12:35:20.137: INFO: Pod "downward-api-a2a664a3-a501-436e-8a4a-1bb0a117d427": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02728071s
STEP: Saw pod success
Nov  8 12:35:20.137: INFO: Pod "downward-api-a2a664a3-a501-436e-8a4a-1bb0a117d427" satisfied condition "Succeeded or Failed"
Nov  8 12:35:20.143: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod downward-api-a2a664a3-a501-436e-8a4a-1bb0a117d427 container dapi-container: <nil>
STEP: delete the pod
Nov  8 12:35:20.169: INFO: Waiting for pod downward-api-a2a664a3-a501-436e-8a4a-1bb0a117d427 to disappear
Nov  8 12:35:20.173: INFO: Pod downward-api-a2a664a3-a501-436e-8a4a-1bb0a117d427 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Nov  8 12:35:20.173: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9916" for this suite.
â€¢{"msg":"PASSED [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]","total":356,"completed":109,"skipped":1791,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:35:20.189: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-3107
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:35:20.331: INFO: Creating deployment "webserver-deployment"
Nov  8 12:35:20.338: INFO: Waiting for observed generation 1
Nov  8 12:35:22.356: INFO: Waiting for all required pods to come up
Nov  8 12:35:22.367: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running
Nov  8 12:35:26.386: INFO: Waiting for deployment "webserver-deployment" to complete
Nov  8 12:35:26.395: INFO: Updating deployment "webserver-deployment" with a non-existent image
Nov  8 12:35:26.406: INFO: Updating deployment webserver-deployment
Nov  8 12:35:26.406: INFO: Waiting for observed generation 2
Nov  8 12:35:28.432: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Nov  8 12:35:28.436: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Nov  8 12:35:28.440: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Nov  8 12:35:28.452: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Nov  8 12:35:28.452: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Nov  8 12:35:28.456: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Nov  8 12:35:28.464: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Nov  8 12:35:28.464: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Nov  8 12:35:28.477: INFO: Updating deployment webserver-deployment
Nov  8 12:35:28.477: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Nov  8 12:35:28.488: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Nov  8 12:35:28.494: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Nov  8 12:35:28.522: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-3107  49ccd366-49a1-4255-8c7c-ab75f86128c5 16738 3 2022-11-08 12:35:20 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-11-08 12:35:20 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 12:35:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0030805a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:25,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-57ccb67bb8" is progressing.,LastUpdateTime:2022-11-08 12:35:26 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-11-08 12:35:28 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Nov  8 12:35:28.535: INFO: New ReplicaSet "webserver-deployment-57ccb67bb8" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-57ccb67bb8  deployment-3107  6f901529-c818-4d39-b9d4-e89aa0613d7e 16731 3 2022-11-08 12:35:26 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 49ccd366-49a1-4255-8c7c-ab75f86128c5 0xc002218d77 0xc002218d78}] []  [{kube-controller-manager Update apps/v1 2022-11-08 12:35:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"49ccd366-49a1-4255-8c7c-ab75f86128c5\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 12:35:26 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 57ccb67bb8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002218e18 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Nov  8 12:35:28.535: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Nov  8 12:35:28.535: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-55df494869  deployment-3107  47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 16730 3 2022-11-08 12:35:20 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 49ccd366-49a1-4255-8c7c-ab75f86128c5 0xc002218c87 0xc002218c88}] []  [{kube-controller-manager Update apps/v1 2022-11-08 12:35:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"49ccd366-49a1-4255-8c7c-ab75f86128c5\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 12:35:21 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002218d18 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Nov  8 12:35:28.561: INFO: Pod "webserver-deployment-55df494869-4cvv6" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-4cvv6 webserver-deployment-55df494869- deployment-3107  f78b1b0d-5b9d-4532-859b-eaab89bb6908 16762 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc006236b07 0xc006236b08}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qdzzp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qdzzp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.562: INFO: Pod "webserver-deployment-55df494869-4j6w4" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-4j6w4 webserver-deployment-55df494869- deployment-3107  40013bf5-55b1-4d1e-a9f8-e93cf6e49f6d 16625 0 2022-11-08 12:35:20 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc006236c47 0xc006236c48}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:20 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:21 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.3.234\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dq8sr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dq8sr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.3.16,PodIP:10.96.3.234,StartTime:2022-11-08 12:35:20 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-11-08 12:35:21 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://3024c3fd55ec17dd148b9bcb5f2980c061a3385531dc14afff74e9324eff2a31,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.3.234,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.562: INFO: Pod "webserver-deployment-55df494869-55h46" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-55h46 webserver-deployment-55df494869- deployment-3107  c1b2aa68-8126-464e-9cfb-a0c7f633cde2 16766 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc006236e30 0xc006236e31}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5chwd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5chwd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.562: INFO: Pod "webserver-deployment-55df494869-6xx99" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-6xx99 webserver-deployment-55df494869- deployment-3107  510fcd55-9563-472e-a7e7-f07af88645fe 16642 0 2022-11-08 12:35:20 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc006236f67 0xc006236f68}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:20 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:22 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.0.224\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-g5gxf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-g5gxf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.170,PodIP:10.96.0.224,StartTime:2022-11-08 12:35:20 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-11-08 12:35:21 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://745ae77bd832986e239ddf78a6c1e425341c92fa4aedd706b7ce85aed3b6eb36,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.0.224,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.562: INFO: Pod "webserver-deployment-55df494869-7kkh9" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-7kkh9 webserver-deployment-55df494869- deployment-3107  5ffbdcdd-5d63-4ed1-ba5d-48b459074bae 16628 0 2022-11-08 12:35:20 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc006237140 0xc006237141}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:20 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:21 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.1.76\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qqggz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qqggz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.53,PodIP:10.96.1.76,StartTime:2022-11-08 12:35:20 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-11-08 12:35:21 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://ea0c6a0dd504cddba6858744f613ae40bd0432301fa79bc8056408570b236d8c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.1.76,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.562: INFO: Pod "webserver-deployment-55df494869-87tps" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-87tps webserver-deployment-55df494869- deployment-3107  d2678a57-d14a-4856-813a-8bd94ddbe1cd 16764 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc006237320 0xc006237321}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hh2rm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hh2rm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.562: INFO: Pod "webserver-deployment-55df494869-gnddz" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-gnddz webserver-deployment-55df494869- deployment-3107  cf221666-ebf7-4363-a832-afda0cff7951 16763 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc006237457 0xc006237458}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6cnvb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6cnvb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.563: INFO: Pod "webserver-deployment-55df494869-hjdbn" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-hjdbn webserver-deployment-55df494869- deployment-3107  6854bc43-7ccf-4e6b-bbe0-ed0663539522 16761 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc006237597 0xc006237598}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-c4tbk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-c4tbk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.563: INFO: Pod "webserver-deployment-55df494869-hrjhh" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-hrjhh webserver-deployment-55df494869- deployment-3107  43bc554f-66dc-48a6-a6b8-2f0ac185cbf7 16755 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc0062376d7 0xc0062376d8}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9qkhx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9qkhx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.563: INFO: Pod "webserver-deployment-55df494869-jl784" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-jl784 webserver-deployment-55df494869- deployment-3107  8769451c-16a7-443c-896f-e087a7d00df2 16754 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc006237830 0xc006237831}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vprbl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vprbl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.53,PodIP:,StartTime:2022-11-08 12:35:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.563: INFO: Pod "webserver-deployment-55df494869-l9bht" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-l9bht webserver-deployment-55df494869- deployment-3107  f9e05cb1-f38d-4d96-b1b7-d3c5ec782738 16645 0 2022-11-08 12:35:20 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc0062379e7 0xc0062379e8}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:20 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:22 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.0.148\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jlm6p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jlm6p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.170,PodIP:10.96.0.148,StartTime:2022-11-08 12:35:20 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-11-08 12:35:21 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://267e9c5279db1ee9936927b38b72a22947137b77f90c890bc20efd368aaef624,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.0.148,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.564: INFO: Pod "webserver-deployment-55df494869-n9l4f" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-n9l4f webserver-deployment-55df494869- deployment-3107  4e94c3bc-e62e-42fc-a208-d9ff85de9759 16657 0 2022-11-08 12:35:20 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc006237bd0 0xc006237bd1}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:20 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:24 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.2.237\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-d6dft,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-d6dft,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.17,PodIP:10.96.2.237,StartTime:2022-11-08 12:35:20 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-11-08 12:35:24 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://9ed07a12c80ba1f79158eb4056f65cc2c63a79f5f31e0f6a7a6f6b26842f28d1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.2.237,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.564: INFO: Pod "webserver-deployment-55df494869-pngs6" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-pngs6 webserver-deployment-55df494869- deployment-3107  de7e5b10-19f0-4322-80e1-33eff82af59e 16756 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc006237da0 0xc006237da1}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dcdd6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dcdd6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.564: INFO: Pod "webserver-deployment-55df494869-pwx6h" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-pwx6h webserver-deployment-55df494869- deployment-3107  15942ab7-04a8-48d7-b9b8-2feaca001866 16661 0 2022-11-08 12:35:20 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc006237ef0 0xc006237ef1}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:20 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:24 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.2.92\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h4wmw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h4wmw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.17,PodIP:10.96.2.92,StartTime:2022-11-08 12:35:20 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-11-08 12:35:24 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://860f38ddac25135ec9973bc65249f1243f7f02d70e6133c54fbcf9c5af179490,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.2.92,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.565: INFO: Pod "webserver-deployment-55df494869-q2dxt" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-q2dxt webserver-deployment-55df494869- deployment-3107  ddd2e496-5982-40e6-9168-93555ec59a45 16758 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc0039c8230 0xc0039c8231}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-29hcg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-29hcg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.565: INFO: Pod "webserver-deployment-55df494869-rhbdm" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-rhbdm webserver-deployment-55df494869- deployment-3107  f593e3a9-6f61-44db-a51e-72f4c3b25333 16742 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc0039c92b0 0xc0039c92b1}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ctnfk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ctnfk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.566: INFO: Pod "webserver-deployment-55df494869-rl7lt" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-rl7lt webserver-deployment-55df494869- deployment-3107  745c15d0-4273-4988-acde-2f9c2d24f09f 16639 0 2022-11-08 12:35:20 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc0039c9410 0xc0039c9411}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:20 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:22 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.0.62\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zkcs5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zkcs5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.170,PodIP:10.96.0.62,StartTime:2022-11-08 12:35:20 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-11-08 12:35:21 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://3cb4190bbf7fdb9190032ec1989944e74767c16768d4399d3729003fde570302,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.0.62,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.566: INFO: Pod "webserver-deployment-55df494869-t2tw4" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-t2tw4 webserver-deployment-55df494869- deployment-3107  baad6f5c-64df-449f-85ea-d6ca5383e361 16743 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc0039c9600 0xc0039c9601}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-797kw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-797kw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.566: INFO: Pod "webserver-deployment-55df494869-t7675" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-t7675 webserver-deployment-55df494869- deployment-3107  07661c74-10a5-4796-94ed-cad3ac301215 16622 0 2022-11-08 12:35:20 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc0039c9780 0xc0039c9781}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:20 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:21 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.3.80\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jbjkk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jbjkk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:20 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.3.16,PodIP:10.96.3.80,StartTime:2022-11-08 12:35:20 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-11-08 12:35:21 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://9d77a4631130f96e9ca15ebfc4f2455ace8c5ca54740b2591d458384945cbd9a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.3.80,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.567: INFO: Pod "webserver-deployment-55df494869-zs8nq" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-zs8nq webserver-deployment-55df494869- deployment-3107  32c8f35d-12a4-40c6-bf71-df7bd826f67f 16757 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 47a5472b-4fb7-4bae-a0ac-0db5bbd072b6 0xc0039c9970 0xc0039c9971}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a5472b-4fb7-4bae-a0ac-0db5bbd072b6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7lrcd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7lrcd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.567: INFO: Pod "webserver-deployment-57ccb67bb8-2s2h5" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-2s2h5 webserver-deployment-57ccb67bb8- deployment-3107  671ae7df-b95e-4a55-bbb2-283d9a786c6e 16728 0 2022-11-08 12:35:26 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 6f901529-c818-4d39-b9d4-e89aa0613d7e 0xc0039c9ae0 0xc0039c9ae1}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:26 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6f901529-c818-4d39-b9d4-e89aa0613d7e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.0.94\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-59pjt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-59pjt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.170,PodIP:10.96.0.94,StartTime:2022-11-08 12:35:26 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.0.94,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.567: INFO: Pod "webserver-deployment-57ccb67bb8-586pl" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-586pl webserver-deployment-57ccb67bb8- deployment-3107  68e29bae-73cc-4fab-bd50-e77679ba2a01 16714 0 2022-11-08 12:35:26 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 6f901529-c818-4d39-b9d4-e89aa0613d7e 0xc0039c9ce0 0xc0039c9ce1}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:26 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6f901529-c818-4d39-b9d4-e89aa0613d7e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xnjrx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xnjrx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.53,PodIP:,StartTime:2022-11-08 12:35:26 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.568: INFO: Pod "webserver-deployment-57ccb67bb8-92llq" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-92llq webserver-deployment-57ccb67bb8- deployment-3107  34f75475-0866-40f3-b150-54b1a820c7df 16760 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 6f901529-c818-4d39-b9d4-e89aa0613d7e 0xc0039c9eb0 0xc0039c9eb1}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6f901529-c818-4d39-b9d4-e89aa0613d7e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7psfb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7psfb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.170,PodIP:,StartTime:2022-11-08 12:35:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.568: INFO: Pod "webserver-deployment-57ccb67bb8-bgtd8" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-bgtd8 webserver-deployment-57ccb67bb8- deployment-3107  f1a47f28-8ed0-463f-a6a3-d1c4b4a270d6 16694 0 2022-11-08 12:35:26 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 6f901529-c818-4d39-b9d4-e89aa0613d7e 0xc003242087 0xc003242088}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:26 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6f901529-c818-4d39-b9d4-e89aa0613d7e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gc42v,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gc42v,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.53,PodIP:,StartTime:2022-11-08 12:35:26 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.568: INFO: Pod "webserver-deployment-57ccb67bb8-k8sfs" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-k8sfs webserver-deployment-57ccb67bb8- deployment-3107  d4f88a7b-3000-47f5-b133-98259516ab2f 16752 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 6f901529-c818-4d39-b9d4-e89aa0613d7e 0xc003242260 0xc003242261}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6f901529-c818-4d39-b9d4-e89aa0613d7e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x794s,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x794s,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.568: INFO: Pod "webserver-deployment-57ccb67bb8-kpthw" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-kpthw webserver-deployment-57ccb67bb8- deployment-3107  8f983cc3-2b2a-4bae-8e1f-60cfa0b89bb1 16713 0 2022-11-08 12:35:26 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 6f901529-c818-4d39-b9d4-e89aa0613d7e 0xc0032423a7 0xc0032423a8}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:26 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6f901529-c818-4d39-b9d4-e89aa0613d7e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-crndc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-crndc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.3.16,PodIP:,StartTime:2022-11-08 12:35:26 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.568: INFO: Pod "webserver-deployment-57ccb67bb8-lfc6r" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-lfc6r webserver-deployment-57ccb67bb8- deployment-3107  f146266d-2745-45e7-8b00-379af66cf1dd 16759 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 6f901529-c818-4d39-b9d4-e89aa0613d7e 0xc003242580 0xc003242581}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6f901529-c818-4d39-b9d4-e89aa0613d7e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hx7xq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hx7xq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.569: INFO: Pod "webserver-deployment-57ccb67bb8-p66d6" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-p66d6 webserver-deployment-57ccb67bb8- deployment-3107  e91c4f4e-04f2-4042-8ff6-ea3c5daa65a2 16747 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 6f901529-c818-4d39-b9d4-e89aa0613d7e 0xc0032426e0 0xc0032426e1}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6f901529-c818-4d39-b9d4-e89aa0613d7e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x9g4m,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x9g4m,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.569: INFO: Pod "webserver-deployment-57ccb67bb8-pzsgt" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-pzsgt webserver-deployment-57ccb67bb8- deployment-3107  4599ba9f-750c-4dcd-8ef7-9a834c5cf2e1 16753 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 6f901529-c818-4d39-b9d4-e89aa0613d7e 0xc003242850 0xc003242851}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6f901529-c818-4d39-b9d4-e89aa0613d7e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f8wgn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f8wgn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.569: INFO: Pod "webserver-deployment-57ccb67bb8-qpfkl" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-qpfkl webserver-deployment-57ccb67bb8- deployment-3107  01395ff5-f65d-4442-9b58-1284187f6b4e 16701 0 2022-11-08 12:35:26 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 6f901529-c818-4d39-b9d4-e89aa0613d7e 0xc0032429a7 0xc0032429a8}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:26 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6f901529-c818-4d39-b9d4-e89aa0613d7e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:35:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dnbv8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dnbv8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:26 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.17,PodIP:,StartTime:2022-11-08 12:35:26 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.569: INFO: Pod "webserver-deployment-57ccb67bb8-qx7gs" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-qx7gs webserver-deployment-57ccb67bb8- deployment-3107  d5fed66b-5d07-4f09-841b-a4153f4cb06f 16749 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 6f901529-c818-4d39-b9d4-e89aa0613d7e 0xc003242b90 0xc003242b91}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6f901529-c818-4d39-b9d4-e89aa0613d7e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zc6gf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zc6gf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:35:28.569: INFO: Pod "webserver-deployment-57ccb67bb8-s9v5t" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-s9v5t webserver-deployment-57ccb67bb8- deployment-3107  9563d157-7589-40e4-9127-e1f2ad3bacb3 16765 0 2022-11-08 12:35:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 6f901529-c818-4d39-b9d4-e89aa0613d7e 0xc003242d10 0xc003242d11}] []  [{kube-controller-manager Update v1 2022-11-08 12:35:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6f901529-c818-4d39-b9d4-e89aa0613d7e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s6tgv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s6tgv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:35:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Nov  8 12:35:28.570: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-3107" for this suite.

â€¢ [SLOW TEST:8.404 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support proportional scaling [Conformance]","total":356,"completed":110,"skipped":1800,"failed":0}
S
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:35:28.594: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1399
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-db72f71d-4041-441b-bf69-021abcc1a364
STEP: Creating a pod to test consume secrets
Nov  8 12:35:28.762: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-c28a66fe-7e08-4798-8c8e-f61c188b8eb3" in namespace "projected-1399" to be "Succeeded or Failed"
Nov  8 12:35:28.768: INFO: Pod "pod-projected-secrets-c28a66fe-7e08-4798-8c8e-f61c188b8eb3": Phase="Pending", Reason="", readiness=false. Elapsed: 5.754698ms
Nov  8 12:35:30.777: INFO: Pod "pod-projected-secrets-c28a66fe-7e08-4798-8c8e-f61c188b8eb3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014467839s
Nov  8 12:35:32.788: INFO: Pod "pod-projected-secrets-c28a66fe-7e08-4798-8c8e-f61c188b8eb3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02536819s
STEP: Saw pod success
Nov  8 12:35:32.788: INFO: Pod "pod-projected-secrets-c28a66fe-7e08-4798-8c8e-f61c188b8eb3" satisfied condition "Succeeded or Failed"
Nov  8 12:35:32.793: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-projected-secrets-c28a66fe-7e08-4798-8c8e-f61c188b8eb3 container projected-secret-volume-test: <nil>
STEP: delete the pod
Nov  8 12:35:32.820: INFO: Waiting for pod pod-projected-secrets-c28a66fe-7e08-4798-8c8e-f61c188b8eb3 to disappear
Nov  8 12:35:32.824: INFO: Pod pod-projected-secrets-c28a66fe-7e08-4798-8c8e-f61c188b8eb3 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Nov  8 12:35:32.824: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1399" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":111,"skipped":1801,"failed":0}
SSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:35:32.840: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-798
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-060e6247-4f32-4ba9-8cb4-ac16e0a34abc
STEP: Creating a pod to test consume configMaps
Nov  8 12:35:33.005: INFO: Waiting up to 5m0s for pod "pod-configmaps-3509c35e-a841-4388-a561-6c26eb40cf1a" in namespace "configmap-798" to be "Succeeded or Failed"
Nov  8 12:35:33.011: INFO: Pod "pod-configmaps-3509c35e-a841-4388-a561-6c26eb40cf1a": Phase="Pending", Reason="", readiness=false. Elapsed: 6.222129ms
Nov  8 12:35:35.023: INFO: Pod "pod-configmaps-3509c35e-a841-4388-a561-6c26eb40cf1a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017605876s
Nov  8 12:35:37.081: INFO: Pod "pod-configmaps-3509c35e-a841-4388-a561-6c26eb40cf1a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.076271893s
STEP: Saw pod success
Nov  8 12:35:37.081: INFO: Pod "pod-configmaps-3509c35e-a841-4388-a561-6c26eb40cf1a" satisfied condition "Succeeded or Failed"
Nov  8 12:35:37.086: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-configmaps-3509c35e-a841-4388-a561-6c26eb40cf1a container agnhost-container: <nil>
STEP: delete the pod
Nov  8 12:35:37.112: INFO: Waiting for pod pod-configmaps-3509c35e-a841-4388-a561-6c26eb40cf1a to disappear
Nov  8 12:35:37.116: INFO: Pod pod-configmaps-3509c35e-a841-4388-a561-6c26eb40cf1a no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 12:35:37.117: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-798" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":112,"skipped":1805,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:35:37.131: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8982
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Starting the proxy
Nov  8 12:35:37.275: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8982 proxy --unix-socket=/tmp/kubectl-proxy-unix1836594444/test'
STEP: retrieving proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 12:35:37.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8982" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]","total":356,"completed":113,"skipped":1836,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:35:37.325: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-3062
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-3062
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Nov  8 12:35:37.487: INFO: Found 0 stateful pods, waiting for 3
Nov  8 12:35:47.500: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Nov  8 12:35:47.500: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Nov  8 12:35:47.500: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Nov  8 12:35:47.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-3062 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Nov  8 12:35:47.866: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Nov  8 12:35:47.866: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Nov  8 12:35:47.866: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Nov  8 12:35:57.918: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Updating Pods in reverse ordinal order
Nov  8 12:36:07.955: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-3062 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Nov  8 12:36:08.334: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Nov  8 12:36:08.334: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Nov  8 12:36:08.334: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision
Nov  8 12:36:18.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-3062 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Nov  8 12:36:18.741: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Nov  8 12:36:18.741: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Nov  8 12:36:18.741: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Nov  8 12:36:28.797: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order
Nov  8 12:36:38.838: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-3062 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Nov  8 12:36:39.220: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Nov  8 12:36:39.220: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Nov  8 12:36:39.220: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Nov  8 12:36:49.264: INFO: Deleting all statefulset in ns statefulset-3062
Nov  8 12:36:49.268: INFO: Scaling statefulset ss2 to 0
Nov  8 12:36:59.295: INFO: Waiting for statefulset status.replicas updated to 0
Nov  8 12:36:59.300: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Nov  8 12:36:59.315: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-3062" for this suite.

â€¢ [SLOW TEST:82.008 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]","total":356,"completed":114,"skipped":1877,"failed":0}
SS
------------------------------
[sig-apps] DisruptionController 
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:36:59.333: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-6462
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pdb that targets all three pods in a test replica set
STEP: Waiting for the pdb to be processed
STEP: First trying to evict a pod which shouldn't be evictable
STEP: Waiting for all pods to be running
Nov  8 12:36:59.513: INFO: pods: 0 < 3
STEP: locating a running pod
STEP: Updating the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
STEP: Waiting for the pdb to observed all healthy pods
STEP: Patching the pdb to disallow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Nov  8 12:37:01.634: INFO: running pods: 2 < 3
STEP: locating a running pod
STEP: Deleting the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be deleted
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Nov  8 12:37:03.690: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-6462" for this suite.
â€¢{"msg":"PASSED [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]","total":356,"completed":115,"skipped":1879,"failed":0}
SS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:37:03.709: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8206
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 12:37:03.878: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c4af2b98-d5c6-4928-bb53-3e3296f6763a" in namespace "downward-api-8206" to be "Succeeded or Failed"
Nov  8 12:37:03.882: INFO: Pod "downwardapi-volume-c4af2b98-d5c6-4928-bb53-3e3296f6763a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.821714ms
Nov  8 12:37:05.893: INFO: Pod "downwardapi-volume-c4af2b98-d5c6-4928-bb53-3e3296f6763a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014954941s
Nov  8 12:37:07.902: INFO: Pod "downwardapi-volume-c4af2b98-d5c6-4928-bb53-3e3296f6763a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02432829s
STEP: Saw pod success
Nov  8 12:37:07.902: INFO: Pod "downwardapi-volume-c4af2b98-d5c6-4928-bb53-3e3296f6763a" satisfied condition "Succeeded or Failed"
Nov  8 12:37:07.912: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downwardapi-volume-c4af2b98-d5c6-4928-bb53-3e3296f6763a container client-container: <nil>
STEP: delete the pod
Nov  8 12:37:07.947: INFO: Waiting for pod downwardapi-volume-c4af2b98-d5c6-4928-bb53-3e3296f6763a to disappear
Nov  8 12:37:07.951: INFO: Pod downwardapi-volume-c4af2b98-d5c6-4928-bb53-3e3296f6763a no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Nov  8 12:37:07.951: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8206" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":116,"skipped":1881,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:37:07.968: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-2526
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Nov  8 12:37:08.175: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 12:37:08.175: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 12:37:09.195: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Nov  8 12:37:09.195: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z is running 0 daemon pod, expected 1
Nov  8 12:37:10.272: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Nov  8 12:37:10.272: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived.
Nov  8 12:37:10.309: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Nov  8 12:37:10.309: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw is running 0 daemon pod, expected 1
Nov  8 12:37:11.331: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Nov  8 12:37:11.331: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw is running 0 daemon pod, expected 1
Nov  8 12:37:12.363: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Nov  8 12:37:12.363: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw is running 0 daemon pod, expected 1
Nov  8 12:37:13.329: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Nov  8 12:37:13.329: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw is running 0 daemon pod, expected 1
Nov  8 12:37:14.329: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Nov  8 12:37:14.329: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2526, will wait for the garbage collector to delete the pods
Nov  8 12:37:14.395: INFO: Deleting DaemonSet.extensions daemon-set took: 7.502579ms
Nov  8 12:37:14.497: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.076961ms
Nov  8 12:37:17.303: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 12:37:17.303: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Nov  8 12:37:17.309: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17928"},"items":null}

Nov  8 12:37:17.314: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17928"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Nov  8 12:37:17.346: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-2526" for this suite.

â€¢ [SLOW TEST:9.408 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]","total":356,"completed":117,"skipped":1930,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:37:17.381: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-9417
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating 50 configmaps
STEP: Creating RC which spawns configmap-volume pods
Nov  8 12:37:17.836: INFO: Pod name wrapped-volume-race-f05ac367-09c3-49a8-acf2-6016fb923161: Found 0 pods out of 5
Nov  8 12:37:22.851: INFO: Pod name wrapped-volume-race-f05ac367-09c3-49a8-acf2-6016fb923161: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-f05ac367-09c3-49a8-acf2-6016fb923161 in namespace emptydir-wrapper-9417, will wait for the garbage collector to delete the pods
Nov  8 12:37:22.948: INFO: Deleting ReplicationController wrapped-volume-race-f05ac367-09c3-49a8-acf2-6016fb923161 took: 8.224145ms
Nov  8 12:37:23.049: INFO: Terminating ReplicationController wrapped-volume-race-f05ac367-09c3-49a8-acf2-6016fb923161 pods took: 100.804599ms
STEP: Creating RC which spawns configmap-volume pods
Nov  8 12:37:24.088: INFO: Pod name wrapped-volume-race-3fbc6424-695e-4d9c-9be9-3bfe53ac395e: Found 0 pods out of 5
Nov  8 12:37:29.109: INFO: Pod name wrapped-volume-race-3fbc6424-695e-4d9c-9be9-3bfe53ac395e: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-3fbc6424-695e-4d9c-9be9-3bfe53ac395e in namespace emptydir-wrapper-9417, will wait for the garbage collector to delete the pods
Nov  8 12:37:29.214: INFO: Deleting ReplicationController wrapped-volume-race-3fbc6424-695e-4d9c-9be9-3bfe53ac395e took: 9.977672ms
Nov  8 12:37:29.315: INFO: Terminating ReplicationController wrapped-volume-race-3fbc6424-695e-4d9c-9be9-3bfe53ac395e pods took: 101.075177ms
STEP: Creating RC which spawns configmap-volume pods
Nov  8 12:37:30.572: INFO: Pod name wrapped-volume-race-ea615425-51e1-4788-89e7-cac7bd372341: Found 0 pods out of 5
Nov  8 12:37:35.596: INFO: Pod name wrapped-volume-race-ea615425-51e1-4788-89e7-cac7bd372341: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-ea615425-51e1-4788-89e7-cac7bd372341 in namespace emptydir-wrapper-9417, will wait for the garbage collector to delete the pods
Nov  8 12:37:35.698: INFO: Deleting ReplicationController wrapped-volume-race-ea615425-51e1-4788-89e7-cac7bd372341 took: 8.718506ms
Nov  8 12:37:35.798: INFO: Terminating ReplicationController wrapped-volume-race-ea615425-51e1-4788-89e7-cac7bd372341 pods took: 100.196785ms
STEP: Cleaning up the configMaps
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Nov  8 12:37:37.502: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-9417" for this suite.

â€¢ [SLOW TEST:20.167 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]","total":356,"completed":118,"skipped":1978,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:37:37.548: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-7398
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name secret-emptykey-test-18d9a4ce-2450-45b9-bfd2-fcb5f477eceb
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Nov  8 12:37:37.703: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7398" for this suite.
â€¢{"msg":"PASSED [sig-node] Secrets should fail to create secret due to empty secret key [Conformance]","total":356,"completed":119,"skipped":1991,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:37:37.719: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3182
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Nov  8 12:37:37.872: INFO: Waiting up to 5m0s for pod "downward-api-761654e6-8141-4753-b010-a29393807144" in namespace "downward-api-3182" to be "Succeeded or Failed"
Nov  8 12:37:37.879: INFO: Pod "downward-api-761654e6-8141-4753-b010-a29393807144": Phase="Pending", Reason="", readiness=false. Elapsed: 7.141056ms
Nov  8 12:37:39.887: INFO: Pod "downward-api-761654e6-8141-4753-b010-a29393807144": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015346673s
Nov  8 12:37:41.898: INFO: Pod "downward-api-761654e6-8141-4753-b010-a29393807144": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026251854s
STEP: Saw pod success
Nov  8 12:37:41.898: INFO: Pod "downward-api-761654e6-8141-4753-b010-a29393807144" satisfied condition "Succeeded or Failed"
Nov  8 12:37:41.904: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downward-api-761654e6-8141-4753-b010-a29393807144 container dapi-container: <nil>
STEP: delete the pod
Nov  8 12:37:41.964: INFO: Waiting for pod downward-api-761654e6-8141-4753-b010-a29393807144 to disappear
Nov  8 12:37:41.969: INFO: Pod downward-api-761654e6-8141-4753-b010-a29393807144 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Nov  8 12:37:41.969: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3182" for this suite.
â€¢{"msg":"PASSED [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]","total":356,"completed":120,"skipped":2032,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:37:41.986: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4719
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 12:37:42.149: INFO: Waiting up to 5m0s for pod "downwardapi-volume-a73dcb15-d2d9-4b51-b8f2-aa0740530cf2" in namespace "downward-api-4719" to be "Succeeded or Failed"
Nov  8 12:37:42.201: INFO: Pod "downwardapi-volume-a73dcb15-d2d9-4b51-b8f2-aa0740530cf2": Phase="Pending", Reason="", readiness=false. Elapsed: 51.636532ms
Nov  8 12:37:44.211: INFO: Pod "downwardapi-volume-a73dcb15-d2d9-4b51-b8f2-aa0740530cf2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.062245282s
Nov  8 12:37:46.223: INFO: Pod "downwardapi-volume-a73dcb15-d2d9-4b51-b8f2-aa0740530cf2": Phase="Pending", Reason="", readiness=false. Elapsed: 4.0735577s
Nov  8 12:37:48.232: INFO: Pod "downwardapi-volume-a73dcb15-d2d9-4b51-b8f2-aa0740530cf2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.082884074s
STEP: Saw pod success
Nov  8 12:37:48.232: INFO: Pod "downwardapi-volume-a73dcb15-d2d9-4b51-b8f2-aa0740530cf2" satisfied condition "Succeeded or Failed"
Nov  8 12:37:48.237: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downwardapi-volume-a73dcb15-d2d9-4b51-b8f2-aa0740530cf2 container client-container: <nil>
STEP: delete the pod
Nov  8 12:37:48.264: INFO: Waiting for pod downwardapi-volume-a73dcb15-d2d9-4b51-b8f2-aa0740530cf2 to disappear
Nov  8 12:37:48.269: INFO: Pod downwardapi-volume-a73dcb15-d2d9-4b51-b8f2-aa0740530cf2 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Nov  8 12:37:48.269: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4719" for this suite.

â€¢ [SLOW TEST:6.298 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":121,"skipped":2049,"failed":0}
S
------------------------------
[sig-node] Secrets 
  should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:37:48.285: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9736
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a secret
STEP: listing secrets in all namespaces to ensure that there are more than zero
STEP: patching the secret
STEP: deleting the secret using a LabelSelector
STEP: listing secrets in all namespaces, searching for label name and value in patch
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Nov  8 12:37:48.462: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9736" for this suite.
â€¢{"msg":"PASSED [sig-node] Secrets should patch a secret [Conformance]","total":356,"completed":122,"skipped":2050,"failed":0}
SSS
------------------------------
[sig-apps] Job 
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:37:48.478: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-8408
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: Orphaning one of the Job's Pods
Nov  8 12:37:51.167: INFO: Successfully updated pod "adopt-release-l8k72"
STEP: Checking that the Job readopts the Pod
Nov  8 12:37:51.167: INFO: Waiting up to 15m0s for pod "adopt-release-l8k72" in namespace "job-8408" to be "adopted"
Nov  8 12:37:51.173: INFO: Pod "adopt-release-l8k72": Phase="Running", Reason="", readiness=true. Elapsed: 5.62347ms
Nov  8 12:37:53.182: INFO: Pod "adopt-release-l8k72": Phase="Running", Reason="", readiness=true. Elapsed: 2.014717244s
Nov  8 12:37:53.182: INFO: Pod "adopt-release-l8k72" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod
Nov  8 12:37:53.715: INFO: Successfully updated pod "adopt-release-l8k72"
STEP: Checking that the Job releases the Pod
Nov  8 12:37:53.715: INFO: Waiting up to 15m0s for pod "adopt-release-l8k72" in namespace "job-8408" to be "released"
Nov  8 12:37:53.721: INFO: Pod "adopt-release-l8k72": Phase="Running", Reason="", readiness=true. Elapsed: 5.494089ms
Nov  8 12:37:55.734: INFO: Pod "adopt-release-l8k72": Phase="Running", Reason="", readiness=true. Elapsed: 2.018812969s
Nov  8 12:37:55.734: INFO: Pod "adopt-release-l8k72" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Nov  8 12:37:55.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-8408" for this suite.

â€¢ [SLOW TEST:7.275 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]","total":356,"completed":123,"skipped":2053,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:37:55.753: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-582
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Nov  8 12:37:55.929: INFO: Waiting up to 5m0s for pod "security-context-4618980f-067a-4053-bb02-dd17373ab940" in namespace "security-context-582" to be "Succeeded or Failed"
Nov  8 12:37:55.933: INFO: Pod "security-context-4618980f-067a-4053-bb02-dd17373ab940": Phase="Pending", Reason="", readiness=false. Elapsed: 4.777683ms
Nov  8 12:37:57.944: INFO: Pod "security-context-4618980f-067a-4053-bb02-dd17373ab940": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015906868s
Nov  8 12:37:59.953: INFO: Pod "security-context-4618980f-067a-4053-bb02-dd17373ab940": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023981617s
STEP: Saw pod success
Nov  8 12:37:59.953: INFO: Pod "security-context-4618980f-067a-4053-bb02-dd17373ab940" satisfied condition "Succeeded or Failed"
Nov  8 12:37:59.958: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod security-context-4618980f-067a-4053-bb02-dd17373ab940 container test-container: <nil>
STEP: delete the pod
Nov  8 12:37:59.986: INFO: Waiting for pod security-context-4618980f-067a-4053-bb02-dd17373ab940 to disappear
Nov  8 12:37:59.991: INFO: Pod security-context-4618980f-067a-4053-bb02-dd17373ab940 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Nov  8 12:37:59.991: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-582" for this suite.
â€¢{"msg":"PASSED [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":124,"skipped":2062,"failed":0}
SSSS
------------------------------
[sig-architecture] Conformance Tests 
  should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:00.008: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename conformance-tests
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in conformance-tests-5008
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
STEP: Getting node addresses
Nov  8 12:38:00.204: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:188
Nov  8 12:38:00.224: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "conformance-tests-5008" for this suite.
â€¢{"msg":"PASSED [sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]","total":356,"completed":125,"skipped":2066,"failed":0}
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:00.244: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1105
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:38:00.714: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:38:03.755: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the crd webhook via the AdmissionRegistration API
STEP: Creating a custom resource definition that should be denied by the webhook
Nov  8 12:38:03.847: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:38:03.957: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1105" for this suite.
STEP: Destroying namespace "webhook-1105-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]","total":356,"completed":126,"skipped":2070,"failed":0}

------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces 
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:04.032: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-625
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:04.197: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename disruption-2
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2-8790
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: listing a collection of PDBs across all namespaces
STEP: listing a collection of PDBs in namespace disruption-625
STEP: deleting a collection of PDBs
STEP: Waiting for the PDB collection to be deleted
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:188
Nov  8 12:38:04.526: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2-8790" for this suite.
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Nov  8 12:38:04.547: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-625" for this suite.
â€¢{"msg":"PASSED [sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]","total":356,"completed":127,"skipped":2070,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:04.566: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-1187
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:38:04.761: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ba3dbb3e-d693-4407-bae3-7ae1b6d3851e", Controller:(*bool)(0xc002d57e16), BlockOwnerDeletion:(*bool)(0xc002d57e17)}}
Nov  8 12:38:04.772: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"a7c280ac-546c-4c46-be55-3e88bf571072", Controller:(*bool)(0xc001358de6), BlockOwnerDeletion:(*bool)(0xc001358de7)}}
Nov  8 12:38:04.782: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"d7ab4ab8-7747-4e39-a2bd-18882e52542b", Controller:(*bool)(0xc00135923e), BlockOwnerDeletion:(*bool)(0xc00135923f)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Nov  8 12:38:09.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-1187" for this suite.

â€¢ [SLOW TEST:5.257 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]","total":356,"completed":128,"skipped":2093,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:09.823: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7329
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-5dc2aa27-e9e7-4945-8175-5adb253bc9d6
STEP: Creating a pod to test consume configMaps
Nov  8 12:38:09.992: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-3b4cfc90-d729-4c4a-923a-8d9794191ef9" in namespace "projected-7329" to be "Succeeded or Failed"
Nov  8 12:38:09.999: INFO: Pod "pod-projected-configmaps-3b4cfc90-d729-4c4a-923a-8d9794191ef9": Phase="Pending", Reason="", readiness=false. Elapsed: 6.848102ms
Nov  8 12:38:12.011: INFO: Pod "pod-projected-configmaps-3b4cfc90-d729-4c4a-923a-8d9794191ef9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019391521s
Nov  8 12:38:14.025: INFO: Pod "pod-projected-configmaps-3b4cfc90-d729-4c4a-923a-8d9794191ef9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033027561s
STEP: Saw pod success
Nov  8 12:38:14.025: INFO: Pod "pod-projected-configmaps-3b4cfc90-d729-4c4a-923a-8d9794191ef9" satisfied condition "Succeeded or Failed"
Nov  8 12:38:14.031: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-projected-configmaps-3b4cfc90-d729-4c4a-923a-8d9794191ef9 container agnhost-container: <nil>
STEP: delete the pod
Nov  8 12:38:14.063: INFO: Waiting for pod pod-projected-configmaps-3b4cfc90-d729-4c4a-923a-8d9794191ef9 to disappear
Nov  8 12:38:14.068: INFO: Pod pod-projected-configmaps-3b4cfc90-d729-4c4a-923a-8d9794191ef9 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Nov  8 12:38:14.068: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7329" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":129,"skipped":2102,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:14.098: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2569
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Nov  8 12:38:14.281: INFO: The status of Pod labelsupdatef9060a3a-48f8-4941-ac40-4488fe1ed45a is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:38:16.295: INFO: The status of Pod labelsupdatef9060a3a-48f8-4941-ac40-4488fe1ed45a is Running (Ready = true)
Nov  8 12:38:16.829: INFO: Successfully updated pod "labelsupdatef9060a3a-48f8-4941-ac40-4488fe1ed45a"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Nov  8 12:38:20.875: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2569" for this suite.

â€¢ [SLOW TEST:6.798 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":130,"skipped":2115,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:20.900: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2721
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 12:38:21.060: INFO: Waiting up to 5m0s for pod "downwardapi-volume-70f43714-92aa-4639-b25d-87abe93ddd3f" in namespace "downward-api-2721" to be "Succeeded or Failed"
Nov  8 12:38:21.074: INFO: Pod "downwardapi-volume-70f43714-92aa-4639-b25d-87abe93ddd3f": Phase="Pending", Reason="", readiness=false. Elapsed: 13.647035ms
Nov  8 12:38:23.087: INFO: Pod "downwardapi-volume-70f43714-92aa-4639-b25d-87abe93ddd3f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026679158s
Nov  8 12:38:25.098: INFO: Pod "downwardapi-volume-70f43714-92aa-4639-b25d-87abe93ddd3f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.038388756s
STEP: Saw pod success
Nov  8 12:38:25.098: INFO: Pod "downwardapi-volume-70f43714-92aa-4639-b25d-87abe93ddd3f" satisfied condition "Succeeded or Failed"
Nov  8 12:38:25.104: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downwardapi-volume-70f43714-92aa-4639-b25d-87abe93ddd3f container client-container: <nil>
STEP: delete the pod
Nov  8 12:38:25.149: INFO: Waiting for pod downwardapi-volume-70f43714-92aa-4639-b25d-87abe93ddd3f to disappear
Nov  8 12:38:25.154: INFO: Pod downwardapi-volume-70f43714-92aa-4639-b25d-87abe93ddd3f no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Nov  8 12:38:25.154: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2721" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]","total":356,"completed":131,"skipped":2144,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:25.171: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-1889
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test env composition
Nov  8 12:38:25.324: INFO: Waiting up to 5m0s for pod "var-expansion-5f647ea3-ad04-482e-8ea6-8a91435aa20b" in namespace "var-expansion-1889" to be "Succeeded or Failed"
Nov  8 12:38:25.332: INFO: Pod "var-expansion-5f647ea3-ad04-482e-8ea6-8a91435aa20b": Phase="Pending", Reason="", readiness=false. Elapsed: 7.841714ms
Nov  8 12:38:27.341: INFO: Pod "var-expansion-5f647ea3-ad04-482e-8ea6-8a91435aa20b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017412069s
Nov  8 12:38:29.354: INFO: Pod "var-expansion-5f647ea3-ad04-482e-8ea6-8a91435aa20b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029477016s
STEP: Saw pod success
Nov  8 12:38:29.354: INFO: Pod "var-expansion-5f647ea3-ad04-482e-8ea6-8a91435aa20b" satisfied condition "Succeeded or Failed"
Nov  8 12:38:29.359: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod var-expansion-5f647ea3-ad04-482e-8ea6-8a91435aa20b container dapi-container: <nil>
STEP: delete the pod
Nov  8 12:38:29.385: INFO: Waiting for pod var-expansion-5f647ea3-ad04-482e-8ea6-8a91435aa20b to disappear
Nov  8 12:38:29.390: INFO: Pod var-expansion-5f647ea3-ad04-482e-8ea6-8a91435aa20b no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Nov  8 12:38:29.390: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-1889" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]","total":356,"completed":132,"skipped":2156,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:29.405: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6403
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Nov  8 12:38:29.566: INFO: Waiting up to 5m0s for pod "pod-22174291-5d7b-42e4-a183-d2e5a7d6400b" in namespace "emptydir-6403" to be "Succeeded or Failed"
Nov  8 12:38:29.573: INFO: Pod "pod-22174291-5d7b-42e4-a183-d2e5a7d6400b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.952789ms
Nov  8 12:38:31.589: INFO: Pod "pod-22174291-5d7b-42e4-a183-d2e5a7d6400b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022903925s
Nov  8 12:38:33.601: INFO: Pod "pod-22174291-5d7b-42e4-a183-d2e5a7d6400b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.034729088s
STEP: Saw pod success
Nov  8 12:38:33.601: INFO: Pod "pod-22174291-5d7b-42e4-a183-d2e5a7d6400b" satisfied condition "Succeeded or Failed"
Nov  8 12:38:33.606: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-22174291-5d7b-42e4-a183-d2e5a7d6400b container test-container: <nil>
STEP: delete the pod
Nov  8 12:38:33.638: INFO: Waiting for pod pod-22174291-5d7b-42e4-a183-d2e5a7d6400b to disappear
Nov  8 12:38:33.645: INFO: Pod pod-22174291-5d7b-42e4-a183-d2e5a7d6400b no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 12:38:33.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6403" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":133,"skipped":2171,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:33.666: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9977
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicaSet
STEP: Ensuring resource quota status captures replicaset creation
STEP: Deleting a ReplicaSet
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Nov  8 12:38:44.885: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9977" for this suite.

â€¢ [SLOW TEST:11.236 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]","total":356,"completed":134,"skipped":2219,"failed":0}
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:44.903: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8846
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Nov  8 12:38:45.050: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 create -f -'
Nov  8 12:38:45.791: INFO: stderr: ""
Nov  8 12:38:45.791: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Nov  8 12:38:45.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Nov  8 12:38:45.854: INFO: stderr: ""
Nov  8 12:38:45.854: INFO: stdout: "update-demo-nautilus-8fxrk update-demo-nautilus-97dsn "
Nov  8 12:38:45.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods update-demo-nautilus-8fxrk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Nov  8 12:38:45.916: INFO: stderr: ""
Nov  8 12:38:45.916: INFO: stdout: ""
Nov  8 12:38:45.916: INFO: update-demo-nautilus-8fxrk is created but not running
Nov  8 12:38:50.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Nov  8 12:38:50.987: INFO: stderr: ""
Nov  8 12:38:50.987: INFO: stdout: "update-demo-nautilus-8fxrk update-demo-nautilus-97dsn "
Nov  8 12:38:50.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods update-demo-nautilus-8fxrk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Nov  8 12:38:51.053: INFO: stderr: ""
Nov  8 12:38:51.053: INFO: stdout: "true"
Nov  8 12:38:51.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods update-demo-nautilus-8fxrk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Nov  8 12:38:51.115: INFO: stderr: ""
Nov  8 12:38:51.115: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Nov  8 12:38:51.115: INFO: validating pod update-demo-nautilus-8fxrk
Nov  8 12:38:51.184: INFO: got data: {
  "image": "nautilus.jpg"
}

Nov  8 12:38:51.184: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Nov  8 12:38:51.184: INFO: update-demo-nautilus-8fxrk is verified up and running
Nov  8 12:38:51.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods update-demo-nautilus-97dsn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Nov  8 12:38:51.249: INFO: stderr: ""
Nov  8 12:38:51.249: INFO: stdout: "true"
Nov  8 12:38:51.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods update-demo-nautilus-97dsn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Nov  8 12:38:51.306: INFO: stderr: ""
Nov  8 12:38:51.306: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Nov  8 12:38:51.306: INFO: validating pod update-demo-nautilus-97dsn
Nov  8 12:38:51.377: INFO: got data: {
  "image": "nautilus.jpg"
}

Nov  8 12:38:51.377: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Nov  8 12:38:51.377: INFO: update-demo-nautilus-97dsn is verified up and running
STEP: scaling down the replication controller
Nov  8 12:38:51.378: INFO: scanned /root for discovery docs: <nil>
Nov  8 12:38:51.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Nov  8 12:38:52.469: INFO: stderr: ""
Nov  8 12:38:52.469: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Nov  8 12:38:52.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Nov  8 12:38:52.524: INFO: stderr: ""
Nov  8 12:38:52.524: INFO: stdout: "update-demo-nautilus-97dsn "
Nov  8 12:38:52.525: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods update-demo-nautilus-97dsn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Nov  8 12:38:52.584: INFO: stderr: ""
Nov  8 12:38:52.584: INFO: stdout: "true"
Nov  8 12:38:52.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods update-demo-nautilus-97dsn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Nov  8 12:38:52.639: INFO: stderr: ""
Nov  8 12:38:52.639: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Nov  8 12:38:52.639: INFO: validating pod update-demo-nautilus-97dsn
Nov  8 12:38:52.648: INFO: got data: {
  "image": "nautilus.jpg"
}

Nov  8 12:38:52.648: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Nov  8 12:38:52.648: INFO: update-demo-nautilus-97dsn is verified up and running
STEP: scaling up the replication controller
Nov  8 12:38:52.649: INFO: scanned /root for discovery docs: <nil>
Nov  8 12:38:52.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Nov  8 12:38:53.728: INFO: stderr: ""
Nov  8 12:38:53.728: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Nov  8 12:38:53.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Nov  8 12:38:53.793: INFO: stderr: ""
Nov  8 12:38:53.793: INFO: stdout: "update-demo-nautilus-97dsn update-demo-nautilus-fkvfh "
Nov  8 12:38:53.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods update-demo-nautilus-97dsn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Nov  8 12:38:53.851: INFO: stderr: ""
Nov  8 12:38:53.851: INFO: stdout: "true"
Nov  8 12:38:53.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods update-demo-nautilus-97dsn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Nov  8 12:38:53.910: INFO: stderr: ""
Nov  8 12:38:53.910: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Nov  8 12:38:53.910: INFO: validating pod update-demo-nautilus-97dsn
Nov  8 12:38:53.919: INFO: got data: {
  "image": "nautilus.jpg"
}

Nov  8 12:38:53.919: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Nov  8 12:38:53.919: INFO: update-demo-nautilus-97dsn is verified up and running
Nov  8 12:38:53.919: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods update-demo-nautilus-fkvfh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Nov  8 12:38:53.978: INFO: stderr: ""
Nov  8 12:38:53.978: INFO: stdout: "true"
Nov  8 12:38:53.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods update-demo-nautilus-fkvfh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Nov  8 12:38:54.035: INFO: stderr: ""
Nov  8 12:38:54.035: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Nov  8 12:38:54.035: INFO: validating pod update-demo-nautilus-fkvfh
Nov  8 12:38:54.101: INFO: got data: {
  "image": "nautilus.jpg"
}

Nov  8 12:38:54.101: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Nov  8 12:38:54.101: INFO: update-demo-nautilus-fkvfh is verified up and running
STEP: using delete to clean up resources
Nov  8 12:38:54.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 delete --grace-period=0 --force -f -'
Nov  8 12:38:54.168: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Nov  8 12:38:54.168: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Nov  8 12:38:54.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get rc,svc -l name=update-demo --no-headers'
Nov  8 12:38:54.239: INFO: stderr: "No resources found in kubectl-8846 namespace.\n"
Nov  8 12:38:54.239: INFO: stdout: ""
Nov  8 12:38:54.239: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8846 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Nov  8 12:38:54.299: INFO: stderr: ""
Nov  8 12:38:54.299: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 12:38:54.299: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8846" for this suite.

â€¢ [SLOW TEST:9.422 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should scale a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]","total":356,"completed":135,"skipped":2224,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:54.325: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5362
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Pod
STEP: Reading file content from the nginx-container
Nov  8 12:38:56.503: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-5362 PodName:pod-sharedvolume-2b46d1a8-7868-442f-b7a2-18ae898055e5 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 12:38:56.503: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:38:56.503: INFO: ExecWithOptions: Clientset creation
Nov  8 12:38:56.503: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/emptydir-5362/pods/pod-sharedvolume-2b46d1a8-7868-442f-b7a2-18ae898055e5/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Nov  8 12:38:56.698: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 12:38:56.698: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5362" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]","total":356,"completed":136,"skipped":2258,"failed":0}

------------------------------
[sig-apps] Job 
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:38:56.722: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-3627
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring job reaches completions
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Nov  8 12:39:08.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-3627" for this suite.

â€¢ [SLOW TEST:12.175 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]","total":356,"completed":137,"skipped":2258,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:39:08.896: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-635
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a ReplicaSet
STEP: Verify that the required pods have come up
Nov  8 12:39:09.051: INFO: Pod name sample-pod: Found 0 pods out of 3
Nov  8 12:39:14.065: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running
Nov  8 12:39:14.069: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets
STEP: DeleteCollection of the ReplicaSets
STEP: After DeleteCollection verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Nov  8 12:39:14.085: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-635" for this suite.

â€¢ [SLOW TEST:5.209 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]","total":356,"completed":138,"skipped":2280,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:39:14.106: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6633
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:39:14.660: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:39:17.718: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a mutating webhook configuration
STEP: Updating a mutating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that should not be mutated
STEP: Patching a mutating webhook configuration's rules to include the create operation
STEP: Creating a configMap that should be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:39:17.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6633" for this suite.
STEP: Destroying namespace "webhook-6633-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]","total":356,"completed":139,"skipped":2304,"failed":0}
SSSSSS
------------------------------
[sig-scheduling] LimitRange 
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:39:18.057: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename limitrange
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in limitrange-3317
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a LimitRange
STEP: Setting up watch
STEP: Submitting a LimitRange
Nov  8 12:39:18.205: INFO: observed the limitRanges list
STEP: Verifying LimitRange creation was observed
STEP: Fetching the LimitRange to ensure it has proper values
Nov  8 12:39:18.215: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Nov  8 12:39:18.215: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements
STEP: Ensuring Pod has resource requirements applied from LimitRange
Nov  8 12:39:18.238: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Nov  8 12:39:18.238: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements
STEP: Ensuring Pod has merged resource requirements applied from LimitRange
Nov  8 12:39:18.272: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Nov  8 12:39:18.272: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources
STEP: Failing to create a Pod with more than max resources
STEP: Updating a LimitRange
STEP: Verifying LimitRange updating is effective
STEP: Creating a Pod with less than former min resources
STEP: Failing to create a Pod with more than max resources
STEP: Deleting a LimitRange
STEP: Verifying the LimitRange was deleted
Nov  8 12:39:25.337: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:188
Nov  8 12:39:25.350: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "limitrange-3317" for this suite.

â€¢ [SLOW TEST:7.313 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]","total":356,"completed":140,"skipped":2310,"failed":0}
SS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:39:25.370: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5514
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-d3bfbbc2-e0f6-41cf-9430-4b4b85892f5b
STEP: Creating a pod to test consume secrets
Nov  8 12:39:25.529: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-da07588d-59e4-440a-9de7-2cb5bc3d9ad1" in namespace "projected-5514" to be "Succeeded or Failed"
Nov  8 12:39:25.534: INFO: Pod "pod-projected-secrets-da07588d-59e4-440a-9de7-2cb5bc3d9ad1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.346141ms
Nov  8 12:39:27.543: INFO: Pod "pod-projected-secrets-da07588d-59e4-440a-9de7-2cb5bc3d9ad1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013712708s
Nov  8 12:39:29.556: INFO: Pod "pod-projected-secrets-da07588d-59e4-440a-9de7-2cb5bc3d9ad1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02670406s
STEP: Saw pod success
Nov  8 12:39:29.556: INFO: Pod "pod-projected-secrets-da07588d-59e4-440a-9de7-2cb5bc3d9ad1" satisfied condition "Succeeded or Failed"
Nov  8 12:39:29.564: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-projected-secrets-da07588d-59e4-440a-9de7-2cb5bc3d9ad1 container projected-secret-volume-test: <nil>
STEP: delete the pod
Nov  8 12:39:29.632: INFO: Waiting for pod pod-projected-secrets-da07588d-59e4-440a-9de7-2cb5bc3d9ad1 to disappear
Nov  8 12:39:29.637: INFO: Pod pod-projected-secrets-da07588d-59e4-440a-9de7-2cb5bc3d9ad1 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Nov  8 12:39:29.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5514" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":141,"skipped":2312,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:39:29.653: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-6338
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-6338
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-6338
Nov  8 12:39:29.830: INFO: Found 0 stateful pods, waiting for 1
Nov  8 12:39:39.843: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label
STEP: Getting /status
Nov  8 12:39:39.870: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status
Nov  8 12:39:39.883: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated
Nov  8 12:39:39.887: INFO: Observed &StatefulSet event: ADDED
Nov  8 12:39:39.887: INFO: Found Statefulset ss in namespace statefulset-6338 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Nov  8 12:39:39.887: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status
Nov  8 12:39:39.887: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Nov  8 12:39:39.895: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched
Nov  8 12:39:39.900: INFO: Observed &StatefulSet event: ADDED
Nov  8 12:39:39.900: INFO: Observed Statefulset ss in namespace statefulset-6338 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Nov  8 12:39:39.900: INFO: Observed &StatefulSet event: MODIFIED
Nov  8 12:39:39.900: INFO: Found Statefulset ss in namespace statefulset-6338 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Nov  8 12:39:39.900: INFO: Deleting all statefulset in ns statefulset-6338
Nov  8 12:39:39.905: INFO: Scaling statefulset ss to 0
Nov  8 12:39:49.932: INFO: Waiting for statefulset status.replicas updated to 0
Nov  8 12:39:49.937: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Nov  8 12:39:49.954: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-6338" for this suite.

â€¢ [SLOW TEST:20.316 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]","total":356,"completed":142,"skipped":2336,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:39:49.970: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9075
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Pod that fits quota
STEP: Ensuring ResourceQuota status captures the pod usage
STEP: Not allowing a pod to be created that exceeds remaining quota
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources)
STEP: Ensuring a pod cannot update its resource requirements
STEP: Ensuring attempts to update pod resource requirements did not change quota usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Nov  8 12:40:03.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9075" for this suite.

â€¢ [SLOW TEST:13.289 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]","total":356,"completed":143,"skipped":2346,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:40:03.259: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-9807
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:40:03.398: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Nov  8 12:40:07.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-9807 --namespace=crd-publish-openapi-9807 create -f -'
Nov  8 12:40:08.303: INFO: stderr: ""
Nov  8 12:40:08.303: INFO: stdout: "e2e-test-crd-publish-openapi-388-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Nov  8 12:40:08.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-9807 --namespace=crd-publish-openapi-9807 delete e2e-test-crd-publish-openapi-388-crds test-cr'
Nov  8 12:40:08.380: INFO: stderr: ""
Nov  8 12:40:08.380: INFO: stdout: "e2e-test-crd-publish-openapi-388-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Nov  8 12:40:08.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-9807 --namespace=crd-publish-openapi-9807 apply -f -'
Nov  8 12:40:08.939: INFO: stderr: ""
Nov  8 12:40:08.939: INFO: stdout: "e2e-test-crd-publish-openapi-388-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Nov  8 12:40:08.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-9807 --namespace=crd-publish-openapi-9807 delete e2e-test-crd-publish-openapi-388-crds test-cr'
Nov  8 12:40:09.016: INFO: stderr: ""
Nov  8 12:40:09.016: INFO: stdout: "e2e-test-crd-publish-openapi-388-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema
Nov  8 12:40:09.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-9807 explain e2e-test-crd-publish-openapi-388-crds'
Nov  8 12:40:09.171: INFO: stderr: ""
Nov  8 12:40:09.171: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-388-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:40:11.709: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-9807" for this suite.

â€¢ [SLOW TEST:8.484 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]","total":356,"completed":144,"skipped":2354,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:40:11.747: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5602
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-5602
[It] should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-5602
Nov  8 12:40:11.910: INFO: Found 0 stateful pods, waiting for 1
Nov  8 12:40:21.916: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
STEP: Patch a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Nov  8 12:40:21.954: INFO: Deleting all statefulset in ns statefulset-5602
Nov  8 12:40:21.957: INFO: Scaling statefulset ss to 0
Nov  8 12:40:31.993: INFO: Waiting for statefulset status.replicas updated to 0
Nov  8 12:40:31.997: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Nov  8 12:40:32.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5602" for this suite.

â€¢ [SLOW TEST:20.279 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should have a working scale subresource [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]","total":356,"completed":145,"skipped":2376,"failed":0}
SS
------------------------------
[sig-node] Pods 
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:40:32.027: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-3645
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Nov  8 12:40:32.179: INFO: The status of Pod pod-update-activedeadlineseconds-4633903f-27fa-45e6-a4aa-da9771624758 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:40:34.190: INFO: The status of Pod pod-update-activedeadlineseconds-4633903f-27fa-45e6-a4aa-da9771624758 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Nov  8 12:40:34.717: INFO: Successfully updated pod "pod-update-activedeadlineseconds-4633903f-27fa-45e6-a4aa-da9771624758"
Nov  8 12:40:34.717: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-4633903f-27fa-45e6-a4aa-da9771624758" in namespace "pods-3645" to be "terminated due to deadline exceeded"
Nov  8 12:40:34.721: INFO: Pod "pod-update-activedeadlineseconds-4633903f-27fa-45e6-a4aa-da9771624758": Phase="Running", Reason="", readiness=true. Elapsed: 4.267266ms
Nov  8 12:40:36.727: INFO: Pod "pod-update-activedeadlineseconds-4633903f-27fa-45e6-a4aa-da9771624758": Phase="Running", Reason="", readiness=true. Elapsed: 2.009947697s
Nov  8 12:40:38.736: INFO: Pod "pod-update-activedeadlineseconds-4633903f-27fa-45e6-a4aa-da9771624758": Phase="Running", Reason="", readiness=false. Elapsed: 4.018408979s
Nov  8 12:40:40.746: INFO: Pod "pod-update-activedeadlineseconds-4633903f-27fa-45e6-a4aa-da9771624758": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 6.028592463s
Nov  8 12:40:40.746: INFO: Pod "pod-update-activedeadlineseconds-4633903f-27fa-45e6-a4aa-da9771624758" satisfied condition "terminated due to deadline exceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Nov  8 12:40:40.746: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-3645" for this suite.

â€¢ [SLOW TEST:8.738 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]","total":356,"completed":146,"skipped":2378,"failed":0}
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:40:40.766: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9959
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:40:41.249: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:40:44.327: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting timeout (1s) shorter than webhook latency (5s)
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s)
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is longer than webhook latency
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is empty (defaulted to 10s in v1)
STEP: Registering slow webhook via the AdmissionRegistration API
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:40:56.743: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9959" for this suite.
STEP: Destroying namespace "webhook-9959-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:16.071 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]","total":356,"completed":147,"skipped":2382,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:40:56.837: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4559
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Nov  8 12:40:56.987: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: rename a version
STEP: check the new version name is served
STEP: check the old version name is removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:41:15.432: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4559" for this suite.

â€¢ [SLOW TEST:18.624 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]","total":356,"completed":148,"skipped":2402,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:41:15.461: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-3902
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Nov  8 12:41:15.660: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-3902" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]","total":356,"completed":149,"skipped":2426,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:41:15.690: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-8420
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:41:15.840: INFO: Got root ca configmap in namespace "svcaccounts-8420"
Nov  8 12:41:15.846: INFO: Deleted root ca configmap in namespace "svcaccounts-8420"
STEP: waiting for a new root ca configmap created
Nov  8 12:41:16.355: INFO: Recreated root ca configmap in namespace "svcaccounts-8420"
Nov  8 12:41:16.361: INFO: Updated root ca configmap in namespace "svcaccounts-8420"
STEP: waiting for the root ca configmap reconciled
Nov  8 12:41:16.881: INFO: Reconciled root ca configmap in namespace "svcaccounts-8420"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Nov  8 12:41:16.881: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-8420" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]","total":356,"completed":150,"skipped":2522,"failed":0}
S
------------------------------
[sig-network] Ingress API 
  should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:41:16.901: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename ingress
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingress-5588
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Nov  8 12:41:17.099: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Nov  8 12:41:17.107: INFO: starting watch
STEP: patching
STEP: updating
Nov  8 12:41:17.131: INFO: waiting for watch events with expected annotations
Nov  8 12:41:17.131: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:188
Nov  8 12:41:17.192: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingress-5588" for this suite.
â€¢{"msg":"PASSED [sig-network] Ingress API should support creating Ingress API operations [Conformance]","total":356,"completed":151,"skipped":2523,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:41:17.211: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2360
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-aa2fe24e-2ead-4815-8724-75f105d97d76 in namespace container-probe-2360
Nov  8 12:41:19.394: INFO: Started pod busybox-aa2fe24e-2ead-4815-8724-75f105d97d76 in namespace container-probe-2360
STEP: checking the pod's current state and verifying that restartCount is present
Nov  8 12:41:19.400: INFO: Initial restart count of pod busybox-aa2fe24e-2ead-4815-8724-75f105d97d76 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Nov  8 12:45:20.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2360" for this suite.

â€¢ [SLOW TEST:243.596 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":152,"skipped":2532,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:45:20.810: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-9068
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Nov  8 12:45:23.054: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Nov  8 12:45:25.074: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-9068" for this suite.
â€¢{"msg":"PASSED [sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]","total":356,"completed":153,"skipped":2546,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:45:25.093: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3658
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service nodeport-test with type=NodePort in namespace services-3658
STEP: creating replication controller nodeport-test in namespace services-3658
I1108 12:45:25.256589      22 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-3658, replica count: 2
Nov  8 12:45:28.307: INFO: Creating new exec pod
I1108 12:45:28.307086      22 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Nov  8 12:45:31.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-3658 exec execpodd66wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Nov  8 12:45:31.784: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Nov  8 12:45:31.784: INFO: stdout: "nodeport-test-tt254"
Nov  8 12:45:31.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-3658 exec execpodd66wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.120.2.5 80'
Nov  8 12:45:32.168: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.120.2.5 80\nConnection to 10.120.2.5 80 port [tcp/http] succeeded!\n"
Nov  8 12:45:32.168: INFO: stdout: ""
Nov  8 12:45:33.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-3658 exec execpodd66wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.120.2.5 80'
Nov  8 12:45:33.510: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.120.2.5 80\nConnection to 10.120.2.5 80 port [tcp/http] succeeded!\n"
Nov  8 12:45:33.510: INFO: stdout: "nodeport-test-r656c"
Nov  8 12:45:33.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-3658 exec execpodd66wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.53 32447'
Nov  8 12:45:33.914: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.53 32447\nConnection to 10.250.2.53 32447 port [tcp/*] succeeded!\n"
Nov  8 12:45:33.914: INFO: stdout: ""
Nov  8 12:45:34.914: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-3658 exec execpodd66wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.53 32447'
Nov  8 12:45:35.254: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.53 32447\nConnection to 10.250.2.53 32447 port [tcp/*] succeeded!\n"
Nov  8 12:45:35.254: INFO: stdout: "nodeport-test-tt254"
Nov  8 12:45:35.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-3658 exec execpodd66wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.170 32447'
Nov  8 12:45:35.605: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.170 32447\nConnection to 10.250.2.170 32447 port [tcp/*] succeeded!\n"
Nov  8 12:45:35.605: INFO: stdout: "nodeport-test-r656c"
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 12:45:35.605: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3658" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:10.538 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to create a functioning NodePort service [Conformance]","total":356,"completed":154,"skipped":2549,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:45:35.631: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-365
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota
Nov  8 12:45:35.790: INFO: Pod name sample-pod: Found 0 pods out of 1
Nov  8 12:45:40.800: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the replicaset Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Nov  8 12:45:40.839: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-365" for this suite.

â€¢ [SLOW TEST:5.232 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]","total":356,"completed":155,"skipped":2568,"failed":0}
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:45:40.864: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-4037
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Nov  8 12:45:41.056: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:45:43.070: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Nov  8 12:45:43.114: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:45:45.124: INFO: The status of Pod pod-with-prestop-http-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Nov  8 12:45:45.137: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Nov  8 12:45:45.143: INFO: Pod pod-with-prestop-http-hook still exists
Nov  8 12:45:47.143: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Nov  8 12:45:47.155: INFO: Pod pod-with-prestop-http-hook still exists
Nov  8 12:45:49.144: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Nov  8 12:45:49.153: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Nov  8 12:45:49.208: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-4037" for this suite.

â€¢ [SLOW TEST:8.366 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]","total":356,"completed":156,"skipped":2573,"failed":0}
[sig-node] Lease 
  lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Lease
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:45:49.229: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename lease-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in lease-test-2526
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Lease
  test/e2e/framework/framework.go:188
Nov  8 12:45:49.448: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "lease-test-2526" for this suite.
â€¢{"msg":"PASSED [sig-node] Lease lease API should be available [Conformance]","total":356,"completed":157,"skipped":2573,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:45:49.472: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8356
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 12:45:49.628: INFO: Waiting up to 5m0s for pod "downwardapi-volume-5798920b-228c-404c-b719-87843f6bb304" in namespace "downward-api-8356" to be "Succeeded or Failed"
Nov  8 12:45:49.637: INFO: Pod "downwardapi-volume-5798920b-228c-404c-b719-87843f6bb304": Phase="Pending", Reason="", readiness=false. Elapsed: 8.948754ms
Nov  8 12:45:51.646: INFO: Pod "downwardapi-volume-5798920b-228c-404c-b719-87843f6bb304": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018379413s
Nov  8 12:45:53.654: INFO: Pod "downwardapi-volume-5798920b-228c-404c-b719-87843f6bb304": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026414629s
STEP: Saw pod success
Nov  8 12:45:53.654: INFO: Pod "downwardapi-volume-5798920b-228c-404c-b719-87843f6bb304" satisfied condition "Succeeded or Failed"
Nov  8 12:45:53.661: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downwardapi-volume-5798920b-228c-404c-b719-87843f6bb304 container client-container: <nil>
STEP: delete the pod
Nov  8 12:45:53.736: INFO: Waiting for pod downwardapi-volume-5798920b-228c-404c-b719-87843f6bb304 to disappear
Nov  8 12:45:53.741: INFO: Pod downwardapi-volume-5798920b-228c-404c-b719-87843f6bb304 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Nov  8 12:45:53.741: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8356" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":158,"skipped":2640,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:45:53.759: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4964
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching services
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 12:45:53.916: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4964" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should find a service from listing all namespaces [Conformance]","total":356,"completed":159,"skipped":2674,"failed":0}
SSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run 
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:45:53.938: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1967
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Nov  8 12:45:54.087: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-1967 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Nov  8 12:45:54.156: INFO: stderr: ""
Nov  8 12:45:54.156: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run
Nov  8 12:45:54.156: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-1967 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "k8s.gcr.io/e2e-test-images/busybox:1.29-2"}]}} --dry-run=server'
Nov  8 12:45:54.730: INFO: stderr: ""
Nov  8 12:45:54.730: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Nov  8 12:45:54.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-1967 delete pods e2e-test-httpd-pod'
Nov  8 12:45:56.502: INFO: stderr: ""
Nov  8 12:45:56.502: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 12:45:56.502: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1967" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]","total":356,"completed":160,"skipped":2677,"failed":0}
SSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring 
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:45:56.525: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename endpointslicemirroring
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslicemirroring-7656
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
STEP: mirroring a new custom Endpoint
Nov  8 12:45:56.696: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint
STEP: mirroring deletion of a custom Endpoint
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:188
Nov  8 12:45:58.736: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslicemirroring-7656" for this suite.
â€¢{"msg":"PASSED [sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]","total":356,"completed":161,"skipped":2685,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:45:58.755: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4079
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 12:45:58.918: INFO: Waiting up to 5m0s for pod "downwardapi-volume-eab6ecab-829e-4149-b358-af694d18e103" in namespace "projected-4079" to be "Succeeded or Failed"
Nov  8 12:45:58.924: INFO: Pod "downwardapi-volume-eab6ecab-829e-4149-b358-af694d18e103": Phase="Pending", Reason="", readiness=false. Elapsed: 5.648437ms
Nov  8 12:46:00.933: INFO: Pod "downwardapi-volume-eab6ecab-829e-4149-b358-af694d18e103": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014904073s
Nov  8 12:46:02.946: INFO: Pod "downwardapi-volume-eab6ecab-829e-4149-b358-af694d18e103": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027958056s
STEP: Saw pod success
Nov  8 12:46:02.946: INFO: Pod "downwardapi-volume-eab6ecab-829e-4149-b358-af694d18e103" satisfied condition "Succeeded or Failed"
Nov  8 12:46:02.952: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downwardapi-volume-eab6ecab-829e-4149-b358-af694d18e103 container client-container: <nil>
STEP: delete the pod
Nov  8 12:46:02.981: INFO: Waiting for pod downwardapi-volume-eab6ecab-829e-4149-b358-af694d18e103 to disappear
Nov  8 12:46:02.986: INFO: Pod downwardapi-volume-eab6ecab-829e-4149-b358-af694d18e103 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Nov  8 12:46:02.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4079" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":162,"skipped":2738,"failed":0}
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:46:03.005: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9233
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:46:03.418: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:46:06.457: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API
STEP: create a configmap that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:46:06.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9233" for this suite.
STEP: Destroying namespace "webhook-9233-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]","total":356,"completed":163,"skipped":2740,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:46:06.688: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3720
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 12:46:06.844: INFO: Waiting up to 5m0s for pod "downwardapi-volume-090582d1-a5a0-4bb7-ae0c-9f44e108c1fd" in namespace "downward-api-3720" to be "Succeeded or Failed"
Nov  8 12:46:06.850: INFO: Pod "downwardapi-volume-090582d1-a5a0-4bb7-ae0c-9f44e108c1fd": Phase="Pending", Reason="", readiness=false. Elapsed: 5.594527ms
Nov  8 12:46:08.857: INFO: Pod "downwardapi-volume-090582d1-a5a0-4bb7-ae0c-9f44e108c1fd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012939009s
Nov  8 12:46:10.865: INFO: Pod "downwardapi-volume-090582d1-a5a0-4bb7-ae0c-9f44e108c1fd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021265502s
STEP: Saw pod success
Nov  8 12:46:10.865: INFO: Pod "downwardapi-volume-090582d1-a5a0-4bb7-ae0c-9f44e108c1fd" satisfied condition "Succeeded or Failed"
Nov  8 12:46:10.871: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downwardapi-volume-090582d1-a5a0-4bb7-ae0c-9f44e108c1fd container client-container: <nil>
STEP: delete the pod
Nov  8 12:46:10.897: INFO: Waiting for pod downwardapi-volume-090582d1-a5a0-4bb7-ae0c-9f44e108c1fd to disappear
Nov  8 12:46:10.902: INFO: Pod downwardapi-volume-090582d1-a5a0-4bb7-ae0c-9f44e108c1fd no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Nov  8 12:46:10.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3720" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":164,"skipped":2754,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:46:10.928: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-614
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption is created
Nov  8 12:46:11.107: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:46:13.119: INFO: The status of Pod pod-adoption is Running (Ready = true)
STEP: When a replication controller with a matching selector is created
STEP: Then the orphan pod is adopted
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Nov  8 12:46:14.148: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-614" for this suite.
â€¢{"msg":"PASSED [sig-apps] ReplicationController should adopt matching pods on creation [Conformance]","total":356,"completed":165,"skipped":2762,"failed":0}
SSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:46:14.169: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-7494
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replication controller my-hostname-basic-d5da9551-db90-4818-8eb5-42a77a978dcd
Nov  8 12:46:14.327: INFO: Pod name my-hostname-basic-d5da9551-db90-4818-8eb5-42a77a978dcd: Found 0 pods out of 1
Nov  8 12:46:19.335: INFO: Pod name my-hostname-basic-d5da9551-db90-4818-8eb5-42a77a978dcd: Found 1 pods out of 1
Nov  8 12:46:19.335: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-d5da9551-db90-4818-8eb5-42a77a978dcd" are running
Nov  8 12:46:19.341: INFO: Pod "my-hostname-basic-d5da9551-db90-4818-8eb5-42a77a978dcd-x9tbh" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-11-08 12:46:14 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-11-08 12:46:15 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-11-08 12:46:15 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-11-08 12:46:14 +0000 UTC Reason: Message:}])
Nov  8 12:46:19.341: INFO: Trying to dial the pod
Nov  8 12:46:24.402: INFO: Controller my-hostname-basic-d5da9551-db90-4818-8eb5-42a77a978dcd: Got expected result from replica 1 [my-hostname-basic-d5da9551-db90-4818-8eb5-42a77a978dcd-x9tbh]: "my-hostname-basic-d5da9551-db90-4818-8eb5-42a77a978dcd-x9tbh", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Nov  8 12:46:24.403: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-7494" for this suite.

â€¢ [SLOW TEST:10.253 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":166,"skipped":2769,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator 
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:46:24.423: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename aggregator
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in aggregator-2166
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:79
Nov  8 12:46:24.568: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the sample API server.
Nov  8 12:46:24.865: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
Nov  8 12:46:26.968: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Nov  8 12:46:28.976: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Nov  8 12:46:30.998: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Nov  8 12:46:32.980: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 46, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Nov  8 12:46:35.208: INFO: Waited 222.523246ms for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}'
STEP: List APIServices
Nov  8 12:46:35.630: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:69
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:188
Nov  8 12:46:35.890: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "aggregator-2166" for this suite.

â€¢ [SLOW TEST:11.485 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]","total":356,"completed":167,"skipped":2792,"failed":0}
S
------------------------------
[sig-network] EndpointSlice 
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:46:35.908: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-3874
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
STEP: referencing a single matching pod
STEP: referencing matching pods with named port
STEP: creating empty Endpoints and EndpointSlices for no matching Pods
STEP: recreating EndpointSlices after they've been deleted
Nov  8 12:46:56.206: INFO: EndpointSlice for Service endpointslice-3874/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Nov  8 12:47:06.235: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-3874" for this suite.

â€¢ [SLOW TEST:30.350 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]","total":356,"completed":168,"skipped":2793,"failed":0}
SSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:47:06.258: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6298
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Nov  8 12:47:06.431: INFO: The status of Pod labelsupdate10952b94-1027-4aba-9190-f0f62cdc7eeb is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:47:08.442: INFO: The status of Pod labelsupdate10952b94-1027-4aba-9190-f0f62cdc7eeb is Running (Ready = true)
Nov  8 12:47:08.983: INFO: Successfully updated pod "labelsupdate10952b94-1027-4aba-9190-f0f62cdc7eeb"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Nov  8 12:47:13.031: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6298" for this suite.

â€¢ [SLOW TEST:6.797 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":169,"skipped":2799,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose 
  should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:47:13.057: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8426
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Nov  8 12:47:13.206: INFO: namespace kubectl-8426
Nov  8 12:47:13.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8426 create -f -'
Nov  8 12:47:13.977: INFO: stderr: ""
Nov  8 12:47:13.977: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Nov  8 12:47:14.989: INFO: Selector matched 1 pods for map[app:agnhost]
Nov  8 12:47:14.989: INFO: Found 0 / 1
Nov  8 12:47:15.987: INFO: Selector matched 1 pods for map[app:agnhost]
Nov  8 12:47:15.987: INFO: Found 1 / 1
Nov  8 12:47:15.987: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Nov  8 12:47:15.992: INFO: Selector matched 1 pods for map[app:agnhost]
Nov  8 12:47:15.992: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Nov  8 12:47:15.992: INFO: wait on agnhost-primary startup in kubectl-8426 
Nov  8 12:47:15.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8426 logs agnhost-primary-7hztw agnhost-primary'
Nov  8 12:47:16.066: INFO: stderr: ""
Nov  8 12:47:16.066: INFO: stdout: "Paused\n"
STEP: exposing RC
Nov  8 12:47:16.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8426 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Nov  8 12:47:16.169: INFO: stderr: ""
Nov  8 12:47:16.169: INFO: stdout: "service/rm2 exposed\n"
Nov  8 12:47:16.175: INFO: Service rm2 in namespace kubectl-8426 found.
STEP: exposing service
Nov  8 12:47:18.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8426 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Nov  8 12:47:18.322: INFO: stderr: ""
Nov  8 12:47:18.322: INFO: stdout: "service/rm3 exposed\n"
Nov  8 12:47:18.328: INFO: Service rm3 in namespace kubectl-8426 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 12:47:20.343: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8426" for this suite.

â€¢ [SLOW TEST:7.312 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1249
    should create services for rc  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]","total":356,"completed":170,"skipped":2816,"failed":0}
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:47:20.368: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-895
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/apiextensions.k8s.io discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:47:20.538: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-895" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]","total":356,"completed":171,"skipped":2816,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Pods 
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:47:20.564: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-1360
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:47:20.731: INFO: The status of Pod server-envvars-bfbc51d8-bd8f-434b-94f4-b2b87513ac55 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:47:22.741: INFO: The status of Pod server-envvars-bfbc51d8-bd8f-434b-94f4-b2b87513ac55 is Running (Ready = true)
Nov  8 12:47:22.773: INFO: Waiting up to 5m0s for pod "client-envvars-df0d6304-8bb9-4eb3-b62c-567c6ab67fe9" in namespace "pods-1360" to be "Succeeded or Failed"
Nov  8 12:47:22.781: INFO: Pod "client-envvars-df0d6304-8bb9-4eb3-b62c-567c6ab67fe9": Phase="Pending", Reason="", readiness=false. Elapsed: 7.821142ms
Nov  8 12:47:24.792: INFO: Pod "client-envvars-df0d6304-8bb9-4eb3-b62c-567c6ab67fe9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018788939s
Nov  8 12:47:26.804: INFO: Pod "client-envvars-df0d6304-8bb9-4eb3-b62c-567c6ab67fe9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030905162s
STEP: Saw pod success
Nov  8 12:47:26.804: INFO: Pod "client-envvars-df0d6304-8bb9-4eb3-b62c-567c6ab67fe9" satisfied condition "Succeeded or Failed"
Nov  8 12:47:26.809: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod client-envvars-df0d6304-8bb9-4eb3-b62c-567c6ab67fe9 container env3cont: <nil>
STEP: delete the pod
Nov  8 12:47:26.839: INFO: Waiting for pod client-envvars-df0d6304-8bb9-4eb3-b62c-567c6ab67fe9 to disappear
Nov  8 12:47:26.845: INFO: Pod client-envvars-df0d6304-8bb9-4eb3-b62c-567c6ab67fe9 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Nov  8 12:47:26.845: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-1360" for this suite.

â€¢ [SLOW TEST:6.304 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]","total":356,"completed":172,"skipped":2826,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:47:26.872: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-4995
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:47:27.440: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:47:30.476: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:47:30.487: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Creating a v1 custom resource
STEP: Create a v2 custom resource
STEP: List CRs in v1
STEP: List CRs in v2
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:47:33.966: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-4995" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

â€¢ [SLOW TEST:7.162 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]","total":356,"completed":173,"skipped":2905,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:47:34.034: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2837
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 12:47:34.199: INFO: Waiting up to 5m0s for pod "downwardapi-volume-9b1d33be-3ac2-4ed7-b88c-5ff558574c98" in namespace "projected-2837" to be "Succeeded or Failed"
Nov  8 12:47:34.208: INFO: Pod "downwardapi-volume-9b1d33be-3ac2-4ed7-b88c-5ff558574c98": Phase="Pending", Reason="", readiness=false. Elapsed: 8.421952ms
Nov  8 12:47:36.220: INFO: Pod "downwardapi-volume-9b1d33be-3ac2-4ed7-b88c-5ff558574c98": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020232945s
Nov  8 12:47:38.232: INFO: Pod "downwardapi-volume-9b1d33be-3ac2-4ed7-b88c-5ff558574c98": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032856395s
STEP: Saw pod success
Nov  8 12:47:38.232: INFO: Pod "downwardapi-volume-9b1d33be-3ac2-4ed7-b88c-5ff558574c98" satisfied condition "Succeeded or Failed"
Nov  8 12:47:38.238: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downwardapi-volume-9b1d33be-3ac2-4ed7-b88c-5ff558574c98 container client-container: <nil>
STEP: delete the pod
Nov  8 12:47:38.268: INFO: Waiting for pod downwardapi-volume-9b1d33be-3ac2-4ed7-b88c-5ff558574c98 to disappear
Nov  8 12:47:38.275: INFO: Pod downwardapi-volume-9b1d33be-3ac2-4ed7-b88c-5ff558574c98 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Nov  8 12:47:38.275: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2837" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]","total":356,"completed":174,"skipped":2913,"failed":0}
SS
------------------------------
[sig-storage] Projected configMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:47:38.304: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8866
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with configMap that has name projected-configmap-test-upd-eeb57f25-f40c-47f0-974a-d3cc979345b1
STEP: Creating the pod
Nov  8 12:47:38.481: INFO: The status of Pod pod-projected-configmaps-8520abfc-6ad1-4f9c-bc9f-a44a3dcdc23c is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:47:40.490: INFO: The status of Pod pod-projected-configmaps-8520abfc-6ad1-4f9c-bc9f-a44a3dcdc23c is Running (Ready = true)
STEP: Updating configmap projected-configmap-test-upd-eeb57f25-f40c-47f0-974a-d3cc979345b1
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Nov  8 12:47:42.556: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8866" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":175,"skipped":2915,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:47:42.583: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-333
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-13dcaa8c-0d38-4f58-a54b-63933afe46c3
STEP: Creating a pod to test consume secrets
Nov  8 12:47:42.751: INFO: Waiting up to 5m0s for pod "pod-secrets-612fc671-0b38-4865-b1fe-166c25f316e2" in namespace "secrets-333" to be "Succeeded or Failed"
Nov  8 12:47:42.758: INFO: Pod "pod-secrets-612fc671-0b38-4865-b1fe-166c25f316e2": Phase="Pending", Reason="", readiness=false. Elapsed: 7.486358ms
Nov  8 12:47:44.770: INFO: Pod "pod-secrets-612fc671-0b38-4865-b1fe-166c25f316e2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018974345s
Nov  8 12:47:46.785: INFO: Pod "pod-secrets-612fc671-0b38-4865-b1fe-166c25f316e2": Phase="Pending", Reason="", readiness=false. Elapsed: 4.033968842s
Nov  8 12:47:48.794: INFO: Pod "pod-secrets-612fc671-0b38-4865-b1fe-166c25f316e2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.043794812s
STEP: Saw pod success
Nov  8 12:47:48.794: INFO: Pod "pod-secrets-612fc671-0b38-4865-b1fe-166c25f316e2" satisfied condition "Succeeded or Failed"
Nov  8 12:47:48.802: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-secrets-612fc671-0b38-4865-b1fe-166c25f316e2 container secret-volume-test: <nil>
STEP: delete the pod
Nov  8 12:47:48.828: INFO: Waiting for pod pod-secrets-612fc671-0b38-4865-b1fe-166c25f316e2 to disappear
Nov  8 12:47:48.833: INFO: Pod pod-secrets-612fc671-0b38-4865-b1fe-166c25f316e2 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Nov  8 12:47:48.833: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-333" for this suite.

â€¢ [SLOW TEST:6.274 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":176,"skipped":2929,"failed":0}
SSSSSSS
------------------------------
[sig-node] Pods 
  should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:47:48.857: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2106
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Nov  8 12:47:49.039: INFO: The status of Pod pod-update-695f7102-6636-4aea-b051-6f1b84254245 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:47:51.049: INFO: The status of Pod pod-update-695f7102-6636-4aea-b051-6f1b84254245 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Nov  8 12:47:51.588: INFO: Successfully updated pod "pod-update-695f7102-6636-4aea-b051-6f1b84254245"
STEP: verifying the updated pod is in kubernetes
Nov  8 12:47:51.601: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Nov  8 12:47:51.601: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2106" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should be updated [NodeConformance] [Conformance]","total":356,"completed":177,"skipped":2936,"failed":0}
SS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:47:51.622: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-661
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-da99b84b-dd27-4df7-9bee-653b275e0dcc
STEP: Creating a pod to test consume secrets
Nov  8 12:47:51.790: INFO: Waiting up to 5m0s for pod "pod-secrets-30cd3c31-b157-44a0-b752-fdefddab13f8" in namespace "secrets-661" to be "Succeeded or Failed"
Nov  8 12:47:51.800: INFO: Pod "pod-secrets-30cd3c31-b157-44a0-b752-fdefddab13f8": Phase="Pending", Reason="", readiness=false. Elapsed: 9.789135ms
Nov  8 12:47:53.815: INFO: Pod "pod-secrets-30cd3c31-b157-44a0-b752-fdefddab13f8": Phase="Running", Reason="", readiness=false. Elapsed: 2.024918352s
Nov  8 12:47:55.827: INFO: Pod "pod-secrets-30cd3c31-b157-44a0-b752-fdefddab13f8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.037287967s
STEP: Saw pod success
Nov  8 12:47:55.827: INFO: Pod "pod-secrets-30cd3c31-b157-44a0-b752-fdefddab13f8" satisfied condition "Succeeded or Failed"
Nov  8 12:47:55.833: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-secrets-30cd3c31-b157-44a0-b752-fdefddab13f8 container secret-volume-test: <nil>
STEP: delete the pod
Nov  8 12:47:55.873: INFO: Waiting for pod pod-secrets-30cd3c31-b157-44a0-b752-fdefddab13f8 to disappear
Nov  8 12:47:55.880: INFO: Pod pod-secrets-30cd3c31-b157-44a0-b752-fdefddab13f8 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Nov  8 12:47:55.880: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-661" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":178,"skipped":2938,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:47:55.905: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9608
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating an Endpoint
STEP: waiting for available Endpoint
STEP: listing all Endpoints
STEP: updating the Endpoint
STEP: fetching the Endpoint
STEP: patching the Endpoint
STEP: fetching the Endpoint
STEP: deleting the Endpoint by Collection
STEP: waiting for Endpoint deletion
STEP: fetching the Endpoint
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 12:47:56.223: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9608" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should test the lifecycle of an Endpoint [Conformance]","total":356,"completed":179,"skipped":2952,"failed":0}
SS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:47:56.244: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2808
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-7a48f13e-c5f5-4682-afa9-bd020c0b2b05
STEP: Creating a pod to test consume secrets
Nov  8 12:47:56.413: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-cfc2c6c7-0017-4d08-a1fb-a32ac023901e" in namespace "projected-2808" to be "Succeeded or Failed"
Nov  8 12:47:56.458: INFO: Pod "pod-projected-secrets-cfc2c6c7-0017-4d08-a1fb-a32ac023901e": Phase="Pending", Reason="", readiness=false. Elapsed: 45.128578ms
Nov  8 12:47:58.471: INFO: Pod "pod-projected-secrets-cfc2c6c7-0017-4d08-a1fb-a32ac023901e": Phase="Running", Reason="", readiness=true. Elapsed: 2.057678311s
Nov  8 12:48:00.484: INFO: Pod "pod-projected-secrets-cfc2c6c7-0017-4d08-a1fb-a32ac023901e": Phase="Running", Reason="", readiness=false. Elapsed: 4.070347985s
Nov  8 12:48:02.500: INFO: Pod "pod-projected-secrets-cfc2c6c7-0017-4d08-a1fb-a32ac023901e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.086672155s
STEP: Saw pod success
Nov  8 12:48:02.500: INFO: Pod "pod-projected-secrets-cfc2c6c7-0017-4d08-a1fb-a32ac023901e" satisfied condition "Succeeded or Failed"
Nov  8 12:48:02.506: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-projected-secrets-cfc2c6c7-0017-4d08-a1fb-a32ac023901e container projected-secret-volume-test: <nil>
STEP: delete the pod
Nov  8 12:48:02.536: INFO: Waiting for pod pod-projected-secrets-cfc2c6c7-0017-4d08-a1fb-a32ac023901e to disappear
Nov  8 12:48:02.541: INFO: Pod pod-projected-secrets-cfc2c6c7-0017-4d08-a1fb-a32ac023901e no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Nov  8 12:48:02.541: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2808" for this suite.

â€¢ [SLOW TEST:6.321 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":180,"skipped":2954,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace 
  should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:48:02.566: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3059
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1574
[It] should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Nov  8 12:48:02.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3059 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Nov  8 12:48:02.791: INFO: stderr: ""
Nov  8 12:48:02.791: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running
STEP: verifying the pod e2e-test-httpd-pod was created
Nov  8 12:48:07.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3059 get pod e2e-test-httpd-pod -o json'
Nov  8 12:48:07.927: INFO: stderr: ""
Nov  8 12:48:07.927: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"kubernetes.io/psp\": \"e2e-test-privileged-psp\"\n        },\n        \"creationTimestamp\": \"2022-11-08T12:48:02Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-3059\",\n        \"resourceVersion\": \"23172\",\n        \"uid\": \"e83d11de-f8bc-4b99-9519-b401a5c511e2\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"env\": [\n                    {\n                        \"name\": \"KUBERNETES_SERVICE_HOST\",\n                        \"value\": \"api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io\"\n                    }\n                ],\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-w7thv\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-w7thv\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-11-08T12:48:02Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-11-08T12:48:03Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-11-08T12:48:03Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-11-08T12:48:02Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://797c57b53d2d8ceaa3c0b043eee1bfc17d911ca6aa7b51a6d0aa498b0d21978e\",\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imageID\": \"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2022-11-08T12:48:03Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.250.2.53\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.96.1.53\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.96.1.53\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2022-11-08T12:48:02Z\"\n    }\n}\n"
STEP: replace the image in the pod
Nov  8 12:48:07.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3059 replace -f -'
Nov  8 12:48:08.771: INFO: stderr: ""
Nov  8 12:48:08.771: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/busybox:1.29-2
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1578
Nov  8 12:48:08.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3059 delete pods e2e-test-httpd-pod'
Nov  8 12:48:10.885: INFO: stderr: ""
Nov  8 12:48:10.885: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 12:48:10.885: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3059" for this suite.

â€¢ [SLOW TEST:8.339 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1571
    should update a single-container pod's image  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]","total":356,"completed":181,"skipped":2981,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:48:10.905: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-2841
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override all
Nov  8 12:48:11.081: INFO: Waiting up to 5m0s for pod "client-containers-31769ddd-0973-46ee-82ea-db2676f80b81" in namespace "containers-2841" to be "Succeeded or Failed"
Nov  8 12:48:11.088: INFO: Pod "client-containers-31769ddd-0973-46ee-82ea-db2676f80b81": Phase="Pending", Reason="", readiness=false. Elapsed: 6.959244ms
Nov  8 12:48:13.101: INFO: Pod "client-containers-31769ddd-0973-46ee-82ea-db2676f80b81": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019517828s
Nov  8 12:48:15.113: INFO: Pod "client-containers-31769ddd-0973-46ee-82ea-db2676f80b81": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031539702s
STEP: Saw pod success
Nov  8 12:48:15.113: INFO: Pod "client-containers-31769ddd-0973-46ee-82ea-db2676f80b81" satisfied condition "Succeeded or Failed"
Nov  8 12:48:15.118: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod client-containers-31769ddd-0973-46ee-82ea-db2676f80b81 container agnhost-container: <nil>
STEP: delete the pod
Nov  8 12:48:15.151: INFO: Waiting for pod client-containers-31769ddd-0973-46ee-82ea-db2676f80b81 to disappear
Nov  8 12:48:15.168: INFO: Pod client-containers-31769ddd-0973-46ee-82ea-db2676f80b81 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Nov  8 12:48:15.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-2841" for this suite.
â€¢{"msg":"PASSED [sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]","total":356,"completed":182,"skipped":2992,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:48:15.190: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-3961
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Nov  8 12:48:15.424: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 12:48:15.424: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 12:48:16.451: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 12:48:16.451: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 12:48:17.449: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Nov  8 12:48:17.449: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
STEP: listing all DeamonSets
STEP: DeleteCollection of the DaemonSets
STEP: Verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
Nov  8 12:48:17.485: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23304"},"items":null}

Nov  8 12:48:17.493: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23304"},"items":[{"metadata":{"name":"daemon-set-52xd9","generateName":"daemon-set-","namespace":"daemonsets-3961","uid":"b70d1983-a298-47d5-84a5-8c8fcd16087d","resourceVersion":"23299","creationTimestamp":"2022-11-08T12:48:15Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"7b21ab82-9cca-46d8-898b-b0c23d1e7c71","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-11-08T12:48:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7b21ab82-9cca-46d8-898b-b0c23d1e7c71\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-11-08T12:48:17Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.0.15\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-crl69","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"env":[{"name":"KUBERNETES_SERVICE_HOST","value":"api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-crl69","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:15Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:17Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:17Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:15Z"}],"hostIP":"10.250.2.170","podIP":"10.96.0.15","podIPs":[{"ip":"10.96.0.15"}],"startTime":"2022-11-08T12:48:15Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-11-08T12:48:16Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://bdcbb5fbf5156e5c0cc8dc2833280f45a390b76cdc8e905c04678eb2054e13eb","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-7pdf8","generateName":"daemon-set-","namespace":"daemonsets-3961","uid":"b86b085a-4e5c-416d-a693-ec70b172c137","resourceVersion":"23296","creationTimestamp":"2022-11-08T12:48:15Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"7b21ab82-9cca-46d8-898b-b0c23d1e7c71","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-11-08T12:48:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7b21ab82-9cca-46d8-898b-b0c23d1e7c71\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-11-08T12:48:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.1.70\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9kvq9","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"env":[{"name":"KUBERNETES_SERVICE_HOST","value":"api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9kvq9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:15Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:16Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:16Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:15Z"}],"hostIP":"10.250.2.53","podIP":"10.96.1.70","podIPs":[{"ip":"10.96.1.70"}],"startTime":"2022-11-08T12:48:15Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-11-08T12:48:16Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://8137d037f80f353a664a6206b23e8612eb039da2a59d18976e927d50834924a1","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-tx4q9","generateName":"daemon-set-","namespace":"daemonsets-3961","uid":"b2a44569-f0c8-4be2-9277-ae9276e48c8c","resourceVersion":"23294","creationTimestamp":"2022-11-08T12:48:15Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"7b21ab82-9cca-46d8-898b-b0c23d1e7c71","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-11-08T12:48:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7b21ab82-9cca-46d8-898b-b0c23d1e7c71\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-11-08T12:48:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.3.156\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hmvqt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"env":[{"name":"KUBERNETES_SERVICE_HOST","value":"api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hmvqt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:15Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:16Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:16Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:15Z"}],"hostIP":"10.250.3.16","podIP":"10.96.3.156","podIPs":[{"ip":"10.96.3.156"}],"startTime":"2022-11-08T12:48:15Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-11-08T12:48:16Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://3240bef16f2857c6c8fb05bf0cd41a6e665d84eed06123683c8ee5129beee1eb","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-zhbqb","generateName":"daemon-set-","namespace":"daemonsets-3961","uid":"4b73b0a8-b2ef-40ec-8ef4-4e660adcee2c","resourceVersion":"23300","creationTimestamp":"2022-11-08T12:48:15Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"7b21ab82-9cca-46d8-898b-b0c23d1e7c71","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-11-08T12:48:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7b21ab82-9cca-46d8-898b-b0c23d1e7c71\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-11-08T12:48:17Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.2.3\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-k2p4s","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"env":[{"name":"KUBERNETES_SERVICE_HOST","value":"api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-k2p4s","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:15Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:17Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:17Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-11-08T12:48:15Z"}],"hostIP":"10.250.2.17","podIP":"10.96.2.3","podIPs":[{"ip":"10.96.2.3"}],"startTime":"2022-11-08T12:48:15Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-11-08T12:48:16Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://ccd79a75d685eb826a1ed6178f0b47a039d14a8ff7b94adae42dc4f1c9dbe233","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Nov  8 12:48:17.546: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-3961" for this suite.
â€¢{"msg":"PASSED [sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]","total":356,"completed":183,"skipped":3015,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation 
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:48:17.566: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-9852
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:48:17.732: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-ebe7fdd3-b5f2-482b-b1f6-530321764bb1" in namespace "security-context-test-9852" to be "Succeeded or Failed"
Nov  8 12:48:17.751: INFO: Pod "alpine-nnp-false-ebe7fdd3-b5f2-482b-b1f6-530321764bb1": Phase="Pending", Reason="", readiness=false. Elapsed: 19.301032ms
Nov  8 12:48:19.761: INFO: Pod "alpine-nnp-false-ebe7fdd3-b5f2-482b-b1f6-530321764bb1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.028529449s
Nov  8 12:48:21.768: INFO: Pod "alpine-nnp-false-ebe7fdd3-b5f2-482b-b1f6-530321764bb1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.036423284s
Nov  8 12:48:23.781: INFO: Pod "alpine-nnp-false-ebe7fdd3-b5f2-482b-b1f6-530321764bb1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.048710504s
Nov  8 12:48:23.781: INFO: Pod "alpine-nnp-false-ebe7fdd3-b5f2-482b-b1f6-530321764bb1" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Nov  8 12:48:23.796: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-9852" for this suite.

â€¢ [SLOW TEST:6.250 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:298
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":184,"skipped":3042,"failed":0}
[sig-node] Security Context 
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:48:23.816: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-2893
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Nov  8 12:48:23.981: INFO: Waiting up to 5m0s for pod "security-context-03677755-c945-4ed6-89fd-16950dc5ab3f" in namespace "security-context-2893" to be "Succeeded or Failed"
Nov  8 12:48:23.989: INFO: Pod "security-context-03677755-c945-4ed6-89fd-16950dc5ab3f": Phase="Pending", Reason="", readiness=false. Elapsed: 7.468464ms
Nov  8 12:48:25.999: INFO: Pod "security-context-03677755-c945-4ed6-89fd-16950dc5ab3f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017406377s
Nov  8 12:48:28.011: INFO: Pod "security-context-03677755-c945-4ed6-89fd-16950dc5ab3f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029531771s
STEP: Saw pod success
Nov  8 12:48:28.011: INFO: Pod "security-context-03677755-c945-4ed6-89fd-16950dc5ab3f" satisfied condition "Succeeded or Failed"
Nov  8 12:48:28.021: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod security-context-03677755-c945-4ed6-89fd-16950dc5ab3f container test-container: <nil>
STEP: delete the pod
Nov  8 12:48:28.048: INFO: Waiting for pod security-context-03677755-c945-4ed6-89fd-16950dc5ab3f to disappear
Nov  8 12:48:28.053: INFO: Pod security-context-03677755-c945-4ed6-89fd-16950dc5ab3f no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Nov  8 12:48:28.053: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-2893" for this suite.
â€¢{"msg":"PASSED [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":185,"skipped":3042,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:48:28.078: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-599
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:48:28.319: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster.
Nov  8 12:48:28.345: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 12:48:28.345: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 12:48:29.369: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Nov  8 12:48:29.369: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 12:48:30.369: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Nov  8 12:48:30.369: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
STEP: Update daemon pods image.
STEP: Check that daemon pods images are updated.
Nov  8 12:48:30.431: INFO: Wrong image for pod: daemon-set-2q647. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:30.431: INFO: Wrong image for pod: daemon-set-dt7mw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:30.431: INFO: Wrong image for pod: daemon-set-l676r. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:31.453: INFO: Wrong image for pod: daemon-set-2q647. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:31.453: INFO: Wrong image for pod: daemon-set-dt7mw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:31.453: INFO: Wrong image for pod: daemon-set-l676r. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:32.456: INFO: Wrong image for pod: daemon-set-2q647. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:32.456: INFO: Pod daemon-set-6jtr9 is not available
Nov  8 12:48:32.456: INFO: Wrong image for pod: daemon-set-dt7mw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:32.456: INFO: Wrong image for pod: daemon-set-l676r. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:33.456: INFO: Wrong image for pod: daemon-set-2q647. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:33.456: INFO: Wrong image for pod: daemon-set-l676r. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:34.455: INFO: Wrong image for pod: daemon-set-2q647. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:34.455: INFO: Wrong image for pod: daemon-set-l676r. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:34.455: INFO: Pod daemon-set-lhhcw is not available
Nov  8 12:48:35.454: INFO: Wrong image for pod: daemon-set-2q647. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:35.454: INFO: Wrong image for pod: daemon-set-l676r. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:35.454: INFO: Pod daemon-set-lhhcw is not available
Nov  8 12:48:36.455: INFO: Wrong image for pod: daemon-set-2q647. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:37.456: INFO: Wrong image for pod: daemon-set-2q647. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Nov  8 12:48:37.456: INFO: Pod daemon-set-2t9pk is not available
Nov  8 12:48:39.458: INFO: Pod daemon-set-fwsfk is not available
STEP: Check that daemon pods are still running on every node of the cluster.
Nov  8 12:48:39.496: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Nov  8 12:48:39.496: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 12:48:40.522: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Nov  8 12:48:40.522: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 12:48:41.516: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Nov  8 12:48:41.516: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-599, will wait for the garbage collector to delete the pods
Nov  8 12:48:41.615: INFO: Deleting DaemonSet.extensions daemon-set took: 14.392665ms
Nov  8 12:48:41.715: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.463509ms
Nov  8 12:48:43.628: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 12:48:43.628: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Nov  8 12:48:43.632: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23614"},"items":null}

Nov  8 12:48:43.637: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23614"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Nov  8 12:48:43.674: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-599" for this suite.

â€¢ [SLOW TEST:15.619 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]","total":356,"completed":186,"skipped":3152,"failed":0}
SSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:48:43.697: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2068
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 12:48:43.914: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6c070cd9-3c11-4e4d-9343-25c4a194985d" in namespace "downward-api-2068" to be "Succeeded or Failed"
Nov  8 12:48:43.920: INFO: Pod "downwardapi-volume-6c070cd9-3c11-4e4d-9343-25c4a194985d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.77968ms
Nov  8 12:48:45.936: INFO: Pod "downwardapi-volume-6c070cd9-3c11-4e4d-9343-25c4a194985d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022216796s
Nov  8 12:48:47.948: INFO: Pod "downwardapi-volume-6c070cd9-3c11-4e4d-9343-25c4a194985d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.034753188s
STEP: Saw pod success
Nov  8 12:48:47.948: INFO: Pod "downwardapi-volume-6c070cd9-3c11-4e4d-9343-25c4a194985d" satisfied condition "Succeeded or Failed"
Nov  8 12:48:47.954: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod downwardapi-volume-6c070cd9-3c11-4e4d-9343-25c4a194985d container client-container: <nil>
STEP: delete the pod
Nov  8 12:48:48.048: INFO: Waiting for pod downwardapi-volume-6c070cd9-3c11-4e4d-9343-25c4a194985d to disappear
Nov  8 12:48:48.053: INFO: Pod downwardapi-volume-6c070cd9-3c11-4e4d-9343-25c4a194985d no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Nov  8 12:48:48.053: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2068" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":187,"skipped":3155,"failed":0}
SS
------------------------------
[sig-apps] ReplicationController 
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:48:48.075: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-2196
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a ReplicationController is created
STEP: When the matched label of one of its pods change
Nov  8 12:48:48.234: INFO: Pod name pod-release: Found 0 pods out of 1
Nov  8 12:48:53.245: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Nov  8 12:48:53.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-2196" for this suite.

â€¢ [SLOW TEST:5.214 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should release no longer matching pods [Conformance]","total":356,"completed":188,"skipped":3157,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:48:53.291: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8110
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-73bd0156-75aa-453b-aff0-661892def654
STEP: Creating secret with name s-test-opt-upd-b09c2b2a-816a-4e5b-9d8a-5746d89d1700
STEP: Creating the pod
Nov  8 12:48:53.481: INFO: The status of Pod pod-projected-secrets-51ab3834-0d10-46f5-afe8-4a244303fe56 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:48:55.502: INFO: The status of Pod pod-projected-secrets-51ab3834-0d10-46f5-afe8-4a244303fe56 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-73bd0156-75aa-453b-aff0-661892def654
STEP: Updating secret s-test-opt-upd-b09c2b2a-816a-4e5b-9d8a-5746d89d1700
STEP: Creating secret with name s-test-opt-create-62462ffa-0f8e-4d45-841f-5c15093089a5
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Nov  8 12:48:57.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8110" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":189,"skipped":3183,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:48:57.735: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-8203
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-1094
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a service in the namespace
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-8218
STEP: Verifying there is no service in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Nov  8 12:49:04.192: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-8203" for this suite.
STEP: Destroying namespace "nsdeletetest-1094" for this suite.
Nov  8 12:49:04.221: INFO: Namespace nsdeletetest-1094 was already deleted
STEP: Destroying namespace "nsdeletetest-8218" for this suite.

â€¢ [SLOW TEST:6.492 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]","total":356,"completed":190,"skipped":3217,"failed":0}
SSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:49:04.228: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-2131
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override command
Nov  8 12:49:04.392: INFO: Waiting up to 5m0s for pod "client-containers-56234455-982b-4920-9c57-2b9cb8fd3cd5" in namespace "containers-2131" to be "Succeeded or Failed"
Nov  8 12:49:04.399: INFO: Pod "client-containers-56234455-982b-4920-9c57-2b9cb8fd3cd5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.718685ms
Nov  8 12:49:06.410: INFO: Pod "client-containers-56234455-982b-4920-9c57-2b9cb8fd3cd5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017742561s
Nov  8 12:49:08.421: INFO: Pod "client-containers-56234455-982b-4920-9c57-2b9cb8fd3cd5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029103271s
STEP: Saw pod success
Nov  8 12:49:08.421: INFO: Pod "client-containers-56234455-982b-4920-9c57-2b9cb8fd3cd5" satisfied condition "Succeeded or Failed"
Nov  8 12:49:08.426: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod client-containers-56234455-982b-4920-9c57-2b9cb8fd3cd5 container agnhost-container: <nil>
STEP: delete the pod
Nov  8 12:49:08.453: INFO: Waiting for pod client-containers-56234455-982b-4920-9c57-2b9cb8fd3cd5 to disappear
Nov  8 12:49:08.458: INFO: Pod client-containers-56234455-982b-4920-9c57-2b9cb8fd3cd5 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Nov  8 12:49:08.458: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-2131" for this suite.
â€¢{"msg":"PASSED [sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]","total":356,"completed":191,"skipped":3223,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:49:08.481: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-51
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for all pods to be garbage collected
STEP: Gathering metrics
Nov  8 12:49:18.694: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
W1108 12:49:18.694077      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Nov  8 12:49:18.694: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-51" for this suite.

â€¢ [SLOW TEST:10.234 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]","total":356,"completed":192,"skipped":3232,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:49:18.715: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8089
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-51ab86ef-ba4d-4aa9-b600-81539d29ecde
STEP: Creating a pod to test consume configMaps
Nov  8 12:49:18.881: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-1082d2eb-b69a-4716-bf73-dde77606772e" in namespace "projected-8089" to be "Succeeded or Failed"
Nov  8 12:49:18.887: INFO: Pod "pod-projected-configmaps-1082d2eb-b69a-4716-bf73-dde77606772e": Phase="Pending", Reason="", readiness=false. Elapsed: 6.213734ms
Nov  8 12:49:20.895: INFO: Pod "pod-projected-configmaps-1082d2eb-b69a-4716-bf73-dde77606772e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014130331s
Nov  8 12:49:22.906: INFO: Pod "pod-projected-configmaps-1082d2eb-b69a-4716-bf73-dde77606772e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025111922s
STEP: Saw pod success
Nov  8 12:49:22.906: INFO: Pod "pod-projected-configmaps-1082d2eb-b69a-4716-bf73-dde77606772e" satisfied condition "Succeeded or Failed"
Nov  8 12:49:22.911: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-projected-configmaps-1082d2eb-b69a-4716-bf73-dde77606772e container agnhost-container: <nil>
STEP: delete the pod
Nov  8 12:49:22.942: INFO: Waiting for pod pod-projected-configmaps-1082d2eb-b69a-4716-bf73-dde77606772e to disappear
Nov  8 12:49:22.947: INFO: Pod pod-projected-configmaps-1082d2eb-b69a-4716-bf73-dde77606772e no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Nov  8 12:49:22.947: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8089" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":193,"skipped":3262,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:49:22.975: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-5312
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Nov  8 12:49:23.121: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Nov  8 12:49:23.157: INFO: Waiting for terminating namespaces to be deleted...
Nov  8 12:49:23.163: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm before test
Nov  8 12:49:23.189: INFO: apiserver-proxy-b2tpk from kube-system started at 2022-11-08 12:05:58 +0000 UTC (2 container statuses recorded)
Nov  8 12:49:23.189: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:49:23.189: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:49:23.189: INFO: cilium-c6w8t from kube-system started at 2022-11-08 12:05:58 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.189: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:49:23.189: INFO: csi-driver-node-qgnwd from kube-system started at 2022-11-08 12:05:58 +0000 UTC (3 container statuses recorded)
Nov  8 12:49:23.189: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:49:23.189: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:49:23.189: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:49:23.189: INFO: kube-proxy-worker-als7z-v1.24.7-d8gkj from kube-system started at 2022-11-08 12:05:58 +0000 UTC (2 container statuses recorded)
Nov  8 12:49:23.189: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:49:23.189: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:49:23.189: INFO: node-exporter-4ff28 from kube-system started at 2022-11-08 12:05:58 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.189: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:49:23.189: INFO: node-problem-detector-v668n from kube-system started at 2022-11-08 12:05:58 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.189: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:49:23.189: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-5ppr7 from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:49:23.189: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:49:23.189: INFO: 	Container systemd-logs ready: true, restart count 0
Nov  8 12:49:23.189: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z before test
Nov  8 12:49:23.209: INFO: apiserver-proxy-wcz5q from kube-system started at 2022-11-08 12:05:57 +0000 UTC (2 container statuses recorded)
Nov  8 12:49:23.209: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:49:23.209: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:49:23.209: INFO: cilium-p8wkv from kube-system started at 2022-11-08 12:05:57 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.209: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:49:23.209: INFO: csi-driver-node-z4gvc from kube-system started at 2022-11-08 12:05:57 +0000 UTC (3 container statuses recorded)
Nov  8 12:49:23.209: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:49:23.209: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:49:23.209: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:49:23.209: INFO: kube-proxy-worker-als7z-v1.24.7-bqnlf from kube-system started at 2022-11-08 12:05:57 +0000 UTC (2 container statuses recorded)
Nov  8 12:49:23.209: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:49:23.209: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:49:23.209: INFO: node-exporter-vsvv9 from kube-system started at 2022-11-08 12:05:57 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.209: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:49:23.209: INFO: node-problem-detector-cttk5 from kube-system started at 2022-11-08 12:05:57 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.209: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:49:23.209: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-grsjl from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:49:23.209: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:49:23.209: INFO: 	Container systemd-logs ready: true, restart count 0
Nov  8 12:49:23.209: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc before test
Nov  8 12:49:23.235: INFO: apiserver-proxy-lbkkq from kube-system started at 2022-11-08 11:56:30 +0000 UTC (2 container statuses recorded)
Nov  8 12:49:23.235: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:49:23.235: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:49:23.235: INFO: blackbox-exporter-7c445d84b4-p9b7s from kube-system started at 2022-11-08 11:56:40 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.235: INFO: 	Container blackbox-exporter ready: true, restart count 0
Nov  8 12:49:23.235: INFO: blackbox-exporter-7c445d84b4-r2cn2 from kube-system started at 2022-11-08 11:56:40 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.235: INFO: 	Container blackbox-exporter ready: true, restart count 0
Nov  8 12:49:23.235: INFO: cilium-ntlkq from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.235: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:49:23.235: INFO: cilium-operator-fb5f68d45-hf2vx from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.235: INFO: 	Container cilium-operator ready: true, restart count 0
Nov  8 12:49:23.235: INFO: csi-driver-node-tbftn from kube-system started at 2022-11-08 11:56:30 +0000 UTC (3 container statuses recorded)
Nov  8 12:49:23.235: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:49:23.235: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:49:23.235: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:49:23.235: INFO: kube-proxy-worker-ld4ha-v1.24.7-j8gzf from kube-system started at 2022-11-08 11:56:40 +0000 UTC (2 container statuses recorded)
Nov  8 12:49:23.235: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:49:23.235: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:49:23.235: INFO: node-exporter-69tsx from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.235: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:49:23.235: INFO: node-problem-detector-74vkx from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.235: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:49:23.235: INFO: sonobuoy from sonobuoy started at 2022-11-08 12:11:02 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.235: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Nov  8 12:49:23.235: INFO: sonobuoy-e2e-job-a84be4cdb9164430 from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:49:23.235: INFO: 	Container e2e ready: true, restart count 0
Nov  8 12:49:23.235: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:49:23.235: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-l25mf from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:49:23.235: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:49:23.235: INFO: 	Container systemd-logs ready: true, restart count 0
Nov  8 12:49:23.235: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw before test
Nov  8 12:49:23.259: INFO: apiserver-proxy-67kl9 from kube-system started at 2022-11-08 11:56:37 +0000 UTC (2 container statuses recorded)
Nov  8 12:49:23.259: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:49:23.259: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:49:23.259: INFO: cilium-427j9 from kube-system started at 2022-11-08 11:56:37 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.259: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:49:23.259: INFO: coredns-8686744dd4-5fk2d from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.259: INFO: 	Container coredns ready: true, restart count 0
Nov  8 12:49:23.259: INFO: coredns-8686744dd4-tpzbm from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.259: INFO: 	Container coredns ready: true, restart count 0
Nov  8 12:49:23.259: INFO: csi-driver-node-8zqbd from kube-system started at 2022-11-08 11:56:37 +0000 UTC (3 container statuses recorded)
Nov  8 12:49:23.259: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:49:23.259: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:49:23.259: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:49:23.259: INFO: kube-proxy-worker-ld4ha-v1.24.7-tzm8r from kube-system started at 2022-11-08 11:56:46 +0000 UTC (2 container statuses recorded)
Nov  8 12:49:23.259: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:49:23.259: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:49:23.259: INFO: metrics-server-848ccfb6d4-9cgtc from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.259: INFO: 	Container metrics-server ready: true, restart count 0
Nov  8 12:49:23.259: INFO: node-exporter-jkkr8 from kube-system started at 2022-11-08 11:56:37 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.259: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:49:23.259: INFO: node-problem-detector-r2gkf from kube-system started at 2022-11-08 11:56:37 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.259: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:49:23.259: INFO: vpn-shoot-56ddcc9878-bj6wb from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:49:23.259: INFO: 	Container vpn-shoot ready: true, restart count 0
Nov  8 12:49:23.260: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-f6s9d from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:49:23.260: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:49:23.260: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
STEP: verifying the node has the label node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm
STEP: verifying the node has the label node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z
STEP: verifying the node has the label node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
STEP: verifying the node has the label node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
Nov  8 12:49:23.413: INFO: Pod apiserver-proxy-67kl9 requesting resource cpu=40m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
Nov  8 12:49:23.413: INFO: Pod apiserver-proxy-b2tpk requesting resource cpu=40m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm
Nov  8 12:49:23.413: INFO: Pod apiserver-proxy-lbkkq requesting resource cpu=40m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
Nov  8 12:49:23.413: INFO: Pod apiserver-proxy-wcz5q requesting resource cpu=40m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z
Nov  8 12:49:23.414: INFO: Pod blackbox-exporter-7c445d84b4-p9b7s requesting resource cpu=10m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
Nov  8 12:49:23.414: INFO: Pod blackbox-exporter-7c445d84b4-r2cn2 requesting resource cpu=10m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
Nov  8 12:49:23.414: INFO: Pod cilium-427j9 requesting resource cpu=0m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
Nov  8 12:49:23.414: INFO: Pod cilium-c6w8t requesting resource cpu=0m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm
Nov  8 12:49:23.414: INFO: Pod cilium-ntlkq requesting resource cpu=0m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
Nov  8 12:49:23.414: INFO: Pod cilium-operator-fb5f68d45-hf2vx requesting resource cpu=0m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
Nov  8 12:49:23.414: INFO: Pod cilium-p8wkv requesting resource cpu=0m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z
Nov  8 12:49:23.415: INFO: Pod coredns-8686744dd4-5fk2d requesting resource cpu=50m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
Nov  8 12:49:23.415: INFO: Pod coredns-8686744dd4-tpzbm requesting resource cpu=50m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
Nov  8 12:49:23.415: INFO: Pod csi-driver-node-8zqbd requesting resource cpu=37m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
Nov  8 12:49:23.415: INFO: Pod csi-driver-node-qgnwd requesting resource cpu=37m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm
Nov  8 12:49:23.415: INFO: Pod csi-driver-node-tbftn requesting resource cpu=37m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
Nov  8 12:49:23.415: INFO: Pod csi-driver-node-z4gvc requesting resource cpu=37m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z
Nov  8 12:49:23.415: INFO: Pod kube-proxy-worker-als7z-v1.24.7-bqnlf requesting resource cpu=20m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z
Nov  8 12:49:23.415: INFO: Pod kube-proxy-worker-als7z-v1.24.7-d8gkj requesting resource cpu=20m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm
Nov  8 12:49:23.415: INFO: Pod kube-proxy-worker-ld4ha-v1.24.7-j8gzf requesting resource cpu=20m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
Nov  8 12:49:23.415: INFO: Pod kube-proxy-worker-ld4ha-v1.24.7-tzm8r requesting resource cpu=20m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
Nov  8 12:49:23.415: INFO: Pod metrics-server-848ccfb6d4-9cgtc requesting resource cpu=50m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
Nov  8 12:49:23.415: INFO: Pod node-exporter-4ff28 requesting resource cpu=50m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm
Nov  8 12:49:23.415: INFO: Pod node-exporter-69tsx requesting resource cpu=50m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
Nov  8 12:49:23.415: INFO: Pod node-exporter-jkkr8 requesting resource cpu=50m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
Nov  8 12:49:23.415: INFO: Pod node-exporter-vsvv9 requesting resource cpu=50m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z
Nov  8 12:49:23.415: INFO: Pod node-problem-detector-74vkx requesting resource cpu=20m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
Nov  8 12:49:23.416: INFO: Pod node-problem-detector-cttk5 requesting resource cpu=20m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z
Nov  8 12:49:23.416: INFO: Pod node-problem-detector-r2gkf requesting resource cpu=20m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
Nov  8 12:49:23.416: INFO: Pod node-problem-detector-v668n requesting resource cpu=20m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm
Nov  8 12:49:23.416: INFO: Pod vpn-shoot-56ddcc9878-bj6wb requesting resource cpu=100m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
Nov  8 12:49:23.416: INFO: Pod sonobuoy requesting resource cpu=0m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
Nov  8 12:49:23.416: INFO: Pod sonobuoy-e2e-job-a84be4cdb9164430 requesting resource cpu=0m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
Nov  8 12:49:23.416: INFO: Pod sonobuoy-systemd-logs-daemon-set-f020433f47884871-5ppr7 requesting resource cpu=0m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm
Nov  8 12:49:23.416: INFO: Pod sonobuoy-systemd-logs-daemon-set-f020433f47884871-f6s9d requesting resource cpu=0m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
Nov  8 12:49:23.416: INFO: Pod sonobuoy-systemd-logs-daemon-set-f020433f47884871-grsjl requesting resource cpu=0m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z
Nov  8 12:49:23.416: INFO: Pod sonobuoy-systemd-logs-daemon-set-f020433f47884871-l25mf requesting resource cpu=0m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
STEP: Starting Pods to consume most of the cluster CPU.
Nov  8 12:49:23.416: INFO: Creating a pod which consumes cpu=1227m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm
Nov  8 12:49:23.436: INFO: Creating a pod which consumes cpu=1227m on Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z
Nov  8 12:49:23.447: INFO: Creating a pod which consumes cpu=2613m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
Nov  8 12:49:23.457: INFO: Creating a pod which consumes cpu=2452m on Node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
STEP: Creating another pod that requires unavailable amount of CPU.
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-3af8876d-f96b-4bbb-bcdd-49bda1f59da0.17259ce9728341b5], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5312/filler-pod-3af8876d-f96b-4bbb-bcdd-49bda1f59da0 to shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-3af8876d-f96b-4bbb-bcdd-49bda1f59da0.17259ce99dba273f], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-3af8876d-f96b-4bbb-bcdd-49bda1f59da0.17259ce9b1e62d26], Reason = [Created], Message = [Created container filler-pod-3af8876d-f96b-4bbb-bcdd-49bda1f59da0]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-3af8876d-f96b-4bbb-bcdd-49bda1f59da0.17259ce9b4f58ae6], Reason = [Started], Message = [Started container filler-pod-3af8876d-f96b-4bbb-bcdd-49bda1f59da0]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-8f0c3d7c-20e9-4b2f-8e93-7cdd62173536.17259ce9702f6ca0], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5312/filler-pod-8f0c3d7c-20e9-4b2f-8e93-7cdd62173536 to shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-8f0c3d7c-20e9-4b2f-8e93-7cdd62173536.17259ce99a442f3e], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-8f0c3d7c-20e9-4b2f-8e93-7cdd62173536.17259ce9b0824fac], Reason = [Created], Message = [Created container filler-pod-8f0c3d7c-20e9-4b2f-8e93-7cdd62173536]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-8f0c3d7c-20e9-4b2f-8e93-7cdd62173536.17259ce9b32cf2ab], Reason = [Started], Message = [Started container filler-pod-8f0c3d7c-20e9-4b2f-8e93-7cdd62173536]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d095e685-ada1-4f03-aa65-6c736d13321c.17259ce97117ac77], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5312/filler-pod-d095e685-ada1-4f03-aa65-6c736d13321c to shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d095e685-ada1-4f03-aa65-6c736d13321c.17259ce99b8b8247], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d095e685-ada1-4f03-aa65-6c736d13321c.17259ce9b24efdd6], Reason = [Created], Message = [Created container filler-pod-d095e685-ada1-4f03-aa65-6c736d13321c]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d095e685-ada1-4f03-aa65-6c736d13321c.17259ce9b47a706b], Reason = [Started], Message = [Started container filler-pod-d095e685-ada1-4f03-aa65-6c736d13321c]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-f9f722f8-dc74-441f-baa1-2c2f898eaac6.17259ce972249de9], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5312/filler-pod-f9f722f8-dc74-441f-baa1-2c2f898eaac6 to shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-f9f722f8-dc74-441f-baa1-2c2f898eaac6.17259ce99d207b19], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-f9f722f8-dc74-441f-baa1-2c2f898eaac6.17259ce9b16f518a], Reason = [Created], Message = [Created container filler-pod-f9f722f8-dc74-441f-baa1-2c2f898eaac6]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-f9f722f8-dc74-441f-baa1-2c2f898eaac6.17259ce9b4e48657], Reason = [Started], Message = [Started container filler-pod-f9f722f8-dc74-441f-baa1-2c2f898eaac6]
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.17259ce9ed12b79c], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod.]
STEP: removing the label node off the node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm
STEP: verifying the node doesn't have the label node
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Nov  8 12:49:26.695: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-5312" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
â€¢{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]","total":356,"completed":194,"skipped":3301,"failed":0}
SSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:49:26.720: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4271
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-4271/configmap-test-0356b8ca-fb2e-4289-ad8a-6019012fb613
STEP: Creating a pod to test consume configMaps
Nov  8 12:49:26.883: INFO: Waiting up to 5m0s for pod "pod-configmaps-e58f9a7a-58f7-4eb5-b5cf-1d7604c71d2f" in namespace "configmap-4271" to be "Succeeded or Failed"
Nov  8 12:49:26.890: INFO: Pod "pod-configmaps-e58f9a7a-58f7-4eb5-b5cf-1d7604c71d2f": Phase="Pending", Reason="", readiness=false. Elapsed: 7.204834ms
Nov  8 12:49:28.899: INFO: Pod "pod-configmaps-e58f9a7a-58f7-4eb5-b5cf-1d7604c71d2f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015918143s
Nov  8 12:49:30.909: INFO: Pod "pod-configmaps-e58f9a7a-58f7-4eb5-b5cf-1d7604c71d2f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02612579s
STEP: Saw pod success
Nov  8 12:49:30.909: INFO: Pod "pod-configmaps-e58f9a7a-58f7-4eb5-b5cf-1d7604c71d2f" satisfied condition "Succeeded or Failed"
Nov  8 12:49:30.920: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-configmaps-e58f9a7a-58f7-4eb5-b5cf-1d7604c71d2f container env-test: <nil>
STEP: delete the pod
Nov  8 12:49:30.977: INFO: Waiting for pod pod-configmaps-e58f9a7a-58f7-4eb5-b5cf-1d7604c71d2f to disappear
Nov  8 12:49:31.004: INFO: Pod pod-configmaps-e58f9a7a-58f7-4eb5-b5cf-1d7604c71d2f no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 12:49:31.004: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4271" for this suite.
â€¢{"msg":"PASSED [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":195,"skipped":3306,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:49:31.073: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-8773
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:49:31.240: INFO: created pod
Nov  8 12:49:31.240: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-8773" to be "Succeeded or Failed"
Nov  8 12:49:31.251: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 10.672624ms
Nov  8 12:49:33.264: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023998595s
Nov  8 12:49:35.275: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.034246958s
STEP: Saw pod success
Nov  8 12:49:35.275: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Nov  8 12:50:05.276: INFO: polling logs
Nov  8 12:50:05.290: INFO: Pod logs: 
I1108 12:49:32.256818       1 log.go:195] OK: Got token
I1108 12:49:32.256853       1 log.go:195] validating with in-cluster discovery
I1108 12:49:32.257114       1 log.go:195] OK: got issuer https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io
I1108 12:49:32.257137       1 log.go:195] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io", Subject:"system:serviceaccount:svcaccounts-8773:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1667912371, NotBefore:1667911771, IssuedAt:1667911771, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8773", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"79578bdb-15bd-4715-9fb9-a971280de7ad"}}}
I1108 12:49:32.275230       1 log.go:195] OK: Constructed OIDC provider for issuer https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io
I1108 12:49:32.279378       1 log.go:195] OK: Validated signature on JWT
I1108 12:49:32.279448       1 log.go:195] OK: Got valid claims from token!
I1108 12:49:32.279466       1 log.go:195] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io", Subject:"system:serviceaccount:svcaccounts-8773:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1667912371, NotBefore:1667911771, IssuedAt:1667911771, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8773", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"79578bdb-15bd-4715-9fb9-a971280de7ad"}}}

Nov  8 12:50:05.290: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Nov  8 12:50:05.302: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-8773" for this suite.

â€¢ [SLOW TEST:34.249 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]","total":356,"completed":196,"skipped":3361,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:50:05.323: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7308
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:50:05.997: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:50:09.043: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:50:09.089: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Registering the custom resource webhook via the AdmissionRegistration API
STEP: Creating a custom resource that should be denied by the webhook
STEP: Creating a custom resource whose deletion would be denied by the webhook
STEP: Updating the custom resource with disallowed data should be denied
STEP: Deleting the custom resource should be denied
STEP: Remove the offending key and value from the custom resource data
STEP: Deleting the updated custom resource should be successful
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:50:12.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7308" for this suite.
STEP: Destroying namespace "webhook-7308-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:7.397 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]","total":356,"completed":197,"skipped":3389,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:50:12.722: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8749
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Service
STEP: Creating a NodePort Service
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota
STEP: Ensuring resource quota status captures service creation
STEP: Deleting Services
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Nov  8 12:50:24.047: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8749" for this suite.

â€¢ [SLOW TEST:11.346 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]","total":356,"completed":198,"skipped":3452,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:50:24.068: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-4676
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:50:24.214: INFO: Creating simple deployment test-new-deployment
Nov  8 12:50:24.232: INFO: deployment "test-new-deployment" doesn't have the required revision set
Nov  8 12:50:26.259: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.November, 8, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-55df494869\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the deployment Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Nov  8 12:50:28.319: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-4676  ec31a425-0651-4ac3-8ad0-a0bd5c901fd2 24544 3 2022-11-08 12:50:24 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2022-11-08 12:50:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 12:50:28 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003635ac8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-55df494869" has successfully progressed.,LastUpdateTime:2022-11-08 12:50:26 +0000 UTC,LastTransitionTime:2022-11-08 12:50:24 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-11-08 12:50:28 +0000 UTC,LastTransitionTime:2022-11-08 12:50:28 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Nov  8 12:50:28.325: INFO: New ReplicaSet "test-new-deployment-55df494869" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-55df494869  deployment-4676  6680684b-b05f-4b9f-9cf2-a4eb9fe879d5 24546 3 2022-11-08 12:50:24 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:4 deployment.kubernetes.io/max-replicas:5 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment ec31a425-0651-4ac3-8ad0-a0bd5c901fd2 0xc0006dbf47 0xc0006dbf48}] []  [{kube-controller-manager Update apps/v1 2022-11-08 12:50:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ec31a425-0651-4ac3-8ad0-a0bd5c901fd2\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 12:50:26 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002290028 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Nov  8 12:50:28.331: INFO: Pod "test-new-deployment-55df494869-8kpq7" is available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-8kpq7 test-new-deployment-55df494869- deployment-4676  f8cba463-0322-4772-9e39-7dab2124a2ce 24523 0 2022-11-08 12:50:24 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 6680684b-b05f-4b9f-9cf2-a4eb9fe879d5 0xc002ff8347 0xc002ff8348}] []  [{kube-controller-manager Update v1 2022-11-08 12:50:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6680684b-b05f-4b9f-9cf2-a4eb9fe879d5\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 12:50:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.1.189\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5vkgp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5vkgp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:50:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:50:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:50:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:50:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.53,PodIP:10.96.1.189,StartTime:2022-11-08 12:50:24 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-11-08 12:50:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://ac76fff24d76f1a9916921a3190f8b4d1c961ee6ed517d104162a286637fa638,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.1.189,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Nov  8 12:50:28.331: INFO: Pod "test-new-deployment-55df494869-ghq8w" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-ghq8w test-new-deployment-55df494869- deployment-4676  bdd94693-d792-4bfc-9d25-b08ca2b96935 24543 0 2022-11-08 12:50:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 6680684b-b05f-4b9f-9cf2-a4eb9fe879d5 0xc002ff8520 0xc002ff8521}] []  [{kube-controller-manager Update v1 2022-11-08 12:50:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6680684b-b05f-4b9f-9cf2-a4eb9fe879d5\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2wd8s,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2wd8s,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 12:50:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Nov  8 12:50:28.331: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-4676" for this suite.
â€¢{"msg":"PASSED [sig-apps] Deployment Deployment should have a working scale subresource [Conformance]","total":356,"completed":199,"skipped":3470,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:50:28.361: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-9009
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing all events in all namespaces
STEP: patching the test event
STEP: fetching the test event
STEP: deleting the test event
STEP: listing all events in all namespaces
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Nov  8 12:50:28.586: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-9009" for this suite.
â€¢{"msg":"PASSED [sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":200,"skipped":3500,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:50:28.605: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1420
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-19af49cb-c067-4d27-a9cb-1f01d2fae462
STEP: Creating a pod to test consume configMaps
Nov  8 12:50:28.761: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-9473b050-0315-483d-9e01-c66d974e6312" in namespace "projected-1420" to be "Succeeded or Failed"
Nov  8 12:50:28.776: INFO: Pod "pod-projected-configmaps-9473b050-0315-483d-9e01-c66d974e6312": Phase="Pending", Reason="", readiness=false. Elapsed: 15.194453ms
Nov  8 12:50:30.785: INFO: Pod "pod-projected-configmaps-9473b050-0315-483d-9e01-c66d974e6312": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024672591s
Nov  8 12:50:32.794: INFO: Pod "pod-projected-configmaps-9473b050-0315-483d-9e01-c66d974e6312": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03327922s
STEP: Saw pod success
Nov  8 12:50:32.794: INFO: Pod "pod-projected-configmaps-9473b050-0315-483d-9e01-c66d974e6312" satisfied condition "Succeeded or Failed"
Nov  8 12:50:32.800: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-projected-configmaps-9473b050-0315-483d-9e01-c66d974e6312 container agnhost-container: <nil>
STEP: delete the pod
Nov  8 12:50:32.841: INFO: Waiting for pod pod-projected-configmaps-9473b050-0315-483d-9e01-c66d974e6312 to disappear
Nov  8 12:50:32.853: INFO: Pod pod-projected-configmaps-9473b050-0315-483d-9e01-c66d974e6312 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Nov  8 12:50:32.854: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1420" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":201,"skipped":3520,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:50:32.892: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3660
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Nov  8 12:50:33.087: INFO: Waiting up to 5m0s for pod "pod-1f7998e7-4953-437a-a401-e7a9f8ded9f8" in namespace "emptydir-3660" to be "Succeeded or Failed"
Nov  8 12:50:33.092: INFO: Pod "pod-1f7998e7-4953-437a-a401-e7a9f8ded9f8": Phase="Pending", Reason="", readiness=false. Elapsed: 5.799913ms
Nov  8 12:50:35.104: INFO: Pod "pod-1f7998e7-4953-437a-a401-e7a9f8ded9f8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017642014s
Nov  8 12:50:37.117: INFO: Pod "pod-1f7998e7-4953-437a-a401-e7a9f8ded9f8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029912371s
STEP: Saw pod success
Nov  8 12:50:37.117: INFO: Pod "pod-1f7998e7-4953-437a-a401-e7a9f8ded9f8" satisfied condition "Succeeded or Failed"
Nov  8 12:50:37.122: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw pod pod-1f7998e7-4953-437a-a401-e7a9f8ded9f8 container test-container: <nil>
STEP: delete the pod
Nov  8 12:50:37.147: INFO: Waiting for pod pod-1f7998e7-4953-437a-a401-e7a9f8ded9f8 to disappear
Nov  8 12:50:37.152: INFO: Pod pod-1f7998e7-4953-437a-a401-e7a9f8ded9f8 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 12:50:37.152: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3660" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":202,"skipped":3528,"failed":0}
SS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:50:37.172: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-1216
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Deleting RuntimeClass runtimeclass-1216-delete-me
STEP: Waiting for the RuntimeClass to disappear
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Nov  8 12:50:37.339: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-1216" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":203,"skipped":3530,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:50:37.360: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-4683
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-a3d1d289-bd9f-434a-8a04-092b5ed44ec1 in namespace container-probe-4683
Nov  8 12:50:39.536: INFO: Started pod liveness-a3d1d289-bd9f-434a-8a04-092b5ed44ec1 in namespace container-probe-4683
STEP: checking the pod's current state and verifying that restartCount is present
Nov  8 12:50:39.541: INFO: Initial restart count of pod liveness-a3d1d289-bd9f-434a-8a04-092b5ed44ec1 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Nov  8 12:54:40.948: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-4683" for this suite.

â€¢ [SLOW TEST:243.611 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]","total":356,"completed":204,"skipped":3564,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:54:40.971: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-5113
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5113.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5113.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5113.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5113.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5113.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5113.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5113.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Nov  8 12:54:43.279: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:43.298: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:43.310: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:43.354: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:43.369: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:43.379: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:43.392: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:43.404: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:43.405: INFO: Lookups using dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5113.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local jessie_udp@dns-test-service-2.dns-5113.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5113.svc.cluster.local]

Nov  8 12:54:48.418: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:48.428: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:48.438: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:48.482: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:48.492: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:48.501: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:48.511: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:48.522: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:48.522: INFO: Lookups using dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5113.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local jessie_udp@dns-test-service-2.dns-5113.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5113.svc.cluster.local]

Nov  8 12:54:53.419: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:53.466: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:53.475: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:53.483: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:53.493: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:53.503: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:53.512: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:53.521: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:53.521: INFO: Lookups using dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5113.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local jessie_udp@dns-test-service-2.dns-5113.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5113.svc.cluster.local]

Nov  8 12:54:58.414: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:58.422: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:58.466: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:58.475: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:58.485: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:58.493: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:58.500: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:58.510: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:54:58.510: INFO: Lookups using dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5113.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local jessie_udp@dns-test-service-2.dns-5113.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5113.svc.cluster.local]

Nov  8 12:55:03.417: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:03.427: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:03.436: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:03.482: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:03.492: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:03.501: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:03.509: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:03.519: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:03.519: INFO: Lookups using dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5113.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local jessie_udp@dns-test-service-2.dns-5113.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5113.svc.cluster.local]

Nov  8 12:55:08.417: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:08.427: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:08.436: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:08.482: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:08.492: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:08.500: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:08.510: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:08.518: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:08.518: INFO: Lookups using dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5113.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5113.svc.cluster.local jessie_udp@dns-test-service-2.dns-5113.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5113.svc.cluster.local]

Nov  8 12:55:13.510: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local from pod dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4: the server could not find the requested resource (get pods dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4)
Nov  8 12:55:13.552: INFO: Lookups using dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4 failed for: [wheezy_udp@dns-test-service-2.dns-5113.svc.cluster.local]

Nov  8 12:55:18.531: INFO: DNS probes using dns-5113/dns-test-793f9cc0-d92d-4b3b-ba55-e5cebc9e42c4 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Nov  8 12:55:18.561: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-5113" for this suite.

â€¢ [SLOW TEST:37.615 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Subdomain [Conformance]","total":356,"completed":205,"skipped":3620,"failed":0}
S
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container 
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:55:18.587: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-6785
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:55:18.754: INFO: The status of Pod busybox-readonly-fs9a46bd3c-15d2-48b3-83a6-127ff3c69ac6 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:55:20.766: INFO: The status of Pod busybox-readonly-fs9a46bd3c-15d2-48b3-83a6-127ff3c69ac6 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Nov  8 12:55:20.784: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-6785" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":206,"skipped":3621,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:55:20.823: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-690
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ConfigMap
STEP: fetching the ConfigMap
STEP: patching the ConfigMap
STEP: listing all ConfigMaps in all namespaces with a label selector
STEP: deleting the ConfigMap by collection with a label selector
STEP: listing all ConfigMaps in test namespace
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 12:55:21.015: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-690" for this suite.
â€¢{"msg":"PASSED [sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]","total":356,"completed":207,"skipped":3644,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:55:21.042: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3177
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-4b9c18c6-5383-439d-b116-ed4e38e5d397
STEP: Creating a pod to test consume secrets
Nov  8 12:55:21.214: INFO: Waiting up to 5m0s for pod "pod-secrets-7326f95a-faf3-4606-b0d4-726eabc05813" in namespace "secrets-3177" to be "Succeeded or Failed"
Nov  8 12:55:21.222: INFO: Pod "pod-secrets-7326f95a-faf3-4606-b0d4-726eabc05813": Phase="Pending", Reason="", readiness=false. Elapsed: 7.589445ms
Nov  8 12:55:23.233: INFO: Pod "pod-secrets-7326f95a-faf3-4606-b0d4-726eabc05813": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01913095s
Nov  8 12:55:25.246: INFO: Pod "pod-secrets-7326f95a-faf3-4606-b0d4-726eabc05813": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031330879s
STEP: Saw pod success
Nov  8 12:55:25.246: INFO: Pod "pod-secrets-7326f95a-faf3-4606-b0d4-726eabc05813" satisfied condition "Succeeded or Failed"
Nov  8 12:55:25.252: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-secrets-7326f95a-faf3-4606-b0d4-726eabc05813 container secret-volume-test: <nil>
STEP: delete the pod
Nov  8 12:55:25.286: INFO: Waiting for pod pod-secrets-7326f95a-faf3-4606-b0d4-726eabc05813 to disappear
Nov  8 12:55:25.294: INFO: Pod pod-secrets-7326f95a-faf3-4606-b0d4-726eabc05813 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Nov  8 12:55:25.294: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3177" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":208,"skipped":3683,"failed":0}
SSSS
------------------------------
[sig-apps] ReplicationController 
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:55:25.320: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-698
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ReplicationController
STEP: waiting for RC to be added
STEP: waiting for available Replicas
STEP: patching ReplicationController
STEP: waiting for RC to be modified
STEP: patching ReplicationController status
STEP: waiting for RC to be modified
STEP: waiting for available Replicas
STEP: fetching ReplicationController status
STEP: patching ReplicationController scale
STEP: waiting for RC to be modified
STEP: waiting for ReplicationController's scale to be the max amount
STEP: fetching ReplicationController; ensuring that it's patched
STEP: updating ReplicationController status
STEP: waiting for RC to be modified
STEP: listing all ReplicationControllers
STEP: checking that ReplicationController has expected values
STEP: deleting ReplicationControllers by collection
STEP: waiting for ReplicationController to have a DELETED watchEvent
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Nov  8 12:55:29.224: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-698" for this suite.
â€¢{"msg":"PASSED [sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]","total":356,"completed":209,"skipped":3687,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox Pod with hostAliases 
  should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:55:29.245: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-8950
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:55:29.411: INFO: The status of Pod busybox-host-aliasesec8cbb96-084f-48c5-a7be-4a45216fa6c3 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:55:31.418: INFO: The status of Pod busybox-host-aliasesec8cbb96-084f-48c5-a7be-4a45216fa6c3 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Nov  8 12:55:31.438: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-8950" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":210,"skipped":3730,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:55:31.463: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-51
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:55:31.677: INFO: Create a RollingUpdate DaemonSet
Nov  8 12:55:31.685: INFO: Check that daemon pods launch on every node of the cluster
Nov  8 12:55:31.710: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 12:55:31.711: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 12:55:32.734: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 12:55:32.734: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 12:55:33.734: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Nov  8 12:55:33.734: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
Nov  8 12:55:33.734: INFO: Update the DaemonSet to trigger a rollout
Nov  8 12:55:33.746: INFO: Updating DaemonSet daemon-set
Nov  8 12:55:36.795: INFO: Roll back the DaemonSet before rollout is complete
Nov  8 12:55:36.809: INFO: Updating DaemonSet daemon-set
Nov  8 12:55:36.809: INFO: Make sure DaemonSet rollback is complete
Nov  8 12:55:36.817: INFO: Wrong image for pod: daemon-set-8vxt5. Expected: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2, got: foo:non-existent.
Nov  8 12:55:36.817: INFO: Pod daemon-set-8vxt5 is not available
Nov  8 12:55:39.852: INFO: Pod daemon-set-ww552 is not available
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-51, will wait for the garbage collector to delete the pods
Nov  8 12:55:39.942: INFO: Deleting DaemonSet.extensions daemon-set took: 8.1016ms
Nov  8 12:55:40.043: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.855271ms
Nov  8 12:55:41.253: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 12:55:41.253: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Nov  8 12:55:41.260: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26353"},"items":null}

Nov  8 12:55:41.264: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26353"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Nov  8 12:55:41.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-51" for this suite.

â€¢ [SLOW TEST:9.861 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]","total":356,"completed":211,"skipped":3746,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch 
  should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:55:41.325: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5985
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Nov  8 12:55:41.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-5985 create -f -'
Nov  8 12:55:42.278: INFO: stderr: ""
Nov  8 12:55:42.278: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Nov  8 12:55:43.288: INFO: Selector matched 1 pods for map[app:agnhost]
Nov  8 12:55:43.289: INFO: Found 0 / 1
Nov  8 12:55:44.289: INFO: Selector matched 1 pods for map[app:agnhost]
Nov  8 12:55:44.289: INFO: Found 1 / 1
Nov  8 12:55:44.289: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods
Nov  8 12:55:44.295: INFO: Selector matched 1 pods for map[app:agnhost]
Nov  8 12:55:44.295: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Nov  8 12:55:44.295: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-5985 patch pod agnhost-primary-hvzjw -p {"metadata":{"annotations":{"x":"y"}}}'
Nov  8 12:55:44.369: INFO: stderr: ""
Nov  8 12:55:44.369: INFO: stdout: "pod/agnhost-primary-hvzjw patched\n"
STEP: checking annotations
Nov  8 12:55:44.379: INFO: Selector matched 1 pods for map[app:agnhost]
Nov  8 12:55:44.379: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 12:55:44.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5985" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]","total":356,"completed":212,"skipped":3769,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:55:44.401: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-7958
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's args
Nov  8 12:55:44.565: INFO: Waiting up to 5m0s for pod "var-expansion-72e34ed6-80fb-4085-a873-3ab37d95ea6f" in namespace "var-expansion-7958" to be "Succeeded or Failed"
Nov  8 12:55:44.572: INFO: Pod "var-expansion-72e34ed6-80fb-4085-a873-3ab37d95ea6f": Phase="Pending", Reason="", readiness=false. Elapsed: 6.411206ms
Nov  8 12:55:46.584: INFO: Pod "var-expansion-72e34ed6-80fb-4085-a873-3ab37d95ea6f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01857433s
Nov  8 12:55:48.593: INFO: Pod "var-expansion-72e34ed6-80fb-4085-a873-3ab37d95ea6f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027467684s
STEP: Saw pod success
Nov  8 12:55:48.593: INFO: Pod "var-expansion-72e34ed6-80fb-4085-a873-3ab37d95ea6f" satisfied condition "Succeeded or Failed"
Nov  8 12:55:48.598: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod var-expansion-72e34ed6-80fb-4085-a873-3ab37d95ea6f container dapi-container: <nil>
STEP: delete the pod
Nov  8 12:55:48.630: INFO: Waiting for pod var-expansion-72e34ed6-80fb-4085-a873-3ab37d95ea6f to disappear
Nov  8 12:55:48.634: INFO: Pod var-expansion-72e34ed6-80fb-4085-a873-3ab37d95ea6f no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Nov  8 12:55:48.634: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-7958" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]","total":356,"completed":213,"skipped":3778,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Projected combined 
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:55:48.655: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3068
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-projected-all-test-volume-241e6b52-fb64-4e40-a354-88bf081c2629
STEP: Creating secret with name secret-projected-all-test-volume-1a0a3e8a-5bd3-4019-a486-2263bfc9c576
STEP: Creating a pod to test Check all projections for projected volume plugin
Nov  8 12:55:48.834: INFO: Waiting up to 5m0s for pod "projected-volume-4f4541fb-8f60-4bc5-a6f0-8f1312a98a01" in namespace "projected-3068" to be "Succeeded or Failed"
Nov  8 12:55:48.855: INFO: Pod "projected-volume-4f4541fb-8f60-4bc5-a6f0-8f1312a98a01": Phase="Pending", Reason="", readiness=false. Elapsed: 20.464204ms
Nov  8 12:55:50.868: INFO: Pod "projected-volume-4f4541fb-8f60-4bc5-a6f0-8f1312a98a01": Phase="Pending", Reason="", readiness=false. Elapsed: 2.033696288s
Nov  8 12:55:52.879: INFO: Pod "projected-volume-4f4541fb-8f60-4bc5-a6f0-8f1312a98a01": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.044916421s
STEP: Saw pod success
Nov  8 12:55:52.879: INFO: Pod "projected-volume-4f4541fb-8f60-4bc5-a6f0-8f1312a98a01" satisfied condition "Succeeded or Failed"
Nov  8 12:55:52.885: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod projected-volume-4f4541fb-8f60-4bc5-a6f0-8f1312a98a01 container projected-all-volume-test: <nil>
STEP: delete the pod
Nov  8 12:55:52.912: INFO: Waiting for pod projected-volume-4f4541fb-8f60-4bc5-a6f0-8f1312a98a01 to disappear
Nov  8 12:55:52.917: INFO: Pod projected-volume-4f4541fb-8f60-4bc5-a6f0-8f1312a98a01 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:188
Nov  8 12:55:52.917: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3068" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]","total":356,"completed":214,"skipped":3785,"failed":0}
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:55:52.937: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-8889
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Nov  8 12:55:53.134: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-8889" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]","total":356,"completed":215,"skipped":3792,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:55:53.174: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2246
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:55:53.442: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: creating the pod
STEP: submitting the pod to kubernetes
Nov  8 12:55:53.462: INFO: The status of Pod pod-exec-websocket-6f072e61-7c76-413c-93a7-7e191ab65b84 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:55:55.471: INFO: The status of Pod pod-exec-websocket-6f072e61-7c76-413c-93a7-7e191ab65b84 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Nov  8 12:55:55.614: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2246" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]","total":356,"completed":216,"skipped":3808,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:55:55.640: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-3159
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
Nov  8 12:56:01.870: INFO: 96 pods remaining
Nov  8 12:56:01.870: INFO: 90 pods has nil DeletionTimestamp
Nov  8 12:56:01.873: INFO: 
Nov  8 12:56:02.871: INFO: 86 pods remaining
Nov  8 12:56:02.871: INFO: 70 pods has nil DeletionTimestamp
Nov  8 12:56:02.871: INFO: 
Nov  8 12:56:03.869: INFO: 86 pods remaining
Nov  8 12:56:03.869: INFO: 69 pods has nil DeletionTimestamp
Nov  8 12:56:03.869: INFO: 
Nov  8 12:56:04.873: INFO: 76 pods remaining
Nov  8 12:56:04.873: INFO: 40 pods has nil DeletionTimestamp
Nov  8 12:56:04.873: INFO: 
Nov  8 12:56:05.903: INFO: 76 pods remaining
Nov  8 12:56:05.903: INFO: 40 pods has nil DeletionTimestamp
Nov  8 12:56:05.903: INFO: 
Nov  8 12:56:06.865: INFO: 75 pods remaining
Nov  8 12:56:06.865: INFO: 11 pods has nil DeletionTimestamp
Nov  8 12:56:06.865: INFO: 
Nov  8 12:56:07.867: INFO: 75 pods remaining
Nov  8 12:56:07.867: INFO: 10 pods has nil DeletionTimestamp
Nov  8 12:56:07.867: INFO: 
Nov  8 12:56:08.870: INFO: 71 pods remaining
Nov  8 12:56:08.870: INFO: 0 pods has nil DeletionTimestamp
Nov  8 12:56:08.870: INFO: 
Nov  8 12:56:09.867: INFO: 62 pods remaining
Nov  8 12:56:09.867: INFO: 0 pods has nil DeletionTimestamp
Nov  8 12:56:09.867: INFO: 
Nov  8 12:56:10.863: INFO: 55 pods remaining
Nov  8 12:56:10.863: INFO: 0 pods has nil DeletionTimestamp
Nov  8 12:56:10.863: INFO: 
Nov  8 12:56:11.893: INFO: 44 pods remaining
Nov  8 12:56:11.893: INFO: 0 pods has nil DeletionTimestamp
Nov  8 12:56:11.893: INFO: 
Nov  8 12:56:12.869: INFO: 39 pods remaining
Nov  8 12:56:12.869: INFO: 0 pods has nil DeletionTimestamp
Nov  8 12:56:12.869: INFO: 
Nov  8 12:56:13.871: INFO: 26 pods remaining
Nov  8 12:56:13.871: INFO: 0 pods has nil DeletionTimestamp
Nov  8 12:56:13.871: INFO: 
Nov  8 12:56:14.862: INFO: 16 pods remaining
Nov  8 12:56:14.862: INFO: 0 pods has nil DeletionTimestamp
Nov  8 12:56:14.862: INFO: 
STEP: Gathering metrics
Nov  8 12:56:15.870: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W1108 12:56:15.870219      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Nov  8 12:56:15.870: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-3159" for this suite.

â€¢ [SLOW TEST:20.251 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]","total":356,"completed":217,"skipped":3857,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:56:15.891: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7220
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-7220
STEP: creating service affinity-clusterip-transition in namespace services-7220
STEP: creating replication controller affinity-clusterip-transition in namespace services-7220
I1108 12:56:16.058721      22 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-7220, replica count: 3
I1108 12:56:19.109342      22 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Nov  8 12:56:19.127: INFO: Creating new exec pod
Nov  8 12:56:22.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7220 exec execpod-affinitynvxhw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
Nov  8 12:56:22.552: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Nov  8 12:56:22.552: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:56:22.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7220 exec execpod-affinitynvxhw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.127.116.236 80'
Nov  8 12:56:22.902: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.127.116.236 80\nConnection to 10.127.116.236 80 port [tcp/http] succeeded!\n"
Nov  8 12:56:22.902: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 12:56:22.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7220 exec execpod-affinitynvxhw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.127.116.236:80/ ; done'
Nov  8 12:56:23.449: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n"
Nov  8 12:56:23.449: INFO: stdout: "\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-zdkcp\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-zdkcp\naffinity-clusterip-transition-zdkcp\naffinity-clusterip-transition-54597\naffinity-clusterip-transition-zdkcp\naffinity-clusterip-transition-54597\naffinity-clusterip-transition-zdkcp\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-zdkcp\naffinity-clusterip-transition-zdkcp\naffinity-clusterip-transition-zdkcp\naffinity-clusterip-transition-zdkcp\naffinity-clusterip-transition-54597\naffinity-clusterip-transition-cjmwn"
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-zdkcp
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-zdkcp
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-zdkcp
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-54597
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-zdkcp
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-54597
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-zdkcp
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-zdkcp
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-zdkcp
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-zdkcp
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-zdkcp
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-54597
Nov  8 12:56:23.449: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.466: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7220 exec execpod-affinitynvxhw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.127.116.236:80/ ; done'
Nov  8 12:56:23.891: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.127.116.236:80/\n"
Nov  8 12:56:23.891: INFO: stdout: "\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn\naffinity-clusterip-transition-cjmwn"
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Received response from host: affinity-clusterip-transition-cjmwn
Nov  8 12:56:23.891: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7220, will wait for the garbage collector to delete the pods
Nov  8 12:56:23.972: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.642789ms
Nov  8 12:56:24.072: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.589348ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 12:56:26.001: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7220" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:10.127 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":218,"skipped":3866,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:56:26.018: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-3514
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pod templates
Nov  8 12:56:26.174: INFO: created test-podtemplate-1
Nov  8 12:56:26.180: INFO: created test-podtemplate-2
Nov  8 12:56:26.185: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace
STEP: delete collection of pod templates
Nov  8 12:56:26.191: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity
Nov  8 12:56:26.209: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Nov  8 12:56:26.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-3514" for this suite.
â€¢{"msg":"PASSED [sig-node] PodTemplates should delete a collection of pod templates [Conformance]","total":356,"completed":219,"skipped":3884,"failed":0}

------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:56:26.240: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2411
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:56:26.963: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:56:30.014: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a validating webhook configuration
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Updating a validating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Patching a validating webhook configuration's rules to include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:56:30.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2411" for this suite.
STEP: Destroying namespace "webhook-2411-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]","total":356,"completed":220,"skipped":3884,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:56:30.350: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2651
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a long running pod
STEP: Ensuring resource quota with not terminating scope captures the pod usage
STEP: Ensuring resource quota with terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a terminating pod
STEP: Ensuring resource quota with terminating scope captures the pod usage
STEP: Ensuring resource quota with not terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Nov  8 12:56:46.662: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2651" for this suite.

â€¢ [SLOW TEST:16.329 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]","total":356,"completed":221,"skipped":3913,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:56:46.680: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-3832
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: closing the watch once it receives two notifications
Nov  8 12:56:46.848: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3832  1a93d38f-1995-44a6-bc90-af46c6de026d 27942 0 2022-11-08 12:56:46 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-11-08 12:56:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Nov  8 12:56:46.849: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3832  1a93d38f-1995-44a6-bc90-af46c6de026d 27943 0 2022-11-08 12:56:46 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-11-08 12:56:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed
STEP: creating a new watch on configmaps from the last resource version observed by the first watch
STEP: deleting the configmap
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed
Nov  8 12:56:46.873: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3832  1a93d38f-1995-44a6-bc90-af46c6de026d 27944 0 2022-11-08 12:56:46 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-11-08 12:56:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Nov  8 12:56:46.874: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3832  1a93d38f-1995-44a6-bc90-af46c6de026d 27945 0 2022-11-08 12:56:46 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-11-08 12:56:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Nov  8 12:56:46.874: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-3832" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]","total":356,"completed":222,"skipped":3932,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:56:46.894: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-360
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-360
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Nov  8 12:56:47.047: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Nov  8 12:56:47.134: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 12:56:49.144: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 12:56:51.143: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 12:56:53.144: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 12:56:55.146: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 12:56:57.145: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 12:56:59.153: INFO: The status of Pod netserver-0 is Running (Ready = true)
Nov  8 12:56:59.166: INFO: The status of Pod netserver-1 is Running (Ready = false)
Nov  8 12:57:01.183: INFO: The status of Pod netserver-1 is Running (Ready = false)
Nov  8 12:57:03.178: INFO: The status of Pod netserver-1 is Running (Ready = false)
Nov  8 12:57:05.178: INFO: The status of Pod netserver-1 is Running (Ready = false)
Nov  8 12:57:07.173: INFO: The status of Pod netserver-1 is Running (Ready = false)
Nov  8 12:57:09.179: INFO: The status of Pod netserver-1 is Running (Ready = true)
Nov  8 12:57:09.192: INFO: The status of Pod netserver-2 is Running (Ready = true)
Nov  8 12:57:09.203: INFO: The status of Pod netserver-3 is Running (Ready = true)
STEP: Creating test pods
Nov  8 12:57:11.356: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
Nov  8 12:57:11.356: INFO: Breadth first check of 10.96.3.57 on host 10.250.3.16...
Nov  8 12:57:11.361: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.96.1.208:9080/dial?request=hostname&protocol=udp&host=10.96.3.57&port=8081&tries=1'] Namespace:pod-network-test-360 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 12:57:11.361: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:57:11.361: INFO: ExecWithOptions: Clientset creation
Nov  8 12:57:11.362: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-360/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.96.1.208%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.96.3.57%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Nov  8 12:57:11.676: INFO: Waiting for responses: map[]
Nov  8 12:57:11.676: INFO: reached 10.96.3.57 after 0/1 tries
Nov  8 12:57:11.676: INFO: Breadth first check of 10.96.2.206 on host 10.250.2.17...
Nov  8 12:57:11.683: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.96.1.208:9080/dial?request=hostname&protocol=udp&host=10.96.2.206&port=8081&tries=1'] Namespace:pod-network-test-360 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 12:57:11.683: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:57:11.684: INFO: ExecWithOptions: Clientset creation
Nov  8 12:57:11.684: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-360/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.96.1.208%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.96.2.206%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Nov  8 12:57:12.091: INFO: Waiting for responses: map[]
Nov  8 12:57:12.091: INFO: reached 10.96.2.206 after 0/1 tries
Nov  8 12:57:12.091: INFO: Breadth first check of 10.96.0.248 on host 10.250.2.170...
Nov  8 12:57:12.098: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.96.1.208:9080/dial?request=hostname&protocol=udp&host=10.96.0.248&port=8081&tries=1'] Namespace:pod-network-test-360 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 12:57:12.098: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:57:12.099: INFO: ExecWithOptions: Clientset creation
Nov  8 12:57:12.099: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-360/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.96.1.208%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.96.0.248%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Nov  8 12:57:12.460: INFO: Waiting for responses: map[]
Nov  8 12:57:12.460: INFO: reached 10.96.0.248 after 0/1 tries
Nov  8 12:57:12.460: INFO: Breadth first check of 10.96.1.49 on host 10.250.2.53...
Nov  8 12:57:12.468: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.96.1.208:9080/dial?request=hostname&protocol=udp&host=10.96.1.49&port=8081&tries=1'] Namespace:pod-network-test-360 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 12:57:12.468: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 12:57:12.469: INFO: ExecWithOptions: Clientset creation
Nov  8 12:57:12.469: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-360/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.96.1.208%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.96.1.49%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Nov  8 12:57:12.832: INFO: Waiting for responses: map[]
Nov  8 12:57:12.832: INFO: reached 10.96.1.49 after 0/1 tries
Nov  8 12:57:12.832: INFO: Going to retry 0 out of 4 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Nov  8 12:57:12.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-360" for this suite.

â€¢ [SLOW TEST:25.960 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]","total":356,"completed":223,"skipped":3950,"failed":0}
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:57:12.856: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-3928
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-pjhw
STEP: Creating a pod to test atomic-volume-subpath
Nov  8 12:57:13.101: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-pjhw" in namespace "subpath-3928" to be "Succeeded or Failed"
Nov  8 12:57:13.107: INFO: Pod "pod-subpath-test-configmap-pjhw": Phase="Pending", Reason="", readiness=false. Elapsed: 6.079556ms
Nov  8 12:57:15.124: INFO: Pod "pod-subpath-test-configmap-pjhw": Phase="Running", Reason="", readiness=true. Elapsed: 2.02327466s
Nov  8 12:57:17.136: INFO: Pod "pod-subpath-test-configmap-pjhw": Phase="Running", Reason="", readiness=true. Elapsed: 4.03461227s
Nov  8 12:57:19.149: INFO: Pod "pod-subpath-test-configmap-pjhw": Phase="Running", Reason="", readiness=true. Elapsed: 6.047582844s
Nov  8 12:57:21.163: INFO: Pod "pod-subpath-test-configmap-pjhw": Phase="Running", Reason="", readiness=true. Elapsed: 8.06219702s
Nov  8 12:57:23.173: INFO: Pod "pod-subpath-test-configmap-pjhw": Phase="Running", Reason="", readiness=true. Elapsed: 10.072209261s
Nov  8 12:57:25.184: INFO: Pod "pod-subpath-test-configmap-pjhw": Phase="Running", Reason="", readiness=true. Elapsed: 12.083389783s
Nov  8 12:57:27.196: INFO: Pod "pod-subpath-test-configmap-pjhw": Phase="Running", Reason="", readiness=true. Elapsed: 14.095217235s
Nov  8 12:57:29.210: INFO: Pod "pod-subpath-test-configmap-pjhw": Phase="Running", Reason="", readiness=true. Elapsed: 16.108630508s
Nov  8 12:57:31.224: INFO: Pod "pod-subpath-test-configmap-pjhw": Phase="Running", Reason="", readiness=true. Elapsed: 18.122622337s
Nov  8 12:57:33.235: INFO: Pod "pod-subpath-test-configmap-pjhw": Phase="Running", Reason="", readiness=true. Elapsed: 20.134336045s
Nov  8 12:57:35.246: INFO: Pod "pod-subpath-test-configmap-pjhw": Phase="Running", Reason="", readiness=false. Elapsed: 22.14486305s
Nov  8 12:57:37.259: INFO: Pod "pod-subpath-test-configmap-pjhw": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.158346436s
STEP: Saw pod success
Nov  8 12:57:37.259: INFO: Pod "pod-subpath-test-configmap-pjhw" satisfied condition "Succeeded or Failed"
Nov  8 12:57:37.272: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc pod pod-subpath-test-configmap-pjhw container test-container-subpath-configmap-pjhw: <nil>
STEP: delete the pod
Nov  8 12:57:37.304: INFO: Waiting for pod pod-subpath-test-configmap-pjhw to disappear
Nov  8 12:57:37.310: INFO: Pod pod-subpath-test-configmap-pjhw no longer exists
STEP: Deleting pod pod-subpath-test-configmap-pjhw
Nov  8 12:57:37.310: INFO: Deleting pod "pod-subpath-test-configmap-pjhw" in namespace "subpath-3928"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Nov  8 12:57:37.316: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-3928" for this suite.

â€¢ [SLOW TEST:24.482 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]","total":356,"completed":224,"skipped":3956,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:57:37.339: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6342
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 12:57:38.029: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 12:57:41.068: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 12:57:41.077: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3774-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource while v1 is storage version
STEP: Patching Custom Resource Definition to set v2 as storage
STEP: Patching the custom resource while v2 is storage version
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 12:57:44.534: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6342" for this suite.
STEP: Destroying namespace "webhook-6342-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:7.256 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]","total":356,"completed":225,"skipped":3976,"failed":0}
SSSSSSS
------------------------------
[sig-network] IngressClass API 
   should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:57:44.595: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename ingressclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingressclass-3403
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:188
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Nov  8 12:57:44.794: INFO: starting watch
STEP: patching
STEP: updating
Nov  8 12:57:44.816: INFO: waiting for watch events with expected annotations
Nov  8 12:57:44.816: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:188
Nov  8 12:57:44.846: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingressclass-3403" for this suite.
â€¢{"msg":"PASSED [sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]","total":356,"completed":226,"skipped":3983,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 12:57:44.868: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-7160
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Nov  8 12:57:45.015: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Nov  8 12:57:45.045: INFO: Waiting for terminating namespaces to be deleted...
Nov  8 12:57:45.052: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm before test
Nov  8 12:57:45.071: INFO: apiserver-proxy-b2tpk from kube-system started at 2022-11-08 12:05:58 +0000 UTC (2 container statuses recorded)
Nov  8 12:57:45.071: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:57:45.071: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:57:45.071: INFO: cilium-c6w8t from kube-system started at 2022-11-08 12:05:58 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.071: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:57:45.071: INFO: csi-driver-node-qgnwd from kube-system started at 2022-11-08 12:05:58 +0000 UTC (3 container statuses recorded)
Nov  8 12:57:45.071: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:57:45.071: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:57:45.071: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:57:45.071: INFO: kube-proxy-worker-als7z-v1.24.7-d8gkj from kube-system started at 2022-11-08 12:05:58 +0000 UTC (2 container statuses recorded)
Nov  8 12:57:45.071: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:57:45.071: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:57:45.071: INFO: node-exporter-4ff28 from kube-system started at 2022-11-08 12:05:58 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.071: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:57:45.071: INFO: node-problem-detector-v668n from kube-system started at 2022-11-08 12:05:58 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.071: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:57:45.071: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-5ppr7 from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:57:45.071: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:57:45.071: INFO: 	Container systemd-logs ready: true, restart count 0
Nov  8 12:57:45.071: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z before test
Nov  8 12:57:45.093: INFO: apiserver-proxy-wcz5q from kube-system started at 2022-11-08 12:05:57 +0000 UTC (2 container statuses recorded)
Nov  8 12:57:45.093: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:57:45.093: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:57:45.093: INFO: cilium-p8wkv from kube-system started at 2022-11-08 12:05:57 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.093: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:57:45.093: INFO: csi-driver-node-z4gvc from kube-system started at 2022-11-08 12:05:57 +0000 UTC (3 container statuses recorded)
Nov  8 12:57:45.093: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:57:45.093: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:57:45.093: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:57:45.093: INFO: kube-proxy-worker-als7z-v1.24.7-bqnlf from kube-system started at 2022-11-08 12:05:57 +0000 UTC (2 container statuses recorded)
Nov  8 12:57:45.093: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:57:45.093: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:57:45.093: INFO: node-exporter-vsvv9 from kube-system started at 2022-11-08 12:05:57 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.093: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:57:45.093: INFO: node-problem-detector-cttk5 from kube-system started at 2022-11-08 12:05:57 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.093: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:57:45.093: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-grsjl from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:57:45.093: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:57:45.093: INFO: 	Container systemd-logs ready: true, restart count 0
Nov  8 12:57:45.093: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-4sjsc before test
Nov  8 12:57:45.118: INFO: apiserver-proxy-lbkkq from kube-system started at 2022-11-08 11:56:30 +0000 UTC (2 container statuses recorded)
Nov  8 12:57:45.118: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:57:45.118: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:57:45.118: INFO: blackbox-exporter-7c445d84b4-p9b7s from kube-system started at 2022-11-08 11:56:40 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.118: INFO: 	Container blackbox-exporter ready: true, restart count 0
Nov  8 12:57:45.118: INFO: blackbox-exporter-7c445d84b4-r2cn2 from kube-system started at 2022-11-08 11:56:40 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.118: INFO: 	Container blackbox-exporter ready: true, restart count 0
Nov  8 12:57:45.118: INFO: cilium-ntlkq from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.118: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:57:45.118: INFO: cilium-operator-fb5f68d45-hf2vx from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.118: INFO: 	Container cilium-operator ready: true, restart count 0
Nov  8 12:57:45.118: INFO: csi-driver-node-tbftn from kube-system started at 2022-11-08 11:56:30 +0000 UTC (3 container statuses recorded)
Nov  8 12:57:45.118: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:57:45.118: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:57:45.118: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:57:45.118: INFO: kube-proxy-worker-ld4ha-v1.24.7-j8gzf from kube-system started at 2022-11-08 11:56:40 +0000 UTC (2 container statuses recorded)
Nov  8 12:57:45.118: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:57:45.118: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:57:45.118: INFO: node-exporter-69tsx from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.118: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:57:45.118: INFO: node-problem-detector-74vkx from kube-system started at 2022-11-08 11:56:30 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.118: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:57:45.118: INFO: sonobuoy from sonobuoy started at 2022-11-08 12:11:02 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.118: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Nov  8 12:57:45.118: INFO: sonobuoy-e2e-job-a84be4cdb9164430 from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:57:45.118: INFO: 	Container e2e ready: true, restart count 0
Nov  8 12:57:45.118: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:57:45.118: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-l25mf from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:57:45.118: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:57:45.118: INFO: 	Container systemd-logs ready: true, restart count 0
Nov  8 12:57:45.118: INFO: 
Logging pods the apiserver thinks is on node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw before test
Nov  8 12:57:45.142: INFO: apiserver-proxy-67kl9 from kube-system started at 2022-11-08 11:56:37 +0000 UTC (2 container statuses recorded)
Nov  8 12:57:45.142: INFO: 	Container proxy ready: true, restart count 0
Nov  8 12:57:45.142: INFO: 	Container sidecar ready: true, restart count 0
Nov  8 12:57:45.142: INFO: cilium-427j9 from kube-system started at 2022-11-08 11:56:37 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.142: INFO: 	Container cilium-agent ready: true, restart count 0
Nov  8 12:57:45.142: INFO: coredns-8686744dd4-5fk2d from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.142: INFO: 	Container coredns ready: true, restart count 0
Nov  8 12:57:45.142: INFO: coredns-8686744dd4-tpzbm from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.142: INFO: 	Container coredns ready: true, restart count 0
Nov  8 12:57:45.142: INFO: csi-driver-node-8zqbd from kube-system started at 2022-11-08 11:56:37 +0000 UTC (3 container statuses recorded)
Nov  8 12:57:45.142: INFO: 	Container csi-driver ready: true, restart count 0
Nov  8 12:57:45.142: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Nov  8 12:57:45.142: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Nov  8 12:57:45.142: INFO: kube-proxy-worker-ld4ha-v1.24.7-tzm8r from kube-system started at 2022-11-08 11:56:46 +0000 UTC (2 container statuses recorded)
Nov  8 12:57:45.142: INFO: 	Container conntrack-fix ready: true, restart count 0
Nov  8 12:57:45.142: INFO: 	Container kube-proxy ready: true, restart count 0
Nov  8 12:57:45.142: INFO: metrics-server-848ccfb6d4-9cgtc from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.142: INFO: 	Container metrics-server ready: true, restart count 0
Nov  8 12:57:45.142: INFO: node-exporter-jkkr8 from kube-system started at 2022-11-08 11:56:37 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.142: INFO: 	Container node-exporter ready: true, restart count 0
Nov  8 12:57:45.142: INFO: node-problem-detector-r2gkf from kube-system started at 2022-11-08 11:56:37 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.142: INFO: 	Container node-problem-detector ready: true, restart count 0
Nov  8 12:57:45.142: INFO: vpn-shoot-56ddcc9878-bj6wb from kube-system started at 2022-11-08 11:57:21 +0000 UTC (1 container statuses recorded)
Nov  8 12:57:45.142: INFO: 	Container vpn-shoot ready: true, restart count 0
Nov  8 12:57:45.142: INFO: sonobuoy-systemd-logs-daemon-set-f020433f47884871-f6s9d from sonobuoy started at 2022-11-08 12:11:06 +0000 UTC (2 container statuses recorded)
Nov  8 12:57:45.142: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Nov  8 12:57:45.142: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-9cbcee44-5564-414a-b98f-811ddc1afdd5 95
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.250.2.53 on the node which pod4 resides and expect not scheduled
STEP: removing the label kubernetes.io/e2e-9cbcee44-5564-414a-b98f-811ddc1afdd5 off the node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-zplpw
STEP: verifying the node doesn't have the label kubernetes.io/e2e-9cbcee44-5564-414a-b98f-811ddc1afdd5
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Nov  8 13:02:49.337: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
Nov  8 13:02:49.350: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false instead of true. Reason: KubeletNotReady, message: [container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized, failed to initialize CSINode: error updating CSINode annotation: timed out waiting for the condition; caused by: nodes "shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt" not found]
Nov  8 13:02:51.372: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:02:53.369: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:02:55.373: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:02:57.370: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:02:59.368: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:01.371: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:03.371: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:05.382: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:07.375: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:09.373: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:11.372: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:13.370: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:15.373: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:17.369: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:19.376: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:21.377: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:23.378: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:25.370: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:27.370: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:29.372: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:31.378: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:33.372: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:35.371: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:37.365: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:39.375: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:41.378: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:43.379: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:45.371: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:47.372: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:49.381: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:51.370: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:53.368: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:55.377: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:57.371: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:03:59.377: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:04:01.371: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:04:03.373: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:04:05.377: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:04:07.368: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is false, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
Nov  8 13:04:09.371: INFO: Condition Ready of node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt is true, but Node is tainted by NodeController with [{node.kubernetes.io/not-ready  NoExecute 2022-11-08 13:02:49 +0000 UTC}]. Failure
STEP: Destroying namespace "sched-pred-7160" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

â€¢ [SLOW TEST:386.525 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]","total":356,"completed":227,"skipped":4019,"failed":0}
SSSSS
------------------------------
[sig-network] Service endpoints latency 
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:04:11.394: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename svc-latency
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svc-latency-1570
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:04:11.547: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: creating replication controller svc-latency-rc in namespace svc-latency-1570
I1108 13:04:11.556016      22 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1570, replica count: 1
I1108 13:04:12.606937      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I1108 13:04:13.607106      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I1108 13:04:14.607271      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I1108 13:04:15.607458      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I1108 13:04:16.607805      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I1108 13:04:17.608190      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Nov  8 13:04:17.831: INFO: Created: latency-svc-zdnm5
Nov  8 13:04:17.837: INFO: Got endpoints: latency-svc-zdnm5 [129.090846ms]
Nov  8 13:04:17.854: INFO: Created: latency-svc-5l7nn
Nov  8 13:04:17.862: INFO: Created: latency-svc-584fj
Nov  8 13:04:17.862: INFO: Got endpoints: latency-svc-5l7nn [24.829756ms]
Nov  8 13:04:17.870: INFO: Got endpoints: latency-svc-584fj [31.77666ms]
Nov  8 13:04:17.870: INFO: Created: latency-svc-w6d85
Nov  8 13:04:17.873: INFO: Got endpoints: latency-svc-w6d85 [35.714887ms]
Nov  8 13:04:17.879: INFO: Created: latency-svc-mwvbc
Nov  8 13:04:18.006: INFO: Got endpoints: latency-svc-mwvbc [167.958429ms]
Nov  8 13:04:18.006: INFO: Created: latency-svc-9rnxr
Nov  8 13:04:18.014: INFO: Got endpoints: latency-svc-9rnxr [176.187766ms]
Nov  8 13:04:18.015: INFO: Created: latency-svc-tnvrl
Nov  8 13:04:18.024: INFO: Got endpoints: latency-svc-tnvrl [185.781148ms]
Nov  8 13:04:18.027: INFO: Created: latency-svc-4gdg5
Nov  8 13:04:18.029: INFO: Got endpoints: latency-svc-4gdg5 [190.962527ms]
Nov  8 13:04:18.034: INFO: Created: latency-svc-pjf6x
Nov  8 13:04:18.043: INFO: Got endpoints: latency-svc-pjf6x [204.919865ms]
Nov  8 13:04:18.043: INFO: Created: latency-svc-2f44z
Nov  8 13:04:18.050: INFO: Got endpoints: latency-svc-2f44z [212.424281ms]
Nov  8 13:04:18.050: INFO: Created: latency-svc-7tc4b
Nov  8 13:04:18.061: INFO: Got endpoints: latency-svc-7tc4b [223.119662ms]
Nov  8 13:04:18.062: INFO: Created: latency-svc-dgsrs
Nov  8 13:04:18.062: INFO: Got endpoints: latency-svc-dgsrs [223.543357ms]
Nov  8 13:04:18.068: INFO: Created: latency-svc-8m6ks
Nov  8 13:04:18.075: INFO: Got endpoints: latency-svc-8m6ks [237.22255ms]
Nov  8 13:04:18.075: INFO: Created: latency-svc-qb42t
Nov  8 13:04:18.085: INFO: Got endpoints: latency-svc-qb42t [246.955ms]
Nov  8 13:04:18.097: INFO: Created: latency-svc-8hh28
Nov  8 13:04:18.121: INFO: Created: latency-svc-ng8dt
Nov  8 13:04:18.123: INFO: Got endpoints: latency-svc-8hh28 [284.995473ms]
Nov  8 13:04:18.128: INFO: Created: latency-svc-l669h
Nov  8 13:04:18.129: INFO: Got endpoints: latency-svc-ng8dt [290.599032ms]
Nov  8 13:04:18.134: INFO: Created: latency-svc-xf4b8
Nov  8 13:04:18.134: INFO: Got endpoints: latency-svc-l669h [271.826305ms]
Nov  8 13:04:18.144: INFO: Got endpoints: latency-svc-xf4b8 [274.073924ms]
Nov  8 13:04:18.145: INFO: Created: latency-svc-jwp6d
Nov  8 13:04:18.148: INFO: Got endpoints: latency-svc-jwp6d [274.354434ms]
Nov  8 13:04:18.154: INFO: Created: latency-svc-pphrr
Nov  8 13:04:18.159: INFO: Got endpoints: latency-svc-pphrr [153.224157ms]
Nov  8 13:04:18.167: INFO: Created: latency-svc-wtmc6
Nov  8 13:04:18.299: INFO: Got endpoints: latency-svc-wtmc6 [284.941457ms]
Nov  8 13:04:18.301: INFO: Created: latency-svc-jtwh6
Nov  8 13:04:18.307: INFO: Got endpoints: latency-svc-jtwh6 [283.867269ms]
Nov  8 13:04:18.308: INFO: Created: latency-svc-fb2rq
Nov  8 13:04:18.322: INFO: Got endpoints: latency-svc-fb2rq [292.791494ms]
Nov  8 13:04:18.323: INFO: Created: latency-svc-pcs9p
Nov  8 13:04:18.332: INFO: Created: latency-svc-fpmpm
Nov  8 13:04:18.332: INFO: Got endpoints: latency-svc-pcs9p [289.330008ms]
Nov  8 13:04:18.339: INFO: Created: latency-svc-tgrff
Nov  8 13:04:18.339: INFO: Got endpoints: latency-svc-fpmpm [288.45ms]
Nov  8 13:04:18.354: INFO: Created: latency-svc-64lff
Nov  8 13:04:18.354: INFO: Got endpoints: latency-svc-tgrff [292.55726ms]
Nov  8 13:04:18.354: INFO: Got endpoints: latency-svc-64lff [292.26497ms]
Nov  8 13:04:18.359: INFO: Created: latency-svc-4tvn4
Nov  8 13:04:18.362: INFO: Created: latency-svc-nqpb4
Nov  8 13:04:18.366: INFO: Got endpoints: latency-svc-4tvn4 [290.928918ms]
Nov  8 13:04:18.367: INFO: Got endpoints: latency-svc-nqpb4 [282.475113ms]
Nov  8 13:04:18.370: INFO: Created: latency-svc-5r846
Nov  8 13:04:18.377: INFO: Got endpoints: latency-svc-5r846 [254.031529ms]
Nov  8 13:04:18.378: INFO: Created: latency-svc-9kn4g
Nov  8 13:04:18.381: INFO: Got endpoints: latency-svc-9kn4g [252.147151ms]
Nov  8 13:04:18.386: INFO: Created: latency-svc-drx64
Nov  8 13:04:18.388: INFO: Got endpoints: latency-svc-drx64 [254.130742ms]
Nov  8 13:04:18.409: INFO: Created: latency-svc-cxclt
Nov  8 13:04:18.418: INFO: Got endpoints: latency-svc-cxclt [273.61613ms]
Nov  8 13:04:18.418: INFO: Created: latency-svc-9qt7z
Nov  8 13:04:18.426: INFO: Created: latency-svc-52hlf
Nov  8 13:04:18.426: INFO: Got endpoints: latency-svc-9qt7z [278.149889ms]
Nov  8 13:04:18.433: INFO: Got endpoints: latency-svc-52hlf [273.483124ms]
Nov  8 13:04:18.434: INFO: Created: latency-svc-c2cvm
Nov  8 13:04:18.445: INFO: Got endpoints: latency-svc-c2cvm [146.10797ms]
Nov  8 13:04:18.446: INFO: Created: latency-svc-p9lvn
Nov  8 13:04:18.451: INFO: Got endpoints: latency-svc-p9lvn [143.513087ms]
Nov  8 13:04:18.457: INFO: Created: latency-svc-vbnk4
Nov  8 13:04:18.464: INFO: Got endpoints: latency-svc-vbnk4 [142.4498ms]
Nov  8 13:04:18.464: INFO: Created: latency-svc-pclf6
Nov  8 13:04:18.468: INFO: Got endpoints: latency-svc-pclf6 [136.027396ms]
Nov  8 13:04:18.473: INFO: Created: latency-svc-qqr8q
Nov  8 13:04:18.487: INFO: Got endpoints: latency-svc-qqr8q [148.146873ms]
Nov  8 13:04:18.488: INFO: Created: latency-svc-kjm9g
Nov  8 13:04:18.493: INFO: Created: latency-svc-x28cr
Nov  8 13:04:18.501: INFO: Got endpoints: latency-svc-x28cr [146.765305ms]
Nov  8 13:04:18.501: INFO: Got endpoints: latency-svc-kjm9g [146.964694ms]
Nov  8 13:04:18.501: INFO: Created: latency-svc-psmlc
Nov  8 13:04:18.620: INFO: Got endpoints: latency-svc-psmlc [252.720195ms]
Nov  8 13:04:18.626: INFO: Created: latency-svc-7s6bf
Nov  8 13:04:18.632: INFO: Got endpoints: latency-svc-7s6bf [265.747691ms]
Nov  8 13:04:18.635: INFO: Created: latency-svc-l5j92
Nov  8 13:04:18.644: INFO: Got endpoints: latency-svc-l5j92 [266.34205ms]
Nov  8 13:04:18.780: INFO: Created: latency-svc-cv26j
Nov  8 13:04:18.780: INFO: Created: latency-svc-qcsbt
Nov  8 13:04:18.780: INFO: Created: latency-svc-4bh6h
Nov  8 13:04:18.781: INFO: Created: latency-svc-8r6cr
Nov  8 13:04:18.781: INFO: Created: latency-svc-hhzd6
Nov  8 13:04:18.781: INFO: Created: latency-svc-l6248
Nov  8 13:04:18.781: INFO: Created: latency-svc-vxmzb
Nov  8 13:04:18.781: INFO: Created: latency-svc-mmt5r
Nov  8 13:04:18.783: INFO: Created: latency-svc-f774c
Nov  8 13:04:18.790: INFO: Created: latency-svc-p565s
Nov  8 13:04:18.790: INFO: Created: latency-svc-x2gkx
Nov  8 13:04:18.790: INFO: Created: latency-svc-xbxpt
Nov  8 13:04:18.790: INFO: Created: latency-svc-7nlgt
Nov  8 13:04:18.790: INFO: Created: latency-svc-7vpbr
Nov  8 13:04:18.790: INFO: Created: latency-svc-9wb5g
Nov  8 13:04:18.793: INFO: Got endpoints: latency-svc-l6248 [347.52127ms]
Nov  8 13:04:18.793: INFO: Got endpoints: latency-svc-4bh6h [342.044015ms]
Nov  8 13:04:18.793: INFO: Got endpoints: latency-svc-mmt5r [306.443988ms]
Nov  8 13:04:18.796: INFO: Got endpoints: latency-svc-hhzd6 [295.603578ms]
Nov  8 13:04:18.811: INFO: Created: latency-svc-qkm7g
Nov  8 13:04:18.818: INFO: Created: latency-svc-6nq95
Nov  8 13:04:18.826: INFO: Created: latency-svc-z47lm
Nov  8 13:04:18.968: INFO: Got endpoints: latency-svc-8r6cr [535.033557ms]
Nov  8 13:04:18.968: INFO: Created: latency-svc-v49hq
Nov  8 13:04:18.969: INFO: Got endpoints: latency-svc-qcsbt [500.195841ms]
Nov  8 13:04:18.969: INFO: Got endpoints: latency-svc-f774c [325.768786ms]
Nov  8 13:04:18.989: INFO: Created: latency-svc-kqpqz
Nov  8 13:04:18.990: INFO: Got endpoints: latency-svc-vxmzb [370.27867ms]
Nov  8 13:04:18.998: INFO: Created: latency-svc-2gg8j
Nov  8 13:04:19.005: INFO: Created: latency-svc-ppcqb
Nov  8 13:04:19.013: INFO: Created: latency-svc-vmc6c
Nov  8 13:04:19.034: INFO: Got endpoints: latency-svc-cv26j [653.590394ms]
Nov  8 13:04:19.051: INFO: Created: latency-svc-6rvv6
Nov  8 13:04:19.084: INFO: Got endpoints: latency-svc-xbxpt [451.838578ms]
Nov  8 13:04:19.102: INFO: Created: latency-svc-96688
Nov  8 13:04:19.139: INFO: Got endpoints: latency-svc-7vpbr [721.799266ms]
Nov  8 13:04:19.156: INFO: Created: latency-svc-f7wtt
Nov  8 13:04:19.186: INFO: Got endpoints: latency-svc-9wb5g [797.668611ms]
Nov  8 13:04:19.201: INFO: Created: latency-svc-z7cc7
Nov  8 13:04:19.236: INFO: Got endpoints: latency-svc-x2gkx [771.589614ms]
Nov  8 13:04:19.368: INFO: Got endpoints: latency-svc-p565s [942.091697ms]
Nov  8 13:04:19.368: INFO: Got endpoints: latency-svc-7nlgt [867.316318ms]
Nov  8 13:04:19.376: INFO: Created: latency-svc-72nhh
Nov  8 13:04:19.388: INFO: Created: latency-svc-sd6c8
Nov  8 13:04:19.388: INFO: Got endpoints: latency-svc-qkm7g [594.729732ms]
Nov  8 13:04:19.521: INFO: Got endpoints: latency-svc-6nq95 [728.476079ms]
Nov  8 13:04:19.521: INFO: Got endpoints: latency-svc-z47lm [727.759954ms]
Nov  8 13:04:19.523: INFO: Created: latency-svc-8zztn
Nov  8 13:04:19.528: INFO: Created: latency-svc-zqcc5
Nov  8 13:04:19.535: INFO: Got endpoints: latency-svc-v49hq [738.269392ms]
Nov  8 13:04:19.551: INFO: Created: latency-svc-thwpd
Nov  8 13:04:19.556: INFO: Created: latency-svc-gvd8f
Nov  8 13:04:19.564: INFO: Created: latency-svc-6kkd2
Nov  8 13:04:19.585: INFO: Got endpoints: latency-svc-kqpqz [616.045753ms]
Nov  8 13:04:19.600: INFO: Created: latency-svc-dcp9q
Nov  8 13:04:19.633: INFO: Got endpoints: latency-svc-2gg8j [665.237432ms]
Nov  8 13:04:19.649: INFO: Created: latency-svc-2tvr9
Nov  8 13:04:19.684: INFO: Got endpoints: latency-svc-ppcqb [714.835363ms]
Nov  8 13:04:19.700: INFO: Created: latency-svc-c9h84
Nov  8 13:04:19.733: INFO: Got endpoints: latency-svc-vmc6c [742.980666ms]
Nov  8 13:04:19.864: INFO: Got endpoints: latency-svc-96688 [780.032811ms]
Nov  8 13:04:19.864: INFO: Got endpoints: latency-svc-6rvv6 [829.371503ms]
Nov  8 13:04:19.873: INFO: Created: latency-svc-zzvkb
Nov  8 13:04:19.881: INFO: Created: latency-svc-nxxhc
Nov  8 13:04:19.885: INFO: Got endpoints: latency-svc-f7wtt [745.568647ms]
Nov  8 13:04:19.889: INFO: Created: latency-svc-8jqgk
Nov  8 13:04:19.899: INFO: Created: latency-svc-pxgnc
Nov  8 13:04:19.936: INFO: Got endpoints: latency-svc-z7cc7 [749.485214ms]
Nov  8 13:04:19.950: INFO: Created: latency-svc-qqp5t
Nov  8 13:04:19.986: INFO: Got endpoints: latency-svc-72nhh [750.401679ms]
Nov  8 13:04:20.005: INFO: Created: latency-svc-647bt
Nov  8 13:04:20.036: INFO: Got endpoints: latency-svc-sd6c8 [667.817107ms]
Nov  8 13:04:20.052: INFO: Created: latency-svc-5hv29
Nov  8 13:04:20.086: INFO: Got endpoints: latency-svc-8zztn [717.907911ms]
Nov  8 13:04:20.155: INFO: Created: latency-svc-m8x9h
Nov  8 13:04:20.155: INFO: Got endpoints: latency-svc-zqcc5 [767.255752ms]
Nov  8 13:04:20.277: INFO: Got endpoints: latency-svc-gvd8f [755.513706ms]
Nov  8 13:04:20.277: INFO: Got endpoints: latency-svc-thwpd [755.994296ms]
Nov  8 13:04:20.286: INFO: Created: latency-svc-44p47
Nov  8 13:04:20.289: INFO: Got endpoints: latency-svc-6kkd2 [753.860498ms]
Nov  8 13:04:20.296: INFO: Created: latency-svc-4z46m
Nov  8 13:04:20.340: INFO: Got endpoints: latency-svc-dcp9q [755.079274ms]
Nov  8 13:04:20.340: INFO: Created: latency-svc-476hq
Nov  8 13:04:20.346: INFO: Created: latency-svc-sx47g
Nov  8 13:04:20.360: INFO: Created: latency-svc-c8f2c
Nov  8 13:04:20.386: INFO: Got endpoints: latency-svc-2tvr9 [753.15221ms]
Nov  8 13:04:20.427: INFO: Created: latency-svc-7n68d
Nov  8 13:04:20.433: INFO: Got endpoints: latency-svc-c9h84 [748.269174ms]
Nov  8 13:04:20.452: INFO: Created: latency-svc-pdj4p
Nov  8 13:04:20.489: INFO: Got endpoints: latency-svc-zzvkb [756.18878ms]
Nov  8 13:04:20.503: INFO: Created: latency-svc-m7bsk
Nov  8 13:04:20.533: INFO: Got endpoints: latency-svc-nxxhc [668.592274ms]
Nov  8 13:04:20.545: INFO: Created: latency-svc-gq4lr
Nov  8 13:04:20.583: INFO: Got endpoints: latency-svc-8jqgk [719.165883ms]
Nov  8 13:04:20.602: INFO: Created: latency-svc-b99m4
Nov  8 13:04:20.636: INFO: Got endpoints: latency-svc-pxgnc [750.681263ms]
Nov  8 13:04:20.664: INFO: Created: latency-svc-7kzbb
Nov  8 13:04:20.683: INFO: Got endpoints: latency-svc-qqp5t [747.143817ms]
Nov  8 13:04:20.704: INFO: Created: latency-svc-cxmrv
Nov  8 13:04:20.732: INFO: Got endpoints: latency-svc-647bt [746.005763ms]
Nov  8 13:04:20.747: INFO: Created: latency-svc-m6qwz
Nov  8 13:04:20.782: INFO: Got endpoints: latency-svc-5hv29 [746.33302ms]
Nov  8 13:04:20.796: INFO: Created: latency-svc-lbkrk
Nov  8 13:04:20.842: INFO: Got endpoints: latency-svc-m8x9h [755.480838ms]
Nov  8 13:04:20.860: INFO: Created: latency-svc-ssls9
Nov  8 13:04:20.882: INFO: Got endpoints: latency-svc-44p47 [726.94961ms]
Nov  8 13:04:20.896: INFO: Created: latency-svc-twmw7
Nov  8 13:04:20.941: INFO: Got endpoints: latency-svc-4z46m [663.565706ms]
Nov  8 13:04:20.955: INFO: Created: latency-svc-r4822
Nov  8 13:04:20.985: INFO: Got endpoints: latency-svc-476hq [707.785337ms]
Nov  8 13:04:21.000: INFO: Created: latency-svc-pfnmn
Nov  8 13:04:21.037: INFO: Got endpoints: latency-svc-sx47g [748.841273ms]
Nov  8 13:04:21.060: INFO: Created: latency-svc-rbpdp
Nov  8 13:04:21.092: INFO: Got endpoints: latency-svc-c8f2c [752.390011ms]
Nov  8 13:04:21.107: INFO: Created: latency-svc-dcczl
Nov  8 13:04:21.135: INFO: Got endpoints: latency-svc-7n68d [749.02197ms]
Nov  8 13:04:21.156: INFO: Created: latency-svc-5q46w
Nov  8 13:04:21.371: INFO: Got endpoints: latency-svc-m7bsk [881.193974ms]
Nov  8 13:04:21.371: INFO: Got endpoints: latency-svc-pdj4p [938.1382ms]
Nov  8 13:04:21.371: INFO: Got endpoints: latency-svc-b99m4 [787.60803ms]
Nov  8 13:04:21.371: INFO: Got endpoints: latency-svc-gq4lr [838.138689ms]
Nov  8 13:04:21.384: INFO: Got endpoints: latency-svc-7kzbb [748.69449ms]
Nov  8 13:04:21.390: INFO: Created: latency-svc-k4fzr
Nov  8 13:04:21.399: INFO: Created: latency-svc-565v5
Nov  8 13:04:21.409: INFO: Created: latency-svc-dvjvk
Nov  8 13:04:21.413: INFO: Created: latency-svc-5ngfg
Nov  8 13:04:21.420: INFO: Created: latency-svc-jhrc7
Nov  8 13:04:21.433: INFO: Got endpoints: latency-svc-cxmrv [750.166476ms]
Nov  8 13:04:21.451: INFO: Created: latency-svc-vhrrd
Nov  8 13:04:21.484: INFO: Got endpoints: latency-svc-m6qwz [751.158644ms]
Nov  8 13:04:21.498: INFO: Created: latency-svc-97wvx
Nov  8 13:04:21.535: INFO: Got endpoints: latency-svc-lbkrk [752.257297ms]
Nov  8 13:04:21.552: INFO: Created: latency-svc-ljmq2
Nov  8 13:04:21.586: INFO: Got endpoints: latency-svc-ssls9 [744.064247ms]
Nov  8 13:04:21.608: INFO: Created: latency-svc-l94zk
Nov  8 13:04:21.634: INFO: Got endpoints: latency-svc-twmw7 [751.65202ms]
Nov  8 13:04:21.647: INFO: Created: latency-svc-q29fs
Nov  8 13:04:21.691: INFO: Got endpoints: latency-svc-r4822 [750.25668ms]
Nov  8 13:04:21.706: INFO: Created: latency-svc-9w6hg
Nov  8 13:04:21.732: INFO: Got endpoints: latency-svc-pfnmn [746.747767ms]
Nov  8 13:04:21.750: INFO: Created: latency-svc-kgzkx
Nov  8 13:04:21.783: INFO: Got endpoints: latency-svc-rbpdp [745.116417ms]
Nov  8 13:04:21.803: INFO: Created: latency-svc-nbptd
Nov  8 13:04:21.838: INFO: Got endpoints: latency-svc-dcczl [746.047019ms]
Nov  8 13:04:21.854: INFO: Created: latency-svc-b2jjk
Nov  8 13:04:21.884: INFO: Got endpoints: latency-svc-5q46w [748.522971ms]
Nov  8 13:04:21.903: INFO: Created: latency-svc-794wb
Nov  8 13:04:21.937: INFO: Got endpoints: latency-svc-k4fzr [566.130034ms]
Nov  8 13:04:21.949: INFO: Created: latency-svc-5cb5t
Nov  8 13:04:21.984: INFO: Got endpoints: latency-svc-565v5 [613.65463ms]
Nov  8 13:04:21.998: INFO: Created: latency-svc-8wkvf
Nov  8 13:04:22.036: INFO: Got endpoints: latency-svc-dvjvk [665.160737ms]
Nov  8 13:04:22.050: INFO: Created: latency-svc-l95fd
Nov  8 13:04:22.086: INFO: Got endpoints: latency-svc-5ngfg [715.874045ms]
Nov  8 13:04:22.104: INFO: Created: latency-svc-lgcfv
Nov  8 13:04:22.135: INFO: Got endpoints: latency-svc-jhrc7 [750.373969ms]
Nov  8 13:04:22.149: INFO: Created: latency-svc-d9l7v
Nov  8 13:04:22.182: INFO: Got endpoints: latency-svc-vhrrd [749.314974ms]
Nov  8 13:04:22.198: INFO: Created: latency-svc-d7nc6
Nov  8 13:04:22.236: INFO: Got endpoints: latency-svc-97wvx [752.150469ms]
Nov  8 13:04:22.250: INFO: Created: latency-svc-r924s
Nov  8 13:04:22.285: INFO: Got endpoints: latency-svc-ljmq2 [750.672486ms]
Nov  8 13:04:22.300: INFO: Created: latency-svc-fjxvx
Nov  8 13:04:22.338: INFO: Got endpoints: latency-svc-l94zk [751.716821ms]
Nov  8 13:04:22.353: INFO: Created: latency-svc-98fd2
Nov  8 13:04:22.386: INFO: Got endpoints: latency-svc-q29fs [751.601367ms]
Nov  8 13:04:22.405: INFO: Created: latency-svc-rr9sd
Nov  8 13:04:22.434: INFO: Got endpoints: latency-svc-9w6hg [742.877606ms]
Nov  8 13:04:22.450: INFO: Created: latency-svc-bj6sq
Nov  8 13:04:22.487: INFO: Got endpoints: latency-svc-kgzkx [755.473747ms]
Nov  8 13:04:22.504: INFO: Created: latency-svc-dd8mp
Nov  8 13:04:22.536: INFO: Got endpoints: latency-svc-nbptd [753.513832ms]
Nov  8 13:04:22.570: INFO: Created: latency-svc-8g6gd
Nov  8 13:04:22.583: INFO: Got endpoints: latency-svc-b2jjk [744.863224ms]
Nov  8 13:04:22.602: INFO: Created: latency-svc-pn4wp
Nov  8 13:04:22.636: INFO: Got endpoints: latency-svc-794wb [751.750803ms]
Nov  8 13:04:22.653: INFO: Created: latency-svc-lzfhh
Nov  8 13:04:22.684: INFO: Got endpoints: latency-svc-5cb5t [746.711587ms]
Nov  8 13:04:22.700: INFO: Created: latency-svc-dfp2p
Nov  8 13:04:22.736: INFO: Got endpoints: latency-svc-8wkvf [751.480455ms]
Nov  8 13:04:22.753: INFO: Created: latency-svc-r6rz2
Nov  8 13:04:22.786: INFO: Got endpoints: latency-svc-l95fd [749.615294ms]
Nov  8 13:04:22.808: INFO: Created: latency-svc-dxzrg
Nov  8 13:04:22.835: INFO: Got endpoints: latency-svc-lgcfv [747.912453ms]
Nov  8 13:04:22.853: INFO: Created: latency-svc-n5sqs
Nov  8 13:04:22.887: INFO: Got endpoints: latency-svc-d9l7v [752.175621ms]
Nov  8 13:04:22.902: INFO: Created: latency-svc-9gt6c
Nov  8 13:04:22.935: INFO: Got endpoints: latency-svc-d7nc6 [752.646912ms]
Nov  8 13:04:22.953: INFO: Created: latency-svc-d64qj
Nov  8 13:04:23.167: INFO: Got endpoints: latency-svc-r924s [931.655658ms]
Nov  8 13:04:23.168: INFO: Got endpoints: latency-svc-fjxvx [882.556776ms]
Nov  8 13:04:23.168: INFO: Got endpoints: latency-svc-98fd2 [830.132271ms]
Nov  8 13:04:23.168: INFO: Got endpoints: latency-svc-rr9sd [782.790131ms]
Nov  8 13:04:23.190: INFO: Created: latency-svc-2d5wn
Nov  8 13:04:23.191: INFO: Got endpoints: latency-svc-bj6sq [756.241059ms]
Nov  8 13:04:23.193: INFO: Created: latency-svc-4zqjf
Nov  8 13:04:23.202: INFO: Created: latency-svc-qrxlp
Nov  8 13:04:23.209: INFO: Created: latency-svc-t8qsm
Nov  8 13:04:23.216: INFO: Created: latency-svc-7p944
Nov  8 13:04:23.235: INFO: Got endpoints: latency-svc-dd8mp [747.739718ms]
Nov  8 13:04:23.250: INFO: Created: latency-svc-g9ft2
Nov  8 13:04:23.285: INFO: Got endpoints: latency-svc-8g6gd [748.702439ms]
Nov  8 13:04:23.299: INFO: Created: latency-svc-q7cx2
Nov  8 13:04:23.333: INFO: Got endpoints: latency-svc-pn4wp [749.804459ms]
Nov  8 13:04:23.351: INFO: Created: latency-svc-67wbw
Nov  8 13:04:23.383: INFO: Got endpoints: latency-svc-lzfhh [747.404411ms]
Nov  8 13:04:23.399: INFO: Created: latency-svc-zg4d4
Nov  8 13:04:23.435: INFO: Got endpoints: latency-svc-dfp2p [751.80714ms]
Nov  8 13:04:23.453: INFO: Created: latency-svc-xs7ld
Nov  8 13:04:23.485: INFO: Got endpoints: latency-svc-r6rz2 [749.301383ms]
Nov  8 13:04:23.500: INFO: Created: latency-svc-m54wd
Nov  8 13:04:23.538: INFO: Got endpoints: latency-svc-dxzrg [752.679956ms]
Nov  8 13:04:23.555: INFO: Created: latency-svc-hff2d
Nov  8 13:04:23.583: INFO: Got endpoints: latency-svc-n5sqs [748.815768ms]
Nov  8 13:04:23.601: INFO: Created: latency-svc-6ddvt
Nov  8 13:04:23.637: INFO: Got endpoints: latency-svc-9gt6c [749.354917ms]
Nov  8 13:04:23.674: INFO: Created: latency-svc-fpvsq
Nov  8 13:04:23.685: INFO: Got endpoints: latency-svc-d64qj [750.148649ms]
Nov  8 13:04:23.738: INFO: Got endpoints: latency-svc-2d5wn [570.924627ms]
Nov  8 13:04:23.743: INFO: Created: latency-svc-nbzkg
Nov  8 13:04:23.755: INFO: Created: latency-svc-5gf6p
Nov  8 13:04:23.784: INFO: Got endpoints: latency-svc-4zqjf [616.339262ms]
Nov  8 13:04:23.799: INFO: Created: latency-svc-97gbg
Nov  8 13:04:23.834: INFO: Got endpoints: latency-svc-qrxlp [665.168646ms]
Nov  8 13:04:23.851: INFO: Created: latency-svc-fpv7h
Nov  8 13:04:23.884: INFO: Got endpoints: latency-svc-t8qsm [715.200565ms]
Nov  8 13:04:23.905: INFO: Created: latency-svc-5qwb8
Nov  8 13:04:23.933: INFO: Got endpoints: latency-svc-7p944 [742.392498ms]
Nov  8 13:04:23.955: INFO: Created: latency-svc-sjdzq
Nov  8 13:04:23.985: INFO: Got endpoints: latency-svc-g9ft2 [749.601196ms]
Nov  8 13:04:24.003: INFO: Created: latency-svc-wr985
Nov  8 13:04:24.038: INFO: Got endpoints: latency-svc-q7cx2 [753.273314ms]
Nov  8 13:04:24.063: INFO: Created: latency-svc-tswmj
Nov  8 13:04:24.085: INFO: Got endpoints: latency-svc-67wbw [751.74515ms]
Nov  8 13:04:24.101: INFO: Created: latency-svc-5jr4m
Nov  8 13:04:24.136: INFO: Got endpoints: latency-svc-zg4d4 [752.584532ms]
Nov  8 13:04:24.150: INFO: Created: latency-svc-qfr6w
Nov  8 13:04:24.189: INFO: Got endpoints: latency-svc-xs7ld [753.947045ms]
Nov  8 13:04:24.205: INFO: Created: latency-svc-vq6gf
Nov  8 13:04:24.234: INFO: Got endpoints: latency-svc-m54wd [749.046348ms]
Nov  8 13:04:24.253: INFO: Created: latency-svc-pmjwm
Nov  8 13:04:24.283: INFO: Got endpoints: latency-svc-hff2d [744.350579ms]
Nov  8 13:04:24.303: INFO: Created: latency-svc-npwww
Nov  8 13:04:24.337: INFO: Got endpoints: latency-svc-6ddvt [753.85651ms]
Nov  8 13:04:24.352: INFO: Created: latency-svc-2nhvg
Nov  8 13:04:24.386: INFO: Got endpoints: latency-svc-fpvsq [748.96471ms]
Nov  8 13:04:24.398: INFO: Created: latency-svc-8qzjl
Nov  8 13:04:24.438: INFO: Got endpoints: latency-svc-nbzkg [752.316093ms]
Nov  8 13:04:24.451: INFO: Created: latency-svc-lvtpt
Nov  8 13:04:24.490: INFO: Got endpoints: latency-svc-5gf6p [751.369833ms]
Nov  8 13:04:24.506: INFO: Created: latency-svc-bfjgz
Nov  8 13:04:24.533: INFO: Got endpoints: latency-svc-97gbg [748.344615ms]
Nov  8 13:04:24.549: INFO: Created: latency-svc-68lr7
Nov  8 13:04:24.583: INFO: Got endpoints: latency-svc-fpv7h [748.922366ms]
Nov  8 13:04:24.606: INFO: Created: latency-svc-x96jf
Nov  8 13:04:24.635: INFO: Got endpoints: latency-svc-5qwb8 [751.726665ms]
Nov  8 13:04:24.649: INFO: Created: latency-svc-ntdgs
Nov  8 13:04:24.686: INFO: Got endpoints: latency-svc-sjdzq [752.434277ms]
Nov  8 13:04:24.707: INFO: Created: latency-svc-r8nlt
Nov  8 13:04:24.733: INFO: Got endpoints: latency-svc-wr985 [748.411334ms]
Nov  8 13:04:24.750: INFO: Created: latency-svc-72kkk
Nov  8 13:04:24.783: INFO: Got endpoints: latency-svc-tswmj [744.968864ms]
Nov  8 13:04:24.797: INFO: Created: latency-svc-jnshs
Nov  8 13:04:24.837: INFO: Got endpoints: latency-svc-5jr4m [751.540193ms]
Nov  8 13:04:24.854: INFO: Created: latency-svc-slfqk
Nov  8 13:04:24.889: INFO: Got endpoints: latency-svc-qfr6w [752.949673ms]
Nov  8 13:04:24.905: INFO: Created: latency-svc-bwbt6
Nov  8 13:04:24.933: INFO: Got endpoints: latency-svc-vq6gf [743.134488ms]
Nov  8 13:04:24.949: INFO: Created: latency-svc-4sd2z
Nov  8 13:04:24.986: INFO: Got endpoints: latency-svc-pmjwm [751.813872ms]
Nov  8 13:04:25.005: INFO: Created: latency-svc-tjgfw
Nov  8 13:04:25.034: INFO: Got endpoints: latency-svc-npwww [751.311732ms]
Nov  8 13:04:25.053: INFO: Created: latency-svc-k7vxg
Nov  8 13:04:25.082: INFO: Got endpoints: latency-svc-2nhvg [744.838115ms]
Nov  8 13:04:25.098: INFO: Created: latency-svc-mkffz
Nov  8 13:04:25.136: INFO: Got endpoints: latency-svc-8qzjl [750.025905ms]
Nov  8 13:04:25.154: INFO: Created: latency-svc-788hg
Nov  8 13:04:25.186: INFO: Got endpoints: latency-svc-lvtpt [748.798997ms]
Nov  8 13:04:25.204: INFO: Created: latency-svc-ssds8
Nov  8 13:04:25.250: INFO: Got endpoints: latency-svc-bfjgz [760.416257ms]
Nov  8 13:04:25.265: INFO: Created: latency-svc-blht7
Nov  8 13:04:25.285: INFO: Got endpoints: latency-svc-68lr7 [752.473579ms]
Nov  8 13:04:25.301: INFO: Created: latency-svc-8h6bf
Nov  8 13:04:25.336: INFO: Got endpoints: latency-svc-x96jf [753.162176ms]
Nov  8 13:04:25.358: INFO: Created: latency-svc-fpw86
Nov  8 13:04:25.388: INFO: Got endpoints: latency-svc-ntdgs [752.726871ms]
Nov  8 13:04:25.407: INFO: Created: latency-svc-f7crl
Nov  8 13:04:25.435: INFO: Got endpoints: latency-svc-r8nlt [749.867921ms]
Nov  8 13:04:25.449: INFO: Created: latency-svc-89z26
Nov  8 13:04:25.487: INFO: Got endpoints: latency-svc-72kkk [753.547563ms]
Nov  8 13:04:25.502: INFO: Created: latency-svc-5wjgh
Nov  8 13:04:25.533: INFO: Got endpoints: latency-svc-jnshs [749.658867ms]
Nov  8 13:04:25.548: INFO: Created: latency-svc-v48gv
Nov  8 13:04:25.584: INFO: Got endpoints: latency-svc-slfqk [746.598325ms]
Nov  8 13:04:25.598: INFO: Created: latency-svc-zqjwn
Nov  8 13:04:25.637: INFO: Got endpoints: latency-svc-bwbt6 [747.800811ms]
Nov  8 13:04:25.650: INFO: Created: latency-svc-q2qv9
Nov  8 13:04:25.684: INFO: Got endpoints: latency-svc-4sd2z [750.874742ms]
Nov  8 13:04:25.734: INFO: Got endpoints: latency-svc-tjgfw [747.593541ms]
Nov  8 13:04:25.786: INFO: Got endpoints: latency-svc-k7vxg [751.500742ms]
Nov  8 13:04:25.834: INFO: Got endpoints: latency-svc-mkffz [752.197651ms]
Nov  8 13:04:25.886: INFO: Got endpoints: latency-svc-788hg [750.351896ms]
Nov  8 13:04:25.937: INFO: Got endpoints: latency-svc-ssds8 [749.99756ms]
Nov  8 13:04:25.982: INFO: Got endpoints: latency-svc-blht7 [731.957374ms]
Nov  8 13:04:26.037: INFO: Got endpoints: latency-svc-8h6bf [751.568007ms]
Nov  8 13:04:26.084: INFO: Got endpoints: latency-svc-fpw86 [748.561045ms]
Nov  8 13:04:26.136: INFO: Got endpoints: latency-svc-f7crl [747.9215ms]
Nov  8 13:04:26.182: INFO: Got endpoints: latency-svc-89z26 [746.699501ms]
Nov  8 13:04:26.236: INFO: Got endpoints: latency-svc-5wjgh [748.627279ms]
Nov  8 13:04:26.283: INFO: Got endpoints: latency-svc-v48gv [749.685951ms]
Nov  8 13:04:26.333: INFO: Got endpoints: latency-svc-zqjwn [749.43605ms]
Nov  8 13:04:26.385: INFO: Got endpoints: latency-svc-q2qv9 [748.167393ms]
Nov  8 13:04:26.385: INFO: Latencies: [24.829756ms 31.77666ms 35.714887ms 136.027396ms 142.4498ms 143.513087ms 146.10797ms 146.765305ms 146.964694ms 148.146873ms 153.224157ms 167.958429ms 176.187766ms 185.781148ms 190.962527ms 204.919865ms 212.424281ms 223.119662ms 223.543357ms 237.22255ms 246.955ms 252.147151ms 252.720195ms 254.031529ms 254.130742ms 265.747691ms 266.34205ms 271.826305ms 273.483124ms 273.61613ms 274.073924ms 274.354434ms 278.149889ms 282.475113ms 283.867269ms 284.941457ms 284.995473ms 288.45ms 289.330008ms 290.599032ms 290.928918ms 292.26497ms 292.55726ms 292.791494ms 295.603578ms 306.443988ms 325.768786ms 342.044015ms 347.52127ms 370.27867ms 451.838578ms 500.195841ms 535.033557ms 566.130034ms 570.924627ms 594.729732ms 613.65463ms 616.045753ms 616.339262ms 653.590394ms 663.565706ms 665.160737ms 665.168646ms 665.237432ms 667.817107ms 668.592274ms 707.785337ms 714.835363ms 715.200565ms 715.874045ms 717.907911ms 719.165883ms 721.799266ms 726.94961ms 727.759954ms 728.476079ms 731.957374ms 738.269392ms 742.392498ms 742.877606ms 742.980666ms 743.134488ms 744.064247ms 744.350579ms 744.838115ms 744.863224ms 744.968864ms 745.116417ms 745.568647ms 746.005763ms 746.047019ms 746.33302ms 746.598325ms 746.699501ms 746.711587ms 746.747767ms 747.143817ms 747.404411ms 747.593541ms 747.739718ms 747.800811ms 747.912453ms 747.9215ms 748.167393ms 748.269174ms 748.344615ms 748.411334ms 748.522971ms 748.561045ms 748.627279ms 748.69449ms 748.702439ms 748.798997ms 748.815768ms 748.841273ms 748.922366ms 748.96471ms 749.02197ms 749.046348ms 749.301383ms 749.314974ms 749.354917ms 749.43605ms 749.485214ms 749.601196ms 749.615294ms 749.658867ms 749.685951ms 749.804459ms 749.867921ms 749.99756ms 750.025905ms 750.148649ms 750.166476ms 750.25668ms 750.351896ms 750.373969ms 750.401679ms 750.672486ms 750.681263ms 750.874742ms 751.158644ms 751.311732ms 751.369833ms 751.480455ms 751.500742ms 751.540193ms 751.568007ms 751.601367ms 751.65202ms 751.716821ms 751.726665ms 751.74515ms 751.750803ms 751.80714ms 751.813872ms 752.150469ms 752.175621ms 752.197651ms 752.257297ms 752.316093ms 752.390011ms 752.434277ms 752.473579ms 752.584532ms 752.646912ms 752.679956ms 752.726871ms 752.949673ms 753.15221ms 753.162176ms 753.273314ms 753.513832ms 753.547563ms 753.85651ms 753.860498ms 753.947045ms 755.079274ms 755.473747ms 755.480838ms 755.513706ms 755.994296ms 756.18878ms 756.241059ms 760.416257ms 767.255752ms 771.589614ms 780.032811ms 782.790131ms 787.60803ms 797.668611ms 829.371503ms 830.132271ms 838.138689ms 867.316318ms 881.193974ms 882.556776ms 931.655658ms 938.1382ms 942.091697ms]
Nov  8 13:04:26.386: INFO: 50 %ile: 747.800811ms
Nov  8 13:04:26.386: INFO: 90 %ile: 755.513706ms
Nov  8 13:04:26.386: INFO: 99 %ile: 938.1382ms
Nov  8 13:04:26.386: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:188
Nov  8 13:04:26.386: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svc-latency-1570" for this suite.

â€¢ [SLOW TEST:15.124 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Service endpoints latency should not be very high  [Conformance]","total":356,"completed":228,"skipped":4024,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:04:26.520: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7313
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 13:04:26.693: INFO: Waiting up to 5m0s for pod "downwardapi-volume-0769dd02-96b9-41d3-b194-b2dc3fc93b34" in namespace "projected-7313" to be "Succeeded or Failed"
Nov  8 13:04:26.704: INFO: Pod "downwardapi-volume-0769dd02-96b9-41d3-b194-b2dc3fc93b34": Phase="Pending", Reason="", readiness=false. Elapsed: 11.433099ms
Nov  8 13:04:28.716: INFO: Pod "downwardapi-volume-0769dd02-96b9-41d3-b194-b2dc3fc93b34": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023591926s
Nov  8 13:04:30.731: INFO: Pod "downwardapi-volume-0769dd02-96b9-41d3-b194-b2dc3fc93b34": Phase="Pending", Reason="", readiness=false. Elapsed: 4.037750185s
Nov  8 13:04:32.749: INFO: Pod "downwardapi-volume-0769dd02-96b9-41d3-b194-b2dc3fc93b34": Phase="Pending", Reason="", readiness=false. Elapsed: 6.056261037s
Nov  8 13:04:34.778: INFO: Pod "downwardapi-volume-0769dd02-96b9-41d3-b194-b2dc3fc93b34": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.08544023s
STEP: Saw pod success
Nov  8 13:04:34.778: INFO: Pod "downwardapi-volume-0769dd02-96b9-41d3-b194-b2dc3fc93b34" satisfied condition "Succeeded or Failed"
Nov  8 13:04:34.790: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-lrvzp pod downwardapi-volume-0769dd02-96b9-41d3-b194-b2dc3fc93b34 container client-container: <nil>
STEP: delete the pod
Nov  8 13:04:34.847: INFO: Waiting for pod downwardapi-volume-0769dd02-96b9-41d3-b194-b2dc3fc93b34 to disappear
Nov  8 13:04:34.858: INFO: Pod downwardapi-volume-0769dd02-96b9-41d3-b194-b2dc3fc93b34 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Nov  8 13:04:34.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7313" for this suite.

â€¢ [SLOW TEST:8.386 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":229,"skipped":4058,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:04:34.906: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-2146
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:04:35.133: INFO: Endpoints addresses: [10.93.235.178] , ports: [443]
Nov  8 13:04:35.133: INFO: EndpointSlices addresses: [10.93.235.178] , ports: [443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Nov  8 13:04:35.133: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-2146" for this suite.
â€¢{"msg":"PASSED [sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]","total":356,"completed":230,"skipped":4084,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:04:35.339: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-1675
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: modifying the configmap a second time
STEP: deleting the configmap
STEP: creating a watch on configmaps from the resource version returned by the first update
STEP: Expecting to observe notifications for all changes to the configmap after the first update
Nov  8 13:04:35.617: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1675  536a2c3e-0507-4826-a80c-26ba5b947c9f 32047 0 2022-11-08 13:04:35 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-11-08 13:04:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Nov  8 13:04:35.617: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1675  536a2c3e-0507-4826-a80c-26ba5b947c9f 32050 0 2022-11-08 13:04:35 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-11-08 13:04:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Nov  8 13:04:35.617: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-1675" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]","total":356,"completed":231,"skipped":4098,"failed":0}
S
------------------------------
[sig-network] Proxy version v1 
  should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:04:35.657: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-1532
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting an echo server on multiple ports
STEP: creating replication controller proxy-service-m8fvp in namespace proxy-1532
I1108 13:04:35.883578      22 runners.go:193] Created replication controller with name: proxy-service-m8fvp, namespace: proxy-1532, replica count: 1
I1108 13:04:36.934368      22 runners.go:193] proxy-service-m8fvp Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
I1108 13:04:37.934561      22 runners.go:193] proxy-service-m8fvp Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
I1108 13:04:38.935320      22 runners.go:193] proxy-service-m8fvp Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Nov  8 13:04:38.958: INFO: Endpoint proxy-1532/proxy-service-m8fvp is not ready yet
Nov  8 13:04:40.970: INFO: Endpoint proxy-1532/proxy-service-m8fvp is not ready yet
Nov  8 13:04:43.017: INFO: setup took 7.182018102s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts
Nov  8 13:04:43.058: INFO: (0) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 41.529005ms)
Nov  8 13:04:43.058: INFO: (0) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 41.339324ms)
Nov  8 13:04:43.058: INFO: (0) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 41.291877ms)
Nov  8 13:04:43.062: INFO: (0) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 44.660783ms)
Nov  8 13:04:43.062: INFO: (0) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 44.720724ms)
Nov  8 13:04:43.062: INFO: (0) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 44.904955ms)
Nov  8 13:04:43.066: INFO: (0) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 49.085383ms)
Nov  8 13:04:43.066: INFO: (0) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 49.160611ms)
Nov  8 13:04:43.066: INFO: (0) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 49.200096ms)
Nov  8 13:04:43.066: INFO: (0) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 49.333343ms)
Nov  8 13:04:43.066: INFO: (0) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 49.329706ms)
Nov  8 13:04:43.071: INFO: (0) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 53.726865ms)
Nov  8 13:04:43.071: INFO: (0) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 53.622812ms)
Nov  8 13:04:43.073: INFO: (0) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 55.629508ms)
Nov  8 13:04:43.073: INFO: (0) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 56.061325ms)
Nov  8 13:04:43.073: INFO: (0) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 56.196165ms)
Nov  8 13:04:43.086: INFO: (1) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 13.020083ms)
Nov  8 13:04:43.087: INFO: (1) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 13.726329ms)
Nov  8 13:04:43.088: INFO: (1) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 14.05715ms)
Nov  8 13:04:43.088: INFO: (1) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 14.86624ms)
Nov  8 13:04:43.088: INFO: (1) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 14.133714ms)
Nov  8 13:04:43.088: INFO: (1) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 14.285605ms)
Nov  8 13:04:43.089: INFO: (1) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 14.782063ms)
Nov  8 13:04:43.089: INFO: (1) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 14.510982ms)
Nov  8 13:04:43.095: INFO: (1) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 20.600614ms)
Nov  8 13:04:43.095: INFO: (1) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 20.963575ms)
Nov  8 13:04:43.095: INFO: (1) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 21.12189ms)
Nov  8 13:04:43.095: INFO: (1) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 20.911861ms)
Nov  8 13:04:43.095: INFO: (1) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 21.117341ms)
Nov  8 13:04:43.096: INFO: (1) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 21.487185ms)
Nov  8 13:04:43.096: INFO: (1) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 22.269694ms)
Nov  8 13:04:43.144: INFO: (1) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 70.347281ms)
Nov  8 13:04:43.155: INFO: (2) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 11.34957ms)
Nov  8 13:04:43.158: INFO: (2) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 13.7756ms)
Nov  8 13:04:43.167: INFO: (2) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 22.433247ms)
Nov  8 13:04:43.167: INFO: (2) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 22.436964ms)
Nov  8 13:04:43.168: INFO: (2) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 23.941038ms)
Nov  8 13:04:43.168: INFO: (2) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 23.894902ms)
Nov  8 13:04:43.169: INFO: (2) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 24.566576ms)
Nov  8 13:04:43.170: INFO: (2) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 25.604707ms)
Nov  8 13:04:43.174: INFO: (2) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 29.908865ms)
Nov  8 13:04:43.176: INFO: (2) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 31.915179ms)
Nov  8 13:04:43.176: INFO: (2) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 31.974019ms)
Nov  8 13:04:43.176: INFO: (2) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 32.047174ms)
Nov  8 13:04:43.177: INFO: (2) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 32.879825ms)
Nov  8 13:04:43.177: INFO: (2) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 32.941609ms)
Nov  8 13:04:43.179: INFO: (2) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 35.116906ms)
Nov  8 13:04:43.179: INFO: (2) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 35.307218ms)
Nov  8 13:04:43.195: INFO: (3) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 15.478993ms)
Nov  8 13:04:43.195: INFO: (3) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 15.540116ms)
Nov  8 13:04:43.195: INFO: (3) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 15.53677ms)
Nov  8 13:04:43.195: INFO: (3) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 15.544505ms)
Nov  8 13:04:43.195: INFO: (3) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 15.495634ms)
Nov  8 13:04:43.195: INFO: (3) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 15.507086ms)
Nov  8 13:04:43.195: INFO: (3) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 15.564882ms)
Nov  8 13:04:43.195: INFO: (3) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 15.420265ms)
Nov  8 13:04:43.200: INFO: (3) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 20.16618ms)
Nov  8 13:04:43.200: INFO: (3) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 20.320896ms)
Nov  8 13:04:43.200: INFO: (3) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 20.148917ms)
Nov  8 13:04:43.200: INFO: (3) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 20.180606ms)
Nov  8 13:04:43.202: INFO: (3) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 22.399634ms)
Nov  8 13:04:43.202: INFO: (3) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 22.359028ms)
Nov  8 13:04:43.203: INFO: (3) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 22.925437ms)
Nov  8 13:04:43.205: INFO: (3) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 25.122233ms)
Nov  8 13:04:43.218: INFO: (4) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 13.138511ms)
Nov  8 13:04:43.224: INFO: (4) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 18.626019ms)
Nov  8 13:04:43.224: INFO: (4) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 18.569134ms)
Nov  8 13:04:43.224: INFO: (4) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 18.547875ms)
Nov  8 13:04:43.224: INFO: (4) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 18.624978ms)
Nov  8 13:04:43.224: INFO: (4) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 18.574203ms)
Nov  8 13:04:43.224: INFO: (4) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 19.059291ms)
Nov  8 13:04:43.224: INFO: (4) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 19.082223ms)
Nov  8 13:04:43.224: INFO: (4) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 19.101649ms)
Nov  8 13:04:43.224: INFO: (4) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 19.073448ms)
Nov  8 13:04:43.224: INFO: (4) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 19.155049ms)
Nov  8 13:04:43.224: INFO: (4) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 19.434366ms)
Nov  8 13:04:43.224: INFO: (4) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 19.354678ms)
Nov  8 13:04:43.230: INFO: (4) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 25.352602ms)
Nov  8 13:04:43.230: INFO: (4) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 25.524389ms)
Nov  8 13:04:43.231: INFO: (4) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 25.814406ms)
Nov  8 13:04:43.246: INFO: (5) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 14.783266ms)
Nov  8 13:04:43.249: INFO: (5) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 17.712649ms)
Nov  8 13:04:43.249: INFO: (5) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 17.890196ms)
Nov  8 13:04:43.249: INFO: (5) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 17.846375ms)
Nov  8 13:04:43.249: INFO: (5) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 18.144146ms)
Nov  8 13:04:43.249: INFO: (5) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 18.137184ms)
Nov  8 13:04:43.249: INFO: (5) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 18.115734ms)
Nov  8 13:04:43.249: INFO: (5) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 18.257856ms)
Nov  8 13:04:43.251: INFO: (5) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 19.710967ms)
Nov  8 13:04:43.251: INFO: (5) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 19.70136ms)
Nov  8 13:04:43.256: INFO: (5) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 24.988937ms)
Nov  8 13:04:43.256: INFO: (5) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 25.273304ms)
Nov  8 13:04:43.256: INFO: (5) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 25.29254ms)
Nov  8 13:04:43.257: INFO: (5) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 25.97873ms)
Nov  8 13:04:43.257: INFO: (5) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 26.170203ms)
Nov  8 13:04:43.259: INFO: (5) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 27.649652ms)
Nov  8 13:04:43.278: INFO: (6) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 19.252359ms)
Nov  8 13:04:43.278: INFO: (6) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 19.127928ms)
Nov  8 13:04:43.278: INFO: (6) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 19.355318ms)
Nov  8 13:04:43.278: INFO: (6) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 19.440658ms)
Nov  8 13:04:43.278: INFO: (6) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 19.564427ms)
Nov  8 13:04:43.278: INFO: (6) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 19.503875ms)
Nov  8 13:04:43.278: INFO: (6) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 19.716758ms)
Nov  8 13:04:43.278: INFO: (6) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 19.617034ms)
Nov  8 13:04:43.279: INFO: (6) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 19.601825ms)
Nov  8 13:04:43.279: INFO: (6) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 19.605903ms)
Nov  8 13:04:43.279: INFO: (6) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 19.523631ms)
Nov  8 13:04:43.279: INFO: (6) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 20.343931ms)
Nov  8 13:04:43.285: INFO: (6) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 26.18906ms)
Nov  8 13:04:43.286: INFO: (6) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 27.166779ms)
Nov  8 13:04:43.286: INFO: (6) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 27.357923ms)
Nov  8 13:04:43.286: INFO: (6) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 27.719524ms)
Nov  8 13:04:43.304: INFO: (7) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 17.754906ms)
Nov  8 13:04:43.304: INFO: (7) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 17.734229ms)
Nov  8 13:04:43.305: INFO: (7) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 17.590082ms)
Nov  8 13:04:43.305: INFO: (7) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 17.849271ms)
Nov  8 13:04:43.305: INFO: (7) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 17.742042ms)
Nov  8 13:04:43.305: INFO: (7) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 17.948285ms)
Nov  8 13:04:43.305: INFO: (7) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 18.006212ms)
Nov  8 13:04:43.305: INFO: (7) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 17.753543ms)
Nov  8 13:04:43.305: INFO: (7) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 17.769473ms)
Nov  8 13:04:43.305: INFO: (7) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 18.786195ms)
Nov  8 13:04:43.305: INFO: (7) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 18.782599ms)
Nov  8 13:04:43.305: INFO: (7) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 18.493193ms)
Nov  8 13:04:43.311: INFO: (7) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 24.321321ms)
Nov  8 13:04:43.311: INFO: (7) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 24.460829ms)
Nov  8 13:04:43.311: INFO: (7) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 24.518056ms)
Nov  8 13:04:43.315: INFO: (7) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 27.953456ms)
Nov  8 13:04:43.339: INFO: (8) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 24.21272ms)
Nov  8 13:04:43.339: INFO: (8) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 24.150736ms)
Nov  8 13:04:43.339: INFO: (8) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 24.428951ms)
Nov  8 13:04:43.339: INFO: (8) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 24.216607ms)
Nov  8 13:04:43.339: INFO: (8) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 24.337511ms)
Nov  8 13:04:43.339: INFO: (8) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 24.270167ms)
Nov  8 13:04:43.339: INFO: (8) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 24.249308ms)
Nov  8 13:04:43.339: INFO: (8) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 24.207912ms)
Nov  8 13:04:43.339: INFO: (8) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 24.522864ms)
Nov  8 13:04:43.341: INFO: (8) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 26.463107ms)
Nov  8 13:04:43.342: INFO: (8) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 26.545298ms)
Nov  8 13:04:43.342: INFO: (8) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 27.058238ms)
Nov  8 13:04:43.347: INFO: (8) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 32.170241ms)
Nov  8 13:04:43.347: INFO: (8) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 32.226686ms)
Nov  8 13:04:43.347: INFO: (8) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 32.287548ms)
Nov  8 13:04:43.349: INFO: (8) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 34.217491ms)
Nov  8 13:04:43.362: INFO: (9) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 12.715087ms)
Nov  8 13:04:43.372: INFO: (9) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 22.572145ms)
Nov  8 13:04:43.372: INFO: (9) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 22.13845ms)
Nov  8 13:04:43.372: INFO: (9) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 22.541106ms)
Nov  8 13:04:43.372: INFO: (9) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 22.350453ms)
Nov  8 13:04:43.372: INFO: (9) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 22.164209ms)
Nov  8 13:04:43.372: INFO: (9) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 22.209764ms)
Nov  8 13:04:43.372: INFO: (9) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 22.447744ms)
Nov  8 13:04:43.372: INFO: (9) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 22.53166ms)
Nov  8 13:04:43.372: INFO: (9) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 22.417438ms)
Nov  8 13:04:43.372: INFO: (9) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 22.627546ms)
Nov  8 13:04:43.373: INFO: (9) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 22.479693ms)
Nov  8 13:04:43.376: INFO: (9) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 26.458428ms)
Nov  8 13:04:43.376: INFO: (9) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 26.378701ms)
Nov  8 13:04:43.379: INFO: (9) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 29.129982ms)
Nov  8 13:04:43.380: INFO: (9) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 29.877156ms)
Nov  8 13:04:43.401: INFO: (10) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 20.681194ms)
Nov  8 13:04:43.401: INFO: (10) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 20.874011ms)
Nov  8 13:04:43.401: INFO: (10) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 21.178764ms)
Nov  8 13:04:43.409: INFO: (10) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 29.172733ms)
Nov  8 13:04:43.409: INFO: (10) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 29.098495ms)
Nov  8 13:04:43.411: INFO: (10) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 30.341275ms)
Nov  8 13:04:43.411: INFO: (10) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 31.038566ms)
Nov  8 13:04:43.412: INFO: (10) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 31.571714ms)
Nov  8 13:04:43.412: INFO: (10) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 31.469134ms)
Nov  8 13:04:43.412: INFO: (10) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 31.986992ms)
Nov  8 13:04:43.412: INFO: (10) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 32.057634ms)
Nov  8 13:04:43.413: INFO: (10) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 32.492789ms)
Nov  8 13:04:43.415: INFO: (10) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 34.83292ms)
Nov  8 13:04:43.418: INFO: (10) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 38.070283ms)
Nov  8 13:04:43.421: INFO: (10) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 40.430321ms)
Nov  8 13:04:43.421: INFO: (10) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 41.125238ms)
Nov  8 13:04:43.440: INFO: (11) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 18.558494ms)
Nov  8 13:04:43.441: INFO: (11) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 18.898673ms)
Nov  8 13:04:43.441: INFO: (11) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 19.075121ms)
Nov  8 13:04:43.441: INFO: (11) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 18.852589ms)
Nov  8 13:04:43.441: INFO: (11) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 18.979534ms)
Nov  8 13:04:43.441: INFO: (11) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 19.142105ms)
Nov  8 13:04:43.441: INFO: (11) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 19.134289ms)
Nov  8 13:04:43.441: INFO: (11) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 19.014408ms)
Nov  8 13:04:43.441: INFO: (11) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 19.287363ms)
Nov  8 13:04:43.441: INFO: (11) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 19.058479ms)
Nov  8 13:04:43.441: INFO: (11) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 19.186577ms)
Nov  8 13:04:43.442: INFO: (11) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 20.578533ms)
Nov  8 13:04:43.447: INFO: (11) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 25.405509ms)
Nov  8 13:04:43.448: INFO: (11) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 26.177627ms)
Nov  8 13:04:43.448: INFO: (11) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 26.035194ms)
Nov  8 13:04:43.448: INFO: (11) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 26.190622ms)
Nov  8 13:04:43.458: INFO: (12) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 10.034915ms)
Nov  8 13:04:43.459: INFO: (12) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 10.358855ms)
Nov  8 13:04:43.460: INFO: (12) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 12.292736ms)
Nov  8 13:04:43.461: INFO: (12) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 12.401206ms)
Nov  8 13:04:43.465: INFO: (12) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 16.466843ms)
Nov  8 13:04:43.465: INFO: (12) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 16.375694ms)
Nov  8 13:04:43.465: INFO: (12) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 16.678994ms)
Nov  8 13:04:43.465: INFO: (12) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 16.976866ms)
Nov  8 13:04:43.465: INFO: (12) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 16.510944ms)
Nov  8 13:04:43.465: INFO: (12) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 16.270869ms)
Nov  8 13:04:43.465: INFO: (12) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 16.609065ms)
Nov  8 13:04:43.465: INFO: (12) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 16.661162ms)
Nov  8 13:04:43.465: INFO: (12) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 16.631827ms)
Nov  8 13:04:43.466: INFO: (12) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 18.086049ms)
Nov  8 13:04:43.471: INFO: (12) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 22.137218ms)
Nov  8 13:04:43.473: INFO: (12) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 23.982424ms)
Nov  8 13:04:43.487: INFO: (13) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 14.290644ms)
Nov  8 13:04:43.493: INFO: (13) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 19.97715ms)
Nov  8 13:04:43.493: INFO: (13) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 20.043392ms)
Nov  8 13:04:43.493: INFO: (13) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 20.081212ms)
Nov  8 13:04:43.493: INFO: (13) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 20.205764ms)
Nov  8 13:04:43.493: INFO: (13) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 20.189693ms)
Nov  8 13:04:43.493: INFO: (13) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 20.16562ms)
Nov  8 13:04:43.493: INFO: (13) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 20.061366ms)
Nov  8 13:04:43.493: INFO: (13) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 20.10096ms)
Nov  8 13:04:43.493: INFO: (13) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 20.130925ms)
Nov  8 13:04:43.493: INFO: (13) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 20.049926ms)
Nov  8 13:04:43.493: INFO: (13) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 20.388632ms)
Nov  8 13:04:43.497: INFO: (13) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 23.991411ms)
Nov  8 13:04:43.506: INFO: (13) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 32.456932ms)
Nov  8 13:04:43.506: INFO: (13) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 32.602943ms)
Nov  8 13:04:43.506: INFO: (13) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 32.648446ms)
Nov  8 13:04:43.520: INFO: (14) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 13.41389ms)
Nov  8 13:04:43.520: INFO: (14) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 13.804143ms)
Nov  8 13:04:43.520: INFO: (14) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 13.503556ms)
Nov  8 13:04:43.520: INFO: (14) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 13.536387ms)
Nov  8 13:04:43.520: INFO: (14) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 13.875465ms)
Nov  8 13:04:43.522: INFO: (14) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 15.635402ms)
Nov  8 13:04:43.523: INFO: (14) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 16.735329ms)
Nov  8 13:04:43.523: INFO: (14) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 16.931962ms)
Nov  8 13:04:43.526: INFO: (14) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 20.238223ms)
Nov  8 13:04:43.526: INFO: (14) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 20.164026ms)
Nov  8 13:04:43.527: INFO: (14) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 20.989435ms)
Nov  8 13:04:43.527: INFO: (14) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 21.12793ms)
Nov  8 13:04:43.529: INFO: (14) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 22.125456ms)
Nov  8 13:04:43.531: INFO: (14) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 25.065149ms)
Nov  8 13:04:43.534: INFO: (14) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 28.087001ms)
Nov  8 13:04:43.534: INFO: (14) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 28.182609ms)
Nov  8 13:04:43.552: INFO: (15) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 16.836817ms)
Nov  8 13:04:43.552: INFO: (15) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 16.987075ms)
Nov  8 13:04:43.552: INFO: (15) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 17.17843ms)
Nov  8 13:04:43.552: INFO: (15) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 17.498221ms)
Nov  8 13:04:43.552: INFO: (15) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 17.349657ms)
Nov  8 13:04:43.553: INFO: (15) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 18.614698ms)
Nov  8 13:04:43.556: INFO: (15) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 20.820861ms)
Nov  8 13:04:43.556: INFO: (15) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 20.893075ms)
Nov  8 13:04:43.556: INFO: (15) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 21.075423ms)
Nov  8 13:04:43.556: INFO: (15) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 21.249485ms)
Nov  8 13:04:43.563: INFO: (15) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 27.892794ms)
Nov  8 13:04:43.563: INFO: (15) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 27.764195ms)
Nov  8 13:04:43.563: INFO: (15) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 27.936533ms)
Nov  8 13:04:43.563: INFO: (15) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 27.996555ms)
Nov  8 13:04:43.564: INFO: (15) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 28.900428ms)
Nov  8 13:04:43.566: INFO: (15) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 31.290432ms)
Nov  8 13:04:43.589: INFO: (16) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 22.825724ms)
Nov  8 13:04:43.589: INFO: (16) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 22.671418ms)
Nov  8 13:04:43.589: INFO: (16) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 23.055239ms)
Nov  8 13:04:43.589: INFO: (16) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 22.886657ms)
Nov  8 13:04:43.589: INFO: (16) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 22.966774ms)
Nov  8 13:04:43.589: INFO: (16) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 22.879123ms)
Nov  8 13:04:43.589: INFO: (16) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 22.859525ms)
Nov  8 13:04:43.589: INFO: (16) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 22.959431ms)
Nov  8 13:04:43.589: INFO: (16) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 23.028598ms)
Nov  8 13:04:43.589: INFO: (16) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 22.710661ms)
Nov  8 13:04:43.589: INFO: (16) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 23.156425ms)
Nov  8 13:04:43.590: INFO: (16) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 23.152288ms)
Nov  8 13:04:43.590: INFO: (16) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 23.20219ms)
Nov  8 13:04:43.596: INFO: (16) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 29.667938ms)
Nov  8 13:04:43.596: INFO: (16) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 29.670715ms)
Nov  8 13:04:43.597: INFO: (16) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 30.174878ms)
Nov  8 13:04:43.608: INFO: (17) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 11.432773ms)
Nov  8 13:04:43.609: INFO: (17) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 12.200114ms)
Nov  8 13:04:43.610: INFO: (17) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 13.121268ms)
Nov  8 13:04:43.610: INFO: (17) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 13.685963ms)
Nov  8 13:04:43.611: INFO: (17) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 13.819922ms)
Nov  8 13:04:43.611: INFO: (17) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 14.146226ms)
Nov  8 13:04:43.611: INFO: (17) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 13.974147ms)
Nov  8 13:04:43.611: INFO: (17) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 13.771983ms)
Nov  8 13:04:43.614: INFO: (17) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 17.059348ms)
Nov  8 13:04:43.614: INFO: (17) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 17.164393ms)
Nov  8 13:04:43.614: INFO: (17) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 17.212602ms)
Nov  8 13:04:43.614: INFO: (17) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 17.105714ms)
Nov  8 13:04:43.615: INFO: (17) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 17.937715ms)
Nov  8 13:04:43.616: INFO: (17) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 19.464921ms)
Nov  8 13:04:43.621: INFO: (17) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 24.439089ms)
Nov  8 13:04:43.621: INFO: (17) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 24.701795ms)
Nov  8 13:04:43.638: INFO: (18) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 16.447587ms)
Nov  8 13:04:43.639: INFO: (18) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 17.108771ms)
Nov  8 13:04:43.639: INFO: (18) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 16.933497ms)
Nov  8 13:04:43.639: INFO: (18) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 16.956819ms)
Nov  8 13:04:43.639: INFO: (18) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 16.847447ms)
Nov  8 13:04:43.639: INFO: (18) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 16.995952ms)
Nov  8 13:04:43.639: INFO: (18) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 16.8703ms)
Nov  8 13:04:43.639: INFO: (18) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 16.911886ms)
Nov  8 13:04:43.639: INFO: (18) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 17.173901ms)
Nov  8 13:04:43.639: INFO: (18) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 17.187807ms)
Nov  8 13:04:43.639: INFO: (18) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 17.063787ms)
Nov  8 13:04:43.639: INFO: (18) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 17.023934ms)
Nov  8 13:04:43.646: INFO: (18) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 24.815867ms)
Nov  8 13:04:43.646: INFO: (18) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 24.781904ms)
Nov  8 13:04:43.647: INFO: (18) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 24.881869ms)
Nov  8 13:04:43.647: INFO: (18) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 25.253397ms)
Nov  8 13:04:43.670: INFO: (19) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 22.594435ms)
Nov  8 13:04:43.670: INFO: (19) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:160/proxy/: foo (200; 22.638707ms)
Nov  8 13:04:43.670: INFO: (19) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">... (200; 22.659856ms)
Nov  8 13:04:43.670: INFO: (19) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:443/proxy/tlsrewritem... (200; 22.649055ms)
Nov  8 13:04:43.670: INFO: (19) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:460/proxy/: tls baz (200; 22.679983ms)
Nov  8 13:04:43.670: INFO: (19) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:1080/proxy/rewriteme">test<... (200; 22.874875ms)
Nov  8 13:04:43.670: INFO: (19) /api/v1/namespaces/proxy-1532/pods/http:proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 22.964581ms)
Nov  8 13:04:43.670: INFO: (19) /api/v1/namespaces/proxy-1532/pods/https:proxy-service-m8fvp-mmxtc:462/proxy/: tls qux (200; 22.858193ms)
Nov  8 13:04:43.670: INFO: (19) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/: <a href="/api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc/proxy/rewriteme">test</a> (200; 23.211989ms)
Nov  8 13:04:43.673: INFO: (19) /api/v1/namespaces/proxy-1532/pods/proxy-service-m8fvp-mmxtc:162/proxy/: bar (200; 25.36901ms)
Nov  8 13:04:43.673: INFO: (19) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname2/proxy/: tls qux (200; 25.709391ms)
Nov  8 13:04:43.673: INFO: (19) /api/v1/namespaces/proxy-1532/services/https:proxy-service-m8fvp:tlsportname1/proxy/: tls baz (200; 25.691698ms)
Nov  8 13:04:43.674: INFO: (19) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname1/proxy/: foo (200; 27.305727ms)
Nov  8 13:04:43.676: INFO: (19) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname1/proxy/: foo (200; 28.73445ms)
Nov  8 13:04:43.677: INFO: (19) /api/v1/namespaces/proxy-1532/services/proxy-service-m8fvp:portname2/proxy/: bar (200; 29.831131ms)
Nov  8 13:04:43.677: INFO: (19) /api/v1/namespaces/proxy-1532/services/http:proxy-service-m8fvp:portname2/proxy/: bar (200; 30.244175ms)
STEP: deleting ReplicationController proxy-service-m8fvp in namespace proxy-1532, will wait for the garbage collector to delete the pods
Nov  8 13:04:43.748: INFO: Deleting ReplicationController proxy-service-m8fvp took: 10.381778ms
Nov  8 13:04:43.848: INFO: Terminating ReplicationController proxy-service-m8fvp pods took: 100.721939ms
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Nov  8 13:04:44.949: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-1532" for this suite.

â€¢ [SLOW TEST:9.319 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]","total":356,"completed":232,"skipped":4099,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:04:44.976: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-16
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/discovery.k8s.io
STEP: getting /apis/discovery.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Nov  8 13:04:45.181: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Nov  8 13:04:45.190: INFO: starting watch
STEP: patching
STEP: updating
Nov  8 13:04:45.216: INFO: waiting for watch events with expected annotations
Nov  8 13:04:45.216: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Nov  8 13:04:45.249: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-16" for this suite.
â€¢{"msg":"PASSED [sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]","total":356,"completed":233,"skipped":4111,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:04:45.275: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-3073
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod with failed condition
STEP: updating the pod
Nov  8 13:06:45.975: INFO: Successfully updated pod "var-expansion-ad55e168-fde3-46cd-b391-feb9c85cf787"
STEP: waiting for pod running
STEP: deleting the pod gracefully
Nov  8 13:06:47.990: INFO: Deleting pod "var-expansion-ad55e168-fde3-46cd-b391-feb9c85cf787" in namespace "var-expansion-3073"
Nov  8 13:06:47.999: INFO: Wait up to 5m0s for pod "var-expansion-ad55e168-fde3-46cd-b391-feb9c85cf787" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Nov  8 13:07:22.016: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3073" for this suite.

â€¢ [SLOW TEST:156.776 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]","total":356,"completed":234,"skipped":4139,"failed":0}
[sig-storage] EmptyDir wrapper volumes 
  should not conflict [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:07:22.050: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-1457
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not conflict [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:07:22.235: INFO: The status of Pod pod-secrets-092ec212-c257-4aa4-b72f-0609d166ec4b is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:07:24.246: INFO: The status of Pod pod-secrets-092ec212-c257-4aa4-b72f-0609d166ec4b is Running (Ready = true)
STEP: Cleaning up the secret
STEP: Cleaning up the configmap
STEP: Cleaning up the pod
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Nov  8 13:07:24.274: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-1457" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]","total":356,"completed":235,"skipped":4139,"failed":0}
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:07:24.297: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-8211
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-8211
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
STEP: Looking for a node to schedule stateful set and pod
STEP: Creating pod with conflicting port in namespace statefulset-8211
STEP: Waiting until pod test-pod will start running in namespace statefulset-8211
STEP: Creating statefulset with conflicting port in namespace statefulset-8211
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-8211
Nov  8 13:07:26.542: INFO: Observed stateful pod in namespace: statefulset-8211, name: ss-0, uid: 04099946-f27b-4660-a039-56cf35e235e0, status phase: Pending. Waiting for statefulset controller to delete.
Nov  8 13:07:26.554: INFO: Observed stateful pod in namespace: statefulset-8211, name: ss-0, uid: 04099946-f27b-4660-a039-56cf35e235e0, status phase: Failed. Waiting for statefulset controller to delete.
Nov  8 13:07:26.572: INFO: Observed stateful pod in namespace: statefulset-8211, name: ss-0, uid: 04099946-f27b-4660-a039-56cf35e235e0, status phase: Failed. Waiting for statefulset controller to delete.
Nov  8 13:07:26.576: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-8211
STEP: Removing pod with conflicting port in namespace statefulset-8211
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-8211 and will be in running state
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Nov  8 13:07:28.610: INFO: Deleting all statefulset in ns statefulset-8211
Nov  8 13:07:28.615: INFO: Scaling statefulset ss to 0
Nov  8 13:07:38.770: INFO: Waiting for statefulset status.replicas updated to 0
Nov  8 13:07:38.776: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Nov  8 13:07:38.797: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-8211" for this suite.

â€¢ [SLOW TEST:14.522 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Should recreate evicted statefulset [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]","total":356,"completed":236,"skipped":4141,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:07:38.819: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5146
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-d7b92175-97dd-4cdf-a613-b0679febe84f
STEP: Creating secret with name s-test-opt-upd-e9be6b55-e045-4acc-8b14-113a6a34c9a8
STEP: Creating the pod
Nov  8 13:07:39.175: INFO: The status of Pod pod-secrets-2ac7705a-bce9-487d-9e96-70f0d7b2a289 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:07:41.182: INFO: The status of Pod pod-secrets-2ac7705a-bce9-487d-9e96-70f0d7b2a289 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:07:43.186: INFO: The status of Pod pod-secrets-2ac7705a-bce9-487d-9e96-70f0d7b2a289 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-d7b92175-97dd-4cdf-a613-b0679febe84f
STEP: Updating secret s-test-opt-upd-e9be6b55-e045-4acc-8b14-113a6a34c9a8
STEP: Creating secret with name s-test-opt-create-8b8e56a9-47ec-43c5-a3f5-2f3dec1b47c4
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Nov  8 13:09:00.011: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5146" for this suite.

â€¢ [SLOW TEST:81.218 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":237,"skipped":4230,"failed":0}
SSSSS
------------------------------
[sig-node] Pods 
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:09:00.038: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-6153
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Pod with a static label
STEP: watching for Pod to be ready
Nov  8 13:09:00.218: INFO: observed Pod pod-test in namespace pods-6153 in phase Pending with labels: map[test-pod-static:true] & conditions []
Nov  8 13:09:00.218: INFO: observed Pod pod-test in namespace pods-6153 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:09:00 +0000 UTC  }]
Nov  8 13:09:00.232: INFO: observed Pod pod-test in namespace pods-6153 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:09:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:09:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:09:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:09:00 +0000 UTC  }]
Nov  8 13:09:04.170: INFO: Found Pod pod-test in namespace pods-6153 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:09:00 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:09:04 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:09:04 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:09:00 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data
STEP: getting the Pod and ensuring that it's patched
STEP: replacing the Pod's status Ready condition to False
STEP: check the Pod again to ensure its Ready conditions are False
STEP: deleting the Pod via a Collection with a LabelSelector
STEP: watching for the Pod to be deleted
Nov  8 13:09:04.230: INFO: observed event type MODIFIED
Nov  8 13:09:06.176: INFO: observed event type MODIFIED
Nov  8 13:09:07.181: INFO: observed event type MODIFIED
Nov  8 13:09:07.189: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Nov  8 13:09:07.241: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-6153" for this suite.

â€¢ [SLOW TEST:7.226 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]","total":356,"completed":238,"skipped":4235,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:09:07.263: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-6473
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Failed
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Nov  8 13:09:12.488: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Nov  8 13:09:12.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-6473" for this suite.

â€¢ [SLOW TEST:5.268 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    on terminated container
    test/e2e/common/node/runtime.go:136
      should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":239,"skipped":4247,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:09:12.532: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-6779
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensure pods equal to paralellism count is attached to the job
STEP: patching /status
STEP: updating /status
STEP: get /status
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Nov  8 13:09:14.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-6779" for this suite.
â€¢{"msg":"PASSED [sig-apps] Job should apply changes to a job status [Conformance]","total":356,"completed":240,"skipped":4313,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:09:14.755: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8646
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-6a78221a-b0d8-4efa-9c65-437946c63582
STEP: Creating configMap with name cm-test-opt-upd-a479199f-e420-4b4f-aa51-d2850b7d08df
STEP: Creating the pod
Nov  8 13:09:15.036: INFO: The status of Pod pod-configmaps-31eb5570-bb28-4dd6-b880-87da156a317b is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:09:17.050: INFO: The status of Pod pod-configmaps-31eb5570-bb28-4dd6-b880-87da156a317b is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:09:19.050: INFO: The status of Pod pod-configmaps-31eb5570-bb28-4dd6-b880-87da156a317b is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-6a78221a-b0d8-4efa-9c65-437946c63582
STEP: Updating configmap cm-test-opt-upd-a479199f-e420-4b4f-aa51-d2850b7d08df
STEP: Creating configMap with name cm-test-opt-create-aff28e7a-12eb-4cde-9f96-3d8786c099f3
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 13:10:46.173: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8646" for this suite.

â€¢ [SLOW TEST:91.447 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":241,"skipped":4321,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
   should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:10:46.203: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-1646
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/node.k8s.io
STEP: getting /apis/node.k8s.io/v1
STEP: creating
STEP: watching
Nov  8 13:10:46.397: INFO: starting watch
STEP: getting
STEP: listing
STEP: patching
STEP: updating
Nov  8 13:10:46.432: INFO: waiting for watch events with expected annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Nov  8 13:10:46.462: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-1646" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]","total":356,"completed":242,"skipped":4412,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:10:46.490: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4675
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-9b16e678-4222-4465-ba3b-7fa8e4f41096
STEP: Creating a pod to test consume configMaps
Nov  8 13:10:46.660: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-ec4404e8-f847-48f1-85ac-c5fa3e327816" in namespace "projected-4675" to be "Succeeded or Failed"
Nov  8 13:10:46.668: INFO: Pod "pod-projected-configmaps-ec4404e8-f847-48f1-85ac-c5fa3e327816": Phase="Pending", Reason="", readiness=false. Elapsed: 8.173483ms
Nov  8 13:10:48.680: INFO: Pod "pod-projected-configmaps-ec4404e8-f847-48f1-85ac-c5fa3e327816": Phase="Running", Reason="", readiness=false. Elapsed: 2.020285797s
Nov  8 13:10:50.691: INFO: Pod "pod-projected-configmaps-ec4404e8-f847-48f1-85ac-c5fa3e327816": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03121823s
STEP: Saw pod success
Nov  8 13:10:50.691: INFO: Pod "pod-projected-configmaps-ec4404e8-f847-48f1-85ac-c5fa3e327816" satisfied condition "Succeeded or Failed"
Nov  8 13:10:50.696: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-lrvzp pod pod-projected-configmaps-ec4404e8-f847-48f1-85ac-c5fa3e327816 container agnhost-container: <nil>
STEP: delete the pod
Nov  8 13:10:50.730: INFO: Waiting for pod pod-projected-configmaps-ec4404e8-f847-48f1-85ac-c5fa3e327816 to disappear
Nov  8 13:10:50.736: INFO: Pod pod-projected-configmaps-ec4404e8-f847-48f1-85ac-c5fa3e327816 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Nov  8 13:10:50.736: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4675" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":243,"skipped":4425,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:10:50.763: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-9593
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with label A
STEP: creating a watch on configmaps with label B
STEP: creating a watch on configmaps with label A or B
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification
Nov  8 13:10:50.951: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9593  3a0c02d4-e490-420b-b262-ba4d1d1ad4c2 34676 0 2022-11-08 13:10:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-11-08 13:10:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Nov  8 13:10:50.951: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9593  3a0c02d4-e490-420b-b262-ba4d1d1ad4c2 34676 0 2022-11-08 13:10:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-11-08 13:10:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification
Nov  8 13:10:50.963: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9593  3a0c02d4-e490-420b-b262-ba4d1d1ad4c2 34677 0 2022-11-08 13:10:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-11-08 13:10:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Nov  8 13:10:50.963: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9593  3a0c02d4-e490-420b-b262-ba4d1d1ad4c2 34677 0 2022-11-08 13:10:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-11-08 13:10:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification
Nov  8 13:10:50.973: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9593  3a0c02d4-e490-420b-b262-ba4d1d1ad4c2 34678 0 2022-11-08 13:10:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-11-08 13:10:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Nov  8 13:10:50.973: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9593  3a0c02d4-e490-420b-b262-ba4d1d1ad4c2 34678 0 2022-11-08 13:10:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-11-08 13:10:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification
Nov  8 13:10:50.980: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9593  3a0c02d4-e490-420b-b262-ba4d1d1ad4c2 34679 0 2022-11-08 13:10:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-11-08 13:10:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Nov  8 13:10:50.980: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9593  3a0c02d4-e490-420b-b262-ba4d1d1ad4c2 34679 0 2022-11-08 13:10:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-11-08 13:10:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification
Nov  8 13:10:50.987: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9593  f3587e4b-7bce-4eeb-936e-80d28cf80077 34680 0 2022-11-08 13:10:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-11-08 13:10:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Nov  8 13:10:50.987: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9593  f3587e4b-7bce-4eeb-936e-80d28cf80077 34680 0 2022-11-08 13:10:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-11-08 13:10:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification
Nov  8 13:11:01.006: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9593  f3587e4b-7bce-4eeb-936e-80d28cf80077 34756 0 2022-11-08 13:10:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-11-08 13:10:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Nov  8 13:11:01.006: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9593  f3587e4b-7bce-4eeb-936e-80d28cf80077 34756 0 2022-11-08 13:10:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-11-08 13:10:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Nov  8 13:11:11.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-9593" for this suite.

â€¢ [SLOW TEST:20.284 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]","total":356,"completed":244,"skipped":4464,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:11:11.047: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-684
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:11:11.197: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 13:11:11.766: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-684" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]","total":356,"completed":245,"skipped":4499,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:11:11.792: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4938
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a collection of services
Nov  8 13:11:11.938: INFO: Creating e2e-svc-a-dh9kx
Nov  8 13:11:11.953: INFO: Creating e2e-svc-b-jhphk
Nov  8 13:11:11.965: INFO: Creating e2e-svc-c-gkdnx
STEP: deleting service collection
Nov  8 13:11:12.040: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 13:11:12.041: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4938" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should delete a collection of services [Conformance]","total":356,"completed":246,"skipped":4511,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:11:12.081: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-8813
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-8813
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Initializing watcher for selector baz=blah,foo=bar
STEP: Creating stateful set ss in namespace statefulset-8813
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8813
Nov  8 13:11:12.280: INFO: Found 0 stateful pods, waiting for 1
Nov  8 13:11:22.297: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod
Nov  8 13:11:22.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-8813 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Nov  8 13:11:22.714: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Nov  8 13:11:22.714: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Nov  8 13:11:22.714: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Nov  8 13:11:22.724: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Nov  8 13:11:32.743: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Nov  8 13:11:32.743: INFO: Waiting for statefulset status.replicas updated to 0
Nov  8 13:11:32.766: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999859s
Nov  8 13:11:33.776: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.994612557s
Nov  8 13:11:34.784: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.984867087s
Nov  8 13:11:35.793: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.976676412s
Nov  8 13:11:36.805: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.967196131s
Nov  8 13:11:37.815: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.955629038s
Nov  8 13:11:38.823: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.945316456s
Nov  8 13:11:39.833: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.937114294s
Nov  8 13:11:40.842: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.927730707s
Nov  8 13:11:41.870: INFO: Verifying statefulset ss doesn't scale past 1 for another 917.550355ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8813
Nov  8 13:11:42.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-8813 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Nov  8 13:11:43.296: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Nov  8 13:11:43.296: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Nov  8 13:11:43.296: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Nov  8 13:11:43.303: INFO: Found 1 stateful pods, waiting for 3
Nov  8 13:11:53.315: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Nov  8 13:11:53.315: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Nov  8 13:11:53.315: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order
STEP: Scale down will halt with unhealthy stateful pod
Nov  8 13:11:53.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-8813 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Nov  8 13:11:53.752: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Nov  8 13:11:53.752: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Nov  8 13:11:53.752: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Nov  8 13:11:53.752: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-8813 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Nov  8 13:11:54.114: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Nov  8 13:11:54.114: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Nov  8 13:11:54.114: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Nov  8 13:11:54.114: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-8813 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Nov  8 13:11:54.488: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Nov  8 13:11:54.488: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Nov  8 13:11:54.488: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Nov  8 13:11:54.488: INFO: Waiting for statefulset status.replicas updated to 0
Nov  8 13:11:54.496: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Nov  8 13:12:04.520: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Nov  8 13:12:04.520: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Nov  8 13:12:04.520: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Nov  8 13:12:04.543: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999509s
Nov  8 13:12:05.554: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.991495545s
Nov  8 13:12:06.573: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.979729887s
Nov  8 13:12:07.585: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.961291716s
Nov  8 13:12:08.597: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.950221318s
Nov  8 13:12:09.606: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.937540166s
Nov  8 13:12:10.617: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.929169512s
Nov  8 13:12:11.627: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.917607029s
Nov  8 13:12:12.638: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.907798922s
Nov  8 13:12:13.693: INFO: Verifying statefulset ss doesn't scale past 3 for another 896.201992ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8813
Nov  8 13:12:14.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-8813 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Nov  8 13:12:15.102: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Nov  8 13:12:15.102: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Nov  8 13:12:15.102: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Nov  8 13:12:15.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-8813 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Nov  8 13:12:15.519: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Nov  8 13:12:15.519: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Nov  8 13:12:15.519: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Nov  8 13:12:15.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=statefulset-8813 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Nov  8 13:12:15.863: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Nov  8 13:12:15.863: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Nov  8 13:12:15.863: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Nov  8 13:12:15.863: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Nov  8 13:12:25.899: INFO: Deleting all statefulset in ns statefulset-8813
Nov  8 13:12:25.906: INFO: Scaling statefulset ss to 0
Nov  8 13:12:25.925: INFO: Waiting for statefulset status.replicas updated to 0
Nov  8 13:12:25.930: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Nov  8 13:12:25.949: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-8813" for this suite.

â€¢ [SLOW TEST:73.890 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]","total":356,"completed":247,"skipped":4593,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:12:25.971: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-7265
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation
Nov  8 13:12:26.118: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation
Nov  8 13:12:36.910: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:12:40.459: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 13:12:53.043: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-7265" for this suite.

â€¢ [SLOW TEST:27.108 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]","total":356,"completed":248,"skipped":4619,"failed":0}
S
------------------------------
[sig-apps] Deployment 
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:12:53.079: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-4478
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:12:53.235: INFO: Creating deployment "test-recreate-deployment"
Nov  8 13:12:53.241: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Nov  8 13:12:53.257: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Nov  8 13:12:55.272: INFO: Waiting deployment "test-recreate-deployment" to complete
Nov  8 13:12:55.276: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Nov  8 13:12:55.287: INFO: Updating deployment test-recreate-deployment
Nov  8 13:12:55.287: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Nov  8 13:12:55.355: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-4478  0835af00-d884-43d6-a809-1139c303abbf 35582 2 2022-11-08 13:12:53 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-11-08 13:12:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 13:12:55 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006a91558 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-11-08 13:12:55 +0000 UTC,LastTransitionTime:2022-11-08 13:12:55 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cd8586fc7" is progressing.,LastUpdateTime:2022-11-08 13:12:55 +0000 UTC,LastTransitionTime:2022-11-08 13:12:53 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Nov  8 13:12:55.359: INFO: New ReplicaSet "test-recreate-deployment-cd8586fc7" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cd8586fc7  deployment-4478  9049f9af-c833-47fd-bfda-b00fea3244db 35581 1 2022-11-08 13:12:55 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 0835af00-d884-43d6-a809-1139c303abbf 0xc003080a60 0xc003080a61}] []  [{kube-controller-manager Update apps/v1 2022-11-08 13:12:55 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0835af00-d884-43d6-a809-1139c303abbf\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 13:12:55 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cd8586fc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003080af8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Nov  8 13:12:55.359: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Nov  8 13:12:55.360: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-845d658455  deployment-4478  cf5e0f23-bae0-4875-b730-5464c10a1d92 35573 2 2022-11-08 13:12:53 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 0835af00-d884-43d6-a809-1139c303abbf 0xc003080947 0xc003080948}] []  [{kube-controller-manager Update apps/v1 2022-11-08 13:12:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0835af00-d884-43d6-a809-1139c303abbf\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 13:12:55 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 845d658455,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0030809f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Nov  8 13:12:55.364: INFO: Pod "test-recreate-deployment-cd8586fc7-wgjxz" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cd8586fc7-wgjxz test-recreate-deployment-cd8586fc7- deployment-4478  5678bae1-5067-4dae-89d2-1b139accbce6 35583 0 2022-11-08 13:12:55 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-recreate-deployment-cd8586fc7 9049f9af-c833-47fd-bfda-b00fea3244db 0xc006a91900 0xc006a91901}] []  [{kube-controller-manager Update v1 2022-11-08 13:12:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9049f9af-c833-47fd-bfda-b00fea3244db\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 13:12:55 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6j8lb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6j8lb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-lrvzp,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 13:12:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 13:12:55 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 13:12:55 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 13:12:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.0.153,PodIP:,StartTime:2022-11-08 13:12:55 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Nov  8 13:12:55.364: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-4478" for this suite.
â€¢{"msg":"PASSED [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":249,"skipped":4620,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:12:55.382: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5840
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-a1c07e31-a335-45f8-8f6d-785e1379f767
STEP: Creating a pod to test consume secrets
Nov  8 13:12:55.552: INFO: Waiting up to 5m0s for pod "pod-secrets-a30dd916-c39c-4dc5-ae9a-c73511b3a2f6" in namespace "secrets-5840" to be "Succeeded or Failed"
Nov  8 13:12:55.561: INFO: Pod "pod-secrets-a30dd916-c39c-4dc5-ae9a-c73511b3a2f6": Phase="Pending", Reason="", readiness=false. Elapsed: 9.094778ms
Nov  8 13:12:57.570: INFO: Pod "pod-secrets-a30dd916-c39c-4dc5-ae9a-c73511b3a2f6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017971555s
Nov  8 13:12:59.580: INFO: Pod "pod-secrets-a30dd916-c39c-4dc5-ae9a-c73511b3a2f6": Phase="Pending", Reason="", readiness=false. Elapsed: 4.028276396s
Nov  8 13:13:01.593: INFO: Pod "pod-secrets-a30dd916-c39c-4dc5-ae9a-c73511b3a2f6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.040476365s
STEP: Saw pod success
Nov  8 13:13:01.593: INFO: Pod "pod-secrets-a30dd916-c39c-4dc5-ae9a-c73511b3a2f6" satisfied condition "Succeeded or Failed"
Nov  8 13:13:01.597: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod pod-secrets-a30dd916-c39c-4dc5-ae9a-c73511b3a2f6 container secret-volume-test: <nil>
STEP: delete the pod
Nov  8 13:13:01.628: INFO: Waiting for pod pod-secrets-a30dd916-c39c-4dc5-ae9a-c73511b3a2f6 to disappear
Nov  8 13:13:01.633: INFO: Pod pod-secrets-a30dd916-c39c-4dc5-ae9a-c73511b3a2f6 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Nov  8 13:13:01.633: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5840" for this suite.

â€¢ [SLOW TEST:6.271 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":250,"skipped":4627,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:13:01.653: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-53
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-53
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Nov  8 13:13:01.802: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Nov  8 13:13:01.906: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:13:03.921: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:13:05.918: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:13:07.916: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:13:09.919: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:13:11.918: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:13:13.916: INFO: The status of Pod netserver-0 is Running (Ready = true)
Nov  8 13:13:13.926: INFO: The status of Pod netserver-1 is Running (Ready = true)
Nov  8 13:13:13.936: INFO: The status of Pod netserver-2 is Running (Ready = true)
Nov  8 13:13:13.946: INFO: The status of Pod netserver-3 is Running (Ready = true)
Nov  8 13:13:13.958: INFO: The status of Pod netserver-4 is Running (Ready = true)
Nov  8 13:13:13.970: INFO: The status of Pod netserver-5 is Running (Ready = true)
STEP: Creating test pods
Nov  8 13:13:16.029: INFO: Setting MaxTries for pod polling to 66 for networking test based on endpoint count 6
Nov  8 13:13:16.029: INFO: Going to poll 10.96.3.3 on port 8081 at least 0 times, with a maximum of 66 tries before failing
Nov  8 13:13:16.034: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.96.3.3 8081 | grep -v '^\s*$'] Namespace:pod-network-test-53 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:13:16.034: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:13:16.035: INFO: ExecWithOptions: Clientset creation
Nov  8 13:13:16.035: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-53/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.96.3.3+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Nov  8 13:13:17.345: INFO: Found all 1 expected endpoints: [netserver-0]
Nov  8 13:13:17.345: INFO: Going to poll 10.96.2.36 on port 8081 at least 0 times, with a maximum of 66 tries before failing
Nov  8 13:13:17.350: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.96.2.36 8081 | grep -v '^\s*$'] Namespace:pod-network-test-53 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:13:17.350: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:13:17.351: INFO: ExecWithOptions: Clientset creation
Nov  8 13:13:17.351: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-53/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.96.2.36+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Nov  8 13:13:18.684: INFO: Found all 1 expected endpoints: [netserver-1]
Nov  8 13:13:18.684: INFO: Going to poll 10.96.0.231 on port 8081 at least 0 times, with a maximum of 66 tries before failing
Nov  8 13:13:18.694: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.96.0.231 8081 | grep -v '^\s*$'] Namespace:pod-network-test-53 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:13:18.694: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:13:18.695: INFO: ExecWithOptions: Clientset creation
Nov  8 13:13:18.695: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-53/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.96.0.231+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Nov  8 13:13:20.016: INFO: Found all 1 expected endpoints: [netserver-2]
Nov  8 13:13:20.016: INFO: Going to poll 10.96.5.104 on port 8081 at least 0 times, with a maximum of 66 tries before failing
Nov  8 13:13:20.025: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.96.5.104 8081 | grep -v '^\s*$'] Namespace:pod-network-test-53 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:13:20.025: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:13:20.026: INFO: ExecWithOptions: Clientset creation
Nov  8 13:13:20.026: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-53/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.96.5.104+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Nov  8 13:13:21.310: INFO: Found all 1 expected endpoints: [netserver-3]
Nov  8 13:13:21.310: INFO: Going to poll 10.96.4.83 on port 8081 at least 0 times, with a maximum of 66 tries before failing
Nov  8 13:13:21.322: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.96.4.83 8081 | grep -v '^\s*$'] Namespace:pod-network-test-53 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:13:21.322: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:13:21.323: INFO: ExecWithOptions: Clientset creation
Nov  8 13:13:21.323: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-53/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.96.4.83+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Nov  8 13:13:22.724: INFO: Found all 1 expected endpoints: [netserver-4]
Nov  8 13:13:22.724: INFO: Going to poll 10.96.1.232 on port 8081 at least 0 times, with a maximum of 66 tries before failing
Nov  8 13:13:22.738: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.96.1.232 8081 | grep -v '^\s*$'] Namespace:pod-network-test-53 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:13:22.738: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:13:22.739: INFO: ExecWithOptions: Clientset creation
Nov  8 13:13:22.739: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-53/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.96.1.232+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Nov  8 13:13:24.046: INFO: Found all 1 expected endpoints: [netserver-5]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Nov  8 13:13:24.046: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-53" for this suite.

â€¢ [SLOW TEST:22.418 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":251,"skipped":4665,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version 
  should find the server version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:13:24.074: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename server-version
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in server-version-1707
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should find the server version [Conformance]
  test/e2e/framework/framework.go:652
STEP: Request ServerVersion
STEP: Confirm major version
Nov  8 13:13:24.221: INFO: Major version: 1
STEP: Confirm minor version
Nov  8 13:13:24.221: INFO: cleanMinorVersion: 24
Nov  8 13:13:24.221: INFO: Minor version: 24
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:188
Nov  8 13:13:24.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "server-version-1707" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] server version should find the server version [Conformance]","total":356,"completed":252,"skipped":4709,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:13:24.241: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-6429
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod test-webserver-8ef0949d-e58e-461a-9b75-0db894df192b in namespace container-probe-6429
Nov  8 13:13:26.417: INFO: Started pod test-webserver-8ef0949d-e58e-461a-9b75-0db894df192b in namespace container-probe-6429
STEP: checking the pod's current state and verifying that restartCount is present
Nov  8 13:13:26.423: INFO: Initial restart count of pod test-webserver-8ef0949d-e58e-461a-9b75-0db894df192b is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Nov  8 13:17:28.048: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6429" for this suite.

â€¢ [SLOW TEST:243.830 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":253,"skipped":4751,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:17:28.071: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-1430
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting a starting resourceVersion
STEP: starting a background goroutine to produce watch events
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Nov  8 13:17:30.991: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-1430" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]","total":356,"completed":254,"skipped":4765,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:17:31.080: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-9126
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-9126
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:17:31.332: INFO: Found 0 stateful pods, waiting for 1
Nov  8 13:17:41.343: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet
Nov  8 13:17:41.376: INFO: Found 1 stateful pods, waiting for 2
Nov  8 13:17:51.395: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Nov  8 13:17:51.395: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets
STEP: Delete all of the StatefulSets
STEP: Verify that StatefulSets have been deleted
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Nov  8 13:17:51.428: INFO: Deleting all statefulset in ns statefulset-9126
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Nov  8 13:17:51.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-9126" for this suite.

â€¢ [SLOW TEST:20.391 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]","total":356,"completed":255,"skipped":4781,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:17:51.473: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6370
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Nov  8 13:17:51.638: INFO: Waiting up to 5m0s for pod "pod-64988846-40b0-4306-8ba8-19fcf5b7c4a3" in namespace "emptydir-6370" to be "Succeeded or Failed"
Nov  8 13:17:51.644: INFO: Pod "pod-64988846-40b0-4306-8ba8-19fcf5b7c4a3": Phase="Pending", Reason="", readiness=false. Elapsed: 5.789186ms
Nov  8 13:17:53.652: INFO: Pod "pod-64988846-40b0-4306-8ba8-19fcf5b7c4a3": Phase="Running", Reason="", readiness=false. Elapsed: 2.013565165s
Nov  8 13:17:55.681: INFO: Pod "pod-64988846-40b0-4306-8ba8-19fcf5b7c4a3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.042700924s
STEP: Saw pod success
Nov  8 13:17:55.681: INFO: Pod "pod-64988846-40b0-4306-8ba8-19fcf5b7c4a3" satisfied condition "Succeeded or Failed"
Nov  8 13:17:55.688: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-lrvzp pod pod-64988846-40b0-4306-8ba8-19fcf5b7c4a3 container test-container: <nil>
STEP: delete the pod
Nov  8 13:17:55.721: INFO: Waiting for pod pod-64988846-40b0-4306-8ba8-19fcf5b7c4a3 to disappear
Nov  8 13:17:55.726: INFO: Pod pod-64988846-40b0-4306-8ba8-19fcf5b7c4a3 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 13:17:55.726: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6370" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":256,"skipped":4835,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info 
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:17:55.744: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2674
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating cluster-info
Nov  8 13:17:55.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-2674 cluster-info'
Nov  8 13:17:55.962: INFO: stderr: ""
Nov  8 13:17:55.962: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 13:17:55.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2674" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]","total":356,"completed":257,"skipped":4863,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:17:55.982: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5661
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-f1737f4e-7e91-4cfe-93fb-c4c6f3274734
STEP: Creating a pod to test consume secrets
Nov  8 13:17:56.144: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-f2177640-62c5-415d-b6e4-d4c920d1f68e" in namespace "projected-5661" to be "Succeeded or Failed"
Nov  8 13:17:56.150: INFO: Pod "pod-projected-secrets-f2177640-62c5-415d-b6e4-d4c920d1f68e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.30777ms
Nov  8 13:17:58.160: INFO: Pod "pod-projected-secrets-f2177640-62c5-415d-b6e4-d4c920d1f68e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015467257s
Nov  8 13:18:00.171: INFO: Pod "pod-projected-secrets-f2177640-62c5-415d-b6e4-d4c920d1f68e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026375308s
STEP: Saw pod success
Nov  8 13:18:00.171: INFO: Pod "pod-projected-secrets-f2177640-62c5-415d-b6e4-d4c920d1f68e" satisfied condition "Succeeded or Failed"
Nov  8 13:18:00.176: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod pod-projected-secrets-f2177640-62c5-415d-b6e4-d4c920d1f68e container projected-secret-volume-test: <nil>
STEP: delete the pod
Nov  8 13:18:00.207: INFO: Waiting for pod pod-projected-secrets-f2177640-62c5-415d-b6e4-d4c920d1f68e to disappear
Nov  8 13:18:00.239: INFO: Pod pod-projected-secrets-f2177640-62c5-415d-b6e4-d4c920d1f68e no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Nov  8 13:18:00.239: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5661" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":258,"skipped":4929,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:18:00.260: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4198
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-f3732af9-7b5b-48fb-b8d9-75c221e83251
STEP: Creating configMap with name cm-test-opt-upd-0ab1ddd4-8f48-4f88-bdaa-10e85e1c42e8
STEP: Creating the pod
Nov  8 13:18:00.479: INFO: The status of Pod pod-projected-configmaps-56539417-fe65-45dc-850c-986e7f23e09a is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:18:02.493: INFO: The status of Pod pod-projected-configmaps-56539417-fe65-45dc-850c-986e7f23e09a is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:18:04.491: INFO: The status of Pod pod-projected-configmaps-56539417-fe65-45dc-850c-986e7f23e09a is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-f3732af9-7b5b-48fb-b8d9-75c221e83251
STEP: Updating configmap cm-test-opt-upd-0ab1ddd4-8f48-4f88-bdaa-10e85e1c42e8
STEP: Creating configMap with name cm-test-opt-create-5eaf82bf-c974-4305-8015-049e6e1862aa
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Nov  8 13:19:07.236: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4198" for this suite.

â€¢ [SLOW TEST:67.002 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":259,"skipped":4961,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:19:07.263: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-1583
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Nov  8 13:19:07.426: INFO: Waiting up to 1m0s for all nodes to be ready
Nov  8 13:20:07.517: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Nov  8 13:20:07.557: INFO: Created pod: pod0-0-sched-preemption-low-priority
Nov  8 13:20:07.568: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Nov  8 13:20:07.598: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Nov  8 13:20:07.611: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Nov  8 13:20:07.638: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Nov  8 13:20:07.647: INFO: Created pod: pod2-1-sched-preemption-medium-priority
Nov  8 13:20:07.673: INFO: Created pod: pod3-0-sched-preemption-medium-priority
Nov  8 13:20:07.684: INFO: Created pod: pod3-1-sched-preemption-medium-priority
Nov  8 13:20:07.709: INFO: Created pod: pod4-0-sched-preemption-medium-priority
Nov  8 13:20:07.720: INFO: Created pod: pod4-1-sched-preemption-medium-priority
Nov  8 13:20:07.757: INFO: Created pod: pod5-0-sched-preemption-medium-priority
Nov  8 13:20:07.769: INFO: Created pod: pod5-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a critical pod that use same resources as that of a lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Nov  8 13:20:21.990: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-1583" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

â€¢ [SLOW TEST:74.852 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]","total":356,"completed":260,"skipped":4987,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:20:22.117: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-4983
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption-release is created
Nov  8 13:20:22.281: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:20:24.290: INFO: The status of Pod pod-adoption-release is Running (Ready = true)
STEP: When a replicaset with a matching selector is created
STEP: Then the orphan pod is adopted
STEP: When the matched label of one of its pods change
Nov  8 13:20:25.323: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Nov  8 13:20:26.356: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-4983" for this suite.
â€¢{"msg":"PASSED [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]","total":356,"completed":261,"skipped":4996,"failed":0}
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:20:26.376: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-5795
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-downwardapi-c8gl
STEP: Creating a pod to test atomic-volume-subpath
Nov  8 13:20:26.546: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-c8gl" in namespace "subpath-5795" to be "Succeeded or Failed"
Nov  8 13:20:26.551: INFO: Pod "pod-subpath-test-downwardapi-c8gl": Phase="Pending", Reason="", readiness=false. Elapsed: 5.345073ms
Nov  8 13:20:28.563: INFO: Pod "pod-subpath-test-downwardapi-c8gl": Phase="Running", Reason="", readiness=true. Elapsed: 2.017609148s
Nov  8 13:20:30.572: INFO: Pod "pod-subpath-test-downwardapi-c8gl": Phase="Running", Reason="", readiness=true. Elapsed: 4.026333126s
Nov  8 13:20:32.582: INFO: Pod "pod-subpath-test-downwardapi-c8gl": Phase="Running", Reason="", readiness=true. Elapsed: 6.036171949s
Nov  8 13:20:34.595: INFO: Pod "pod-subpath-test-downwardapi-c8gl": Phase="Running", Reason="", readiness=true. Elapsed: 8.049667372s
Nov  8 13:20:36.610: INFO: Pod "pod-subpath-test-downwardapi-c8gl": Phase="Running", Reason="", readiness=true. Elapsed: 10.064163107s
Nov  8 13:20:38.625: INFO: Pod "pod-subpath-test-downwardapi-c8gl": Phase="Running", Reason="", readiness=true. Elapsed: 12.079543555s
Nov  8 13:20:40.636: INFO: Pod "pod-subpath-test-downwardapi-c8gl": Phase="Running", Reason="", readiness=true. Elapsed: 14.090515529s
Nov  8 13:20:42.649: INFO: Pod "pod-subpath-test-downwardapi-c8gl": Phase="Running", Reason="", readiness=true. Elapsed: 16.103807686s
Nov  8 13:20:44.660: INFO: Pod "pod-subpath-test-downwardapi-c8gl": Phase="Running", Reason="", readiness=true. Elapsed: 18.114530666s
Nov  8 13:20:46.670: INFO: Pod "pod-subpath-test-downwardapi-c8gl": Phase="Running", Reason="", readiness=true. Elapsed: 20.124614794s
Nov  8 13:20:48.681: INFO: Pod "pod-subpath-test-downwardapi-c8gl": Phase="Running", Reason="", readiness=false. Elapsed: 22.135047054s
Nov  8 13:20:50.690: INFO: Pod "pod-subpath-test-downwardapi-c8gl": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.144895263s
STEP: Saw pod success
Nov  8 13:20:50.690: INFO: Pod "pod-subpath-test-downwardapi-c8gl" satisfied condition "Succeeded or Failed"
Nov  8 13:20:50.699: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod pod-subpath-test-downwardapi-c8gl container test-container-subpath-downwardapi-c8gl: <nil>
STEP: delete the pod
Nov  8 13:20:50.727: INFO: Waiting for pod pod-subpath-test-downwardapi-c8gl to disappear
Nov  8 13:20:50.732: INFO: Pod pod-subpath-test-downwardapi-c8gl no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-c8gl
Nov  8 13:20:50.732: INFO: Deleting pod "pod-subpath-test-downwardapi-c8gl" in namespace "subpath-5795"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Nov  8 13:20:50.737: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-5795" for this suite.

â€¢ [SLOW TEST:24.380 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]","total":356,"completed":262,"skipped":4998,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs 
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:20:50.757: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4670
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1412
STEP: creating an pod
Nov  8 13:20:50.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4670 run logs-generator --image=k8s.gcr.io/e2e-test-images/agnhost:2.39 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Nov  8 13:20:51.004: INFO: stderr: ""
Nov  8 13:20:51.004: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for log generator to start.
Nov  8 13:20:51.004: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Nov  8 13:20:51.004: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-4670" to be "running and ready, or succeeded"
Nov  8 13:20:51.012: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 7.362058ms
Nov  8 13:20:53.022: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.017868561s
Nov  8 13:20:53.022: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Nov  8 13:20:53.022: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings
Nov  8 13:20:53.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4670 logs logs-generator logs-generator'
Nov  8 13:20:53.102: INFO: stderr: ""
Nov  8 13:20:53.102: INFO: stdout: "I1108 13:20:51.879456       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/szk 528\nI1108 13:20:52.079849       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/fx2g 425\nI1108 13:20:52.280156       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/cq85 544\nI1108 13:20:52.480461       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/n85g 384\nI1108 13:20:52.679792       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/kq5 376\nI1108 13:20:52.880142       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/r6c 430\nI1108 13:20:53.080475       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/wpfk 453\n"
STEP: limiting log lines
Nov  8 13:20:53.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4670 logs logs-generator logs-generator --tail=1'
Nov  8 13:20:53.178: INFO: stderr: ""
Nov  8 13:20:53.178: INFO: stdout: "I1108 13:20:53.080475       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/wpfk 453\n"
Nov  8 13:20:53.178: INFO: got output "I1108 13:20:53.080475       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/wpfk 453\n"
STEP: limiting log bytes
Nov  8 13:20:53.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4670 logs logs-generator logs-generator --limit-bytes=1'
Nov  8 13:20:53.251: INFO: stderr: ""
Nov  8 13:20:53.251: INFO: stdout: "I"
Nov  8 13:20:53.251: INFO: got output "I"
STEP: exposing timestamps
Nov  8 13:20:53.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4670 logs logs-generator logs-generator --tail=1 --timestamps'
Nov  8 13:20:53.324: INFO: stderr: ""
Nov  8 13:20:53.324: INFO: stdout: "2022-11-08T13:20:53.279991246Z I1108 13:20:53.279828       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/d7g 379\n"
Nov  8 13:20:53.324: INFO: got output "2022-11-08T13:20:53.279991246Z I1108 13:20:53.279828       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/d7g 379\n"
STEP: restricting to a time range
Nov  8 13:20:55.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4670 logs logs-generator logs-generator --since=1s'
Nov  8 13:20:55.896: INFO: stderr: ""
Nov  8 13:20:55.896: INFO: stdout: "I1108 13:20:55.079853       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/8p5 238\nI1108 13:20:55.280240       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/mnt 588\nI1108 13:20:55.479508       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/64q 492\nI1108 13:20:55.679893       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/srx 449\nI1108 13:20:55.880251       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/chld 510\n"
Nov  8 13:20:55.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4670 logs logs-generator logs-generator --since=24h'
Nov  8 13:20:55.982: INFO: stderr: ""
Nov  8 13:20:55.982: INFO: stdout: "I1108 13:20:51.879456       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/szk 528\nI1108 13:20:52.079849       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/fx2g 425\nI1108 13:20:52.280156       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/cq85 544\nI1108 13:20:52.480461       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/n85g 384\nI1108 13:20:52.679792       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/kq5 376\nI1108 13:20:52.880142       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/r6c 430\nI1108 13:20:53.080475       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/wpfk 453\nI1108 13:20:53.279828       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/d7g 379\nI1108 13:20:53.480169       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/rzpx 582\nI1108 13:20:53.680526       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/b95r 238\nI1108 13:20:53.879861       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/9xx 592\nI1108 13:20:54.080206       1 logs_generator.go:76] 11 POST /api/v1/namespaces/ns/pods/rxhf 369\nI1108 13:20:54.280543       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/2bdh 393\nI1108 13:20:54.479882       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/2bd 324\nI1108 13:20:54.680216       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/xcdm 593\nI1108 13:20:54.879487       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/7szg 521\nI1108 13:20:55.079853       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/8p5 238\nI1108 13:20:55.280240       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/mnt 588\nI1108 13:20:55.479508       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/64q 492\nI1108 13:20:55.679893       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/srx 449\nI1108 13:20:55.880251       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/chld 510\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1417
Nov  8 13:20:55.983: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4670 delete pod logs-generator'
Nov  8 13:20:56.588: INFO: stderr: ""
Nov  8 13:20:56.588: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 13:20:56.588: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4670" for this suite.

â€¢ [SLOW TEST:5.852 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1409
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance]","total":356,"completed":263,"skipped":5005,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:20:56.609: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-6390
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Nov  8 13:20:56.837: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:20:56.837: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 13:20:57.859: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Nov  8 13:20:57.859: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z is running 0 daemon pod, expected 1
Nov  8 13:20:58.860: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
Nov  8 13:20:58.860: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
STEP: Getting /status
Nov  8 13:20:58.870: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status
Nov  8 13:20:58.882: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated
Nov  8 13:20:58.887: INFO: Observed &DaemonSet event: ADDED
Nov  8 13:20:58.887: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.887: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.887: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.887: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.888: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.888: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.888: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.888: INFO: Found daemon set daemon-set in namespace daemonsets-6390 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Nov  8 13:20:58.888: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status
STEP: watching for the daemon set status to be patched
Nov  8 13:20:58.904: INFO: Observed &DaemonSet event: ADDED
Nov  8 13:20:58.905: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.905: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.905: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.905: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.905: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.906: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.906: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.906: INFO: Observed daemon set daemon-set in namespace daemonsets-6390 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Nov  8 13:20:58.906: INFO: Observed &DaemonSet event: MODIFIED
Nov  8 13:20:58.906: INFO: Found daemon set daemon-set in namespace daemonsets-6390 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Nov  8 13:20:58.906: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6390, will wait for the garbage collector to delete the pods
Nov  8 13:20:58.972: INFO: Deleting DaemonSet.extensions daemon-set took: 6.387434ms
Nov  8 13:20:59.073: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.465297ms
Nov  8 13:21:01.682: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:21:01.682: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Nov  8 13:21:01.700: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38967"},"items":null}

Nov  8 13:21:01.705: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38967"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Nov  8 13:21:01.763: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-6390" for this suite.

â€¢ [SLOW TEST:5.175 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]","total":356,"completed":264,"skipped":5020,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:21:01.786: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-4655
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Nov  8 13:21:01.945: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-4655" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":265,"skipped":5050,"failed":0}
SS
------------------------------
[sig-network] Services 
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:21:01.966: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3456
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-3456
STEP: creating service affinity-clusterip in namespace services-3456
STEP: creating replication controller affinity-clusterip in namespace services-3456
I1108 13:21:02.137461      22 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-3456, replica count: 3
I1108 13:21:05.188062      22 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Nov  8 13:21:05.202: INFO: Creating new exec pod
Nov  8 13:21:08.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-3456 exec execpod-affinity5qrnk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Nov  8 13:21:08.635: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Nov  8 13:21:08.636: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 13:21:08.636: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-3456 exec execpod-affinity5qrnk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.117.62.63 80'
Nov  8 13:21:09.000: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.117.62.63 80\nConnection to 10.117.62.63 80 port [tcp/http] succeeded!\n"
Nov  8 13:21:09.000: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 13:21:09.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-3456 exec execpod-affinity5qrnk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.117.62.63:80/ ; done'
Nov  8 13:21:09.447: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.117.62.63:80/\n"
Nov  8 13:21:09.447: INFO: stdout: "\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp\naffinity-clusterip-xxvlp"
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Received response from host: affinity-clusterip-xxvlp
Nov  8 13:21:09.447: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-3456, will wait for the garbage collector to delete the pods
Nov  8 13:21:09.525: INFO: Deleting ReplicationController affinity-clusterip took: 7.501329ms
Nov  8 13:21:09.626: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.382036ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 13:21:11.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3456" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:9.803 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":266,"skipped":5052,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:21:11.769: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-479
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pdb
STEP: Waiting for the pdb to be processed
STEP: updating the pdb
STEP: Waiting for the pdb to be processed
STEP: patching the pdb
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be deleted
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Nov  8 13:21:11.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-479" for this suite.
â€¢{"msg":"PASSED [sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]","total":356,"completed":267,"skipped":5071,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:21:12.003: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-5205
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ForbidConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring no more jobs are scheduled
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Nov  8 13:27:00.199: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-5205" for this suite.

â€¢ [SLOW TEST:348.216 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]","total":356,"completed":268,"skipped":5095,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:27:00.219: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8329
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Nov  8 13:27:07.393: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8329" for this suite.

â€¢ [SLOW TEST:7.191 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]","total":356,"completed":269,"skipped":5116,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:27:07.411: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1179
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 13:27:07.997: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 13:27:11.038: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:27:11.046: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4067-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 13:27:14.377: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1179" for this suite.
STEP: Destroying namespace "webhook-1179-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:7.036 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]","total":356,"completed":270,"skipped":5121,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:27:14.447: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-9652
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:27:14.594: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Nov  8 13:27:18.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-9652 --namespace=crd-publish-openapi-9652 create -f -'
Nov  8 13:27:19.499: INFO: stderr: ""
Nov  8 13:27:19.499: INFO: stdout: "e2e-test-crd-publish-openapi-3840-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Nov  8 13:27:19.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-9652 --namespace=crd-publish-openapi-9652 delete e2e-test-crd-publish-openapi-3840-crds test-cr'
Nov  8 13:27:19.575: INFO: stderr: ""
Nov  8 13:27:19.575: INFO: stdout: "e2e-test-crd-publish-openapi-3840-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Nov  8 13:27:19.575: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-9652 --namespace=crd-publish-openapi-9652 apply -f -'
Nov  8 13:27:19.768: INFO: stderr: ""
Nov  8 13:27:19.768: INFO: stdout: "e2e-test-crd-publish-openapi-3840-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Nov  8 13:27:19.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-9652 --namespace=crd-publish-openapi-9652 delete e2e-test-crd-publish-openapi-3840-crds test-cr'
Nov  8 13:27:19.858: INFO: stderr: ""
Nov  8 13:27:19.858: INFO: stdout: "e2e-test-crd-publish-openapi-3840-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Nov  8 13:27:19.858: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-9652 explain e2e-test-crd-publish-openapi-3840-crds'
Nov  8 13:27:20.021: INFO: stderr: ""
Nov  8 13:27:20.021: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3840-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 13:27:23.537: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-9652" for this suite.

â€¢ [SLOW TEST:9.119 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]","total":356,"completed":271,"skipped":5131,"failed":0}
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:27:23.566: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-642
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ServiceAccount
STEP: watching for the ServiceAccount to be added
STEP: patching the ServiceAccount
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector)
STEP: deleting the ServiceAccount
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Nov  8 13:27:23.748: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-642" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]","total":356,"completed":272,"skipped":5139,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop 
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:27:23.766: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename prestop
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in prestop-5900
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating server pod server in namespace prestop-5900
STEP: Waiting for pods to come up.
STEP: Creating tester pod tester in namespace prestop-5900
STEP: Deleting pre-stop pod
Nov  8 13:27:33.089: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod
[AfterEach] [sig-node] PreStop
  test/e2e/framework/framework.go:188
Nov  8 13:27:33.105: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "prestop-5900" for this suite.

â€¢ [SLOW TEST:9.361 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] PreStop should call prestop when killing a pod  [Conformance]","total":356,"completed":273,"skipped":5153,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] Job 
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:27:33.128: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-2165
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a job [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: delete a job
STEP: deleting Job.batch foo in namespace job-2165, will wait for the garbage collector to delete the pods
Nov  8 13:27:37.353: INFO: Deleting Job.batch foo took: 6.636726ms
Nov  8 13:27:37.453: INFO: Terminating Job.batch foo pods took: 100.282752ms
STEP: Ensuring job was deleted
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Nov  8 13:28:08.465: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-2165" for this suite.

â€¢ [SLOW TEST:35.356 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should delete a job [Conformance]","total":356,"completed":274,"skipped":5161,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:28:08.485: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-4722
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc1
STEP: create the rc2
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well
STEP: delete the rc simpletest-rc-to-be-deleted
STEP: wait for the rc to be deleted
Nov  8 13:28:19.360: INFO: 100 pods remaining
Nov  8 13:28:19.360: INFO: 75 pods has nil DeletionTimestamp
Nov  8 13:28:19.360: INFO: 
Nov  8 13:28:24.353: INFO: 90 pods remaining
Nov  8 13:28:24.353: INFO: 50 pods has nil DeletionTimestamp
Nov  8 13:28:24.353: INFO: 
STEP: Gathering metrics
W1108 13:28:29.366822      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Nov  8 13:28:29.366: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Nov  8 13:28:29.366: INFO: Deleting pod "simpletest-rc-to-be-deleted-22q4h" in namespace "gc-4722"
Nov  8 13:28:29.385: INFO: Deleting pod "simpletest-rc-to-be-deleted-2rmdq" in namespace "gc-4722"
Nov  8 13:28:29.397: INFO: Deleting pod "simpletest-rc-to-be-deleted-2wgds" in namespace "gc-4722"
Nov  8 13:28:29.411: INFO: Deleting pod "simpletest-rc-to-be-deleted-2zzm8" in namespace "gc-4722"
Nov  8 13:28:29.422: INFO: Deleting pod "simpletest-rc-to-be-deleted-46mzt" in namespace "gc-4722"
Nov  8 13:28:29.436: INFO: Deleting pod "simpletest-rc-to-be-deleted-4ppmv" in namespace "gc-4722"
Nov  8 13:28:29.450: INFO: Deleting pod "simpletest-rc-to-be-deleted-4qc4m" in namespace "gc-4722"
Nov  8 13:28:29.468: INFO: Deleting pod "simpletest-rc-to-be-deleted-56fv5" in namespace "gc-4722"
Nov  8 13:28:29.484: INFO: Deleting pod "simpletest-rc-to-be-deleted-69tjx" in namespace "gc-4722"
Nov  8 13:28:29.498: INFO: Deleting pod "simpletest-rc-to-be-deleted-6c5sb" in namespace "gc-4722"
Nov  8 13:28:29.509: INFO: Deleting pod "simpletest-rc-to-be-deleted-6swpp" in namespace "gc-4722"
Nov  8 13:28:29.523: INFO: Deleting pod "simpletest-rc-to-be-deleted-6wcjg" in namespace "gc-4722"
Nov  8 13:28:29.532: INFO: Deleting pod "simpletest-rc-to-be-deleted-745s6" in namespace "gc-4722"
Nov  8 13:28:29.546: INFO: Deleting pod "simpletest-rc-to-be-deleted-7dwwf" in namespace "gc-4722"
Nov  8 13:28:29.570: INFO: Deleting pod "simpletest-rc-to-be-deleted-7v422" in namespace "gc-4722"
Nov  8 13:28:29.585: INFO: Deleting pod "simpletest-rc-to-be-deleted-8j4x2" in namespace "gc-4722"
Nov  8 13:28:29.600: INFO: Deleting pod "simpletest-rc-to-be-deleted-8sl2f" in namespace "gc-4722"
Nov  8 13:28:29.612: INFO: Deleting pod "simpletest-rc-to-be-deleted-8t7h8" in namespace "gc-4722"
Nov  8 13:28:29.625: INFO: Deleting pod "simpletest-rc-to-be-deleted-97tx2" in namespace "gc-4722"
Nov  8 13:28:29.668: INFO: Deleting pod "simpletest-rc-to-be-deleted-98xb4" in namespace "gc-4722"
Nov  8 13:28:29.683: INFO: Deleting pod "simpletest-rc-to-be-deleted-9gm6t" in namespace "gc-4722"
Nov  8 13:28:29.699: INFO: Deleting pod "simpletest-rc-to-be-deleted-9kmqp" in namespace "gc-4722"
Nov  8 13:28:29.720: INFO: Deleting pod "simpletest-rc-to-be-deleted-9snpt" in namespace "gc-4722"
Nov  8 13:28:29.738: INFO: Deleting pod "simpletest-rc-to-be-deleted-9vm9r" in namespace "gc-4722"
Nov  8 13:28:29.750: INFO: Deleting pod "simpletest-rc-to-be-deleted-b5flz" in namespace "gc-4722"
Nov  8 13:28:29.761: INFO: Deleting pod "simpletest-rc-to-be-deleted-b74zt" in namespace "gc-4722"
Nov  8 13:28:29.772: INFO: Deleting pod "simpletest-rc-to-be-deleted-b89zx" in namespace "gc-4722"
Nov  8 13:28:29.782: INFO: Deleting pod "simpletest-rc-to-be-deleted-b97ft" in namespace "gc-4722"
Nov  8 13:28:29.795: INFO: Deleting pod "simpletest-rc-to-be-deleted-bdkpd" in namespace "gc-4722"
Nov  8 13:28:29.810: INFO: Deleting pod "simpletest-rc-to-be-deleted-bhr9k" in namespace "gc-4722"
Nov  8 13:28:29.821: INFO: Deleting pod "simpletest-rc-to-be-deleted-c4fwk" in namespace "gc-4722"
Nov  8 13:28:29.833: INFO: Deleting pod "simpletest-rc-to-be-deleted-c6qrd" in namespace "gc-4722"
Nov  8 13:28:29.844: INFO: Deleting pod "simpletest-rc-to-be-deleted-c7hsp" in namespace "gc-4722"
Nov  8 13:28:29.854: INFO: Deleting pod "simpletest-rc-to-be-deleted-cdkmt" in namespace "gc-4722"
Nov  8 13:28:29.863: INFO: Deleting pod "simpletest-rc-to-be-deleted-d7mg8" in namespace "gc-4722"
Nov  8 13:28:29.874: INFO: Deleting pod "simpletest-rc-to-be-deleted-f8cn5" in namespace "gc-4722"
Nov  8 13:28:29.890: INFO: Deleting pod "simpletest-rc-to-be-deleted-f97b4" in namespace "gc-4722"
Nov  8 13:28:29.900: INFO: Deleting pod "simpletest-rc-to-be-deleted-fbcmg" in namespace "gc-4722"
Nov  8 13:28:29.918: INFO: Deleting pod "simpletest-rc-to-be-deleted-ffl52" in namespace "gc-4722"
Nov  8 13:28:29.934: INFO: Deleting pod "simpletest-rc-to-be-deleted-gb597" in namespace "gc-4722"
Nov  8 13:28:29.951: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfcxf" in namespace "gc-4722"
Nov  8 13:28:29.967: INFO: Deleting pod "simpletest-rc-to-be-deleted-h4dql" in namespace "gc-4722"
Nov  8 13:28:29.977: INFO: Deleting pod "simpletest-rc-to-be-deleted-h7ggj" in namespace "gc-4722"
Nov  8 13:28:29.986: INFO: Deleting pod "simpletest-rc-to-be-deleted-ht62m" in namespace "gc-4722"
Nov  8 13:28:29.995: INFO: Deleting pod "simpletest-rc-to-be-deleted-hxvpk" in namespace "gc-4722"
Nov  8 13:28:30.006: INFO: Deleting pod "simpletest-rc-to-be-deleted-hzm6k" in namespace "gc-4722"
Nov  8 13:28:30.017: INFO: Deleting pod "simpletest-rc-to-be-deleted-j4n2d" in namespace "gc-4722"
Nov  8 13:28:30.030: INFO: Deleting pod "simpletest-rc-to-be-deleted-jhnm6" in namespace "gc-4722"
Nov  8 13:28:30.048: INFO: Deleting pod "simpletest-rc-to-be-deleted-jr766" in namespace "gc-4722"
Nov  8 13:28:30.070: INFO: Deleting pod "simpletest-rc-to-be-deleted-jrknb" in namespace "gc-4722"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Nov  8 13:28:30.085: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-4722" for this suite.

â€¢ [SLOW TEST:21.622 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]","total":356,"completed":275,"skipped":5186,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:28:30.107: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7977
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicationController
STEP: Ensuring resource quota status captures replication controller creation
STEP: Deleting a ReplicationController
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Nov  8 13:28:41.317: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7977" for this suite.

â€¢ [SLOW TEST:11.229 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]","total":356,"completed":276,"skipped":5199,"failed":0}
SSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:28:41.335: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-4125
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-f70d1396-8535-43a4-81ce-bc7ada81473b in namespace container-probe-4125
Nov  8 13:28:43.521: INFO: Started pod busybox-f70d1396-8535-43a4-81ce-bc7ada81473b in namespace container-probe-4125
STEP: checking the pod's current state and verifying that restartCount is present
Nov  8 13:28:43.526: INFO: Initial restart count of pod busybox-f70d1396-8535-43a4-81ce-bc7ada81473b is 0
Nov  8 13:29:33.802: INFO: Restart count of pod container-probe-4125/busybox-f70d1396-8535-43a4-81ce-bc7ada81473b is now 1 (50.276317045s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Nov  8 13:29:33.816: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-4125" for this suite.

â€¢ [SLOW TEST:52.503 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":277,"skipped":5204,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:29:33.839: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-5749
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pods
Nov  8 13:29:33.996: INFO: created test-pod-1
Nov  8 13:29:34.046: INFO: created test-pod-2
Nov  8 13:29:34.057: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running
Nov  8 13:29:34.057: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-5749' to be running and ready
Nov  8 13:29:34.078: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Nov  8 13:29:34.078: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Nov  8 13:29:34.078: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Nov  8 13:29:34.078: INFO: 0 / 3 pods in namespace 'pods-5749' are running and ready (0 seconds elapsed)
Nov  8 13:29:34.078: INFO: expected 0 pod replicas in namespace 'pods-5749', 0 are Running and Ready.
Nov  8 13:29:34.078: INFO: POD         NODE                                                        PHASE    GRACE  CONDITIONS
Nov  8 13:29:34.078: INFO: test-pod-1  shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:29:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:29:34 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:29:34 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:29:33 +0000 UTC  }]
Nov  8 13:29:34.078: INFO: test-pod-2  shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-lrvzp  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:29:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:29:34 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:29:34 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:29:34 +0000 UTC  }]
Nov  8 13:29:34.078: INFO: test-pod-3  shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-lrvzp  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-11-08 13:29:34 +0000 UTC  }]
Nov  8 13:29:34.078: INFO: 
Nov  8 13:29:36.097: INFO: 3 / 3 pods in namespace 'pods-5749' are running and ready (2 seconds elapsed)
Nov  8 13:29:36.097: INFO: expected 0 pod replicas in namespace 'pods-5749', 0 are Running and Ready.
STEP: waiting for all pods to be deleted
Nov  8 13:29:36.129: INFO: Pod quantity 3 is different from expected quantity 0
Nov  8 13:29:37.140: INFO: Pod quantity 3 is different from expected quantity 0
Nov  8 13:29:38.137: INFO: Pod quantity 3 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Nov  8 13:29:39.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5749" for this suite.

â€¢ [SLOW TEST:5.322 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should delete a collection of pods [Conformance]","total":356,"completed":278,"skipped":5255,"failed":0}
SSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:29:39.162: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-6797
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a best-effort pod
STEP: Ensuring resource quota with best effort scope captures the pod usage
STEP: Ensuring resource quota with not best effort ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a not best-effort pod
STEP: Ensuring resource quota with not best effort scope captures the pod usage
STEP: Ensuring resource quota with best effort scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Nov  8 13:29:55.497: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-6797" for this suite.

â€¢ [SLOW TEST:16.353 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]","total":356,"completed":279,"skipped":5258,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:29:55.515: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-8513
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:29:55.795: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes.
Nov  8 13:29:55.807: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:29:55.807: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched.
Nov  8 13:29:55.847: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:29:55.847: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 13:29:56.855: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:29:56.855: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 13:29:57.855: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Nov  8 13:29:57.855: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled
Nov  8 13:29:57.890: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Nov  8 13:29:57.890: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Nov  8 13:29:58.898: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:29:58.898: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate
Nov  8 13:29:58.913: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:29:58.913: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 13:29:59.920: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:29:59.920: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 13:30:00.926: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:30:00.926: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 13:30:01.923: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:30:01.923: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 13:30:02.923: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Nov  8 13:30:02.923: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8513, will wait for the garbage collector to delete the pods
Nov  8 13:30:02.995: INFO: Deleting DaemonSet.extensions daemon-set took: 7.409889ms
Nov  8 13:30:03.096: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.942321ms
Nov  8 13:30:05.107: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:30:05.108: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Nov  8 13:30:05.113: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"43434"},"items":null}

Nov  8 13:30:05.119: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"43434"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Nov  8 13:30:05.190: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-8513" for this suite.

â€¢ [SLOW TEST:9.699 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]","total":356,"completed":280,"skipped":5289,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity 
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:30:05.215: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename csistoragecapacity
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in csistoragecapacity-9870
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/storage.k8s.io
STEP: getting /apis/storage.k8s.io/v1
STEP: creating
STEP: watching
Nov  8 13:30:05.420: INFO: starting watch
STEP: getting
STEP: listing in namespace
STEP: listing across namespaces
STEP: patching
STEP: updating
Nov  8 13:30:05.462: INFO: waiting for watch events with expected annotations in namespace
Nov  8 13:30:05.462: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:188
Nov  8 13:30:05.493: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "csistoragecapacity-9870" for this suite.
â€¢{"msg":"PASSED [sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]","total":356,"completed":281,"skipped":5301,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:30:05.517: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9469
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-9469
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-9469
STEP: creating replication controller externalsvc in namespace services-9469
I1108 13:30:05.702363      22 runners.go:193] Created replication controller with name: externalsvc, namespace: services-9469, replica count: 2
I1108 13:30:08.753715      22 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName
Nov  8 13:30:08.785: INFO: Creating new exec pod
Nov  8 13:30:10.815: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-9469 exec execpodf22mk -- /bin/sh -x -c nslookup clusterip-service.services-9469.svc.cluster.local'
Nov  8 13:30:11.251: INFO: stderr: "+ nslookup clusterip-service.services-9469.svc.cluster.local\n"
Nov  8 13:30:11.251: INFO: stdout: "Server:\t\t10.112.0.10\nAddress:\t10.112.0.10#53\n\nclusterip-service.services-9469.svc.cluster.local\tcanonical name = externalsvc.services-9469.svc.cluster.local.\nName:\texternalsvc.services-9469.svc.cluster.local\nAddress: 10.120.83.207\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-9469, will wait for the garbage collector to delete the pods
Nov  8 13:30:11.316: INFO: Deleting ReplicationController externalsvc took: 8.425591ms
Nov  8 13:30:11.417: INFO: Terminating ReplicationController externalsvc pods took: 100.206451ms
Nov  8 13:30:13.544: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 13:30:13.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9469" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:8.055 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]","total":356,"completed":282,"skipped":5345,"failed":0}
[sig-node] Variable Expansion 
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:30:13.573: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-6984
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: waiting for pod running
STEP: creating a file in subpath
Nov  8 13:30:15.761: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6984 PodName:var-expansion-f9dcff04-55f0-49d0-9262-ccc0e896750b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:30:15.761: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:30:15.762: INFO: ExecWithOptions: Clientset creation
Nov  8 13:30:15.762: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/var-expansion-6984/pods/var-expansion-f9dcff04-55f0-49d0-9262-ccc0e896750b/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path
Nov  8 13:30:16.112: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6984 PodName:var-expansion-f9dcff04-55f0-49d0-9262-ccc0e896750b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:30:16.113: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:30:16.113: INFO: ExecWithOptions: Clientset creation
Nov  8 13:30:16.113: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/var-expansion-6984/pods/var-expansion-f9dcff04-55f0-49d0-9262-ccc0e896750b/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value
Nov  8 13:30:16.954: INFO: Successfully updated pod "var-expansion-f9dcff04-55f0-49d0-9262-ccc0e896750b"
STEP: waiting for annotated pod running
STEP: deleting the pod gracefully
Nov  8 13:30:16.959: INFO: Deleting pod "var-expansion-f9dcff04-55f0-49d0-9262-ccc0e896750b" in namespace "var-expansion-6984"
Nov  8 13:30:16.967: INFO: Wait up to 5m0s for pod "var-expansion-f9dcff04-55f0-49d0-9262-ccc0e896750b" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Nov  8 13:30:49.045: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-6984" for this suite.

â€¢ [SLOW TEST:35.492 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]","total":356,"completed":283,"skipped":5345,"failed":0}
S
------------------------------
[sig-apps] ReplicaSet 
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:30:49.066: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-442
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:30:49.245: INFO: Pod name sample-pod: Found 0 pods out of 1
Nov  8 13:30:54.325: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Scaling up "test-rs" replicaset 
Nov  8 13:30:54.337: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet
Nov  8 13:30:54.350: INFO: observed ReplicaSet test-rs in namespace replicaset-442 with ReadyReplicas 1, AvailableReplicas 1
Nov  8 13:30:54.360: INFO: observed ReplicaSet test-rs in namespace replicaset-442 with ReadyReplicas 1, AvailableReplicas 1
Nov  8 13:30:54.384: INFO: observed ReplicaSet test-rs in namespace replicaset-442 with ReadyReplicas 1, AvailableReplicas 1
Nov  8 13:30:54.387: INFO: observed ReplicaSet test-rs in namespace replicaset-442 with ReadyReplicas 1, AvailableReplicas 1
Nov  8 13:30:55.461: INFO: observed ReplicaSet test-rs in namespace replicaset-442 with ReadyReplicas 2, AvailableReplicas 2
Nov  8 13:30:55.933: INFO: observed Replicaset test-rs in namespace replicaset-442 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Nov  8 13:30:55.933: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-442" for this suite.

â€¢ [SLOW TEST:6.887 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replace and Patch tests [Conformance]","total":356,"completed":284,"skipped":5346,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe 
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:30:55.954: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3496
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:30:56.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3496 create -f -'
Nov  8 13:30:56.645: INFO: stderr: ""
Nov  8 13:30:56.645: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Nov  8 13:30:56.645: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3496 create -f -'
Nov  8 13:30:56.863: INFO: stderr: ""
Nov  8 13:30:56.863: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Nov  8 13:30:57.872: INFO: Selector matched 1 pods for map[app:agnhost]
Nov  8 13:30:57.872: INFO: Found 0 / 1
Nov  8 13:30:58.873: INFO: Selector matched 1 pods for map[app:agnhost]
Nov  8 13:30:58.873: INFO: Found 1 / 1
Nov  8 13:30:58.873: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Nov  8 13:30:58.878: INFO: Selector matched 1 pods for map[app:agnhost]
Nov  8 13:30:58.878: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Nov  8 13:30:58.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3496 describe pod agnhost-primary-cjwbw'
Nov  8 13:30:58.952: INFO: stderr: ""
Nov  8 13:30:58.952: INFO: stdout: "Name:         agnhost-primary-cjwbw\nNamespace:    kubectl-3496\nPriority:     0\nNode:         shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt/10.250.0.101\nStart Time:   Tue, 08 Nov 2022 13:30:56 +0000\nLabels:       app=agnhost\n              role=primary\nAnnotations:  kubernetes.io/psp: e2e-test-privileged-psp\nStatus:       Running\nIP:           10.96.5.100\nIPs:\n  IP:           10.96.5.100\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://068e0c3f2c743df680ec3bc994df37cb8ca38ad621fe353e3bcd9c54c1efdb07\n    Image:          k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Image ID:       k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 08 Nov 2022 13:30:57 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:\n      KUBERNETES_SERVICE_HOST:  api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-8zlh4 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-8zlh4:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-3496/agnhost-primary-cjwbw to shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt\n  Normal  Pulled     1s    kubelet            Container image \"k8s.gcr.io/e2e-test-images/agnhost:2.39\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
Nov  8 13:30:58.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3496 describe rc agnhost-primary'
Nov  8 13:30:59.028: INFO: stderr: ""
Nov  8 13:30:59.028: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3496\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-cjwbw\n"
Nov  8 13:30:59.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3496 describe service agnhost-primary'
Nov  8 13:30:59.108: INFO: stderr: ""
Nov  8 13:30:59.108: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-3496\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.115.41.178\nIPs:               10.115.41.178\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.96.5.100:6379\nSession Affinity:  None\nEvents:            <none>\n"
Nov  8 13:30:59.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3496 describe node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm'
Nov  8 13:30:59.264: INFO: stderr: ""
Nov  8 13:30:59.264: INFO: stdout: "Name:               shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=7059a9b4-56eb-41ce-8baf-3586edc65a12\n                    beta.kubernetes.io/os=linux\n                    failure-domain.beta.kubernetes.io/region=prod1\n                    failure-domain.beta.kubernetes.io/zone=az1\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm\n                    kubernetes.io/os=linux\n                    networking.gardener.cloud/node-local-dns-enabled=false\n                    node.kubernetes.io/instance-type=7059a9b4-56eb-41ce-8baf-3586edc65a12\n                    node.kubernetes.io/role=node\n                    topology.cinder.csi.openstack.org/zone=az1\n                    topology.kubernetes.io/region=prod1\n                    topology.kubernetes.io/zone=az1\n                    worker.garden.sapcloud.io/group=worker-als7z\n                    worker.gardener.cloud/cri-name=containerd\n                    worker.gardener.cloud/kubernetes-version=1.24.7\n                    worker.gardener.cloud/pool=worker-als7z\n                    worker.gardener.cloud/system-components=true\nAnnotations:        checksum/cloud-config-data: edcda6db95fd45cc9d9bccca175e9cb69eb4324583608d196e0f0e1ec479dcaa\n                    csi.volume.kubernetes.io/nodeid: {\"cinder.csi.openstack.org\":\"96a772c2-c06e-433e-a847-88f5606cb979\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    node.machine.sapcloud.io/last-applied-anno-labels-taints:\n                      {\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"kubernetes.io/arch\":\"amd64\",\"networking.gardener.cloud/node-local-dns-enabled\":\"false\",\"n...\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 08 Nov 2022 12:05:50 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 08 Nov 2022 13:30:53 +0000\nConditions:\n  Type                          Status  LastHeartbeatTime                 LastTransitionTime                Reason                          Message\n  ----                          ------  -----------------                 ------------------                ------                          -------\n  CorruptDockerOverlay2         False   Tue, 08 Nov 2022 13:27:19 +0000   Tue, 08 Nov 2022 12:07:10 +0000   NoCorruptDockerOverlay2         docker overlay2 is functioning properly\n  FrequentUnregisterNetDevice   False   Tue, 08 Nov 2022 13:27:19 +0000   Tue, 08 Nov 2022 12:07:10 +0000   NoFrequentUnregisterNetDevice   node is functioning properly\n  FrequentKubeletRestart        False   Tue, 08 Nov 2022 13:27:19 +0000   Tue, 08 Nov 2022 12:07:10 +0000   NoFrequentKubeletRestart        kubelet is functioning properly\n  FrequentDockerRestart         False   Tue, 08 Nov 2022 13:27:19 +0000   Tue, 08 Nov 2022 12:07:10 +0000   NoFrequentDockerRestart         docker is functioning properly\n  FrequentContainerdRestart     False   Tue, 08 Nov 2022 13:27:19 +0000   Tue, 08 Nov 2022 12:07:10 +0000   NoFrequentContainerdRestart     containerd is functioning properly\n  KernelDeadlock                False   Tue, 08 Nov 2022 13:27:19 +0000   Tue, 08 Nov 2022 12:07:10 +0000   KernelHasNoDeadlock             kernel has no deadlock\n  ReadonlyFilesystem            False   Tue, 08 Nov 2022 13:27:19 +0000   Tue, 08 Nov 2022 12:07:10 +0000   FilesystemIsNotReadOnly         Filesystem is not read-only\n  NetworkUnavailable            False   Tue, 08 Nov 2022 12:07:00 +0000   Tue, 08 Nov 2022 12:07:00 +0000   CiliumIsUp                      Cilium is running on this node\n  MemoryPressure                False   Tue, 08 Nov 2022 13:30:54 +0000   Tue, 08 Nov 2022 12:05:50 +0000   KubeletHasSufficientMemory      kubelet has sufficient memory available\n  DiskPressure                  False   Tue, 08 Nov 2022 13:30:54 +0000   Tue, 08 Nov 2022 12:05:50 +0000   KubeletHasNoDiskPressure        kubelet has no disk pressure\n  PIDPressure                   False   Tue, 08 Nov 2022 13:30:54 +0000   Tue, 08 Nov 2022 12:05:50 +0000   KubeletHasSufficientPID         kubelet has sufficient PID available\n  Ready                         True    Tue, 08 Nov 2022 13:30:54 +0000   Tue, 08 Nov 2022 12:06:51 +0000   KubeletReady                    kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  10.250.3.16\n  Hostname:    shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      50620216Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 4018140Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    1920m\n  ephemeral-storage:      49243346087\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 2867164Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 96a772c2c06e433ea84788f5606cb979\n  System UUID:                96a772c2-c06e-433e-a847-88f5606cb979\n  Boot ID:                    4c553f17-4006-463e-9d05-572d65aca7a3\n  Kernel Version:             5.15.0-52-generic\n  OS Image:                   Ubuntu 22.04.1 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.5.9-0ubuntu3\n  Kubelet Version:            v1.24.7\n  Kube-Proxy Version:         v1.24.7\nPodCIDR:                      10.96.3.0/24\nPodCIDRs:                     10.96.3.0/24\nProviderID:                   openstack:///96a772c2-c06e-433e-a847-88f5606cb979\nNon-terminated Pods:          (7 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 apiserver-proxy-b2tpk                                      40m (2%)      0 (0%)      40Mi (1%)        1114Mi (39%)   85m\n  kube-system                 cilium-c6w8t                                               100m (5%)     0 (0%)      200Mi (7%)       1Gi (36%)      85m\n  kube-system                 csi-driver-node-qgnwd                                      37m (1%)      0 (0%)      106Mi (3%)       3272Mi (116%)  85m\n  kube-system                 kube-proxy-worker-als7z-v1.24.7-d8gkj                      20m (1%)      0 (0%)      64Mi (2%)        0 (0%)         85m\n  kube-system                 node-exporter-4ff28                                        50m (2%)      0 (0%)      50Mi (1%)        250Mi (8%)     85m\n  kube-system                 node-problem-detector-v668n                                20m (1%)      0 (0%)      20Mi (0%)        500Mi (17%)    85m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-f020433f47884871-5ppr7    0 (0%)        0 (0%)      0 (0%)           0 (0%)         79m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests     Limits\n  --------               --------     ------\n  cpu                    267m (13%)   0 (0%)\n  memory                 480Mi (17%)  6160Mi (220%)\n  ephemeral-storage      0 (0%)       0 (0%)\n  hugepages-1Gi          0 (0%)       0 (0%)\n  hugepages-2Mi          0 (0%)       0 (0%)\n  scheduling.k8s.io/foo  0            0\nEvents:                  <none>\n"
Nov  8 13:30:59.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-3496 describe namespace kubectl-3496'
Nov  8 13:30:59.337: INFO: stderr: ""
Nov  8 13:30:59.337: INFO: stdout: "Name:         kubectl-3496\nLabels:       e2e-framework=kubectl\n              e2e-run=271a9262-9e70-4f05-a237-4c0cd6fb35b6\n              kubernetes.io/metadata.name=kubectl-3496\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 13:30:59.337: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3496" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]","total":356,"completed":285,"skipped":5389,"failed":0}
SSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:30:59.357: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6145
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-05cbdd16-90e6-4f46-b2a4-b5c77791bf45
STEP: Creating a pod to test consume configMaps
Nov  8 13:30:59.521: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-9748df35-125d-4eca-b088-42f8af2a6fb7" in namespace "projected-6145" to be "Succeeded or Failed"
Nov  8 13:30:59.529: INFO: Pod "pod-projected-configmaps-9748df35-125d-4eca-b088-42f8af2a6fb7": Phase="Pending", Reason="", readiness=false. Elapsed: 8.319914ms
Nov  8 13:31:01.538: INFO: Pod "pod-projected-configmaps-9748df35-125d-4eca-b088-42f8af2a6fb7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016371898s
Nov  8 13:31:03.546: INFO: Pod "pod-projected-configmaps-9748df35-125d-4eca-b088-42f8af2a6fb7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025324827s
STEP: Saw pod success
Nov  8 13:31:03.546: INFO: Pod "pod-projected-configmaps-9748df35-125d-4eca-b088-42f8af2a6fb7" satisfied condition "Succeeded or Failed"
Nov  8 13:31:03.551: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-lrvzp pod pod-projected-configmaps-9748df35-125d-4eca-b088-42f8af2a6fb7 container agnhost-container: <nil>
STEP: delete the pod
Nov  8 13:31:03.682: INFO: Waiting for pod pod-projected-configmaps-9748df35-125d-4eca-b088-42f8af2a6fb7 to disappear
Nov  8 13:31:03.686: INFO: Pod pod-projected-configmaps-9748df35-125d-4eca-b088-42f8af2a6fb7 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Nov  8 13:31:03.687: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6145" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":286,"skipped":5392,"failed":0}
SSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:31:03.707: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8067
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8067.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-8067.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8067.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8067.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Nov  8 13:31:12.100: INFO: DNS probes using dns-8067/dns-test-0d29febd-aeff-4fb2-bb24-41546547d0e9 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Nov  8 13:31:12.128: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8067" for this suite.

â€¢ [SLOW TEST:8.439 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Hostname [Conformance]","total":356,"completed":287,"skipped":5395,"failed":0}
SS
------------------------------
[sig-api-machinery] Servers with support for Table transformation 
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:31:12.146: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename tables
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in tables-4136
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:188
Nov  8 13:31:12.295: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "tables-4136" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]","total":356,"completed":288,"skipped":5397,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:31:12.311: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2237
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating pod
Nov  8 13:31:12.470: INFO: The status of Pod pod-hostip-c56b3830-8165-4d26-95cc-8ca545a24368 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:31:14.481: INFO: The status of Pod pod-hostip-c56b3830-8165-4d26-95cc-8ca545a24368 is Running (Ready = true)
Nov  8 13:31:14.491: INFO: Pod pod-hostip-c56b3830-8165-4d26-95cc-8ca545a24368 has hostIP: 10.250.0.101
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Nov  8 13:31:14.491: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2237" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should get a host IP [NodeConformance] [Conformance]","total":356,"completed":289,"skipped":5411,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:31:14.510: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-9414
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Nov  8 13:31:14.665: INFO: Waiting up to 1m0s for all nodes to be ready
Nov  8 13:32:14.771: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Nov  8 13:32:14.803: INFO: Created pod: pod0-0-sched-preemption-low-priority
Nov  8 13:32:14.824: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Nov  8 13:32:14.914: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Nov  8 13:32:14.930: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Nov  8 13:32:14.959: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Nov  8 13:32:14.970: INFO: Created pod: pod2-1-sched-preemption-medium-priority
Nov  8 13:32:15.024: INFO: Created pod: pod3-0-sched-preemption-medium-priority
Nov  8 13:32:15.034: INFO: Created pod: pod3-1-sched-preemption-medium-priority
Nov  8 13:32:15.064: INFO: Created pod: pod4-0-sched-preemption-medium-priority
Nov  8 13:32:15.075: INFO: Created pod: pod4-1-sched-preemption-medium-priority
Nov  8 13:32:15.103: INFO: Created pod: pod5-0-sched-preemption-medium-priority
Nov  8 13:32:15.118: INFO: Created pod: pod5-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a high priority pod that has same requirements as that of lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Nov  8 13:32:23.349: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-9414" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

â€¢ [SLOW TEST:68.993 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]","total":356,"completed":290,"skipped":5436,"failed":0}
[sig-network] HostPort 
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:32:23.503: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename hostport
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in hostport-8688
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled
Nov  8 13:32:23.678: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:32:25.688: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.250.0.101 on the node which pod1 resides and expect scheduled
Nov  8 13:32:25.705: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:32:27.718: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.250.0.101 but use UDP protocol on the node which pod2 resides
Nov  8 13:32:27.736: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:32:29.748: INFO: The status of Pod pod3 is Running (Ready = true)
Nov  8 13:32:29.764: INFO: The status of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:32:31.775: INFO: The status of Pod e2e-host-exec is Running (Ready = true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323
Nov  8 13:32:31.781: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.250.0.101 http://127.0.0.1:54323/hostname] Namespace:hostport-8688 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:32:31.781: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:32:31.781: INFO: ExecWithOptions: Clientset creation
Nov  8 13:32:31.781: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/hostport-8688/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.250.0.101+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.250.0.101, port: 54323
Nov  8 13:32:32.114: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.250.0.101:54323/hostname] Namespace:hostport-8688 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:32:32.114: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:32:32.115: INFO: ExecWithOptions: Clientset creation
Nov  8 13:32:32.115: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/hostport-8688/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.250.0.101%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.250.0.101, port: 54323 UDP
Nov  8 13:32:32.494: INFO: ExecWithOptions {Command:[/bin/sh -c nc -vuz -w 5 10.250.0.101 54323] Namespace:hostport-8688 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:32:32.494: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:32:32.495: INFO: ExecWithOptions: Clientset creation
Nov  8 13:32:32.495: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/hostport-8688/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=nc+-vuz+-w+5+10.250.0.101+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/framework.go:188
Nov  8 13:32:37.884: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "hostport-8688" for this suite.

â€¢ [SLOW TEST:14.412 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]","total":356,"completed":291,"skipped":5436,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:32:37.915: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-2729
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with a certain label
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: changing the label value of the configmap
STEP: Expecting to observe a delete notification for the watched object
Nov  8 13:32:38.084: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2729  2ba84abd-5a18-4822-9cb4-caa0c16bb769 44698 0 2022-11-08 13:32:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-11-08 13:32:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Nov  8 13:32:38.085: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2729  2ba84abd-5a18-4822-9cb4-caa0c16bb769 44699 0 2022-11-08 13:32:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-11-08 13:32:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Nov  8 13:32:38.085: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2729  2ba84abd-5a18-4822-9cb4-caa0c16bb769 44700 0 2022-11-08 13:32:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-11-08 13:32:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements
STEP: changing the label value of the configmap back
STEP: modifying the configmap a third time
STEP: deleting the configmap
STEP: Expecting to observe an add notification for the watched object when the label value was restored
Nov  8 13:32:48.128: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2729  2ba84abd-5a18-4822-9cb4-caa0c16bb769 44776 0 2022-11-08 13:32:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-11-08 13:32:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Nov  8 13:32:48.128: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2729  2ba84abd-5a18-4822-9cb4-caa0c16bb769 44777 0 2022-11-08 13:32:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-11-08 13:32:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Nov  8 13:32:48.128: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2729  2ba84abd-5a18-4822-9cb4-caa0c16bb769 44778 0 2022-11-08 13:32:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-11-08 13:32:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Nov  8 13:32:48.128: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-2729" for this suite.

â€¢ [SLOW TEST:10.230 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]","total":356,"completed":292,"skipped":5449,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:32:48.146: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-8427
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:32:48.292: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 13:32:54.687: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-8427" for this suite.

â€¢ [SLOW TEST:6.560 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]","total":356,"completed":293,"skipped":5470,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:32:54.706: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3755
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap that has name configmap-test-emptyKey-4e7bb995-ed70-4010-a2a5-15c23b19b68d
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 13:32:54.853: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3755" for this suite.
â€¢{"msg":"PASSED [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]","total":356,"completed":294,"skipped":5481,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:32:54.869: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-753
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Nov  8 13:32:55.046: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-753" for this suite.
â€¢{"msg":"PASSED [sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]","total":356,"completed":295,"skipped":5535,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:32:55.064: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3789
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 13:32:55.216: INFO: Waiting up to 5m0s for pod "downwardapi-volume-a1d84445-6233-41bc-935a-a77679af9560" in namespace "projected-3789" to be "Succeeded or Failed"
Nov  8 13:32:55.223: INFO: Pod "downwardapi-volume-a1d84445-6233-41bc-935a-a77679af9560": Phase="Pending", Reason="", readiness=false. Elapsed: 6.759166ms
Nov  8 13:32:57.232: INFO: Pod "downwardapi-volume-a1d84445-6233-41bc-935a-a77679af9560": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015156405s
Nov  8 13:32:59.245: INFO: Pod "downwardapi-volume-a1d84445-6233-41bc-935a-a77679af9560": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028020985s
STEP: Saw pod success
Nov  8 13:32:59.245: INFO: Pod "downwardapi-volume-a1d84445-6233-41bc-935a-a77679af9560" satisfied condition "Succeeded or Failed"
Nov  8 13:32:59.249: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod downwardapi-volume-a1d84445-6233-41bc-935a-a77679af9560 container client-container: <nil>
STEP: delete the pod
Nov  8 13:32:59.346: INFO: Waiting for pod downwardapi-volume-a1d84445-6233-41bc-935a-a77679af9560 to disappear
Nov  8 13:32:59.427: INFO: Pod downwardapi-volume-a1d84445-6233-41bc-935a-a77679af9560 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Nov  8 13:32:59.427: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3789" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":296,"skipped":5545,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] Job 
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:32:59.449: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-8457
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Indexed job
STEP: Ensuring job reaches completions
STEP: Ensuring pods with index for job exist
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Nov  8 13:33:09.618: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-8457" for this suite.

â€¢ [SLOW TEST:10.191 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]","total":356,"completed":297,"skipped":5554,"failed":0}
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:33:09.640: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-5724
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:33:09.782: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 13:33:12.933: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-5724" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]","total":356,"completed":298,"skipped":5555,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:33:12.953: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4860
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 13:33:13.112: INFO: Waiting up to 5m0s for pod "downwardapi-volume-053310b1-0d33-4f95-b6c9-491796b3acbd" in namespace "projected-4860" to be "Succeeded or Failed"
Nov  8 13:33:13.118: INFO: Pod "downwardapi-volume-053310b1-0d33-4f95-b6c9-491796b3acbd": Phase="Pending", Reason="", readiness=false. Elapsed: 6.215112ms
Nov  8 13:33:15.125: INFO: Pod "downwardapi-volume-053310b1-0d33-4f95-b6c9-491796b3acbd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013328341s
Nov  8 13:33:17.137: INFO: Pod "downwardapi-volume-053310b1-0d33-4f95-b6c9-491796b3acbd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024680421s
STEP: Saw pod success
Nov  8 13:33:17.137: INFO: Pod "downwardapi-volume-053310b1-0d33-4f95-b6c9-491796b3acbd" satisfied condition "Succeeded or Failed"
Nov  8 13:33:17.143: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod downwardapi-volume-053310b1-0d33-4f95-b6c9-491796b3acbd container client-container: <nil>
STEP: delete the pod
Nov  8 13:33:17.170: INFO: Waiting for pod downwardapi-volume-053310b1-0d33-4f95-b6c9-491796b3acbd to disappear
Nov  8 13:33:17.176: INFO: Pod downwardapi-volume-053310b1-0d33-4f95-b6c9-491796b3acbd no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Nov  8 13:33:17.176: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4860" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":299,"skipped":5591,"failed":0}
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:33:17.196: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3266
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 13:33:17.349: INFO: Waiting up to 5m0s for pod "downwardapi-volume-a2189ad6-a9ff-4d28-857e-8d476f26a46d" in namespace "projected-3266" to be "Succeeded or Failed"
Nov  8 13:33:17.355: INFO: Pod "downwardapi-volume-a2189ad6-a9ff-4d28-857e-8d476f26a46d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.437387ms
Nov  8 13:33:19.370: INFO: Pod "downwardapi-volume-a2189ad6-a9ff-4d28-857e-8d476f26a46d": Phase="Running", Reason="", readiness=false. Elapsed: 2.021101024s
Nov  8 13:33:21.383: INFO: Pod "downwardapi-volume-a2189ad6-a9ff-4d28-857e-8d476f26a46d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033634685s
STEP: Saw pod success
Nov  8 13:33:21.383: INFO: Pod "downwardapi-volume-a2189ad6-a9ff-4d28-857e-8d476f26a46d" satisfied condition "Succeeded or Failed"
Nov  8 13:33:21.388: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod downwardapi-volume-a2189ad6-a9ff-4d28-857e-8d476f26a46d container client-container: <nil>
STEP: delete the pod
Nov  8 13:33:21.416: INFO: Waiting for pod downwardapi-volume-a2189ad6-a9ff-4d28-857e-8d476f26a46d to disappear
Nov  8 13:33:21.421: INFO: Pod downwardapi-volume-a2189ad6-a9ff-4d28-857e-8d476f26a46d no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Nov  8 13:33:21.421: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3266" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":300,"skipped":5597,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:33:21.442: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-3957
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs
STEP: Gathering metrics
W1108 13:33:22.294224      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Nov  8 13:33:22.294: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Nov  8 13:33:22.294: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-3957" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]","total":356,"completed":301,"skipped":5643,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:33:22.314: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7470
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-7470
Nov  8 13:33:22.467: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:33:24.475: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Nov  8 13:33:24.480: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7470 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Nov  8 13:33:24.810: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Nov  8 13:33:24.810: INFO: stdout: "iptables"
Nov  8 13:33:24.810: INFO: proxyMode: iptables
Nov  8 13:33:24.825: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Nov  8 13:33:24.830: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-clusterip-timeout in namespace services-7470
STEP: creating replication controller affinity-clusterip-timeout in namespace services-7470
I1108 13:33:24.856015      22 runners.go:193] Created replication controller with name: affinity-clusterip-timeout, namespace: services-7470, replica count: 3
I1108 13:33:27.908140      22 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Nov  8 13:33:27.965: INFO: Creating new exec pod
Nov  8 13:33:31.011: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7470 exec execpod-affinity7r4ql -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-timeout 80'
Nov  8 13:33:31.413: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-timeout 80\nConnection to affinity-clusterip-timeout 80 port [tcp/http] succeeded!\n"
Nov  8 13:33:31.413: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 13:33:31.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7470 exec execpod-affinity7r4ql -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.124.98.10 80'
Nov  8 13:33:31.805: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.124.98.10 80\nConnection to 10.124.98.10 80 port [tcp/http] succeeded!\n"
Nov  8 13:33:31.806: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 13:33:31.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7470 exec execpod-affinity7r4ql -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.124.98.10:80/ ; done'
Nov  8 13:33:32.235: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n"
Nov  8 13:33:32.235: INFO: stdout: "\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd\naffinity-clusterip-timeout-rklfd"
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Received response from host: affinity-clusterip-timeout-rklfd
Nov  8 13:33:32.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7470 exec execpod-affinity7r4ql -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.124.98.10:80/'
Nov  8 13:33:32.621: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n"
Nov  8 13:33:32.621: INFO: stdout: "affinity-clusterip-timeout-rklfd"
Nov  8 13:33:52.622: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7470 exec execpod-affinity7r4ql -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.124.98.10:80/'
Nov  8 13:33:52.929: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n"
Nov  8 13:33:52.929: INFO: stdout: "affinity-clusterip-timeout-rklfd"
Nov  8 13:34:12.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-7470 exec execpod-affinity7r4ql -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.124.98.10:80/'
Nov  8 13:34:13.269: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.124.98.10:80/\n"
Nov  8 13:34:13.269: INFO: stdout: "affinity-clusterip-timeout-s56px"
Nov  8 13:34:13.269: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-timeout in namespace services-7470, will wait for the garbage collector to delete the pods
Nov  8 13:34:13.346: INFO: Deleting ReplicationController affinity-clusterip-timeout took: 6.2082ms
Nov  8 13:34:13.447: INFO: Terminating ReplicationController affinity-clusterip-timeout pods took: 100.938721ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 13:34:15.466: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7470" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:53.167 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":302,"skipped":5646,"failed":0}
S
------------------------------
[sig-apps] Daemon set [Serial] 
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:34:15.481: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-4866
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Nov  8 13:34:15.706: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:34:15.706: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 13:34:16.727: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:34:16.727: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-6dsvm is running 0 daemon pod, expected 1
Nov  8 13:34:17.730: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
Nov  8 13:34:17.730: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived.
Nov  8 13:34:17.772: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Nov  8 13:34:17.772: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z is running 0 daemon pod, expected 1
Nov  8 13:34:18.792: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Nov  8 13:34:18.792: INFO: Node shoot--kd500770--k8s-cncf-conf-worker-als7z-z1-97459-gn45z is running 0 daemon pod, expected 1
Nov  8 13:34:19.792: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
Nov  8 13:34:19.792: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted.
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4866, will wait for the garbage collector to delete the pods
Nov  8 13:34:19.864: INFO: Deleting DaemonSet.extensions daemon-set took: 6.53047ms
Nov  8 13:34:19.965: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.775678ms
Nov  8 13:34:22.477: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Nov  8 13:34:22.477: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Nov  8 13:34:22.482: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45710"},"items":null}

Nov  8 13:34:22.486: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45710"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Nov  8 13:34:22.530: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-4866" for this suite.

â€¢ [SLOW TEST:7.072 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]","total":356,"completed":303,"skipped":5647,"failed":0}
[sig-storage] EmptyDir volumes 
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:34:22.553: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8405
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Nov  8 13:34:22.707: INFO: Waiting up to 5m0s for pod "pod-e9bdb8dd-d192-49e7-a1c0-5fec90da733d" in namespace "emptydir-8405" to be "Succeeded or Failed"
Nov  8 13:34:22.714: INFO: Pod "pod-e9bdb8dd-d192-49e7-a1c0-5fec90da733d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.15406ms
Nov  8 13:34:24.723: INFO: Pod "pod-e9bdb8dd-d192-49e7-a1c0-5fec90da733d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015880293s
Nov  8 13:34:26.736: INFO: Pod "pod-e9bdb8dd-d192-49e7-a1c0-5fec90da733d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02845957s
STEP: Saw pod success
Nov  8 13:34:26.736: INFO: Pod "pod-e9bdb8dd-d192-49e7-a1c0-5fec90da733d" satisfied condition "Succeeded or Failed"
Nov  8 13:34:26.741: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod pod-e9bdb8dd-d192-49e7-a1c0-5fec90da733d container test-container: <nil>
STEP: delete the pod
Nov  8 13:34:26.764: INFO: Waiting for pod pod-e9bdb8dd-d192-49e7-a1c0-5fec90da733d to disappear
Nov  8 13:34:26.769: INFO: Pod pod-e9bdb8dd-d192-49e7-a1c0-5fec90da733d no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 13:34:26.769: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8405" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":304,"skipped":5647,"failed":0}
SSSS
------------------------------
[sig-apps] CronJob 
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:34:26.786: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-7723
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: Ensuring more than one job is running at a time
STEP: Ensuring at least two running jobs exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Nov  8 13:36:00.957: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-7723" for this suite.

â€¢ [SLOW TEST:94.192 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]","total":356,"completed":305,"skipped":5651,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:36:00.979: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-4714
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for all rs to be garbage collected
STEP: expected 0 pods, got 2 pods
STEP: Gathering metrics
Nov  8 13:36:02.207: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W1108 13:36:02.207702      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Nov  8 13:36:02.207: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-4714" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]","total":356,"completed":306,"skipped":5674,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:36:02.228: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6010
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-764b6ecc-2803-48c2-8e49-f9f61a264dca
STEP: Creating a pod to test consume configMaps
Nov  8 13:36:02.397: INFO: Waiting up to 5m0s for pod "pod-configmaps-eddfe372-4d2b-4c5c-8f94-d9800cec984c" in namespace "configmap-6010" to be "Succeeded or Failed"
Nov  8 13:36:02.403: INFO: Pod "pod-configmaps-eddfe372-4d2b-4c5c-8f94-d9800cec984c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.268622ms
Nov  8 13:36:04.416: INFO: Pod "pod-configmaps-eddfe372-4d2b-4c5c-8f94-d9800cec984c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018827185s
Nov  8 13:36:06.426: INFO: Pod "pod-configmaps-eddfe372-4d2b-4c5c-8f94-d9800cec984c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028787407s
STEP: Saw pod success
Nov  8 13:36:06.426: INFO: Pod "pod-configmaps-eddfe372-4d2b-4c5c-8f94-d9800cec984c" satisfied condition "Succeeded or Failed"
Nov  8 13:36:06.430: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod pod-configmaps-eddfe372-4d2b-4c5c-8f94-d9800cec984c container agnhost-container: <nil>
STEP: delete the pod
Nov  8 13:36:06.560: INFO: Waiting for pod pod-configmaps-eddfe372-4d2b-4c5c-8f94-d9800cec984c to disappear
Nov  8 13:36:06.565: INFO: Pod pod-configmaps-eddfe372-4d2b-4c5c-8f94-d9800cec984c no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 13:36:06.565: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6010" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":307,"skipped":5685,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod 
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:36:06.582: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5686
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1540
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Nov  8 13:36:06.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-5686 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2'
Nov  8 13:36:06.793: INFO: stderr: ""
Nov  8 13:36:06.793: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1544
Nov  8 13:36:06.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-5686 delete pods e2e-test-httpd-pod'
Nov  8 13:36:09.626: INFO: stderr: ""
Nov  8 13:36:09.626: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 13:36:09.626: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5686" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]","total":356,"completed":308,"skipped":5706,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] 
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:36:09.648: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename taint-single-pod
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-single-pod-2173
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:166
Nov  8 13:36:09.797: INFO: Waiting up to 1m0s for all nodes to be ready
Nov  8 13:37:09.878: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:37:09.883: INFO: Starting informer...
STEP: Starting pod...
Nov  8 13:37:10.107: INFO: Pod is running on shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-lrvzp. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting short time to make sure Pod is queued for deletion
Nov  8 13:37:10.139: INFO: Pod wasn't evicted. Proceeding
Nov  8 13:37:10.139: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting some time to make sure that toleration time passed.
Nov  8 13:38:25.170: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:188
Nov  8 13:38:25.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-single-pod-2173" for this suite.

â€¢ [SLOW TEST:135.555 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]","total":356,"completed":309,"skipped":5778,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:38:25.202: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2023
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:38:25.346: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties
Nov  8 13:38:29.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 --namespace=crd-publish-openapi-2023 create -f -'
Nov  8 13:38:30.421: INFO: stderr: ""
Nov  8 13:38:30.421: INFO: stdout: "e2e-test-crd-publish-openapi-8782-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Nov  8 13:38:30.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 --namespace=crd-publish-openapi-2023 delete e2e-test-crd-publish-openapi-8782-crds test-foo'
Nov  8 13:38:30.528: INFO: stderr: ""
Nov  8 13:38:30.528: INFO: stdout: "e2e-test-crd-publish-openapi-8782-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Nov  8 13:38:30.528: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 --namespace=crd-publish-openapi-2023 apply -f -'
Nov  8 13:38:31.161: INFO: stderr: ""
Nov  8 13:38:31.161: INFO: stdout: "e2e-test-crd-publish-openapi-8782-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Nov  8 13:38:31.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 --namespace=crd-publish-openapi-2023 delete e2e-test-crd-publish-openapi-8782-crds test-foo'
Nov  8 13:38:31.234: INFO: stderr: ""
Nov  8 13:38:31.234: INFO: stdout: "e2e-test-crd-publish-openapi-8782-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values
Nov  8 13:38:31.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 --namespace=crd-publish-openapi-2023 create -f -'
Nov  8 13:38:31.404: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema
Nov  8 13:38:31.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 --namespace=crd-publish-openapi-2023 create -f -'
Nov  8 13:38:31.556: INFO: rc: 1
Nov  8 13:38:31.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 --namespace=crd-publish-openapi-2023 apply -f -'
Nov  8 13:38:31.708: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties
Nov  8 13:38:31.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 --namespace=crd-publish-openapi-2023 create -f -'
Nov  8 13:38:31.869: INFO: rc: 1
Nov  8 13:38:31.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 --namespace=crd-publish-openapi-2023 apply -f -'
Nov  8 13:38:32.022: INFO: rc: 1
STEP: kubectl explain works to explain CR properties
Nov  8 13:38:32.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 explain e2e-test-crd-publish-openapi-8782-crds'
Nov  8 13:38:32.182: INFO: stderr: ""
Nov  8 13:38:32.182: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-8782-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively
Nov  8 13:38:32.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 explain e2e-test-crd-publish-openapi-8782-crds.metadata'
Nov  8 13:38:32.330: INFO: stderr: ""
Nov  8 13:38:32.330: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-8782-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   clusterName\t<string>\n     Deprecated: ClusterName is a legacy field that was always cleared by the\n     system and never used; it will be removed completely in 1.25.\n\n     The name in the go struct is changed to help clients detect accidental use.\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Nov  8 13:38:32.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 explain e2e-test-crd-publish-openapi-8782-crds.spec'
Nov  8 13:38:32.491: INFO: stderr: ""
Nov  8 13:38:32.491: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-8782-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Nov  8 13:38:32.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 explain e2e-test-crd-publish-openapi-8782-crds.spec.bars'
Nov  8 13:38:32.648: INFO: stderr: ""
Nov  8 13:38:32.648: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-8782-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist
Nov  8 13:38:32.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=crd-publish-openapi-2023 explain e2e-test-crd-publish-openapi-8782-crds.spec.bars2'
Nov  8 13:38:32.804: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 13:38:35.299: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2023" for this suite.

â€¢ [SLOW TEST:10.129 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]","total":356,"completed":310,"skipped":5787,"failed":0}
[sig-apps] ReplicaSet 
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:38:35.333: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-9888
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a Replicaset
STEP: Verify that the required pods have come up.
Nov  8 13:38:35.493: INFO: Pod name sample-pod: Found 0 pods out of 1
Nov  8 13:38:40.506: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Getting /status
Nov  8 13:38:40.512: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status
Nov  8 13:38:40.529: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated
Nov  8 13:38:40.542: INFO: Observed &ReplicaSet event: ADDED
Nov  8 13:38:40.542: INFO: Observed &ReplicaSet event: MODIFIED
Nov  8 13:38:40.542: INFO: Observed &ReplicaSet event: MODIFIED
Nov  8 13:38:40.542: INFO: Observed &ReplicaSet event: MODIFIED
Nov  8 13:38:40.542: INFO: Found replicaset test-rs in namespace replicaset-9888 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Nov  8 13:38:40.542: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status
Nov  8 13:38:40.542: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Nov  8 13:38:40.550: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched
Nov  8 13:38:40.554: INFO: Observed &ReplicaSet event: ADDED
Nov  8 13:38:40.554: INFO: Observed &ReplicaSet event: MODIFIED
Nov  8 13:38:40.554: INFO: Observed &ReplicaSet event: MODIFIED
Nov  8 13:38:40.555: INFO: Observed &ReplicaSet event: MODIFIED
Nov  8 13:38:40.555: INFO: Observed replicaset test-rs in namespace replicaset-9888 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Nov  8 13:38:40.555: INFO: Observed &ReplicaSet event: MODIFIED
Nov  8 13:38:40.555: INFO: Found replicaset test-rs in namespace replicaset-9888 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Nov  8 13:38:40.555: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Nov  8 13:38:40.555: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-9888" for this suite.

â€¢ [SLOW TEST:5.252 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]","total":356,"completed":311,"skipped":5787,"failed":0}
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:38:40.585: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8142
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 13:38:41.312: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 13:38:44.345: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API
STEP: create a namespace for the webhook
STEP: create a configmap should be unconditionally rejected by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 13:38:44.494: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8142" for this suite.
STEP: Destroying namespace "webhook-8142-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]","total":356,"completed":312,"skipped":5791,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts 
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:38:44.555: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-kubelet-etc-hosts-3239
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting up the test
STEP: Creating hostNetwork=false pod
Nov  8 13:38:44.727: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:38:46.739: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:38:48.740: INFO: The status of Pod test-pod is Running (Ready = true)
STEP: Creating hostNetwork=true pod
Nov  8 13:38:48.763: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:38:50.774: INFO: The status of Pod test-host-network-pod is Running (Ready = true)
STEP: Running the test
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false
Nov  8 13:38:50.780: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3239 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:38:50.780: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:38:50.781: INFO: ExecWithOptions: Clientset creation
Nov  8 13:38:50.781: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3239/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Nov  8 13:38:51.120: INFO: Exec stderr: ""
Nov  8 13:38:51.120: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3239 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:38:51.120: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:38:51.121: INFO: ExecWithOptions: Clientset creation
Nov  8 13:38:51.121: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3239/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Nov  8 13:38:51.348: INFO: Exec stderr: ""
Nov  8 13:38:51.349: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3239 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:38:51.349: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:38:51.349: INFO: ExecWithOptions: Clientset creation
Nov  8 13:38:51.350: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3239/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Nov  8 13:38:51.699: INFO: Exec stderr: ""
Nov  8 13:38:51.699: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3239 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:38:51.699: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:38:51.701: INFO: ExecWithOptions: Clientset creation
Nov  8 13:38:51.701: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3239/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Nov  8 13:38:52.080: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount
Nov  8 13:38:52.080: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3239 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:38:52.081: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:38:52.081: INFO: ExecWithOptions: Clientset creation
Nov  8 13:38:52.081: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3239/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Nov  8 13:38:52.436: INFO: Exec stderr: ""
Nov  8 13:38:52.436: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3239 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:38:52.436: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:38:52.437: INFO: ExecWithOptions: Clientset creation
Nov  8 13:38:52.437: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3239/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Nov  8 13:38:52.754: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true
Nov  8 13:38:52.754: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3239 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:38:52.754: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:38:52.754: INFO: ExecWithOptions: Clientset creation
Nov  8 13:38:52.754: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3239/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Nov  8 13:38:53.136: INFO: Exec stderr: ""
Nov  8 13:38:53.136: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3239 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:38:53.136: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:38:53.136: INFO: ExecWithOptions: Clientset creation
Nov  8 13:38:53.136: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3239/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Nov  8 13:38:53.461: INFO: Exec stderr: ""
Nov  8 13:38:53.461: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3239 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:38:53.461: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:38:53.462: INFO: ExecWithOptions: Clientset creation
Nov  8 13:38:53.462: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3239/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Nov  8 13:38:53.894: INFO: Exec stderr: ""
Nov  8 13:38:53.894: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3239 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:38:53.894: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:38:53.895: INFO: ExecWithOptions: Clientset creation
Nov  8 13:38:53.895: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3239/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Nov  8 13:38:54.275: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:188
Nov  8 13:38:54.275: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "e2e-kubelet-etc-hosts-3239" for this suite.

â€¢ [SLOW TEST:9.750 seconds]
[sig-node] KubeletManagedEtcHosts
test/e2e/common/node/framework.go:23
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":313,"skipped":5819,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:38:54.307: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-7151
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:38:54.463: INFO: The status of Pod test-webserver-082c24f9-a407-4edd-9fdb-2d4ba1c15505 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:38:56.475: INFO: The status of Pod test-webserver-082c24f9-a407-4edd-9fdb-2d4ba1c15505 is Running (Ready = false)
Nov  8 13:38:58.476: INFO: The status of Pod test-webserver-082c24f9-a407-4edd-9fdb-2d4ba1c15505 is Running (Ready = false)
Nov  8 13:39:00.474: INFO: The status of Pod test-webserver-082c24f9-a407-4edd-9fdb-2d4ba1c15505 is Running (Ready = false)
Nov  8 13:39:02.476: INFO: The status of Pod test-webserver-082c24f9-a407-4edd-9fdb-2d4ba1c15505 is Running (Ready = false)
Nov  8 13:39:04.474: INFO: The status of Pod test-webserver-082c24f9-a407-4edd-9fdb-2d4ba1c15505 is Running (Ready = false)
Nov  8 13:39:06.472: INFO: The status of Pod test-webserver-082c24f9-a407-4edd-9fdb-2d4ba1c15505 is Running (Ready = false)
Nov  8 13:39:08.474: INFO: The status of Pod test-webserver-082c24f9-a407-4edd-9fdb-2d4ba1c15505 is Running (Ready = false)
Nov  8 13:39:10.475: INFO: The status of Pod test-webserver-082c24f9-a407-4edd-9fdb-2d4ba1c15505 is Running (Ready = false)
Nov  8 13:39:12.475: INFO: The status of Pod test-webserver-082c24f9-a407-4edd-9fdb-2d4ba1c15505 is Running (Ready = false)
Nov  8 13:39:14.474: INFO: The status of Pod test-webserver-082c24f9-a407-4edd-9fdb-2d4ba1c15505 is Running (Ready = false)
Nov  8 13:39:16.472: INFO: The status of Pod test-webserver-082c24f9-a407-4edd-9fdb-2d4ba1c15505 is Running (Ready = true)
Nov  8 13:39:16.480: INFO: Container started at 2022-11-08 13:38:55 +0000 UTC, pod became ready at 2022-11-08 13:39:14 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Nov  8 13:39:16.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-7151" for this suite.

â€¢ [SLOW TEST:22.199 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]","total":356,"completed":314,"skipped":5847,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:39:16.506: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3459
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-01b5aa82-1e78-4162-805b-e647074b412d
STEP: Creating a pod to test consume configMaps
Nov  8 13:39:16.669: INFO: Waiting up to 5m0s for pod "pod-configmaps-c0e84a59-9e1b-4a4e-a815-98dc32b24ccc" in namespace "configmap-3459" to be "Succeeded or Failed"
Nov  8 13:39:16.676: INFO: Pod "pod-configmaps-c0e84a59-9e1b-4a4e-a815-98dc32b24ccc": Phase="Pending", Reason="", readiness=false. Elapsed: 7.213037ms
Nov  8 13:39:18.685: INFO: Pod "pod-configmaps-c0e84a59-9e1b-4a4e-a815-98dc32b24ccc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016481293s
Nov  8 13:39:20.695: INFO: Pod "pod-configmaps-c0e84a59-9e1b-4a4e-a815-98dc32b24ccc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02598754s
STEP: Saw pod success
Nov  8 13:39:20.695: INFO: Pod "pod-configmaps-c0e84a59-9e1b-4a4e-a815-98dc32b24ccc" satisfied condition "Succeeded or Failed"
Nov  8 13:39:20.700: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod pod-configmaps-c0e84a59-9e1b-4a4e-a815-98dc32b24ccc container agnhost-container: <nil>
STEP: delete the pod
Nov  8 13:39:20.800: INFO: Waiting for pod pod-configmaps-c0e84a59-9e1b-4a4e-a815-98dc32b24ccc to disappear
Nov  8 13:39:20.804: INFO: Pod pod-configmaps-c0e84a59-9e1b-4a4e-a815-98dc32b24ccc no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 13:39:20.805: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3459" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":315,"skipped":5884,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:39:20.822: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-9785
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:39:23.017: INFO: Deleting pod "var-expansion-89de3818-130d-4526-ae27-d2801a262893" in namespace "var-expansion-9785"
Nov  8 13:39:23.025: INFO: Wait up to 5m0s for pod "var-expansion-89de3818-130d-4526-ae27-d2801a262893" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Nov  8 13:39:25.042: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-9785" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]","total":356,"completed":316,"skipped":5922,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:39:25.066: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8891
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota
STEP: Getting a ResourceQuota
STEP: Updating a ResourceQuota
STEP: Verifying a ResourceQuota was modified
STEP: Deleting a ResourceQuota
STEP: Verifying the deleted ResourceQuota
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Nov  8 13:39:25.248: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8891" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]","total":356,"completed":317,"skipped":5936,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:39:25.270: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-7490
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-l758
STEP: Creating a pod to test atomic-volume-subpath
Nov  8 13:39:25.449: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-l758" in namespace "subpath-7490" to be "Succeeded or Failed"
Nov  8 13:39:25.455: INFO: Pod "pod-subpath-test-configmap-l758": Phase="Pending", Reason="", readiness=false. Elapsed: 5.756985ms
Nov  8 13:39:27.469: INFO: Pod "pod-subpath-test-configmap-l758": Phase="Running", Reason="", readiness=true. Elapsed: 2.01957938s
Nov  8 13:39:29.485: INFO: Pod "pod-subpath-test-configmap-l758": Phase="Running", Reason="", readiness=true. Elapsed: 4.035780934s
Nov  8 13:39:31.497: INFO: Pod "pod-subpath-test-configmap-l758": Phase="Running", Reason="", readiness=true. Elapsed: 6.04746537s
Nov  8 13:39:33.514: INFO: Pod "pod-subpath-test-configmap-l758": Phase="Running", Reason="", readiness=true. Elapsed: 8.064739468s
Nov  8 13:39:35.525: INFO: Pod "pod-subpath-test-configmap-l758": Phase="Running", Reason="", readiness=true. Elapsed: 10.075310585s
Nov  8 13:39:37.537: INFO: Pod "pod-subpath-test-configmap-l758": Phase="Running", Reason="", readiness=true. Elapsed: 12.08775016s
Nov  8 13:39:39.547: INFO: Pod "pod-subpath-test-configmap-l758": Phase="Running", Reason="", readiness=true. Elapsed: 14.097653889s
Nov  8 13:39:41.562: INFO: Pod "pod-subpath-test-configmap-l758": Phase="Running", Reason="", readiness=true. Elapsed: 16.112455362s
Nov  8 13:39:43.574: INFO: Pod "pod-subpath-test-configmap-l758": Phase="Running", Reason="", readiness=true. Elapsed: 18.124783933s
Nov  8 13:39:45.583: INFO: Pod "pod-subpath-test-configmap-l758": Phase="Running", Reason="", readiness=true. Elapsed: 20.133868431s
Nov  8 13:39:47.594: INFO: Pod "pod-subpath-test-configmap-l758": Phase="Running", Reason="", readiness=false. Elapsed: 22.144921332s
Nov  8 13:39:49.607: INFO: Pod "pod-subpath-test-configmap-l758": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.157953916s
STEP: Saw pod success
Nov  8 13:39:49.607: INFO: Pod "pod-subpath-test-configmap-l758" satisfied condition "Succeeded or Failed"
Nov  8 13:39:49.613: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod pod-subpath-test-configmap-l758 container test-container-subpath-configmap-l758: <nil>
STEP: delete the pod
Nov  8 13:39:49.638: INFO: Waiting for pod pod-subpath-test-configmap-l758 to disappear
Nov  8 13:39:49.642: INFO: Pod pod-subpath-test-configmap-l758 no longer exists
STEP: Deleting pod pod-subpath-test-configmap-l758
Nov  8 13:39:49.642: INFO: Deleting pod "pod-subpath-test-configmap-l758" in namespace "subpath-7490"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Nov  8 13:39:49.647: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-7490" for this suite.

â€¢ [SLOW TEST:24.394 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]","total":356,"completed":318,"skipped":5978,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:39:49.666: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-7694
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-169
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a pod in the namespace
STEP: Waiting for the pod to have running status
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-9737
STEP: Verifying there are no pods in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Nov  8 13:40:03.129: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-7694" for this suite.
STEP: Destroying namespace "nsdeletetest-169" for this suite.
Nov  8 13:40:03.157: INFO: Namespace nsdeletetest-169 was already deleted
STEP: Destroying namespace "nsdeletetest-9737" for this suite.

â€¢ [SLOW TEST:13.499 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]","total":356,"completed":319,"skipped":5999,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:40:03.165: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4478
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 13:40:03.315: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4478" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should provide secure master service  [Conformance]","total":356,"completed":320,"skipped":6015,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:40:03.335: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-2214
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Nov  8 13:40:07.541: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Nov  8 13:40:07.571: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-2214" for this suite.
â€¢{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":321,"skipped":6031,"failed":0}

------------------------------
[sig-apps] CronJob 
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:40:07.589: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-1313
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a suspended cronjob
STEP: Ensuring no jobs are scheduled
STEP: Ensuring no job exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Nov  8 13:45:07.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-1313" for this suite.

â€¢ [SLOW TEST:300.195 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]","total":356,"completed":322,"skipped":6031,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version 
  should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:45:07.785: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5878
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:45:07.925: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-5878 version'
Nov  8 13:45:07.987: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Nov  8 13:45:07.987: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.7\", GitCommit:\"e6f35974b08862a23e7f4aad8e5d7f7f2de26c15\", GitTreeState:\"clean\", BuildDate:\"2022-10-12T10:57:14Z\", GoVersion:\"go1.18.7\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.4\nServer Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.7\", GitCommit:\"e6f35974b08862a23e7f4aad8e5d7f7f2de26c15\", GitTreeState:\"clean\", BuildDate:\"2022-10-12T10:50:21Z\", GoVersion:\"go1.18.7\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 13:45:07.987: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5878" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]","total":356,"completed":323,"skipped":6038,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:45:08.007: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-4531
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ReplaceConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring the job is replaced with a new one
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Nov  8 13:47:00.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-4531" for this suite.

â€¢ [SLOW TEST:112.215 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]","total":356,"completed":324,"skipped":6116,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:47:00.222: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2567
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name projected-secret-test-25943491-5ceb-484c-b062-a448e0560782
STEP: Creating a pod to test consume secrets
Nov  8 13:47:00.392: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-a2deac75-986a-40aa-ad3b-01c2133ebf67" in namespace "projected-2567" to be "Succeeded or Failed"
Nov  8 13:47:00.413: INFO: Pod "pod-projected-secrets-a2deac75-986a-40aa-ad3b-01c2133ebf67": Phase="Pending", Reason="", readiness=false. Elapsed: 20.825177ms
Nov  8 13:47:02.424: INFO: Pod "pod-projected-secrets-a2deac75-986a-40aa-ad3b-01c2133ebf67": Phase="Pending", Reason="", readiness=false. Elapsed: 2.031559129s
Nov  8 13:47:04.437: INFO: Pod "pod-projected-secrets-a2deac75-986a-40aa-ad3b-01c2133ebf67": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.044873993s
STEP: Saw pod success
Nov  8 13:47:04.437: INFO: Pod "pod-projected-secrets-a2deac75-986a-40aa-ad3b-01c2133ebf67" satisfied condition "Succeeded or Failed"
Nov  8 13:47:04.442: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-lrvzp pod pod-projected-secrets-a2deac75-986a-40aa-ad3b-01c2133ebf67 container secret-volume-test: <nil>
STEP: delete the pod
Nov  8 13:47:04.591: INFO: Waiting for pod pod-projected-secrets-a2deac75-986a-40aa-ad3b-01c2133ebf67 to disappear
Nov  8 13:47:04.595: INFO: Pod pod-projected-secrets-a2deac75-986a-40aa-ad3b-01c2133ebf67 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Nov  8 13:47:04.595: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2567" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":325,"skipped":6123,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:47:04.611: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-483
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 13:47:05.258: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 13:47:08.296: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 13:47:08.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-483" for this suite.
STEP: Destroying namespace "webhook-483-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]","total":356,"completed":326,"skipped":6140,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:47:08.666: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-8956
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:47:08.808: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Nov  8 13:47:08.825: INFO: Pod name sample-pod: Found 0 pods out of 1
Nov  8 13:47:13.840: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Nov  8 13:47:13.840: INFO: Creating deployment "test-rolling-update-deployment"
Nov  8 13:47:13.852: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Nov  8 13:47:13.864: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Nov  8 13:47:15.880: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Nov  8 13:47:15.885: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Nov  8 13:47:15.903: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-8956  7c733e58-33ba-4019-ac98-876ffa75d9ca 50403 1 2022-11-08 13:47:13 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] []  [{e2e.test Update apps/v1 2022-11-08 13:47:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 13:47:15 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006a91598 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-11-08 13:47:13 +0000 UTC,LastTransitionTime:2022-11-08 13:47:13 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-67c8f74c6c" has successfully progressed.,LastUpdateTime:2022-11-08 13:47:15 +0000 UTC,LastTransitionTime:2022-11-08 13:47:13 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Nov  8 13:47:15.909: INFO: New ReplicaSet "test-rolling-update-deployment-67c8f74c6c" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c  deployment-8956  8da7977c-a9f2-4638-8ed1-a57a29afca40 50394 1 2022-11-08 13:47:13 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 7c733e58-33ba-4019-ac98-876ffa75d9ca 0xc0039c85f7 0xc0039c85f8}] []  [{kube-controller-manager Update apps/v1 2022-11-08 13:47:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7c733e58-33ba-4019-ac98-876ffa75d9ca\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 13:47:15 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 67c8f74c6c,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0039c8798 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Nov  8 13:47:15.909: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Nov  8 13:47:15.910: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-8956  8af07317-c912-43d0-8e1c-94478e27b785 50402 2 2022-11-08 13:47:08 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 7c733e58-33ba-4019-ac98-876ffa75d9ca 0xc0039c82b7 0xc0039c82b8}] []  [{e2e.test Update apps/v1 2022-11-08 13:47:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 13:47:15 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7c733e58-33ba-4019-ac98-876ffa75d9ca\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-11-08 13:47:15 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0039c83a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Nov  8 13:47:15.915: INFO: Pod "test-rolling-update-deployment-67c8f74c6c-46gtg" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c-46gtg test-rolling-update-deployment-67c8f74c6c- deployment-8956  abe4d227-5665-43be-a563-1a57f632462b 50393 0 2022-11-08 13:47:13 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rolling-update-deployment-67c8f74c6c 8da7977c-a9f2-4638-8ed1-a57a29afca40 0xc0039c8bf7 0xc0039c8bf8}] []  [{kube-controller-manager Update v1 2022-11-08 13:47:13 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8da7977c-a9f2-4638-8ed1-a57a29afca40\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 13:47:15 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.4.21\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gc2v4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gc2v4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-lrvzp,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 13:47:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 13:47:15 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 13:47:15 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 13:47:13 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.0.153,PodIP:10.96.4.21,StartTime:2022-11-08 13:47:13 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-11-08 13:47:14 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://657b4ce6d0767873cbe0b7309fd1487fced5128c55eb034b13a68a3f00feec38,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.4.21,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Nov  8 13:47:15.915: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-8956" for this suite.

â€¢ [SLOW TEST:7.269 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":327,"skipped":6159,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:47:15.937: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-3982
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl
STEP: Watching for error events or started pod
STEP: Waiting for pod completion
STEP: Checking that the pod succeeded
STEP: Getting logs from the pod
STEP: Checking that the sysctl is actually updated
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Nov  8 13:47:20.258: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-3982" for this suite.
â€¢{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":328,"skipped":6213,"failed":0}
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:47:20.278: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-3234
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Nov  8 13:47:20.514: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-3234" for this suite.
â€¢{"msg":"PASSED [sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]","total":356,"completed":329,"skipped":6223,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:47:20.563: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-169
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:47:20.710: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota
STEP: Checking rc "condition-test" has the desired failure condition set
STEP: Scaling down rc "condition-test" to satisfy pod quota
Nov  8 13:47:21.754: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Nov  8 13:47:21.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-169" for this suite.
â€¢{"msg":"PASSED [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]","total":356,"completed":330,"skipped":6268,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:47:21.786: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3203
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Nov  8 13:47:21.977: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3203" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]","total":356,"completed":331,"skipped":6303,"failed":0}
S
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:47:21.994: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4663
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting the proxy server
Nov  8 13:47:22.164: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-4663 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 13:47:22.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4663" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]","total":356,"completed":332,"skipped":6304,"failed":0}
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:47:22.240: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-9538
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-secret-wkqc
STEP: Creating a pod to test atomic-volume-subpath
Nov  8 13:47:22.404: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-wkqc" in namespace "subpath-9538" to be "Succeeded or Failed"
Nov  8 13:47:22.409: INFO: Pod "pod-subpath-test-secret-wkqc": Phase="Pending", Reason="", readiness=false. Elapsed: 5.277505ms
Nov  8 13:47:24.414: INFO: Pod "pod-subpath-test-secret-wkqc": Phase="Running", Reason="", readiness=true. Elapsed: 2.010926003s
Nov  8 13:47:26.422: INFO: Pod "pod-subpath-test-secret-wkqc": Phase="Running", Reason="", readiness=true. Elapsed: 4.018381164s
Nov  8 13:47:28.434: INFO: Pod "pod-subpath-test-secret-wkqc": Phase="Running", Reason="", readiness=true. Elapsed: 6.030136088s
Nov  8 13:47:30.443: INFO: Pod "pod-subpath-test-secret-wkqc": Phase="Running", Reason="", readiness=true. Elapsed: 8.039504167s
Nov  8 13:47:32.454: INFO: Pod "pod-subpath-test-secret-wkqc": Phase="Running", Reason="", readiness=true. Elapsed: 10.050831368s
Nov  8 13:47:34.467: INFO: Pod "pod-subpath-test-secret-wkqc": Phase="Running", Reason="", readiness=true. Elapsed: 12.062943059s
Nov  8 13:47:36.474: INFO: Pod "pod-subpath-test-secret-wkqc": Phase="Running", Reason="", readiness=true. Elapsed: 14.070215684s
Nov  8 13:47:38.483: INFO: Pod "pod-subpath-test-secret-wkqc": Phase="Running", Reason="", readiness=true. Elapsed: 16.079776867s
Nov  8 13:47:40.497: INFO: Pod "pod-subpath-test-secret-wkqc": Phase="Running", Reason="", readiness=true. Elapsed: 18.093304931s
Nov  8 13:47:42.507: INFO: Pod "pod-subpath-test-secret-wkqc": Phase="Running", Reason="", readiness=true. Elapsed: 20.103664516s
Nov  8 13:47:44.518: INFO: Pod "pod-subpath-test-secret-wkqc": Phase="Running", Reason="", readiness=false. Elapsed: 22.114629974s
Nov  8 13:47:46.526: INFO: Pod "pod-subpath-test-secret-wkqc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.122631579s
STEP: Saw pod success
Nov  8 13:47:46.526: INFO: Pod "pod-subpath-test-secret-wkqc" satisfied condition "Succeeded or Failed"
Nov  8 13:47:46.530: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-lrvzp pod pod-subpath-test-secret-wkqc container test-container-subpath-secret-wkqc: <nil>
STEP: delete the pod
Nov  8 13:47:46.561: INFO: Waiting for pod pod-subpath-test-secret-wkqc to disappear
Nov  8 13:47:46.565: INFO: Pod pod-subpath-test-secret-wkqc no longer exists
STEP: Deleting pod pod-subpath-test-secret-wkqc
Nov  8 13:47:46.565: INFO: Deleting pod "pod-subpath-test-secret-wkqc" in namespace "subpath-9538"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Nov  8 13:47:46.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-9538" for this suite.

â€¢ [SLOW TEST:24.344 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]","total":356,"completed":333,"skipped":6306,"failed":0}
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:47:46.584: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-3143
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Nov  8 13:47:46.739: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Nov  8 13:47:52.960: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-3143" for this suite.

â€¢ [SLOW TEST:6.405 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]","total":356,"completed":334,"skipped":6310,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions 
  should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:47:52.991: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8386
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating api versions
Nov  8 13:47:53.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=kubectl-8386 api-versions'
Nov  8 13:47:53.213: INFO: stderr: ""
Nov  8 13:47:53.213: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nautoscaling/v2beta1\nautoscaling/v2beta2\nbatch/v1\nbatch/v1beta1\ncertificates.k8s.io/v1\ncilium.io/v2\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\ndiscovery.k8s.io/v1beta1\nevents.k8s.io/v1\nevents.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta2\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nnode.k8s.io/v1beta1\npolicy/v1\npolicy/v1beta1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Nov  8 13:47:53.213: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8386" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]","total":356,"completed":335,"skipped":6324,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:47:53.232: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4735
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-4735
STEP: creating service affinity-nodeport in namespace services-4735
STEP: creating replication controller affinity-nodeport in namespace services-4735
I1108 13:47:53.401221      22 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-4735, replica count: 3
I1108 13:47:56.451569      22 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Nov  8 13:47:56.473: INFO: Creating new exec pod
Nov  8 13:47:59.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-4735 exec execpod-affinityrnb2t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
Nov  8 13:47:59.953: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Nov  8 13:47:59.953: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 13:47:59.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-4735 exec execpod-affinityrnb2t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.124.203.149 80'
Nov  8 13:48:00.329: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.124.203.149 80\nConnection to 10.124.203.149 80 port [tcp/http] succeeded!\n"
Nov  8 13:48:00.329: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 13:48:00.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-4735 exec execpod-affinityrnb2t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.17 31995'
Nov  8 13:48:00.670: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.17 31995\nConnection to 10.250.2.17 31995 port [tcp/*] succeeded!\n"
Nov  8 13:48:00.670: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 13:48:00.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-4735 exec execpod-affinityrnb2t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.3.16 31995'
Nov  8 13:48:01.071: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.3.16 31995\nConnection to 10.250.3.16 31995 port [tcp/*] succeeded!\n"
Nov  8 13:48:01.071: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Nov  8 13:48:01.071: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-786080488 --namespace=services-4735 exec execpod-affinityrnb2t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.250.3.16:31995/ ; done'
Nov  8 13:48:01.491: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.3.16:31995/\n"
Nov  8 13:48:01.491: INFO: stdout: "\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz\naffinity-nodeport-ck6bz"
Nov  8 13:48:01.491: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.491: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.491: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.491: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.491: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.491: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.491: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.491: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.491: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.492: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.492: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.492: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.492: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.492: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.492: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.492: INFO: Received response from host: affinity-nodeport-ck6bz
Nov  8 13:48:01.492: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-4735, will wait for the garbage collector to delete the pods
Nov  8 13:48:01.572: INFO: Deleting ReplicationController affinity-nodeport took: 8.873457ms
Nov  8 13:48:01.672: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.309078ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Nov  8 13:48:03.900: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4735" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:10.685 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":336,"skipped":6328,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:48:03.918: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3146
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Nov  8 13:48:04.068: INFO: Waiting up to 5m0s for pod "pod-375c8452-0fd8-42cb-819b-d8ed098d9e78" in namespace "emptydir-3146" to be "Succeeded or Failed"
Nov  8 13:48:04.075: INFO: Pod "pod-375c8452-0fd8-42cb-819b-d8ed098d9e78": Phase="Pending", Reason="", readiness=false. Elapsed: 6.766429ms
Nov  8 13:48:06.086: INFO: Pod "pod-375c8452-0fd8-42cb-819b-d8ed098d9e78": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018167699s
Nov  8 13:48:08.098: INFO: Pod "pod-375c8452-0fd8-42cb-819b-d8ed098d9e78": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030239611s
STEP: Saw pod success
Nov  8 13:48:08.098: INFO: Pod "pod-375c8452-0fd8-42cb-819b-d8ed098d9e78" satisfied condition "Succeeded or Failed"
Nov  8 13:48:08.104: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod pod-375c8452-0fd8-42cb-819b-d8ed098d9e78 container test-container: <nil>
STEP: delete the pod
Nov  8 13:48:08.133: INFO: Waiting for pod pod-375c8452-0fd8-42cb-819b-d8ed098d9e78 to disappear
Nov  8 13:48:08.137: INFO: Pod pod-375c8452-0fd8-42cb-819b-d8ed098d9e78 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 13:48:08.137: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3146" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":337,"skipped":6332,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:48:08.157: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6734
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 13:48:08.707: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 13:48:11.743: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/admissionregistration.k8s.io discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 13:48:11.760: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6734" for this suite.
STEP: Destroying namespace "webhook-6734-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]","total":356,"completed":338,"skipped":6341,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:48:11.814: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4277
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Nov  8 13:48:11.974: INFO: Waiting up to 5m0s for pod "downwardapi-volume-776cbb9d-ccca-49dc-8957-81348cbe30c4" in namespace "downward-api-4277" to be "Succeeded or Failed"
Nov  8 13:48:11.980: INFO: Pod "downwardapi-volume-776cbb9d-ccca-49dc-8957-81348cbe30c4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.486695ms
Nov  8 13:48:13.993: INFO: Pod "downwardapi-volume-776cbb9d-ccca-49dc-8957-81348cbe30c4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018458803s
Nov  8 13:48:16.003: INFO: Pod "downwardapi-volume-776cbb9d-ccca-49dc-8957-81348cbe30c4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.028470779s
Nov  8 13:48:18.022: INFO: Pod "downwardapi-volume-776cbb9d-ccca-49dc-8957-81348cbe30c4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.047760815s
STEP: Saw pod success
Nov  8 13:48:18.022: INFO: Pod "downwardapi-volume-776cbb9d-ccca-49dc-8957-81348cbe30c4" satisfied condition "Succeeded or Failed"
Nov  8 13:48:18.029: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod downwardapi-volume-776cbb9d-ccca-49dc-8957-81348cbe30c4 container client-container: <nil>
STEP: delete the pod
Nov  8 13:48:18.062: INFO: Waiting for pod downwardapi-volume-776cbb9d-ccca-49dc-8957-81348cbe30c4 to disappear
Nov  8 13:48:18.067: INFO: Pod downwardapi-volume-776cbb9d-ccca-49dc-8957-81348cbe30c4 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Nov  8 13:48:18.067: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4277" for this suite.

â€¢ [SLOW TEST:6.276 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":339,"skipped":6379,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:48:18.091: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-8937
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: reading a file in the container
Nov  8 13:48:20.291: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8937 pod-service-account-cf64dcd6-9a53-401e-8ac6-2e943929e533 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container
Nov  8 13:48:20.650: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8937 pod-service-account-cf64dcd6-9a53-401e-8ac6-2e943929e533 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container
Nov  8 13:48:21.027: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8937 pod-service-account-cf64dcd6-9a53-401e-8ac6-2e943929e533 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Nov  8 13:48:21.409: INFO: Got root ca configmap in namespace "svcaccounts-8937"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Nov  8 13:48:21.413: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-8937" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]","total":356,"completed":340,"skipped":6410,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:48:21.439: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-7910
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secret-namespace-8146
STEP: Creating secret with name secret-test-ceaa71d5-786b-4a0b-af3f-04c7a85eab91
STEP: Creating a pod to test consume secrets
Nov  8 13:48:21.750: INFO: Waiting up to 5m0s for pod "pod-secrets-53d57fbe-ccd5-4100-bd76-eb730088d7bb" in namespace "secrets-7910" to be "Succeeded or Failed"
Nov  8 13:48:21.756: INFO: Pod "pod-secrets-53d57fbe-ccd5-4100-bd76-eb730088d7bb": Phase="Pending", Reason="", readiness=false. Elapsed: 5.54818ms
Nov  8 13:48:23.770: INFO: Pod "pod-secrets-53d57fbe-ccd5-4100-bd76-eb730088d7bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019719553s
Nov  8 13:48:25.779: INFO: Pod "pod-secrets-53d57fbe-ccd5-4100-bd76-eb730088d7bb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028852713s
STEP: Saw pod success
Nov  8 13:48:25.779: INFO: Pod "pod-secrets-53d57fbe-ccd5-4100-bd76-eb730088d7bb" satisfied condition "Succeeded or Failed"
Nov  8 13:48:25.785: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod pod-secrets-53d57fbe-ccd5-4100-bd76-eb730088d7bb container secret-volume-test: <nil>
STEP: delete the pod
Nov  8 13:48:25.812: INFO: Waiting for pod pod-secrets-53d57fbe-ccd5-4100-bd76-eb730088d7bb to disappear
Nov  8 13:48:25.817: INFO: Pod pod-secrets-53d57fbe-ccd5-4100-bd76-eb730088d7bb no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Nov  8 13:48:25.817: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7910" for this suite.
STEP: Destroying namespace "secret-namespace-8146" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]","total":356,"completed":341,"skipped":6420,"failed":0}
SS
------------------------------
[sig-apps] Deployment 
  should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:48:25.843: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-6414
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
Nov  8 13:48:25.996: INFO: Creating simple deployment test-deployment-4sxdc
Nov  8 13:48:26.014: INFO: deployment "test-deployment-4sxdc" doesn't have the required revision set
STEP: Getting /status
Nov  8 13:48:28.059: INFO: Deployment test-deployment-4sxdc has Conditions: [{Available True 2022-11-08 13:48:27 +0000 UTC 2022-11-08 13:48:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2022-11-08 13:48:27 +0000 UTC 2022-11-08 13:48:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4sxdc-688c4d6789" has successfully progressed.}]
STEP: updating Deployment Status
Nov  8 13:48:28.072: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 13, 48, 27, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 13, 48, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.November, 8, 13, 48, 27, 0, time.Local), LastTransitionTime:time.Date(2022, time.November, 8, 13, 48, 26, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-4sxdc-688c4d6789\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated
Nov  8 13:48:28.077: INFO: Observed &Deployment event: ADDED
Nov  8 13:48:28.077: INFO: Observed Deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-11-08 13:48:26 +0000 UTC 2022-11-08 13:48:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4sxdc-688c4d6789"}
Nov  8 13:48:28.078: INFO: Observed &Deployment event: MODIFIED
Nov  8 13:48:28.078: INFO: Observed Deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-11-08 13:48:26 +0000 UTC 2022-11-08 13:48:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4sxdc-688c4d6789"}
Nov  8 13:48:28.078: INFO: Observed Deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-11-08 13:48:26 +0000 UTC 2022-11-08 13:48:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Nov  8 13:48:28.078: INFO: Observed &Deployment event: MODIFIED
Nov  8 13:48:28.078: INFO: Observed Deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-11-08 13:48:26 +0000 UTC 2022-11-08 13:48:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Nov  8 13:48:28.078: INFO: Observed Deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-11-08 13:48:26 +0000 UTC 2022-11-08 13:48:26 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-4sxdc-688c4d6789" is progressing.}
Nov  8 13:48:28.078: INFO: Observed &Deployment event: MODIFIED
Nov  8 13:48:28.078: INFO: Observed Deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-11-08 13:48:27 +0000 UTC 2022-11-08 13:48:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Nov  8 13:48:28.078: INFO: Observed Deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-11-08 13:48:27 +0000 UTC 2022-11-08 13:48:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4sxdc-688c4d6789" has successfully progressed.}
Nov  8 13:48:28.078: INFO: Observed &Deployment event: MODIFIED
Nov  8 13:48:28.078: INFO: Observed Deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-11-08 13:48:27 +0000 UTC 2022-11-08 13:48:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Nov  8 13:48:28.078: INFO: Observed Deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-11-08 13:48:27 +0000 UTC 2022-11-08 13:48:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4sxdc-688c4d6789" has successfully progressed.}
Nov  8 13:48:28.078: INFO: Found Deployment test-deployment-4sxdc in namespace deployment-6414 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Nov  8 13:48:28.078: INFO: Deployment test-deployment-4sxdc has an updated status
STEP: patching the Statefulset Status
Nov  8 13:48:28.078: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Nov  8 13:48:28.094: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched
Nov  8 13:48:28.101: INFO: Observed &Deployment event: ADDED
Nov  8 13:48:28.101: INFO: Observed deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-11-08 13:48:26 +0000 UTC 2022-11-08 13:48:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4sxdc-688c4d6789"}
Nov  8 13:48:28.101: INFO: Observed &Deployment event: MODIFIED
Nov  8 13:48:28.101: INFO: Observed deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-11-08 13:48:26 +0000 UTC 2022-11-08 13:48:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4sxdc-688c4d6789"}
Nov  8 13:48:28.101: INFO: Observed deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-11-08 13:48:26 +0000 UTC 2022-11-08 13:48:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Nov  8 13:48:28.101: INFO: Observed &Deployment event: MODIFIED
Nov  8 13:48:28.101: INFO: Observed deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-11-08 13:48:26 +0000 UTC 2022-11-08 13:48:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Nov  8 13:48:28.101: INFO: Observed deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-11-08 13:48:26 +0000 UTC 2022-11-08 13:48:26 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-4sxdc-688c4d6789" is progressing.}
Nov  8 13:48:28.101: INFO: Observed &Deployment event: MODIFIED
Nov  8 13:48:28.102: INFO: Observed deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-11-08 13:48:27 +0000 UTC 2022-11-08 13:48:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Nov  8 13:48:28.102: INFO: Observed deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-11-08 13:48:27 +0000 UTC 2022-11-08 13:48:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4sxdc-688c4d6789" has successfully progressed.}
Nov  8 13:48:28.102: INFO: Observed &Deployment event: MODIFIED
Nov  8 13:48:28.102: INFO: Observed deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-11-08 13:48:27 +0000 UTC 2022-11-08 13:48:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Nov  8 13:48:28.102: INFO: Observed deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-11-08 13:48:27 +0000 UTC 2022-11-08 13:48:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4sxdc-688c4d6789" has successfully progressed.}
Nov  8 13:48:28.102: INFO: Observed deployment test-deployment-4sxdc in namespace deployment-6414 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Nov  8 13:48:28.102: INFO: Observed &Deployment event: MODIFIED
Nov  8 13:48:28.102: INFO: Found deployment test-deployment-4sxdc in namespace deployment-6414 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Nov  8 13:48:28.102: INFO: Deployment test-deployment-4sxdc has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Nov  8 13:48:28.111: INFO: Deployment "test-deployment-4sxdc":
&Deployment{ObjectMeta:{test-deployment-4sxdc  deployment-6414  ad8515f8-80a9-42bd-87b4-c83ed740360b 51191 1 2022-11-08 13:48:25 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-11-08 13:48:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2022-11-08 13:48:28 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2022-11-08 13:48:28 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004cd72d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-11-08 13:48:28 +0000 UTC,LastTransitionTime:2022-11-08 13:48:28 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-deployment-4sxdc-688c4d6789" has successfully progressed.,LastUpdateTime:2022-11-08 13:48:28 +0000 UTC,LastTransitionTime:2022-11-08 13:48:28 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Nov  8 13:48:28.119: INFO: New ReplicaSet "test-deployment-4sxdc-688c4d6789" of Deployment "test-deployment-4sxdc":
&ReplicaSet{ObjectMeta:{test-deployment-4sxdc-688c4d6789  deployment-6414  660808b2-1022-4475-92f9-324fe7d81fb5 51186 1 2022-11-08 13:48:26 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-4sxdc ad8515f8-80a9-42bd-87b4-c83ed740360b 0xc004cd7700 0xc004cd7701}] []  [{kube-controller-manager Update apps/v1 2022-11-08 13:48:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ad8515f8-80a9-42bd-87b4-c83ed740360b\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-11-08 13:48:27 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 688c4d6789,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004cd77a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Nov  8 13:48:28.127: INFO: Pod "test-deployment-4sxdc-688c4d6789-7gkvl" is available:
&Pod{ObjectMeta:{test-deployment-4sxdc-688c4d6789-7gkvl test-deployment-4sxdc-688c4d6789- deployment-6414  3d0eac70-2222-4481-b485-d583cc3eadbb 51185 0 2022-11-08 13:48:26 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-4sxdc-688c4d6789 660808b2-1022-4475-92f9-324fe7d81fb5 0xc004cd7b10 0xc004cd7b11}] []  [{kube-controller-manager Update v1 2022-11-08 13:48:26 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"660808b2-1022-4475-92f9-324fe7d81fb5\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-11-08 13:48:27 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.96.4.24\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p8jhh,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p8jhh,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-lrvzp,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 13:48:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 13:48:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 13:48:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-11-08 13:48:26 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.0.153,PodIP:10.96.4.24,StartTime:2022-11-08 13:48:26 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-11-08 13:48:26 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://be53930f44771ecc62051860a84d777423ef8d46f02d54f89f79da2ab037946c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.96.4.24,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Nov  8 13:48:28.127: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-6414" for this suite.
â€¢{"msg":"PASSED [sig-apps] Deployment should validate Deployment Status endpoints [Conformance]","total":356,"completed":342,"skipped":6422,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:48:28.149: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-514
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Nov  8 13:48:28.321: INFO: Waiting up to 5m0s for pod "pod-3e240340-f988-4d0e-bcff-fac2b1c6a763" in namespace "emptydir-514" to be "Succeeded or Failed"
Nov  8 13:48:28.325: INFO: Pod "pod-3e240340-f988-4d0e-bcff-fac2b1c6a763": Phase="Pending", Reason="", readiness=false. Elapsed: 4.146287ms
Nov  8 13:48:30.335: INFO: Pod "pod-3e240340-f988-4d0e-bcff-fac2b1c6a763": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014729867s
Nov  8 13:48:32.347: INFO: Pod "pod-3e240340-f988-4d0e-bcff-fac2b1c6a763": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026321639s
STEP: Saw pod success
Nov  8 13:48:32.347: INFO: Pod "pod-3e240340-f988-4d0e-bcff-fac2b1c6a763" satisfied condition "Succeeded or Failed"
Nov  8 13:48:32.351: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod pod-3e240340-f988-4d0e-bcff-fac2b1c6a763 container test-container: <nil>
STEP: delete the pod
Nov  8 13:48:32.377: INFO: Waiting for pod pod-3e240340-f988-4d0e-bcff-fac2b1c6a763 to disappear
Nov  8 13:48:32.382: INFO: Pod pod-3e240340-f988-4d0e-bcff-fac2b1c6a763 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 13:48:32.382: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-514" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":343,"skipped":6438,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:48:32.400: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7327
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-7327/configmap-test-b8fde5ce-112c-4545-a646-df29bc426f62
STEP: Creating a pod to test consume configMaps
Nov  8 13:48:32.563: INFO: Waiting up to 5m0s for pod "pod-configmaps-465f0a41-0267-4090-bfc1-ba15a2f6a105" in namespace "configmap-7327" to be "Succeeded or Failed"
Nov  8 13:48:32.570: INFO: Pod "pod-configmaps-465f0a41-0267-4090-bfc1-ba15a2f6a105": Phase="Pending", Reason="", readiness=false. Elapsed: 7.194898ms
Nov  8 13:48:34.580: INFO: Pod "pod-configmaps-465f0a41-0267-4090-bfc1-ba15a2f6a105": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016591863s
Nov  8 13:48:36.589: INFO: Pod "pod-configmaps-465f0a41-0267-4090-bfc1-ba15a2f6a105": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025412032s
STEP: Saw pod success
Nov  8 13:48:36.589: INFO: Pod "pod-configmaps-465f0a41-0267-4090-bfc1-ba15a2f6a105" satisfied condition "Succeeded or Failed"
Nov  8 13:48:36.593: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod pod-configmaps-465f0a41-0267-4090-bfc1-ba15a2f6a105 container env-test: <nil>
STEP: delete the pod
Nov  8 13:48:36.621: INFO: Waiting for pod pod-configmaps-465f0a41-0267-4090-bfc1-ba15a2f6a105 to disappear
Nov  8 13:48:36.625: INFO: Pod pod-configmaps-465f0a41-0267-4090-bfc1-ba15a2f6a105 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Nov  8 13:48:36.625: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7327" for this suite.
â€¢{"msg":"PASSED [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]","total":356,"completed":344,"skipped":6466,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:48:36.645: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-9179
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:48:36.884: INFO: Creating pod...
Nov  8 13:48:38.909: INFO: Creating service...
Nov  8 13:48:38.924: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/pods/agnhost/proxy?method=DELETE
Nov  8 13:48:38.995: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Nov  8 13:48:38.995: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/pods/agnhost/proxy?method=OPTIONS
Nov  8 13:48:39.007: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Nov  8 13:48:39.007: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/pods/agnhost/proxy?method=PATCH
Nov  8 13:48:39.054: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Nov  8 13:48:39.054: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/pods/agnhost/proxy?method=POST
Nov  8 13:48:39.064: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Nov  8 13:48:39.064: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/pods/agnhost/proxy?method=PUT
Nov  8 13:48:39.074: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Nov  8 13:48:39.074: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/services/e2e-proxy-test-service/proxy?method=DELETE
Nov  8 13:48:39.084: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Nov  8 13:48:39.084: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/services/e2e-proxy-test-service/proxy?method=OPTIONS
Nov  8 13:48:39.094: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Nov  8 13:48:39.094: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/services/e2e-proxy-test-service/proxy?method=PATCH
Nov  8 13:48:39.104: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Nov  8 13:48:39.104: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/services/e2e-proxy-test-service/proxy?method=POST
Nov  8 13:48:39.114: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Nov  8 13:48:39.114: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/services/e2e-proxy-test-service/proxy?method=PUT
Nov  8 13:48:39.125: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Nov  8 13:48:39.125: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/pods/agnhost/proxy?method=GET
Nov  8 13:48:39.130: INFO: http.Client request:GET StatusCode:301
Nov  8 13:48:39.130: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/services/e2e-proxy-test-service/proxy?method=GET
Nov  8 13:48:39.136: INFO: http.Client request:GET StatusCode:301
Nov  8 13:48:39.136: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/pods/agnhost/proxy?method=HEAD
Nov  8 13:48:39.141: INFO: http.Client request:HEAD StatusCode:301
Nov  8 13:48:39.141: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-9179/services/e2e-proxy-test-service/proxy?method=HEAD
Nov  8 13:48:39.146: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Nov  8 13:48:39.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-9179" for this suite.
â€¢{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]","total":356,"completed":345,"skipped":6481,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:48:39.168: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-1150
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-1150
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Nov  8 13:48:39.310: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Nov  8 13:48:39.428: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Nov  8 13:48:41.441: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:48:43.437: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:48:45.440: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:48:47.438: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:48:49.436: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:48:51.438: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:48:53.440: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:48:55.438: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:48:57.435: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:48:59.436: INFO: The status of Pod netserver-0 is Running (Ready = false)
Nov  8 13:49:01.439: INFO: The status of Pod netserver-0 is Running (Ready = true)
Nov  8 13:49:01.451: INFO: The status of Pod netserver-1 is Running (Ready = true)
Nov  8 13:49:01.461: INFO: The status of Pod netserver-2 is Running (Ready = true)
Nov  8 13:49:01.469: INFO: The status of Pod netserver-3 is Running (Ready = true)
Nov  8 13:49:01.478: INFO: The status of Pod netserver-4 is Running (Ready = true)
Nov  8 13:49:01.488: INFO: The status of Pod netserver-5 is Running (Ready = true)
STEP: Creating test pods
Nov  8 13:49:03.544: INFO: Setting MaxTries for pod polling to 66 for networking test based on endpoint count 6
Nov  8 13:49:03.544: INFO: Going to poll 10.96.3.22 on port 8083 at least 0 times, with a maximum of 66 tries before failing
Nov  8 13:49:03.548: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.96.3.22:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1150 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:49:03.548: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:49:03.549: INFO: ExecWithOptions: Clientset creation
Nov  8 13:49:03.549: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-1150/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.96.3.22%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Nov  8 13:49:03.878: INFO: Found all 1 expected endpoints: [netserver-0]
Nov  8 13:49:03.878: INFO: Going to poll 10.96.2.231 on port 8083 at least 0 times, with a maximum of 66 tries before failing
Nov  8 13:49:03.886: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.96.2.231:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1150 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:49:03.886: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:49:03.887: INFO: ExecWithOptions: Clientset creation
Nov  8 13:49:03.887: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-1150/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.96.2.231%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Nov  8 13:49:04.237: INFO: Found all 1 expected endpoints: [netserver-1]
Nov  8 13:49:04.237: INFO: Going to poll 10.96.0.76 on port 8083 at least 0 times, with a maximum of 66 tries before failing
Nov  8 13:49:04.244: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.96.0.76:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1150 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:49:04.245: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:49:04.245: INFO: ExecWithOptions: Clientset creation
Nov  8 13:49:04.245: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-1150/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.96.0.76%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Nov  8 13:49:04.562: INFO: Found all 1 expected endpoints: [netserver-2]
Nov  8 13:49:04.562: INFO: Going to poll 10.96.5.116 on port 8083 at least 0 times, with a maximum of 66 tries before failing
Nov  8 13:49:04.569: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.96.5.116:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1150 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:49:04.569: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:49:04.570: INFO: ExecWithOptions: Clientset creation
Nov  8 13:49:04.570: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-1150/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.96.5.116%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Nov  8 13:49:04.929: INFO: Found all 1 expected endpoints: [netserver-3]
Nov  8 13:49:04.929: INFO: Going to poll 10.96.4.17 on port 8083 at least 0 times, with a maximum of 66 tries before failing
Nov  8 13:49:04.936: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.96.4.17:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1150 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:49:04.936: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:49:04.941: INFO: ExecWithOptions: Clientset creation
Nov  8 13:49:04.941: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-1150/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.96.4.17%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Nov  8 13:49:05.291: INFO: Found all 1 expected endpoints: [netserver-4]
Nov  8 13:49:05.292: INFO: Going to poll 10.96.1.114 on port 8083 at least 0 times, with a maximum of 66 tries before failing
Nov  8 13:49:05.300: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.96.1.114:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1150 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Nov  8 13:49:05.300: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:49:05.300: INFO: ExecWithOptions: Clientset creation
Nov  8 13:49:05.300: INFO: ExecWithOptions: execute(POST https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/pod-network-test-1150/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.96.1.114%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Nov  8 13:49:05.592: INFO: Found all 1 expected endpoints: [netserver-5]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Nov  8 13:49:05.592: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-1150" for this suite.

â€¢ [SLOW TEST:26.445 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":346,"skipped":6494,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:49:05.613: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-5115
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Nov  8 13:49:09.927: INFO: DNS probes using dns-5115/dns-test-ef0a3b9b-9876-4ea1-a8c9-122f5cb65d6a succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Nov  8 13:49:09.943: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-5115" for this suite.
â€¢{"msg":"PASSED [sig-network] DNS should provide DNS for the cluster  [Conformance]","total":356,"completed":347,"skipped":6515,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:49:09.972: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2767
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-7798ae50-59fa-4e4d-ae3d-b94d43df026e
STEP: Creating a pod to test consume secrets
Nov  8 13:49:10.137: INFO: Waiting up to 5m0s for pod "pod-secrets-68e957a4-3291-4191-887c-6d8cc8600fe3" in namespace "secrets-2767" to be "Succeeded or Failed"
Nov  8 13:49:10.143: INFO: Pod "pod-secrets-68e957a4-3291-4191-887c-6d8cc8600fe3": Phase="Pending", Reason="", readiness=false. Elapsed: 5.575641ms
Nov  8 13:49:12.154: INFO: Pod "pod-secrets-68e957a4-3291-4191-887c-6d8cc8600fe3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016563975s
Nov  8 13:49:14.162: INFO: Pod "pod-secrets-68e957a4-3291-4191-887c-6d8cc8600fe3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024740863s
STEP: Saw pod success
Nov  8 13:49:14.162: INFO: Pod "pod-secrets-68e957a4-3291-4191-887c-6d8cc8600fe3" satisfied condition "Succeeded or Failed"
Nov  8 13:49:14.168: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-lrvzp pod pod-secrets-68e957a4-3291-4191-887c-6d8cc8600fe3 container secret-volume-test: <nil>
STEP: delete the pod
Nov  8 13:49:14.197: INFO: Waiting for pod pod-secrets-68e957a4-3291-4191-887c-6d8cc8600fe3 to disappear
Nov  8 13:49:14.202: INFO: Pod pod-secrets-68e957a4-3291-4191-887c-6d8cc8600fe3 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Nov  8 13:49:14.202: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2767" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":348,"skipped":6532,"failed":0}
SSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] 
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:49:14.221: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename taint-multiple-pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-multiple-pods-5224
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:348
Nov  8 13:49:14.382: INFO: Waiting up to 1m0s for all nodes to be ready
Nov  8 13:50:14.453: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:50:14.459: INFO: Starting informer...
STEP: Starting pods...
Nov  8 13:50:14.693: INFO: Pod1 is running on shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt. Tainting Node
Nov  8 13:50:16.932: INFO: Pod2 is running on shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting for Pod1 and Pod2 to be deleted
Nov  8 13:50:22.597: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Nov  8 13:50:42.342: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:188
Nov  8 13:50:42.377: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-multiple-pods-5224" for this suite.

â€¢ [SLOW TEST:88.176 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]","total":356,"completed":349,"skipped":6535,"failed":0}
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:50:42.397: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9600
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Nov  8 13:50:42.850: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Nov  8 13:50:45.889: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating pod webhook via the AdmissionRegistration API
STEP: create a pod that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 13:50:46.099: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9600" for this suite.
STEP: Destroying namespace "webhook-9600-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]","total":356,"completed":350,"skipped":6537,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:50:46.171: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2311
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation
Nov  8 13:50:46.313: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
Nov  8 13:50:50.051: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Nov  8 13:51:01.084: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2311" for this suite.

â€¢ [SLOW TEST:14.947 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]","total":356,"completed":351,"skipped":6554,"failed":0}
SSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:51:01.118: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7639
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on tmpfs
Nov  8 13:51:01.281: INFO: Waiting up to 5m0s for pod "pod-7fdd9219-8007-4ea6-a449-c293027f0dd4" in namespace "emptydir-7639" to be "Succeeded or Failed"
Nov  8 13:51:01.290: INFO: Pod "pod-7fdd9219-8007-4ea6-a449-c293027f0dd4": Phase="Pending", Reason="", readiness=false. Elapsed: 8.922669ms
Nov  8 13:51:03.298: INFO: Pod "pod-7fdd9219-8007-4ea6-a449-c293027f0dd4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016956338s
Nov  8 13:51:05.308: INFO: Pod "pod-7fdd9219-8007-4ea6-a449-c293027f0dd4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027203365s
STEP: Saw pod success
Nov  8 13:51:05.308: INFO: Pod "pod-7fdd9219-8007-4ea6-a449-c293027f0dd4" satisfied condition "Succeeded or Failed"
Nov  8 13:51:05.314: INFO: Trying to get logs from node shoot--kd500770--k8s-cncf-conf-worker-ld4ha-z1-86bcd-99ctt pod pod-7fdd9219-8007-4ea6-a449-c293027f0dd4 container test-container: <nil>
STEP: delete the pod
Nov  8 13:51:05.417: INFO: Waiting for pod pod-7fdd9219-8007-4ea6-a449-c293027f0dd4 to disappear
Nov  8 13:51:05.423: INFO: Pod pod-7fdd9219-8007-4ea6-a449-c293027f0dd4 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Nov  8 13:51:05.423: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7639" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":352,"skipped":6557,"failed":0}
S
------------------------------
[sig-node] PodTemplates 
  should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:51:05.439: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-7348
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a pod template
STEP: Replace a pod template
Nov  8 13:51:05.605: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Nov  8 13:51:05.605: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-7348" for this suite.
â€¢{"msg":"PASSED [sig-node] PodTemplates should replace a pod template [Conformance]","total":356,"completed":353,"skipped":6558,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:51:05.625: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-1712
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nspatchtest-a88219af-a89b-4200-a5f5-424718f58fc7-700
STEP: patching the Namespace
STEP: get the Namespace and ensuring it has the label
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Nov  8 13:51:05.907: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-1712" for this suite.
STEP: Destroying namespace "nspatchtest-a88219af-a89b-4200-a5f5-424718f58fc7-700" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]","total":356,"completed":354,"skipped":6566,"failed":0}
S
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:51:05.940: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-7155
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
Nov  8 13:51:06.088: INFO: Creating pod...
Nov  8 13:51:08.121: INFO: Creating service...
Nov  8 13:51:08.141: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/pods/agnhost/proxy/some/path/with/DELETE
Nov  8 13:51:08.209: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Nov  8 13:51:08.209: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/pods/agnhost/proxy/some/path/with/GET
Nov  8 13:51:08.219: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Nov  8 13:51:08.219: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/pods/agnhost/proxy/some/path/with/HEAD
Nov  8 13:51:08.245: INFO: http.Client request:HEAD | StatusCode:200
Nov  8 13:51:08.245: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/pods/agnhost/proxy/some/path/with/OPTIONS
Nov  8 13:51:08.289: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Nov  8 13:51:08.290: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/pods/agnhost/proxy/some/path/with/PATCH
Nov  8 13:51:08.299: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Nov  8 13:51:08.299: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/pods/agnhost/proxy/some/path/with/POST
Nov  8 13:51:08.307: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Nov  8 13:51:08.307: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/pods/agnhost/proxy/some/path/with/PUT
Nov  8 13:51:08.318: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Nov  8 13:51:08.318: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/services/test-service/proxy/some/path/with/DELETE
Nov  8 13:51:08.333: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Nov  8 13:51:08.333: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/services/test-service/proxy/some/path/with/GET
Nov  8 13:51:08.343: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Nov  8 13:51:08.343: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/services/test-service/proxy/some/path/with/HEAD
Nov  8 13:51:08.354: INFO: http.Client request:HEAD | StatusCode:200
Nov  8 13:51:08.354: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/services/test-service/proxy/some/path/with/OPTIONS
Nov  8 13:51:08.365: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Nov  8 13:51:08.365: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/services/test-service/proxy/some/path/with/PATCH
Nov  8 13:51:08.376: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Nov  8 13:51:08.376: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/services/test-service/proxy/some/path/with/POST
Nov  8 13:51:08.386: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Nov  8 13:51:08.386: INFO: Starting http.Client for https://api.k8s-cncf-conf.kd500770.internal.prod.gardener.get-cloud.io:443/api/v1/namespaces/proxy-7155/services/test-service/proxy/some/path/with/PUT
Nov  8 13:51:08.396: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Nov  8 13:51:08.396: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-7155" for this suite.
â€¢{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]","total":356,"completed":355,"skipped":6567,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Nov  8 13:51:08.420: INFO: >>> kubeConfig: /tmp/kubeconfig-786080488
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-6449
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
Nov  8 13:51:08.569: INFO: created test-event-1
Nov  8 13:51:08.574: INFO: created test-event-2
Nov  8 13:51:08.580: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace
STEP: delete collection of events
Nov  8 13:51:08.584: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
Nov  8 13:51:08.603: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Nov  8 13:51:08.608: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-6449" for this suite.
â€¢{"msg":"PASSED [sig-instrumentation] Events should delete a collection of events [Conformance]","total":356,"completed":356,"skipped":6580,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSNov  8 13:51:08.629: INFO: Running AfterSuite actions on all nodes
Nov  8 13:51:08.629: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func19.2
Nov  8 13:51:08.629: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func9.2
Nov  8 13:51:08.629: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func8.2
Nov  8 13:51:08.629: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func17.3
Nov  8 13:51:08.630: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func9.2
Nov  8 13:51:08.630: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func4.2
Nov  8 13:51:08.630: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func1.3
Nov  8 13:51:08.630: INFO: Running AfterSuite actions on node 1
Nov  8 13:51:08.630: INFO: Skipping dumping logs from cluster

JUnit report was created: /tmp/sonobuoy/results/junit_01.xml
{"msg":"Test Suite completed","total":356,"completed":356,"skipped":6617,"failed":0}

Ran 356 of 6973 Specs in 5980.606 seconds
SUCCESS! -- 356 Passed | 0 Failed | 0 Pending | 6617 Skipped
PASS

Ginkgo ran 1 suite in 1h39m42.388446585s
Test Suite Passed
