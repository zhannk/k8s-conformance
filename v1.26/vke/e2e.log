I0313 18:40:07.704947      21 e2e.go:126] Starting e2e run "fc5c0549-5916-43cc-b1a7-d8d6fc91ff6c" on Ginkgo node 1
Mar 13 18:40:07.722: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1678732807 - will randomize all specs

Will run 368 of 7069 specs
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
[SynchronizedBeforeSuite] TOP-LEVEL
  test/e2e/e2e.go:77
Mar 13 18:40:07.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 18:40:07.860: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Mar 13 18:40:07.890: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Mar 13 18:40:07.940: INFO: 10 / 10 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Mar 13 18:40:07.940: INFO: expected 3 pod replicas in namespace 'kube-system', 3 are Running and Ready.
Mar 13 18:40:07.940: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Mar 13 18:40:07.957: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
Mar 13 18:40:07.957: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'csi-vultr-node' (0 seconds elapsed)
Mar 13 18:40:07.957: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'konnectivity-agent' (0 seconds elapsed)
Mar 13 18:40:07.957: INFO: e2e test version: v1.26.2
Mar 13 18:40:07.959: INFO: kube-apiserver version: v1.26.2
[SynchronizedBeforeSuite] TOP-LEVEL
  test/e2e/e2e.go:77
Mar 13 18:40:07.960: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 18:40:07.965: INFO: Cluster IP family: ipv4
------------------------------
[SynchronizedBeforeSuite] PASSED [0.107 seconds]
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77

  Begin Captured GinkgoWriter Output >>
    [SynchronizedBeforeSuite] TOP-LEVEL
      test/e2e/e2e.go:77
    Mar 13 18:40:07.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 18:40:07.860: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
    Mar 13 18:40:07.890: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
    Mar 13 18:40:07.940: INFO: 10 / 10 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
    Mar 13 18:40:07.940: INFO: expected 3 pod replicas in namespace 'kube-system', 3 are Running and Ready.
    Mar 13 18:40:07.940: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
    Mar 13 18:40:07.957: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
    Mar 13 18:40:07.957: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'csi-vultr-node' (0 seconds elapsed)
    Mar 13 18:40:07.957: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'konnectivity-agent' (0 seconds elapsed)
    Mar 13 18:40:07.957: INFO: e2e test version: v1.26.2
    Mar 13 18:40:07.959: INFO: kube-apiserver version: v1.26.2
    [SynchronizedBeforeSuite] TOP-LEVEL
      test/e2e/e2e.go:77
    Mar 13 18:40:07.960: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 18:40:07.965: INFO: Cluster IP family: ipv4
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:40:07.993
Mar 13 18:40:07.994: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename sched-pred 03/13/23 18:40:07.995
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:08.017
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:08.025
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Mar 13 18:40:08.029: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Mar 13 18:40:08.038: INFO: Waiting for terminating namespaces to be deleted...
Mar 13 18:40:08.046: INFO: 
Logging pods the apiserver thinks is on node vke-automated-test-51df1d4fb06e before test
Mar 13 18:40:08.056: INFO: calico-node-xs2jj from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 18:40:08.056: INFO: 	Container calico-node ready: true, restart count 0
Mar 13 18:40:08.056: INFO: csi-vultr-node-b66xm from kube-system started at 2023-03-13 18:38:53 +0000 UTC (2 container statuses recorded)
Mar 13 18:40:08.056: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
Mar 13 18:40:08.056: INFO: 	Container driver-registrar ready: true, restart count 0
Mar 13 18:40:08.056: INFO: konnectivity-agent-266bw from kube-system started at 2023-03-13 18:38:53 +0000 UTC (1 container statuses recorded)
Mar 13 18:40:08.057: INFO: 	Container konnectivity-agent ready: true, restart count 0
Mar 13 18:40:08.057: INFO: sonobuoy from sonobuoy started at 2023-03-13 18:39:50 +0000 UTC (1 container statuses recorded)
Mar 13 18:40:08.057: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Mar 13 18:40:08.057: INFO: sonobuoy-e2e-job-c23108cbbd714118 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
Mar 13 18:40:08.057: INFO: 	Container e2e ready: true, restart count 0
Mar 13 18:40:08.057: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar 13 18:40:08.057: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-6xtp8 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
Mar 13 18:40:08.057: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar 13 18:40:08.057: INFO: 	Container systemd-logs ready: true, restart count 0
Mar 13 18:40:08.057: INFO: 
Logging pods the apiserver thinks is on node vke-automated-test-f5b1d7d2d722 before test
Mar 13 18:40:08.065: INFO: calico-kube-controllers-57b57c56f-hkwr4 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 18:40:08.065: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Mar 13 18:40:08.065: INFO: calico-node-qgbkz from kube-system started at 2023-03-13 18:38:35 +0000 UTC (1 container statuses recorded)
Mar 13 18:40:08.065: INFO: 	Container calico-node ready: true, restart count 0
Mar 13 18:40:08.065: INFO: cluster-autoscaler-598bdb7954-cwz8l from kube-system started at 2023-03-13 18:38:45 +0000 UTC (1 container statuses recorded)
Mar 13 18:40:08.065: INFO: 	Container cluster-autoscaler ready: true, restart count 0
Mar 13 18:40:08.065: INFO: coredns-85c5d49895-6j25x from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 18:40:08.065: INFO: 	Container coredns ready: true, restart count 0
Mar 13 18:40:08.065: INFO: csi-vultr-controller-0 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (4 container statuses recorded)
Mar 13 18:40:08.065: INFO: 	Container csi-attacher ready: true, restart count 0
Mar 13 18:40:08.065: INFO: 	Container csi-provisioner ready: true, restart count 0
Mar 13 18:40:08.066: INFO: 	Container csi-resizer ready: true, restart count 0
Mar 13 18:40:08.066: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
Mar 13 18:40:08.066: INFO: csi-vultr-node-p88qb from kube-system started at 2023-03-13 18:38:43 +0000 UTC (2 container statuses recorded)
Mar 13 18:40:08.066: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
Mar 13 18:40:08.066: INFO: 	Container driver-registrar ready: true, restart count 0
Mar 13 18:40:08.066: INFO: konnectivity-agent-8xln6 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 18:40:08.066: INFO: 	Container konnectivity-agent ready: true, restart count 0
Mar 13 18:40:08.066: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-9nqbq from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
Mar 13 18:40:08.066: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar 13 18:40:08.066: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443
STEP: Trying to schedule Pod with nonempty NodeSelector. 03/13/23 18:40:08.066
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.174c0e983b24616c], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling..] 03/13/23 18:40:08.102
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 18:40:09.097: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-5592" for this suite. 03/13/23 18:40:09.101
------------------------------
â€¢ [1.116 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:40:07.993
    Mar 13 18:40:07.994: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename sched-pred 03/13/23 18:40:07.995
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:08.017
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:08.025
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Mar 13 18:40:08.029: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Mar 13 18:40:08.038: INFO: Waiting for terminating namespaces to be deleted...
    Mar 13 18:40:08.046: INFO: 
    Logging pods the apiserver thinks is on node vke-automated-test-51df1d4fb06e before test
    Mar 13 18:40:08.056: INFO: calico-node-xs2jj from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 18:40:08.056: INFO: 	Container calico-node ready: true, restart count 0
    Mar 13 18:40:08.056: INFO: csi-vultr-node-b66xm from kube-system started at 2023-03-13 18:38:53 +0000 UTC (2 container statuses recorded)
    Mar 13 18:40:08.056: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
    Mar 13 18:40:08.056: INFO: 	Container driver-registrar ready: true, restart count 0
    Mar 13 18:40:08.056: INFO: konnectivity-agent-266bw from kube-system started at 2023-03-13 18:38:53 +0000 UTC (1 container statuses recorded)
    Mar 13 18:40:08.057: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Mar 13 18:40:08.057: INFO: sonobuoy from sonobuoy started at 2023-03-13 18:39:50 +0000 UTC (1 container statuses recorded)
    Mar 13 18:40:08.057: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Mar 13 18:40:08.057: INFO: sonobuoy-e2e-job-c23108cbbd714118 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
    Mar 13 18:40:08.057: INFO: 	Container e2e ready: true, restart count 0
    Mar 13 18:40:08.057: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar 13 18:40:08.057: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-6xtp8 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
    Mar 13 18:40:08.057: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar 13 18:40:08.057: INFO: 	Container systemd-logs ready: true, restart count 0
    Mar 13 18:40:08.057: INFO: 
    Logging pods the apiserver thinks is on node vke-automated-test-f5b1d7d2d722 before test
    Mar 13 18:40:08.065: INFO: calico-kube-controllers-57b57c56f-hkwr4 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 18:40:08.065: INFO: 	Container calico-kube-controllers ready: true, restart count 0
    Mar 13 18:40:08.065: INFO: calico-node-qgbkz from kube-system started at 2023-03-13 18:38:35 +0000 UTC (1 container statuses recorded)
    Mar 13 18:40:08.065: INFO: 	Container calico-node ready: true, restart count 0
    Mar 13 18:40:08.065: INFO: cluster-autoscaler-598bdb7954-cwz8l from kube-system started at 2023-03-13 18:38:45 +0000 UTC (1 container statuses recorded)
    Mar 13 18:40:08.065: INFO: 	Container cluster-autoscaler ready: true, restart count 0
    Mar 13 18:40:08.065: INFO: coredns-85c5d49895-6j25x from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 18:40:08.065: INFO: 	Container coredns ready: true, restart count 0
    Mar 13 18:40:08.065: INFO: csi-vultr-controller-0 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (4 container statuses recorded)
    Mar 13 18:40:08.065: INFO: 	Container csi-attacher ready: true, restart count 0
    Mar 13 18:40:08.065: INFO: 	Container csi-provisioner ready: true, restart count 0
    Mar 13 18:40:08.066: INFO: 	Container csi-resizer ready: true, restart count 0
    Mar 13 18:40:08.066: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
    Mar 13 18:40:08.066: INFO: csi-vultr-node-p88qb from kube-system started at 2023-03-13 18:38:43 +0000 UTC (2 container statuses recorded)
    Mar 13 18:40:08.066: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
    Mar 13 18:40:08.066: INFO: 	Container driver-registrar ready: true, restart count 0
    Mar 13 18:40:08.066: INFO: konnectivity-agent-8xln6 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 18:40:08.066: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Mar 13 18:40:08.066: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-9nqbq from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
    Mar 13 18:40:08.066: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar 13 18:40:08.066: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates that NodeSelector is respected if not matching  [Conformance]
      test/e2e/scheduling/predicates.go:443
    STEP: Trying to schedule Pod with nonempty NodeSelector. 03/13/23 18:40:08.066
    STEP: Considering event: 
    Type = [Warning], Name = [restricted-pod.174c0e983b24616c], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling..] 03/13/23 18:40:08.102
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:40:09.097: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-5592" for this suite. 03/13/23 18:40:09.101
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Security Context
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:40:09.11
Mar 13 18:40:09.111: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename security-context 03/13/23 18:40:09.111
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:09.124
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:09.129
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 03/13/23 18:40:09.133
Mar 13 18:40:09.142: INFO: Waiting up to 5m0s for pod "security-context-69b888f8-b8d9-4568-9d44-7405411d25b6" in namespace "security-context-1838" to be "Succeeded or Failed"
Mar 13 18:40:09.146: INFO: Pod "security-context-69b888f8-b8d9-4568-9d44-7405411d25b6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.853103ms
Mar 13 18:40:11.154: INFO: Pod "security-context-69b888f8-b8d9-4568-9d44-7405411d25b6": Phase="Running", Reason="", readiness=true. Elapsed: 2.011867371s
Mar 13 18:40:13.161: INFO: Pod "security-context-69b888f8-b8d9-4568-9d44-7405411d25b6": Phase="Running", Reason="", readiness=false. Elapsed: 4.019398369s
Mar 13 18:40:15.150: INFO: Pod "security-context-69b888f8-b8d9-4568-9d44-7405411d25b6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.008151576s
STEP: Saw pod success 03/13/23 18:40:15.15
Mar 13 18:40:15.151: INFO: Pod "security-context-69b888f8-b8d9-4568-9d44-7405411d25b6" satisfied condition "Succeeded or Failed"
Mar 13 18:40:15.156: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod security-context-69b888f8-b8d9-4568-9d44-7405411d25b6 container test-container: <nil>
STEP: delete the pod 03/13/23 18:40:15.194
Mar 13 18:40:15.203: INFO: Waiting for pod security-context-69b888f8-b8d9-4568-9d44-7405411d25b6 to disappear
Mar 13 18:40:15.205: INFO: Pod security-context-69b888f8-b8d9-4568-9d44-7405411d25b6 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Mar 13 18:40:15.206: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-1838" for this suite. 03/13/23 18:40:15.21
------------------------------
â€¢ [SLOW TEST] [6.105 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:40:09.11
    Mar 13 18:40:09.111: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename security-context 03/13/23 18:40:09.111
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:09.124
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:09.129
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
      test/e2e/node/security_context.go:129
    STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 03/13/23 18:40:09.133
    Mar 13 18:40:09.142: INFO: Waiting up to 5m0s for pod "security-context-69b888f8-b8d9-4568-9d44-7405411d25b6" in namespace "security-context-1838" to be "Succeeded or Failed"
    Mar 13 18:40:09.146: INFO: Pod "security-context-69b888f8-b8d9-4568-9d44-7405411d25b6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.853103ms
    Mar 13 18:40:11.154: INFO: Pod "security-context-69b888f8-b8d9-4568-9d44-7405411d25b6": Phase="Running", Reason="", readiness=true. Elapsed: 2.011867371s
    Mar 13 18:40:13.161: INFO: Pod "security-context-69b888f8-b8d9-4568-9d44-7405411d25b6": Phase="Running", Reason="", readiness=false. Elapsed: 4.019398369s
    Mar 13 18:40:15.150: INFO: Pod "security-context-69b888f8-b8d9-4568-9d44-7405411d25b6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.008151576s
    STEP: Saw pod success 03/13/23 18:40:15.15
    Mar 13 18:40:15.151: INFO: Pod "security-context-69b888f8-b8d9-4568-9d44-7405411d25b6" satisfied condition "Succeeded or Failed"
    Mar 13 18:40:15.156: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod security-context-69b888f8-b8d9-4568-9d44-7405411d25b6 container test-container: <nil>
    STEP: delete the pod 03/13/23 18:40:15.194
    Mar 13 18:40:15.203: INFO: Waiting for pod security-context-69b888f8-b8d9-4568-9d44-7405411d25b6 to disappear
    Mar 13 18:40:15.205: INFO: Pod security-context-69b888f8-b8d9-4568-9d44-7405411d25b6 no longer exists
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:40:15.206: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-1838" for this suite. 03/13/23 18:40:15.21
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:40:15.218
Mar 13 18:40:15.218: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename resourcequota 03/13/23 18:40:15.22
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:15.23
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:15.233
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230
STEP: Counting existing ResourceQuota 03/13/23 18:40:15.236
STEP: Creating a ResourceQuota 03/13/23 18:40:20.239
STEP: Ensuring resource quota status is calculated 03/13/23 18:40:20.243
STEP: Creating a Pod that fits quota 03/13/23 18:40:22.247
STEP: Ensuring ResourceQuota status captures the pod usage 03/13/23 18:40:22.262
STEP: Not allowing a pod to be created that exceeds remaining quota 03/13/23 18:40:24.267
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) 03/13/23 18:40:24.27
STEP: Ensuring a pod cannot update its resource requirements 03/13/23 18:40:24.273
STEP: Ensuring attempts to update pod resource requirements did not change quota usage 03/13/23 18:40:24.276
STEP: Deleting the pod 03/13/23 18:40:26.28
STEP: Ensuring resource quota status released the pod usage 03/13/23 18:40:26.289
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar 13 18:40:28.293: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-9003" for this suite. 03/13/23 18:40:28.296
------------------------------
â€¢ [SLOW TEST] [13.082 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:40:15.218
    Mar 13 18:40:15.218: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename resourcequota 03/13/23 18:40:15.22
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:15.23
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:15.233
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a pod. [Conformance]
      test/e2e/apimachinery/resource_quota.go:230
    STEP: Counting existing ResourceQuota 03/13/23 18:40:15.236
    STEP: Creating a ResourceQuota 03/13/23 18:40:20.239
    STEP: Ensuring resource quota status is calculated 03/13/23 18:40:20.243
    STEP: Creating a Pod that fits quota 03/13/23 18:40:22.247
    STEP: Ensuring ResourceQuota status captures the pod usage 03/13/23 18:40:22.262
    STEP: Not allowing a pod to be created that exceeds remaining quota 03/13/23 18:40:24.267
    STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) 03/13/23 18:40:24.27
    STEP: Ensuring a pod cannot update its resource requirements 03/13/23 18:40:24.273
    STEP: Ensuring attempts to update pod resource requirements did not change quota usage 03/13/23 18:40:24.276
    STEP: Deleting the pod 03/13/23 18:40:26.28
    STEP: Ensuring resource quota status released the pod usage 03/13/23 18:40:26.289
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:40:28.293: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-9003" for this suite. 03/13/23 18:40:28.296
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:40:28.304
Mar 13 18:40:28.304: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename dns 03/13/23 18:40:28.305
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:28.314
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:28.317
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248
STEP: Creating a test headless service 03/13/23 18:40:28.319
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2348.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2348.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
 03/13/23 18:40:28.325
STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2348.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2348.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
 03/13/23 18:40:28.325
STEP: creating a pod to probe DNS 03/13/23 18:40:28.325
STEP: submitting the pod to kubernetes 03/13/23 18:40:28.325
Mar 13 18:40:28.331: INFO: Waiting up to 15m0s for pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c" in namespace "dns-2348" to be "running"
Mar 13 18:40:28.338: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.829247ms
Mar 13 18:40:30.353: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021388063s
Mar 13 18:40:32.342: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010608571s
Mar 13 18:40:34.344: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.013105587s
Mar 13 18:40:36.343: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 8.011538628s
Mar 13 18:40:38.343: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 10.012208288s
Mar 13 18:40:40.344: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 12.012979324s
Mar 13 18:40:42.343: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Running", Reason="", readiness=true. Elapsed: 14.012030693s
Mar 13 18:40:42.343: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c" satisfied condition "running"
STEP: retrieving the pod 03/13/23 18:40:42.343
STEP: looking for the results for each expected name from probers 03/13/23 18:40:42.346
Mar 13 18:40:42.373: INFO: DNS probes using dns-2348/dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c succeeded

STEP: deleting the pod 03/13/23 18:40:42.373
STEP: deleting the test headless service 03/13/23 18:40:42.384
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar 13 18:40:42.392: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-2348" for this suite. 03/13/23 18:40:42.397
------------------------------
â€¢ [SLOW TEST] [14.101 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:40:28.304
    Mar 13 18:40:28.304: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename dns 03/13/23 18:40:28.305
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:28.314
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:28.317
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for pods for Hostname [Conformance]
      test/e2e/network/dns.go:248
    STEP: Creating a test headless service 03/13/23 18:40:28.319
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2348.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2348.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
     03/13/23 18:40:28.325
    STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2348.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2348.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
     03/13/23 18:40:28.325
    STEP: creating a pod to probe DNS 03/13/23 18:40:28.325
    STEP: submitting the pod to kubernetes 03/13/23 18:40:28.325
    Mar 13 18:40:28.331: INFO: Waiting up to 15m0s for pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c" in namespace "dns-2348" to be "running"
    Mar 13 18:40:28.338: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.829247ms
    Mar 13 18:40:30.353: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021388063s
    Mar 13 18:40:32.342: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010608571s
    Mar 13 18:40:34.344: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.013105587s
    Mar 13 18:40:36.343: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 8.011538628s
    Mar 13 18:40:38.343: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 10.012208288s
    Mar 13 18:40:40.344: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Pending", Reason="", readiness=false. Elapsed: 12.012979324s
    Mar 13 18:40:42.343: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c": Phase="Running", Reason="", readiness=true. Elapsed: 14.012030693s
    Mar 13 18:40:42.343: INFO: Pod "dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c" satisfied condition "running"
    STEP: retrieving the pod 03/13/23 18:40:42.343
    STEP: looking for the results for each expected name from probers 03/13/23 18:40:42.346
    Mar 13 18:40:42.373: INFO: DNS probes using dns-2348/dns-test-1b677235-d3b4-4878-b625-c5dee37bb32c succeeded

    STEP: deleting the pod 03/13/23 18:40:42.373
    STEP: deleting the test headless service 03/13/23 18:40:42.384
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:40:42.392: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-2348" for this suite. 03/13/23 18:40:42.397
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] Deployment
  should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:40:42.405
Mar 13 18:40:42.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename deployment 03/13/23 18:40:42.407
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:42.422
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:42.433
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479
STEP: creating a Deployment 03/13/23 18:40:42.451
Mar 13 18:40:42.451: INFO: Creating simple deployment test-deployment-wh49v
Mar 13 18:40:42.460: INFO: deployment "test-deployment-wh49v" doesn't have the required revision set
Mar 13 18:40:44.472: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-wh49v-54bc444df\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 18:40:46.477: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-wh49v-54bc444df\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Getting /status 03/13/23 18:40:48.478
Mar 13 18:40:48.485: INFO: Deployment test-deployment-wh49v has Conditions: [{Available True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wh49v-54bc444df" has successfully progressed.}]
STEP: updating Deployment Status 03/13/23 18:40:48.485
Mar 13 18:40:48.492: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 18, 40, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 18, 40, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 18, 40, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-wh49v-54bc444df\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated 03/13/23 18:40:48.492
Mar 13 18:40:48.494: INFO: Observed &Deployment event: ADDED
Mar 13 18:40:48.494: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wh49v-54bc444df"}
Mar 13 18:40:48.495: INFO: Observed &Deployment event: MODIFIED
Mar 13 18:40:48.495: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wh49v-54bc444df"}
Mar 13 18:40:48.495: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Mar 13 18:40:48.495: INFO: Observed &Deployment event: MODIFIED
Mar 13 18:40:48.496: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Mar 13 18:40:48.496: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-wh49v-54bc444df" is progressing.}
Mar 13 18:40:48.496: INFO: Observed &Deployment event: MODIFIED
Mar 13 18:40:48.496: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Mar 13 18:40:48.496: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wh49v-54bc444df" has successfully progressed.}
Mar 13 18:40:48.496: INFO: Observed &Deployment event: MODIFIED
Mar 13 18:40:48.496: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Mar 13 18:40:48.496: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wh49v-54bc444df" has successfully progressed.}
Mar 13 18:40:48.496: INFO: Found Deployment test-deployment-wh49v in namespace deployment-7309 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Mar 13 18:40:48.496: INFO: Deployment test-deployment-wh49v has an updated status
STEP: patching the Statefulset Status 03/13/23 18:40:48.496
Mar 13 18:40:48.497: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Mar 13 18:40:48.503: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched 03/13/23 18:40:48.503
Mar 13 18:40:48.505: INFO: Observed &Deployment event: ADDED
Mar 13 18:40:48.505: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wh49v-54bc444df"}
Mar 13 18:40:48.506: INFO: Observed &Deployment event: MODIFIED
Mar 13 18:40:48.506: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wh49v-54bc444df"}
Mar 13 18:40:48.506: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Mar 13 18:40:48.506: INFO: Observed &Deployment event: MODIFIED
Mar 13 18:40:48.506: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Mar 13 18:40:48.506: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-wh49v-54bc444df" is progressing.}
Mar 13 18:40:48.507: INFO: Observed &Deployment event: MODIFIED
Mar 13 18:40:48.507: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Mar 13 18:40:48.507: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wh49v-54bc444df" has successfully progressed.}
Mar 13 18:40:48.507: INFO: Observed &Deployment event: MODIFIED
Mar 13 18:40:48.507: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Mar 13 18:40:48.507: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wh49v-54bc444df" has successfully progressed.}
Mar 13 18:40:48.507: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Mar 13 18:40:48.507: INFO: Observed &Deployment event: MODIFIED
Mar 13 18:40:48.507: INFO: Found deployment test-deployment-wh49v in namespace deployment-7309 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Mar 13 18:40:48.507: INFO: Deployment test-deployment-wh49v has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar 13 18:40:48.510: INFO: Deployment "test-deployment-wh49v":
&Deployment{ObjectMeta:{test-deployment-wh49v  deployment-7309  7cca4d11-95dc-49c9-9ea2-6acaef307226 1317 1 2023-03-13 18:40:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-03-13 18:40:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-03-13 18:40:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2023-03-13 18:40:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002fe9e08 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-wh49v-54bc444df",LastUpdateTime:2023-03-13 18:40:48 +0000 UTC,LastTransitionTime:2023-03-13 18:40:48 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Mar 13 18:40:48.513: INFO: New ReplicaSet "test-deployment-wh49v-54bc444df" of Deployment "test-deployment-wh49v":
&ReplicaSet{ObjectMeta:{test-deployment-wh49v-54bc444df  deployment-7309  0aa0044c-179c-470f-9cac-8af9f243f74d 1313 1 2023-03-13 18:40:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-wh49v 7cca4d11-95dc-49c9-9ea2-6acaef307226 0xc002df6847 0xc002df6848}] [] [{kube-controller-manager Update apps/v1 2023-03-13 18:40:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7cca4d11-95dc-49c9-9ea2-6acaef307226\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 18:40:48 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 54bc444df,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002df68f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Mar 13 18:40:48.517: INFO: Pod "test-deployment-wh49v-54bc444df-n8kdg" is available:
&Pod{ObjectMeta:{test-deployment-wh49v-54bc444df-n8kdg test-deployment-wh49v-54bc444df- deployment-7309  960910b5-5a5d-48a0-9b18-de3e077b1fa8 1312 0 2023-03-13 18:40:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[cni.projectcalico.org/containerID:c54cb1212df0408a1563218311c560626175d96fe20ad2c75955fd60ee1ce00a cni.projectcalico.org/podIP:10.244.181.134/32 cni.projectcalico.org/podIPs:10.244.181.134/32,2001:db8:42:1f:e556:e398:18f3:c245/128] [{apps/v1 ReplicaSet test-deployment-wh49v-54bc444df 0aa0044c-179c-470f-9cac-8af9f243f74d 0xc0030f01d7 0xc0030f01d8}] [] [{kube-controller-manager Update v1 2023-03-13 18:40:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0aa0044c-179c-470f-9cac-8af9f243f74d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 18:40:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 18:40:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.134\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c245\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x7rzr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x7rzr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:40:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:40:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:40:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:40:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.134,StartTime:2023-03-13 18:40:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 18:40:47 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c403d4b50802d13fd11c85dfa7437159615fabcb46d811bfc3f753c95acf83ec,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.134,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c245,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar 13 18:40:48.517: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-7309" for this suite. 03/13/23 18:40:48.52
------------------------------
â€¢ [SLOW TEST] [6.119 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:40:42.405
    Mar 13 18:40:42.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename deployment 03/13/23 18:40:42.407
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:42.422
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:42.433
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] should validate Deployment Status endpoints [Conformance]
      test/e2e/apps/deployment.go:479
    STEP: creating a Deployment 03/13/23 18:40:42.451
    Mar 13 18:40:42.451: INFO: Creating simple deployment test-deployment-wh49v
    Mar 13 18:40:42.460: INFO: deployment "test-deployment-wh49v" doesn't have the required revision set
    Mar 13 18:40:44.472: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-wh49v-54bc444df\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 18:40:46.477: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-wh49v-54bc444df\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Getting /status 03/13/23 18:40:48.478
    Mar 13 18:40:48.485: INFO: Deployment test-deployment-wh49v has Conditions: [{Available True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wh49v-54bc444df" has successfully progressed.}]
    STEP: updating Deployment Status 03/13/23 18:40:48.485
    Mar 13 18:40:48.492: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 18, 40, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 18, 40, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 18, 40, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 18, 40, 42, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-wh49v-54bc444df\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the Deployment status to be updated 03/13/23 18:40:48.492
    Mar 13 18:40:48.494: INFO: Observed &Deployment event: ADDED
    Mar 13 18:40:48.494: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wh49v-54bc444df"}
    Mar 13 18:40:48.495: INFO: Observed &Deployment event: MODIFIED
    Mar 13 18:40:48.495: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wh49v-54bc444df"}
    Mar 13 18:40:48.495: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Mar 13 18:40:48.495: INFO: Observed &Deployment event: MODIFIED
    Mar 13 18:40:48.496: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Mar 13 18:40:48.496: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-wh49v-54bc444df" is progressing.}
    Mar 13 18:40:48.496: INFO: Observed &Deployment event: MODIFIED
    Mar 13 18:40:48.496: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Mar 13 18:40:48.496: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wh49v-54bc444df" has successfully progressed.}
    Mar 13 18:40:48.496: INFO: Observed &Deployment event: MODIFIED
    Mar 13 18:40:48.496: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Mar 13 18:40:48.496: INFO: Observed Deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wh49v-54bc444df" has successfully progressed.}
    Mar 13 18:40:48.496: INFO: Found Deployment test-deployment-wh49v in namespace deployment-7309 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Mar 13 18:40:48.496: INFO: Deployment test-deployment-wh49v has an updated status
    STEP: patching the Statefulset Status 03/13/23 18:40:48.496
    Mar 13 18:40:48.497: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Mar 13 18:40:48.503: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Deployment status to be patched 03/13/23 18:40:48.503
    Mar 13 18:40:48.505: INFO: Observed &Deployment event: ADDED
    Mar 13 18:40:48.505: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wh49v-54bc444df"}
    Mar 13 18:40:48.506: INFO: Observed &Deployment event: MODIFIED
    Mar 13 18:40:48.506: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wh49v-54bc444df"}
    Mar 13 18:40:48.506: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Mar 13 18:40:48.506: INFO: Observed &Deployment event: MODIFIED
    Mar 13 18:40:48.506: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Mar 13 18:40:48.506: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:42 +0000 UTC 2023-03-13 18:40:42 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-wh49v-54bc444df" is progressing.}
    Mar 13 18:40:48.507: INFO: Observed &Deployment event: MODIFIED
    Mar 13 18:40:48.507: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Mar 13 18:40:48.507: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wh49v-54bc444df" has successfully progressed.}
    Mar 13 18:40:48.507: INFO: Observed &Deployment event: MODIFIED
    Mar 13 18:40:48.507: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Mar 13 18:40:48.507: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-13 18:40:48 +0000 UTC 2023-03-13 18:40:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wh49v-54bc444df" has successfully progressed.}
    Mar 13 18:40:48.507: INFO: Observed deployment test-deployment-wh49v in namespace deployment-7309 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Mar 13 18:40:48.507: INFO: Observed &Deployment event: MODIFIED
    Mar 13 18:40:48.507: INFO: Found deployment test-deployment-wh49v in namespace deployment-7309 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
    Mar 13 18:40:48.507: INFO: Deployment test-deployment-wh49v has a patched status
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar 13 18:40:48.510: INFO: Deployment "test-deployment-wh49v":
    &Deployment{ObjectMeta:{test-deployment-wh49v  deployment-7309  7cca4d11-95dc-49c9-9ea2-6acaef307226 1317 1 2023-03-13 18:40:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-03-13 18:40:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-03-13 18:40:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2023-03-13 18:40:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002fe9e08 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-wh49v-54bc444df",LastUpdateTime:2023-03-13 18:40:48 +0000 UTC,LastTransitionTime:2023-03-13 18:40:48 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Mar 13 18:40:48.513: INFO: New ReplicaSet "test-deployment-wh49v-54bc444df" of Deployment "test-deployment-wh49v":
    &ReplicaSet{ObjectMeta:{test-deployment-wh49v-54bc444df  deployment-7309  0aa0044c-179c-470f-9cac-8af9f243f74d 1313 1 2023-03-13 18:40:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-wh49v 7cca4d11-95dc-49c9-9ea2-6acaef307226 0xc002df6847 0xc002df6848}] [] [{kube-controller-manager Update apps/v1 2023-03-13 18:40:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7cca4d11-95dc-49c9-9ea2-6acaef307226\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 18:40:48 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 54bc444df,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002df68f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Mar 13 18:40:48.517: INFO: Pod "test-deployment-wh49v-54bc444df-n8kdg" is available:
    &Pod{ObjectMeta:{test-deployment-wh49v-54bc444df-n8kdg test-deployment-wh49v-54bc444df- deployment-7309  960910b5-5a5d-48a0-9b18-de3e077b1fa8 1312 0 2023-03-13 18:40:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[cni.projectcalico.org/containerID:c54cb1212df0408a1563218311c560626175d96fe20ad2c75955fd60ee1ce00a cni.projectcalico.org/podIP:10.244.181.134/32 cni.projectcalico.org/podIPs:10.244.181.134/32,2001:db8:42:1f:e556:e398:18f3:c245/128] [{apps/v1 ReplicaSet test-deployment-wh49v-54bc444df 0aa0044c-179c-470f-9cac-8af9f243f74d 0xc0030f01d7 0xc0030f01d8}] [] [{kube-controller-manager Update v1 2023-03-13 18:40:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0aa0044c-179c-470f-9cac-8af9f243f74d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 18:40:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 18:40:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.134\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c245\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x7rzr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x7rzr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:40:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:40:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:40:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:40:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.134,StartTime:2023-03-13 18:40:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 18:40:47 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c403d4b50802d13fd11c85dfa7437159615fabcb46d811bfc3f753c95acf83ec,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.134,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c245,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:40:48.517: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-7309" for this suite. 03/13/23 18:40:48.52
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:40:48.528
Mar 13 18:40:48.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename replicaset 03/13/23 18:40:48.53
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:48.543
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:48.546
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111
Mar 13 18:40:48.548: INFO: Creating ReplicaSet my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529
Mar 13 18:40:48.554: INFO: Pod name my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529: Found 0 pods out of 1
Mar 13 18:40:53.563: INFO: Pod name my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529: Found 1 pods out of 1
Mar 13 18:40:53.563: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529" is running
Mar 13 18:40:53.563: INFO: Waiting up to 5m0s for pod "my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529-vhlx5" in namespace "replicaset-8219" to be "running"
Mar 13 18:40:53.578: INFO: Pod "my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529-vhlx5": Phase="Running", Reason="", readiness=true. Elapsed: 14.58925ms
Mar 13 18:40:53.583: INFO: Pod "my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529-vhlx5" satisfied condition "running"
Mar 13 18:40:53.584: INFO: Pod "my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529-vhlx5" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 18:40:48 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 18:40:50 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 18:40:50 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 18:40:48 +0000 UTC Reason: Message:}])
Mar 13 18:40:53.584: INFO: Trying to dial the pod
Mar 13 18:40:58.602: INFO: Controller my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529: Got expected result from replica 1 [my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529-vhlx5]: "my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529-vhlx5", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Mar 13 18:40:58.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-8219" for this suite. 03/13/23 18:40:58.606
------------------------------
â€¢ [SLOW TEST] [10.081 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:40:48.528
    Mar 13 18:40:48.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename replicaset 03/13/23 18:40:48.53
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:48.543
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:48.546
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should serve a basic image on each replica with a public image  [Conformance]
      test/e2e/apps/replica_set.go:111
    Mar 13 18:40:48.548: INFO: Creating ReplicaSet my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529
    Mar 13 18:40:48.554: INFO: Pod name my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529: Found 0 pods out of 1
    Mar 13 18:40:53.563: INFO: Pod name my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529: Found 1 pods out of 1
    Mar 13 18:40:53.563: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529" is running
    Mar 13 18:40:53.563: INFO: Waiting up to 5m0s for pod "my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529-vhlx5" in namespace "replicaset-8219" to be "running"
    Mar 13 18:40:53.578: INFO: Pod "my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529-vhlx5": Phase="Running", Reason="", readiness=true. Elapsed: 14.58925ms
    Mar 13 18:40:53.583: INFO: Pod "my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529-vhlx5" satisfied condition "running"
    Mar 13 18:40:53.584: INFO: Pod "my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529-vhlx5" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 18:40:48 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 18:40:50 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 18:40:50 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 18:40:48 +0000 UTC Reason: Message:}])
    Mar 13 18:40:53.584: INFO: Trying to dial the pod
    Mar 13 18:40:58.602: INFO: Controller my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529: Got expected result from replica 1 [my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529-vhlx5]: "my-hostname-basic-9970e234-d553-4d3e-bfe5-f30500ee9529-vhlx5", 1 of 1 required successes so far
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:40:58.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-8219" for this suite. 03/13/23 18:40:58.606
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases
  should write entries to /etc/hosts [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:148
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:40:58.624
Mar 13 18:40:58.624: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubelet-test 03/13/23 18:40:58.625
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:58.634
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:58.636
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should write entries to /etc/hosts [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:148
STEP: Waiting for pod completion 03/13/23 18:40:58.643
Mar 13 18:40:58.643: INFO: Waiting up to 3m0s for pod "agnhost-host-aliasese7bf06e2-8fc0-4f6a-a459-04e7cad295b4" in namespace "kubelet-test-3790" to be "completed"
Mar 13 18:40:58.646: INFO: Pod "agnhost-host-aliasese7bf06e2-8fc0-4f6a-a459-04e7cad295b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.467993ms
Mar 13 18:41:00.649: INFO: Pod "agnhost-host-aliasese7bf06e2-8fc0-4f6a-a459-04e7cad295b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005976914s
Mar 13 18:41:02.663: INFO: Pod "agnhost-host-aliasese7bf06e2-8fc0-4f6a-a459-04e7cad295b4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019814105s
Mar 13 18:41:02.663: INFO: Pod "agnhost-host-aliasese7bf06e2-8fc0-4f6a-a459-04e7cad295b4" satisfied condition "completed"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Mar 13 18:41:02.677: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-3790" for this suite. 03/13/23 18:41:02.686
------------------------------
â€¢ [4.071 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling an agnhost Pod with hostAliases
  test/e2e/common/node/kubelet.go:140
    should write entries to /etc/hosts [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:148

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:40:58.624
    Mar 13 18:40:58.624: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubelet-test 03/13/23 18:40:58.625
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:40:58.634
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:40:58.636
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should write entries to /etc/hosts [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:148
    STEP: Waiting for pod completion 03/13/23 18:40:58.643
    Mar 13 18:40:58.643: INFO: Waiting up to 3m0s for pod "agnhost-host-aliasese7bf06e2-8fc0-4f6a-a459-04e7cad295b4" in namespace "kubelet-test-3790" to be "completed"
    Mar 13 18:40:58.646: INFO: Pod "agnhost-host-aliasese7bf06e2-8fc0-4f6a-a459-04e7cad295b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.467993ms
    Mar 13 18:41:00.649: INFO: Pod "agnhost-host-aliasese7bf06e2-8fc0-4f6a-a459-04e7cad295b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005976914s
    Mar 13 18:41:02.663: INFO: Pod "agnhost-host-aliasese7bf06e2-8fc0-4f6a-a459-04e7cad295b4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019814105s
    Mar 13 18:41:02.663: INFO: Pod "agnhost-host-aliasese7bf06e2-8fc0-4f6a-a459-04e7cad295b4" satisfied condition "completed"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:41:02.677: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-3790" for this suite. 03/13/23 18:41:02.686
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:41:02.698
Mar 13 18:41:02.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename crd-webhook 03/13/23 18:41:02.699
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:41:02.732
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:41:02.738
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert 03/13/23 18:41:02.745
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 03/13/23 18:41:03.341
STEP: Deploying the custom resource conversion webhook pod 03/13/23 18:41:03.363
STEP: Wait for the deployment to be ready 03/13/23 18:41:03.418
Mar 13 18:41:03.447: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/13/23 18:41:05.468
STEP: Verifying the service has paired with the endpoint 03/13/23 18:41:05.502
Mar 13 18:41:06.503: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149
Mar 13 18:41:06.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Creating a v1 custom resource 03/13/23 18:41:09.207
STEP: v2 custom resource should be converted 03/13/23 18:41:09.213
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 18:41:09.743: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-webhook-931" for this suite. 03/13/23 18:41:09.826
------------------------------
â€¢ [SLOW TEST] [7.137 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:41:02.698
    Mar 13 18:41:02.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename crd-webhook 03/13/23 18:41:02.699
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:41:02.732
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:41:02.738
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:128
    STEP: Setting up server cert 03/13/23 18:41:02.745
    STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 03/13/23 18:41:03.341
    STEP: Deploying the custom resource conversion webhook pod 03/13/23 18:41:03.363
    STEP: Wait for the deployment to be ready 03/13/23 18:41:03.418
    Mar 13 18:41:03.447: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/13/23 18:41:05.468
    STEP: Verifying the service has paired with the endpoint 03/13/23 18:41:05.502
    Mar 13 18:41:06.503: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
    [It] should be able to convert from CR v1 to CR v2 [Conformance]
      test/e2e/apimachinery/crd_conversion_webhook.go:149
    Mar 13 18:41:06.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Creating a v1 custom resource 03/13/23 18:41:09.207
    STEP: v2 custom resource should be converted 03/13/23 18:41:09.213
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:41:09.743: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:139
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-webhook-931" for this suite. 03/13/23 18:41:09.826
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] Secrets
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:41:09.835
Mar 13 18:41:09.835: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename secrets 03/13/23 18:41:09.836
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:41:09.881
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:41:09.895
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99
STEP: Creating secret with name secret-test-98af37de-b168-472f-ba9a-77ef060e598f 03/13/23 18:41:10.035
STEP: Creating a pod to test consume secrets 03/13/23 18:41:10.064
Mar 13 18:41:10.097: INFO: Waiting up to 5m0s for pod "pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9" in namespace "secrets-4212" to be "Succeeded or Failed"
Mar 13 18:41:10.111: INFO: Pod "pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9": Phase="Pending", Reason="", readiness=false. Elapsed: 14.003972ms
Mar 13 18:41:12.123: INFO: Pod "pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025565055s
Mar 13 18:41:14.115: INFO: Pod "pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018364489s
STEP: Saw pod success 03/13/23 18:41:14.115
Mar 13 18:41:14.116: INFO: Pod "pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9" satisfied condition "Succeeded or Failed"
Mar 13 18:41:14.119: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9 container secret-volume-test: <nil>
STEP: delete the pod 03/13/23 18:41:14.142
Mar 13 18:41:14.160: INFO: Waiting for pod pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9 to disappear
Mar 13 18:41:14.165: INFO: Pod pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar 13 18:41:14.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4212" for this suite. 03/13/23 18:41:14.173
STEP: Destroying namespace "secret-namespace-3545" for this suite. 03/13/23 18:41:14.18
------------------------------
â€¢ [4.352 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:41:09.835
    Mar 13 18:41:09.835: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename secrets 03/13/23 18:41:09.836
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:41:09.881
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:41:09.895
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:99
    STEP: Creating secret with name secret-test-98af37de-b168-472f-ba9a-77ef060e598f 03/13/23 18:41:10.035
    STEP: Creating a pod to test consume secrets 03/13/23 18:41:10.064
    Mar 13 18:41:10.097: INFO: Waiting up to 5m0s for pod "pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9" in namespace "secrets-4212" to be "Succeeded or Failed"
    Mar 13 18:41:10.111: INFO: Pod "pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9": Phase="Pending", Reason="", readiness=false. Elapsed: 14.003972ms
    Mar 13 18:41:12.123: INFO: Pod "pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025565055s
    Mar 13 18:41:14.115: INFO: Pod "pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018364489s
    STEP: Saw pod success 03/13/23 18:41:14.115
    Mar 13 18:41:14.116: INFO: Pod "pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9" satisfied condition "Succeeded or Failed"
    Mar 13 18:41:14.119: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9 container secret-volume-test: <nil>
    STEP: delete the pod 03/13/23 18:41:14.142
    Mar 13 18:41:14.160: INFO: Waiting for pod pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9 to disappear
    Mar 13 18:41:14.165: INFO: Pod pod-secrets-f87b25a5-4cde-47f4-bdfd-35df508d0cd9 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:41:14.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4212" for this suite. 03/13/23 18:41:14.173
    STEP: Destroying namespace "secret-namespace-3545" for this suite. 03/13/23 18:41:14.18
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:58
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:41:14.19
Mar 13 18:41:14.190: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename custom-resource-definition 03/13/23 18:41:14.191
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:41:14.208
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:41:14.218
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:58
Mar 13 18:41:14.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 18:41:15.262: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-8200" for this suite. 03/13/23 18:41:15.267
------------------------------
â€¢ [1.083 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    creating/deleting custom resource definition objects works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:58

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:41:14.19
    Mar 13 18:41:14.190: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename custom-resource-definition 03/13/23 18:41:14.191
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:41:14.208
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:41:14.218
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] creating/deleting custom resource definition objects works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:58
    Mar 13 18:41:14.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:41:15.262: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-8200" for this suite. 03/13/23 18:41:15.267
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:41:15.276
Mar 13 18:41:15.276: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename endpointslice 03/13/23 18:41:15.277
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:41:15.286
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:41:15.289
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353
STEP: getting /apis 03/13/23 18:41:15.296
STEP: getting /apis/discovery.k8s.io 03/13/23 18:41:15.301
STEP: getting /apis/discovery.k8s.iov1 03/13/23 18:41:15.303
STEP: creating 03/13/23 18:41:15.304
STEP: getting 03/13/23 18:41:15.323
STEP: listing 03/13/23 18:41:15.326
STEP: watching 03/13/23 18:41:15.329
Mar 13 18:41:15.329: INFO: starting watch
STEP: cluster-wide listing 03/13/23 18:41:15.33
STEP: cluster-wide watching 03/13/23 18:41:15.334
Mar 13 18:41:15.334: INFO: starting watch
STEP: patching 03/13/23 18:41:15.336
STEP: updating 03/13/23 18:41:15.341
Mar 13 18:41:15.348: INFO: waiting for watch events with expected annotations
Mar 13 18:41:15.349: INFO: saw patched and updated annotations
STEP: deleting 03/13/23 18:41:15.349
STEP: deleting a collection 03/13/23 18:41:15.357
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Mar 13 18:41:15.366: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-6100" for this suite. 03/13/23 18:41:15.369
------------------------------
â€¢ [0.097 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:41:15.276
    Mar 13 18:41:15.276: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename endpointslice 03/13/23 18:41:15.277
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:41:15.286
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:41:15.289
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should support creating EndpointSlice API operations [Conformance]
      test/e2e/network/endpointslice.go:353
    STEP: getting /apis 03/13/23 18:41:15.296
    STEP: getting /apis/discovery.k8s.io 03/13/23 18:41:15.301
    STEP: getting /apis/discovery.k8s.iov1 03/13/23 18:41:15.303
    STEP: creating 03/13/23 18:41:15.304
    STEP: getting 03/13/23 18:41:15.323
    STEP: listing 03/13/23 18:41:15.326
    STEP: watching 03/13/23 18:41:15.329
    Mar 13 18:41:15.329: INFO: starting watch
    STEP: cluster-wide listing 03/13/23 18:41:15.33
    STEP: cluster-wide watching 03/13/23 18:41:15.334
    Mar 13 18:41:15.334: INFO: starting watch
    STEP: patching 03/13/23 18:41:15.336
    STEP: updating 03/13/23 18:41:15.341
    Mar 13 18:41:15.348: INFO: waiting for watch events with expected annotations
    Mar 13 18:41:15.349: INFO: saw patched and updated annotations
    STEP: deleting 03/13/23 18:41:15.349
    STEP: deleting a collection 03/13/23 18:41:15.357
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:41:15.366: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-6100" for this suite. 03/13/23 18:41:15.369
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] Services
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:41:15.375
Mar 13 18:41:15.375: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 18:41:15.376
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:41:15.385
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:41:15.388
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250
STEP: creating service in namespace services-2165 03/13/23 18:41:15.391
STEP: creating service affinity-nodeport-transition in namespace services-2165 03/13/23 18:41:15.391
STEP: creating replication controller affinity-nodeport-transition in namespace services-2165 03/13/23 18:41:15.402
I0313 18:41:15.410387      21 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-2165, replica count: 3
I0313 18:41:18.462394      21 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0313 18:41:21.462669      21 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar 13 18:41:21.472: INFO: Creating new exec pod
Mar 13 18:41:21.476: INFO: Waiting up to 5m0s for pod "execpod-affinitydkqjg" in namespace "services-2165" to be "running"
Mar 13 18:41:21.479: INFO: Pod "execpod-affinitydkqjg": Phase="Pending", Reason="", readiness=false. Elapsed: 2.724794ms
Mar 13 18:41:23.484: INFO: Pod "execpod-affinitydkqjg": Phase="Running", Reason="", readiness=true. Elapsed: 2.007997163s
Mar 13 18:41:23.484: INFO: Pod "execpod-affinitydkqjg" satisfied condition "running"
Mar 13 18:41:24.489: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-2165 exec execpod-affinitydkqjg -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport-transition 80'
Mar 13 18:41:24.683: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Mar 13 18:41:24.683: INFO: stdout: ""
Mar 13 18:41:24.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-2165 exec execpod-affinitydkqjg -- /bin/sh -x -c nc -v -z -w 2 10.97.176.116 80'
Mar 13 18:41:24.861: INFO: stderr: "+ nc -v -z -w 2 10.97.176.116 80\nConnection to 10.97.176.116 80 port [tcp/http] succeeded!\n"
Mar 13 18:41:24.861: INFO: stdout: ""
Mar 13 18:41:24.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-2165 exec execpod-affinitydkqjg -- /bin/sh -x -c nc -v -z -w 2 10.1.96.5 31413'
Mar 13 18:41:25.052: INFO: stderr: "+ nc -v -z -w 2 10.1.96.5 31413\nConnection to 10.1.96.5 31413 port [tcp/*] succeeded!\n"
Mar 13 18:41:25.052: INFO: stdout: ""
Mar 13 18:41:25.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-2165 exec execpod-affinitydkqjg -- /bin/sh -x -c nc -v -z -w 2 10.1.96.4 31413'
Mar 13 18:41:25.229: INFO: stderr: "+ nc -v -z -w 2 10.1.96.4 31413\nConnection to 10.1.96.4 31413 port [tcp/*] succeeded!\n"
Mar 13 18:41:25.229: INFO: stdout: ""
Mar 13 18:41:25.238: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-2165 exec execpod-affinitydkqjg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.1.96.5:31413/ ; done'
Mar 13 18:41:25.526: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n"
Mar 13 18:41:25.526: INFO: stdout: "\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-6ftdc\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-6ftdc\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-6ftdc\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-6ftdc"
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-6ftdc
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-6ftdc
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-6ftdc
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-6ftdc
Mar 13 18:41:25.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-2165 exec execpod-affinitydkqjg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.1.96.5:31413/ ; done'
Mar 13 18:41:25.842: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n"
Mar 13 18:41:25.842: INFO: stdout: "\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld"
Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
Mar 13 18:41:25.843: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2165, will wait for the garbage collector to delete the pods 03/13/23 18:41:25.864
Mar 13 18:41:25.928: INFO: Deleting ReplicationController affinity-nodeport-transition took: 5.172027ms
Mar 13 18:41:26.029: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.163393ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 18:41:28.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-2165" for this suite. 03/13/23 18:41:28.348
------------------------------
â€¢ [SLOW TEST] [12.977 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:41:15.375
    Mar 13 18:41:15.375: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 18:41:15.376
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:41:15.385
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:41:15.388
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2250
    STEP: creating service in namespace services-2165 03/13/23 18:41:15.391
    STEP: creating service affinity-nodeport-transition in namespace services-2165 03/13/23 18:41:15.391
    STEP: creating replication controller affinity-nodeport-transition in namespace services-2165 03/13/23 18:41:15.402
    I0313 18:41:15.410387      21 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-2165, replica count: 3
    I0313 18:41:18.462394      21 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0313 18:41:21.462669      21 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar 13 18:41:21.472: INFO: Creating new exec pod
    Mar 13 18:41:21.476: INFO: Waiting up to 5m0s for pod "execpod-affinitydkqjg" in namespace "services-2165" to be "running"
    Mar 13 18:41:21.479: INFO: Pod "execpod-affinitydkqjg": Phase="Pending", Reason="", readiness=false. Elapsed: 2.724794ms
    Mar 13 18:41:23.484: INFO: Pod "execpod-affinitydkqjg": Phase="Running", Reason="", readiness=true. Elapsed: 2.007997163s
    Mar 13 18:41:23.484: INFO: Pod "execpod-affinitydkqjg" satisfied condition "running"
    Mar 13 18:41:24.489: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-2165 exec execpod-affinitydkqjg -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport-transition 80'
    Mar 13 18:41:24.683: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
    Mar 13 18:41:24.683: INFO: stdout: ""
    Mar 13 18:41:24.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-2165 exec execpod-affinitydkqjg -- /bin/sh -x -c nc -v -z -w 2 10.97.176.116 80'
    Mar 13 18:41:24.861: INFO: stderr: "+ nc -v -z -w 2 10.97.176.116 80\nConnection to 10.97.176.116 80 port [tcp/http] succeeded!\n"
    Mar 13 18:41:24.861: INFO: stdout: ""
    Mar 13 18:41:24.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-2165 exec execpod-affinitydkqjg -- /bin/sh -x -c nc -v -z -w 2 10.1.96.5 31413'
    Mar 13 18:41:25.052: INFO: stderr: "+ nc -v -z -w 2 10.1.96.5 31413\nConnection to 10.1.96.5 31413 port [tcp/*] succeeded!\n"
    Mar 13 18:41:25.052: INFO: stdout: ""
    Mar 13 18:41:25.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-2165 exec execpod-affinitydkqjg -- /bin/sh -x -c nc -v -z -w 2 10.1.96.4 31413'
    Mar 13 18:41:25.229: INFO: stderr: "+ nc -v -z -w 2 10.1.96.4 31413\nConnection to 10.1.96.4 31413 port [tcp/*] succeeded!\n"
    Mar 13 18:41:25.229: INFO: stdout: ""
    Mar 13 18:41:25.238: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-2165 exec execpod-affinitydkqjg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.1.96.5:31413/ ; done'
    Mar 13 18:41:25.526: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n"
    Mar 13 18:41:25.526: INFO: stdout: "\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-6ftdc\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-6ftdc\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-6ftdc\naffinity-nodeport-transition-kbnw6\naffinity-nodeport-transition-6ftdc"
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-6ftdc
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-6ftdc
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-6ftdc
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-kbnw6
    Mar 13 18:41:25.526: INFO: Received response from host: affinity-nodeport-transition-6ftdc
    Mar 13 18:41:25.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-2165 exec execpod-affinitydkqjg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.1.96.5:31413/ ; done'
    Mar 13 18:41:25.842: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:31413/\n"
    Mar 13 18:41:25.842: INFO: stdout: "\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld\naffinity-nodeport-transition-cwmld"
    Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.842: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.843: INFO: Received response from host: affinity-nodeport-transition-cwmld
    Mar 13 18:41:25.843: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2165, will wait for the garbage collector to delete the pods 03/13/23 18:41:25.864
    Mar 13 18:41:25.928: INFO: Deleting ReplicationController affinity-nodeport-transition took: 5.172027ms
    Mar 13 18:41:26.029: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.163393ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:41:28.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-2165" for this suite. 03/13/23 18:41:28.348
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:41:28.356
Mar 13 18:41:28.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename var-expansion 03/13/23 18:41:28.357
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:41:28.366
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:41:28.369
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297
STEP: creating the pod 03/13/23 18:41:28.374
STEP: waiting for pod running 03/13/23 18:41:28.381
Mar 13 18:41:28.381: INFO: Waiting up to 2m0s for pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230" in namespace "var-expansion-1825" to be "running"
Mar 13 18:41:28.383: INFO: Pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230": Phase="Pending", Reason="", readiness=false. Elapsed: 2.31536ms
Mar 13 18:41:30.388: INFO: Pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230": Phase="Running", Reason="", readiness=true. Elapsed: 2.006642408s
Mar 13 18:41:30.388: INFO: Pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230" satisfied condition "running"
STEP: creating a file in subpath 03/13/23 18:41:30.388
Mar 13 18:41:30.391: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1825 PodName:var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 18:41:30.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 18:41:30.392: INFO: ExecWithOptions: Clientset creation
Mar 13 18:41:30.392: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-1825/pods/var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path 03/13/23 18:41:30.508
Mar 13 18:41:30.515: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1825 PodName:var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 18:41:30.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 18:41:30.516: INFO: ExecWithOptions: Clientset creation
Mar 13 18:41:30.516: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-1825/pods/var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value 03/13/23 18:41:30.633
Mar 13 18:41:31.148: INFO: Successfully updated pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230"
STEP: waiting for annotated pod running 03/13/23 18:41:31.15
Mar 13 18:41:31.150: INFO: Waiting up to 2m0s for pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230" in namespace "var-expansion-1825" to be "running"
Mar 13 18:41:31.154: INFO: Pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230": Phase="Running", Reason="", readiness=true. Elapsed: 3.440876ms
Mar 13 18:41:31.154: INFO: Pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230" satisfied condition "running"
STEP: deleting the pod gracefully 03/13/23 18:41:31.154
Mar 13 18:41:31.155: INFO: Deleting pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230" in namespace "var-expansion-1825"
Mar 13 18:41:31.161: INFO: Wait up to 5m0s for pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar 13 18:42:05.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-1825" for this suite. 03/13/23 18:42:05.173
------------------------------
â€¢ [SLOW TEST] [36.830 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:41:28.356
    Mar 13 18:41:28.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename var-expansion 03/13/23 18:41:28.357
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:41:28.366
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:41:28.369
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should succeed in writing subpaths in container [Slow] [Conformance]
      test/e2e/common/node/expansion.go:297
    STEP: creating the pod 03/13/23 18:41:28.374
    STEP: waiting for pod running 03/13/23 18:41:28.381
    Mar 13 18:41:28.381: INFO: Waiting up to 2m0s for pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230" in namespace "var-expansion-1825" to be "running"
    Mar 13 18:41:28.383: INFO: Pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230": Phase="Pending", Reason="", readiness=false. Elapsed: 2.31536ms
    Mar 13 18:41:30.388: INFO: Pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230": Phase="Running", Reason="", readiness=true. Elapsed: 2.006642408s
    Mar 13 18:41:30.388: INFO: Pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230" satisfied condition "running"
    STEP: creating a file in subpath 03/13/23 18:41:30.388
    Mar 13 18:41:30.391: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1825 PodName:var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 18:41:30.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 18:41:30.392: INFO: ExecWithOptions: Clientset creation
    Mar 13 18:41:30.392: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-1825/pods/var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
    STEP: test for file in mounted path 03/13/23 18:41:30.508
    Mar 13 18:41:30.515: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1825 PodName:var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 18:41:30.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 18:41:30.516: INFO: ExecWithOptions: Clientset creation
    Mar 13 18:41:30.516: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-1825/pods/var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
    STEP: updating the annotation value 03/13/23 18:41:30.633
    Mar 13 18:41:31.148: INFO: Successfully updated pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230"
    STEP: waiting for annotated pod running 03/13/23 18:41:31.15
    Mar 13 18:41:31.150: INFO: Waiting up to 2m0s for pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230" in namespace "var-expansion-1825" to be "running"
    Mar 13 18:41:31.154: INFO: Pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230": Phase="Running", Reason="", readiness=true. Elapsed: 3.440876ms
    Mar 13 18:41:31.154: INFO: Pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230" satisfied condition "running"
    STEP: deleting the pod gracefully 03/13/23 18:41:31.154
    Mar 13 18:41:31.155: INFO: Deleting pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230" in namespace "var-expansion-1825"
    Mar 13 18:41:31.161: INFO: Wait up to 5m0s for pod "var-expansion-49e66dc7-afa6-4ab3-b134-fa0d5f27d230" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:42:05.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-1825" for this suite. 03/13/23 18:42:05.173
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:42:05.186
Mar 13 18:42:05.186: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename var-expansion 03/13/23 18:42:05.189
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:05.207
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:05.215
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112
STEP: Creating a pod to test substitution in volume subpath 03/13/23 18:42:05.228
Mar 13 18:42:05.238: INFO: Waiting up to 5m0s for pod "var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9" in namespace "var-expansion-8465" to be "Succeeded or Failed"
Mar 13 18:42:05.241: INFO: Pod "var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.964069ms
Mar 13 18:42:07.246: INFO: Pod "var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008619319s
Mar 13 18:42:09.246: INFO: Pod "var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008690133s
Mar 13 18:42:11.248: INFO: Pod "var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010271553s
STEP: Saw pod success 03/13/23 18:42:11.249
Mar 13 18:42:11.249: INFO: Pod "var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9" satisfied condition "Succeeded or Failed"
Mar 13 18:42:11.253: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9 container dapi-container: <nil>
STEP: delete the pod 03/13/23 18:42:11.264
Mar 13 18:42:11.274: INFO: Waiting for pod var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9 to disappear
Mar 13 18:42:11.279: INFO: Pod var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar 13 18:42:11.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-8465" for this suite. 03/13/23 18:42:11.284
------------------------------
â€¢ [SLOW TEST] [6.103 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:42:05.186
    Mar 13 18:42:05.186: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename var-expansion 03/13/23 18:42:05.189
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:05.207
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:05.215
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a volume subpath [Conformance]
      test/e2e/common/node/expansion.go:112
    STEP: Creating a pod to test substitution in volume subpath 03/13/23 18:42:05.228
    Mar 13 18:42:05.238: INFO: Waiting up to 5m0s for pod "var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9" in namespace "var-expansion-8465" to be "Succeeded or Failed"
    Mar 13 18:42:05.241: INFO: Pod "var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.964069ms
    Mar 13 18:42:07.246: INFO: Pod "var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008619319s
    Mar 13 18:42:09.246: INFO: Pod "var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008690133s
    Mar 13 18:42:11.248: INFO: Pod "var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010271553s
    STEP: Saw pod success 03/13/23 18:42:11.249
    Mar 13 18:42:11.249: INFO: Pod "var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9" satisfied condition "Succeeded or Failed"
    Mar 13 18:42:11.253: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9 container dapi-container: <nil>
    STEP: delete the pod 03/13/23 18:42:11.264
    Mar 13 18:42:11.274: INFO: Waiting for pod var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9 to disappear
    Mar 13 18:42:11.279: INFO: Pod var-expansion-4960d81e-f9aa-4b6b-be72-9e23010e6cc9 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:42:11.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-8465" for this suite. 03/13/23 18:42:11.284
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:42:11.291
Mar 13 18:42:11.292: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 18:42:11.294
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:11.321
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:11.326
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 18:42:11.347
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 18:42:12.051
STEP: Deploying the webhook pod 03/13/23 18:42:12.058
STEP: Wait for the deployment to be ready 03/13/23 18:42:12.071
Mar 13 18:42:12.087: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/13/23 18:42:14.096
STEP: Verifying the service has paired with the endpoint 03/13/23 18:42:14.103
Mar 13 18:42:15.103: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656
STEP: Listing all of the created validation webhooks 03/13/23 18:42:15.143
STEP: Creating a configMap that should be mutated 03/13/23 18:42:15.164
STEP: Deleting the collection of validation webhooks 03/13/23 18:42:15.212
STEP: Creating a configMap that should not be mutated 03/13/23 18:42:15.23
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 18:42:15.237: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-1248" for this suite. 03/13/23 18:42:15.26
STEP: Destroying namespace "webhook-1248-markers" for this suite. 03/13/23 18:42:15.274
------------------------------
â€¢ [3.993 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:42:11.291
    Mar 13 18:42:11.292: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 18:42:11.294
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:11.321
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:11.326
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 18:42:11.347
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 18:42:12.051
    STEP: Deploying the webhook pod 03/13/23 18:42:12.058
    STEP: Wait for the deployment to be ready 03/13/23 18:42:12.071
    Mar 13 18:42:12.087: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/13/23 18:42:14.096
    STEP: Verifying the service has paired with the endpoint 03/13/23 18:42:14.103
    Mar 13 18:42:15.103: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] listing mutating webhooks should work [Conformance]
      test/e2e/apimachinery/webhook.go:656
    STEP: Listing all of the created validation webhooks 03/13/23 18:42:15.143
    STEP: Creating a configMap that should be mutated 03/13/23 18:42:15.164
    STEP: Deleting the collection of validation webhooks 03/13/23 18:42:15.212
    STEP: Creating a configMap that should not be mutated 03/13/23 18:42:15.23
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:42:15.237: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-1248" for this suite. 03/13/23 18:42:15.26
    STEP: Destroying namespace "webhook-1248-markers" for this suite. 03/13/23 18:42:15.274
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:42:15.342
Mar 13 18:42:15.342: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 18:42:15.344
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:15.364
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:15.367
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119
STEP: Creating secret with name projected-secret-test-8c40d234-81c4-419b-a5b1-e043ebef376c 03/13/23 18:42:15.372
STEP: Creating a pod to test consume secrets 03/13/23 18:42:15.375
Mar 13 18:42:15.388: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b" in namespace "projected-4738" to be "Succeeded or Failed"
Mar 13 18:42:15.396: INFO: Pod "pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.775768ms
Mar 13 18:42:17.399: INFO: Pod "pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006036993s
Mar 13 18:42:19.401: INFO: Pod "pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008054326s
Mar 13 18:42:21.401: INFO: Pod "pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.007620876s
STEP: Saw pod success 03/13/23 18:42:21.401
Mar 13 18:42:21.402: INFO: Pod "pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b" satisfied condition "Succeeded or Failed"
Mar 13 18:42:21.405: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b container secret-volume-test: <nil>
STEP: delete the pod 03/13/23 18:42:21.412
Mar 13 18:42:21.419: INFO: Waiting for pod pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b to disappear
Mar 13 18:42:21.422: INFO: Pod pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar 13 18:42:21.423: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4738" for this suite. 03/13/23 18:42:21.426
------------------------------
â€¢ [SLOW TEST] [6.090 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:42:15.342
    Mar 13 18:42:15.342: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 18:42:15.344
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:15.364
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:15.367
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:119
    STEP: Creating secret with name projected-secret-test-8c40d234-81c4-419b-a5b1-e043ebef376c 03/13/23 18:42:15.372
    STEP: Creating a pod to test consume secrets 03/13/23 18:42:15.375
    Mar 13 18:42:15.388: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b" in namespace "projected-4738" to be "Succeeded or Failed"
    Mar 13 18:42:15.396: INFO: Pod "pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.775768ms
    Mar 13 18:42:17.399: INFO: Pod "pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006036993s
    Mar 13 18:42:19.401: INFO: Pod "pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008054326s
    Mar 13 18:42:21.401: INFO: Pod "pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.007620876s
    STEP: Saw pod success 03/13/23 18:42:21.401
    Mar 13 18:42:21.402: INFO: Pod "pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b" satisfied condition "Succeeded or Failed"
    Mar 13 18:42:21.405: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b container secret-volume-test: <nil>
    STEP: delete the pod 03/13/23 18:42:21.412
    Mar 13 18:42:21.419: INFO: Waiting for pod pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b to disappear
    Mar 13 18:42:21.422: INFO: Pod pod-projected-secrets-c051d161-2a8b-4dd5-86cb-0d808b4e605b no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:42:21.423: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4738" for this suite. 03/13/23 18:42:21.426
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:42:21.435
Mar 13 18:42:21.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 18:42:21.437
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:21.448
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:21.452
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4630 03/13/23 18:42:21.455
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 03/13/23 18:42:21.468
STEP: creating service externalsvc in namespace services-4630 03/13/23 18:42:21.47
STEP: creating replication controller externalsvc in namespace services-4630 03/13/23 18:42:21.478
I0313 18:42:21.487839      21 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4630, replica count: 2
I0313 18:42:24.539201      21 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName 03/13/23 18:42:24.542
Mar 13 18:42:24.553: INFO: Creating new exec pod
Mar 13 18:42:24.557: INFO: Waiting up to 5m0s for pod "execpodwp8tl" in namespace "services-4630" to be "running"
Mar 13 18:42:24.563: INFO: Pod "execpodwp8tl": Phase="Pending", Reason="", readiness=false. Elapsed: 6.014581ms
Mar 13 18:42:26.567: INFO: Pod "execpodwp8tl": Phase="Running", Reason="", readiness=true. Elapsed: 2.01007026s
Mar 13 18:42:26.567: INFO: Pod "execpodwp8tl" satisfied condition "running"
Mar 13 18:42:26.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4630 exec execpodwp8tl -- /bin/sh -x -c nslookup clusterip-service.services-4630.svc.cluster.local'
Mar 13 18:42:26.765: INFO: stderr: "+ nslookup clusterip-service.services-4630.svc.cluster.local\n"
Mar 13 18:42:26.765: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-4630.svc.cluster.local\tcanonical name = externalsvc.services-4630.svc.cluster.local.\nName:\texternalsvc.services-4630.svc.cluster.local\nAddress: 10.107.11.96\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-4630, will wait for the garbage collector to delete the pods 03/13/23 18:42:26.765
Mar 13 18:42:26.826: INFO: Deleting ReplicationController externalsvc took: 6.165987ms
Mar 13 18:42:26.927: INFO: Terminating ReplicationController externalsvc pods took: 101.114838ms
Mar 13 18:42:29.036: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 18:42:29.042: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-4630" for this suite. 03/13/23 18:42:29.046
------------------------------
â€¢ [SLOW TEST] [7.616 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:42:21.435
    Mar 13 18:42:21.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 18:42:21.437
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:21.448
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:21.452
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ClusterIP to ExternalName [Conformance]
      test/e2e/network/service.go:1515
    STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4630 03/13/23 18:42:21.455
    STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 03/13/23 18:42:21.468
    STEP: creating service externalsvc in namespace services-4630 03/13/23 18:42:21.47
    STEP: creating replication controller externalsvc in namespace services-4630 03/13/23 18:42:21.478
    I0313 18:42:21.487839      21 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4630, replica count: 2
    I0313 18:42:24.539201      21 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    STEP: changing the ClusterIP service to type=ExternalName 03/13/23 18:42:24.542
    Mar 13 18:42:24.553: INFO: Creating new exec pod
    Mar 13 18:42:24.557: INFO: Waiting up to 5m0s for pod "execpodwp8tl" in namespace "services-4630" to be "running"
    Mar 13 18:42:24.563: INFO: Pod "execpodwp8tl": Phase="Pending", Reason="", readiness=false. Elapsed: 6.014581ms
    Mar 13 18:42:26.567: INFO: Pod "execpodwp8tl": Phase="Running", Reason="", readiness=true. Elapsed: 2.01007026s
    Mar 13 18:42:26.567: INFO: Pod "execpodwp8tl" satisfied condition "running"
    Mar 13 18:42:26.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4630 exec execpodwp8tl -- /bin/sh -x -c nslookup clusterip-service.services-4630.svc.cluster.local'
    Mar 13 18:42:26.765: INFO: stderr: "+ nslookup clusterip-service.services-4630.svc.cluster.local\n"
    Mar 13 18:42:26.765: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-4630.svc.cluster.local\tcanonical name = externalsvc.services-4630.svc.cluster.local.\nName:\texternalsvc.services-4630.svc.cluster.local\nAddress: 10.107.11.96\n\n"
    STEP: deleting ReplicationController externalsvc in namespace services-4630, will wait for the garbage collector to delete the pods 03/13/23 18:42:26.765
    Mar 13 18:42:26.826: INFO: Deleting ReplicationController externalsvc took: 6.165987ms
    Mar 13 18:42:26.927: INFO: Terminating ReplicationController externalsvc pods took: 101.114838ms
    Mar 13 18:42:29.036: INFO: Cleaning up the ClusterIP to ExternalName test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:42:29.042: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-4630" for this suite. 03/13/23 18:42:29.046
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:42:29.051
Mar 13 18:42:29.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename watch 03/13/23 18:42:29.053
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:29.061
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:29.064
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191
STEP: creating a watch on configmaps 03/13/23 18:42:29.069
STEP: creating a new configmap 03/13/23 18:42:29.07
STEP: modifying the configmap once 03/13/23 18:42:29.073
STEP: closing the watch once it receives two notifications 03/13/23 18:42:29.077
Mar 13 18:42:29.078: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3459  2a3d8c6c-5b1b-4122-b671-46f3701c10d1 2289 0 2023-03-13 18:42:29 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-13 18:42:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Mar 13 18:42:29.078: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3459  2a3d8c6c-5b1b-4122-b671-46f3701c10d1 2290 0 2023-03-13 18:42:29 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-13 18:42:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed 03/13/23 18:42:29.078
STEP: creating a new watch on configmaps from the last resource version observed by the first watch 03/13/23 18:42:29.083
STEP: deleting the configmap 03/13/23 18:42:29.084
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed 03/13/23 18:42:29.088
Mar 13 18:42:29.088: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3459  2a3d8c6c-5b1b-4122-b671-46f3701c10d1 2291 0 2023-03-13 18:42:29 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-13 18:42:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar 13 18:42:29.088: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3459  2a3d8c6c-5b1b-4122-b671-46f3701c10d1 2292 0 2023-03-13 18:42:29 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-13 18:42:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Mar 13 18:42:29.088: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-3459" for this suite. 03/13/23 18:42:29.092
------------------------------
â€¢ [0.044 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:42:29.051
    Mar 13 18:42:29.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename watch 03/13/23 18:42:29.053
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:29.061
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:29.064
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
      test/e2e/apimachinery/watch.go:191
    STEP: creating a watch on configmaps 03/13/23 18:42:29.069
    STEP: creating a new configmap 03/13/23 18:42:29.07
    STEP: modifying the configmap once 03/13/23 18:42:29.073
    STEP: closing the watch once it receives two notifications 03/13/23 18:42:29.077
    Mar 13 18:42:29.078: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3459  2a3d8c6c-5b1b-4122-b671-46f3701c10d1 2289 0 2023-03-13 18:42:29 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-13 18:42:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar 13 18:42:29.078: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3459  2a3d8c6c-5b1b-4122-b671-46f3701c10d1 2290 0 2023-03-13 18:42:29 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-13 18:42:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying the configmap a second time, while the watch is closed 03/13/23 18:42:29.078
    STEP: creating a new watch on configmaps from the last resource version observed by the first watch 03/13/23 18:42:29.083
    STEP: deleting the configmap 03/13/23 18:42:29.084
    STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed 03/13/23 18:42:29.088
    Mar 13 18:42:29.088: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3459  2a3d8c6c-5b1b-4122-b671-46f3701c10d1 2291 0 2023-03-13 18:42:29 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-13 18:42:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar 13 18:42:29.088: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3459  2a3d8c6c-5b1b-4122-b671-46f3701c10d1 2292 0 2023-03-13 18:42:29 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-13 18:42:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:42:29.088: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-3459" for this suite. 03/13/23 18:42:29.092
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:105
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:42:29.105
Mar 13 18:42:29.105: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pod-network-test 03/13/23 18:42:29.106
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:29.115
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:29.118
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:105
STEP: Performing setup for networking test in namespace pod-network-test-9608 03/13/23 18:42:29.121
STEP: creating a selector 03/13/23 18:42:29.121
STEP: Creating the service pods in kubernetes 03/13/23 18:42:29.121
Mar 13 18:42:29.121: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Mar 13 18:42:29.138: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-9608" to be "running and ready"
Mar 13 18:42:29.143: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.835788ms
Mar 13 18:42:29.143: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 18:42:31.152: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.013627933s
Mar 13 18:42:31.152: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 18:42:33.152: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.01401646s
Mar 13 18:42:33.152: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 18:42:35.153: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.015073542s
Mar 13 18:42:35.153: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 18:42:37.153: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.014947864s
Mar 13 18:42:37.153: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 18:42:39.152: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.013890384s
Mar 13 18:42:39.152: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 18:42:41.152: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.013802613s
Mar 13 18:42:41.152: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Mar 13 18:42:41.152: INFO: Pod "netserver-0" satisfied condition "running and ready"
Mar 13 18:42:41.154: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-9608" to be "running and ready"
Mar 13 18:42:41.156: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 1.731774ms
Mar 13 18:42:41.156: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Mar 13 18:42:41.156: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 03/13/23 18:42:41.158
Mar 13 18:42:41.166: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-9608" to be "running"
Mar 13 18:42:41.169: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.334265ms
Mar 13 18:42:43.175: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008870622s
Mar 13 18:42:43.175: INFO: Pod "test-container-pod" satisfied condition "running"
Mar 13 18:42:43.178: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-9608" to be "running"
Mar 13 18:42:43.180: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.441494ms
Mar 13 18:42:43.180: INFO: Pod "host-test-container-pod" satisfied condition "running"
Mar 13 18:42:43.184: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Mar 13 18:42:43.184: INFO: Going to poll 10.244.181.148 on port 8083 at least 0 times, with a maximum of 34 tries before failing
Mar 13 18:42:43.187: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.181.148:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9608 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 18:42:43.187: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 18:42:43.189: INFO: ExecWithOptions: Clientset creation
Mar 13 18:42:43.189: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9608/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.181.148%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Mar 13 18:42:43.289: INFO: Found all 1 expected endpoints: [netserver-0]
Mar 13 18:42:43.289: INFO: Going to poll 10.244.40.200 on port 8083 at least 0 times, with a maximum of 34 tries before failing
Mar 13 18:42:43.292: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.40.200:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9608 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 18:42:43.292: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 18:42:43.293: INFO: ExecWithOptions: Clientset creation
Mar 13 18:42:43.293: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9608/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.40.200%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Mar 13 18:42:43.369: INFO: Found all 1 expected endpoints: [netserver-1]
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Mar 13 18:42:43.369: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-9608" for this suite. 03/13/23 18:42:43.373
------------------------------
â€¢ [SLOW TEST] [14.273 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:105

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:42:29.105
    Mar 13 18:42:29.105: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pod-network-test 03/13/23 18:42:29.106
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:29.115
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:29.118
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:105
    STEP: Performing setup for networking test in namespace pod-network-test-9608 03/13/23 18:42:29.121
    STEP: creating a selector 03/13/23 18:42:29.121
    STEP: Creating the service pods in kubernetes 03/13/23 18:42:29.121
    Mar 13 18:42:29.121: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Mar 13 18:42:29.138: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-9608" to be "running and ready"
    Mar 13 18:42:29.143: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.835788ms
    Mar 13 18:42:29.143: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 18:42:31.152: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.013627933s
    Mar 13 18:42:31.152: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 18:42:33.152: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.01401646s
    Mar 13 18:42:33.152: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 18:42:35.153: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.015073542s
    Mar 13 18:42:35.153: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 18:42:37.153: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.014947864s
    Mar 13 18:42:37.153: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 18:42:39.152: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.013890384s
    Mar 13 18:42:39.152: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 18:42:41.152: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.013802613s
    Mar 13 18:42:41.152: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Mar 13 18:42:41.152: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Mar 13 18:42:41.154: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-9608" to be "running and ready"
    Mar 13 18:42:41.156: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 1.731774ms
    Mar 13 18:42:41.156: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Mar 13 18:42:41.156: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 03/13/23 18:42:41.158
    Mar 13 18:42:41.166: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-9608" to be "running"
    Mar 13 18:42:41.169: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.334265ms
    Mar 13 18:42:43.175: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008870622s
    Mar 13 18:42:43.175: INFO: Pod "test-container-pod" satisfied condition "running"
    Mar 13 18:42:43.178: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-9608" to be "running"
    Mar 13 18:42:43.180: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.441494ms
    Mar 13 18:42:43.180: INFO: Pod "host-test-container-pod" satisfied condition "running"
    Mar 13 18:42:43.184: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Mar 13 18:42:43.184: INFO: Going to poll 10.244.181.148 on port 8083 at least 0 times, with a maximum of 34 tries before failing
    Mar 13 18:42:43.187: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.181.148:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9608 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 18:42:43.187: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 18:42:43.189: INFO: ExecWithOptions: Clientset creation
    Mar 13 18:42:43.189: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9608/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.181.148%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Mar 13 18:42:43.289: INFO: Found all 1 expected endpoints: [netserver-0]
    Mar 13 18:42:43.289: INFO: Going to poll 10.244.40.200 on port 8083 at least 0 times, with a maximum of 34 tries before failing
    Mar 13 18:42:43.292: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.40.200:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9608 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 18:42:43.292: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 18:42:43.293: INFO: ExecWithOptions: Clientset creation
    Mar 13 18:42:43.293: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9608/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.40.200%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Mar 13 18:42:43.369: INFO: Found all 1 expected endpoints: [netserver-1]
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:42:43.369: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-9608" for this suite. 03/13/23 18:42:43.373
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:42:43.385
Mar 13 18:42:43.385: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename gc 03/13/23 18:42:43.386
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:43.395
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:43.398
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312
STEP: create the rc 03/13/23 18:42:43.402
STEP: delete the rc 03/13/23 18:42:48.408
STEP: wait for all pods to be garbage collected 03/13/23 18:42:48.411
STEP: Gathering metrics 03/13/23 18:42:53.417
W0313 18:42:53.423842      21 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Mar 13 18:42:53.423: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar 13 18:42:53.424: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-2222" for this suite. 03/13/23 18:42:53.427
------------------------------
â€¢ [SLOW TEST] [10.046 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:42:43.385
    Mar 13 18:42:43.385: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename gc 03/13/23 18:42:43.386
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:43.395
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:43.398
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete pods created by rc when not orphaning [Conformance]
      test/e2e/apimachinery/garbage_collector.go:312
    STEP: create the rc 03/13/23 18:42:43.402
    STEP: delete the rc 03/13/23 18:42:48.408
    STEP: wait for all pods to be garbage collected 03/13/23 18:42:48.411
    STEP: Gathering metrics 03/13/23 18:42:53.417
    W0313 18:42:53.423842      21 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Mar 13 18:42:53.423: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:42:53.424: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-2222" for this suite. 03/13/23 18:42:53.427
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes
  should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:42:53.434
Mar 13 18:42:53.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir-wrapper 03/13/23 18:42:53.436
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:53.443
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:53.446
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67
Mar 13 18:42:53.459: INFO: Waiting up to 5m0s for pod "pod-secrets-71287075-36d2-44ac-86a0-57d298653fb5" in namespace "emptydir-wrapper-5951" to be "running and ready"
Mar 13 18:42:53.462: INFO: Pod "pod-secrets-71287075-36d2-44ac-86a0-57d298653fb5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.416872ms
Mar 13 18:42:53.462: INFO: The phase of Pod pod-secrets-71287075-36d2-44ac-86a0-57d298653fb5 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 18:42:55.467: INFO: Pod "pod-secrets-71287075-36d2-44ac-86a0-57d298653fb5": Phase="Running", Reason="", readiness=true. Elapsed: 2.007519759s
Mar 13 18:42:55.467: INFO: The phase of Pod pod-secrets-71287075-36d2-44ac-86a0-57d298653fb5 is Running (Ready = true)
Mar 13 18:42:55.467: INFO: Pod "pod-secrets-71287075-36d2-44ac-86a0-57d298653fb5" satisfied condition "running and ready"
STEP: Cleaning up the secret 03/13/23 18:42:55.469
STEP: Cleaning up the configmap 03/13/23 18:42:55.472
STEP: Cleaning up the pod 03/13/23 18:42:55.476
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 18:42:55.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-wrapper-5951" for this suite. 03/13/23 18:42:55.492
------------------------------
â€¢ [2.066 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:42:53.434
    Mar 13 18:42:53.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir-wrapper 03/13/23 18:42:53.436
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:53.443
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:53.446
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should not conflict [Conformance]
      test/e2e/storage/empty_dir_wrapper.go:67
    Mar 13 18:42:53.459: INFO: Waiting up to 5m0s for pod "pod-secrets-71287075-36d2-44ac-86a0-57d298653fb5" in namespace "emptydir-wrapper-5951" to be "running and ready"
    Mar 13 18:42:53.462: INFO: Pod "pod-secrets-71287075-36d2-44ac-86a0-57d298653fb5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.416872ms
    Mar 13 18:42:53.462: INFO: The phase of Pod pod-secrets-71287075-36d2-44ac-86a0-57d298653fb5 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 18:42:55.467: INFO: Pod "pod-secrets-71287075-36d2-44ac-86a0-57d298653fb5": Phase="Running", Reason="", readiness=true. Elapsed: 2.007519759s
    Mar 13 18:42:55.467: INFO: The phase of Pod pod-secrets-71287075-36d2-44ac-86a0-57d298653fb5 is Running (Ready = true)
    Mar 13 18:42:55.467: INFO: Pod "pod-secrets-71287075-36d2-44ac-86a0-57d298653fb5" satisfied condition "running and ready"
    STEP: Cleaning up the secret 03/13/23 18:42:55.469
    STEP: Cleaning up the configmap 03/13/23 18:42:55.472
    STEP: Cleaning up the pod 03/13/23 18:42:55.476
    [AfterEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:42:55.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-wrapper-5951" for this suite. 03/13/23 18:42:55.492
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:42:55.513
Mar 13 18:42:55.514: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename secrets 03/13/23 18:42:55.516
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:55.532
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:55.535
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89
STEP: Creating secret with name secret-test-map-58fdc711-9950-485e-8843-0bbcedc289d7 03/13/23 18:42:55.538
STEP: Creating a pod to test consume secrets 03/13/23 18:42:55.542
Mar 13 18:42:55.548: INFO: Waiting up to 5m0s for pod "pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9" in namespace "secrets-5795" to be "Succeeded or Failed"
Mar 13 18:42:55.570: INFO: Pod "pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9": Phase="Pending", Reason="", readiness=false. Elapsed: 18.266034ms
Mar 13 18:42:57.573: INFO: Pod "pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021682695s
Mar 13 18:42:59.574: INFO: Pod "pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022373602s
STEP: Saw pod success 03/13/23 18:42:59.574
Mar 13 18:42:59.575: INFO: Pod "pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9" satisfied condition "Succeeded or Failed"
Mar 13 18:42:59.577: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9 container secret-volume-test: <nil>
STEP: delete the pod 03/13/23 18:42:59.584
Mar 13 18:42:59.591: INFO: Waiting for pod pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9 to disappear
Mar 13 18:42:59.593: INFO: Pod pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar 13 18:42:59.593: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-5795" for this suite. 03/13/23 18:42:59.597
------------------------------
â€¢ [4.087 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:42:55.513
    Mar 13 18:42:55.514: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename secrets 03/13/23 18:42:55.516
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:55.532
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:55.535
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:89
    STEP: Creating secret with name secret-test-map-58fdc711-9950-485e-8843-0bbcedc289d7 03/13/23 18:42:55.538
    STEP: Creating a pod to test consume secrets 03/13/23 18:42:55.542
    Mar 13 18:42:55.548: INFO: Waiting up to 5m0s for pod "pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9" in namespace "secrets-5795" to be "Succeeded or Failed"
    Mar 13 18:42:55.570: INFO: Pod "pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9": Phase="Pending", Reason="", readiness=false. Elapsed: 18.266034ms
    Mar 13 18:42:57.573: INFO: Pod "pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021682695s
    Mar 13 18:42:59.574: INFO: Pod "pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022373602s
    STEP: Saw pod success 03/13/23 18:42:59.574
    Mar 13 18:42:59.575: INFO: Pod "pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9" satisfied condition "Succeeded or Failed"
    Mar 13 18:42:59.577: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9 container secret-volume-test: <nil>
    STEP: delete the pod 03/13/23 18:42:59.584
    Mar 13 18:42:59.591: INFO: Waiting for pod pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9 to disappear
    Mar 13 18:42:59.593: INFO: Pod pod-secrets-80f7f0dc-c110-4875-9195-5730418f72d9 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:42:59.593: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-5795" for this suite. 03/13/23 18:42:59.597
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:42:59.616
Mar 13 18:42:59.617: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename secrets 03/13/23 18:42:59.619
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:59.627
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:59.63
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47
STEP: Creating secret with name secret-test-29d57f42-b46e-4bee-a59a-6beb6bffaa63 03/13/23 18:42:59.633
STEP: Creating a pod to test consume secrets 03/13/23 18:42:59.635
Mar 13 18:42:59.640: INFO: Waiting up to 5m0s for pod "pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2" in namespace "secrets-9032" to be "Succeeded or Failed"
Mar 13 18:42:59.643: INFO: Pod "pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.346414ms
Mar 13 18:43:01.650: INFO: Pod "pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009715798s
Mar 13 18:43:03.656: INFO: Pod "pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015328007s
STEP: Saw pod success 03/13/23 18:43:03.656
Mar 13 18:43:03.657: INFO: Pod "pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2" satisfied condition "Succeeded or Failed"
Mar 13 18:43:03.661: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2 container secret-volume-test: <nil>
STEP: delete the pod 03/13/23 18:43:03.674
Mar 13 18:43:03.720: INFO: Waiting for pod pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2 to disappear
Mar 13 18:43:03.728: INFO: Pod pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar 13 18:43:03.732: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-9032" for this suite. 03/13/23 18:43:03.74
------------------------------
â€¢ [4.145 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:42:59.616
    Mar 13 18:42:59.617: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename secrets 03/13/23 18:42:59.619
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:42:59.627
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:42:59.63
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:47
    STEP: Creating secret with name secret-test-29d57f42-b46e-4bee-a59a-6beb6bffaa63 03/13/23 18:42:59.633
    STEP: Creating a pod to test consume secrets 03/13/23 18:42:59.635
    Mar 13 18:42:59.640: INFO: Waiting up to 5m0s for pod "pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2" in namespace "secrets-9032" to be "Succeeded or Failed"
    Mar 13 18:42:59.643: INFO: Pod "pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.346414ms
    Mar 13 18:43:01.650: INFO: Pod "pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009715798s
    Mar 13 18:43:03.656: INFO: Pod "pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015328007s
    STEP: Saw pod success 03/13/23 18:43:03.656
    Mar 13 18:43:03.657: INFO: Pod "pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2" satisfied condition "Succeeded or Failed"
    Mar 13 18:43:03.661: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2 container secret-volume-test: <nil>
    STEP: delete the pod 03/13/23 18:43:03.674
    Mar 13 18:43:03.720: INFO: Waiting for pod pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2 to disappear
    Mar 13 18:43:03.728: INFO: Pod pod-secrets-cb6c90e3-efb1-4309-9988-e108e96d67f2 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:43:03.732: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-9032" for this suite. 03/13/23 18:43:03.74
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected combined
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44
[BeforeEach] [sig-storage] Projected combined
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:43:03.781
Mar 13 18:43:03.782: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 18:43:03.783
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:43:03.828
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:43:03.834
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/metrics/init/init.go:31
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44
STEP: Creating configMap with name configmap-projected-all-test-volume-49a4ba66-bb6e-4009-80dc-179d7f6ad2e6 03/13/23 18:43:03.842
STEP: Creating secret with name secret-projected-all-test-volume-30a3bc72-0a49-43d7-aacc-0c4f0162f968 03/13/23 18:43:03.849
STEP: Creating a pod to test Check all projections for projected volume plugin 03/13/23 18:43:03.879
Mar 13 18:43:03.912: INFO: Waiting up to 5m0s for pod "projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2" in namespace "projected-8027" to be "Succeeded or Failed"
Mar 13 18:43:03.923: INFO: Pod "projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2": Phase="Pending", Reason="", readiness=false. Elapsed: 11.06232ms
Mar 13 18:43:05.933: INFO: Pod "projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020780745s
Mar 13 18:43:07.932: INFO: Pod "projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019965051s
STEP: Saw pod success 03/13/23 18:43:07.932
Mar 13 18:43:07.932: INFO: Pod "projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2" satisfied condition "Succeeded or Failed"
Mar 13 18:43:07.937: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2 container projected-all-volume-test: <nil>
STEP: delete the pod 03/13/23 18:43:07.957
Mar 13 18:43:07.973: INFO: Waiting for pod projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2 to disappear
Mar 13 18:43:07.980: INFO: Pod projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/node/init/init.go:32
Mar 13 18:43:07.980: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected combined
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected combined
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected combined
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8027" for this suite. 03/13/23 18:43:07.985
------------------------------
â€¢ [4.214 seconds]
[sig-storage] Projected combined
test/e2e/common/storage/framework.go:23
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected combined
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:43:03.781
    Mar 13 18:43:03.782: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 18:43:03.783
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:43:03.828
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:43:03.834
    [BeforeEach] [sig-storage] Projected combined
      test/e2e/framework/metrics/init/init.go:31
    [It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
      test/e2e/common/storage/projected_combined.go:44
    STEP: Creating configMap with name configmap-projected-all-test-volume-49a4ba66-bb6e-4009-80dc-179d7f6ad2e6 03/13/23 18:43:03.842
    STEP: Creating secret with name secret-projected-all-test-volume-30a3bc72-0a49-43d7-aacc-0c4f0162f968 03/13/23 18:43:03.849
    STEP: Creating a pod to test Check all projections for projected volume plugin 03/13/23 18:43:03.879
    Mar 13 18:43:03.912: INFO: Waiting up to 5m0s for pod "projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2" in namespace "projected-8027" to be "Succeeded or Failed"
    Mar 13 18:43:03.923: INFO: Pod "projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2": Phase="Pending", Reason="", readiness=false. Elapsed: 11.06232ms
    Mar 13 18:43:05.933: INFO: Pod "projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020780745s
    Mar 13 18:43:07.932: INFO: Pod "projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019965051s
    STEP: Saw pod success 03/13/23 18:43:07.932
    Mar 13 18:43:07.932: INFO: Pod "projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2" satisfied condition "Succeeded or Failed"
    Mar 13 18:43:07.937: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2 container projected-all-volume-test: <nil>
    STEP: delete the pod 03/13/23 18:43:07.957
    Mar 13 18:43:07.973: INFO: Waiting for pod projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2 to disappear
    Mar 13 18:43:07.980: INFO: Pod projected-volume-e25f3b91-ebac-404a-9f06-424758037ce2 no longer exists
    [AfterEach] [sig-storage] Projected combined
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:43:07.980: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected combined
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected combined
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected combined
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8027" for this suite. 03/13/23 18:43:07.985
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:43:07.997
Mar 13 18:43:07.997: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename dns 03/13/23 18:43:07.998
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:43:08.032
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:43:08.036
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290
STEP: Creating a test headless service 03/13/23 18:43:08.039
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-8253.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-8253.svc.cluster.local;sleep 1; done
 03/13/23 18:43:08.048
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-8253.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-8253.svc.cluster.local;sleep 1; done
 03/13/23 18:43:08.048
STEP: creating a pod to probe DNS 03/13/23 18:43:08.048
STEP: submitting the pod to kubernetes 03/13/23 18:43:08.049
Mar 13 18:43:08.061: INFO: Waiting up to 15m0s for pod "dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe" in namespace "dns-8253" to be "running"
Mar 13 18:43:08.070: INFO: Pod "dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe": Phase="Pending", Reason="", readiness=false. Elapsed: 8.429856ms
Mar 13 18:43:10.086: INFO: Pod "dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe": Phase="Running", Reason="", readiness=true. Elapsed: 2.025076421s
Mar 13 18:43:10.086: INFO: Pod "dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe" satisfied condition "running"
STEP: retrieving the pod 03/13/23 18:43:10.087
STEP: looking for the results for each expected name from probers 03/13/23 18:43:10.094
Mar 13 18:43:10.112: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
Mar 13 18:43:10.123: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
Mar 13 18:43:10.133: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
Mar 13 18:43:10.139: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
Mar 13 18:43:10.154: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
Mar 13 18:43:10.178: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
Mar 13 18:43:10.185: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
Mar 13 18:43:10.193: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
Mar 13 18:43:10.193: INFO: Lookups using dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8253.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8253.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local jessie_udp@dns-test-service-2.dns-8253.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8253.svc.cluster.local]

Mar 13 18:43:15.240: INFO: DNS probes using dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe succeeded

STEP: deleting the pod 03/13/23 18:43:15.24
STEP: deleting the test headless service 03/13/23 18:43:15.266
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar 13 18:43:15.292: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-8253" for this suite. 03/13/23 18:43:15.305
------------------------------
â€¢ [SLOW TEST] [7.320 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:43:07.997
    Mar 13 18:43:07.997: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename dns 03/13/23 18:43:07.998
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:43:08.032
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:43:08.036
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for pods for Subdomain [Conformance]
      test/e2e/network/dns.go:290
    STEP: Creating a test headless service 03/13/23 18:43:08.039
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-8253.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-8253.svc.cluster.local;sleep 1; done
     03/13/23 18:43:08.048
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-8253.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8253.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-8253.svc.cluster.local;sleep 1; done
     03/13/23 18:43:08.048
    STEP: creating a pod to probe DNS 03/13/23 18:43:08.048
    STEP: submitting the pod to kubernetes 03/13/23 18:43:08.049
    Mar 13 18:43:08.061: INFO: Waiting up to 15m0s for pod "dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe" in namespace "dns-8253" to be "running"
    Mar 13 18:43:08.070: INFO: Pod "dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe": Phase="Pending", Reason="", readiness=false. Elapsed: 8.429856ms
    Mar 13 18:43:10.086: INFO: Pod "dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe": Phase="Running", Reason="", readiness=true. Elapsed: 2.025076421s
    Mar 13 18:43:10.086: INFO: Pod "dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe" satisfied condition "running"
    STEP: retrieving the pod 03/13/23 18:43:10.087
    STEP: looking for the results for each expected name from probers 03/13/23 18:43:10.094
    Mar 13 18:43:10.112: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
    Mar 13 18:43:10.123: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
    Mar 13 18:43:10.133: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
    Mar 13 18:43:10.139: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
    Mar 13 18:43:10.154: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
    Mar 13 18:43:10.178: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
    Mar 13 18:43:10.185: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
    Mar 13 18:43:10.193: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8253.svc.cluster.local from pod dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe: the server could not find the requested resource (get pods dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe)
    Mar 13 18:43:10.193: INFO: Lookups using dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8253.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8253.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8253.svc.cluster.local jessie_udp@dns-test-service-2.dns-8253.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8253.svc.cluster.local]

    Mar 13 18:43:15.240: INFO: DNS probes using dns-8253/dns-test-f482f817-48f8-4049-b48a-1e5a84a0cafe succeeded

    STEP: deleting the pod 03/13/23 18:43:15.24
    STEP: deleting the test headless service 03/13/23 18:43:15.266
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:43:15.292: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-8253" for this suite. 03/13/23 18:43:15.305
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] Services
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:43:15.324
Mar 13 18:43:15.324: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 18:43:15.325
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:43:15.348
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:43:15.355
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438
STEP: creating a service externalname-service with the type=ExternalName in namespace services-5445 03/13/23 18:43:15.366
STEP: changing the ExternalName service to type=ClusterIP 03/13/23 18:43:15.381
STEP: creating replication controller externalname-service in namespace services-5445 03/13/23 18:43:15.402
I0313 18:43:15.441789      21 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5445, replica count: 2
I0313 18:43:18.492676      21 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar 13 18:43:18.492: INFO: Creating new exec pod
Mar 13 18:43:18.497: INFO: Waiting up to 5m0s for pod "execpodzkljk" in namespace "services-5445" to be "running"
Mar 13 18:43:18.500: INFO: Pod "execpodzkljk": Phase="Pending", Reason="", readiness=false. Elapsed: 2.712578ms
Mar 13 18:43:20.503: INFO: Pod "execpodzkljk": Phase="Running", Reason="", readiness=true. Elapsed: 2.00576706s
Mar 13 18:43:20.503: INFO: Pod "execpodzkljk" satisfied condition "running"
Mar 13 18:43:21.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5445 exec execpodzkljk -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
Mar 13 18:43:21.703: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Mar 13 18:43:21.704: INFO: stdout: ""
Mar 13 18:43:21.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5445 exec execpodzkljk -- /bin/sh -x -c nc -v -z -w 2 10.109.50.34 80'
Mar 13 18:43:21.879: INFO: stderr: "+ nc -v -z -w 2 10.109.50.34 80\nConnection to 10.109.50.34 80 port [tcp/http] succeeded!\n"
Mar 13 18:43:21.879: INFO: stdout: ""
Mar 13 18:43:21.879: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 18:43:21.892: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-5445" for this suite. 03/13/23 18:43:21.897
------------------------------
â€¢ [SLOW TEST] [6.581 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:43:15.324
    Mar 13 18:43:15.324: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 18:43:15.325
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:43:15.348
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:43:15.355
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ExternalName to ClusterIP [Conformance]
      test/e2e/network/service.go:1438
    STEP: creating a service externalname-service with the type=ExternalName in namespace services-5445 03/13/23 18:43:15.366
    STEP: changing the ExternalName service to type=ClusterIP 03/13/23 18:43:15.381
    STEP: creating replication controller externalname-service in namespace services-5445 03/13/23 18:43:15.402
    I0313 18:43:15.441789      21 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5445, replica count: 2
    I0313 18:43:18.492676      21 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar 13 18:43:18.492: INFO: Creating new exec pod
    Mar 13 18:43:18.497: INFO: Waiting up to 5m0s for pod "execpodzkljk" in namespace "services-5445" to be "running"
    Mar 13 18:43:18.500: INFO: Pod "execpodzkljk": Phase="Pending", Reason="", readiness=false. Elapsed: 2.712578ms
    Mar 13 18:43:20.503: INFO: Pod "execpodzkljk": Phase="Running", Reason="", readiness=true. Elapsed: 2.00576706s
    Mar 13 18:43:20.503: INFO: Pod "execpodzkljk" satisfied condition "running"
    Mar 13 18:43:21.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5445 exec execpodzkljk -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
    Mar 13 18:43:21.703: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
    Mar 13 18:43:21.704: INFO: stdout: ""
    Mar 13 18:43:21.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5445 exec execpodzkljk -- /bin/sh -x -c nc -v -z -w 2 10.109.50.34 80'
    Mar 13 18:43:21.879: INFO: stderr: "+ nc -v -z -w 2 10.109.50.34 80\nConnection to 10.109.50.34 80 port [tcp/http] succeeded!\n"
    Mar 13 18:43:21.879: INFO: stdout: ""
    Mar 13 18:43:21.879: INFO: Cleaning up the ExternalName to ClusterIP test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:43:21.892: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-5445" for this suite. 03/13/23 18:43:21.897
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] CronJob
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:43:21.909
Mar 13 18:43:21.909: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename cronjob 03/13/23 18:43:21.911
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:43:21.922
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:43:21.926
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124
STEP: Creating a ForbidConcurrent cronjob 03/13/23 18:43:21.931
STEP: Ensuring a job is scheduled 03/13/23 18:43:21.937
STEP: Ensuring exactly one is scheduled 03/13/23 18:44:01.949
STEP: Ensuring exactly one running job exists by listing jobs explicitly 03/13/23 18:44:01.96
STEP: Ensuring no more jobs are scheduled 03/13/23 18:44:01.97
STEP: Removing cronjob 03/13/23 18:49:01.988
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Mar 13 18:49:02.007: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-5422" for this suite. 03/13/23 18:49:02.032
------------------------------
â€¢ [SLOW TEST] [340.143 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:43:21.909
    Mar 13 18:43:21.909: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename cronjob 03/13/23 18:43:21.911
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:43:21.922
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:43:21.926
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
      test/e2e/apps/cronjob.go:124
    STEP: Creating a ForbidConcurrent cronjob 03/13/23 18:43:21.931
    STEP: Ensuring a job is scheduled 03/13/23 18:43:21.937
    STEP: Ensuring exactly one is scheduled 03/13/23 18:44:01.949
    STEP: Ensuring exactly one running job exists by listing jobs explicitly 03/13/23 18:44:01.96
    STEP: Ensuring no more jobs are scheduled 03/13/23 18:44:01.97
    STEP: Removing cronjob 03/13/23 18:49:01.988
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:49:02.007: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-5422" for this suite. 03/13/23 18:49:02.032
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl label
  should update the label on a resource  [Conformance]
  test/e2e/kubectl/kubectl.go:1509
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:49:02.049
Mar 13 18:49:02.049: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 18:49:02.051
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:02.101
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:02.128
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1494
STEP: creating the pod 03/13/23 18:49:02.138
Mar 13 18:49:02.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 create -f -'
Mar 13 18:49:03.942: INFO: stderr: ""
Mar 13 18:49:03.942: INFO: stdout: "pod/pause created\n"
Mar 13 18:49:03.942: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Mar 13 18:49:03.942: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-7437" to be "running and ready"
Mar 13 18:49:03.961: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 19.139435ms
Mar 13 18:49:03.962: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'vke-automated-test-51df1d4fb06e' to be 'Running' but was 'Pending'
Mar 13 18:49:05.965: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023076068s
Mar 13 18:49:05.965: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'vke-automated-test-51df1d4fb06e' to be 'Running' but was 'Pending'
Mar 13 18:49:07.967: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 4.024635298s
Mar 13 18:49:07.967: INFO: Pod "pause" satisfied condition "running and ready"
Mar 13 18:49:07.967: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/kubectl/kubectl.go:1509
STEP: adding the label testing-label with value testing-label-value to a pod 03/13/23 18:49:07.967
Mar 13 18:49:07.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 label pods pause testing-label=testing-label-value'
Mar 13 18:49:08.087: INFO: stderr: ""
Mar 13 18:49:08.087: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value 03/13/23 18:49:08.087
Mar 13 18:49:08.087: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 get pod pause -L testing-label'
Mar 13 18:49:08.200: INFO: stderr: ""
Mar 13 18:49:08.200: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          5s    testing-label-value\n"
STEP: removing the label testing-label of a pod 03/13/23 18:49:08.2
Mar 13 18:49:08.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 label pods pause testing-label-'
Mar 13 18:49:08.312: INFO: stderr: ""
Mar 13 18:49:08.312: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label 03/13/23 18:49:08.312
Mar 13 18:49:08.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 get pod pause -L testing-label'
Mar 13 18:49:08.425: INFO: stderr: ""
Mar 13 18:49:08.425: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          5s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1500
STEP: using delete to clean up resources 03/13/23 18:49:08.425
Mar 13 18:49:08.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 delete --grace-period=0 --force -f -'
Mar 13 18:49:08.524: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar 13 18:49:08.524: INFO: stdout: "pod \"pause\" force deleted\n"
Mar 13 18:49:08.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 get rc,svc -l name=pause --no-headers'
Mar 13 18:49:08.701: INFO: stderr: "No resources found in kubectl-7437 namespace.\n"
Mar 13 18:49:08.701: INFO: stdout: ""
Mar 13 18:49:08.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Mar 13 18:49:08.785: INFO: stderr: ""
Mar 13 18:49:08.785: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 18:49:08.785: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-7437" for this suite. 03/13/23 18:49:08.791
------------------------------
â€¢ [SLOW TEST] [6.750 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl label
  test/e2e/kubectl/kubectl.go:1492
    should update the label on a resource  [Conformance]
    test/e2e/kubectl/kubectl.go:1509

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:49:02.049
    Mar 13 18:49:02.049: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 18:49:02.051
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:02.101
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:02.128
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl label
      test/e2e/kubectl/kubectl.go:1494
    STEP: creating the pod 03/13/23 18:49:02.138
    Mar 13 18:49:02.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 create -f -'
    Mar 13 18:49:03.942: INFO: stderr: ""
    Mar 13 18:49:03.942: INFO: stdout: "pod/pause created\n"
    Mar 13 18:49:03.942: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
    Mar 13 18:49:03.942: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-7437" to be "running and ready"
    Mar 13 18:49:03.961: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 19.139435ms
    Mar 13 18:49:03.962: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'vke-automated-test-51df1d4fb06e' to be 'Running' but was 'Pending'
    Mar 13 18:49:05.965: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023076068s
    Mar 13 18:49:05.965: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'vke-automated-test-51df1d4fb06e' to be 'Running' but was 'Pending'
    Mar 13 18:49:07.967: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 4.024635298s
    Mar 13 18:49:07.967: INFO: Pod "pause" satisfied condition "running and ready"
    Mar 13 18:49:07.967: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
    [It] should update the label on a resource  [Conformance]
      test/e2e/kubectl/kubectl.go:1509
    STEP: adding the label testing-label with value testing-label-value to a pod 03/13/23 18:49:07.967
    Mar 13 18:49:07.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 label pods pause testing-label=testing-label-value'
    Mar 13 18:49:08.087: INFO: stderr: ""
    Mar 13 18:49:08.087: INFO: stdout: "pod/pause labeled\n"
    STEP: verifying the pod has the label testing-label with the value testing-label-value 03/13/23 18:49:08.087
    Mar 13 18:49:08.087: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 get pod pause -L testing-label'
    Mar 13 18:49:08.200: INFO: stderr: ""
    Mar 13 18:49:08.200: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          5s    testing-label-value\n"
    STEP: removing the label testing-label of a pod 03/13/23 18:49:08.2
    Mar 13 18:49:08.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 label pods pause testing-label-'
    Mar 13 18:49:08.312: INFO: stderr: ""
    Mar 13 18:49:08.312: INFO: stdout: "pod/pause unlabeled\n"
    STEP: verifying the pod doesn't have the label testing-label 03/13/23 18:49:08.312
    Mar 13 18:49:08.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 get pod pause -L testing-label'
    Mar 13 18:49:08.425: INFO: stderr: ""
    Mar 13 18:49:08.425: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          5s    \n"
    [AfterEach] Kubectl label
      test/e2e/kubectl/kubectl.go:1500
    STEP: using delete to clean up resources 03/13/23 18:49:08.425
    Mar 13 18:49:08.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 delete --grace-period=0 --force -f -'
    Mar 13 18:49:08.524: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar 13 18:49:08.524: INFO: stdout: "pod \"pause\" force deleted\n"
    Mar 13 18:49:08.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 get rc,svc -l name=pause --no-headers'
    Mar 13 18:49:08.701: INFO: stderr: "No resources found in kubectl-7437 namespace.\n"
    Mar 13 18:49:08.701: INFO: stdout: ""
    Mar 13 18:49:08.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7437 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Mar 13 18:49:08.785: INFO: stderr: ""
    Mar 13 18:49:08.785: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:49:08.785: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-7437" for this suite. 03/13/23 18:49:08.791
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:49:08.801
Mar 13 18:49:08.801: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename sysctl 03/13/23 18:49:08.803
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:08.825
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:08.833
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl 03/13/23 18:49:08.839
STEP: Watching for error events or started pod 03/13/23 18:49:08.855
STEP: Waiting for pod completion 03/13/23 18:49:10.862
Mar 13 18:49:10.862: INFO: Waiting up to 3m0s for pod "sysctl-c99074b6-4fb0-4cb1-9034-1dbf253b056c" in namespace "sysctl-7602" to be "completed"
Mar 13 18:49:10.867: INFO: Pod "sysctl-c99074b6-4fb0-4cb1-9034-1dbf253b056c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.396439ms
Mar 13 18:49:12.873: INFO: Pod "sysctl-c99074b6-4fb0-4cb1-9034-1dbf253b056c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010359343s
Mar 13 18:49:14.872: INFO: Pod "sysctl-c99074b6-4fb0-4cb1-9034-1dbf253b056c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009586952s
Mar 13 18:49:14.872: INFO: Pod "sysctl-c99074b6-4fb0-4cb1-9034-1dbf253b056c" satisfied condition "completed"
STEP: Checking that the pod succeeded 03/13/23 18:49:14.875
STEP: Getting logs from the pod 03/13/23 18:49:14.875
STEP: Checking that the sysctl is actually updated 03/13/23 18:49:14.937
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar 13 18:49:14.938: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "sysctl-7602" for this suite. 03/13/23 18:49:14.943
------------------------------
â€¢ [SLOW TEST] [6.152 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
test/e2e/common/node/framework.go:23
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:37
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:49:08.801
    Mar 13 18:49:08.801: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename sysctl 03/13/23 18:49:08.803
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:08.825
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:08.833
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:67
    [It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
      test/e2e/common/node/sysctl.go:77
    STEP: Creating a pod with the kernel.shm_rmid_forced sysctl 03/13/23 18:49:08.839
    STEP: Watching for error events or started pod 03/13/23 18:49:08.855
    STEP: Waiting for pod completion 03/13/23 18:49:10.862
    Mar 13 18:49:10.862: INFO: Waiting up to 3m0s for pod "sysctl-c99074b6-4fb0-4cb1-9034-1dbf253b056c" in namespace "sysctl-7602" to be "completed"
    Mar 13 18:49:10.867: INFO: Pod "sysctl-c99074b6-4fb0-4cb1-9034-1dbf253b056c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.396439ms
    Mar 13 18:49:12.873: INFO: Pod "sysctl-c99074b6-4fb0-4cb1-9034-1dbf253b056c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010359343s
    Mar 13 18:49:14.872: INFO: Pod "sysctl-c99074b6-4fb0-4cb1-9034-1dbf253b056c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009586952s
    Mar 13 18:49:14.872: INFO: Pod "sysctl-c99074b6-4fb0-4cb1-9034-1dbf253b056c" satisfied condition "completed"
    STEP: Checking that the pod succeeded 03/13/23 18:49:14.875
    STEP: Getting logs from the pod 03/13/23 18:49:14.875
    STEP: Checking that the sysctl is actually updated 03/13/23 18:49:14.937
    [AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:49:14.938: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sysctl-7602" for this suite. 03/13/23 18:49:14.943
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:49:14.956
Mar 13 18:49:14.957: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename resourcequota 03/13/23 18:49:14.959
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:14.975
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:14.981
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690
STEP: Creating a ResourceQuota with terminating scope 03/13/23 18:49:14.986
STEP: Ensuring ResourceQuota status is calculated 03/13/23 18:49:14.991
STEP: Creating a ResourceQuota with not terminating scope 03/13/23 18:49:16.997
STEP: Ensuring ResourceQuota status is calculated 03/13/23 18:49:17.003
STEP: Creating a long running pod 03/13/23 18:49:19.008
STEP: Ensuring resource quota with not terminating scope captures the pod usage 03/13/23 18:49:19.021
STEP: Ensuring resource quota with terminating scope ignored the pod usage 03/13/23 18:49:21.025
STEP: Deleting the pod 03/13/23 18:49:23.03
STEP: Ensuring resource quota status released the pod usage 03/13/23 18:49:23.037
STEP: Creating a terminating pod 03/13/23 18:49:25.042
STEP: Ensuring resource quota with terminating scope captures the pod usage 03/13/23 18:49:25.051
STEP: Ensuring resource quota with not terminating scope ignored the pod usage 03/13/23 18:49:27.056
STEP: Deleting the pod 03/13/23 18:49:29.063
STEP: Ensuring resource quota status released the pod usage 03/13/23 18:49:29.072
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar 13 18:49:31.076: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-9145" for this suite. 03/13/23 18:49:31.08
------------------------------
â€¢ [SLOW TEST] [16.129 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:49:14.956
    Mar 13 18:49:14.957: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename resourcequota 03/13/23 18:49:14.959
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:14.975
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:14.981
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify ResourceQuota with terminating scopes. [Conformance]
      test/e2e/apimachinery/resource_quota.go:690
    STEP: Creating a ResourceQuota with terminating scope 03/13/23 18:49:14.986
    STEP: Ensuring ResourceQuota status is calculated 03/13/23 18:49:14.991
    STEP: Creating a ResourceQuota with not terminating scope 03/13/23 18:49:16.997
    STEP: Ensuring ResourceQuota status is calculated 03/13/23 18:49:17.003
    STEP: Creating a long running pod 03/13/23 18:49:19.008
    STEP: Ensuring resource quota with not terminating scope captures the pod usage 03/13/23 18:49:19.021
    STEP: Ensuring resource quota with terminating scope ignored the pod usage 03/13/23 18:49:21.025
    STEP: Deleting the pod 03/13/23 18:49:23.03
    STEP: Ensuring resource quota status released the pod usage 03/13/23 18:49:23.037
    STEP: Creating a terminating pod 03/13/23 18:49:25.042
    STEP: Ensuring resource quota with terminating scope captures the pod usage 03/13/23 18:49:25.051
    STEP: Ensuring resource quota with not terminating scope ignored the pod usage 03/13/23 18:49:27.056
    STEP: Deleting the pod 03/13/23 18:49:29.063
    STEP: Ensuring resource quota status released the pod usage 03/13/23 18:49:29.072
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:49:31.076: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-9145" for this suite. 03/13/23 18:49:31.08
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:49:31.09
Mar 13 18:49:31.090: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename resourcequota 03/13/23 18:49:31.091
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:31.101
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:31.104
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803
STEP: Creating a ResourceQuota with best effort scope 03/13/23 18:49:31.108
STEP: Ensuring ResourceQuota status is calculated 03/13/23 18:49:31.113
STEP: Creating a ResourceQuota with not best effort scope 03/13/23 18:49:33.117
STEP: Ensuring ResourceQuota status is calculated 03/13/23 18:49:33.122
STEP: Creating a best-effort pod 03/13/23 18:49:35.126
STEP: Ensuring resource quota with best effort scope captures the pod usage 03/13/23 18:49:35.136
STEP: Ensuring resource quota with not best effort ignored the pod usage 03/13/23 18:49:37.14
STEP: Deleting the pod 03/13/23 18:49:39.145
STEP: Ensuring resource quota status released the pod usage 03/13/23 18:49:39.15
STEP: Creating a not best-effort pod 03/13/23 18:49:41.154
STEP: Ensuring resource quota with not best effort scope captures the pod usage 03/13/23 18:49:41.166
STEP: Ensuring resource quota with best effort scope ignored the pod usage 03/13/23 18:49:43.169
STEP: Deleting the pod 03/13/23 18:49:45.173
STEP: Ensuring resource quota status released the pod usage 03/13/23 18:49:45.182
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar 13 18:49:47.186: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-3057" for this suite. 03/13/23 18:49:47.192
------------------------------
â€¢ [SLOW TEST] [16.107 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:49:31.09
    Mar 13 18:49:31.090: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename resourcequota 03/13/23 18:49:31.091
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:31.101
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:31.104
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify ResourceQuota with best effort scope. [Conformance]
      test/e2e/apimachinery/resource_quota.go:803
    STEP: Creating a ResourceQuota with best effort scope 03/13/23 18:49:31.108
    STEP: Ensuring ResourceQuota status is calculated 03/13/23 18:49:31.113
    STEP: Creating a ResourceQuota with not best effort scope 03/13/23 18:49:33.117
    STEP: Ensuring ResourceQuota status is calculated 03/13/23 18:49:33.122
    STEP: Creating a best-effort pod 03/13/23 18:49:35.126
    STEP: Ensuring resource quota with best effort scope captures the pod usage 03/13/23 18:49:35.136
    STEP: Ensuring resource quota with not best effort ignored the pod usage 03/13/23 18:49:37.14
    STEP: Deleting the pod 03/13/23 18:49:39.145
    STEP: Ensuring resource quota status released the pod usage 03/13/23 18:49:39.15
    STEP: Creating a not best-effort pod 03/13/23 18:49:41.154
    STEP: Ensuring resource quota with not best effort scope captures the pod usage 03/13/23 18:49:41.166
    STEP: Ensuring resource quota with best effort scope ignored the pod usage 03/13/23 18:49:43.169
    STEP: Deleting the pod 03/13/23 18:49:45.173
    STEP: Ensuring resource quota status released the pod usage 03/13/23 18:49:45.182
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:49:47.186: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-3057" for this suite. 03/13/23 18:49:47.192
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] CronJob
  should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:49:47.201
Mar 13 18:49:47.201: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename cronjob 03/13/23 18:49:47.203
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:47.216
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:47.218
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319
STEP: Creating a cronjob 03/13/23 18:49:47.222
STEP: creating 03/13/23 18:49:47.222
STEP: getting 03/13/23 18:49:47.23
STEP: listing 03/13/23 18:49:47.235
STEP: watching 03/13/23 18:49:47.239
Mar 13 18:49:47.239: INFO: starting watch
STEP: cluster-wide listing 03/13/23 18:49:47.241
STEP: cluster-wide watching 03/13/23 18:49:47.244
Mar 13 18:49:47.244: INFO: starting watch
STEP: patching 03/13/23 18:49:47.246
STEP: updating 03/13/23 18:49:47.252
Mar 13 18:49:47.261: INFO: waiting for watch events with expected annotations
Mar 13 18:49:47.261: INFO: saw patched and updated annotations
STEP: patching /status 03/13/23 18:49:47.261
STEP: updating /status 03/13/23 18:49:47.268
STEP: get /status 03/13/23 18:49:47.275
STEP: deleting 03/13/23 18:49:47.279
STEP: deleting a collection 03/13/23 18:49:47.29
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Mar 13 18:49:47.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-2344" for this suite. 03/13/23 18:49:47.305
------------------------------
â€¢ [0.109 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:49:47.201
    Mar 13 18:49:47.201: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename cronjob 03/13/23 18:49:47.203
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:47.216
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:47.218
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CronJob API operations [Conformance]
      test/e2e/apps/cronjob.go:319
    STEP: Creating a cronjob 03/13/23 18:49:47.222
    STEP: creating 03/13/23 18:49:47.222
    STEP: getting 03/13/23 18:49:47.23
    STEP: listing 03/13/23 18:49:47.235
    STEP: watching 03/13/23 18:49:47.239
    Mar 13 18:49:47.239: INFO: starting watch
    STEP: cluster-wide listing 03/13/23 18:49:47.241
    STEP: cluster-wide watching 03/13/23 18:49:47.244
    Mar 13 18:49:47.244: INFO: starting watch
    STEP: patching 03/13/23 18:49:47.246
    STEP: updating 03/13/23 18:49:47.252
    Mar 13 18:49:47.261: INFO: waiting for watch events with expected annotations
    Mar 13 18:49:47.261: INFO: saw patched and updated annotations
    STEP: patching /status 03/13/23 18:49:47.261
    STEP: updating /status 03/13/23 18:49:47.268
    STEP: get /status 03/13/23 18:49:47.275
    STEP: deleting 03/13/23 18:49:47.279
    STEP: deleting a collection 03/13/23 18:49:47.29
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:49:47.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-2344" for this suite. 03/13/23 18:49:47.305
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:49:47.312
Mar 13 18:49:47.312: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 18:49:47.313
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:47.323
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:47.328
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207
STEP: Creating a pod to test downward API volume plugin 03/13/23 18:49:47.332
Mar 13 18:49:47.339: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51" in namespace "projected-4756" to be "Succeeded or Failed"
Mar 13 18:49:47.342: INFO: Pod "downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51": Phase="Pending", Reason="", readiness=false. Elapsed: 2.631711ms
Mar 13 18:49:49.347: INFO: Pod "downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007441526s
Mar 13 18:49:51.348: INFO: Pod "downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008827086s
STEP: Saw pod success 03/13/23 18:49:51.348
Mar 13 18:49:51.348: INFO: Pod "downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51" satisfied condition "Succeeded or Failed"
Mar 13 18:49:51.353: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51 container client-container: <nil>
STEP: delete the pod 03/13/23 18:49:51.363
Mar 13 18:49:51.372: INFO: Waiting for pod downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51 to disappear
Mar 13 18:49:51.377: INFO: Pod downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar 13 18:49:51.378: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4756" for this suite. 03/13/23 18:49:51.382
------------------------------
â€¢ [4.075 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:49:47.312
    Mar 13 18:49:47.312: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 18:49:47.313
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:47.323
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:47.328
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's memory limit [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:207
    STEP: Creating a pod to test downward API volume plugin 03/13/23 18:49:47.332
    Mar 13 18:49:47.339: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51" in namespace "projected-4756" to be "Succeeded or Failed"
    Mar 13 18:49:47.342: INFO: Pod "downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51": Phase="Pending", Reason="", readiness=false. Elapsed: 2.631711ms
    Mar 13 18:49:49.347: INFO: Pod "downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007441526s
    Mar 13 18:49:51.348: INFO: Pod "downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008827086s
    STEP: Saw pod success 03/13/23 18:49:51.348
    Mar 13 18:49:51.348: INFO: Pod "downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51" satisfied condition "Succeeded or Failed"
    Mar 13 18:49:51.353: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51 container client-container: <nil>
    STEP: delete the pod 03/13/23 18:49:51.363
    Mar 13 18:49:51.372: INFO: Waiting for pod downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51 to disappear
    Mar 13 18:49:51.377: INFO: Pod downwardapi-volume-ab2fd3b4-592d-44f9-8a63-095242b24a51 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:49:51.378: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4756" for this suite. 03/13/23 18:49:51.382
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:49:51.39
Mar 13 18:49:51.390: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename namespaces 03/13/23 18:49:51.391
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:51.402
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:51.407
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251
STEP: Creating a test namespace 03/13/23 18:49:51.412
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:51.425
STEP: Creating a service in the namespace 03/13/23 18:49:51.428
STEP: Deleting the namespace 03/13/23 18:49:51.438
STEP: Waiting for the namespace to be removed. 03/13/23 18:49:51.453
STEP: Recreating the namespace 03/13/23 18:49:57.456
STEP: Verifying there is no service in the namespace 03/13/23 18:49:57.472
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 18:49:57.475: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-6070" for this suite. 03/13/23 18:49:57.478
STEP: Destroying namespace "nsdeletetest-7895" for this suite. 03/13/23 18:49:57.482
Mar 13 18:49:57.485: INFO: Namespace nsdeletetest-7895 was already deleted
STEP: Destroying namespace "nsdeletetest-8383" for this suite. 03/13/23 18:49:57.485
------------------------------
â€¢ [SLOW TEST] [6.098 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:49:51.39
    Mar 13 18:49:51.390: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename namespaces 03/13/23 18:49:51.391
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:51.402
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:51.407
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should ensure that all services are removed when a namespace is deleted [Conformance]
      test/e2e/apimachinery/namespace.go:251
    STEP: Creating a test namespace 03/13/23 18:49:51.412
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:51.425
    STEP: Creating a service in the namespace 03/13/23 18:49:51.428
    STEP: Deleting the namespace 03/13/23 18:49:51.438
    STEP: Waiting for the namespace to be removed. 03/13/23 18:49:51.453
    STEP: Recreating the namespace 03/13/23 18:49:57.456
    STEP: Verifying there is no service in the namespace 03/13/23 18:49:57.472
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:49:57.475: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-6070" for this suite. 03/13/23 18:49:57.478
    STEP: Destroying namespace "nsdeletetest-7895" for this suite. 03/13/23 18:49:57.482
    Mar 13 18:49:57.485: INFO: Namespace nsdeletetest-7895 was already deleted
    STEP: Destroying namespace "nsdeletetest-8383" for this suite. 03/13/23 18:49:57.485
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:49:57.489
Mar 13 18:49:57.489: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename gc 03/13/23 18:49:57.49
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:57.499
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:57.502
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849
Mar 13 18:49:57.538: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"bdc96aca-5598-41df-aede-22a744c3e966", Controller:(*bool)(0xc0042d2f06), BlockOwnerDeletion:(*bool)(0xc0042d2f07)}}
Mar 13 18:49:57.546: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"6c4619ed-c575-4eb9-b7a5-8eda7a32f14d", Controller:(*bool)(0xc0042d3186), BlockOwnerDeletion:(*bool)(0xc0042d3187)}}
Mar 13 18:49:57.553: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"26831eb6-21f2-4e52-b546-cb86e0d07390", Controller:(*bool)(0xc0045384de), BlockOwnerDeletion:(*bool)(0xc0045384df)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar 13 18:50:02.569: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-3640" for this suite. 03/13/23 18:50:02.592
------------------------------
â€¢ [SLOW TEST] [5.112 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:49:57.489
    Mar 13 18:49:57.489: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename gc 03/13/23 18:49:57.49
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:49:57.499
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:49:57.502
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should not be blocked by dependency circle [Conformance]
      test/e2e/apimachinery/garbage_collector.go:849
    Mar 13 18:49:57.538: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"bdc96aca-5598-41df-aede-22a744c3e966", Controller:(*bool)(0xc0042d2f06), BlockOwnerDeletion:(*bool)(0xc0042d2f07)}}
    Mar 13 18:49:57.546: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"6c4619ed-c575-4eb9-b7a5-8eda7a32f14d", Controller:(*bool)(0xc0042d3186), BlockOwnerDeletion:(*bool)(0xc0042d3187)}}
    Mar 13 18:49:57.553: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"26831eb6-21f2-4e52-b546-cb86e0d07390", Controller:(*bool)(0xc0045384de), BlockOwnerDeletion:(*bool)(0xc0045384df)}}
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:50:02.569: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-3640" for this suite. 03/13/23 18:50:02.592
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:50:02.604
Mar 13 18:50:02.604: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename runtimeclass 03/13/23 18:50:02.604
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:02.649
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:02.657
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156
STEP: Deleting RuntimeClass runtimeclass-3094-delete-me 03/13/23 18:50:02.677
STEP: Waiting for the RuntimeClass to disappear 03/13/23 18:50:02.684
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Mar 13 18:50:02.721: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-3094" for this suite. 03/13/23 18:50:02.729
------------------------------
â€¢ [0.133 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:50:02.604
    Mar 13 18:50:02.604: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename runtimeclass 03/13/23 18:50:02.604
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:02.649
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:02.657
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:156
    STEP: Deleting RuntimeClass runtimeclass-3094-delete-me 03/13/23 18:50:02.677
    STEP: Waiting for the RuntimeClass to disappear 03/13/23 18:50:02.684
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:50:02.721: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-3094" for this suite. 03/13/23 18:50:02.729
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Downward API volume
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:50:02.738
Mar 13 18:50:02.738: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 18:50:02.739
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:02.77
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:02.777
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53
STEP: Creating a pod to test downward API volume plugin 03/13/23 18:50:02.787
Mar 13 18:50:02.812: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29" in namespace "downward-api-9700" to be "Succeeded or Failed"
Mar 13 18:50:02.825: INFO: Pod "downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29": Phase="Pending", Reason="", readiness=false. Elapsed: 12.88505ms
Mar 13 18:50:04.834: INFO: Pod "downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022058345s
Mar 13 18:50:06.839: INFO: Pod "downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026718623s
STEP: Saw pod success 03/13/23 18:50:06.839
Mar 13 18:50:06.839: INFO: Pod "downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29" satisfied condition "Succeeded or Failed"
Mar 13 18:50:06.844: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29 container client-container: <nil>
STEP: delete the pod 03/13/23 18:50:06.864
Mar 13 18:50:06.892: INFO: Waiting for pod downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29 to disappear
Mar 13 18:50:06.895: INFO: Pod downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar 13 18:50:06.896: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-9700" for this suite. 03/13/23 18:50:06.901
------------------------------
â€¢ [4.177 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:50:02.738
    Mar 13 18:50:02.738: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 18:50:02.739
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:02.77
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:02.777
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide podname only [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:53
    STEP: Creating a pod to test downward API volume plugin 03/13/23 18:50:02.787
    Mar 13 18:50:02.812: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29" in namespace "downward-api-9700" to be "Succeeded or Failed"
    Mar 13 18:50:02.825: INFO: Pod "downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29": Phase="Pending", Reason="", readiness=false. Elapsed: 12.88505ms
    Mar 13 18:50:04.834: INFO: Pod "downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022058345s
    Mar 13 18:50:06.839: INFO: Pod "downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026718623s
    STEP: Saw pod success 03/13/23 18:50:06.839
    Mar 13 18:50:06.839: INFO: Pod "downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29" satisfied condition "Succeeded or Failed"
    Mar 13 18:50:06.844: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29 container client-container: <nil>
    STEP: delete the pod 03/13/23 18:50:06.864
    Mar 13 18:50:06.892: INFO: Waiting for pod downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29 to disappear
    Mar 13 18:50:06.895: INFO: Pod downwardapi-volume-ccf73ce6-3b31-454a-bd28-b598db46da29 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:50:06.896: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-9700" for this suite. 03/13/23 18:50:06.901
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController
  should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:50:06.916
Mar 13 18:50:06.916: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename disruption 03/13/23 18:50:06.917
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:06.999
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:07.008
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108
STEP: creating the pdb 03/13/23 18:50:07.013
STEP: Waiting for the pdb to be processed 03/13/23 18:50:07.02
STEP: updating the pdb 03/13/23 18:50:07.034
STEP: Waiting for the pdb to be processed 03/13/23 18:50:07.051
STEP: patching the pdb 03/13/23 18:50:07.06
STEP: Waiting for the pdb to be processed 03/13/23 18:50:07.074
STEP: Waiting for the pdb to be deleted 03/13/23 18:50:09.091
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Mar 13 18:50:09.096: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-3965" for this suite. 03/13/23 18:50:09.101
------------------------------
â€¢ [2.197 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:50:06.916
    Mar 13 18:50:06.916: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename disruption 03/13/23 18:50:06.917
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:06.999
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:07.008
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should create a PodDisruptionBudget [Conformance]
      test/e2e/apps/disruption.go:108
    STEP: creating the pdb 03/13/23 18:50:07.013
    STEP: Waiting for the pdb to be processed 03/13/23 18:50:07.02
    STEP: updating the pdb 03/13/23 18:50:07.034
    STEP: Waiting for the pdb to be processed 03/13/23 18:50:07.051
    STEP: patching the pdb 03/13/23 18:50:07.06
    STEP: Waiting for the pdb to be processed 03/13/23 18:50:07.074
    STEP: Waiting for the pdb to be deleted 03/13/23 18:50:09.091
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:50:09.096: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-3965" for this suite. 03/13/23 18:50:09.101
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:50:09.114
Mar 13 18:50:09.115: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 18:50:09.116
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:09.138
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:09.142
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261
STEP: Creating a pod to test downward API volume plugin 03/13/23 18:50:09.185
Mar 13 18:50:09.199: INFO: Waiting up to 5m0s for pod "downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b" in namespace "downward-api-6208" to be "Succeeded or Failed"
Mar 13 18:50:09.205: INFO: Pod "downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.705039ms
Mar 13 18:50:11.215: INFO: Pod "downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016320064s
Mar 13 18:50:13.210: INFO: Pod "downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011236814s
STEP: Saw pod success 03/13/23 18:50:13.21
Mar 13 18:50:13.211: INFO: Pod "downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b" satisfied condition "Succeeded or Failed"
Mar 13 18:50:13.224: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b container client-container: <nil>
STEP: delete the pod 03/13/23 18:50:13.245
Mar 13 18:50:13.267: INFO: Waiting for pod downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b to disappear
Mar 13 18:50:13.273: INFO: Pod downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar 13 18:50:13.273: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-6208" for this suite. 03/13/23 18:50:13.279
------------------------------
â€¢ [4.170 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:50:09.114
    Mar 13 18:50:09.115: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 18:50:09.116
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:09.138
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:09.142
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:261
    STEP: Creating a pod to test downward API volume plugin 03/13/23 18:50:09.185
    Mar 13 18:50:09.199: INFO: Waiting up to 5m0s for pod "downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b" in namespace "downward-api-6208" to be "Succeeded or Failed"
    Mar 13 18:50:09.205: INFO: Pod "downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.705039ms
    Mar 13 18:50:11.215: INFO: Pod "downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016320064s
    Mar 13 18:50:13.210: INFO: Pod "downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011236814s
    STEP: Saw pod success 03/13/23 18:50:13.21
    Mar 13 18:50:13.211: INFO: Pod "downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b" satisfied condition "Succeeded or Failed"
    Mar 13 18:50:13.224: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b container client-container: <nil>
    STEP: delete the pod 03/13/23 18:50:13.245
    Mar 13 18:50:13.267: INFO: Waiting for pod downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b to disappear
    Mar 13 18:50:13.273: INFO: Pod downwardapi-volume-778d71e8-d950-458a-9ac7-c757e639607b no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:50:13.273: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-6208" for this suite. 03/13/23 18:50:13.279
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:145
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:50:13.287
Mar 13 18:50:13.287: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename custom-resource-definition 03/13/23 18:50:13.289
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:13.315
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:13.321
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:145
Mar 13 18:50:13.326: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 18:50:13.890: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-751" for this suite. 03/13/23 18:50:13.9
------------------------------
â€¢ [0.617 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    getting/updating/patching custom resource definition status sub-resource works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:145

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:50:13.287
    Mar 13 18:50:13.287: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename custom-resource-definition 03/13/23 18:50:13.289
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:13.315
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:13.321
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:145
    Mar 13 18:50:13.326: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:50:13.890: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-751" for this suite. 03/13/23 18:50:13.9
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] IngressClass API
   should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223
[BeforeEach] [sig-network] IngressClass API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:50:13.906
Mar 13 18:50:13.906: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename ingressclass 03/13/23 18:50:13.907
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:13.927
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:13.931
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:211
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223
STEP: getting /apis 03/13/23 18:50:13.937
STEP: getting /apis/networking.k8s.io 03/13/23 18:50:13.942
STEP: getting /apis/networking.k8s.iov1 03/13/23 18:50:13.944
STEP: creating 03/13/23 18:50:13.948
STEP: getting 03/13/23 18:50:13.964
STEP: listing 03/13/23 18:50:13.968
STEP: watching 03/13/23 18:50:13.972
Mar 13 18:50:13.972: INFO: starting watch
STEP: patching 03/13/23 18:50:13.974
STEP: updating 03/13/23 18:50:13.983
Mar 13 18:50:13.986: INFO: waiting for watch events with expected annotations
Mar 13 18:50:13.987: INFO: saw patched and updated annotations
STEP: deleting 03/13/23 18:50:13.987
STEP: deleting a collection 03/13/23 18:50:14.003
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/node/init/init.go:32
Mar 13 18:50:14.018: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] IngressClass API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] IngressClass API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] IngressClass API
  tear down framework | framework.go:193
STEP: Destroying namespace "ingressclass-2814" for this suite. 03/13/23 18:50:14.022
------------------------------
â€¢ [0.128 seconds]
[sig-network] IngressClass API
test/e2e/network/common/framework.go:23
   should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] IngressClass API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:50:13.906
    Mar 13 18:50:13.906: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename ingressclass 03/13/23 18:50:13.907
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:13.927
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:13.931
    [BeforeEach] [sig-network] IngressClass API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] IngressClass API
      test/e2e/network/ingressclass.go:211
    [It]  should support creating IngressClass API operations [Conformance]
      test/e2e/network/ingressclass.go:223
    STEP: getting /apis 03/13/23 18:50:13.937
    STEP: getting /apis/networking.k8s.io 03/13/23 18:50:13.942
    STEP: getting /apis/networking.k8s.iov1 03/13/23 18:50:13.944
    STEP: creating 03/13/23 18:50:13.948
    STEP: getting 03/13/23 18:50:13.964
    STEP: listing 03/13/23 18:50:13.968
    STEP: watching 03/13/23 18:50:13.972
    Mar 13 18:50:13.972: INFO: starting watch
    STEP: patching 03/13/23 18:50:13.974
    STEP: updating 03/13/23 18:50:13.983
    Mar 13 18:50:13.986: INFO: waiting for watch events with expected annotations
    Mar 13 18:50:13.987: INFO: saw patched and updated annotations
    STEP: deleting 03/13/23 18:50:13.987
    STEP: deleting a collection 03/13/23 18:50:14.003
    [AfterEach] [sig-network] IngressClass API
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:50:14.018: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] IngressClass API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] IngressClass API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] IngressClass API
      tear down framework | framework.go:193
    STEP: Destroying namespace "ingressclass-2814" for this suite. 03/13/23 18:50:14.022
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:50:14.035
Mar 13 18:50:14.035: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename podtemplate 03/13/23 18:50:14.037
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:14.052
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:14.055
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Mar 13 18:50:14.099: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-5293" for this suite. 03/13/23 18:50:14.103
------------------------------
â€¢ [0.079 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:50:14.035
    Mar 13 18:50:14.035: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename podtemplate 03/13/23 18:50:14.037
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:14.052
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:14.055
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should run the lifecycle of PodTemplates [Conformance]
      test/e2e/common/node/podtemplates.go:53
    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:50:14.099: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-5293" for this suite. 03/13/23 18:50:14.103
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:50:14.121
Mar 13 18:50:14.121: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 18:50:14.122
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:14.142
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:14.151
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130
STEP: Creating the pod 03/13/23 18:50:14.154
Mar 13 18:50:14.162: INFO: Waiting up to 5m0s for pod "labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3" in namespace "downward-api-7252" to be "running and ready"
Mar 13 18:50:14.166: INFO: Pod "labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.437507ms
Mar 13 18:50:14.166: INFO: The phase of Pod labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 18:50:16.170: INFO: Pod "labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3": Phase="Running", Reason="", readiness=true. Elapsed: 2.008307823s
Mar 13 18:50:16.170: INFO: The phase of Pod labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3 is Running (Ready = true)
Mar 13 18:50:16.170: INFO: Pod "labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3" satisfied condition "running and ready"
Mar 13 18:50:16.697: INFO: Successfully updated pod "labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar 13 18:50:20.732: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-7252" for this suite. 03/13/23 18:50:20.735
------------------------------
â€¢ [SLOW TEST] [6.618 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:50:14.121
    Mar 13 18:50:14.121: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 18:50:14.122
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:14.142
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:14.151
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should update labels on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:130
    STEP: Creating the pod 03/13/23 18:50:14.154
    Mar 13 18:50:14.162: INFO: Waiting up to 5m0s for pod "labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3" in namespace "downward-api-7252" to be "running and ready"
    Mar 13 18:50:14.166: INFO: Pod "labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.437507ms
    Mar 13 18:50:14.166: INFO: The phase of Pod labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 18:50:16.170: INFO: Pod "labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3": Phase="Running", Reason="", readiness=true. Elapsed: 2.008307823s
    Mar 13 18:50:16.170: INFO: The phase of Pod labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3 is Running (Ready = true)
    Mar 13 18:50:16.170: INFO: Pod "labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3" satisfied condition "running and ready"
    Mar 13 18:50:16.697: INFO: Successfully updated pod "labelsupdate96726660-6bb0-4a9a-982b-e60b82bb0ff3"
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:50:20.732: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-7252" for this suite. 03/13/23 18:50:20.735
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with downward pod [Conformance]
  test/e2e/storage/subpath.go:92
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:50:20.739
Mar 13 18:50:20.740: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename subpath 03/13/23 18:50:20.741
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:20.752
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:20.754
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 03/13/23 18:50:20.757
[It] should support subpaths with downward pod [Conformance]
  test/e2e/storage/subpath.go:92
STEP: Creating pod pod-subpath-test-downwardapi-6chq 03/13/23 18:50:20.764
STEP: Creating a pod to test atomic-volume-subpath 03/13/23 18:50:20.764
Mar 13 18:50:20.770: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-6chq" in namespace "subpath-659" to be "Succeeded or Failed"
Mar 13 18:50:20.772: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Pending", Reason="", readiness=false. Elapsed: 2.492076ms
Mar 13 18:50:22.776: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 2.006595364s
Mar 13 18:50:24.777: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 4.00720711s
Mar 13 18:50:26.777: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 6.007067647s
Mar 13 18:50:28.776: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 8.006083097s
Mar 13 18:50:30.776: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 10.006354205s
Mar 13 18:50:32.778: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 12.007999727s
Mar 13 18:50:34.775: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 14.00565981s
Mar 13 18:50:36.778: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 16.008209291s
Mar 13 18:50:38.776: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 18.006057612s
Mar 13 18:50:40.777: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 20.007425793s
Mar 13 18:50:42.776: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=false. Elapsed: 22.006158179s
Mar 13 18:50:44.778: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.007801303s
STEP: Saw pod success 03/13/23 18:50:44.778
Mar 13 18:50:44.778: INFO: Pod "pod-subpath-test-downwardapi-6chq" satisfied condition "Succeeded or Failed"
Mar 13 18:50:44.782: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-subpath-test-downwardapi-6chq container test-container-subpath-downwardapi-6chq: <nil>
STEP: delete the pod 03/13/23 18:50:44.791
Mar 13 18:50:44.798: INFO: Waiting for pod pod-subpath-test-downwardapi-6chq to disappear
Mar 13 18:50:44.801: INFO: Pod pod-subpath-test-downwardapi-6chq no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-6chq 03/13/23 18:50:44.801
Mar 13 18:50:44.801: INFO: Deleting pod "pod-subpath-test-downwardapi-6chq" in namespace "subpath-659"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Mar 13 18:50:44.804: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-659" for this suite. 03/13/23 18:50:44.808
------------------------------
â€¢ [SLOW TEST] [24.074 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/storage/subpath.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:50:20.739
    Mar 13 18:50:20.740: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename subpath 03/13/23 18:50:20.741
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:20.752
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:20.754
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 03/13/23 18:50:20.757
    [It] should support subpaths with downward pod [Conformance]
      test/e2e/storage/subpath.go:92
    STEP: Creating pod pod-subpath-test-downwardapi-6chq 03/13/23 18:50:20.764
    STEP: Creating a pod to test atomic-volume-subpath 03/13/23 18:50:20.764
    Mar 13 18:50:20.770: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-6chq" in namespace "subpath-659" to be "Succeeded or Failed"
    Mar 13 18:50:20.772: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Pending", Reason="", readiness=false. Elapsed: 2.492076ms
    Mar 13 18:50:22.776: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 2.006595364s
    Mar 13 18:50:24.777: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 4.00720711s
    Mar 13 18:50:26.777: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 6.007067647s
    Mar 13 18:50:28.776: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 8.006083097s
    Mar 13 18:50:30.776: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 10.006354205s
    Mar 13 18:50:32.778: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 12.007999727s
    Mar 13 18:50:34.775: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 14.00565981s
    Mar 13 18:50:36.778: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 16.008209291s
    Mar 13 18:50:38.776: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 18.006057612s
    Mar 13 18:50:40.777: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=true. Elapsed: 20.007425793s
    Mar 13 18:50:42.776: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Running", Reason="", readiness=false. Elapsed: 22.006158179s
    Mar 13 18:50:44.778: INFO: Pod "pod-subpath-test-downwardapi-6chq": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.007801303s
    STEP: Saw pod success 03/13/23 18:50:44.778
    Mar 13 18:50:44.778: INFO: Pod "pod-subpath-test-downwardapi-6chq" satisfied condition "Succeeded or Failed"
    Mar 13 18:50:44.782: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-subpath-test-downwardapi-6chq container test-container-subpath-downwardapi-6chq: <nil>
    STEP: delete the pod 03/13/23 18:50:44.791
    Mar 13 18:50:44.798: INFO: Waiting for pod pod-subpath-test-downwardapi-6chq to disappear
    Mar 13 18:50:44.801: INFO: Pod pod-subpath-test-downwardapi-6chq no longer exists
    STEP: Deleting pod pod-subpath-test-downwardapi-6chq 03/13/23 18:50:44.801
    Mar 13 18:50:44.801: INFO: Deleting pod "pod-subpath-test-downwardapi-6chq" in namespace "subpath-659"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:50:44.804: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-659" for this suite. 03/13/23 18:50:44.808
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:50:44.814
Mar 13 18:50:44.814: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 18:50:44.818
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:44.829
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:44.831
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137
STEP: Creating a pod to test emptydir 0666 on tmpfs 03/13/23 18:50:44.835
Mar 13 18:50:44.841: INFO: Waiting up to 5m0s for pod "pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8" in namespace "emptydir-8509" to be "Succeeded or Failed"
Mar 13 18:50:44.844: INFO: Pod "pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.493411ms
Mar 13 18:50:46.847: INFO: Pod "pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006162999s
Mar 13 18:50:48.846: INFO: Pod "pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00540994s
STEP: Saw pod success 03/13/23 18:50:48.846
Mar 13 18:50:48.847: INFO: Pod "pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8" satisfied condition "Succeeded or Failed"
Mar 13 18:50:48.849: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8 container test-container: <nil>
STEP: delete the pod 03/13/23 18:50:48.855
Mar 13 18:50:48.862: INFO: Waiting for pod pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8 to disappear
Mar 13 18:50:48.864: INFO: Pod pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 18:50:48.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-8509" for this suite. 03/13/23 18:50:48.867
------------------------------
â€¢ [4.056 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:50:44.814
    Mar 13 18:50:44.814: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 18:50:44.818
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:44.829
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:44.831
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:137
    STEP: Creating a pod to test emptydir 0666 on tmpfs 03/13/23 18:50:44.835
    Mar 13 18:50:44.841: INFO: Waiting up to 5m0s for pod "pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8" in namespace "emptydir-8509" to be "Succeeded or Failed"
    Mar 13 18:50:44.844: INFO: Pod "pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.493411ms
    Mar 13 18:50:46.847: INFO: Pod "pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006162999s
    Mar 13 18:50:48.846: INFO: Pod "pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00540994s
    STEP: Saw pod success 03/13/23 18:50:48.846
    Mar 13 18:50:48.847: INFO: Pod "pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8" satisfied condition "Succeeded or Failed"
    Mar 13 18:50:48.849: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8 container test-container: <nil>
    STEP: delete the pod 03/13/23 18:50:48.855
    Mar 13 18:50:48.862: INFO: Waiting for pod pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8 to disappear
    Mar 13 18:50:48.864: INFO: Pod pod-d858817a-9ad2-43ce-90cc-d93ea5e602c8 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:50:48.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-8509" for this suite. 03/13/23 18:50:48.867
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:50:48.873
Mar 13 18:50:48.873: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename dns 03/13/23 18:50:48.874
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:48.882
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:48.884
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193
STEP: Creating a test headless service 03/13/23 18:50:48.887
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4518 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4518;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4518 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4518;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4518.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4518.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4518.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4518.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4518.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4518.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4518.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4518.svc;check="$$(dig +notcp +noall +answer +search 181.11.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.11.181_udp@PTR;check="$$(dig +tcp +noall +answer +search 181.11.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.11.181_tcp@PTR;sleep 1; done
 03/13/23 18:50:48.899
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4518 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4518;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4518 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4518;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4518.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4518.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4518.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4518.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4518.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4518.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4518.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4518.svc;check="$$(dig +notcp +noall +answer +search 181.11.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.11.181_udp@PTR;check="$$(dig +tcp +noall +answer +search 181.11.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.11.181_tcp@PTR;sleep 1; done
 03/13/23 18:50:48.899
STEP: creating a pod to probe DNS 03/13/23 18:50:48.9
STEP: submitting the pod to kubernetes 03/13/23 18:50:48.9
Mar 13 18:50:48.905: INFO: Waiting up to 15m0s for pod "dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4" in namespace "dns-4518" to be "running"
Mar 13 18:50:48.910: INFO: Pod "dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.091801ms
Mar 13 18:50:50.914: INFO: Pod "dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4": Phase="Running", Reason="", readiness=true. Elapsed: 2.008032203s
Mar 13 18:50:50.914: INFO: Pod "dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4" satisfied condition "running"
STEP: retrieving the pod 03/13/23 18:50:50.915
STEP: looking for the results for each expected name from probers 03/13/23 18:50:50.917
Mar 13 18:50:50.926: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:50.930: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:50.933: INFO: Unable to read wheezy_udp@dns-test-service.dns-4518 from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:50.937: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4518 from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:50.941: INFO: Unable to read wheezy_udp@dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:50.946: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:50.950: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:50.953: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:50.978: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:50.982: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:50.987: INFO: Unable to read jessie_udp@dns-test-service.dns-4518 from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:50.991: INFO: Unable to read jessie_tcp@dns-test-service.dns-4518 from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:50.996: INFO: Unable to read jessie_udp@dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:51.000: INFO: Unable to read jessie_tcp@dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:51.005: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:51.010: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
Mar 13 18:50:51.027: INFO: Lookups using dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4518 wheezy_tcp@dns-test-service.dns-4518 wheezy_udp@dns-test-service.dns-4518.svc wheezy_tcp@dns-test-service.dns-4518.svc wheezy_udp@_http._tcp.dns-test-service.dns-4518.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4518.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4518 jessie_tcp@dns-test-service.dns-4518 jessie_udp@dns-test-service.dns-4518.svc jessie_tcp@dns-test-service.dns-4518.svc jessie_udp@_http._tcp.dns-test-service.dns-4518.svc jessie_tcp@_http._tcp.dns-test-service.dns-4518.svc]

Mar 13 18:50:56.179: INFO: DNS probes using dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4 succeeded

STEP: deleting the pod 03/13/23 18:50:56.179
STEP: deleting the test service 03/13/23 18:50:56.202
STEP: deleting the test headless service 03/13/23 18:50:56.214
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar 13 18:50:56.239: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-4518" for this suite. 03/13/23 18:50:56.272
------------------------------
â€¢ [SLOW TEST] [7.420 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:50:48.873
    Mar 13 18:50:48.873: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename dns 03/13/23 18:50:48.874
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:48.882
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:48.884
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
      test/e2e/network/dns.go:193
    STEP: Creating a test headless service 03/13/23 18:50:48.887
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4518 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4518;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4518 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4518;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4518.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4518.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4518.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4518.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4518.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4518.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4518.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4518.svc;check="$$(dig +notcp +noall +answer +search 181.11.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.11.181_udp@PTR;check="$$(dig +tcp +noall +answer +search 181.11.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.11.181_tcp@PTR;sleep 1; done
     03/13/23 18:50:48.899
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4518 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4518;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4518 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4518;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4518.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4518.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4518.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4518.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4518.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4518.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4518.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4518.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4518.svc;check="$$(dig +notcp +noall +answer +search 181.11.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.11.181_udp@PTR;check="$$(dig +tcp +noall +answer +search 181.11.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.11.181_tcp@PTR;sleep 1; done
     03/13/23 18:50:48.899
    STEP: creating a pod to probe DNS 03/13/23 18:50:48.9
    STEP: submitting the pod to kubernetes 03/13/23 18:50:48.9
    Mar 13 18:50:48.905: INFO: Waiting up to 15m0s for pod "dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4" in namespace "dns-4518" to be "running"
    Mar 13 18:50:48.910: INFO: Pod "dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.091801ms
    Mar 13 18:50:50.914: INFO: Pod "dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4": Phase="Running", Reason="", readiness=true. Elapsed: 2.008032203s
    Mar 13 18:50:50.914: INFO: Pod "dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4" satisfied condition "running"
    STEP: retrieving the pod 03/13/23 18:50:50.915
    STEP: looking for the results for each expected name from probers 03/13/23 18:50:50.917
    Mar 13 18:50:50.926: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:50.930: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:50.933: INFO: Unable to read wheezy_udp@dns-test-service.dns-4518 from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:50.937: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4518 from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:50.941: INFO: Unable to read wheezy_udp@dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:50.946: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:50.950: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:50.953: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:50.978: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:50.982: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:50.987: INFO: Unable to read jessie_udp@dns-test-service.dns-4518 from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:50.991: INFO: Unable to read jessie_tcp@dns-test-service.dns-4518 from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:50.996: INFO: Unable to read jessie_udp@dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:51.000: INFO: Unable to read jessie_tcp@dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:51.005: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:51.010: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4518.svc from pod dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4: the server could not find the requested resource (get pods dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4)
    Mar 13 18:50:51.027: INFO: Lookups using dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4518 wheezy_tcp@dns-test-service.dns-4518 wheezy_udp@dns-test-service.dns-4518.svc wheezy_tcp@dns-test-service.dns-4518.svc wheezy_udp@_http._tcp.dns-test-service.dns-4518.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4518.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4518 jessie_tcp@dns-test-service.dns-4518 jessie_udp@dns-test-service.dns-4518.svc jessie_tcp@dns-test-service.dns-4518.svc jessie_udp@_http._tcp.dns-test-service.dns-4518.svc jessie_tcp@_http._tcp.dns-test-service.dns-4518.svc]

    Mar 13 18:50:56.179: INFO: DNS probes using dns-4518/dns-test-69ccf6f1-b61b-43ba-a339-dde85143a0c4 succeeded

    STEP: deleting the pod 03/13/23 18:50:56.179
    STEP: deleting the test service 03/13/23 18:50:56.202
    STEP: deleting the test headless service 03/13/23 18:50:56.214
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:50:56.239: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-4518" for this suite. 03/13/23 18:50:56.272
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:50:56.294
Mar 13 18:50:56.294: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename deployment 03/13/23 18:50:56.296
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:56.336
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:56.355
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122
Mar 13 18:50:56.411: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Mar 13 18:51:01.422: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 03/13/23 18:51:01.422
Mar 13 18:51:01.422: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up 03/13/23 18:51:01.431
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar 13 18:51:01.438: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-9810  16f75a3e-6ee6-4959-9e74-350e3808aee8 4737 1 2023-03-13 18:51:01 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] [{e2e.test Update apps/v1 2023-03-13 18:51:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001652a08 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

Mar 13 18:51:01.441: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
Mar 13 18:51:01.441: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
Mar 13 18:51:01.441: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-9810  9659cd6a-67e9-4223-b546-a8c53eeacc8d 4738 1 2023-03-13 18:50:56 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment 16f75a3e-6ee6-4959-9e74-350e3808aee8 0xc001545fff 0xc001aec010}] [] [{e2e.test Update apps/v1 2023-03-13 18:50:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 18:50:57 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-03-13 18:51:01 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"16f75a3e-6ee6-4959-9e74-350e3808aee8\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc001aec0c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Mar 13 18:51:01.446: INFO: Pod "test-cleanup-controller-4hl8c" is available:
&Pod{ObjectMeta:{test-cleanup-controller-4hl8c test-cleanup-controller- deployment-9810  504c82ea-da8a-43d1-adbe-f33251eea9e4 4711 0 2023-03-13 18:50:56 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[cni.projectcalico.org/containerID:fab585a1036ebb0ea39215df1fa8907202ee97fe38886f9f7575a33e5685f15d cni.projectcalico.org/podIP:10.244.181.168/32 cni.projectcalico.org/podIPs:10.244.181.168/32,2001:db8:42:1f:e556:e398:18f3:c267/128] [{apps/v1 ReplicaSet test-cleanup-controller 9659cd6a-67e9-4223-b546-a8c53eeacc8d 0xc001aec3cf 0xc001aec3e0}] [] [{kube-controller-manager Update v1 2023-03-13 18:50:56 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9659cd6a-67e9-4223-b546-a8c53eeacc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 18:50:57 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 18:50:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.168\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c267\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5l8nq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5l8nq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:50:56 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:50:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:50:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:50:56 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.168,StartTime:2023-03-13 18:50:56 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 18:50:57 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://01bad8191964e92a320bccea82e4283f41a1f1f9129e978f06ea3a01af0d08da,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.168,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c267,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar 13 18:51:01.446: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-9810" for this suite. 03/13/23 18:51:01.451
------------------------------
â€¢ [SLOW TEST] [5.164 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:50:56.294
    Mar 13 18:50:56.294: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename deployment 03/13/23 18:50:56.296
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:50:56.336
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:50:56.355
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should delete old replica sets [Conformance]
      test/e2e/apps/deployment.go:122
    Mar 13 18:50:56.411: INFO: Pod name cleanup-pod: Found 0 pods out of 1
    Mar 13 18:51:01.422: INFO: Pod name cleanup-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 03/13/23 18:51:01.422
    Mar 13 18:51:01.422: INFO: Creating deployment test-cleanup-deployment
    STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up 03/13/23 18:51:01.431
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar 13 18:51:01.438: INFO: Deployment "test-cleanup-deployment":
    &Deployment{ObjectMeta:{test-cleanup-deployment  deployment-9810  16f75a3e-6ee6-4959-9e74-350e3808aee8 4737 1 2023-03-13 18:51:01 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] [{e2e.test Update apps/v1 2023-03-13 18:51:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001652a08 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

    Mar 13 18:51:01.441: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
    Mar 13 18:51:01.441: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
    Mar 13 18:51:01.441: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-9810  9659cd6a-67e9-4223-b546-a8c53eeacc8d 4738 1 2023-03-13 18:50:56 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment 16f75a3e-6ee6-4959-9e74-350e3808aee8 0xc001545fff 0xc001aec010}] [] [{e2e.test Update apps/v1 2023-03-13 18:50:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 18:50:57 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-03-13 18:51:01 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"16f75a3e-6ee6-4959-9e74-350e3808aee8\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc001aec0c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Mar 13 18:51:01.446: INFO: Pod "test-cleanup-controller-4hl8c" is available:
    &Pod{ObjectMeta:{test-cleanup-controller-4hl8c test-cleanup-controller- deployment-9810  504c82ea-da8a-43d1-adbe-f33251eea9e4 4711 0 2023-03-13 18:50:56 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[cni.projectcalico.org/containerID:fab585a1036ebb0ea39215df1fa8907202ee97fe38886f9f7575a33e5685f15d cni.projectcalico.org/podIP:10.244.181.168/32 cni.projectcalico.org/podIPs:10.244.181.168/32,2001:db8:42:1f:e556:e398:18f3:c267/128] [{apps/v1 ReplicaSet test-cleanup-controller 9659cd6a-67e9-4223-b546-a8c53eeacc8d 0xc001aec3cf 0xc001aec3e0}] [] [{kube-controller-manager Update v1 2023-03-13 18:50:56 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9659cd6a-67e9-4223-b546-a8c53eeacc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 18:50:57 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 18:50:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.168\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c267\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5l8nq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5l8nq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:50:56 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:50:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:50:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 18:50:56 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.168,StartTime:2023-03-13 18:50:56 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 18:50:57 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://01bad8191964e92a320bccea82e4283f41a1f1f9129e978f06ea3a01af0d08da,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.168,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c267,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:51:01.446: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-9810" for this suite. 03/13/23 18:51:01.451
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:51:01.466
Mar 13 18:51:01.466: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 18:51:01.468
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:51:01.482
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:51:01.486
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97
STEP: Creating a pod to test emptydir 0644 on tmpfs 03/13/23 18:51:01.49
Mar 13 18:51:01.498: INFO: Waiting up to 5m0s for pod "pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e" in namespace "emptydir-4399" to be "Succeeded or Failed"
Mar 13 18:51:01.500: INFO: Pod "pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.320613ms
Mar 13 18:51:03.516: INFO: Pod "pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017621337s
Mar 13 18:51:05.509: INFO: Pod "pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010922303s
STEP: Saw pod success 03/13/23 18:51:05.509
Mar 13 18:51:05.510: INFO: Pod "pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e" satisfied condition "Succeeded or Failed"
Mar 13 18:51:05.516: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e container test-container: <nil>
STEP: delete the pod 03/13/23 18:51:05.542
Mar 13 18:51:05.560: INFO: Waiting for pod pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e to disappear
Mar 13 18:51:05.568: INFO: Pod pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 18:51:05.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-4399" for this suite. 03/13/23 18:51:05.575
------------------------------
â€¢ [4.118 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:51:01.466
    Mar 13 18:51:01.466: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 18:51:01.468
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:51:01.482
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:51:01.486
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:97
    STEP: Creating a pod to test emptydir 0644 on tmpfs 03/13/23 18:51:01.49
    Mar 13 18:51:01.498: INFO: Waiting up to 5m0s for pod "pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e" in namespace "emptydir-4399" to be "Succeeded or Failed"
    Mar 13 18:51:01.500: INFO: Pod "pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.320613ms
    Mar 13 18:51:03.516: INFO: Pod "pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017621337s
    Mar 13 18:51:05.509: INFO: Pod "pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010922303s
    STEP: Saw pod success 03/13/23 18:51:05.509
    Mar 13 18:51:05.510: INFO: Pod "pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e" satisfied condition "Succeeded or Failed"
    Mar 13 18:51:05.516: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e container test-container: <nil>
    STEP: delete the pod 03/13/23 18:51:05.542
    Mar 13 18:51:05.560: INFO: Waiting for pod pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e to disappear
    Mar 13 18:51:05.568: INFO: Pod pod-eefd77db-4e09-468f-b3a4-dfa82e3fe75e no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:51:05.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-4399" for this suite. 03/13/23 18:51:05.575
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:51:05.592
Mar 13 18:51:05.593: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 18:51:05.594
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:51:05.613
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:51:05.62
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87
STEP: Creating a pod to test emptydir volume type on tmpfs 03/13/23 18:51:05.63
Mar 13 18:51:05.643: INFO: Waiting up to 5m0s for pod "pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068" in namespace "emptydir-6093" to be "Succeeded or Failed"
Mar 13 18:51:05.651: INFO: Pod "pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068": Phase="Pending", Reason="", readiness=false. Elapsed: 8.29299ms
Mar 13 18:51:07.668: INFO: Pod "pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024827825s
Mar 13 18:51:09.658: INFO: Pod "pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015356712s
Mar 13 18:51:11.661: INFO: Pod "pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.018316423s
STEP: Saw pod success 03/13/23 18:51:11.661
Mar 13 18:51:11.662: INFO: Pod "pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068" satisfied condition "Succeeded or Failed"
Mar 13 18:51:11.666: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068 container test-container: <nil>
STEP: delete the pod 03/13/23 18:51:11.687
Mar 13 18:51:11.703: INFO: Waiting for pod pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068 to disappear
Mar 13 18:51:11.723: INFO: Pod pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 18:51:11.723: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-6093" for this suite. 03/13/23 18:51:11.728
------------------------------
â€¢ [SLOW TEST] [6.146 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:51:05.592
    Mar 13 18:51:05.593: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 18:51:05.594
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:51:05.613
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:51:05.62
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:87
    STEP: Creating a pod to test emptydir volume type on tmpfs 03/13/23 18:51:05.63
    Mar 13 18:51:05.643: INFO: Waiting up to 5m0s for pod "pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068" in namespace "emptydir-6093" to be "Succeeded or Failed"
    Mar 13 18:51:05.651: INFO: Pod "pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068": Phase="Pending", Reason="", readiness=false. Elapsed: 8.29299ms
    Mar 13 18:51:07.668: INFO: Pod "pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024827825s
    Mar 13 18:51:09.658: INFO: Pod "pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015356712s
    Mar 13 18:51:11.661: INFO: Pod "pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.018316423s
    STEP: Saw pod success 03/13/23 18:51:11.661
    Mar 13 18:51:11.662: INFO: Pod "pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068" satisfied condition "Succeeded or Failed"
    Mar 13 18:51:11.666: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068 container test-container: <nil>
    STEP: delete the pod 03/13/23 18:51:11.687
    Mar 13 18:51:11.703: INFO: Waiting for pod pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068 to disappear
    Mar 13 18:51:11.723: INFO: Pod pod-7e25fdb2-ac7b-42c0-a3f2-b41752943068 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:51:11.723: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-6093" for this suite. 03/13/23 18:51:11.728
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:51:11.741
Mar 13 18:51:11.742: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 18:51:11.743
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:51:11.779
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:51:11.783
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 18:51:11.815
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 18:51:12.671
STEP: Deploying the webhook pod 03/13/23 18:51:12.691
STEP: Wait for the deployment to be ready 03/13/23 18:51:12.711
Mar 13 18:51:12.725: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/13/23 18:51:14.741
STEP: Verifying the service has paired with the endpoint 03/13/23 18:51:14.751
Mar 13 18:51:15.752: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209
STEP: Registering the webhook via the AdmissionRegistration API 03/13/23 18:51:15.772
STEP: create a pod 03/13/23 18:51:15.797
Mar 13 18:51:15.802: INFO: Waiting up to 5m0s for pod "to-be-attached-pod" in namespace "webhook-3185" to be "running"
Mar 13 18:51:15.805: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.515173ms
Mar 13 18:51:17.809: INFO: Pod "to-be-attached-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.00637694s
Mar 13 18:51:17.809: INFO: Pod "to-be-attached-pod" satisfied condition "running"
STEP: 'kubectl attach' the pod, should be denied by the webhook 03/13/23 18:51:17.809
Mar 13 18:51:17.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=webhook-3185 attach --namespace=webhook-3185 to-be-attached-pod -i -c=container1'
Mar 13 18:51:17.927: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 18:51:17.931: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-3185" for this suite. 03/13/23 18:51:17.959
STEP: Destroying namespace "webhook-3185-markers" for this suite. 03/13/23 18:51:17.962
------------------------------
â€¢ [SLOW TEST] [6.233 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:51:11.741
    Mar 13 18:51:11.742: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 18:51:11.743
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:51:11.779
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:51:11.783
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 18:51:11.815
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 18:51:12.671
    STEP: Deploying the webhook pod 03/13/23 18:51:12.691
    STEP: Wait for the deployment to be ready 03/13/23 18:51:12.711
    Mar 13 18:51:12.725: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/13/23 18:51:14.741
    STEP: Verifying the service has paired with the endpoint 03/13/23 18:51:14.751
    Mar 13 18:51:15.752: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny attaching pod [Conformance]
      test/e2e/apimachinery/webhook.go:209
    STEP: Registering the webhook via the AdmissionRegistration API 03/13/23 18:51:15.772
    STEP: create a pod 03/13/23 18:51:15.797
    Mar 13 18:51:15.802: INFO: Waiting up to 5m0s for pod "to-be-attached-pod" in namespace "webhook-3185" to be "running"
    Mar 13 18:51:15.805: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.515173ms
    Mar 13 18:51:17.809: INFO: Pod "to-be-attached-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.00637694s
    Mar 13 18:51:17.809: INFO: Pod "to-be-attached-pod" satisfied condition "running"
    STEP: 'kubectl attach' the pod, should be denied by the webhook 03/13/23 18:51:17.809
    Mar 13 18:51:17.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=webhook-3185 attach --namespace=webhook-3185 to-be-attached-pod -i -c=container1'
    Mar 13 18:51:17.927: INFO: rc: 1
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:51:17.931: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-3185" for this suite. 03/13/23 18:51:17.959
    STEP: Destroying namespace "webhook-3185-markers" for this suite. 03/13/23 18:51:17.962
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin]
  should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:51:17.983
Mar 13 18:51:17.983: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename certificates 03/13/23 18:51:17.993
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:51:18.025
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:51:18.038
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200
STEP: getting /apis 03/13/23 18:51:19.4
STEP: getting /apis/certificates.k8s.io 03/13/23 18:51:19.404
STEP: getting /apis/certificates.k8s.io/v1 03/13/23 18:51:19.405
STEP: creating 03/13/23 18:51:19.406
STEP: getting 03/13/23 18:51:19.418
STEP: listing 03/13/23 18:51:19.421
STEP: watching 03/13/23 18:51:19.424
Mar 13 18:51:19.425: INFO: starting watch
STEP: patching 03/13/23 18:51:19.426
STEP: updating 03/13/23 18:51:19.43
Mar 13 18:51:19.435: INFO: waiting for watch events with expected annotations
Mar 13 18:51:19.435: INFO: saw patched and updated annotations
STEP: getting /approval 03/13/23 18:51:19.436
STEP: patching /approval 03/13/23 18:51:19.439
STEP: updating /approval 03/13/23 18:51:19.444
STEP: getting /status 03/13/23 18:51:19.449
STEP: patching /status 03/13/23 18:51:19.452
STEP: updating /status 03/13/23 18:51:19.458
STEP: deleting 03/13/23 18:51:19.463
STEP: deleting a collection 03/13/23 18:51:19.472
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 18:51:19.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "certificates-9195" for this suite. 03/13/23 18:51:19.486
------------------------------
â€¢ [1.508 seconds]
[sig-auth] Certificates API [Privileged:ClusterAdmin]
test/e2e/auth/framework.go:23
  should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:51:17.983
    Mar 13 18:51:17.983: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename certificates 03/13/23 18:51:17.993
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:51:18.025
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:51:18.038
    [BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CSR API operations [Conformance]
      test/e2e/auth/certificates.go:200
    STEP: getting /apis 03/13/23 18:51:19.4
    STEP: getting /apis/certificates.k8s.io 03/13/23 18:51:19.404
    STEP: getting /apis/certificates.k8s.io/v1 03/13/23 18:51:19.405
    STEP: creating 03/13/23 18:51:19.406
    STEP: getting 03/13/23 18:51:19.418
    STEP: listing 03/13/23 18:51:19.421
    STEP: watching 03/13/23 18:51:19.424
    Mar 13 18:51:19.425: INFO: starting watch
    STEP: patching 03/13/23 18:51:19.426
    STEP: updating 03/13/23 18:51:19.43
    Mar 13 18:51:19.435: INFO: waiting for watch events with expected annotations
    Mar 13 18:51:19.435: INFO: saw patched and updated annotations
    STEP: getting /approval 03/13/23 18:51:19.436
    STEP: patching /approval 03/13/23 18:51:19.439
    STEP: updating /approval 03/13/23 18:51:19.444
    STEP: getting /status 03/13/23 18:51:19.449
    STEP: patching /status 03/13/23 18:51:19.452
    STEP: updating /status 03/13/23 18:51:19.458
    STEP: deleting 03/13/23 18:51:19.463
    STEP: deleting a collection 03/13/23 18:51:19.472
    [AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:51:19.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "certificates-9195" for this suite. 03/13/23 18:51:19.486
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/scheduling/preemption.go:814
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:51:19.491
Mar 13 18:51:19.491: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename sched-preemption 03/13/23 18:51:19.492
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:51:19.501
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:51:19.504
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:97
Mar 13 18:51:19.517: INFO: Waiting up to 1m0s for all nodes to be ready
Mar 13 18:52:19.543: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:52:19.546
Mar 13 18:52:19.547: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename sched-preemption-path 03/13/23 18:52:19.548
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:52:19.562
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:52:19.565
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:771
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/scheduling/preemption.go:814
Mar 13 18:52:19.581: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
Mar 13 18:52:19.584: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/node/init/init.go:32
Mar 13 18:52:19.597: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:787
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 18:52:19.608: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] PriorityClass endpoints
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] PriorityClass endpoints
  dump namespaces | framework.go:196
[DeferCleanup (Each)] PriorityClass endpoints
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-path-1094" for this suite. 03/13/23 18:52:19.631
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-2320" for this suite. 03/13/23 18:52:19.636
------------------------------
â€¢ [SLOW TEST] [60.151 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:764
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/scheduling/preemption.go:814

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:51:19.491
    Mar 13 18:51:19.491: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename sched-preemption 03/13/23 18:51:19.492
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:51:19.501
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:51:19.504
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:97
    Mar 13 18:51:19.517: INFO: Waiting up to 1m0s for all nodes to be ready
    Mar 13 18:52:19.543: INFO: Waiting for terminating namespaces to be deleted...
    [BeforeEach] PriorityClass endpoints
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:52:19.546
    Mar 13 18:52:19.547: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename sched-preemption-path 03/13/23 18:52:19.548
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:52:19.562
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:52:19.565
    [BeforeEach] PriorityClass endpoints
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] PriorityClass endpoints
      test/e2e/scheduling/preemption.go:771
    [It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
      test/e2e/scheduling/preemption.go:814
    Mar 13 18:52:19.581: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
    Mar 13 18:52:19.584: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
    [AfterEach] PriorityClass endpoints
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:52:19.597: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] PriorityClass endpoints
      test/e2e/scheduling/preemption.go:787
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:52:19.608: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] PriorityClass endpoints
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] PriorityClass endpoints
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] PriorityClass endpoints
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-path-1094" for this suite. 03/13/23 18:52:19.631
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-2320" for this suite. 03/13/23 18:52:19.636
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:52:19.648
Mar 13 18:52:19.648: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 18:52:19.649
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:52:19.658
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:52:19.66
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 18:52:19.672
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 18:52:20.379
STEP: Deploying the webhook pod 03/13/23 18:52:20.385
STEP: Wait for the deployment to be ready 03/13/23 18:52:20.395
Mar 13 18:52:20.400: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service 03/13/23 18:52:22.409
STEP: Verifying the service has paired with the endpoint 03/13/23 18:52:22.418
Mar 13 18:52:23.420: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API 03/13/23 18:52:23.423
STEP: create a configmap that should be updated by the webhook 03/13/23 18:52:23.445
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 18:52:23.474: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-3148" for this suite. 03/13/23 18:52:23.499
STEP: Destroying namespace "webhook-3148-markers" for this suite. 03/13/23 18:52:23.513
------------------------------
â€¢ [3.869 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:52:19.648
    Mar 13 18:52:19.648: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 18:52:19.649
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:52:19.658
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:52:19.66
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 18:52:19.672
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 18:52:20.379
    STEP: Deploying the webhook pod 03/13/23 18:52:20.385
    STEP: Wait for the deployment to be ready 03/13/23 18:52:20.395
    Mar 13 18:52:20.400: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
    STEP: Deploying the webhook service 03/13/23 18:52:22.409
    STEP: Verifying the service has paired with the endpoint 03/13/23 18:52:22.418
    Mar 13 18:52:23.420: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate configmap [Conformance]
      test/e2e/apimachinery/webhook.go:252
    STEP: Registering the mutating configmap webhook via the AdmissionRegistration API 03/13/23 18:52:23.423
    STEP: create a configmap that should be updated by the webhook 03/13/23 18:52:23.445
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:52:23.474: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-3148" for this suite. 03/13/23 18:52:23.499
    STEP: Destroying namespace "webhook-3148-markers" for this suite. 03/13/23 18:52:23.513
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:52:23.556
Mar 13 18:52:23.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename secrets 03/13/23 18:52:23.557
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:52:23.572
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:52:23.575
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79
STEP: Creating secret with name secret-test-map-ac057e51-f795-4420-a78b-89df69b78e84 03/13/23 18:52:23.578
STEP: Creating a pod to test consume secrets 03/13/23 18:52:23.582
Mar 13 18:52:23.590: INFO: Waiting up to 5m0s for pod "pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb" in namespace "secrets-5210" to be "Succeeded or Failed"
Mar 13 18:52:23.593: INFO: Pod "pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb": Phase="Pending", Reason="", readiness=false. Elapsed: 3.024046ms
Mar 13 18:52:25.597: INFO: Pod "pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007902964s
Mar 13 18:52:27.597: INFO: Pod "pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00736348s
STEP: Saw pod success 03/13/23 18:52:27.597
Mar 13 18:52:27.597: INFO: Pod "pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb" satisfied condition "Succeeded or Failed"
Mar 13 18:52:27.600: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb container secret-volume-test: <nil>
STEP: delete the pod 03/13/23 18:52:27.608
Mar 13 18:52:27.614: INFO: Waiting for pod pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb to disappear
Mar 13 18:52:27.617: INFO: Pod pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar 13 18:52:27.617: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-5210" for this suite. 03/13/23 18:52:27.62
------------------------------
â€¢ [4.069 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:52:23.556
    Mar 13 18:52:23.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename secrets 03/13/23 18:52:23.557
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:52:23.572
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:52:23.575
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:79
    STEP: Creating secret with name secret-test-map-ac057e51-f795-4420-a78b-89df69b78e84 03/13/23 18:52:23.578
    STEP: Creating a pod to test consume secrets 03/13/23 18:52:23.582
    Mar 13 18:52:23.590: INFO: Waiting up to 5m0s for pod "pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb" in namespace "secrets-5210" to be "Succeeded or Failed"
    Mar 13 18:52:23.593: INFO: Pod "pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb": Phase="Pending", Reason="", readiness=false. Elapsed: 3.024046ms
    Mar 13 18:52:25.597: INFO: Pod "pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007902964s
    Mar 13 18:52:27.597: INFO: Pod "pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00736348s
    STEP: Saw pod success 03/13/23 18:52:27.597
    Mar 13 18:52:27.597: INFO: Pod "pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb" satisfied condition "Succeeded or Failed"
    Mar 13 18:52:27.600: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb container secret-volume-test: <nil>
    STEP: delete the pod 03/13/23 18:52:27.608
    Mar 13 18:52:27.614: INFO: Waiting for pod pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb to disappear
    Mar 13 18:52:27.617: INFO: Pod pod-secrets-40297db8-f676-42ce-9848-15e860e57fcb no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:52:27.617: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-5210" for this suite. 03/13/23 18:52:27.62
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions
  should check if v1 is in available api versions  [Conformance]
  test/e2e/kubectl/kubectl.go:824
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:52:27.633
Mar 13 18:52:27.633: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 18:52:27.634
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:52:27.643
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:52:27.645
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/kubectl/kubectl.go:824
STEP: validating api versions 03/13/23 18:52:27.648
Mar 13 18:52:27.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-4243 api-versions'
Mar 13 18:52:27.746: INFO: stderr: ""
Mar 13 18:52:27.747: INFO: stdout: "admissionregistration.k8s.io/v1\nadmissionregistration.k8s.io/v1alpha1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\ninternal.apiserver.k8s.io/v1alpha1\nnetworking.k8s.io/v1\nnetworking.k8s.io/v1alpha1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1alpha1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 18:52:27.747: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-4243" for this suite. 03/13/23 18:52:27.75
------------------------------
â€¢ [0.122 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl api-versions
  test/e2e/kubectl/kubectl.go:818
    should check if v1 is in available api versions  [Conformance]
    test/e2e/kubectl/kubectl.go:824

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:52:27.633
    Mar 13 18:52:27.633: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 18:52:27.634
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:52:27.643
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:52:27.645
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if v1 is in available api versions  [Conformance]
      test/e2e/kubectl/kubectl.go:824
    STEP: validating api versions 03/13/23 18:52:27.648
    Mar 13 18:52:27.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-4243 api-versions'
    Mar 13 18:52:27.746: INFO: stderr: ""
    Mar 13 18:52:27.747: INFO: stdout: "admissionregistration.k8s.io/v1\nadmissionregistration.k8s.io/v1alpha1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\ninternal.apiserver.k8s.io/v1alpha1\nnetworking.k8s.io/v1\nnetworking.k8s.io/v1alpha1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1alpha1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:52:27.747: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-4243" for this suite. 03/13/23 18:52:27.75
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:52:27.755
Mar 13 18:52:27.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-probe 03/13/23 18:52:27.756
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:52:27.763
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:52:27.766
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar 13 18:53:27.778: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-9155" for this suite. 03/13/23 18:53:27.782
------------------------------
â€¢ [SLOW TEST] [60.031 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:52:27.755
    Mar 13 18:52:27.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-probe 03/13/23 18:52:27.756
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:52:27.763
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:52:27.766
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:108
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:53:27.778: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-9155" for this suite. 03/13/23 18:53:27.782
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts
  should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:53:27.786
Mar 13 18:53:27.787: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename svcaccounts 03/13/23 18:53:27.789
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:53:27.799
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:53:27.802
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810
STEP: Creating ServiceAccount "e2e-sa-b6gnc"  03/13/23 18:53:27.805
Mar 13 18:53:27.809: INFO: AutomountServiceAccountToken: false
STEP: Updating ServiceAccount "e2e-sa-b6gnc"  03/13/23 18:53:27.809
Mar 13 18:53:27.815: INFO: AutomountServiceAccountToken: true
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar 13 18:53:27.816: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-7819" for this suite. 03/13/23 18:53:27.82
------------------------------
â€¢ [0.038 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:53:27.786
    Mar 13 18:53:27.787: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename svcaccounts 03/13/23 18:53:27.789
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:53:27.799
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:53:27.802
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should update a ServiceAccount [Conformance]
      test/e2e/auth/service_accounts.go:810
    STEP: Creating ServiceAccount "e2e-sa-b6gnc"  03/13/23 18:53:27.805
    Mar 13 18:53:27.809: INFO: AutomountServiceAccountToken: false
    STEP: Updating ServiceAccount "e2e-sa-b6gnc"  03/13/23 18:53:27.809
    Mar 13 18:53:27.815: INFO: AutomountServiceAccountToken: true
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:53:27.816: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-7819" for this suite. 03/13/23 18:53:27.82
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:53:27.826
Mar 13 18:53:27.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-probe 03/13/23 18:53:27.827
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:53:27.836
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:53:27.839
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152
STEP: Creating pod busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae in namespace container-probe-2652 03/13/23 18:53:27.842
Mar 13 18:53:27.856: INFO: Waiting up to 5m0s for pod "busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae" in namespace "container-probe-2652" to be "not pending"
Mar 13 18:53:27.860: INFO: Pod "busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae": Phase="Pending", Reason="", readiness=false. Elapsed: 2.978635ms
Mar 13 18:53:29.864: INFO: Pod "busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae": Phase="Running", Reason="", readiness=true. Elapsed: 2.006917161s
Mar 13 18:53:29.864: INFO: Pod "busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae" satisfied condition "not pending"
Mar 13 18:53:29.864: INFO: Started pod busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae in namespace container-probe-2652
STEP: checking the pod's current state and verifying that restartCount is present 03/13/23 18:53:29.864
Mar 13 18:53:29.868: INFO: Initial restart count of pod busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae is 0
STEP: deleting the pod 03/13/23 18:57:30.536
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar 13 18:57:30.561: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-2652" for this suite. 03/13/23 18:57:30.567
------------------------------
â€¢ [SLOW TEST] [242.747 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:53:27.826
    Mar 13 18:53:27.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-probe 03/13/23 18:53:27.827
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:53:27.836
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:53:27.839
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:152
    STEP: Creating pod busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae in namespace container-probe-2652 03/13/23 18:53:27.842
    Mar 13 18:53:27.856: INFO: Waiting up to 5m0s for pod "busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae" in namespace "container-probe-2652" to be "not pending"
    Mar 13 18:53:27.860: INFO: Pod "busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae": Phase="Pending", Reason="", readiness=false. Elapsed: 2.978635ms
    Mar 13 18:53:29.864: INFO: Pod "busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae": Phase="Running", Reason="", readiness=true. Elapsed: 2.006917161s
    Mar 13 18:53:29.864: INFO: Pod "busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae" satisfied condition "not pending"
    Mar 13 18:53:29.864: INFO: Started pod busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae in namespace container-probe-2652
    STEP: checking the pod's current state and verifying that restartCount is present 03/13/23 18:53:29.864
    Mar 13 18:53:29.868: INFO: Initial restart count of pod busybox-fe0219fa-aafc-43c9-af05-cccf28a673ae is 0
    STEP: deleting the pod 03/13/23 18:57:30.536
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:57:30.561: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-2652" for this suite. 03/13/23 18:57:30.567
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:57:30.594
Mar 13 18:57:30.594: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename replicaset 03/13/23 18:57:30.598
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:30.61
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:30.613
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131
STEP: Given a Pod with a 'name' label pod-adoption-release is created 03/13/23 18:57:30.618
Mar 13 18:57:30.626: INFO: Waiting up to 5m0s for pod "pod-adoption-release" in namespace "replicaset-5964" to be "running and ready"
Mar 13 18:57:30.632: INFO: Pod "pod-adoption-release": Phase="Pending", Reason="", readiness=false. Elapsed: 6.216864ms
Mar 13 18:57:30.636: INFO: The phase of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Mar 13 18:57:32.640: INFO: Pod "pod-adoption-release": Phase="Running", Reason="", readiness=true. Elapsed: 2.014600962s
Mar 13 18:57:32.640: INFO: The phase of Pod pod-adoption-release is Running (Ready = true)
Mar 13 18:57:32.640: INFO: Pod "pod-adoption-release" satisfied condition "running and ready"
STEP: When a replicaset with a matching selector is created 03/13/23 18:57:32.643
STEP: Then the orphan pod is adopted 03/13/23 18:57:32.648
STEP: When the matched label of one of its pods change 03/13/23 18:57:33.655
Mar 13 18:57:33.659: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released 03/13/23 18:57:33.672
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Mar 13 18:57:33.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-5964" for this suite. 03/13/23 18:57:33.697
------------------------------
â€¢ [3.122 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:57:30.594
    Mar 13 18:57:30.594: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename replicaset 03/13/23 18:57:30.598
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:30.61
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:30.613
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should adopt matching pods on creation and release no longer matching pods [Conformance]
      test/e2e/apps/replica_set.go:131
    STEP: Given a Pod with a 'name' label pod-adoption-release is created 03/13/23 18:57:30.618
    Mar 13 18:57:30.626: INFO: Waiting up to 5m0s for pod "pod-adoption-release" in namespace "replicaset-5964" to be "running and ready"
    Mar 13 18:57:30.632: INFO: Pod "pod-adoption-release": Phase="Pending", Reason="", readiness=false. Elapsed: 6.216864ms
    Mar 13 18:57:30.636: INFO: The phase of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 18:57:32.640: INFO: Pod "pod-adoption-release": Phase="Running", Reason="", readiness=true. Elapsed: 2.014600962s
    Mar 13 18:57:32.640: INFO: The phase of Pod pod-adoption-release is Running (Ready = true)
    Mar 13 18:57:32.640: INFO: Pod "pod-adoption-release" satisfied condition "running and ready"
    STEP: When a replicaset with a matching selector is created 03/13/23 18:57:32.643
    STEP: Then the orphan pod is adopted 03/13/23 18:57:32.648
    STEP: When the matched label of one of its pods change 03/13/23 18:57:33.655
    Mar 13 18:57:33.659: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
    STEP: Then the pod is released 03/13/23 18:57:33.672
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:57:33.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-5964" for this suite. 03/13/23 18:57:33.697
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/apps/disruption.go:87
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:57:33.724
Mar 13 18:57:33.727: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename disruption 03/13/23 18:57:33.753
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:33.783
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:33.792
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:57:33.804
Mar 13 18:57:33.804: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename disruption-2 03/13/23 18:57:33.805
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:33.818
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:33.847
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/metrics/init/init.go:31
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/apps/disruption.go:87
STEP: Waiting for the pdb to be processed 03/13/23 18:57:33.864
STEP: Waiting for the pdb to be processed 03/13/23 18:57:35.872
STEP: Waiting for the pdb to be processed 03/13/23 18:57:37.883
STEP: listing a collection of PDBs across all namespaces 03/13/23 18:57:37.886
STEP: listing a collection of PDBs in namespace disruption-3027 03/13/23 18:57:37.889
STEP: deleting a collection of PDBs 03/13/23 18:57:37.892
STEP: Waiting for the PDB collection to be deleted 03/13/23 18:57:37.899
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/node/init/init.go:32
Mar 13 18:57:37.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Mar 13 18:57:37.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  dump namespaces | framework.go:196
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-2-6438" for this suite. 03/13/23 18:57:37.913
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-3027" for this suite. 03/13/23 18:57:37.917
------------------------------
â€¢ [4.205 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  Listing PodDisruptionBudgets for all namespaces
  test/e2e/apps/disruption.go:78
    should list and delete a collection of PodDisruptionBudgets [Conformance]
    test/e2e/apps/disruption.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:57:33.724
    Mar 13 18:57:33.727: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename disruption 03/13/23 18:57:33.753
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:33.783
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:33.792
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [BeforeEach] Listing PodDisruptionBudgets for all namespaces
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:57:33.804
    Mar 13 18:57:33.804: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename disruption-2 03/13/23 18:57:33.805
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:33.818
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:33.847
    [BeforeEach] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/metrics/init/init.go:31
    [It] should list and delete a collection of PodDisruptionBudgets [Conformance]
      test/e2e/apps/disruption.go:87
    STEP: Waiting for the pdb to be processed 03/13/23 18:57:33.864
    STEP: Waiting for the pdb to be processed 03/13/23 18:57:35.872
    STEP: Waiting for the pdb to be processed 03/13/23 18:57:37.883
    STEP: listing a collection of PDBs across all namespaces 03/13/23 18:57:37.886
    STEP: listing a collection of PDBs in namespace disruption-3027 03/13/23 18:57:37.889
    STEP: deleting a collection of PDBs 03/13/23 18:57:37.892
    STEP: Waiting for the PDB collection to be deleted 03/13/23 18:57:37.899
    [AfterEach] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:57:37.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:57:37.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-2-6438" for this suite. 03/13/23 18:57:37.913
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-3027" for this suite. 03/13/23 18:57:37.917
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:57:37.924
Mar 13 18:57:37.924: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename var-expansion 03/13/23 18:57:37.925
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:37.938
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:37.942
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92
STEP: Creating a pod to test substitution in container's args 03/13/23 18:57:37.945
Mar 13 18:57:37.953: INFO: Waiting up to 5m0s for pod "var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304" in namespace "var-expansion-3257" to be "Succeeded or Failed"
Mar 13 18:57:37.957: INFO: Pod "var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304": Phase="Pending", Reason="", readiness=false. Elapsed: 3.069031ms
Mar 13 18:57:39.972: INFO: Pod "var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01895861s
Mar 13 18:57:41.968: INFO: Pod "var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014110315s
STEP: Saw pod success 03/13/23 18:57:41.968
Mar 13 18:57:41.969: INFO: Pod "var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304" satisfied condition "Succeeded or Failed"
Mar 13 18:57:41.972: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304 container dapi-container: <nil>
STEP: delete the pod 03/13/23 18:57:42.001
Mar 13 18:57:42.028: INFO: Waiting for pod var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304 to disappear
Mar 13 18:57:42.032: INFO: Pod var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar 13 18:57:42.033: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-3257" for this suite. 03/13/23 18:57:42.036
------------------------------
â€¢ [4.120 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:57:37.924
    Mar 13 18:57:37.924: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename var-expansion 03/13/23 18:57:37.925
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:37.938
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:37.942
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a container's args [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:92
    STEP: Creating a pod to test substitution in container's args 03/13/23 18:57:37.945
    Mar 13 18:57:37.953: INFO: Waiting up to 5m0s for pod "var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304" in namespace "var-expansion-3257" to be "Succeeded or Failed"
    Mar 13 18:57:37.957: INFO: Pod "var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304": Phase="Pending", Reason="", readiness=false. Elapsed: 3.069031ms
    Mar 13 18:57:39.972: INFO: Pod "var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01895861s
    Mar 13 18:57:41.968: INFO: Pod "var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014110315s
    STEP: Saw pod success 03/13/23 18:57:41.968
    Mar 13 18:57:41.969: INFO: Pod "var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304" satisfied condition "Succeeded or Failed"
    Mar 13 18:57:41.972: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304 container dapi-container: <nil>
    STEP: delete the pod 03/13/23 18:57:42.001
    Mar 13 18:57:42.028: INFO: Waiting for pod var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304 to disappear
    Mar 13 18:57:42.032: INFO: Pod var-expansion-c9e7ea14-8c2c-4d30-bdb4-2a5099f38304 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:57:42.033: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-3257" for this suite. 03/13/23 18:57:42.036
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass
   should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:57:42.044
Mar 13 18:57:42.044: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename runtimeclass 03/13/23 18:57:42.046
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:42.058
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:42.063
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189
STEP: getting /apis 03/13/23 18:57:42.067
STEP: getting /apis/node.k8s.io 03/13/23 18:57:42.07
STEP: getting /apis/node.k8s.io/v1 03/13/23 18:57:42.072
STEP: creating 03/13/23 18:57:42.074
STEP: watching 03/13/23 18:57:42.086
Mar 13 18:57:42.086: INFO: starting watch
STEP: getting 03/13/23 18:57:42.092
STEP: listing 03/13/23 18:57:42.095
STEP: patching 03/13/23 18:57:42.098
STEP: updating 03/13/23 18:57:42.103
Mar 13 18:57:42.107: INFO: waiting for watch events with expected annotations
STEP: deleting 03/13/23 18:57:42.107
STEP: deleting a collection 03/13/23 18:57:42.116
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Mar 13 18:57:42.125: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-6114" for this suite. 03/13/23 18:57:42.129
------------------------------
â€¢ [0.089 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
   should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:57:42.044
    Mar 13 18:57:42.044: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename runtimeclass 03/13/23 18:57:42.046
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:42.058
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:42.063
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It]  should support RuntimeClasses API operations [Conformance]
      test/e2e/common/node/runtimeclass.go:189
    STEP: getting /apis 03/13/23 18:57:42.067
    STEP: getting /apis/node.k8s.io 03/13/23 18:57:42.07
    STEP: getting /apis/node.k8s.io/v1 03/13/23 18:57:42.072
    STEP: creating 03/13/23 18:57:42.074
    STEP: watching 03/13/23 18:57:42.086
    Mar 13 18:57:42.086: INFO: starting watch
    STEP: getting 03/13/23 18:57:42.092
    STEP: listing 03/13/23 18:57:42.095
    STEP: patching 03/13/23 18:57:42.098
    STEP: updating 03/13/23 18:57:42.103
    Mar 13 18:57:42.107: INFO: waiting for watch events with expected annotations
    STEP: deleting 03/13/23 18:57:42.107
    STEP: deleting a collection 03/13/23 18:57:42.116
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:57:42.125: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-6114" for this suite. 03/13/23 18:57:42.129
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:57:42.137
Mar 13 18:57:42.138: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 18:57:42.139
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:42.148
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:42.151
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227
STEP: Creating Pod 03/13/23 18:57:42.154
Mar 13 18:57:42.161: INFO: Waiting up to 5m0s for pod "pod-sharedvolume-e8a6af56-55b1-4cf9-82c5-146a2056e196" in namespace "emptydir-7505" to be "running"
Mar 13 18:57:42.164: INFO: Pod "pod-sharedvolume-e8a6af56-55b1-4cf9-82c5-146a2056e196": Phase="Pending", Reason="", readiness=false. Elapsed: 2.33795ms
Mar 13 18:57:44.167: INFO: Pod "pod-sharedvolume-e8a6af56-55b1-4cf9-82c5-146a2056e196": Phase="Running", Reason="", readiness=false. Elapsed: 2.006183254s
Mar 13 18:57:44.167: INFO: Pod "pod-sharedvolume-e8a6af56-55b1-4cf9-82c5-146a2056e196" satisfied condition "running"
STEP: Reading file content from the nginx-container 03/13/23 18:57:44.168
Mar 13 18:57:44.168: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7505 PodName:pod-sharedvolume-e8a6af56-55b1-4cf9-82c5-146a2056e196 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 18:57:44.168: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 18:57:44.169: INFO: ExecWithOptions: Clientset creation
Mar 13 18:57:44.169: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-7505/pods/pod-sharedvolume-e8a6af56-55b1-4cf9-82c5-146a2056e196/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Mar 13 18:57:44.256: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 18:57:44.256: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-7505" for this suite. 03/13/23 18:57:44.26
------------------------------
â€¢ [2.128 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:57:42.137
    Mar 13 18:57:42.138: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 18:57:42.139
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:42.148
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:42.151
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] pod should support shared volumes between containers [Conformance]
      test/e2e/common/storage/empty_dir.go:227
    STEP: Creating Pod 03/13/23 18:57:42.154
    Mar 13 18:57:42.161: INFO: Waiting up to 5m0s for pod "pod-sharedvolume-e8a6af56-55b1-4cf9-82c5-146a2056e196" in namespace "emptydir-7505" to be "running"
    Mar 13 18:57:42.164: INFO: Pod "pod-sharedvolume-e8a6af56-55b1-4cf9-82c5-146a2056e196": Phase="Pending", Reason="", readiness=false. Elapsed: 2.33795ms
    Mar 13 18:57:44.167: INFO: Pod "pod-sharedvolume-e8a6af56-55b1-4cf9-82c5-146a2056e196": Phase="Running", Reason="", readiness=false. Elapsed: 2.006183254s
    Mar 13 18:57:44.167: INFO: Pod "pod-sharedvolume-e8a6af56-55b1-4cf9-82c5-146a2056e196" satisfied condition "running"
    STEP: Reading file content from the nginx-container 03/13/23 18:57:44.168
    Mar 13 18:57:44.168: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7505 PodName:pod-sharedvolume-e8a6af56-55b1-4cf9-82c5-146a2056e196 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 18:57:44.168: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 18:57:44.169: INFO: ExecWithOptions: Clientset creation
    Mar 13 18:57:44.169: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-7505/pods/pod-sharedvolume-e8a6af56-55b1-4cf9-82c5-146a2056e196/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
    Mar 13 18:57:44.256: INFO: Exec stderr: ""
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:57:44.256: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-7505" for this suite. 03/13/23 18:57:44.26
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:57:44.273
Mar 13 18:57:44.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 18:57:44.274
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:44.282
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:44.285
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153
Mar 13 18:57:44.289: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 03/13/23 18:57:45.985
Mar 13 18:57:45.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9937 --namespace=crd-publish-openapi-9937 create -f -'
Mar 13 18:57:46.754: INFO: stderr: ""
Mar 13 18:57:46.754: INFO: stdout: "e2e-test-crd-publish-openapi-1409-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Mar 13 18:57:46.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9937 --namespace=crd-publish-openapi-9937 delete e2e-test-crd-publish-openapi-1409-crds test-cr'
Mar 13 18:57:46.849: INFO: stderr: ""
Mar 13 18:57:46.849: INFO: stdout: "e2e-test-crd-publish-openapi-1409-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Mar 13 18:57:46.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9937 --namespace=crd-publish-openapi-9937 apply -f -'
Mar 13 18:57:47.123: INFO: stderr: ""
Mar 13 18:57:47.123: INFO: stdout: "e2e-test-crd-publish-openapi-1409-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Mar 13 18:57:47.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9937 --namespace=crd-publish-openapi-9937 delete e2e-test-crd-publish-openapi-1409-crds test-cr'
Mar 13 18:57:47.210: INFO: stderr: ""
Mar 13 18:57:47.210: INFO: stdout: "e2e-test-crd-publish-openapi-1409-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema 03/13/23 18:57:47.21
Mar 13 18:57:47.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9937 explain e2e-test-crd-publish-openapi-1409-crds'
Mar 13 18:57:47.457: INFO: stderr: ""
Mar 13 18:57:47.457: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1409-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 18:57:48.992: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-9937" for this suite. 03/13/23 18:57:48.999
------------------------------
â€¢ [4.731 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:57:44.273
    Mar 13 18:57:44.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 18:57:44.274
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:44.282
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:44.285
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD without validation schema [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:153
    Mar 13 18:57:44.289: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 03/13/23 18:57:45.985
    Mar 13 18:57:45.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9937 --namespace=crd-publish-openapi-9937 create -f -'
    Mar 13 18:57:46.754: INFO: stderr: ""
    Mar 13 18:57:46.754: INFO: stdout: "e2e-test-crd-publish-openapi-1409-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
    Mar 13 18:57:46.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9937 --namespace=crd-publish-openapi-9937 delete e2e-test-crd-publish-openapi-1409-crds test-cr'
    Mar 13 18:57:46.849: INFO: stderr: ""
    Mar 13 18:57:46.849: INFO: stdout: "e2e-test-crd-publish-openapi-1409-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
    Mar 13 18:57:46.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9937 --namespace=crd-publish-openapi-9937 apply -f -'
    Mar 13 18:57:47.123: INFO: stderr: ""
    Mar 13 18:57:47.123: INFO: stdout: "e2e-test-crd-publish-openapi-1409-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
    Mar 13 18:57:47.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9937 --namespace=crd-publish-openapi-9937 delete e2e-test-crd-publish-openapi-1409-crds test-cr'
    Mar 13 18:57:47.210: INFO: stderr: ""
    Mar 13 18:57:47.210: INFO: stdout: "e2e-test-crd-publish-openapi-1409-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR without validation schema 03/13/23 18:57:47.21
    Mar 13 18:57:47.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9937 explain e2e-test-crd-publish-openapi-1409-crds'
    Mar 13 18:57:47.457: INFO: stderr: ""
    Mar 13 18:57:47.457: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1409-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:57:48.992: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-9937" for this suite. 03/13/23 18:57:48.999
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-architecture] Conformance Tests
  should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38
[BeforeEach] [sig-architecture] Conformance Tests
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:57:49.004
Mar 13 18:57:49.004: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename conformance-tests 03/13/23 18:57:49.005
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:49.014
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:49.016
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/metrics/init/init.go:31
[It] should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38
STEP: Getting node addresses 03/13/23 18:57:49.019
Mar 13 18:57:49.019: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/node/init/init.go:32
Mar 13 18:57:49.024: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  tear down framework | framework.go:193
STEP: Destroying namespace "conformance-tests-7706" for this suite. 03/13/23 18:57:49.028
------------------------------
â€¢ [0.028 seconds]
[sig-architecture] Conformance Tests
test/e2e/architecture/framework.go:23
  should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-architecture] Conformance Tests
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:57:49.004
    Mar 13 18:57:49.004: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename conformance-tests 03/13/23 18:57:49.005
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:49.014
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:49.016
    [BeforeEach] [sig-architecture] Conformance Tests
      test/e2e/framework/metrics/init/init.go:31
    [It] should have at least two untainted nodes [Conformance]
      test/e2e/architecture/conformance.go:38
    STEP: Getting node addresses 03/13/23 18:57:49.019
    Mar 13 18:57:49.019: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    [AfterEach] [sig-architecture] Conformance Tests
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:57:49.024: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      tear down framework | framework.go:193
    STEP: Destroying namespace "conformance-tests-7706" for this suite. 03/13/23 18:57:49.028
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:57:49.036
Mar 13 18:57:49.036: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 18:57:49.037
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:49.046
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:49.049
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261
STEP: Creating a pod to test downward API volume plugin 03/13/23 18:57:49.052
Mar 13 18:57:49.059: INFO: Waiting up to 5m0s for pod "downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653" in namespace "projected-5871" to be "Succeeded or Failed"
Mar 13 18:57:49.062: INFO: Pod "downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653": Phase="Pending", Reason="", readiness=false. Elapsed: 2.539606ms
Mar 13 18:57:51.066: INFO: Pod "downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00633431s
Mar 13 18:57:53.067: INFO: Pod "downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007492397s
STEP: Saw pod success 03/13/23 18:57:53.067
Mar 13 18:57:53.067: INFO: Pod "downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653" satisfied condition "Succeeded or Failed"
Mar 13 18:57:53.070: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653 container client-container: <nil>
STEP: delete the pod 03/13/23 18:57:53.084
Mar 13 18:57:53.097: INFO: Waiting for pod downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653 to disappear
Mar 13 18:57:53.100: INFO: Pod downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar 13 18:57:53.101: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5871" for this suite. 03/13/23 18:57:53.104
------------------------------
â€¢ [4.073 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:57:49.036
    Mar 13 18:57:49.036: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 18:57:49.037
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:49.046
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:49.049
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:261
    STEP: Creating a pod to test downward API volume plugin 03/13/23 18:57:49.052
    Mar 13 18:57:49.059: INFO: Waiting up to 5m0s for pod "downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653" in namespace "projected-5871" to be "Succeeded or Failed"
    Mar 13 18:57:49.062: INFO: Pod "downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653": Phase="Pending", Reason="", readiness=false. Elapsed: 2.539606ms
    Mar 13 18:57:51.066: INFO: Pod "downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00633431s
    Mar 13 18:57:53.067: INFO: Pod "downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007492397s
    STEP: Saw pod success 03/13/23 18:57:53.067
    Mar 13 18:57:53.067: INFO: Pod "downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653" satisfied condition "Succeeded or Failed"
    Mar 13 18:57:53.070: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653 container client-container: <nil>
    STEP: delete the pod 03/13/23 18:57:53.084
    Mar 13 18:57:53.097: INFO: Waiting for pod downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653 to disappear
    Mar 13 18:57:53.100: INFO: Pod downwardapi-volume-61214fbd-ba9f-4aa3-baba-b7e2c16cc653 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:57:53.101: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5871" for this suite. 03/13/23 18:57:53.104
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:57:53.114
Mar 13 18:57:53.114: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename resourcequota 03/13/23 18:57:53.115
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:53.127
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:53.131
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010
STEP: Creating resourceQuota "e2e-rq-status-rkx6l" 03/13/23 18:57:53.142
Mar 13 18:57:53.158: INFO: Resource quota "e2e-rq-status-rkx6l" reports spec: hard cpu limit of 500m
Mar 13 18:57:53.158: INFO: Resource quota "e2e-rq-status-rkx6l" reports spec: hard memory limit of 500Mi
STEP: Updating resourceQuota "e2e-rq-status-rkx6l" /status 03/13/23 18:57:53.158
STEP: Confirm /status for "e2e-rq-status-rkx6l" resourceQuota via watch 03/13/23 18:57:53.177
Mar 13 18:57:53.179: INFO: observed resourceQuota "e2e-rq-status-rkx6l" in namespace "resourcequota-8326" with hard status: v1.ResourceList(nil)
Mar 13 18:57:53.179: INFO: Found resourceQuota "e2e-rq-status-rkx6l" in namespace "resourcequota-8326" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
Mar 13 18:57:53.179: INFO: ResourceQuota "e2e-rq-status-rkx6l" /status was updated
STEP: Patching hard spec values for cpu & memory 03/13/23 18:57:53.182
Mar 13 18:57:53.190: INFO: Resource quota "e2e-rq-status-rkx6l" reports spec: hard cpu limit of 1
Mar 13 18:57:53.190: INFO: Resource quota "e2e-rq-status-rkx6l" reports spec: hard memory limit of 1Gi
STEP: Patching "e2e-rq-status-rkx6l" /status 03/13/23 18:57:53.19
STEP: Confirm /status for "e2e-rq-status-rkx6l" resourceQuota via watch 03/13/23 18:57:53.202
Mar 13 18:57:53.204: INFO: observed resourceQuota "e2e-rq-status-rkx6l" in namespace "resourcequota-8326" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
Mar 13 18:57:53.204: INFO: Found resourceQuota "e2e-rq-status-rkx6l" in namespace "resourcequota-8326" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
Mar 13 18:57:53.204: INFO: ResourceQuota "e2e-rq-status-rkx6l" /status was patched
STEP: Get "e2e-rq-status-rkx6l" /status 03/13/23 18:57:53.204
Mar 13 18:57:53.208: INFO: Resourcequota "e2e-rq-status-rkx6l" reports status: hard cpu of 1
Mar 13 18:57:53.208: INFO: Resourcequota "e2e-rq-status-rkx6l" reports status: hard memory of 1Gi
STEP: Repatching "e2e-rq-status-rkx6l" /status before checking Spec is unchanged 03/13/23 18:57:53.21
Mar 13 18:57:53.216: INFO: Resourcequota "e2e-rq-status-rkx6l" reports status: hard cpu of 2
Mar 13 18:57:53.216: INFO: Resourcequota "e2e-rq-status-rkx6l" reports status: hard memory of 2Gi
Mar 13 18:57:53.218: INFO: Found resourceQuota "e2e-rq-status-rkx6l" in namespace "resourcequota-8326" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
Mar 13 18:58:33.225: INFO: ResourceQuota "e2e-rq-status-rkx6l" Spec was unchanged and /status reset
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar 13 18:58:33.229: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-8326" for this suite. 03/13/23 18:58:33.235
------------------------------
â€¢ [SLOW TEST] [40.126 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:57:53.114
    Mar 13 18:57:53.114: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename resourcequota 03/13/23 18:57:53.115
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:57:53.127
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:57:53.131
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a resourcequota status [Conformance]
      test/e2e/apimachinery/resource_quota.go:1010
    STEP: Creating resourceQuota "e2e-rq-status-rkx6l" 03/13/23 18:57:53.142
    Mar 13 18:57:53.158: INFO: Resource quota "e2e-rq-status-rkx6l" reports spec: hard cpu limit of 500m
    Mar 13 18:57:53.158: INFO: Resource quota "e2e-rq-status-rkx6l" reports spec: hard memory limit of 500Mi
    STEP: Updating resourceQuota "e2e-rq-status-rkx6l" /status 03/13/23 18:57:53.158
    STEP: Confirm /status for "e2e-rq-status-rkx6l" resourceQuota via watch 03/13/23 18:57:53.177
    Mar 13 18:57:53.179: INFO: observed resourceQuota "e2e-rq-status-rkx6l" in namespace "resourcequota-8326" with hard status: v1.ResourceList(nil)
    Mar 13 18:57:53.179: INFO: Found resourceQuota "e2e-rq-status-rkx6l" in namespace "resourcequota-8326" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
    Mar 13 18:57:53.179: INFO: ResourceQuota "e2e-rq-status-rkx6l" /status was updated
    STEP: Patching hard spec values for cpu & memory 03/13/23 18:57:53.182
    Mar 13 18:57:53.190: INFO: Resource quota "e2e-rq-status-rkx6l" reports spec: hard cpu limit of 1
    Mar 13 18:57:53.190: INFO: Resource quota "e2e-rq-status-rkx6l" reports spec: hard memory limit of 1Gi
    STEP: Patching "e2e-rq-status-rkx6l" /status 03/13/23 18:57:53.19
    STEP: Confirm /status for "e2e-rq-status-rkx6l" resourceQuota via watch 03/13/23 18:57:53.202
    Mar 13 18:57:53.204: INFO: observed resourceQuota "e2e-rq-status-rkx6l" in namespace "resourcequota-8326" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
    Mar 13 18:57:53.204: INFO: Found resourceQuota "e2e-rq-status-rkx6l" in namespace "resourcequota-8326" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
    Mar 13 18:57:53.204: INFO: ResourceQuota "e2e-rq-status-rkx6l" /status was patched
    STEP: Get "e2e-rq-status-rkx6l" /status 03/13/23 18:57:53.204
    Mar 13 18:57:53.208: INFO: Resourcequota "e2e-rq-status-rkx6l" reports status: hard cpu of 1
    Mar 13 18:57:53.208: INFO: Resourcequota "e2e-rq-status-rkx6l" reports status: hard memory of 1Gi
    STEP: Repatching "e2e-rq-status-rkx6l" /status before checking Spec is unchanged 03/13/23 18:57:53.21
    Mar 13 18:57:53.216: INFO: Resourcequota "e2e-rq-status-rkx6l" reports status: hard cpu of 2
    Mar 13 18:57:53.216: INFO: Resourcequota "e2e-rq-status-rkx6l" reports status: hard memory of 2Gi
    Mar 13 18:57:53.218: INFO: Found resourceQuota "e2e-rq-status-rkx6l" in namespace "resourcequota-8326" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
    Mar 13 18:58:33.225: INFO: ResourceQuota "e2e-rq-status-rkx6l" Spec was unchanged and /status reset
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:58:33.229: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-8326" for this suite. 03/13/23 18:58:33.235
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:58:33.24
Mar 13 18:58:33.240: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename namespaces 03/13/23 18:58:33.242
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:58:33.25
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:58:33.253
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243
STEP: Creating a test namespace 03/13/23 18:58:33.256
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:58:33.263
STEP: Creating a pod in the namespace 03/13/23 18:58:33.266
STEP: Waiting for the pod to have running status 03/13/23 18:58:33.271
Mar 13 18:58:33.271: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "nsdeletetest-8610" to be "running"
Mar 13 18:58:33.274: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.948127ms
Mar 13 18:58:35.277: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.006370032s
Mar 13 18:58:35.277: INFO: Pod "test-pod" satisfied condition "running"
STEP: Deleting the namespace 03/13/23 18:58:35.277
STEP: Waiting for the namespace to be removed. 03/13/23 18:58:35.283
STEP: Recreating the namespace 03/13/23 18:58:46.287
STEP: Verifying there are no pods in the namespace 03/13/23 18:58:46.295
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 18:58:46.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-3260" for this suite. 03/13/23 18:58:46.299
STEP: Destroying namespace "nsdeletetest-8610" for this suite. 03/13/23 18:58:46.304
Mar 13 18:58:46.306: INFO: Namespace nsdeletetest-8610 was already deleted
STEP: Destroying namespace "nsdeletetest-7261" for this suite. 03/13/23 18:58:46.306
------------------------------
â€¢ [SLOW TEST] [13.070 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:58:33.24
    Mar 13 18:58:33.240: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename namespaces 03/13/23 18:58:33.242
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:58:33.25
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:58:33.253
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should ensure that all pods are removed when a namespace is deleted [Conformance]
      test/e2e/apimachinery/namespace.go:243
    STEP: Creating a test namespace 03/13/23 18:58:33.256
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:58:33.263
    STEP: Creating a pod in the namespace 03/13/23 18:58:33.266
    STEP: Waiting for the pod to have running status 03/13/23 18:58:33.271
    Mar 13 18:58:33.271: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "nsdeletetest-8610" to be "running"
    Mar 13 18:58:33.274: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.948127ms
    Mar 13 18:58:35.277: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.006370032s
    Mar 13 18:58:35.277: INFO: Pod "test-pod" satisfied condition "running"
    STEP: Deleting the namespace 03/13/23 18:58:35.277
    STEP: Waiting for the namespace to be removed. 03/13/23 18:58:35.283
    STEP: Recreating the namespace 03/13/23 18:58:46.287
    STEP: Verifying there are no pods in the namespace 03/13/23 18:58:46.295
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:58:46.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-3260" for this suite. 03/13/23 18:58:46.299
    STEP: Destroying namespace "nsdeletetest-8610" for this suite. 03/13/23 18:58:46.304
    Mar 13 18:58:46.306: INFO: Namespace nsdeletetest-8610 was already deleted
    STEP: Destroying namespace "nsdeletetest-7261" for this suite. 03/13/23 18:58:46.306
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota
  should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:58:46.31
Mar 13 18:58:46.310: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename resourcequota 03/13/23 18:58:46.311
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:58:46.318
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:58:46.32
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943
STEP: Creating a ResourceQuota 03/13/23 18:58:46.323
STEP: Getting a ResourceQuota 03/13/23 18:58:46.326
STEP: Listing all ResourceQuotas with LabelSelector 03/13/23 18:58:46.328
STEP: Patching the ResourceQuota 03/13/23 18:58:46.33
STEP: Deleting a Collection of ResourceQuotas 03/13/23 18:58:46.334
STEP: Verifying the deleted ResourceQuota 03/13/23 18:58:46.339
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar 13 18:58:46.341: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-1953" for this suite. 03/13/23 18:58:46.344
------------------------------
â€¢ [0.038 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:58:46.31
    Mar 13 18:58:46.310: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename resourcequota 03/13/23 18:58:46.311
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:58:46.318
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:58:46.32
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of a ResourceQuota [Conformance]
      test/e2e/apimachinery/resource_quota.go:943
    STEP: Creating a ResourceQuota 03/13/23 18:58:46.323
    STEP: Getting a ResourceQuota 03/13/23 18:58:46.326
    STEP: Listing all ResourceQuotas with LabelSelector 03/13/23 18:58:46.328
    STEP: Patching the ResourceQuota 03/13/23 18:58:46.33
    STEP: Deleting a Collection of ResourceQuotas 03/13/23 18:58:46.334
    STEP: Verifying the deleted ResourceQuota 03/13/23 18:58:46.339
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar 13 18:58:46.341: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-1953" for this suite. 03/13/23 18:58:46.344
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 18:58:46.351
Mar 13 18:58:46.351: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename taint-multiple-pods 03/13/23 18:58:46.353
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:58:46.361
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:58:46.364
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:383
Mar 13 18:58:46.367: INFO: Waiting up to 1m0s for all nodes to be ready
Mar 13 18:59:46.391: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455
Mar 13 18:59:46.395: INFO: Starting informer...
STEP: Starting pods... 03/13/23 18:59:46.395
Mar 13 18:59:46.613: INFO: Pod1 is running on vke-automated-test-51df1d4fb06e. Tainting Node
Mar 13 18:59:46.823: INFO: Waiting up to 5m0s for pod "taint-eviction-b1" in namespace "taint-multiple-pods-3217" to be "running"
Mar 13 18:59:46.825: INFO: Pod "taint-eviction-b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.546732ms
Mar 13 18:59:48.829: INFO: Pod "taint-eviction-b1": Phase="Running", Reason="", readiness=true. Elapsed: 2.00603491s
Mar 13 18:59:48.829: INFO: Pod "taint-eviction-b1" satisfied condition "running"
Mar 13 18:59:48.829: INFO: Waiting up to 5m0s for pod "taint-eviction-b2" in namespace "taint-multiple-pods-3217" to be "running"
Mar 13 18:59:48.832: INFO: Pod "taint-eviction-b2": Phase="Running", Reason="", readiness=true. Elapsed: 3.157497ms
Mar 13 18:59:48.832: INFO: Pod "taint-eviction-b2" satisfied condition "running"
Mar 13 18:59:48.832: INFO: Pod2 is running on vke-automated-test-51df1d4fb06e. Tainting Node
STEP: Trying to apply a taint on the Node 03/13/23 18:59:48.832
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/13/23 18:59:48.843
STEP: Waiting for Pod1 and Pod2 to be deleted 03/13/23 18:59:48.852
Mar 13 18:59:55.064: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Mar 13 19:00:15.103: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/13/23 19:00:15.115
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:00:15.119: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "taint-multiple-pods-3217" for this suite. 03/13/23 19:00:15.122
------------------------------
â€¢ [SLOW TEST] [88.787 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 18:58:46.351
    Mar 13 18:58:46.351: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename taint-multiple-pods 03/13/23 18:58:46.353
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 18:58:46.361
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 18:58:46.364
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/node/taints.go:383
    Mar 13 18:58:46.367: INFO: Waiting up to 1m0s for all nodes to be ready
    Mar 13 18:59:46.391: INFO: Waiting for terminating namespaces to be deleted...
    [It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
      test/e2e/node/taints.go:455
    Mar 13 18:59:46.395: INFO: Starting informer...
    STEP: Starting pods... 03/13/23 18:59:46.395
    Mar 13 18:59:46.613: INFO: Pod1 is running on vke-automated-test-51df1d4fb06e. Tainting Node
    Mar 13 18:59:46.823: INFO: Waiting up to 5m0s for pod "taint-eviction-b1" in namespace "taint-multiple-pods-3217" to be "running"
    Mar 13 18:59:46.825: INFO: Pod "taint-eviction-b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.546732ms
    Mar 13 18:59:48.829: INFO: Pod "taint-eviction-b1": Phase="Running", Reason="", readiness=true. Elapsed: 2.00603491s
    Mar 13 18:59:48.829: INFO: Pod "taint-eviction-b1" satisfied condition "running"
    Mar 13 18:59:48.829: INFO: Waiting up to 5m0s for pod "taint-eviction-b2" in namespace "taint-multiple-pods-3217" to be "running"
    Mar 13 18:59:48.832: INFO: Pod "taint-eviction-b2": Phase="Running", Reason="", readiness=true. Elapsed: 3.157497ms
    Mar 13 18:59:48.832: INFO: Pod "taint-eviction-b2" satisfied condition "running"
    Mar 13 18:59:48.832: INFO: Pod2 is running on vke-automated-test-51df1d4fb06e. Tainting Node
    STEP: Trying to apply a taint on the Node 03/13/23 18:59:48.832
    STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/13/23 18:59:48.843
    STEP: Waiting for Pod1 and Pod2 to be deleted 03/13/23 18:59:48.852
    Mar 13 18:59:55.064: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
    Mar 13 19:00:15.103: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
    STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/13/23 19:00:15.115
    [AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:00:15.119: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "taint-multiple-pods-3217" for this suite. 03/13/23 19:00:15.122
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:00:15.143
Mar 13 19:00:15.143: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 19:00:15.145
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:00:15.155
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:00:15.161
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93
STEP: Creating configMap configmap-9500/configmap-test-0eb8c404-6fd7-4ddd-9316-80f6ded553aa 03/13/23 19:00:15.167
STEP: Creating a pod to test consume configMaps 03/13/23 19:00:15.171
Mar 13 19:00:15.177: INFO: Waiting up to 5m0s for pod "pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0" in namespace "configmap-9500" to be "Succeeded or Failed"
Mar 13 19:00:15.180: INFO: Pod "pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.828939ms
Mar 13 19:00:17.184: INFO: Pod "pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006460094s
Mar 13 19:00:19.184: INFO: Pod "pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006429977s
STEP: Saw pod success 03/13/23 19:00:19.184
Mar 13 19:00:19.184: INFO: Pod "pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0" satisfied condition "Succeeded or Failed"
Mar 13 19:00:19.186: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0 container env-test: <nil>
STEP: delete the pod 03/13/23 19:00:19.21
Mar 13 19:00:19.218: INFO: Waiting for pod pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0 to disappear
Mar 13 19:00:19.220: INFO: Pod pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:00:19.220: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-9500" for this suite. 03/13/23 19:00:19.223
------------------------------
â€¢ [4.086 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:00:15.143
    Mar 13 19:00:15.143: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 19:00:15.145
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:00:15.155
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:00:15.161
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via the environment [NodeConformance] [Conformance]
      test/e2e/common/node/configmap.go:93
    STEP: Creating configMap configmap-9500/configmap-test-0eb8c404-6fd7-4ddd-9316-80f6ded553aa 03/13/23 19:00:15.167
    STEP: Creating a pod to test consume configMaps 03/13/23 19:00:15.171
    Mar 13 19:00:15.177: INFO: Waiting up to 5m0s for pod "pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0" in namespace "configmap-9500" to be "Succeeded or Failed"
    Mar 13 19:00:15.180: INFO: Pod "pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.828939ms
    Mar 13 19:00:17.184: INFO: Pod "pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006460094s
    Mar 13 19:00:19.184: INFO: Pod "pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006429977s
    STEP: Saw pod success 03/13/23 19:00:19.184
    Mar 13 19:00:19.184: INFO: Pod "pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0" satisfied condition "Succeeded or Failed"
    Mar 13 19:00:19.186: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0 container env-test: <nil>
    STEP: delete the pod 03/13/23 19:00:19.21
    Mar 13 19:00:19.218: INFO: Waiting for pod pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0 to disappear
    Mar 13 19:00:19.220: INFO: Pod pod-configmaps-868f6347-00e2-4b51-919d-596a3d1b02f0 no longer exists
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:00:19.220: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-9500" for this suite. 03/13/23 19:00:19.223
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49
[BeforeEach] [sig-storage] CSIStorageCapacity
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:00:19.233
Mar 13 19:00:19.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename csistoragecapacity 03/13/23 19:00:19.235
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:00:19.246
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:00:19.249
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/metrics/init/init.go:31
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49
STEP: getting /apis 03/13/23 19:00:19.252
STEP: getting /apis/storage.k8s.io 03/13/23 19:00:19.255
STEP: getting /apis/storage.k8s.io/v1 03/13/23 19:00:19.256
STEP: creating 03/13/23 19:00:19.258
STEP: watching 03/13/23 19:00:19.269
Mar 13 19:00:19.269: INFO: starting watch
STEP: getting 03/13/23 19:00:19.275
STEP: listing in namespace 03/13/23 19:00:19.277
STEP: listing across namespaces 03/13/23 19:00:19.28
STEP: patching 03/13/23 19:00:19.284
STEP: updating 03/13/23 19:00:19.289
Mar 13 19:00:19.292: INFO: waiting for watch events with expected annotations in namespace
Mar 13 19:00:19.293: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting 03/13/23 19:00:19.293
STEP: deleting a collection 03/13/23 19:00:19.301
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/node/init/init.go:32
Mar 13 19:00:19.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  tear down framework | framework.go:193
STEP: Destroying namespace "csistoragecapacity-7186" for this suite. 03/13/23 19:00:19.312
------------------------------
â€¢ [0.083 seconds]
[sig-storage] CSIStorageCapacity
test/e2e/storage/utils/framework.go:23
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIStorageCapacity
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:00:19.233
    Mar 13 19:00:19.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename csistoragecapacity 03/13/23 19:00:19.235
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:00:19.246
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:00:19.249
    [BeforeEach] [sig-storage] CSIStorageCapacity
      test/e2e/framework/metrics/init/init.go:31
    [It]  should support CSIStorageCapacities API operations [Conformance]
      test/e2e/storage/csistoragecapacity.go:49
    STEP: getting /apis 03/13/23 19:00:19.252
    STEP: getting /apis/storage.k8s.io 03/13/23 19:00:19.255
    STEP: getting /apis/storage.k8s.io/v1 03/13/23 19:00:19.256
    STEP: creating 03/13/23 19:00:19.258
    STEP: watching 03/13/23 19:00:19.269
    Mar 13 19:00:19.269: INFO: starting watch
    STEP: getting 03/13/23 19:00:19.275
    STEP: listing in namespace 03/13/23 19:00:19.277
    STEP: listing across namespaces 03/13/23 19:00:19.28
    STEP: patching 03/13/23 19:00:19.284
    STEP: updating 03/13/23 19:00:19.289
    Mar 13 19:00:19.292: INFO: waiting for watch events with expected annotations in namespace
    Mar 13 19:00:19.293: INFO: waiting for watch events with expected annotations across namespace
    STEP: deleting 03/13/23 19:00:19.293
    STEP: deleting a collection 03/13/23 19:00:19.301
    [AfterEach] [sig-storage] CSIStorageCapacity
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:00:19.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      tear down framework | framework.go:193
    STEP: Destroying namespace "csistoragecapacity-7186" for this suite. 03/13/23 19:00:19.312
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/apps/statefulset.go:306
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:00:19.325
Mar 13 19:00:19.326: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename statefulset 03/13/23 19:00:19.327
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:00:19.336
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:00:19.339
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-7800 03/13/23 19:00:19.342
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/apps/statefulset.go:306
STEP: Creating a new StatefulSet 03/13/23 19:00:19.347
Mar 13 19:00:19.353: INFO: Found 0 stateful pods, waiting for 3
Mar 13 19:00:29.358: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Mar 13 19:00:29.358: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Mar 13 19:00:29.358: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Mar 13 19:00:29.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-7800 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar 13 19:00:29.559: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar 13 19:00:29.559: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar 13 19:00:29.559: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 03/13/23 19:00:39.573
Mar 13 19:00:39.591: INFO: Updating stateful set ss2
STEP: Creating a new revision 03/13/23 19:00:39.591
STEP: Updating Pods in reverse ordinal order 03/13/23 19:00:49.604
Mar 13 19:00:49.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-7800 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar 13 19:00:49.778: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar 13 19:00:49.778: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar 13 19:00:49.778: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision 03/13/23 19:01:09.807
Mar 13 19:01:09.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-7800 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar 13 19:01:10.023: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar 13 19:01:10.023: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar 13 19:01:10.023: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar 13 19:01:20.065: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order 03/13/23 19:01:30.081
Mar 13 19:01:30.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-7800 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar 13 19:01:30.247: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar 13 19:01:30.247: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar 13 19:01:30.247: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar 13 19:01:40.268: INFO: Deleting all statefulset in ns statefulset-7800
Mar 13 19:01:40.271: INFO: Scaling statefulset ss2 to 0
Mar 13 19:01:50.289: INFO: Waiting for statefulset status.replicas updated to 0
Mar 13 19:01:50.292: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:01:50.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-7800" for this suite. 03/13/23 19:01:50.317
------------------------------
â€¢ [SLOW TEST] [90.998 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/apps/statefulset.go:306

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:00:19.325
    Mar 13 19:00:19.326: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename statefulset 03/13/23 19:00:19.327
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:00:19.336
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:00:19.339
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-7800 03/13/23 19:00:19.342
    [It] should perform rolling updates and roll backs of template modifications [Conformance]
      test/e2e/apps/statefulset.go:306
    STEP: Creating a new StatefulSet 03/13/23 19:00:19.347
    Mar 13 19:00:19.353: INFO: Found 0 stateful pods, waiting for 3
    Mar 13 19:00:29.358: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Mar 13 19:00:29.358: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Mar 13 19:00:29.358: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    Mar 13 19:00:29.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-7800 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar 13 19:00:29.559: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar 13 19:00:29.559: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar 13 19:00:29.559: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 03/13/23 19:00:39.573
    Mar 13 19:00:39.591: INFO: Updating stateful set ss2
    STEP: Creating a new revision 03/13/23 19:00:39.591
    STEP: Updating Pods in reverse ordinal order 03/13/23 19:00:49.604
    Mar 13 19:00:49.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-7800 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar 13 19:00:49.778: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar 13 19:00:49.778: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar 13 19:00:49.778: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    STEP: Rolling back to a previous revision 03/13/23 19:01:09.807
    Mar 13 19:01:09.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-7800 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar 13 19:01:10.023: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar 13 19:01:10.023: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar 13 19:01:10.023: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar 13 19:01:20.065: INFO: Updating stateful set ss2
    STEP: Rolling back update in reverse ordinal order 03/13/23 19:01:30.081
    Mar 13 19:01:30.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-7800 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar 13 19:01:30.247: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar 13 19:01:30.247: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar 13 19:01:30.247: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar 13 19:01:40.268: INFO: Deleting all statefulset in ns statefulset-7800
    Mar 13 19:01:40.271: INFO: Scaling statefulset ss2 to 0
    Mar 13 19:01:50.289: INFO: Waiting for statefulset status.replicas updated to 0
    Mar 13 19:01:50.292: INFO: Deleting statefulset ss2
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:01:50.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-7800" for this suite. 03/13/23 19:01:50.317
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:01:50.328
Mar 13 19:01:50.328: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename svcaccounts 03/13/23 19:01:50.33
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:01:50.341
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:01:50.344
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161
Mar 13 19:01:50.362: INFO: created pod pod-service-account-defaultsa
Mar 13 19:01:50.362: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Mar 13 19:01:50.370: INFO: created pod pod-service-account-mountsa
Mar 13 19:01:50.370: INFO: pod pod-service-account-mountsa service account token volume mount: true
Mar 13 19:01:50.375: INFO: created pod pod-service-account-nomountsa
Mar 13 19:01:50.376: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Mar 13 19:01:50.381: INFO: created pod pod-service-account-defaultsa-mountspec
Mar 13 19:01:50.381: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Mar 13 19:01:50.387: INFO: created pod pod-service-account-mountsa-mountspec
Mar 13 19:01:50.387: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Mar 13 19:01:50.395: INFO: created pod pod-service-account-nomountsa-mountspec
Mar 13 19:01:50.395: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Mar 13 19:01:50.398: INFO: created pod pod-service-account-defaultsa-nomountspec
Mar 13 19:01:50.398: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Mar 13 19:01:50.404: INFO: created pod pod-service-account-mountsa-nomountspec
Mar 13 19:01:50.404: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Mar 13 19:01:50.408: INFO: created pod pod-service-account-nomountsa-nomountspec
Mar 13 19:01:50.408: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar 13 19:01:50.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-5415" for this suite. 03/13/23 19:01:50.435
------------------------------
â€¢ [0.115 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:01:50.328
    Mar 13 19:01:50.328: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename svcaccounts 03/13/23 19:01:50.33
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:01:50.341
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:01:50.344
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow opting out of API token automount  [Conformance]
      test/e2e/auth/service_accounts.go:161
    Mar 13 19:01:50.362: INFO: created pod pod-service-account-defaultsa
    Mar 13 19:01:50.362: INFO: pod pod-service-account-defaultsa service account token volume mount: true
    Mar 13 19:01:50.370: INFO: created pod pod-service-account-mountsa
    Mar 13 19:01:50.370: INFO: pod pod-service-account-mountsa service account token volume mount: true
    Mar 13 19:01:50.375: INFO: created pod pod-service-account-nomountsa
    Mar 13 19:01:50.376: INFO: pod pod-service-account-nomountsa service account token volume mount: false
    Mar 13 19:01:50.381: INFO: created pod pod-service-account-defaultsa-mountspec
    Mar 13 19:01:50.381: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
    Mar 13 19:01:50.387: INFO: created pod pod-service-account-mountsa-mountspec
    Mar 13 19:01:50.387: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
    Mar 13 19:01:50.395: INFO: created pod pod-service-account-nomountsa-mountspec
    Mar 13 19:01:50.395: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
    Mar 13 19:01:50.398: INFO: created pod pod-service-account-defaultsa-nomountspec
    Mar 13 19:01:50.398: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
    Mar 13 19:01:50.404: INFO: created pod pod-service-account-mountsa-nomountspec
    Mar 13 19:01:50.404: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
    Mar 13 19:01:50.408: INFO: created pod pod-service-account-nomountsa-nomountspec
    Mar 13 19:01:50.408: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:01:50.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-5415" for this suite. 03/13/23 19:01:50.435
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo
  should scale a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:352
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:01:50.447
Mar 13 19:01:50.447: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 19:01:50.448
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:01:50.471
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:01:50.5
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:326
[It] should scale a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:352
STEP: creating a replication controller 03/13/23 19:01:50.509
Mar 13 19:01:50.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 create -f -'
Mar 13 19:01:51.607: INFO: stderr: ""
Mar 13 19:01:51.607: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up. 03/13/23 19:01:51.607
Mar 13 19:01:51.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar 13 19:01:51.703: INFO: stderr: ""
Mar 13 19:01:51.703: INFO: stdout: "update-demo-nautilus-bvrrm update-demo-nautilus-rxclj "
Mar 13 19:01:51.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-bvrrm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar 13 19:01:51.810: INFO: stderr: ""
Mar 13 19:01:51.810: INFO: stdout: ""
Mar 13 19:01:51.810: INFO: update-demo-nautilus-bvrrm is created but not running
Mar 13 19:01:56.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar 13 19:01:56.929: INFO: stderr: ""
Mar 13 19:01:56.929: INFO: stdout: "update-demo-nautilus-bvrrm update-demo-nautilus-rxclj "
Mar 13 19:01:56.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-bvrrm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar 13 19:01:57.025: INFO: stderr: ""
Mar 13 19:01:57.025: INFO: stdout: ""
Mar 13 19:01:57.025: INFO: update-demo-nautilus-bvrrm is created but not running
Mar 13 19:02:02.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar 13 19:02:02.173: INFO: stderr: ""
Mar 13 19:02:02.173: INFO: stdout: "update-demo-nautilus-bvrrm update-demo-nautilus-rxclj "
Mar 13 19:02:02.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-bvrrm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar 13 19:02:02.279: INFO: stderr: ""
Mar 13 19:02:02.279: INFO: stdout: "true"
Mar 13 19:02:02.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-bvrrm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar 13 19:02:02.376: INFO: stderr: ""
Mar 13 19:02:02.376: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar 13 19:02:02.376: INFO: validating pod update-demo-nautilus-bvrrm
Mar 13 19:02:02.415: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar 13 19:02:02.416: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar 13 19:02:02.416: INFO: update-demo-nautilus-bvrrm is verified up and running
Mar 13 19:02:02.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-rxclj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar 13 19:02:02.502: INFO: stderr: ""
Mar 13 19:02:02.502: INFO: stdout: "true"
Mar 13 19:02:02.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-rxclj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar 13 19:02:02.599: INFO: stderr: ""
Mar 13 19:02:02.599: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar 13 19:02:02.599: INFO: validating pod update-demo-nautilus-rxclj
Mar 13 19:02:02.617: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar 13 19:02:02.617: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar 13 19:02:02.617: INFO: update-demo-nautilus-rxclj is verified up and running
STEP: scaling down the replication controller 03/13/23 19:02:02.617
Mar 13 19:02:02.619: INFO: scanned /root for discovery docs: <nil>
Mar 13 19:02:02.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Mar 13 19:02:03.788: INFO: stderr: ""
Mar 13 19:02:03.788: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up. 03/13/23 19:02:03.788
Mar 13 19:02:03.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar 13 19:02:03.900: INFO: stderr: ""
Mar 13 19:02:03.900: INFO: stdout: "update-demo-nautilus-bvrrm update-demo-nautilus-rxclj "
STEP: Replicas for name=update-demo: expected=1 actual=2 03/13/23 19:02:03.9
Mar 13 19:02:08.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar 13 19:02:08.993: INFO: stderr: ""
Mar 13 19:02:08.993: INFO: stdout: "update-demo-nautilus-rxclj "
Mar 13 19:02:08.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-rxclj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar 13 19:02:09.080: INFO: stderr: ""
Mar 13 19:02:09.080: INFO: stdout: "true"
Mar 13 19:02:09.080: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-rxclj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar 13 19:02:09.177: INFO: stderr: ""
Mar 13 19:02:09.177: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar 13 19:02:09.177: INFO: validating pod update-demo-nautilus-rxclj
Mar 13 19:02:09.188: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar 13 19:02:09.188: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar 13 19:02:09.188: INFO: update-demo-nautilus-rxclj is verified up and running
STEP: scaling up the replication controller 03/13/23 19:02:09.188
Mar 13 19:02:09.190: INFO: scanned /root for discovery docs: <nil>
Mar 13 19:02:09.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Mar 13 19:02:10.353: INFO: stderr: ""
Mar 13 19:02:10.353: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up. 03/13/23 19:02:10.353
Mar 13 19:02:10.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar 13 19:02:10.532: INFO: stderr: ""
Mar 13 19:02:10.532: INFO: stdout: "update-demo-nautilus-6m4z9 update-demo-nautilus-rxclj "
Mar 13 19:02:10.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-6m4z9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar 13 19:02:10.634: INFO: stderr: ""
Mar 13 19:02:10.634: INFO: stdout: "true"
Mar 13 19:02:10.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-6m4z9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar 13 19:02:10.723: INFO: stderr: ""
Mar 13 19:02:10.723: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar 13 19:02:10.723: INFO: validating pod update-demo-nautilus-6m4z9
Mar 13 19:02:10.748: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar 13 19:02:10.748: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar 13 19:02:10.748: INFO: update-demo-nautilus-6m4z9 is verified up and running
Mar 13 19:02:10.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-rxclj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar 13 19:02:10.848: INFO: stderr: ""
Mar 13 19:02:10.848: INFO: stdout: "true"
Mar 13 19:02:10.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-rxclj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar 13 19:02:10.955: INFO: stderr: ""
Mar 13 19:02:10.955: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar 13 19:02:10.955: INFO: validating pod update-demo-nautilus-rxclj
Mar 13 19:02:10.962: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar 13 19:02:10.962: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar 13 19:02:10.962: INFO: update-demo-nautilus-rxclj is verified up and running
STEP: using delete to clean up resources 03/13/23 19:02:10.962
Mar 13 19:02:10.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 delete --grace-period=0 --force -f -'
Mar 13 19:02:11.108: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar 13 19:02:11.108: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Mar 13 19:02:11.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get rc,svc -l name=update-demo --no-headers'
Mar 13 19:02:11.241: INFO: stderr: "No resources found in kubectl-7510 namespace.\n"
Mar 13 19:02:11.241: INFO: stdout: ""
Mar 13 19:02:11.241: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Mar 13 19:02:11.326: INFO: stderr: ""
Mar 13 19:02:11.326: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 19:02:11.327: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-7510" for this suite. 03/13/23 19:02:11.337
------------------------------
â€¢ [SLOW TEST] [20.899 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:324
    should scale a replication controller  [Conformance]
    test/e2e/kubectl/kubectl.go:352

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:01:50.447
    Mar 13 19:01:50.447: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 19:01:50.448
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:01:50.471
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:01:50.5
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Update Demo
      test/e2e/kubectl/kubectl.go:326
    [It] should scale a replication controller  [Conformance]
      test/e2e/kubectl/kubectl.go:352
    STEP: creating a replication controller 03/13/23 19:01:50.509
    Mar 13 19:01:50.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 create -f -'
    Mar 13 19:01:51.607: INFO: stderr: ""
    Mar 13 19:01:51.607: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 03/13/23 19:01:51.607
    Mar 13 19:01:51.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar 13 19:01:51.703: INFO: stderr: ""
    Mar 13 19:01:51.703: INFO: stdout: "update-demo-nautilus-bvrrm update-demo-nautilus-rxclj "
    Mar 13 19:01:51.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-bvrrm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar 13 19:01:51.810: INFO: stderr: ""
    Mar 13 19:01:51.810: INFO: stdout: ""
    Mar 13 19:01:51.810: INFO: update-demo-nautilus-bvrrm is created but not running
    Mar 13 19:01:56.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar 13 19:01:56.929: INFO: stderr: ""
    Mar 13 19:01:56.929: INFO: stdout: "update-demo-nautilus-bvrrm update-demo-nautilus-rxclj "
    Mar 13 19:01:56.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-bvrrm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar 13 19:01:57.025: INFO: stderr: ""
    Mar 13 19:01:57.025: INFO: stdout: ""
    Mar 13 19:01:57.025: INFO: update-demo-nautilus-bvrrm is created but not running
    Mar 13 19:02:02.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar 13 19:02:02.173: INFO: stderr: ""
    Mar 13 19:02:02.173: INFO: stdout: "update-demo-nautilus-bvrrm update-demo-nautilus-rxclj "
    Mar 13 19:02:02.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-bvrrm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar 13 19:02:02.279: INFO: stderr: ""
    Mar 13 19:02:02.279: INFO: stdout: "true"
    Mar 13 19:02:02.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-bvrrm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar 13 19:02:02.376: INFO: stderr: ""
    Mar 13 19:02:02.376: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar 13 19:02:02.376: INFO: validating pod update-demo-nautilus-bvrrm
    Mar 13 19:02:02.415: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar 13 19:02:02.416: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar 13 19:02:02.416: INFO: update-demo-nautilus-bvrrm is verified up and running
    Mar 13 19:02:02.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-rxclj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar 13 19:02:02.502: INFO: stderr: ""
    Mar 13 19:02:02.502: INFO: stdout: "true"
    Mar 13 19:02:02.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-rxclj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar 13 19:02:02.599: INFO: stderr: ""
    Mar 13 19:02:02.599: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar 13 19:02:02.599: INFO: validating pod update-demo-nautilus-rxclj
    Mar 13 19:02:02.617: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar 13 19:02:02.617: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar 13 19:02:02.617: INFO: update-demo-nautilus-rxclj is verified up and running
    STEP: scaling down the replication controller 03/13/23 19:02:02.617
    Mar 13 19:02:02.619: INFO: scanned /root for discovery docs: <nil>
    Mar 13 19:02:02.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
    Mar 13 19:02:03.788: INFO: stderr: ""
    Mar 13 19:02:03.788: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 03/13/23 19:02:03.788
    Mar 13 19:02:03.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar 13 19:02:03.900: INFO: stderr: ""
    Mar 13 19:02:03.900: INFO: stdout: "update-demo-nautilus-bvrrm update-demo-nautilus-rxclj "
    STEP: Replicas for name=update-demo: expected=1 actual=2 03/13/23 19:02:03.9
    Mar 13 19:02:08.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar 13 19:02:08.993: INFO: stderr: ""
    Mar 13 19:02:08.993: INFO: stdout: "update-demo-nautilus-rxclj "
    Mar 13 19:02:08.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-rxclj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar 13 19:02:09.080: INFO: stderr: ""
    Mar 13 19:02:09.080: INFO: stdout: "true"
    Mar 13 19:02:09.080: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-rxclj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar 13 19:02:09.177: INFO: stderr: ""
    Mar 13 19:02:09.177: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar 13 19:02:09.177: INFO: validating pod update-demo-nautilus-rxclj
    Mar 13 19:02:09.188: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar 13 19:02:09.188: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar 13 19:02:09.188: INFO: update-demo-nautilus-rxclj is verified up and running
    STEP: scaling up the replication controller 03/13/23 19:02:09.188
    Mar 13 19:02:09.190: INFO: scanned /root for discovery docs: <nil>
    Mar 13 19:02:09.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
    Mar 13 19:02:10.353: INFO: stderr: ""
    Mar 13 19:02:10.353: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 03/13/23 19:02:10.353
    Mar 13 19:02:10.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar 13 19:02:10.532: INFO: stderr: ""
    Mar 13 19:02:10.532: INFO: stdout: "update-demo-nautilus-6m4z9 update-demo-nautilus-rxclj "
    Mar 13 19:02:10.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-6m4z9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar 13 19:02:10.634: INFO: stderr: ""
    Mar 13 19:02:10.634: INFO: stdout: "true"
    Mar 13 19:02:10.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-6m4z9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar 13 19:02:10.723: INFO: stderr: ""
    Mar 13 19:02:10.723: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar 13 19:02:10.723: INFO: validating pod update-demo-nautilus-6m4z9
    Mar 13 19:02:10.748: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar 13 19:02:10.748: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar 13 19:02:10.748: INFO: update-demo-nautilus-6m4z9 is verified up and running
    Mar 13 19:02:10.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-rxclj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar 13 19:02:10.848: INFO: stderr: ""
    Mar 13 19:02:10.848: INFO: stdout: "true"
    Mar 13 19:02:10.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods update-demo-nautilus-rxclj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar 13 19:02:10.955: INFO: stderr: ""
    Mar 13 19:02:10.955: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar 13 19:02:10.955: INFO: validating pod update-demo-nautilus-rxclj
    Mar 13 19:02:10.962: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar 13 19:02:10.962: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar 13 19:02:10.962: INFO: update-demo-nautilus-rxclj is verified up and running
    STEP: using delete to clean up resources 03/13/23 19:02:10.962
    Mar 13 19:02:10.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 delete --grace-period=0 --force -f -'
    Mar 13 19:02:11.108: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar 13 19:02:11.108: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
    Mar 13 19:02:11.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get rc,svc -l name=update-demo --no-headers'
    Mar 13 19:02:11.241: INFO: stderr: "No resources found in kubectl-7510 namespace.\n"
    Mar 13 19:02:11.241: INFO: stdout: ""
    Mar 13 19:02:11.241: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7510 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Mar 13 19:02:11.326: INFO: stderr: ""
    Mar 13 19:02:11.326: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:02:11.327: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-7510" for this suite. 03/13/23 19:02:11.337
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:02:11.354
Mar 13 19:02:11.354: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename replication-controller 03/13/23 19:02:11.356
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:02:11.38
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:02:11.384
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92
STEP: Given a Pod with a 'name' label pod-adoption is created 03/13/23 19:02:11.388
Mar 13 19:02:11.399: INFO: Waiting up to 5m0s for pod "pod-adoption" in namespace "replication-controller-8156" to be "running and ready"
Mar 13 19:02:11.407: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 8.871024ms
Mar 13 19:02:11.408: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:02:13.415: INFO: Pod "pod-adoption": Phase="Running", Reason="", readiness=true. Elapsed: 2.01672425s
Mar 13 19:02:13.415: INFO: The phase of Pod pod-adoption is Running (Ready = true)
Mar 13 19:02:13.415: INFO: Pod "pod-adoption" satisfied condition "running and ready"
STEP: When a replication controller with a matching selector is created 03/13/23 19:02:13.419
STEP: Then the orphan pod is adopted 03/13/23 19:02:13.425
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Mar 13 19:02:14.436: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-8156" for this suite. 03/13/23 19:02:14.442
------------------------------
â€¢ [3.097 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:02:11.354
    Mar 13 19:02:11.354: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename replication-controller 03/13/23 19:02:11.356
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:02:11.38
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:02:11.384
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should adopt matching pods on creation [Conformance]
      test/e2e/apps/rc.go:92
    STEP: Given a Pod with a 'name' label pod-adoption is created 03/13/23 19:02:11.388
    Mar 13 19:02:11.399: INFO: Waiting up to 5m0s for pod "pod-adoption" in namespace "replication-controller-8156" to be "running and ready"
    Mar 13 19:02:11.407: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 8.871024ms
    Mar 13 19:02:11.408: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:02:13.415: INFO: Pod "pod-adoption": Phase="Running", Reason="", readiness=true. Elapsed: 2.01672425s
    Mar 13 19:02:13.415: INFO: The phase of Pod pod-adoption is Running (Ready = true)
    Mar 13 19:02:13.415: INFO: Pod "pod-adoption" satisfied condition "running and ready"
    STEP: When a replication controller with a matching selector is created 03/13/23 19:02:13.419
    STEP: Then the orphan pod is adopted 03/13/23 19:02:13.425
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:02:14.436: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-8156" for this suite. 03/13/23 19:02:14.442
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:02:14.453
Mar 13 19:02:14.453: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:02:14.454
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:02:14.472
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:02:14.475
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56
STEP: Creating projection with secret that has name projected-secret-test-78984141-86b8-4656-ba0e-18c68c141ee1 03/13/23 19:02:14.478
STEP: Creating a pod to test consume secrets 03/13/23 19:02:14.484
Mar 13 19:02:14.492: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4" in namespace "projected-9959" to be "Succeeded or Failed"
Mar 13 19:02:14.496: INFO: Pod "pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.133345ms
Mar 13 19:02:16.500: INFO: Pod "pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007782218s
Mar 13 19:02:18.501: INFO: Pod "pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008777652s
STEP: Saw pod success 03/13/23 19:02:18.502
Mar 13 19:02:18.503: INFO: Pod "pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4" satisfied condition "Succeeded or Failed"
Mar 13 19:02:18.506: INFO: Trying to get logs from node vke-automated-test-f5b1d7d2d722 pod pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4 container projected-secret-volume-test: <nil>
STEP: delete the pod 03/13/23 19:02:18.532
Mar 13 19:02:18.539: INFO: Waiting for pod pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4 to disappear
Mar 13 19:02:18.542: INFO: Pod pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar 13 19:02:18.542: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-9959" for this suite. 03/13/23 19:02:18.545
------------------------------
â€¢ [4.097 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:02:14.453
    Mar 13 19:02:14.453: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:02:14.454
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:02:14.472
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:02:14.475
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:56
    STEP: Creating projection with secret that has name projected-secret-test-78984141-86b8-4656-ba0e-18c68c141ee1 03/13/23 19:02:14.478
    STEP: Creating a pod to test consume secrets 03/13/23 19:02:14.484
    Mar 13 19:02:14.492: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4" in namespace "projected-9959" to be "Succeeded or Failed"
    Mar 13 19:02:14.496: INFO: Pod "pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.133345ms
    Mar 13 19:02:16.500: INFO: Pod "pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007782218s
    Mar 13 19:02:18.501: INFO: Pod "pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008777652s
    STEP: Saw pod success 03/13/23 19:02:18.502
    Mar 13 19:02:18.503: INFO: Pod "pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4" satisfied condition "Succeeded or Failed"
    Mar 13 19:02:18.506: INFO: Trying to get logs from node vke-automated-test-f5b1d7d2d722 pod pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4 container projected-secret-volume-test: <nil>
    STEP: delete the pod 03/13/23 19:02:18.532
    Mar 13 19:02:18.539: INFO: Waiting for pod pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4 to disappear
    Mar 13 19:02:18.542: INFO: Pod pod-projected-secrets-53286aaf-351a-4060-82a9-ae62289679c4 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:02:18.542: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-9959" for this suite. 03/13/23 19:02:18.545
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:02:18.554
Mar 13 19:02:18.554: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pods 03/13/23 19:02:18.556
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:02:18.566
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:02:18.568
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204
STEP: creating pod 03/13/23 19:02:18.572
Mar 13 19:02:18.577: INFO: Waiting up to 5m0s for pod "pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559" in namespace "pods-9888" to be "running and ready"
Mar 13 19:02:18.580: INFO: Pod "pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559": Phase="Pending", Reason="", readiness=false. Elapsed: 2.838422ms
Mar 13 19:02:18.580: INFO: The phase of Pod pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:02:20.583: INFO: Pod "pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559": Phase="Running", Reason="", readiness=true. Elapsed: 2.006062501s
Mar 13 19:02:20.583: INFO: The phase of Pod pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559 is Running (Ready = true)
Mar 13 19:02:20.583: INFO: Pod "pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559" satisfied condition "running and ready"
Mar 13 19:02:20.588: INFO: Pod pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559 has hostIP: 10.1.96.4
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar 13 19:02:20.588: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-9888" for this suite. 03/13/23 19:02:20.592
------------------------------
â€¢ [2.044 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:02:18.554
    Mar 13 19:02:18.554: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pods 03/13/23 19:02:18.556
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:02:18.566
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:02:18.568
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should get a host IP [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:204
    STEP: creating pod 03/13/23 19:02:18.572
    Mar 13 19:02:18.577: INFO: Waiting up to 5m0s for pod "pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559" in namespace "pods-9888" to be "running and ready"
    Mar 13 19:02:18.580: INFO: Pod "pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559": Phase="Pending", Reason="", readiness=false. Elapsed: 2.838422ms
    Mar 13 19:02:18.580: INFO: The phase of Pod pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:02:20.583: INFO: Pod "pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559": Phase="Running", Reason="", readiness=true. Elapsed: 2.006062501s
    Mar 13 19:02:20.583: INFO: The phase of Pod pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559 is Running (Ready = true)
    Mar 13 19:02:20.583: INFO: Pod "pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559" satisfied condition "running and ready"
    Mar 13 19:02:20.588: INFO: Pod pod-hostip-dfac1702-a766-4888-b3ed-d3a5a5646559 has hostIP: 10.1.96.4
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:02:20.588: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-9888" for this suite. 03/13/23 19:02:20.592
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] Downward API volume
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:02:20.598
Mar 13 19:02:20.598: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 19:02:20.599
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:02:20.608
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:02:20.611
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193
STEP: Creating a pod to test downward API volume plugin 03/13/23 19:02:20.615
Mar 13 19:02:20.621: INFO: Waiting up to 5m0s for pod "downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9" in namespace "downward-api-2966" to be "Succeeded or Failed"
Mar 13 19:02:20.623: INFO: Pod "downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.254749ms
Mar 13 19:02:22.631: INFO: Pod "downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009376979s
Mar 13 19:02:24.628: INFO: Pod "downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007006941s
STEP: Saw pod success 03/13/23 19:02:24.628
Mar 13 19:02:24.629: INFO: Pod "downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9" satisfied condition "Succeeded or Failed"
Mar 13 19:02:24.631: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9 container client-container: <nil>
STEP: delete the pod 03/13/23 19:02:24.652
Mar 13 19:02:24.660: INFO: Waiting for pod downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9 to disappear
Mar 13 19:02:24.662: INFO: Pod downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar 13 19:02:24.662: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-2966" for this suite. 03/13/23 19:02:24.665
------------------------------
â€¢ [4.070 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:02:20.598
    Mar 13 19:02:20.598: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 19:02:20.599
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:02:20.608
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:02:20.611
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's cpu limit [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:193
    STEP: Creating a pod to test downward API volume plugin 03/13/23 19:02:20.615
    Mar 13 19:02:20.621: INFO: Waiting up to 5m0s for pod "downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9" in namespace "downward-api-2966" to be "Succeeded or Failed"
    Mar 13 19:02:20.623: INFO: Pod "downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.254749ms
    Mar 13 19:02:22.631: INFO: Pod "downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009376979s
    Mar 13 19:02:24.628: INFO: Pod "downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007006941s
    STEP: Saw pod success 03/13/23 19:02:24.628
    Mar 13 19:02:24.629: INFO: Pod "downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9" satisfied condition "Succeeded or Failed"
    Mar 13 19:02:24.631: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9 container client-container: <nil>
    STEP: delete the pod 03/13/23 19:02:24.652
    Mar 13 19:02:24.660: INFO: Waiting for pod downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9 to disappear
    Mar 13 19:02:24.662: INFO: Pod downwardapi-volume-eb6e01e5-6b2e-41d5-bda5-f0a9b17eebb9 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:02:24.662: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-2966" for this suite. 03/13/23 19:02:24.665
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:02:24.677
Mar 13 19:02:24.678: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename init-container 03/13/23 19:02:24.679
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:02:24.688
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:02:24.691
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334
STEP: creating the pod 03/13/23 19:02:24.694
Mar 13 19:02:24.694: INFO: PodSpec: initContainers in spec.initContainers
Mar 13 19:03:07.622: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-92b2652b-7ff3-4006-bb22-f908eac88101", GenerateName:"", Namespace:"init-container-8932", SelfLink:"", UID:"ca98d30e-1997-4314-9656-71f677dc9b1e", ResourceVersion:"8394", Generation:0, CreationTimestamp:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"694890995"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"4838c4f6e00c09a9d2baf6d5f3e72e1d836db32ddf5474416fa91a9ad7272cef", "cni.projectcalico.org/podIP":"10.244.181.141/32", "cni.projectcalico.org/podIPs":"10.244.181.141/32,2001:db8:42:1f:e556:e398:18f3:c249/128"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001103890), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.March, 13, 19, 2, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001103920), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.March, 13, 19, 3, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001103968), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-dw4fm", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000ead640), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dw4fm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dw4fm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dw4fm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc001df19d0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"vke-automated-test-51df1d4fb06e", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000bb8000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001df1a50)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001df1a70)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc001df1a78), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc001df1a7c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0011c3d50), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.1.96.5", PodIP:"10.244.181.141", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.181.141"}, v1.PodIP{IP:"2001:db8:42:1f:e556:e398:18f3:c249"}}, StartTime:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000bb80e0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000bb8150)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://f9bc4759e3db4a8a0c5b40b7a4b9fe3969a793ef82a5e22de169ed7345db0c28", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000ead6c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000ead6a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc001df1aff)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:03:07.625: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-8932" for this suite. 03/13/23 19:03:07.646
------------------------------
â€¢ [SLOW TEST] [42.999 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:02:24.677
    Mar 13 19:02:24.678: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename init-container 03/13/23 19:02:24.679
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:02:24.688
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:02:24.691
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
      test/e2e/common/node/init_container.go:334
    STEP: creating the pod 03/13/23 19:02:24.694
    Mar 13 19:02:24.694: INFO: PodSpec: initContainers in spec.initContainers
    Mar 13 19:03:07.622: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-92b2652b-7ff3-4006-bb22-f908eac88101", GenerateName:"", Namespace:"init-container-8932", SelfLink:"", UID:"ca98d30e-1997-4314-9656-71f677dc9b1e", ResourceVersion:"8394", Generation:0, CreationTimestamp:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"694890995"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"4838c4f6e00c09a9d2baf6d5f3e72e1d836db32ddf5474416fa91a9ad7272cef", "cni.projectcalico.org/podIP":"10.244.181.141/32", "cni.projectcalico.org/podIPs":"10.244.181.141/32,2001:db8:42:1f:e556:e398:18f3:c249/128"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001103890), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.March, 13, 19, 2, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001103920), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.March, 13, 19, 3, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001103968), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-dw4fm", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000ead640), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dw4fm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dw4fm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dw4fm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc001df19d0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"vke-automated-test-51df1d4fb06e", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000bb8000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001df1a50)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001df1a70)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc001df1a78), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc001df1a7c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0011c3d50), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.1.96.5", PodIP:"10.244.181.141", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.181.141"}, v1.PodIP{IP:"2001:db8:42:1f:e556:e398:18f3:c249"}}, StartTime:time.Date(2023, time.March, 13, 19, 2, 24, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000bb80e0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000bb8150)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://f9bc4759e3db4a8a0c5b40b7a4b9fe3969a793ef82a5e22de169ed7345db0c28", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000ead6c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000ead6a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc001df1aff)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:03:07.625: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-8932" for this suite. 03/13/23 19:03:07.646
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts
  should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:03:07.681
Mar 13 19:03:07.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename svcaccounts 03/13/23 19:03:07.683
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:07.701
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:07.706
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275
STEP: Creating a pod to test service account token:  03/13/23 19:03:07.718
Mar 13 19:03:07.730: INFO: Waiting up to 5m0s for pod "test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65" in namespace "svcaccounts-3862" to be "Succeeded or Failed"
Mar 13 19:03:07.736: INFO: Pod "test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65": Phase="Pending", Reason="", readiness=false. Elapsed: 5.580187ms
Mar 13 19:03:09.746: INFO: Pod "test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01544284s
Mar 13 19:03:11.743: INFO: Pod "test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012200008s
STEP: Saw pod success 03/13/23 19:03:11.743
Mar 13 19:03:11.743: INFO: Pod "test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65" satisfied condition "Succeeded or Failed"
Mar 13 19:03:11.752: INFO: Trying to get logs from node vke-automated-test-f5b1d7d2d722 pod test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65 container agnhost-container: <nil>
STEP: delete the pod 03/13/23 19:03:11.777
Mar 13 19:03:11.791: INFO: Waiting for pod test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65 to disappear
Mar 13 19:03:11.803: INFO: Pod test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65 no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar 13 19:03:11.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-3862" for this suite. 03/13/23 19:03:11.812
------------------------------
â€¢ [4.144 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:03:07.681
    Mar 13 19:03:07.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename svcaccounts 03/13/23 19:03:07.683
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:07.701
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:07.706
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should mount projected service account token [Conformance]
      test/e2e/auth/service_accounts.go:275
    STEP: Creating a pod to test service account token:  03/13/23 19:03:07.718
    Mar 13 19:03:07.730: INFO: Waiting up to 5m0s for pod "test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65" in namespace "svcaccounts-3862" to be "Succeeded or Failed"
    Mar 13 19:03:07.736: INFO: Pod "test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65": Phase="Pending", Reason="", readiness=false. Elapsed: 5.580187ms
    Mar 13 19:03:09.746: INFO: Pod "test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01544284s
    Mar 13 19:03:11.743: INFO: Pod "test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012200008s
    STEP: Saw pod success 03/13/23 19:03:11.743
    Mar 13 19:03:11.743: INFO: Pod "test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65" satisfied condition "Succeeded or Failed"
    Mar 13 19:03:11.752: INFO: Trying to get logs from node vke-automated-test-f5b1d7d2d722 pod test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65 container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 19:03:11.777
    Mar 13 19:03:11.791: INFO: Waiting for pod test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65 to disappear
    Mar 13 19:03:11.803: INFO: Pod test-pod-a7fb51e6-cb62-42d0-af85-5c7dd41e6e65 no longer exists
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:03:11.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-3862" for this suite. 03/13/23 19:03:11.812
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-instrumentation] Events API
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98
[BeforeEach] [sig-instrumentation] Events API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:03:11.827
Mar 13 19:03:11.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename events 03/13/23 19:03:11.83
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:11.853
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:11.858
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98
STEP: creating a test event 03/13/23 19:03:11.87
STEP: listing events in all namespaces 03/13/23 19:03:11.883
STEP: listing events in test namespace 03/13/23 19:03:11.894
STEP: listing events with field selection filtering on source 03/13/23 19:03:11.9
STEP: listing events with field selection filtering on reportingController 03/13/23 19:03:11.905
STEP: getting the test event 03/13/23 19:03:11.919
STEP: patching the test event 03/13/23 19:03:11.929
STEP: getting the test event 03/13/23 19:03:11.958
STEP: updating the test event 03/13/23 19:03:11.966
STEP: getting the test event 03/13/23 19:03:11.976
STEP: deleting the test event 03/13/23 19:03:11.98
STEP: listing events in all namespaces 03/13/23 19:03:12.004
STEP: listing events in test namespace 03/13/23 19:03:12.015
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/node/init/init.go:32
Mar 13 19:03:12.018: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events API
  tear down framework | framework.go:193
STEP: Destroying namespace "events-5462" for this suite. 03/13/23 19:03:12.024
------------------------------
â€¢ [0.213 seconds]
[sig-instrumentation] Events API
test/e2e/instrumentation/common/framework.go:23
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:03:11.827
    Mar 13 19:03:11.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename events 03/13/23 19:03:11.83
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:11.853
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:11.858
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/instrumentation/events.go:84
    [It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
      test/e2e/instrumentation/events.go:98
    STEP: creating a test event 03/13/23 19:03:11.87
    STEP: listing events in all namespaces 03/13/23 19:03:11.883
    STEP: listing events in test namespace 03/13/23 19:03:11.894
    STEP: listing events with field selection filtering on source 03/13/23 19:03:11.9
    STEP: listing events with field selection filtering on reportingController 03/13/23 19:03:11.905
    STEP: getting the test event 03/13/23 19:03:11.919
    STEP: patching the test event 03/13/23 19:03:11.929
    STEP: getting the test event 03/13/23 19:03:11.958
    STEP: updating the test event 03/13/23 19:03:11.966
    STEP: getting the test event 03/13/23 19:03:11.976
    STEP: deleting the test event 03/13/23 19:03:11.98
    STEP: listing events in all namespaces 03/13/23 19:03:12.004
    STEP: listing events in test namespace 03/13/23 19:03:12.015
    [AfterEach] [sig-instrumentation] Events API
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:03:12.018: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-5462" for this suite. 03/13/23 19:03:12.024
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:03:12.04
Mar 13 19:03:12.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:03:12.042
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:12.084
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:12.09
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88
STEP: Creating projection with secret that has name projected-secret-test-map-2187af02-db58-4f63-9013-52080fe88f0e 03/13/23 19:03:12.096
STEP: Creating a pod to test consume secrets 03/13/23 19:03:12.101
Mar 13 19:03:12.114: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761" in namespace "projected-92" to be "Succeeded or Failed"
Mar 13 19:03:12.126: INFO: Pod "pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761": Phase="Pending", Reason="", readiness=false. Elapsed: 11.351542ms
Mar 13 19:03:14.136: INFO: Pod "pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021895686s
Mar 13 19:03:16.138: INFO: Pod "pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023965159s
STEP: Saw pod success 03/13/23 19:03:16.138
Mar 13 19:03:16.139: INFO: Pod "pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761" satisfied condition "Succeeded or Failed"
Mar 13 19:03:16.144: INFO: Trying to get logs from node vke-automated-test-f5b1d7d2d722 pod pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761 container projected-secret-volume-test: <nil>
STEP: delete the pod 03/13/23 19:03:16.152
Mar 13 19:03:16.166: INFO: Waiting for pod pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761 to disappear
Mar 13 19:03:16.169: INFO: Pod pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar 13 19:03:16.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-92" for this suite. 03/13/23 19:03:16.173
------------------------------
â€¢ [4.139 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:03:12.04
    Mar 13 19:03:12.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:03:12.042
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:12.084
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:12.09
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:88
    STEP: Creating projection with secret that has name projected-secret-test-map-2187af02-db58-4f63-9013-52080fe88f0e 03/13/23 19:03:12.096
    STEP: Creating a pod to test consume secrets 03/13/23 19:03:12.101
    Mar 13 19:03:12.114: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761" in namespace "projected-92" to be "Succeeded or Failed"
    Mar 13 19:03:12.126: INFO: Pod "pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761": Phase="Pending", Reason="", readiness=false. Elapsed: 11.351542ms
    Mar 13 19:03:14.136: INFO: Pod "pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021895686s
    Mar 13 19:03:16.138: INFO: Pod "pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023965159s
    STEP: Saw pod success 03/13/23 19:03:16.138
    Mar 13 19:03:16.139: INFO: Pod "pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761" satisfied condition "Succeeded or Failed"
    Mar 13 19:03:16.144: INFO: Trying to get logs from node vke-automated-test-f5b1d7d2d722 pod pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761 container projected-secret-volume-test: <nil>
    STEP: delete the pod 03/13/23 19:03:16.152
    Mar 13 19:03:16.166: INFO: Waiting for pod pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761 to disappear
    Mar 13 19:03:16.169: INFO: Pod pod-projected-secrets-5d2fd09c-8d2d-484b-a7e3-6fb48f8b9761 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:03:16.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-92" for this suite. 03/13/23 19:03:16.173
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should have a working scale subresource [Conformance]
  test/e2e/apps/statefulset.go:848
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:03:16.183
Mar 13 19:03:16.183: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename statefulset 03/13/23 19:03:16.184
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:16.201
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:16.205
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-4181 03/13/23 19:03:16.21
[It] should have a working scale subresource [Conformance]
  test/e2e/apps/statefulset.go:848
STEP: Creating statefulset ss in namespace statefulset-4181 03/13/23 19:03:16.215
Mar 13 19:03:16.224: INFO: Found 0 stateful pods, waiting for 1
Mar 13 19:03:26.239: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource 03/13/23 19:03:26.249
STEP: updating a scale subresource 03/13/23 19:03:26.253
STEP: verifying the statefulset Spec.Replicas was modified 03/13/23 19:03:26.259
STEP: Patch a scale subresource 03/13/23 19:03:26.268
STEP: verifying the statefulset Spec.Replicas was modified 03/13/23 19:03:26.287
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar 13 19:03:26.291: INFO: Deleting all statefulset in ns statefulset-4181
Mar 13 19:03:26.295: INFO: Scaling statefulset ss to 0
Mar 13 19:03:36.315: INFO: Waiting for statefulset status.replicas updated to 0
Mar 13 19:03:36.331: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:03:36.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-4181" for this suite. 03/13/23 19:03:36.349
------------------------------
â€¢ [SLOW TEST] [20.171 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should have a working scale subresource [Conformance]
    test/e2e/apps/statefulset.go:848

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:03:16.183
    Mar 13 19:03:16.183: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename statefulset 03/13/23 19:03:16.184
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:16.201
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:16.205
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-4181 03/13/23 19:03:16.21
    [It] should have a working scale subresource [Conformance]
      test/e2e/apps/statefulset.go:848
    STEP: Creating statefulset ss in namespace statefulset-4181 03/13/23 19:03:16.215
    Mar 13 19:03:16.224: INFO: Found 0 stateful pods, waiting for 1
    Mar 13 19:03:26.239: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: getting scale subresource 03/13/23 19:03:26.249
    STEP: updating a scale subresource 03/13/23 19:03:26.253
    STEP: verifying the statefulset Spec.Replicas was modified 03/13/23 19:03:26.259
    STEP: Patch a scale subresource 03/13/23 19:03:26.268
    STEP: verifying the statefulset Spec.Replicas was modified 03/13/23 19:03:26.287
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar 13 19:03:26.291: INFO: Deleting all statefulset in ns statefulset-4181
    Mar 13 19:03:26.295: INFO: Scaling statefulset ss to 0
    Mar 13 19:03:36.315: INFO: Waiting for statefulset status.replicas updated to 0
    Mar 13 19:03:36.331: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:03:36.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-4181" for this suite. 03/13/23 19:03:36.349
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:03:36.358
Mar 13 19:03:36.359: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 19:03:36.36
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:36.374
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:36.378
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217
STEP: Creating a pod to test emptydir 0777 on node default medium 03/13/23 19:03:36.382
Mar 13 19:03:36.396: INFO: Waiting up to 5m0s for pod "pod-94bcacf7-4361-4191-a758-6c34fee85ee3" in namespace "emptydir-6317" to be "Succeeded or Failed"
Mar 13 19:03:36.399: INFO: Pod "pod-94bcacf7-4361-4191-a758-6c34fee85ee3": Phase="Pending", Reason="", readiness=false. Elapsed: 3.77058ms
Mar 13 19:03:38.404: INFO: Pod "pod-94bcacf7-4361-4191-a758-6c34fee85ee3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008601834s
Mar 13 19:03:40.404: INFO: Pod "pod-94bcacf7-4361-4191-a758-6c34fee85ee3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008829627s
STEP: Saw pod success 03/13/23 19:03:40.405
Mar 13 19:03:40.405: INFO: Pod "pod-94bcacf7-4361-4191-a758-6c34fee85ee3" satisfied condition "Succeeded or Failed"
Mar 13 19:03:40.408: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-94bcacf7-4361-4191-a758-6c34fee85ee3 container test-container: <nil>
STEP: delete the pod 03/13/23 19:03:40.422
Mar 13 19:03:40.430: INFO: Waiting for pod pod-94bcacf7-4361-4191-a758-6c34fee85ee3 to disappear
Mar 13 19:03:40.433: INFO: Pod pod-94bcacf7-4361-4191-a758-6c34fee85ee3 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 19:03:40.433: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-6317" for this suite. 03/13/23 19:03:40.437
------------------------------
â€¢ [4.083 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:03:36.358
    Mar 13 19:03:36.359: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 19:03:36.36
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:36.374
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:36.378
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:217
    STEP: Creating a pod to test emptydir 0777 on node default medium 03/13/23 19:03:36.382
    Mar 13 19:03:36.396: INFO: Waiting up to 5m0s for pod "pod-94bcacf7-4361-4191-a758-6c34fee85ee3" in namespace "emptydir-6317" to be "Succeeded or Failed"
    Mar 13 19:03:36.399: INFO: Pod "pod-94bcacf7-4361-4191-a758-6c34fee85ee3": Phase="Pending", Reason="", readiness=false. Elapsed: 3.77058ms
    Mar 13 19:03:38.404: INFO: Pod "pod-94bcacf7-4361-4191-a758-6c34fee85ee3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008601834s
    Mar 13 19:03:40.404: INFO: Pod "pod-94bcacf7-4361-4191-a758-6c34fee85ee3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008829627s
    STEP: Saw pod success 03/13/23 19:03:40.405
    Mar 13 19:03:40.405: INFO: Pod "pod-94bcacf7-4361-4191-a758-6c34fee85ee3" satisfied condition "Succeeded or Failed"
    Mar 13 19:03:40.408: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-94bcacf7-4361-4191-a758-6c34fee85ee3 container test-container: <nil>
    STEP: delete the pod 03/13/23 19:03:40.422
    Mar 13 19:03:40.430: INFO: Waiting for pod pod-94bcacf7-4361-4191-a758-6c34fee85ee3 to disappear
    Mar 13 19:03:40.433: INFO: Pod pod-94bcacf7-4361-4191-a758-6c34fee85ee3 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:03:40.433: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-6317" for this suite. 03/13/23 19:03:40.437
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:03:40.442
Mar 13 19:03:40.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename resourcequota 03/13/23 19:03:40.444
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:40.454
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:40.457
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392
STEP: Counting existing ResourceQuota 03/13/23 19:03:40.46
STEP: Creating a ResourceQuota 03/13/23 19:03:45.464
STEP: Ensuring resource quota status is calculated 03/13/23 19:03:45.469
STEP: Creating a ReplicationController 03/13/23 19:03:47.473
STEP: Ensuring resource quota status captures replication controller creation 03/13/23 19:03:47.484
STEP: Deleting a ReplicationController 03/13/23 19:03:49.489
STEP: Ensuring resource quota status released usage 03/13/23 19:03:49.495
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar 13 19:03:51.500: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-5179" for this suite. 03/13/23 19:03:51.504
------------------------------
â€¢ [SLOW TEST] [11.068 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:03:40.442
    Mar 13 19:03:40.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename resourcequota 03/13/23 19:03:40.444
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:40.454
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:40.457
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
      test/e2e/apimachinery/resource_quota.go:392
    STEP: Counting existing ResourceQuota 03/13/23 19:03:40.46
    STEP: Creating a ResourceQuota 03/13/23 19:03:45.464
    STEP: Ensuring resource quota status is calculated 03/13/23 19:03:45.469
    STEP: Creating a ReplicationController 03/13/23 19:03:47.473
    STEP: Ensuring resource quota status captures replication controller creation 03/13/23 19:03:47.484
    STEP: Deleting a ReplicationController 03/13/23 19:03:49.489
    STEP: Ensuring resource quota status released usage 03/13/23 19:03:49.495
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:03:51.500: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-5179" for this suite. 03/13/23 19:03:51.504
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:03:51.519
Mar 13 19:03:51.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename cronjob 03/13/23 19:03:51.521
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:51.535
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:51.539
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69
STEP: Creating a cronjob 03/13/23 19:03:51.542
STEP: Ensuring more than one job is running at a time 03/13/23 19:03:51.548
STEP: Ensuring at least two running jobs exists by listing jobs explicitly 03/13/23 19:05:01.563
STEP: Removing cronjob 03/13/23 19:05:01.566
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Mar 13 19:05:01.572: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-3482" for this suite. 03/13/23 19:05:01.577
------------------------------
â€¢ [SLOW TEST] [70.076 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:03:51.519
    Mar 13 19:03:51.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename cronjob 03/13/23 19:03:51.521
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:03:51.535
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:03:51.539
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule multiple jobs concurrently [Conformance]
      test/e2e/apps/cronjob.go:69
    STEP: Creating a cronjob 03/13/23 19:03:51.542
    STEP: Ensuring more than one job is running at a time 03/13/23 19:03:51.548
    STEP: Ensuring at least two running jobs exists by listing jobs explicitly 03/13/23 19:05:01.563
    STEP: Removing cronjob 03/13/23 19:05:01.566
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:05:01.572: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-3482" for this suite. 03/13/23 19:05:01.577
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:05:01.599
Mar 13 19:05:01.599: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:05:01.601
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:01.631
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:01.642
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57
STEP: Creating configMap with name projected-configmap-test-volume-4a7d5cdc-5f2a-4904-be17-0a786ded4354 03/13/23 19:05:01.646
STEP: Creating a pod to test consume configMaps 03/13/23 19:05:01.658
Mar 13 19:05:01.672: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5" in namespace "projected-1167" to be "Succeeded or Failed"
Mar 13 19:05:01.678: INFO: Pod "pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5": Phase="Pending", Reason="", readiness=false. Elapsed: 5.510259ms
Mar 13 19:05:03.732: INFO: Pod "pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.059463523s
Mar 13 19:05:05.687: INFO: Pod "pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014203137s
STEP: Saw pod success 03/13/23 19:05:05.687
Mar 13 19:05:05.687: INFO: Pod "pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5" satisfied condition "Succeeded or Failed"
Mar 13 19:05:05.709: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5 container agnhost-container: <nil>
STEP: delete the pod 03/13/23 19:05:05.74
Mar 13 19:05:05.772: INFO: Waiting for pod pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5 to disappear
Mar 13 19:05:05.778: INFO: Pod pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:05:05.778: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1167" for this suite. 03/13/23 19:05:05.786
------------------------------
â€¢ [4.205 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:05:01.599
    Mar 13 19:05:01.599: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:05:01.601
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:01.631
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:01.642
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:57
    STEP: Creating configMap with name projected-configmap-test-volume-4a7d5cdc-5f2a-4904-be17-0a786ded4354 03/13/23 19:05:01.646
    STEP: Creating a pod to test consume configMaps 03/13/23 19:05:01.658
    Mar 13 19:05:01.672: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5" in namespace "projected-1167" to be "Succeeded or Failed"
    Mar 13 19:05:01.678: INFO: Pod "pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5": Phase="Pending", Reason="", readiness=false. Elapsed: 5.510259ms
    Mar 13 19:05:03.732: INFO: Pod "pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.059463523s
    Mar 13 19:05:05.687: INFO: Pod "pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014203137s
    STEP: Saw pod success 03/13/23 19:05:05.687
    Mar 13 19:05:05.687: INFO: Pod "pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5" satisfied condition "Succeeded or Failed"
    Mar 13 19:05:05.709: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5 container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 19:05:05.74
    Mar 13 19:05:05.772: INFO: Waiting for pod pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5 to disappear
    Mar 13 19:05:05.778: INFO: Pod pod-projected-configmaps-6f406f9a-6460-4543-85c3-80093bb852c5 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:05:05.778: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1167" for this suite. 03/13/23 19:05:05.786
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:05:05.806
Mar 13 19:05:05.806: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 19:05:05.807
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:05.842
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:05.847
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117
STEP: Creating a pod to test emptydir 0777 on tmpfs 03/13/23 19:05:05.851
Mar 13 19:05:05.871: INFO: Waiting up to 5m0s for pod "pod-eb49739f-deff-4850-9cfc-1dda0c24b22c" in namespace "emptydir-2171" to be "Succeeded or Failed"
Mar 13 19:05:05.886: INFO: Pod "pod-eb49739f-deff-4850-9cfc-1dda0c24b22c": Phase="Pending", Reason="", readiness=false. Elapsed: 15.162117ms
Mar 13 19:05:07.895: INFO: Pod "pod-eb49739f-deff-4850-9cfc-1dda0c24b22c": Phase="Running", Reason="", readiness=false. Elapsed: 2.024353687s
Mar 13 19:05:09.892: INFO: Pod "pod-eb49739f-deff-4850-9cfc-1dda0c24b22c": Phase="Running", Reason="", readiness=false. Elapsed: 4.020730411s
Mar 13 19:05:11.900: INFO: Pod "pod-eb49739f-deff-4850-9cfc-1dda0c24b22c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.028845157s
STEP: Saw pod success 03/13/23 19:05:11.9
Mar 13 19:05:11.900: INFO: Pod "pod-eb49739f-deff-4850-9cfc-1dda0c24b22c" satisfied condition "Succeeded or Failed"
Mar 13 19:05:11.906: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-eb49739f-deff-4850-9cfc-1dda0c24b22c container test-container: <nil>
STEP: delete the pod 03/13/23 19:05:11.918
Mar 13 19:05:11.933: INFO: Waiting for pod pod-eb49739f-deff-4850-9cfc-1dda0c24b22c to disappear
Mar 13 19:05:11.936: INFO: Pod pod-eb49739f-deff-4850-9cfc-1dda0c24b22c no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 19:05:11.937: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-2171" for this suite. 03/13/23 19:05:11.945
------------------------------
â€¢ [SLOW TEST] [6.157 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:05:05.806
    Mar 13 19:05:05.806: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 19:05:05.807
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:05.842
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:05.847
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:117
    STEP: Creating a pod to test emptydir 0777 on tmpfs 03/13/23 19:05:05.851
    Mar 13 19:05:05.871: INFO: Waiting up to 5m0s for pod "pod-eb49739f-deff-4850-9cfc-1dda0c24b22c" in namespace "emptydir-2171" to be "Succeeded or Failed"
    Mar 13 19:05:05.886: INFO: Pod "pod-eb49739f-deff-4850-9cfc-1dda0c24b22c": Phase="Pending", Reason="", readiness=false. Elapsed: 15.162117ms
    Mar 13 19:05:07.895: INFO: Pod "pod-eb49739f-deff-4850-9cfc-1dda0c24b22c": Phase="Running", Reason="", readiness=false. Elapsed: 2.024353687s
    Mar 13 19:05:09.892: INFO: Pod "pod-eb49739f-deff-4850-9cfc-1dda0c24b22c": Phase="Running", Reason="", readiness=false. Elapsed: 4.020730411s
    Mar 13 19:05:11.900: INFO: Pod "pod-eb49739f-deff-4850-9cfc-1dda0c24b22c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.028845157s
    STEP: Saw pod success 03/13/23 19:05:11.9
    Mar 13 19:05:11.900: INFO: Pod "pod-eb49739f-deff-4850-9cfc-1dda0c24b22c" satisfied condition "Succeeded or Failed"
    Mar 13 19:05:11.906: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-eb49739f-deff-4850-9cfc-1dda0c24b22c container test-container: <nil>
    STEP: delete the pod 03/13/23 19:05:11.918
    Mar 13 19:05:11.933: INFO: Waiting for pod pod-eb49739f-deff-4850-9cfc-1dda0c24b22c to disappear
    Mar 13 19:05:11.936: INFO: Pod pod-eb49739f-deff-4850-9cfc-1dda0c24b22c no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:05:11.937: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-2171" for this suite. 03/13/23 19:05:11.945
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Secrets
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:05:11.964
Mar 13 19:05:11.964: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename secrets 03/13/23 19:05:11.965
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:11.994
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:12.004
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140
STEP: Creating projection with secret that has name secret-emptykey-test-4f0ef771-fb62-4eaf-9fc8-ae28270ac68c 03/13/23 19:05:12.012
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Mar 13 19:05:12.018: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-2238" for this suite. 03/13/23 19:05:12.023
------------------------------
â€¢ [0.073 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:05:11.964
    Mar 13 19:05:11.964: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename secrets 03/13/23 19:05:11.965
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:11.994
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:12.004
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail to create secret due to empty secret key [Conformance]
      test/e2e/common/node/secrets.go:140
    STEP: Creating projection with secret that has name secret-emptykey-test-4f0ef771-fb62-4eaf-9fc8-ae28270ac68c 03/13/23 19:05:12.012
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:05:12.018: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-2238" for this suite. 03/13/23 19:05:12.023
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:05:12.037
Mar 13 19:05:12.037: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename sched-pred 03/13/23 19:05:12.038
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:12.063
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:12.067
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Mar 13 19:05:12.072: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Mar 13 19:05:12.083: INFO: Waiting for terminating namespaces to be deleted...
Mar 13 19:05:12.086: INFO: 
Logging pods the apiserver thinks is on node vke-automated-test-51df1d4fb06e before test
Mar 13 19:05:12.100: INFO: concurrent-27978904-nphqc from cronjob-3482 started at 2023-03-13 19:04:00 +0000 UTC (1 container statuses recorded)
Mar 13 19:05:12.100: INFO: 	Container c ready: true, restart count 0
Mar 13 19:05:12.100: INFO: concurrent-27978905-hgdx8 from cronjob-3482 started at 2023-03-13 19:05:00 +0000 UTC (1 container statuses recorded)
Mar 13 19:05:12.100: INFO: 	Container c ready: true, restart count 0
Mar 13 19:05:12.100: INFO: calico-node-xs2jj from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 19:05:12.100: INFO: 	Container calico-node ready: true, restart count 0
Mar 13 19:05:12.101: INFO: csi-vultr-node-p9fzg from kube-system started at 2023-03-13 19:00:15 +0000 UTC (2 container statuses recorded)
Mar 13 19:05:12.101: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
Mar 13 19:05:12.101: INFO: 	Container driver-registrar ready: true, restart count 0
Mar 13 19:05:12.101: INFO: konnectivity-agent-5h6k2 from kube-system started at 2023-03-13 19:00:15 +0000 UTC (1 container statuses recorded)
Mar 13 19:05:12.101: INFO: 	Container konnectivity-agent ready: true, restart count 0
Mar 13 19:05:12.101: INFO: sonobuoy from sonobuoy started at 2023-03-13 18:39:50 +0000 UTC (1 container statuses recorded)
Mar 13 19:05:12.101: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Mar 13 19:05:12.101: INFO: sonobuoy-e2e-job-c23108cbbd714118 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
Mar 13 19:05:12.101: INFO: 	Container e2e ready: true, restart count 0
Mar 13 19:05:12.101: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar 13 19:05:12.101: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-6xtp8 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
Mar 13 19:05:12.101: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar 13 19:05:12.101: INFO: 	Container systemd-logs ready: true, restart count 0
Mar 13 19:05:12.101: INFO: 
Logging pods the apiserver thinks is on node vke-automated-test-f5b1d7d2d722 before test
Mar 13 19:05:12.111: INFO: calico-kube-controllers-57b57c56f-hkwr4 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 19:05:12.111: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Mar 13 19:05:12.111: INFO: calico-node-qgbkz from kube-system started at 2023-03-13 18:38:35 +0000 UTC (1 container statuses recorded)
Mar 13 19:05:12.111: INFO: 	Container calico-node ready: true, restart count 0
Mar 13 19:05:12.111: INFO: cluster-autoscaler-598bdb7954-cwz8l from kube-system started at 2023-03-13 18:38:45 +0000 UTC (1 container statuses recorded)
Mar 13 19:05:12.111: INFO: 	Container cluster-autoscaler ready: true, restart count 0
Mar 13 19:05:12.111: INFO: coredns-85c5d49895-6j25x from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 19:05:12.111: INFO: 	Container coredns ready: true, restart count 0
Mar 13 19:05:12.111: INFO: csi-vultr-controller-0 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (4 container statuses recorded)
Mar 13 19:05:12.111: INFO: 	Container csi-attacher ready: true, restart count 0
Mar 13 19:05:12.111: INFO: 	Container csi-provisioner ready: true, restart count 0
Mar 13 19:05:12.111: INFO: 	Container csi-resizer ready: true, restart count 0
Mar 13 19:05:12.111: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
Mar 13 19:05:12.111: INFO: csi-vultr-node-p88qb from kube-system started at 2023-03-13 18:38:43 +0000 UTC (2 container statuses recorded)
Mar 13 19:05:12.111: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
Mar 13 19:05:12.111: INFO: 	Container driver-registrar ready: true, restart count 0
Mar 13 19:05:12.111: INFO: konnectivity-agent-8xln6 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 19:05:12.111: INFO: 	Container konnectivity-agent ready: true, restart count 0
Mar 13 19:05:12.111: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-9nqbq from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
Mar 13 19:05:12.111: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar 13 19:05:12.111: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466
STEP: Trying to launch a pod without a label to get a node which can launch it. 03/13/23 19:05:12.111
Mar 13 19:05:12.118: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-1150" to be "running"
Mar 13 19:05:12.122: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 3.021972ms
Mar 13 19:05:14.127: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.008362768s
Mar 13 19:05:14.127: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 03/13/23 19:05:14.139
STEP: Trying to apply a random label on the found node. 03/13/23 19:05:14.153
STEP: verifying the node has the label kubernetes.io/e2e-e037a6b4-05fa-45c0-9fdf-4e1b1c6f8e07 42 03/13/23 19:05:14.179
STEP: Trying to relaunch the pod, now with labels. 03/13/23 19:05:14.202
Mar 13 19:05:14.221: INFO: Waiting up to 5m0s for pod "with-labels" in namespace "sched-pred-1150" to be "not pending"
Mar 13 19:05:14.225: INFO: Pod "with-labels": Phase="Pending", Reason="", readiness=false. Elapsed: 3.870559ms
Mar 13 19:05:16.229: INFO: Pod "with-labels": Phase="Running", Reason="", readiness=true. Elapsed: 2.007513365s
Mar 13 19:05:16.229: INFO: Pod "with-labels" satisfied condition "not pending"
STEP: removing the label kubernetes.io/e2e-e037a6b4-05fa-45c0-9fdf-4e1b1c6f8e07 off the node vke-automated-test-51df1d4fb06e 03/13/23 19:05:16.233
STEP: verifying the node doesn't have the label kubernetes.io/e2e-e037a6b4-05fa-45c0-9fdf-4e1b1c6f8e07 03/13/23 19:05:16.245
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:05:16.256: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-1150" for this suite. 03/13/23 19:05:16.261
------------------------------
â€¢ [4.230 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:05:12.037
    Mar 13 19:05:12.037: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename sched-pred 03/13/23 19:05:12.038
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:12.063
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:12.067
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Mar 13 19:05:12.072: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Mar 13 19:05:12.083: INFO: Waiting for terminating namespaces to be deleted...
    Mar 13 19:05:12.086: INFO: 
    Logging pods the apiserver thinks is on node vke-automated-test-51df1d4fb06e before test
    Mar 13 19:05:12.100: INFO: concurrent-27978904-nphqc from cronjob-3482 started at 2023-03-13 19:04:00 +0000 UTC (1 container statuses recorded)
    Mar 13 19:05:12.100: INFO: 	Container c ready: true, restart count 0
    Mar 13 19:05:12.100: INFO: concurrent-27978905-hgdx8 from cronjob-3482 started at 2023-03-13 19:05:00 +0000 UTC (1 container statuses recorded)
    Mar 13 19:05:12.100: INFO: 	Container c ready: true, restart count 0
    Mar 13 19:05:12.100: INFO: calico-node-xs2jj from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 19:05:12.100: INFO: 	Container calico-node ready: true, restart count 0
    Mar 13 19:05:12.101: INFO: csi-vultr-node-p9fzg from kube-system started at 2023-03-13 19:00:15 +0000 UTC (2 container statuses recorded)
    Mar 13 19:05:12.101: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
    Mar 13 19:05:12.101: INFO: 	Container driver-registrar ready: true, restart count 0
    Mar 13 19:05:12.101: INFO: konnectivity-agent-5h6k2 from kube-system started at 2023-03-13 19:00:15 +0000 UTC (1 container statuses recorded)
    Mar 13 19:05:12.101: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Mar 13 19:05:12.101: INFO: sonobuoy from sonobuoy started at 2023-03-13 18:39:50 +0000 UTC (1 container statuses recorded)
    Mar 13 19:05:12.101: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Mar 13 19:05:12.101: INFO: sonobuoy-e2e-job-c23108cbbd714118 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
    Mar 13 19:05:12.101: INFO: 	Container e2e ready: true, restart count 0
    Mar 13 19:05:12.101: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar 13 19:05:12.101: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-6xtp8 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
    Mar 13 19:05:12.101: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar 13 19:05:12.101: INFO: 	Container systemd-logs ready: true, restart count 0
    Mar 13 19:05:12.101: INFO: 
    Logging pods the apiserver thinks is on node vke-automated-test-f5b1d7d2d722 before test
    Mar 13 19:05:12.111: INFO: calico-kube-controllers-57b57c56f-hkwr4 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 19:05:12.111: INFO: 	Container calico-kube-controllers ready: true, restart count 0
    Mar 13 19:05:12.111: INFO: calico-node-qgbkz from kube-system started at 2023-03-13 18:38:35 +0000 UTC (1 container statuses recorded)
    Mar 13 19:05:12.111: INFO: 	Container calico-node ready: true, restart count 0
    Mar 13 19:05:12.111: INFO: cluster-autoscaler-598bdb7954-cwz8l from kube-system started at 2023-03-13 18:38:45 +0000 UTC (1 container statuses recorded)
    Mar 13 19:05:12.111: INFO: 	Container cluster-autoscaler ready: true, restart count 0
    Mar 13 19:05:12.111: INFO: coredns-85c5d49895-6j25x from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 19:05:12.111: INFO: 	Container coredns ready: true, restart count 0
    Mar 13 19:05:12.111: INFO: csi-vultr-controller-0 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (4 container statuses recorded)
    Mar 13 19:05:12.111: INFO: 	Container csi-attacher ready: true, restart count 0
    Mar 13 19:05:12.111: INFO: 	Container csi-provisioner ready: true, restart count 0
    Mar 13 19:05:12.111: INFO: 	Container csi-resizer ready: true, restart count 0
    Mar 13 19:05:12.111: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
    Mar 13 19:05:12.111: INFO: csi-vultr-node-p88qb from kube-system started at 2023-03-13 18:38:43 +0000 UTC (2 container statuses recorded)
    Mar 13 19:05:12.111: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
    Mar 13 19:05:12.111: INFO: 	Container driver-registrar ready: true, restart count 0
    Mar 13 19:05:12.111: INFO: konnectivity-agent-8xln6 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 19:05:12.111: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Mar 13 19:05:12.111: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-9nqbq from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
    Mar 13 19:05:12.111: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar 13 19:05:12.111: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates that NodeSelector is respected if matching  [Conformance]
      test/e2e/scheduling/predicates.go:466
    STEP: Trying to launch a pod without a label to get a node which can launch it. 03/13/23 19:05:12.111
    Mar 13 19:05:12.118: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-1150" to be "running"
    Mar 13 19:05:12.122: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 3.021972ms
    Mar 13 19:05:14.127: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.008362768s
    Mar 13 19:05:14.127: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 03/13/23 19:05:14.139
    STEP: Trying to apply a random label on the found node. 03/13/23 19:05:14.153
    STEP: verifying the node has the label kubernetes.io/e2e-e037a6b4-05fa-45c0-9fdf-4e1b1c6f8e07 42 03/13/23 19:05:14.179
    STEP: Trying to relaunch the pod, now with labels. 03/13/23 19:05:14.202
    Mar 13 19:05:14.221: INFO: Waiting up to 5m0s for pod "with-labels" in namespace "sched-pred-1150" to be "not pending"
    Mar 13 19:05:14.225: INFO: Pod "with-labels": Phase="Pending", Reason="", readiness=false. Elapsed: 3.870559ms
    Mar 13 19:05:16.229: INFO: Pod "with-labels": Phase="Running", Reason="", readiness=true. Elapsed: 2.007513365s
    Mar 13 19:05:16.229: INFO: Pod "with-labels" satisfied condition "not pending"
    STEP: removing the label kubernetes.io/e2e-e037a6b4-05fa-45c0-9fdf-4e1b1c6f8e07 off the node vke-automated-test-51df1d4fb06e 03/13/23 19:05:16.233
    STEP: verifying the node doesn't have the label kubernetes.io/e2e-e037a6b4-05fa-45c0-9fdf-4e1b1c6f8e07 03/13/23 19:05:16.245
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:05:16.256: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-1150" for this suite. 03/13/23 19:05:16.261
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Projected downwardAPI
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:05:16.267
Mar 13 19:05:16.267: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:05:16.268
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:16.28
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:16.283
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53
STEP: Creating a pod to test downward API volume plugin 03/13/23 19:05:16.29
Mar 13 19:05:16.297: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d" in namespace "projected-8155" to be "Succeeded or Failed"
Mar 13 19:05:16.303: INFO: Pod "downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d": Phase="Pending", Reason="", readiness=false. Elapsed: 5.595036ms
Mar 13 19:05:18.307: INFO: Pod "downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010192959s
Mar 13 19:05:20.307: INFO: Pod "downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010027884s
STEP: Saw pod success 03/13/23 19:05:20.307
Mar 13 19:05:20.308: INFO: Pod "downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d" satisfied condition "Succeeded or Failed"
Mar 13 19:05:20.311: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d container client-container: <nil>
STEP: delete the pod 03/13/23 19:05:20.32
Mar 13 19:05:20.328: INFO: Waiting for pod downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d to disappear
Mar 13 19:05:20.332: INFO: Pod downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar 13 19:05:20.332: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8155" for this suite. 03/13/23 19:05:20.336
------------------------------
â€¢ [4.074 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:05:16.267
    Mar 13 19:05:16.267: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:05:16.268
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:16.28
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:16.283
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide podname only [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:53
    STEP: Creating a pod to test downward API volume plugin 03/13/23 19:05:16.29
    Mar 13 19:05:16.297: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d" in namespace "projected-8155" to be "Succeeded or Failed"
    Mar 13 19:05:16.303: INFO: Pod "downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d": Phase="Pending", Reason="", readiness=false. Elapsed: 5.595036ms
    Mar 13 19:05:18.307: INFO: Pod "downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010192959s
    Mar 13 19:05:20.307: INFO: Pod "downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010027884s
    STEP: Saw pod success 03/13/23 19:05:20.307
    Mar 13 19:05:20.308: INFO: Pod "downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d" satisfied condition "Succeeded or Failed"
    Mar 13 19:05:20.311: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d container client-container: <nil>
    STEP: delete the pod 03/13/23 19:05:20.32
    Mar 13 19:05:20.328: INFO: Waiting for pod downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d to disappear
    Mar 13 19:05:20.332: INFO: Pod downwardapi-volume-6f96831a-67ec-4d0a-827e-939f9800726d no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:05:20.332: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8155" for this suite. 03/13/23 19:05:20.336
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:05:20.343
Mar 13 19:05:20.343: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:05:20.344
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:20.354
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:20.357
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89
STEP: Creating configMap with name projected-configmap-test-volume-map-9404e041-a2e1-40ec-ad93-04d2ce7a17ad 03/13/23 19:05:20.36
STEP: Creating a pod to test consume configMaps 03/13/23 19:05:20.364
Mar 13 19:05:20.374: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8" in namespace "projected-9087" to be "Succeeded or Failed"
Mar 13 19:05:20.377: INFO: Pod "pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.860717ms
Mar 13 19:05:22.380: INFO: Pod "pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00629829s
Mar 13 19:05:24.381: INFO: Pod "pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006675234s
STEP: Saw pod success 03/13/23 19:05:24.381
Mar 13 19:05:24.381: INFO: Pod "pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8" satisfied condition "Succeeded or Failed"
Mar 13 19:05:24.384: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8 container agnhost-container: <nil>
STEP: delete the pod 03/13/23 19:05:24.391
Mar 13 19:05:24.399: INFO: Waiting for pod pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8 to disappear
Mar 13 19:05:24.402: INFO: Pod pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:05:24.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-9087" for this suite. 03/13/23 19:05:24.406
------------------------------
â€¢ [4.068 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:05:20.343
    Mar 13 19:05:20.343: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:05:20.344
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:20.354
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:20.357
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:89
    STEP: Creating configMap with name projected-configmap-test-volume-map-9404e041-a2e1-40ec-ad93-04d2ce7a17ad 03/13/23 19:05:20.36
    STEP: Creating a pod to test consume configMaps 03/13/23 19:05:20.364
    Mar 13 19:05:20.374: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8" in namespace "projected-9087" to be "Succeeded or Failed"
    Mar 13 19:05:20.377: INFO: Pod "pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.860717ms
    Mar 13 19:05:22.380: INFO: Pod "pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00629829s
    Mar 13 19:05:24.381: INFO: Pod "pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006675234s
    STEP: Saw pod success 03/13/23 19:05:24.381
    Mar 13 19:05:24.381: INFO: Pod "pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8" satisfied condition "Succeeded or Failed"
    Mar 13 19:05:24.384: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8 container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 19:05:24.391
    Mar 13 19:05:24.399: INFO: Waiting for pod pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8 to disappear
    Mar 13 19:05:24.402: INFO: Pod pod-projected-configmaps-cbfe41af-f943-41c8-9680-7d9b79deeac8 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:05:24.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-9087" for this suite. 03/13/23 19:05:24.406
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:05:24.414
Mar 13 19:05:24.414: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 19:05:24.415
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:24.426
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:24.429
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 19:05:24.443
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:05:25
STEP: Deploying the webhook pod 03/13/23 19:05:25.009
STEP: Wait for the deployment to be ready 03/13/23 19:05:25.026
Mar 13 19:05:25.033: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/13/23 19:05:27.045
STEP: Verifying the service has paired with the endpoint 03/13/23 19:05:27.055
Mar 13 19:05:28.055: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508
STEP: Creating a mutating webhook configuration 03/13/23 19:05:28.059
STEP: Updating a mutating webhook configuration's rules to not include the create operation 03/13/23 19:05:28.105
STEP: Creating a configMap that should not be mutated 03/13/23 19:05:28.112
STEP: Patching a mutating webhook configuration's rules to include the create operation 03/13/23 19:05:28.128
STEP: Creating a configMap that should be mutated 03/13/23 19:05:28.138
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:05:28.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-5595" for this suite. 03/13/23 19:05:28.194
STEP: Destroying namespace "webhook-5595-markers" for this suite. 03/13/23 19:05:28.205
------------------------------
â€¢ [3.801 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:05:24.414
    Mar 13 19:05:24.414: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 19:05:24.415
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:24.426
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:24.429
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 19:05:24.443
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:05:25
    STEP: Deploying the webhook pod 03/13/23 19:05:25.009
    STEP: Wait for the deployment to be ready 03/13/23 19:05:25.026
    Mar 13 19:05:25.033: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/13/23 19:05:27.045
    STEP: Verifying the service has paired with the endpoint 03/13/23 19:05:27.055
    Mar 13 19:05:28.055: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] patching/updating a mutating webhook should work [Conformance]
      test/e2e/apimachinery/webhook.go:508
    STEP: Creating a mutating webhook configuration 03/13/23 19:05:28.059
    STEP: Updating a mutating webhook configuration's rules to not include the create operation 03/13/23 19:05:28.105
    STEP: Creating a configMap that should not be mutated 03/13/23 19:05:28.112
    STEP: Patching a mutating webhook configuration's rules to include the create operation 03/13/23 19:05:28.128
    STEP: Creating a configMap that should be mutated 03/13/23 19:05:28.138
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:05:28.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-5595" for this suite. 03/13/23 19:05:28.194
    STEP: Destroying namespace "webhook-5595-markers" for this suite. 03/13/23 19:05:28.205
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:05:28.272
Mar 13 19:05:28.272: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename sysctl 03/13/23 19:05:28.275
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:28.287
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:28.296
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123
STEP: Creating a pod with one valid and two invalid sysctls 03/13/23 19:05:28.308
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:05:28.316: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "sysctl-8947" for this suite. 03/13/23 19:05:28.325
------------------------------
â€¢ [0.065 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
test/e2e/common/node/framework.go:23
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:37
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:05:28.272
    Mar 13 19:05:28.272: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename sysctl 03/13/23 19:05:28.275
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:28.287
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:28.296
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:67
    [It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
      test/e2e/common/node/sysctl.go:123
    STEP: Creating a pod with one valid and two invalid sysctls 03/13/23 19:05:28.308
    [AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:05:28.316: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sysctl-8947" for this suite. 03/13/23 19:05:28.325
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:05:28.337
Mar 13 19:05:28.337: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 19:05:28.338
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:28.348
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:28.351
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236
Mar 13 19:05:28.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 03/13/23 19:05:30.147
Mar 13 19:05:30.147: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9001 --namespace=crd-publish-openapi-9001 create -f -'
Mar 13 19:05:30.969: INFO: stderr: ""
Mar 13 19:05:30.969: INFO: stdout: "e2e-test-crd-publish-openapi-5372-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Mar 13 19:05:30.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9001 --namespace=crd-publish-openapi-9001 delete e2e-test-crd-publish-openapi-5372-crds test-cr'
Mar 13 19:05:31.065: INFO: stderr: ""
Mar 13 19:05:31.065: INFO: stdout: "e2e-test-crd-publish-openapi-5372-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Mar 13 19:05:31.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9001 --namespace=crd-publish-openapi-9001 apply -f -'
Mar 13 19:05:31.351: INFO: stderr: ""
Mar 13 19:05:31.351: INFO: stdout: "e2e-test-crd-publish-openapi-5372-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Mar 13 19:05:31.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9001 --namespace=crd-publish-openapi-9001 delete e2e-test-crd-publish-openapi-5372-crds test-cr'
Mar 13 19:05:31.442: INFO: stderr: ""
Mar 13 19:05:31.442: INFO: stdout: "e2e-test-crd-publish-openapi-5372-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR 03/13/23 19:05:31.442
Mar 13 19:05:31.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9001 explain e2e-test-crd-publish-openapi-5372-crds'
Mar 13 19:05:31.743: INFO: stderr: ""
Mar 13 19:05:31.743: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5372-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:05:33.412: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-9001" for this suite. 03/13/23 19:05:33.42
------------------------------
â€¢ [SLOW TEST] [5.087 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:05:28.337
    Mar 13 19:05:28.337: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 19:05:28.338
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:28.348
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:28.351
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD preserving unknown fields in an embedded object [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:236
    Mar 13 19:05:28.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 03/13/23 19:05:30.147
    Mar 13 19:05:30.147: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9001 --namespace=crd-publish-openapi-9001 create -f -'
    Mar 13 19:05:30.969: INFO: stderr: ""
    Mar 13 19:05:30.969: INFO: stdout: "e2e-test-crd-publish-openapi-5372-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
    Mar 13 19:05:30.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9001 --namespace=crd-publish-openapi-9001 delete e2e-test-crd-publish-openapi-5372-crds test-cr'
    Mar 13 19:05:31.065: INFO: stderr: ""
    Mar 13 19:05:31.065: INFO: stdout: "e2e-test-crd-publish-openapi-5372-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
    Mar 13 19:05:31.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9001 --namespace=crd-publish-openapi-9001 apply -f -'
    Mar 13 19:05:31.351: INFO: stderr: ""
    Mar 13 19:05:31.351: INFO: stdout: "e2e-test-crd-publish-openapi-5372-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
    Mar 13 19:05:31.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9001 --namespace=crd-publish-openapi-9001 delete e2e-test-crd-publish-openapi-5372-crds test-cr'
    Mar 13 19:05:31.442: INFO: stderr: ""
    Mar 13 19:05:31.442: INFO: stdout: "e2e-test-crd-publish-openapi-5372-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR 03/13/23 19:05:31.442
    Mar 13 19:05:31.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-9001 explain e2e-test-crd-publish-openapi-5372-crds'
    Mar 13 19:05:31.743: INFO: stderr: ""
    Mar 13 19:05:31.743: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5372-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:05:33.412: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-9001" for this suite. 03/13/23 19:05:33.42
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:05:33.428
Mar 13 19:05:33.428: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename gc 03/13/23 19:05:33.429
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:33.438
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:33.44
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370
STEP: create the rc 03/13/23 19:05:33.448
STEP: delete the rc 03/13/23 19:05:38.526
STEP: wait for the rc to be deleted 03/13/23 19:05:38.537
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods 03/13/23 19:05:43.546
STEP: Gathering metrics 03/13/23 19:06:13.564
W0313 19:06:13.572541      21 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Mar 13 19:06:13.572: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Mar 13 19:06:13.572: INFO: Deleting pod "simpletest.rc-26284" in namespace "gc-3533"
Mar 13 19:06:13.580: INFO: Deleting pod "simpletest.rc-2pq6h" in namespace "gc-3533"
Mar 13 19:06:13.596: INFO: Deleting pod "simpletest.rc-2t8dg" in namespace "gc-3533"
Mar 13 19:06:13.604: INFO: Deleting pod "simpletest.rc-2xlv4" in namespace "gc-3533"
Mar 13 19:06:13.616: INFO: Deleting pod "simpletest.rc-2zzgl" in namespace "gc-3533"
Mar 13 19:06:13.624: INFO: Deleting pod "simpletest.rc-45zfx" in namespace "gc-3533"
Mar 13 19:06:13.639: INFO: Deleting pod "simpletest.rc-4mq42" in namespace "gc-3533"
Mar 13 19:06:13.650: INFO: Deleting pod "simpletest.rc-4xqsp" in namespace "gc-3533"
Mar 13 19:06:13.672: INFO: Deleting pod "simpletest.rc-5bwtx" in namespace "gc-3533"
Mar 13 19:06:13.720: INFO: Deleting pod "simpletest.rc-5cdgg" in namespace "gc-3533"
Mar 13 19:06:13.746: INFO: Deleting pod "simpletest.rc-5f5cz" in namespace "gc-3533"
Mar 13 19:06:13.756: INFO: Deleting pod "simpletest.rc-5h9gq" in namespace "gc-3533"
Mar 13 19:06:13.846: INFO: Deleting pod "simpletest.rc-5hflg" in namespace "gc-3533"
Mar 13 19:06:13.868: INFO: Deleting pod "simpletest.rc-5sn6v" in namespace "gc-3533"
Mar 13 19:06:13.879: INFO: Deleting pod "simpletest.rc-6fxpb" in namespace "gc-3533"
Mar 13 19:06:13.904: INFO: Deleting pod "simpletest.rc-6k7c9" in namespace "gc-3533"
Mar 13 19:06:13.917: INFO: Deleting pod "simpletest.rc-799vf" in namespace "gc-3533"
Mar 13 19:06:13.930: INFO: Deleting pod "simpletest.rc-79mhn" in namespace "gc-3533"
Mar 13 19:06:13.941: INFO: Deleting pod "simpletest.rc-84fjj" in namespace "gc-3533"
Mar 13 19:06:13.999: INFO: Deleting pod "simpletest.rc-84j6n" in namespace "gc-3533"
Mar 13 19:06:14.062: INFO: Deleting pod "simpletest.rc-8kssf" in namespace "gc-3533"
Mar 13 19:06:14.129: INFO: Deleting pod "simpletest.rc-8qksb" in namespace "gc-3533"
Mar 13 19:06:14.212: INFO: Deleting pod "simpletest.rc-8qqsn" in namespace "gc-3533"
Mar 13 19:06:14.229: INFO: Deleting pod "simpletest.rc-92lkt" in namespace "gc-3533"
Mar 13 19:06:14.248: INFO: Deleting pod "simpletest.rc-9cfpt" in namespace "gc-3533"
Mar 13 19:06:14.261: INFO: Deleting pod "simpletest.rc-9q82f" in namespace "gc-3533"
Mar 13 19:06:14.272: INFO: Deleting pod "simpletest.rc-b59xg" in namespace "gc-3533"
Mar 13 19:06:14.288: INFO: Deleting pod "simpletest.rc-bk6fc" in namespace "gc-3533"
Mar 13 19:06:14.295: INFO: Deleting pod "simpletest.rc-c4hhm" in namespace "gc-3533"
Mar 13 19:06:14.313: INFO: Deleting pod "simpletest.rc-c6sbt" in namespace "gc-3533"
Mar 13 19:06:14.332: INFO: Deleting pod "simpletest.rc-c7zt9" in namespace "gc-3533"
Mar 13 19:06:14.342: INFO: Deleting pod "simpletest.rc-chn4g" in namespace "gc-3533"
Mar 13 19:06:14.351: INFO: Deleting pod "simpletest.rc-crb9h" in namespace "gc-3533"
Mar 13 19:06:14.362: INFO: Deleting pod "simpletest.rc-cxhqr" in namespace "gc-3533"
Mar 13 19:06:14.371: INFO: Deleting pod "simpletest.rc-cxqmq" in namespace "gc-3533"
Mar 13 19:06:14.380: INFO: Deleting pod "simpletest.rc-d2w8r" in namespace "gc-3533"
Mar 13 19:06:14.389: INFO: Deleting pod "simpletest.rc-dfpkb" in namespace "gc-3533"
Mar 13 19:06:14.399: INFO: Deleting pod "simpletest.rc-dfq5f" in namespace "gc-3533"
Mar 13 19:06:14.408: INFO: Deleting pod "simpletest.rc-dnpk7" in namespace "gc-3533"
Mar 13 19:06:14.420: INFO: Deleting pod "simpletest.rc-ds56g" in namespace "gc-3533"
Mar 13 19:06:14.432: INFO: Deleting pod "simpletest.rc-f426p" in namespace "gc-3533"
Mar 13 19:06:14.444: INFO: Deleting pod "simpletest.rc-fcnbz" in namespace "gc-3533"
Mar 13 19:06:14.452: INFO: Deleting pod "simpletest.rc-gcjqt" in namespace "gc-3533"
Mar 13 19:06:14.460: INFO: Deleting pod "simpletest.rc-gdsdt" in namespace "gc-3533"
Mar 13 19:06:14.470: INFO: Deleting pod "simpletest.rc-ggzvr" in namespace "gc-3533"
Mar 13 19:06:14.480: INFO: Deleting pod "simpletest.rc-h8c8m" in namespace "gc-3533"
Mar 13 19:06:14.491: INFO: Deleting pod "simpletest.rc-hd429" in namespace "gc-3533"
Mar 13 19:06:14.502: INFO: Deleting pod "simpletest.rc-hhqpp" in namespace "gc-3533"
Mar 13 19:06:14.510: INFO: Deleting pod "simpletest.rc-hwk47" in namespace "gc-3533"
Mar 13 19:06:14.518: INFO: Deleting pod "simpletest.rc-jxbfw" in namespace "gc-3533"
Mar 13 19:06:14.526: INFO: Deleting pod "simpletest.rc-k2rdh" in namespace "gc-3533"
Mar 13 19:06:14.532: INFO: Deleting pod "simpletest.rc-k7rkk" in namespace "gc-3533"
Mar 13 19:06:14.540: INFO: Deleting pod "simpletest.rc-kksfk" in namespace "gc-3533"
Mar 13 19:06:14.551: INFO: Deleting pod "simpletest.rc-ks82c" in namespace "gc-3533"
Mar 13 19:06:14.560: INFO: Deleting pod "simpletest.rc-ktbbd" in namespace "gc-3533"
Mar 13 19:06:14.584: INFO: Deleting pod "simpletest.rc-l5844" in namespace "gc-3533"
Mar 13 19:06:14.620: INFO: Deleting pod "simpletest.rc-l944h" in namespace "gc-3533"
Mar 13 19:06:14.651: INFO: Deleting pod "simpletest.rc-lgn6j" in namespace "gc-3533"
Mar 13 19:06:14.743: INFO: Deleting pod "simpletest.rc-ljllz" in namespace "gc-3533"
Mar 13 19:06:14.781: INFO: Deleting pod "simpletest.rc-llczj" in namespace "gc-3533"
Mar 13 19:06:14.801: INFO: Deleting pod "simpletest.rc-lztzh" in namespace "gc-3533"
Mar 13 19:06:14.811: INFO: Deleting pod "simpletest.rc-mg82j" in namespace "gc-3533"
Mar 13 19:06:14.825: INFO: Deleting pod "simpletest.rc-mkx2t" in namespace "gc-3533"
Mar 13 19:06:14.839: INFO: Deleting pod "simpletest.rc-mzr9w" in namespace "gc-3533"
Mar 13 19:06:14.846: INFO: Deleting pod "simpletest.rc-ngz6r" in namespace "gc-3533"
Mar 13 19:06:14.856: INFO: Deleting pod "simpletest.rc-nqcl2" in namespace "gc-3533"
Mar 13 19:06:14.865: INFO: Deleting pod "simpletest.rc-p7bhg" in namespace "gc-3533"
Mar 13 19:06:14.871: INFO: Deleting pod "simpletest.rc-pjxmt" in namespace "gc-3533"
Mar 13 19:06:14.892: INFO: Deleting pod "simpletest.rc-pxf6g" in namespace "gc-3533"
Mar 13 19:06:14.927: INFO: Deleting pod "simpletest.rc-q5wvw" in namespace "gc-3533"
Mar 13 19:06:14.936: INFO: Deleting pod "simpletest.rc-q9rzz" in namespace "gc-3533"
Mar 13 19:06:14.945: INFO: Deleting pod "simpletest.rc-qnr29" in namespace "gc-3533"
Mar 13 19:06:14.972: INFO: Deleting pod "simpletest.rc-qt8tv" in namespace "gc-3533"
Mar 13 19:06:14.987: INFO: Deleting pod "simpletest.rc-qwtms" in namespace "gc-3533"
Mar 13 19:06:15.006: INFO: Deleting pod "simpletest.rc-qwvj9" in namespace "gc-3533"
Mar 13 19:06:15.015: INFO: Deleting pod "simpletest.rc-r55nl" in namespace "gc-3533"
Mar 13 19:06:15.023: INFO: Deleting pod "simpletest.rc-r7brk" in namespace "gc-3533"
Mar 13 19:06:15.032: INFO: Deleting pod "simpletest.rc-rfcnp" in namespace "gc-3533"
Mar 13 19:06:15.057: INFO: Deleting pod "simpletest.rc-rhnks" in namespace "gc-3533"
Mar 13 19:06:15.113: INFO: Deleting pod "simpletest.rc-rj96b" in namespace "gc-3533"
Mar 13 19:06:15.196: INFO: Deleting pod "simpletest.rc-rv6t8" in namespace "gc-3533"
Mar 13 19:06:15.267: INFO: Deleting pod "simpletest.rc-sl9ls" in namespace "gc-3533"
Mar 13 19:06:15.275: INFO: Deleting pod "simpletest.rc-sr6pl" in namespace "gc-3533"
Mar 13 19:06:15.311: INFO: Deleting pod "simpletest.rc-tbvjx" in namespace "gc-3533"
Mar 13 19:06:15.402: INFO: Deleting pod "simpletest.rc-tpgw9" in namespace "gc-3533"
Mar 13 19:06:15.427: INFO: Deleting pod "simpletest.rc-v7vs9" in namespace "gc-3533"
Mar 13 19:06:15.472: INFO: Deleting pod "simpletest.rc-vcmdz" in namespace "gc-3533"
Mar 13 19:06:15.514: INFO: Deleting pod "simpletest.rc-vkktk" in namespace "gc-3533"
Mar 13 19:06:15.559: INFO: Deleting pod "simpletest.rc-vmwv7" in namespace "gc-3533"
Mar 13 19:06:15.611: INFO: Deleting pod "simpletest.rc-vpvdw" in namespace "gc-3533"
Mar 13 19:06:15.671: INFO: Deleting pod "simpletest.rc-w8wdv" in namespace "gc-3533"
Mar 13 19:06:15.708: INFO: Deleting pod "simpletest.rc-wc654" in namespace "gc-3533"
Mar 13 19:06:15.772: INFO: Deleting pod "simpletest.rc-x8sdt" in namespace "gc-3533"
Mar 13 19:06:15.813: INFO: Deleting pod "simpletest.rc-xb786" in namespace "gc-3533"
Mar 13 19:06:15.870: INFO: Deleting pod "simpletest.rc-xglz7" in namespace "gc-3533"
Mar 13 19:06:15.924: INFO: Deleting pod "simpletest.rc-xjt4q" in namespace "gc-3533"
Mar 13 19:06:15.964: INFO: Deleting pod "simpletest.rc-xqrrg" in namespace "gc-3533"
Mar 13 19:06:16.021: INFO: Deleting pod "simpletest.rc-xtgr6" in namespace "gc-3533"
Mar 13 19:06:16.061: INFO: Deleting pod "simpletest.rc-zc6zp" in namespace "gc-3533"
Mar 13 19:06:16.132: INFO: Deleting pod "simpletest.rc-zqt8g" in namespace "gc-3533"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar 13 19:06:16.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-3533" for this suite. 03/13/23 19:06:16.22
------------------------------
â€¢ [SLOW TEST] [42.853 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:05:33.428
    Mar 13 19:05:33.428: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename gc 03/13/23 19:05:33.429
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:05:33.438
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:05:33.44
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should orphan pods created by rc if delete options say so [Conformance]
      test/e2e/apimachinery/garbage_collector.go:370
    STEP: create the rc 03/13/23 19:05:33.448
    STEP: delete the rc 03/13/23 19:05:38.526
    STEP: wait for the rc to be deleted 03/13/23 19:05:38.537
    STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods 03/13/23 19:05:43.546
    STEP: Gathering metrics 03/13/23 19:06:13.564
    W0313 19:06:13.572541      21 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Mar 13 19:06:13.572: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    Mar 13 19:06:13.572: INFO: Deleting pod "simpletest.rc-26284" in namespace "gc-3533"
    Mar 13 19:06:13.580: INFO: Deleting pod "simpletest.rc-2pq6h" in namespace "gc-3533"
    Mar 13 19:06:13.596: INFO: Deleting pod "simpletest.rc-2t8dg" in namespace "gc-3533"
    Mar 13 19:06:13.604: INFO: Deleting pod "simpletest.rc-2xlv4" in namespace "gc-3533"
    Mar 13 19:06:13.616: INFO: Deleting pod "simpletest.rc-2zzgl" in namespace "gc-3533"
    Mar 13 19:06:13.624: INFO: Deleting pod "simpletest.rc-45zfx" in namespace "gc-3533"
    Mar 13 19:06:13.639: INFO: Deleting pod "simpletest.rc-4mq42" in namespace "gc-3533"
    Mar 13 19:06:13.650: INFO: Deleting pod "simpletest.rc-4xqsp" in namespace "gc-3533"
    Mar 13 19:06:13.672: INFO: Deleting pod "simpletest.rc-5bwtx" in namespace "gc-3533"
    Mar 13 19:06:13.720: INFO: Deleting pod "simpletest.rc-5cdgg" in namespace "gc-3533"
    Mar 13 19:06:13.746: INFO: Deleting pod "simpletest.rc-5f5cz" in namespace "gc-3533"
    Mar 13 19:06:13.756: INFO: Deleting pod "simpletest.rc-5h9gq" in namespace "gc-3533"
    Mar 13 19:06:13.846: INFO: Deleting pod "simpletest.rc-5hflg" in namespace "gc-3533"
    Mar 13 19:06:13.868: INFO: Deleting pod "simpletest.rc-5sn6v" in namespace "gc-3533"
    Mar 13 19:06:13.879: INFO: Deleting pod "simpletest.rc-6fxpb" in namespace "gc-3533"
    Mar 13 19:06:13.904: INFO: Deleting pod "simpletest.rc-6k7c9" in namespace "gc-3533"
    Mar 13 19:06:13.917: INFO: Deleting pod "simpletest.rc-799vf" in namespace "gc-3533"
    Mar 13 19:06:13.930: INFO: Deleting pod "simpletest.rc-79mhn" in namespace "gc-3533"
    Mar 13 19:06:13.941: INFO: Deleting pod "simpletest.rc-84fjj" in namespace "gc-3533"
    Mar 13 19:06:13.999: INFO: Deleting pod "simpletest.rc-84j6n" in namespace "gc-3533"
    Mar 13 19:06:14.062: INFO: Deleting pod "simpletest.rc-8kssf" in namespace "gc-3533"
    Mar 13 19:06:14.129: INFO: Deleting pod "simpletest.rc-8qksb" in namespace "gc-3533"
    Mar 13 19:06:14.212: INFO: Deleting pod "simpletest.rc-8qqsn" in namespace "gc-3533"
    Mar 13 19:06:14.229: INFO: Deleting pod "simpletest.rc-92lkt" in namespace "gc-3533"
    Mar 13 19:06:14.248: INFO: Deleting pod "simpletest.rc-9cfpt" in namespace "gc-3533"
    Mar 13 19:06:14.261: INFO: Deleting pod "simpletest.rc-9q82f" in namespace "gc-3533"
    Mar 13 19:06:14.272: INFO: Deleting pod "simpletest.rc-b59xg" in namespace "gc-3533"
    Mar 13 19:06:14.288: INFO: Deleting pod "simpletest.rc-bk6fc" in namespace "gc-3533"
    Mar 13 19:06:14.295: INFO: Deleting pod "simpletest.rc-c4hhm" in namespace "gc-3533"
    Mar 13 19:06:14.313: INFO: Deleting pod "simpletest.rc-c6sbt" in namespace "gc-3533"
    Mar 13 19:06:14.332: INFO: Deleting pod "simpletest.rc-c7zt9" in namespace "gc-3533"
    Mar 13 19:06:14.342: INFO: Deleting pod "simpletest.rc-chn4g" in namespace "gc-3533"
    Mar 13 19:06:14.351: INFO: Deleting pod "simpletest.rc-crb9h" in namespace "gc-3533"
    Mar 13 19:06:14.362: INFO: Deleting pod "simpletest.rc-cxhqr" in namespace "gc-3533"
    Mar 13 19:06:14.371: INFO: Deleting pod "simpletest.rc-cxqmq" in namespace "gc-3533"
    Mar 13 19:06:14.380: INFO: Deleting pod "simpletest.rc-d2w8r" in namespace "gc-3533"
    Mar 13 19:06:14.389: INFO: Deleting pod "simpletest.rc-dfpkb" in namespace "gc-3533"
    Mar 13 19:06:14.399: INFO: Deleting pod "simpletest.rc-dfq5f" in namespace "gc-3533"
    Mar 13 19:06:14.408: INFO: Deleting pod "simpletest.rc-dnpk7" in namespace "gc-3533"
    Mar 13 19:06:14.420: INFO: Deleting pod "simpletest.rc-ds56g" in namespace "gc-3533"
    Mar 13 19:06:14.432: INFO: Deleting pod "simpletest.rc-f426p" in namespace "gc-3533"
    Mar 13 19:06:14.444: INFO: Deleting pod "simpletest.rc-fcnbz" in namespace "gc-3533"
    Mar 13 19:06:14.452: INFO: Deleting pod "simpletest.rc-gcjqt" in namespace "gc-3533"
    Mar 13 19:06:14.460: INFO: Deleting pod "simpletest.rc-gdsdt" in namespace "gc-3533"
    Mar 13 19:06:14.470: INFO: Deleting pod "simpletest.rc-ggzvr" in namespace "gc-3533"
    Mar 13 19:06:14.480: INFO: Deleting pod "simpletest.rc-h8c8m" in namespace "gc-3533"
    Mar 13 19:06:14.491: INFO: Deleting pod "simpletest.rc-hd429" in namespace "gc-3533"
    Mar 13 19:06:14.502: INFO: Deleting pod "simpletest.rc-hhqpp" in namespace "gc-3533"
    Mar 13 19:06:14.510: INFO: Deleting pod "simpletest.rc-hwk47" in namespace "gc-3533"
    Mar 13 19:06:14.518: INFO: Deleting pod "simpletest.rc-jxbfw" in namespace "gc-3533"
    Mar 13 19:06:14.526: INFO: Deleting pod "simpletest.rc-k2rdh" in namespace "gc-3533"
    Mar 13 19:06:14.532: INFO: Deleting pod "simpletest.rc-k7rkk" in namespace "gc-3533"
    Mar 13 19:06:14.540: INFO: Deleting pod "simpletest.rc-kksfk" in namespace "gc-3533"
    Mar 13 19:06:14.551: INFO: Deleting pod "simpletest.rc-ks82c" in namespace "gc-3533"
    Mar 13 19:06:14.560: INFO: Deleting pod "simpletest.rc-ktbbd" in namespace "gc-3533"
    Mar 13 19:06:14.584: INFO: Deleting pod "simpletest.rc-l5844" in namespace "gc-3533"
    Mar 13 19:06:14.620: INFO: Deleting pod "simpletest.rc-l944h" in namespace "gc-3533"
    Mar 13 19:06:14.651: INFO: Deleting pod "simpletest.rc-lgn6j" in namespace "gc-3533"
    Mar 13 19:06:14.743: INFO: Deleting pod "simpletest.rc-ljllz" in namespace "gc-3533"
    Mar 13 19:06:14.781: INFO: Deleting pod "simpletest.rc-llczj" in namespace "gc-3533"
    Mar 13 19:06:14.801: INFO: Deleting pod "simpletest.rc-lztzh" in namespace "gc-3533"
    Mar 13 19:06:14.811: INFO: Deleting pod "simpletest.rc-mg82j" in namespace "gc-3533"
    Mar 13 19:06:14.825: INFO: Deleting pod "simpletest.rc-mkx2t" in namespace "gc-3533"
    Mar 13 19:06:14.839: INFO: Deleting pod "simpletest.rc-mzr9w" in namespace "gc-3533"
    Mar 13 19:06:14.846: INFO: Deleting pod "simpletest.rc-ngz6r" in namespace "gc-3533"
    Mar 13 19:06:14.856: INFO: Deleting pod "simpletest.rc-nqcl2" in namespace "gc-3533"
    Mar 13 19:06:14.865: INFO: Deleting pod "simpletest.rc-p7bhg" in namespace "gc-3533"
    Mar 13 19:06:14.871: INFO: Deleting pod "simpletest.rc-pjxmt" in namespace "gc-3533"
    Mar 13 19:06:14.892: INFO: Deleting pod "simpletest.rc-pxf6g" in namespace "gc-3533"
    Mar 13 19:06:14.927: INFO: Deleting pod "simpletest.rc-q5wvw" in namespace "gc-3533"
    Mar 13 19:06:14.936: INFO: Deleting pod "simpletest.rc-q9rzz" in namespace "gc-3533"
    Mar 13 19:06:14.945: INFO: Deleting pod "simpletest.rc-qnr29" in namespace "gc-3533"
    Mar 13 19:06:14.972: INFO: Deleting pod "simpletest.rc-qt8tv" in namespace "gc-3533"
    Mar 13 19:06:14.987: INFO: Deleting pod "simpletest.rc-qwtms" in namespace "gc-3533"
    Mar 13 19:06:15.006: INFO: Deleting pod "simpletest.rc-qwvj9" in namespace "gc-3533"
    Mar 13 19:06:15.015: INFO: Deleting pod "simpletest.rc-r55nl" in namespace "gc-3533"
    Mar 13 19:06:15.023: INFO: Deleting pod "simpletest.rc-r7brk" in namespace "gc-3533"
    Mar 13 19:06:15.032: INFO: Deleting pod "simpletest.rc-rfcnp" in namespace "gc-3533"
    Mar 13 19:06:15.057: INFO: Deleting pod "simpletest.rc-rhnks" in namespace "gc-3533"
    Mar 13 19:06:15.113: INFO: Deleting pod "simpletest.rc-rj96b" in namespace "gc-3533"
    Mar 13 19:06:15.196: INFO: Deleting pod "simpletest.rc-rv6t8" in namespace "gc-3533"
    Mar 13 19:06:15.267: INFO: Deleting pod "simpletest.rc-sl9ls" in namespace "gc-3533"
    Mar 13 19:06:15.275: INFO: Deleting pod "simpletest.rc-sr6pl" in namespace "gc-3533"
    Mar 13 19:06:15.311: INFO: Deleting pod "simpletest.rc-tbvjx" in namespace "gc-3533"
    Mar 13 19:06:15.402: INFO: Deleting pod "simpletest.rc-tpgw9" in namespace "gc-3533"
    Mar 13 19:06:15.427: INFO: Deleting pod "simpletest.rc-v7vs9" in namespace "gc-3533"
    Mar 13 19:06:15.472: INFO: Deleting pod "simpletest.rc-vcmdz" in namespace "gc-3533"
    Mar 13 19:06:15.514: INFO: Deleting pod "simpletest.rc-vkktk" in namespace "gc-3533"
    Mar 13 19:06:15.559: INFO: Deleting pod "simpletest.rc-vmwv7" in namespace "gc-3533"
    Mar 13 19:06:15.611: INFO: Deleting pod "simpletest.rc-vpvdw" in namespace "gc-3533"
    Mar 13 19:06:15.671: INFO: Deleting pod "simpletest.rc-w8wdv" in namespace "gc-3533"
    Mar 13 19:06:15.708: INFO: Deleting pod "simpletest.rc-wc654" in namespace "gc-3533"
    Mar 13 19:06:15.772: INFO: Deleting pod "simpletest.rc-x8sdt" in namespace "gc-3533"
    Mar 13 19:06:15.813: INFO: Deleting pod "simpletest.rc-xb786" in namespace "gc-3533"
    Mar 13 19:06:15.870: INFO: Deleting pod "simpletest.rc-xglz7" in namespace "gc-3533"
    Mar 13 19:06:15.924: INFO: Deleting pod "simpletest.rc-xjt4q" in namespace "gc-3533"
    Mar 13 19:06:15.964: INFO: Deleting pod "simpletest.rc-xqrrg" in namespace "gc-3533"
    Mar 13 19:06:16.021: INFO: Deleting pod "simpletest.rc-xtgr6" in namespace "gc-3533"
    Mar 13 19:06:16.061: INFO: Deleting pod "simpletest.rc-zc6zp" in namespace "gc-3533"
    Mar 13 19:06:16.132: INFO: Deleting pod "simpletest.rc-zqt8g" in namespace "gc-3533"
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:06:16.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-3533" for this suite. 03/13/23 19:06:16.22
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:06:16.322
Mar 13 19:06:16.322: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:06:16.409
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:16.446
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:16.451
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46
STEP: Creating projection with secret that has name projected-secret-test-315256f5-e7fe-457a-82ff-41282bcaba35 03/13/23 19:06:16.468
STEP: Creating a pod to test consume secrets 03/13/23 19:06:16.472
Mar 13 19:06:16.488: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25" in namespace "projected-1203" to be "Succeeded or Failed"
Mar 13 19:06:16.495: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Pending", Reason="", readiness=false. Elapsed: 6.884447ms
Mar 13 19:06:18.502: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013822814s
Mar 13 19:06:20.518: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Pending", Reason="", readiness=false. Elapsed: 4.029264987s
Mar 13 19:06:22.500: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Pending", Reason="", readiness=false. Elapsed: 6.011354079s
Mar 13 19:06:24.504: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Running", Reason="", readiness=true. Elapsed: 8.015630295s
Mar 13 19:06:26.500: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Running", Reason="", readiness=false. Elapsed: 10.011092928s
Mar 13 19:06:28.498: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Succeeded", Reason="", readiness=false. Elapsed: 12.009584555s
STEP: Saw pod success 03/13/23 19:06:28.498
Mar 13 19:06:28.499: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25" satisfied condition "Succeeded or Failed"
Mar 13 19:06:28.501: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25 container projected-secret-volume-test: <nil>
STEP: delete the pod 03/13/23 19:06:28.509
Mar 13 19:06:28.514: INFO: Waiting for pod pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25 to disappear
Mar 13 19:06:28.525: INFO: Pod pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar 13 19:06:28.525: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1203" for this suite. 03/13/23 19:06:28.528
------------------------------
â€¢ [SLOW TEST] [12.209 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:06:16.322
    Mar 13 19:06:16.322: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:06:16.409
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:16.446
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:16.451
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:46
    STEP: Creating projection with secret that has name projected-secret-test-315256f5-e7fe-457a-82ff-41282bcaba35 03/13/23 19:06:16.468
    STEP: Creating a pod to test consume secrets 03/13/23 19:06:16.472
    Mar 13 19:06:16.488: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25" in namespace "projected-1203" to be "Succeeded or Failed"
    Mar 13 19:06:16.495: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Pending", Reason="", readiness=false. Elapsed: 6.884447ms
    Mar 13 19:06:18.502: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013822814s
    Mar 13 19:06:20.518: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Pending", Reason="", readiness=false. Elapsed: 4.029264987s
    Mar 13 19:06:22.500: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Pending", Reason="", readiness=false. Elapsed: 6.011354079s
    Mar 13 19:06:24.504: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Running", Reason="", readiness=true. Elapsed: 8.015630295s
    Mar 13 19:06:26.500: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Running", Reason="", readiness=false. Elapsed: 10.011092928s
    Mar 13 19:06:28.498: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25": Phase="Succeeded", Reason="", readiness=false. Elapsed: 12.009584555s
    STEP: Saw pod success 03/13/23 19:06:28.498
    Mar 13 19:06:28.499: INFO: Pod "pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25" satisfied condition "Succeeded or Failed"
    Mar 13 19:06:28.501: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25 container projected-secret-volume-test: <nil>
    STEP: delete the pod 03/13/23 19:06:28.509
    Mar 13 19:06:28.514: INFO: Waiting for pod pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25 to disappear
    Mar 13 19:06:28.525: INFO: Pod pod-projected-secrets-3d65473a-4feb-47d9-bb89-6335b085fb25 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:06:28.525: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1203" for this suite. 03/13/23 19:06:28.528
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Secrets
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:06:28.534
Mar 13 19:06:28.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename secrets 03/13/23 19:06:28.536
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:28.547
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:28.55
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46
STEP: Creating secret with name secret-test-101ee998-882f-4395-9ba7-0cc69f4a0b48 03/13/23 19:06:28.555
STEP: Creating a pod to test consume secrets 03/13/23 19:06:28.559
Mar 13 19:06:28.565: INFO: Waiting up to 5m0s for pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393" in namespace "secrets-3336" to be "Succeeded or Failed"
Mar 13 19:06:28.567: INFO: Pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393": Phase="Pending", Reason="", readiness=false. Elapsed: 1.906578ms
Mar 13 19:06:30.571: INFO: Pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00561949s
Mar 13 19:06:32.571: INFO: Pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393": Phase="Pending", Reason="", readiness=false. Elapsed: 4.005468243s
Mar 13 19:06:34.572: INFO: Pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393": Phase="Pending", Reason="", readiness=false. Elapsed: 6.006164146s
Mar 13 19:06:36.573: INFO: Pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.007172247s
STEP: Saw pod success 03/13/23 19:06:36.573
Mar 13 19:06:36.573: INFO: Pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393" satisfied condition "Succeeded or Failed"
Mar 13 19:06:36.575: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393 container secret-env-test: <nil>
STEP: delete the pod 03/13/23 19:06:36.583
Mar 13 19:06:36.590: INFO: Waiting for pod pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393 to disappear
Mar 13 19:06:36.592: INFO: Pod pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Mar 13 19:06:36.592: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-3336" for this suite. 03/13/23 19:06:36.595
------------------------------
â€¢ [SLOW TEST] [8.064 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:06:28.534
    Mar 13 19:06:28.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename secrets 03/13/23 19:06:28.536
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:28.547
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:28.55
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in env vars [NodeConformance] [Conformance]
      test/e2e/common/node/secrets.go:46
    STEP: Creating secret with name secret-test-101ee998-882f-4395-9ba7-0cc69f4a0b48 03/13/23 19:06:28.555
    STEP: Creating a pod to test consume secrets 03/13/23 19:06:28.559
    Mar 13 19:06:28.565: INFO: Waiting up to 5m0s for pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393" in namespace "secrets-3336" to be "Succeeded or Failed"
    Mar 13 19:06:28.567: INFO: Pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393": Phase="Pending", Reason="", readiness=false. Elapsed: 1.906578ms
    Mar 13 19:06:30.571: INFO: Pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00561949s
    Mar 13 19:06:32.571: INFO: Pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393": Phase="Pending", Reason="", readiness=false. Elapsed: 4.005468243s
    Mar 13 19:06:34.572: INFO: Pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393": Phase="Pending", Reason="", readiness=false. Elapsed: 6.006164146s
    Mar 13 19:06:36.573: INFO: Pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.007172247s
    STEP: Saw pod success 03/13/23 19:06:36.573
    Mar 13 19:06:36.573: INFO: Pod "pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393" satisfied condition "Succeeded or Failed"
    Mar 13 19:06:36.575: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393 container secret-env-test: <nil>
    STEP: delete the pod 03/13/23 19:06:36.583
    Mar 13 19:06:36.590: INFO: Waiting for pod pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393 to disappear
    Mar 13 19:06:36.592: INFO: Pod pod-secrets-55fcccf1-ca38-47a3-bcec-a728702de393 no longer exists
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:06:36.592: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-3336" for this suite. 03/13/23 19:06:36.595
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease
  lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72
[BeforeEach] [sig-node] Lease
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:06:36.607
Mar 13 19:06:36.607: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename lease-test 03/13/23 19:06:36.609
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:36.621
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:36.628
[BeforeEach] [sig-node] Lease
  test/e2e/framework/metrics/init/init.go:31
[It] lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72
[AfterEach] [sig-node] Lease
  test/e2e/framework/node/init/init.go:32
Mar 13 19:06:36.670: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Lease
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Lease
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Lease
  tear down framework | framework.go:193
STEP: Destroying namespace "lease-test-9213" for this suite. 03/13/23 19:06:36.673
------------------------------
â€¢ [0.069 seconds]
[sig-node] Lease
test/e2e/common/node/framework.go:23
  lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Lease
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:06:36.607
    Mar 13 19:06:36.607: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename lease-test 03/13/23 19:06:36.609
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:36.621
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:36.628
    [BeforeEach] [sig-node] Lease
      test/e2e/framework/metrics/init/init.go:31
    [It] lease API should be available [Conformance]
      test/e2e/common/node/lease.go:72
    [AfterEach] [sig-node] Lease
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:06:36.670: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Lease
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Lease
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Lease
      tear down framework | framework.go:193
    STEP: Destroying namespace "lease-test-9213" for this suite. 03/13/23 19:06:36.673
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates
  should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:06:36.681
Mar 13 19:06:36.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename podtemplate 03/13/23 19:06:36.682
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:36.689
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:36.692
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122
STEP: Create set of pod templates 03/13/23 19:06:36.695
Mar 13 19:06:36.698: INFO: created test-podtemplate-1
Mar 13 19:06:36.702: INFO: created test-podtemplate-2
Mar 13 19:06:36.706: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace 03/13/23 19:06:36.706
STEP: delete collection of pod templates 03/13/23 19:06:36.71
Mar 13 19:06:36.710: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity 03/13/23 19:06:36.718
Mar 13 19:06:36.718: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Mar 13 19:06:36.720: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-1768" for this suite. 03/13/23 19:06:36.724
------------------------------
â€¢ [0.046 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:06:36.681
    Mar 13 19:06:36.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename podtemplate 03/13/23 19:06:36.682
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:36.689
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:36.692
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a collection of pod templates [Conformance]
      test/e2e/common/node/podtemplates.go:122
    STEP: Create set of pod templates 03/13/23 19:06:36.695
    Mar 13 19:06:36.698: INFO: created test-podtemplate-1
    Mar 13 19:06:36.702: INFO: created test-podtemplate-2
    Mar 13 19:06:36.706: INFO: created test-podtemplate-3
    STEP: get a list of pod templates with a label in the current namespace 03/13/23 19:06:36.706
    STEP: delete collection of pod templates 03/13/23 19:06:36.71
    Mar 13 19:06:36.710: INFO: requesting DeleteCollection of pod templates
    STEP: check that the list of pod templates matches the requested quantity 03/13/23 19:06:36.718
    Mar 13 19:06:36.718: INFO: requesting list of pod templates to confirm quantity
    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:06:36.720: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-1768" for this suite. 03/13/23 19:06:36.724
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:06:36.737
Mar 13 19:06:36.737: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename replicaset 03/13/23 19:06:36.739
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:36.749
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:36.752
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176
STEP: Create a Replicaset 03/13/23 19:06:36.758
STEP: Verify that the required pods have come up. 03/13/23 19:06:36.761
Mar 13 19:06:36.763: INFO: Pod name sample-pod: Found 0 pods out of 1
Mar 13 19:06:41.768: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 03/13/23 19:06:41.768
STEP: Getting /status 03/13/23 19:06:41.769
Mar 13 19:06:41.771: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status 03/13/23 19:06:41.772
Mar 13 19:06:41.777: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated 03/13/23 19:06:41.777
Mar 13 19:06:41.780: INFO: Observed &ReplicaSet event: ADDED
Mar 13 19:06:41.780: INFO: Observed &ReplicaSet event: MODIFIED
Mar 13 19:06:41.780: INFO: Observed &ReplicaSet event: MODIFIED
Mar 13 19:06:41.780: INFO: Observed &ReplicaSet event: MODIFIED
Mar 13 19:06:41.781: INFO: Found replicaset test-rs in namespace replicaset-2794 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Mar 13 19:06:41.781: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status 03/13/23 19:06:41.781
Mar 13 19:06:41.781: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Mar 13 19:06:41.786: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched 03/13/23 19:06:41.786
Mar 13 19:06:41.789: INFO: Observed &ReplicaSet event: ADDED
Mar 13 19:06:41.789: INFO: Observed &ReplicaSet event: MODIFIED
Mar 13 19:06:41.790: INFO: Observed &ReplicaSet event: MODIFIED
Mar 13 19:06:41.790: INFO: Observed &ReplicaSet event: MODIFIED
Mar 13 19:06:41.790: INFO: Observed replicaset test-rs in namespace replicaset-2794 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Mar 13 19:06:41.790: INFO: Observed &ReplicaSet event: MODIFIED
Mar 13 19:06:41.790: INFO: Found replicaset test-rs in namespace replicaset-2794 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Mar 13 19:06:41.790: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:06:41.790: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-2794" for this suite. 03/13/23 19:06:41.794
------------------------------
â€¢ [SLOW TEST] [5.061 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:06:36.737
    Mar 13 19:06:36.737: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename replicaset 03/13/23 19:06:36.739
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:36.749
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:36.752
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should validate Replicaset Status endpoints [Conformance]
      test/e2e/apps/replica_set.go:176
    STEP: Create a Replicaset 03/13/23 19:06:36.758
    STEP: Verify that the required pods have come up. 03/13/23 19:06:36.761
    Mar 13 19:06:36.763: INFO: Pod name sample-pod: Found 0 pods out of 1
    Mar 13 19:06:41.768: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 03/13/23 19:06:41.768
    STEP: Getting /status 03/13/23 19:06:41.769
    Mar 13 19:06:41.771: INFO: Replicaset test-rs has Conditions: []
    STEP: updating the Replicaset Status 03/13/23 19:06:41.772
    Mar 13 19:06:41.777: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the ReplicaSet status to be updated 03/13/23 19:06:41.777
    Mar 13 19:06:41.780: INFO: Observed &ReplicaSet event: ADDED
    Mar 13 19:06:41.780: INFO: Observed &ReplicaSet event: MODIFIED
    Mar 13 19:06:41.780: INFO: Observed &ReplicaSet event: MODIFIED
    Mar 13 19:06:41.780: INFO: Observed &ReplicaSet event: MODIFIED
    Mar 13 19:06:41.781: INFO: Found replicaset test-rs in namespace replicaset-2794 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Mar 13 19:06:41.781: INFO: Replicaset test-rs has an updated status
    STEP: patching the Replicaset Status 03/13/23 19:06:41.781
    Mar 13 19:06:41.781: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Mar 13 19:06:41.786: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Replicaset status to be patched 03/13/23 19:06:41.786
    Mar 13 19:06:41.789: INFO: Observed &ReplicaSet event: ADDED
    Mar 13 19:06:41.789: INFO: Observed &ReplicaSet event: MODIFIED
    Mar 13 19:06:41.790: INFO: Observed &ReplicaSet event: MODIFIED
    Mar 13 19:06:41.790: INFO: Observed &ReplicaSet event: MODIFIED
    Mar 13 19:06:41.790: INFO: Observed replicaset test-rs in namespace replicaset-2794 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Mar 13 19:06:41.790: INFO: Observed &ReplicaSet event: MODIFIED
    Mar 13 19:06:41.790: INFO: Found replicaset test-rs in namespace replicaset-2794 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
    Mar 13 19:06:41.790: INFO: Replicaset test-rs has a patched status
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:06:41.790: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-2794" for this suite. 03/13/23 19:06:41.794
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:06:41.802
Mar 13 19:06:41.802: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 19:06:41.803
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:41.823
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:41.826
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167
STEP: Creating a pod to test emptydir 0644 on node default medium 03/13/23 19:06:41.829
Mar 13 19:06:41.834: INFO: Waiting up to 5m0s for pod "pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8" in namespace "emptydir-5262" to be "Succeeded or Failed"
Mar 13 19:06:41.837: INFO: Pod "pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.606326ms
Mar 13 19:06:43.841: INFO: Pod "pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007008288s
Mar 13 19:06:45.841: INFO: Pod "pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006425035s
STEP: Saw pod success 03/13/23 19:06:45.841
Mar 13 19:06:45.841: INFO: Pod "pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8" satisfied condition "Succeeded or Failed"
Mar 13 19:06:45.843: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8 container test-container: <nil>
STEP: delete the pod 03/13/23 19:06:45.851
Mar 13 19:06:45.859: INFO: Waiting for pod pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8 to disappear
Mar 13 19:06:45.861: INFO: Pod pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 19:06:45.861: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-5262" for this suite. 03/13/23 19:06:45.864
------------------------------
â€¢ [4.066 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:06:41.802
    Mar 13 19:06:41.802: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 19:06:41.803
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:41.823
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:41.826
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:167
    STEP: Creating a pod to test emptydir 0644 on node default medium 03/13/23 19:06:41.829
    Mar 13 19:06:41.834: INFO: Waiting up to 5m0s for pod "pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8" in namespace "emptydir-5262" to be "Succeeded or Failed"
    Mar 13 19:06:41.837: INFO: Pod "pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.606326ms
    Mar 13 19:06:43.841: INFO: Pod "pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007008288s
    Mar 13 19:06:45.841: INFO: Pod "pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006425035s
    STEP: Saw pod success 03/13/23 19:06:45.841
    Mar 13 19:06:45.841: INFO: Pod "pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8" satisfied condition "Succeeded or Failed"
    Mar 13 19:06:45.843: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8 container test-container: <nil>
    STEP: delete the pod 03/13/23 19:06:45.851
    Mar 13 19:06:45.859: INFO: Waiting for pod pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8 to disappear
    Mar 13 19:06:45.861: INFO: Pod pod-db8ad466-3d16-4b8a-b3ca-d961323b93a8 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:06:45.861: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-5262" for this suite. 03/13/23 19:06:45.864
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:06:45.87
Mar 13 19:06:45.870: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename resourcequota 03/13/23 19:06:45.871
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:45.884
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:45.888
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326
STEP: Counting existing ResourceQuota 03/13/23 19:07:02.9
STEP: Creating a ResourceQuota 03/13/23 19:07:07.905
STEP: Ensuring resource quota status is calculated 03/13/23 19:07:07.912
STEP: Creating a ConfigMap 03/13/23 19:07:09.92
STEP: Ensuring resource quota status captures configMap creation 03/13/23 19:07:09.941
STEP: Deleting a ConfigMap 03/13/23 19:07:11.946
STEP: Ensuring resource quota status released usage 03/13/23 19:07:11.955
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar 13 19:07:13.960: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-5679" for this suite. 03/13/23 19:07:13.97
------------------------------
â€¢ [SLOW TEST] [28.111 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:06:45.87
    Mar 13 19:06:45.870: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename resourcequota 03/13/23 19:06:45.871
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:06:45.884
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:06:45.888
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
      test/e2e/apimachinery/resource_quota.go:326
    STEP: Counting existing ResourceQuota 03/13/23 19:07:02.9
    STEP: Creating a ResourceQuota 03/13/23 19:07:07.905
    STEP: Ensuring resource quota status is calculated 03/13/23 19:07:07.912
    STEP: Creating a ConfigMap 03/13/23 19:07:09.92
    STEP: Ensuring resource quota status captures configMap creation 03/13/23 19:07:09.941
    STEP: Deleting a ConfigMap 03/13/23 19:07:11.946
    STEP: Ensuring resource quota status released usage 03/13/23 19:07:11.955
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:07:13.960: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-5679" for this suite. 03/13/23 19:07:13.97
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-network] Services
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:07:13.984
Mar 13 19:07:13.985: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 19:07:13.986
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:07:14.004
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:07:14.009
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557
STEP: creating a service nodeport-service with the type=NodePort in namespace services-6712 03/13/23 19:07:14.054
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 03/13/23 19:07:14.081
STEP: creating service externalsvc in namespace services-6712 03/13/23 19:07:14.082
STEP: creating replication controller externalsvc in namespace services-6712 03/13/23 19:07:14.098
I0313 19:07:14.106879      21 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6712, replica count: 2
I0313 19:07:17.157558      21 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName 03/13/23 19:07:17.161
Mar 13 19:07:17.175: INFO: Creating new exec pod
Mar 13 19:07:17.180: INFO: Waiting up to 5m0s for pod "execpoddwv7b" in namespace "services-6712" to be "running"
Mar 13 19:07:17.183: INFO: Pod "execpoddwv7b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.959173ms
Mar 13 19:07:19.187: INFO: Pod "execpoddwv7b": Phase="Running", Reason="", readiness=true. Elapsed: 2.006929379s
Mar 13 19:07:19.187: INFO: Pod "execpoddwv7b" satisfied condition "running"
Mar 13 19:07:19.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-6712 exec execpoddwv7b -- /bin/sh -x -c nslookup nodeport-service.services-6712.svc.cluster.local'
Mar 13 19:07:19.370: INFO: stderr: "+ nslookup nodeport-service.services-6712.svc.cluster.local\n"
Mar 13 19:07:19.370: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-6712.svc.cluster.local\tcanonical name = externalsvc.services-6712.svc.cluster.local.\nName:\texternalsvc.services-6712.svc.cluster.local\nAddress: 10.100.106.60\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-6712, will wait for the garbage collector to delete the pods 03/13/23 19:07:19.37
Mar 13 19:07:19.429: INFO: Deleting ReplicationController externalsvc took: 4.344637ms
Mar 13 19:07:19.529: INFO: Terminating ReplicationController externalsvc pods took: 100.59536ms
Mar 13 19:07:21.642: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 19:07:21.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6712" for this suite. 03/13/23 19:07:21.653
------------------------------
â€¢ [SLOW TEST] [7.673 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:07:13.984
    Mar 13 19:07:13.985: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 19:07:13.986
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:07:14.004
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:07:14.009
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from NodePort to ExternalName [Conformance]
      test/e2e/network/service.go:1557
    STEP: creating a service nodeport-service with the type=NodePort in namespace services-6712 03/13/23 19:07:14.054
    STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 03/13/23 19:07:14.081
    STEP: creating service externalsvc in namespace services-6712 03/13/23 19:07:14.082
    STEP: creating replication controller externalsvc in namespace services-6712 03/13/23 19:07:14.098
    I0313 19:07:14.106879      21 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6712, replica count: 2
    I0313 19:07:17.157558      21 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    STEP: changing the NodePort service to type=ExternalName 03/13/23 19:07:17.161
    Mar 13 19:07:17.175: INFO: Creating new exec pod
    Mar 13 19:07:17.180: INFO: Waiting up to 5m0s for pod "execpoddwv7b" in namespace "services-6712" to be "running"
    Mar 13 19:07:17.183: INFO: Pod "execpoddwv7b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.959173ms
    Mar 13 19:07:19.187: INFO: Pod "execpoddwv7b": Phase="Running", Reason="", readiness=true. Elapsed: 2.006929379s
    Mar 13 19:07:19.187: INFO: Pod "execpoddwv7b" satisfied condition "running"
    Mar 13 19:07:19.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-6712 exec execpoddwv7b -- /bin/sh -x -c nslookup nodeport-service.services-6712.svc.cluster.local'
    Mar 13 19:07:19.370: INFO: stderr: "+ nslookup nodeport-service.services-6712.svc.cluster.local\n"
    Mar 13 19:07:19.370: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-6712.svc.cluster.local\tcanonical name = externalsvc.services-6712.svc.cluster.local.\nName:\texternalsvc.services-6712.svc.cluster.local\nAddress: 10.100.106.60\n\n"
    STEP: deleting ReplicationController externalsvc in namespace services-6712, will wait for the garbage collector to delete the pods 03/13/23 19:07:19.37
    Mar 13 19:07:19.429: INFO: Deleting ReplicationController externalsvc took: 4.344637ms
    Mar 13 19:07:19.529: INFO: Terminating ReplicationController externalsvc pods took: 100.59536ms
    Mar 13 19:07:21.642: INFO: Cleaning up the NodePort to ExternalName test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:07:21.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6712" for this suite. 03/13/23 19:07:21.653
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with configmap pod [Conformance]
  test/e2e/storage/subpath.go:70
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:07:21.659
Mar 13 19:07:21.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename subpath 03/13/23 19:07:21.66
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:07:21.67
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:07:21.673
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 03/13/23 19:07:21.676
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/storage/subpath.go:70
STEP: Creating pod pod-subpath-test-configmap-29rb 03/13/23 19:07:21.685
STEP: Creating a pod to test atomic-volume-subpath 03/13/23 19:07:21.685
Mar 13 19:07:21.695: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-29rb" in namespace "subpath-2902" to be "Succeeded or Failed"
Mar 13 19:07:21.697: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.635957ms
Mar 13 19:07:23.705: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 2.009942147s
Mar 13 19:07:25.702: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 4.007056702s
Mar 13 19:07:27.701: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 6.006681505s
Mar 13 19:07:29.704: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 8.008789358s
Mar 13 19:07:31.702: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 10.006745656s
Mar 13 19:07:33.702: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 12.006716303s
Mar 13 19:07:35.711: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 14.015989551s
Mar 13 19:07:37.703: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 16.008034419s
Mar 13 19:07:39.703: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 18.008547582s
Mar 13 19:07:41.702: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 20.007361575s
Mar 13 19:07:43.705: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=false. Elapsed: 22.010193027s
Mar 13 19:07:45.702: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.006946633s
STEP: Saw pod success 03/13/23 19:07:45.702
Mar 13 19:07:45.702: INFO: Pod "pod-subpath-test-configmap-29rb" satisfied condition "Succeeded or Failed"
Mar 13 19:07:45.706: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-subpath-test-configmap-29rb container test-container-subpath-configmap-29rb: <nil>
STEP: delete the pod 03/13/23 19:07:45.719
Mar 13 19:07:45.727: INFO: Waiting for pod pod-subpath-test-configmap-29rb to disappear
Mar 13 19:07:45.730: INFO: Pod pod-subpath-test-configmap-29rb no longer exists
STEP: Deleting pod pod-subpath-test-configmap-29rb 03/13/23 19:07:45.73
Mar 13 19:07:45.730: INFO: Deleting pod "pod-subpath-test-configmap-29rb" in namespace "subpath-2902"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Mar 13 19:07:45.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-2902" for this suite. 03/13/23 19:07:45.737
------------------------------
â€¢ [SLOW TEST] [24.083 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/storage/subpath.go:70

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:07:21.659
    Mar 13 19:07:21.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename subpath 03/13/23 19:07:21.66
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:07:21.67
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:07:21.673
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 03/13/23 19:07:21.676
    [It] should support subpaths with configmap pod [Conformance]
      test/e2e/storage/subpath.go:70
    STEP: Creating pod pod-subpath-test-configmap-29rb 03/13/23 19:07:21.685
    STEP: Creating a pod to test atomic-volume-subpath 03/13/23 19:07:21.685
    Mar 13 19:07:21.695: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-29rb" in namespace "subpath-2902" to be "Succeeded or Failed"
    Mar 13 19:07:21.697: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.635957ms
    Mar 13 19:07:23.705: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 2.009942147s
    Mar 13 19:07:25.702: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 4.007056702s
    Mar 13 19:07:27.701: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 6.006681505s
    Mar 13 19:07:29.704: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 8.008789358s
    Mar 13 19:07:31.702: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 10.006745656s
    Mar 13 19:07:33.702: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 12.006716303s
    Mar 13 19:07:35.711: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 14.015989551s
    Mar 13 19:07:37.703: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 16.008034419s
    Mar 13 19:07:39.703: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 18.008547582s
    Mar 13 19:07:41.702: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=true. Elapsed: 20.007361575s
    Mar 13 19:07:43.705: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Running", Reason="", readiness=false. Elapsed: 22.010193027s
    Mar 13 19:07:45.702: INFO: Pod "pod-subpath-test-configmap-29rb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.006946633s
    STEP: Saw pod success 03/13/23 19:07:45.702
    Mar 13 19:07:45.702: INFO: Pod "pod-subpath-test-configmap-29rb" satisfied condition "Succeeded or Failed"
    Mar 13 19:07:45.706: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-subpath-test-configmap-29rb container test-container-subpath-configmap-29rb: <nil>
    STEP: delete the pod 03/13/23 19:07:45.719
    Mar 13 19:07:45.727: INFO: Waiting for pod pod-subpath-test-configmap-29rb to disappear
    Mar 13 19:07:45.730: INFO: Pod pod-subpath-test-configmap-29rb no longer exists
    STEP: Deleting pod pod-subpath-test-configmap-29rb 03/13/23 19:07:45.73
    Mar 13 19:07:45.730: INFO: Deleting pod "pod-subpath-test-configmap-29rb" in namespace "subpath-2902"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:07:45.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-2902" for this suite. 03/13/23 19:07:45.737
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial]
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:224
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:07:45.746
Mar 13 19:07:45.747: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename sched-preemption 03/13/23 19:07:45.748
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:07:45.761
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:07:45.765
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:97
Mar 13 19:07:45.781: INFO: Waiting up to 1m0s for all nodes to be ready
Mar 13 19:08:45.812: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:224
STEP: Create pods that use 4/5 of node resources. 03/13/23 19:08:45.815
Mar 13 19:08:45.832: INFO: Created pod: pod0-0-sched-preemption-low-priority
Mar 13 19:08:45.837: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Mar 13 19:08:45.849: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Mar 13 19:08:45.854: INFO: Created pod: pod1-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled. 03/13/23 19:08:45.854
Mar 13 19:08:45.854: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-7187" to be "running"
Mar 13 19:08:45.860: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 6.36738ms
Mar 13 19:08:47.865: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.010913807s
Mar 13 19:08:47.865: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
Mar 13 19:08:47.865: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-7187" to be "running"
Mar 13 19:08:47.868: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 3.152871ms
Mar 13 19:08:47.868: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
Mar 13 19:08:47.868: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-7187" to be "running"
Mar 13 19:08:47.871: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.863432ms
Mar 13 19:08:47.871: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
Mar 13 19:08:47.871: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-7187" to be "running"
Mar 13 19:08:47.874: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.701321ms
Mar 13 19:08:47.874: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
STEP: Run a critical pod that use same resources as that of a lower priority pod 03/13/23 19:08:47.874
Mar 13 19:08:47.883: INFO: Waiting up to 2m0s for pod "critical-pod" in namespace "kube-system" to be "running"
Mar 13 19:08:47.894: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 10.11152ms
Mar 13 19:08:49.898: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013736108s
Mar 13 19:08:51.899: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.014905079s
Mar 13 19:08:53.898: INFO: Pod "critical-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.014116465s
Mar 13 19:08:53.898: INFO: Pod "critical-pod" satisfied condition "running"
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:08:53.928: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-7187" for this suite. 03/13/23 19:08:53.957
------------------------------
â€¢ [SLOW TEST] [68.216 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:224

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:07:45.746
    Mar 13 19:07:45.747: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename sched-preemption 03/13/23 19:07:45.748
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:07:45.761
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:07:45.765
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:97
    Mar 13 19:07:45.781: INFO: Waiting up to 1m0s for all nodes to be ready
    Mar 13 19:08:45.812: INFO: Waiting for terminating namespaces to be deleted...
    [It] validates lower priority pod preemption by critical pod [Conformance]
      test/e2e/scheduling/preemption.go:224
    STEP: Create pods that use 4/5 of node resources. 03/13/23 19:08:45.815
    Mar 13 19:08:45.832: INFO: Created pod: pod0-0-sched-preemption-low-priority
    Mar 13 19:08:45.837: INFO: Created pod: pod0-1-sched-preemption-medium-priority
    Mar 13 19:08:45.849: INFO: Created pod: pod1-0-sched-preemption-medium-priority
    Mar 13 19:08:45.854: INFO: Created pod: pod1-1-sched-preemption-medium-priority
    STEP: Wait for pods to be scheduled. 03/13/23 19:08:45.854
    Mar 13 19:08:45.854: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-7187" to be "running"
    Mar 13 19:08:45.860: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 6.36738ms
    Mar 13 19:08:47.865: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.010913807s
    Mar 13 19:08:47.865: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
    Mar 13 19:08:47.865: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-7187" to be "running"
    Mar 13 19:08:47.868: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 3.152871ms
    Mar 13 19:08:47.868: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
    Mar 13 19:08:47.868: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-7187" to be "running"
    Mar 13 19:08:47.871: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.863432ms
    Mar 13 19:08:47.871: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
    Mar 13 19:08:47.871: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-7187" to be "running"
    Mar 13 19:08:47.874: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.701321ms
    Mar 13 19:08:47.874: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
    STEP: Run a critical pod that use same resources as that of a lower priority pod 03/13/23 19:08:47.874
    Mar 13 19:08:47.883: INFO: Waiting up to 2m0s for pod "critical-pod" in namespace "kube-system" to be "running"
    Mar 13 19:08:47.894: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 10.11152ms
    Mar 13 19:08:49.898: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013736108s
    Mar 13 19:08:51.899: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.014905079s
    Mar 13 19:08:53.898: INFO: Pod "critical-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.014116465s
    Mar 13 19:08:53.898: INFO: Pod "critical-pod" satisfied condition "running"
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:08:53.928: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-7187" for this suite. 03/13/23 19:08:53.957
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100
[BeforeEach] [sig-api-machinery] Aggregator
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:08:53.984
Mar 13 19:08:53.984: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename aggregator 03/13/23 19:08:53.986
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:08:53.996
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:08:53.999
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:78
Mar 13 19:08:54.003: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100
STEP: Registering the sample API server. 03/13/23 19:08:54.004
Mar 13 19:08:54.599: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
Mar 13 19:08:56.626: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:08:58.630: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:09:00.639: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:09:02.632: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:09:04.631: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:09:06.668: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:09:08.632: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:09:10.632: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:09:12.633: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:09:14.631: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:09:16.630: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:09:18.773: INFO: Waited 135.186581ms for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com 03/13/23 19:09:18.839
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' 03/13/23 19:09:18.842
STEP: List APIServices 03/13/23 19:09:18.848
Mar 13 19:09:18.857: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:68
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/node/init/init.go:32
Mar 13 19:09:19.101: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  tear down framework | framework.go:193
STEP: Destroying namespace "aggregator-2755" for this suite. 03/13/23 19:09:19.147
------------------------------
â€¢ [SLOW TEST] [25.215 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Aggregator
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:08:53.984
    Mar 13 19:08:53.984: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename aggregator 03/13/23 19:08:53.986
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:08:53.996
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:08:53.999
    [BeforeEach] [sig-api-machinery] Aggregator
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Aggregator
      test/e2e/apimachinery/aggregator.go:78
    Mar 13 19:08:54.003: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    [It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
      test/e2e/apimachinery/aggregator.go:100
    STEP: Registering the sample API server. 03/13/23 19:08:54.004
    Mar 13 19:08:54.599: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
    Mar 13 19:08:56.626: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:08:58.630: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:09:00.639: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:09:02.632: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:09:04.631: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:09:06.668: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:09:08.632: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:09:10.632: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:09:12.633: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:09:14.631: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:09:16.630: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 8, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:09:18.773: INFO: Waited 135.186581ms for the sample-apiserver to be ready to handle requests.
    STEP: Read Status for v1alpha1.wardle.example.com 03/13/23 19:09:18.839
    STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' 03/13/23 19:09:18.842
    STEP: List APIServices 03/13/23 19:09:18.848
    Mar 13 19:09:18.857: INFO: Found v1alpha1.wardle.example.com in APIServiceList
    [AfterEach] [sig-api-machinery] Aggregator
      test/e2e/apimachinery/aggregator.go:68
    [AfterEach] [sig-api-machinery] Aggregator
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:09:19.101: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      tear down framework | framework.go:193
    STEP: Destroying namespace "aggregator-2755" for this suite. 03/13/23 19:09:19.147
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:09:19.207
Mar 13 19:09:19.207: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename runtimeclass 03/13/23 19:09:19.212
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:09:19.225
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:09:19.23
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104
Mar 13 19:09:19.245: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-1000 to be scheduled
Mar 13 19:09:19.249: INFO: 1 pods are not scheduled: [runtimeclass-1000/test-runtimeclass-runtimeclass-1000-preconfigured-handler-924kx(ccefda2e-4912-4d59-b2cb-6c91d9022935)]
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Mar 13 19:09:21.258: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-1000" for this suite. 03/13/23 19:09:21.262
------------------------------
â€¢ [2.060 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:09:19.207
    Mar 13 19:09:19.207: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename runtimeclass 03/13/23 19:09:19.212
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:09:19.225
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:09:19.23
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:104
    Mar 13 19:09:19.245: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-1000 to be scheduled
    Mar 13 19:09:19.249: INFO: 1 pods are not scheduled: [runtimeclass-1000/test-runtimeclass-runtimeclass-1000-preconfigured-handler-924kx(ccefda2e-4912-4d59-b2cb-6c91d9022935)]
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:09:21.258: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-1000" for this suite. 03/13/23 19:09:21.262
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] Job
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:09:21.269
Mar 13 19:09:21.270: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename job 03/13/23 19:09:21.27
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:09:21.28
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:09:21.284
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366
STEP: Creating Indexed job 03/13/23 19:09:21.287
STEP: Ensuring job reaches completions 03/13/23 19:09:21.293
STEP: Ensuring pods with index for job exist 03/13/23 19:09:29.297
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Mar 13 19:09:29.301: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-8809" for this suite. 03/13/23 19:09:29.304
------------------------------
â€¢ [SLOW TEST] [8.039 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:09:21.269
    Mar 13 19:09:21.270: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename job 03/13/23 19:09:21.27
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:09:21.28
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:09:21.284
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
      test/e2e/apps/job.go:366
    STEP: Creating Indexed job 03/13/23 19:09:21.287
    STEP: Ensuring job reaches completions 03/13/23 19:09:21.293
    STEP: Ensuring pods with index for job exist 03/13/23 19:09:29.297
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:09:29.301: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-8809" for this suite. 03/13/23 19:09:29.304
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial]
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:09:29.311
Mar 13 19:09:29.311: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename taint-single-pod 03/13/23 19:09:29.312
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:09:29.32
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:09:29.323
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:170
Mar 13 19:09:29.326: INFO: Waiting up to 1m0s for all nodes to be ready
Mar 13 19:10:29.349: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293
Mar 13 19:10:29.361: INFO: Starting informer...
STEP: Starting pod... 03/13/23 19:10:29.361
Mar 13 19:10:29.573: INFO: Pod is running on vke-automated-test-51df1d4fb06e. Tainting Node
STEP: Trying to apply a taint on the Node 03/13/23 19:10:29.573
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/13/23 19:10:29.592
STEP: Waiting short time to make sure Pod is queued for deletion 03/13/23 19:10:29.608
Mar 13 19:10:29.608: INFO: Pod wasn't evicted. Proceeding
Mar 13 19:10:29.609: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/13/23 19:10:29.646
STEP: Waiting some time to make sure that toleration time passed. 03/13/23 19:10:29.657
Mar 13 19:11:44.657: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:11:44.657: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "taint-single-pod-979" for this suite. 03/13/23 19:11:44.663
------------------------------
â€¢ [SLOW TEST] [135.358 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:09:29.311
    Mar 13 19:09:29.311: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename taint-single-pod 03/13/23 19:09:29.312
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:09:29.32
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:09:29.323
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/node/taints.go:170
    Mar 13 19:09:29.326: INFO: Waiting up to 1m0s for all nodes to be ready
    Mar 13 19:10:29.349: INFO: Waiting for terminating namespaces to be deleted...
    [It] removing taint cancels eviction [Disruptive] [Conformance]
      test/e2e/node/taints.go:293
    Mar 13 19:10:29.361: INFO: Starting informer...
    STEP: Starting pod... 03/13/23 19:10:29.361
    Mar 13 19:10:29.573: INFO: Pod is running on vke-automated-test-51df1d4fb06e. Tainting Node
    STEP: Trying to apply a taint on the Node 03/13/23 19:10:29.573
    STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/13/23 19:10:29.592
    STEP: Waiting short time to make sure Pod is queued for deletion 03/13/23 19:10:29.608
    Mar 13 19:10:29.608: INFO: Pod wasn't evicted. Proceeding
    Mar 13 19:10:29.609: INFO: Removing taint from Node
    STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/13/23 19:10:29.646
    STEP: Waiting some time to make sure that toleration time passed. 03/13/23 19:10:29.657
    Mar 13 19:11:44.657: INFO: Pod wasn't evicted. Test successful
    [AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:11:44.657: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "taint-single-pod-979" for this suite. 03/13/23 19:11:44.663
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:11:44.669
Mar 13 19:11:44.669: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 19:11:44.67
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:11:44.684
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:11:44.686
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109
STEP: Creating configMap with name configmap-test-volume-map-94a5946f-b932-4baf-b05e-1e504959790c 03/13/23 19:11:44.691
STEP: Creating a pod to test consume configMaps 03/13/23 19:11:44.696
Mar 13 19:11:44.704: INFO: Waiting up to 5m0s for pod "pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e" in namespace "configmap-8868" to be "Succeeded or Failed"
Mar 13 19:11:44.707: INFO: Pod "pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.885625ms
Mar 13 19:11:46.712: INFO: Pod "pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007847032s
Mar 13 19:11:48.710: INFO: Pod "pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006527855s
STEP: Saw pod success 03/13/23 19:11:48.71
Mar 13 19:11:48.711: INFO: Pod "pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e" satisfied condition "Succeeded or Failed"
Mar 13 19:11:48.714: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e container agnhost-container: <nil>
STEP: delete the pod 03/13/23 19:11:48.742
Mar 13 19:11:48.750: INFO: Waiting for pod pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e to disappear
Mar 13 19:11:48.753: INFO: Pod pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:11:48.753: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8868" for this suite. 03/13/23 19:11:48.757
------------------------------
â€¢ [4.093 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:11:44.669
    Mar 13 19:11:44.669: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 19:11:44.67
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:11:44.684
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:11:44.686
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:109
    STEP: Creating configMap with name configmap-test-volume-map-94a5946f-b932-4baf-b05e-1e504959790c 03/13/23 19:11:44.691
    STEP: Creating a pod to test consume configMaps 03/13/23 19:11:44.696
    Mar 13 19:11:44.704: INFO: Waiting up to 5m0s for pod "pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e" in namespace "configmap-8868" to be "Succeeded or Failed"
    Mar 13 19:11:44.707: INFO: Pod "pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.885625ms
    Mar 13 19:11:46.712: INFO: Pod "pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007847032s
    Mar 13 19:11:48.710: INFO: Pod "pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006527855s
    STEP: Saw pod success 03/13/23 19:11:48.71
    Mar 13 19:11:48.711: INFO: Pod "pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e" satisfied condition "Succeeded or Failed"
    Mar 13 19:11:48.714: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 19:11:48.742
    Mar 13 19:11:48.750: INFO: Waiting for pod pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e to disappear
    Mar 13 19:11:48.753: INFO: Pod pod-configmaps-e2b4427b-ddc9-4d78-aa65-28b78bbbab4e no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:11:48.753: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8868" for this suite. 03/13/23 19:11:48.757
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:11:48.763
Mar 13 19:11:48.763: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename containers 03/13/23 19:11:48.764
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:11:48.778
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:11:48.783
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73
STEP: Creating a pod to test override command 03/13/23 19:11:48.786
Mar 13 19:11:48.796: INFO: Waiting up to 5m0s for pod "client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f" in namespace "containers-1892" to be "Succeeded or Failed"
Mar 13 19:11:48.799: INFO: Pod "client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.518104ms
Mar 13 19:11:50.805: INFO: Pod "client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008924238s
Mar 13 19:11:52.805: INFO: Pod "client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008696856s
STEP: Saw pod success 03/13/23 19:11:52.805
Mar 13 19:11:52.805: INFO: Pod "client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f" satisfied condition "Succeeded or Failed"
Mar 13 19:11:52.809: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f container agnhost-container: <nil>
STEP: delete the pod 03/13/23 19:11:52.815
Mar 13 19:11:52.826: INFO: Waiting for pod client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f to disappear
Mar 13 19:11:52.828: INFO: Pod client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Mar 13 19:11:52.829: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-1892" for this suite. 03/13/23 19:11:52.834
------------------------------
â€¢ [4.082 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:11:48.763
    Mar 13 19:11:48.763: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename containers 03/13/23 19:11:48.764
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:11:48.778
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:11:48.783
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:73
    STEP: Creating a pod to test override command 03/13/23 19:11:48.786
    Mar 13 19:11:48.796: INFO: Waiting up to 5m0s for pod "client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f" in namespace "containers-1892" to be "Succeeded or Failed"
    Mar 13 19:11:48.799: INFO: Pod "client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.518104ms
    Mar 13 19:11:50.805: INFO: Pod "client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008924238s
    Mar 13 19:11:52.805: INFO: Pod "client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008696856s
    STEP: Saw pod success 03/13/23 19:11:52.805
    Mar 13 19:11:52.805: INFO: Pod "client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f" satisfied condition "Succeeded or Failed"
    Mar 13 19:11:52.809: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 19:11:52.815
    Mar 13 19:11:52.826: INFO: Waiting for pod client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f to disappear
    Mar 13 19:11:52.828: INFO: Pod client-containers-5114abf1-8ba3-479f-be3e-fc62f88aef7f no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:11:52.829: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-1892" for this suite. 03/13/23 19:11:52.834
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:11:52.851
Mar 13 19:11:52.852: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename gc 03/13/23 19:11:52.853
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:11:52.865
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:11:52.868
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491
STEP: create the deployment 03/13/23 19:11:52.873
STEP: Wait for the Deployment to create new ReplicaSet 03/13/23 19:11:52.878
STEP: delete the deployment 03/13/23 19:11:53.384
STEP: wait for all rs to be garbage collected 03/13/23 19:11:53.39
STEP: expected 0 rs, got 1 rs 03/13/23 19:11:53.395
STEP: expected 0 pods, got 2 pods 03/13/23 19:11:53.399
STEP: Gathering metrics 03/13/23 19:11:53.907
W0313 19:11:53.913179      21 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Mar 13 19:11:53.913: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar 13 19:11:53.913: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-4473" for this suite. 03/13/23 19:11:53.915
------------------------------
â€¢ [1.069 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:11:52.851
    Mar 13 19:11:52.852: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename gc 03/13/23 19:11:52.853
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:11:52.865
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:11:52.868
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete RS created by deployment when not orphaning [Conformance]
      test/e2e/apimachinery/garbage_collector.go:491
    STEP: create the deployment 03/13/23 19:11:52.873
    STEP: Wait for the Deployment to create new ReplicaSet 03/13/23 19:11:52.878
    STEP: delete the deployment 03/13/23 19:11:53.384
    STEP: wait for all rs to be garbage collected 03/13/23 19:11:53.39
    STEP: expected 0 rs, got 1 rs 03/13/23 19:11:53.395
    STEP: expected 0 pods, got 2 pods 03/13/23 19:11:53.399
    STEP: Gathering metrics 03/13/23 19:11:53.907
    W0313 19:11:53.913179      21 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Mar 13 19:11:53.913: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:11:53.913: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-4473" for this suite. 03/13/23 19:11:53.915
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:11:53.921
Mar 13 19:11:53.921: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pods 03/13/23 19:11:53.923
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:11:53.933
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:11:53.937
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344
STEP: creating the pod 03/13/23 19:11:53.942
STEP: submitting the pod to kubernetes 03/13/23 19:11:53.942
Mar 13 19:11:53.949: INFO: Waiting up to 5m0s for pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49" in namespace "pods-5339" to be "running and ready"
Mar 13 19:11:53.955: INFO: Pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49": Phase="Pending", Reason="", readiness=false. Elapsed: 5.052441ms
Mar 13 19:11:53.955: INFO: The phase of Pod pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:11:55.960: INFO: Pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49": Phase="Running", Reason="", readiness=true. Elapsed: 2.010179165s
Mar 13 19:11:55.960: INFO: The phase of Pod pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49 is Running (Ready = true)
Mar 13 19:11:55.960: INFO: Pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49" satisfied condition "running and ready"
STEP: verifying the pod is in kubernetes 03/13/23 19:11:55.963
STEP: updating the pod 03/13/23 19:11:55.967
Mar 13 19:11:56.480: INFO: Successfully updated pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49"
Mar 13 19:11:56.480: INFO: Waiting up to 5m0s for pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49" in namespace "pods-5339" to be "running"
Mar 13 19:11:56.483: INFO: Pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49": Phase="Running", Reason="", readiness=true. Elapsed: 2.647749ms
Mar 13 19:11:56.483: INFO: Pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49" satisfied condition "running"
STEP: verifying the updated pod is in kubernetes 03/13/23 19:11:56.483
Mar 13 19:11:56.486: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar 13 19:11:56.486: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-5339" for this suite. 03/13/23 19:11:56.496
------------------------------
â€¢ [2.590 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:11:53.921
    Mar 13 19:11:53.921: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pods 03/13/23 19:11:53.923
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:11:53.933
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:11:53.937
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should be updated [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:344
    STEP: creating the pod 03/13/23 19:11:53.942
    STEP: submitting the pod to kubernetes 03/13/23 19:11:53.942
    Mar 13 19:11:53.949: INFO: Waiting up to 5m0s for pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49" in namespace "pods-5339" to be "running and ready"
    Mar 13 19:11:53.955: INFO: Pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49": Phase="Pending", Reason="", readiness=false. Elapsed: 5.052441ms
    Mar 13 19:11:53.955: INFO: The phase of Pod pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:11:55.960: INFO: Pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49": Phase="Running", Reason="", readiness=true. Elapsed: 2.010179165s
    Mar 13 19:11:55.960: INFO: The phase of Pod pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49 is Running (Ready = true)
    Mar 13 19:11:55.960: INFO: Pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49" satisfied condition "running and ready"
    STEP: verifying the pod is in kubernetes 03/13/23 19:11:55.963
    STEP: updating the pod 03/13/23 19:11:55.967
    Mar 13 19:11:56.480: INFO: Successfully updated pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49"
    Mar 13 19:11:56.480: INFO: Waiting up to 5m0s for pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49" in namespace "pods-5339" to be "running"
    Mar 13 19:11:56.483: INFO: Pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49": Phase="Running", Reason="", readiness=true. Elapsed: 2.647749ms
    Mar 13 19:11:56.483: INFO: Pod "pod-update-b383ec9b-7e5e-429d-bfc3-7b89b7fcca49" satisfied condition "running"
    STEP: verifying the updated pod is in kubernetes 03/13/23 19:11:56.483
    Mar 13 19:11:56.486: INFO: Pod update OK
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:11:56.486: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-5339" for this suite. 03/13/23 19:11:56.496
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:11:56.519
Mar 13 19:11:56.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename custom-resource-definition 03/13/23 19:11:56.52
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:11:56.532
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:11:56.535
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198
STEP: fetching the /apis discovery document 03/13/23 19:11:56.538
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document 03/13/23 19:11:56.54
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document 03/13/23 19:11:56.54
STEP: fetching the /apis/apiextensions.k8s.io discovery document 03/13/23 19:11:56.54
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document 03/13/23 19:11:56.541
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document 03/13/23 19:11:56.541
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document 03/13/23 19:11:56.543
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:11:56.543: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-4095" for this suite. 03/13/23 19:11:56.547
------------------------------
â€¢ [0.037 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:11:56.519
    Mar 13 19:11:56.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename custom-resource-definition 03/13/23 19:11:56.52
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:11:56.532
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:11:56.535
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] should include custom resource definition resources in discovery documents [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:198
    STEP: fetching the /apis discovery document 03/13/23 19:11:56.538
    STEP: finding the apiextensions.k8s.io API group in the /apis discovery document 03/13/23 19:11:56.54
    STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document 03/13/23 19:11:56.54
    STEP: fetching the /apis/apiextensions.k8s.io discovery document 03/13/23 19:11:56.54
    STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document 03/13/23 19:11:56.541
    STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document 03/13/23 19:11:56.541
    STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document 03/13/23 19:11:56.543
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:11:56.543: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-4095" for this suite. 03/13/23 19:11:56.547
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial]
  validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:130
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:11:56.559
Mar 13 19:11:56.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename sched-preemption 03/13/23 19:11:56.56
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:11:56.57
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:11:56.573
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:97
Mar 13 19:11:56.587: INFO: Waiting up to 1m0s for all nodes to be ready
Mar 13 19:12:56.614: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:130
STEP: Create pods that use 4/5 of node resources. 03/13/23 19:12:56.617
Mar 13 19:12:56.632: INFO: Created pod: pod0-0-sched-preemption-low-priority
Mar 13 19:12:56.637: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Mar 13 19:12:56.647: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Mar 13 19:12:56.652: INFO: Created pod: pod1-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled. 03/13/23 19:12:56.652
Mar 13 19:12:56.652: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-7451" to be "running"
Mar 13 19:12:56.663: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 11.086047ms
Mar 13 19:12:58.669: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.016267757s
Mar 13 19:12:58.669: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
Mar 13 19:12:58.669: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-7451" to be "running"
Mar 13 19:12:58.672: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 3.770515ms
Mar 13 19:12:58.672: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
Mar 13 19:12:58.672: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-7451" to be "running"
Mar 13 19:12:58.675: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.372158ms
Mar 13 19:12:58.675: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
Mar 13 19:12:58.675: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-7451" to be "running"
Mar 13 19:12:58.677: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.095211ms
Mar 13 19:12:58.677: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
STEP: Run a high priority pod that has same requirements as that of lower priority pod 03/13/23 19:12:58.677
Mar 13 19:12:58.681: INFO: Waiting up to 2m0s for pod "preemptor-pod" in namespace "sched-preemption-7451" to be "running"
Mar 13 19:12:58.684: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.844826ms
Mar 13 19:13:00.690: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00889159s
Mar 13 19:13:02.711: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.029681068s
Mar 13 19:13:04.692: INFO: Pod "preemptor-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.010580023s
Mar 13 19:13:04.692: INFO: Pod "preemptor-pod" satisfied condition "running"
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:13:04.731: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-7451" for this suite. 03/13/23 19:13:04.917
------------------------------
â€¢ [SLOW TEST] [68.411 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:11:56.559
    Mar 13 19:11:56.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename sched-preemption 03/13/23 19:11:56.56
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:11:56.57
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:11:56.573
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:97
    Mar 13 19:11:56.587: INFO: Waiting up to 1m0s for all nodes to be ready
    Mar 13 19:12:56.614: INFO: Waiting for terminating namespaces to be deleted...
    [It] validates basic preemption works [Conformance]
      test/e2e/scheduling/preemption.go:130
    STEP: Create pods that use 4/5 of node resources. 03/13/23 19:12:56.617
    Mar 13 19:12:56.632: INFO: Created pod: pod0-0-sched-preemption-low-priority
    Mar 13 19:12:56.637: INFO: Created pod: pod0-1-sched-preemption-medium-priority
    Mar 13 19:12:56.647: INFO: Created pod: pod1-0-sched-preemption-medium-priority
    Mar 13 19:12:56.652: INFO: Created pod: pod1-1-sched-preemption-medium-priority
    STEP: Wait for pods to be scheduled. 03/13/23 19:12:56.652
    Mar 13 19:12:56.652: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-7451" to be "running"
    Mar 13 19:12:56.663: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 11.086047ms
    Mar 13 19:12:58.669: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.016267757s
    Mar 13 19:12:58.669: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
    Mar 13 19:12:58.669: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-7451" to be "running"
    Mar 13 19:12:58.672: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 3.770515ms
    Mar 13 19:12:58.672: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
    Mar 13 19:12:58.672: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-7451" to be "running"
    Mar 13 19:12:58.675: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.372158ms
    Mar 13 19:12:58.675: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
    Mar 13 19:12:58.675: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-7451" to be "running"
    Mar 13 19:12:58.677: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.095211ms
    Mar 13 19:12:58.677: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
    STEP: Run a high priority pod that has same requirements as that of lower priority pod 03/13/23 19:12:58.677
    Mar 13 19:12:58.681: INFO: Waiting up to 2m0s for pod "preemptor-pod" in namespace "sched-preemption-7451" to be "running"
    Mar 13 19:12:58.684: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.844826ms
    Mar 13 19:13:00.690: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00889159s
    Mar 13 19:13:02.711: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.029681068s
    Mar 13 19:13:04.692: INFO: Pod "preemptor-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.010580023s
    Mar 13 19:13:04.692: INFO: Pod "preemptor-pod" satisfied condition "running"
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:13:04.731: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-7451" for this suite. 03/13/23 19:13:04.917
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Downward API volume
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:13:04.971
Mar 13 19:13:04.971: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 19:13:04.973
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:13:05.016
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:13:05.022
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221
STEP: Creating a pod to test downward API volume plugin 03/13/23 19:13:05.029
Mar 13 19:13:05.077: INFO: Waiting up to 5m0s for pod "downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89" in namespace "downward-api-7108" to be "Succeeded or Failed"
Mar 13 19:13:05.085: INFO: Pod "downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89": Phase="Pending", Reason="", readiness=false. Elapsed: 8.135702ms
Mar 13 19:13:07.090: INFO: Pod "downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012743407s
Mar 13 19:13:09.091: INFO: Pod "downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01341612s
STEP: Saw pod success 03/13/23 19:13:09.091
Mar 13 19:13:09.091: INFO: Pod "downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89" satisfied condition "Succeeded or Failed"
Mar 13 19:13:09.097: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89 container client-container: <nil>
STEP: delete the pod 03/13/23 19:13:09.108
Mar 13 19:13:09.126: INFO: Waiting for pod downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89 to disappear
Mar 13 19:13:09.130: INFO: Pod downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar 13 19:13:09.131: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-7108" for this suite. 03/13/23 19:13:09.137
------------------------------
â€¢ [4.177 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:13:04.971
    Mar 13 19:13:04.971: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 19:13:04.973
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:13:05.016
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:13:05.022
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's cpu request [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:221
    STEP: Creating a pod to test downward API volume plugin 03/13/23 19:13:05.029
    Mar 13 19:13:05.077: INFO: Waiting up to 5m0s for pod "downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89" in namespace "downward-api-7108" to be "Succeeded or Failed"
    Mar 13 19:13:05.085: INFO: Pod "downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89": Phase="Pending", Reason="", readiness=false. Elapsed: 8.135702ms
    Mar 13 19:13:07.090: INFO: Pod "downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012743407s
    Mar 13 19:13:09.091: INFO: Pod "downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01341612s
    STEP: Saw pod success 03/13/23 19:13:09.091
    Mar 13 19:13:09.091: INFO: Pod "downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89" satisfied condition "Succeeded or Failed"
    Mar 13 19:13:09.097: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89 container client-container: <nil>
    STEP: delete the pod 03/13/23 19:13:09.108
    Mar 13 19:13:09.126: INFO: Waiting for pod downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89 to disappear
    Mar 13 19:13:09.130: INFO: Pod downwardapi-volume-18d6ed56-970e-4144-ae93-edc3e3088a89 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:13:09.131: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-7108" for this suite. 03/13/23 19:13:09.137
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Probing container
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:13:09.152
Mar 13 19:13:09.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-probe 03/13/23 19:13:09.154
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:13:09.18
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:13:09.185
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72
Mar 13 19:13:09.203: INFO: Waiting up to 5m0s for pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4" in namespace "container-probe-6523" to be "running and ready"
Mar 13 19:13:09.210: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Pending", Reason="", readiness=false. Elapsed: 7.089305ms
Mar 13 19:13:09.210: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:13:11.227: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 2.024088728s
Mar 13 19:13:11.227: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
Mar 13 19:13:13.214: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 4.011165804s
Mar 13 19:13:13.214: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
Mar 13 19:13:15.215: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 6.012091576s
Mar 13 19:13:15.215: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
Mar 13 19:13:17.214: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 8.01070613s
Mar 13 19:13:17.214: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
Mar 13 19:13:19.215: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 10.011869621s
Mar 13 19:13:19.215: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
Mar 13 19:13:21.214: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 12.010846305s
Mar 13 19:13:21.214: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
Mar 13 19:13:23.214: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 14.011254212s
Mar 13 19:13:23.214: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
Mar 13 19:13:25.213: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 16.010615851s
Mar 13 19:13:25.214: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
Mar 13 19:13:27.215: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 18.012031766s
Mar 13 19:13:27.215: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
Mar 13 19:13:29.214: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 20.010920442s
Mar 13 19:13:29.214: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
Mar 13 19:13:31.216: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=true. Elapsed: 22.013418833s
Mar 13 19:13:31.216: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = true)
Mar 13 19:13:31.216: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4" satisfied condition "running and ready"
Mar 13 19:13:31.219: INFO: Container started at 2023-03-13 19:13:10 +0000 UTC, pod became ready at 2023-03-13 19:13:29 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar 13 19:13:31.220: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-6523" for this suite. 03/13/23 19:13:31.225
------------------------------
â€¢ [SLOW TEST] [22.077 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:13:09.152
    Mar 13 19:13:09.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-probe 03/13/23 19:13:09.154
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:13:09.18
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:13:09.185
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:72
    Mar 13 19:13:09.203: INFO: Waiting up to 5m0s for pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4" in namespace "container-probe-6523" to be "running and ready"
    Mar 13 19:13:09.210: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Pending", Reason="", readiness=false. Elapsed: 7.089305ms
    Mar 13 19:13:09.210: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:13:11.227: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 2.024088728s
    Mar 13 19:13:11.227: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
    Mar 13 19:13:13.214: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 4.011165804s
    Mar 13 19:13:13.214: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
    Mar 13 19:13:15.215: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 6.012091576s
    Mar 13 19:13:15.215: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
    Mar 13 19:13:17.214: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 8.01070613s
    Mar 13 19:13:17.214: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
    Mar 13 19:13:19.215: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 10.011869621s
    Mar 13 19:13:19.215: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
    Mar 13 19:13:21.214: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 12.010846305s
    Mar 13 19:13:21.214: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
    Mar 13 19:13:23.214: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 14.011254212s
    Mar 13 19:13:23.214: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
    Mar 13 19:13:25.213: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 16.010615851s
    Mar 13 19:13:25.214: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
    Mar 13 19:13:27.215: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 18.012031766s
    Mar 13 19:13:27.215: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
    Mar 13 19:13:29.214: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=false. Elapsed: 20.010920442s
    Mar 13 19:13:29.214: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = false)
    Mar 13 19:13:31.216: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4": Phase="Running", Reason="", readiness=true. Elapsed: 22.013418833s
    Mar 13 19:13:31.216: INFO: The phase of Pod test-webserver-49f30994-07fd-4bed-8671-18d3688400d4 is Running (Ready = true)
    Mar 13 19:13:31.216: INFO: Pod "test-webserver-49f30994-07fd-4bed-8671-18d3688400d4" satisfied condition "running and ready"
    Mar 13 19:13:31.219: INFO: Container started at 2023-03-13 19:13:10 +0000 UTC, pod became ready at 2023-03-13 19:13:29 +0000 UTC
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:13:31.220: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-6523" for this suite. 03/13/23 19:13:31.225
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:13:31.237
Mar 13 19:13:31.237: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename replicaset 03/13/23 19:13:31.239
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:13:31.25
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:13:31.254
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165
STEP: Create a ReplicaSet 03/13/23 19:13:31.258
STEP: Verify that the required pods have come up 03/13/23 19:13:31.264
Mar 13 19:13:31.267: INFO: Pod name sample-pod: Found 0 pods out of 3
Mar 13 19:13:36.271: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running 03/13/23 19:13:36.271
Mar 13 19:13:36.273: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets 03/13/23 19:13:36.273
STEP: DeleteCollection of the ReplicaSets 03/13/23 19:13:36.276
STEP: After DeleteCollection verify that ReplicaSets have been deleted 03/13/23 19:13:36.28
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:13:36.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-5574" for this suite. 03/13/23 19:13:36.29
------------------------------
â€¢ [SLOW TEST] [5.058 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:13:31.237
    Mar 13 19:13:31.237: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename replicaset 03/13/23 19:13:31.239
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:13:31.25
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:13:31.254
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should list and delete a collection of ReplicaSets [Conformance]
      test/e2e/apps/replica_set.go:165
    STEP: Create a ReplicaSet 03/13/23 19:13:31.258
    STEP: Verify that the required pods have come up 03/13/23 19:13:31.264
    Mar 13 19:13:31.267: INFO: Pod name sample-pod: Found 0 pods out of 3
    Mar 13 19:13:36.271: INFO: Pod name sample-pod: Found 3 pods out of 3
    STEP: ensuring each pod is running 03/13/23 19:13:36.271
    Mar 13 19:13:36.273: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
    STEP: Listing all ReplicaSets 03/13/23 19:13:36.273
    STEP: DeleteCollection of the ReplicaSets 03/13/23 19:13:36.276
    STEP: After DeleteCollection verify that ReplicaSets have been deleted 03/13/23 19:13:36.28
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:13:36.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-5574" for this suite. 03/13/23 19:13:36.29
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] ReplicationController
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:13:36.327
Mar 13 19:13:36.327: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename replication-controller 03/13/23 19:13:36.328
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:13:36.354
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:13:36.357
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83
Mar 13 19:13:36.360: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota 03/13/23 19:13:36.371
STEP: Checking rc "condition-test" has the desired failure condition set 03/13/23 19:13:36.379
STEP: Scaling down rc "condition-test" to satisfy pod quota 03/13/23 19:13:37.386
Mar 13 19:13:37.394: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set 03/13/23 19:13:37.394
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Mar 13 19:13:38.406: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-8176" for this suite. 03/13/23 19:13:38.409
------------------------------
â€¢ [2.087 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:13:36.327
    Mar 13 19:13:36.327: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename replication-controller 03/13/23 19:13:36.328
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:13:36.354
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:13:36.357
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should surface a failure condition on a common issue like exceeded quota [Conformance]
      test/e2e/apps/rc.go:83
    Mar 13 19:13:36.360: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
    STEP: Creating rc "condition-test" that asks for more than the allowed pod quota 03/13/23 19:13:36.371
    STEP: Checking rc "condition-test" has the desired failure condition set 03/13/23 19:13:36.379
    STEP: Scaling down rc "condition-test" to satisfy pod quota 03/13/23 19:13:37.386
    Mar 13 19:13:37.394: INFO: Updating replication controller "condition-test"
    STEP: Checking rc "condition-test" has no failure condition set 03/13/23 19:13:37.394
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:13:38.406: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-8176" for this suite. 03/13/23 19:13:38.409
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:82
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:13:38.417
Mar 13 19:13:38.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pod-network-test 03/13/23 19:13:38.418
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:13:38.437
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:13:38.444
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:82
STEP: Performing setup for networking test in namespace pod-network-test-9459 03/13/23 19:13:38.451
STEP: creating a selector 03/13/23 19:13:38.452
STEP: Creating the service pods in kubernetes 03/13/23 19:13:38.452
Mar 13 19:13:38.452: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Mar 13 19:13:38.481: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-9459" to be "running and ready"
Mar 13 19:13:38.483: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.240016ms
Mar 13 19:13:38.483: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:13:40.487: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.005889649s
Mar 13 19:13:40.487: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:13:42.488: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.007184507s
Mar 13 19:13:42.488: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:13:44.493: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.012282165s
Mar 13 19:13:44.493: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:13:46.488: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.006928933s
Mar 13 19:13:46.488: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:13:48.488: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.0071247s
Mar 13 19:13:48.488: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:13:50.490: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.008892443s
Mar 13 19:13:50.490: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:13:52.489: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.008548692s
Mar 13 19:13:52.489: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:13:54.489: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.008186141s
Mar 13 19:13:54.489: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:13:56.488: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.00736632s
Mar 13 19:13:56.488: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:13:58.487: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.006607515s
Mar 13 19:13:58.487: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:14:00.487: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.006613076s
Mar 13 19:14:00.487: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Mar 13 19:14:00.487: INFO: Pod "netserver-0" satisfied condition "running and ready"
Mar 13 19:14:00.490: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-9459" to be "running and ready"
Mar 13 19:14:00.494: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 3.539785ms
Mar 13 19:14:00.494: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Mar 13 19:14:00.494: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 03/13/23 19:14:00.497
Mar 13 19:14:00.503: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-9459" to be "running"
Mar 13 19:14:00.507: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 3.08124ms
Mar 13 19:14:02.513: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.010004723s
Mar 13 19:14:02.514: INFO: Pod "test-container-pod" satisfied condition "running"
Mar 13 19:14:02.518: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Mar 13 19:14:02.518: INFO: Breadth first check of 10.244.181.163 on host 10.1.96.5...
Mar 13 19:14:02.522: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.181.153:9080/dial?request=hostname&protocol=http&host=10.244.181.163&port=8083&tries=1'] Namespace:pod-network-test-9459 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:14:02.522: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:14:02.524: INFO: ExecWithOptions: Clientset creation
Mar 13 19:14:02.524: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9459/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.181.153%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.181.163%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Mar 13 19:14:02.687: INFO: Waiting for responses: map[]
Mar 13 19:14:02.687: INFO: reached 10.244.181.163 after 0/1 tries
Mar 13 19:14:02.687: INFO: Breadth first check of 10.244.40.218 on host 10.1.96.4...
Mar 13 19:14:02.700: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.181.153:9080/dial?request=hostname&protocol=http&host=10.244.40.218&port=8083&tries=1'] Namespace:pod-network-test-9459 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:14:02.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:14:02.701: INFO: ExecWithOptions: Clientset creation
Mar 13 19:14:02.701: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9459/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.181.153%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.40.218%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Mar 13 19:14:02.810: INFO: Waiting for responses: map[]
Mar 13 19:14:02.810: INFO: reached 10.244.40.218 after 0/1 tries
Mar 13 19:14:02.810: INFO: Going to retry 0 out of 2 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Mar 13 19:14:02.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-9459" for this suite. 03/13/23 19:14:02.815
------------------------------
â€¢ [SLOW TEST] [24.424 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:82

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:13:38.417
    Mar 13 19:13:38.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pod-network-test 03/13/23 19:13:38.418
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:13:38.437
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:13:38.444
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for intra-pod communication: http [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:82
    STEP: Performing setup for networking test in namespace pod-network-test-9459 03/13/23 19:13:38.451
    STEP: creating a selector 03/13/23 19:13:38.452
    STEP: Creating the service pods in kubernetes 03/13/23 19:13:38.452
    Mar 13 19:13:38.452: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Mar 13 19:13:38.481: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-9459" to be "running and ready"
    Mar 13 19:13:38.483: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.240016ms
    Mar 13 19:13:38.483: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:13:40.487: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.005889649s
    Mar 13 19:13:40.487: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:13:42.488: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.007184507s
    Mar 13 19:13:42.488: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:13:44.493: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.012282165s
    Mar 13 19:13:44.493: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:13:46.488: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.006928933s
    Mar 13 19:13:46.488: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:13:48.488: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.0071247s
    Mar 13 19:13:48.488: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:13:50.490: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.008892443s
    Mar 13 19:13:50.490: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:13:52.489: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.008548692s
    Mar 13 19:13:52.489: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:13:54.489: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.008186141s
    Mar 13 19:13:54.489: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:13:56.488: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.00736632s
    Mar 13 19:13:56.488: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:13:58.487: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.006607515s
    Mar 13 19:13:58.487: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:14:00.487: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.006613076s
    Mar 13 19:14:00.487: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Mar 13 19:14:00.487: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Mar 13 19:14:00.490: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-9459" to be "running and ready"
    Mar 13 19:14:00.494: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 3.539785ms
    Mar 13 19:14:00.494: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Mar 13 19:14:00.494: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 03/13/23 19:14:00.497
    Mar 13 19:14:00.503: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-9459" to be "running"
    Mar 13 19:14:00.507: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 3.08124ms
    Mar 13 19:14:02.513: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.010004723s
    Mar 13 19:14:02.514: INFO: Pod "test-container-pod" satisfied condition "running"
    Mar 13 19:14:02.518: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Mar 13 19:14:02.518: INFO: Breadth first check of 10.244.181.163 on host 10.1.96.5...
    Mar 13 19:14:02.522: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.181.153:9080/dial?request=hostname&protocol=http&host=10.244.181.163&port=8083&tries=1'] Namespace:pod-network-test-9459 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:14:02.522: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:14:02.524: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:14:02.524: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9459/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.181.153%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.181.163%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Mar 13 19:14:02.687: INFO: Waiting for responses: map[]
    Mar 13 19:14:02.687: INFO: reached 10.244.181.163 after 0/1 tries
    Mar 13 19:14:02.687: INFO: Breadth first check of 10.244.40.218 on host 10.1.96.4...
    Mar 13 19:14:02.700: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.181.153:9080/dial?request=hostname&protocol=http&host=10.244.40.218&port=8083&tries=1'] Namespace:pod-network-test-9459 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:14:02.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:14:02.701: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:14:02.701: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9459/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.181.153%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.40.218%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Mar 13 19:14:02.810: INFO: Waiting for responses: map[]
    Mar 13 19:14:02.810: INFO: reached 10.244.40.218 after 0/1 tries
    Mar 13 19:14:02.810: INFO: Going to retry 0 out of 2 pods....
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:14:02.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-9459" for this suite. 03/13/23 19:14:02.815
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:14:02.844
Mar 13 19:14:02.845: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:14:02.846
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:02.894
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:02.901
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124
STEP: Creating projection with configMap that has name projected-configmap-test-upd-530af4e9-c50d-4b3e-ae22-feb9a587a628 03/13/23 19:14:02.94
STEP: Creating the pod 03/13/23 19:14:02.957
Mar 13 19:14:02.989: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-aac635e8-229d-4669-b884-6bd1ffa24a8f" in namespace "projected-3199" to be "running and ready"
Mar 13 19:14:03.008: INFO: Pod "pod-projected-configmaps-aac635e8-229d-4669-b884-6bd1ffa24a8f": Phase="Pending", Reason="", readiness=false. Elapsed: 18.938219ms
Mar 13 19:14:03.008: INFO: The phase of Pod pod-projected-configmaps-aac635e8-229d-4669-b884-6bd1ffa24a8f is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:14:05.018: INFO: Pod "pod-projected-configmaps-aac635e8-229d-4669-b884-6bd1ffa24a8f": Phase="Running", Reason="", readiness=true. Elapsed: 2.02894447s
Mar 13 19:14:05.018: INFO: The phase of Pod pod-projected-configmaps-aac635e8-229d-4669-b884-6bd1ffa24a8f is Running (Ready = true)
Mar 13 19:14:05.018: INFO: Pod "pod-projected-configmaps-aac635e8-229d-4669-b884-6bd1ffa24a8f" satisfied condition "running and ready"
STEP: Updating configmap projected-configmap-test-upd-530af4e9-c50d-4b3e-ae22-feb9a587a628 03/13/23 19:14:05.072
STEP: waiting to observe update in volume 03/13/23 19:14:05.081
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:14:07.117: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3199" for this suite. 03/13/23 19:14:07.125
------------------------------
â€¢ [4.290 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:14:02.844
    Mar 13 19:14:02.845: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:14:02.846
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:02.894
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:02.901
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:124
    STEP: Creating projection with configMap that has name projected-configmap-test-upd-530af4e9-c50d-4b3e-ae22-feb9a587a628 03/13/23 19:14:02.94
    STEP: Creating the pod 03/13/23 19:14:02.957
    Mar 13 19:14:02.989: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-aac635e8-229d-4669-b884-6bd1ffa24a8f" in namespace "projected-3199" to be "running and ready"
    Mar 13 19:14:03.008: INFO: Pod "pod-projected-configmaps-aac635e8-229d-4669-b884-6bd1ffa24a8f": Phase="Pending", Reason="", readiness=false. Elapsed: 18.938219ms
    Mar 13 19:14:03.008: INFO: The phase of Pod pod-projected-configmaps-aac635e8-229d-4669-b884-6bd1ffa24a8f is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:14:05.018: INFO: Pod "pod-projected-configmaps-aac635e8-229d-4669-b884-6bd1ffa24a8f": Phase="Running", Reason="", readiness=true. Elapsed: 2.02894447s
    Mar 13 19:14:05.018: INFO: The phase of Pod pod-projected-configmaps-aac635e8-229d-4669-b884-6bd1ffa24a8f is Running (Ready = true)
    Mar 13 19:14:05.018: INFO: Pod "pod-projected-configmaps-aac635e8-229d-4669-b884-6bd1ffa24a8f" satisfied condition "running and ready"
    STEP: Updating configmap projected-configmap-test-upd-530af4e9-c50d-4b3e-ae22-feb9a587a628 03/13/23 19:14:05.072
    STEP: waiting to observe update in volume 03/13/23 19:14:05.081
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:14:07.117: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3199" for this suite. 03/13/23 19:14:07.125
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:14:07.142
Mar 13 19:14:07.142: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 19:14:07.143
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:07.177
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:07.186
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 19:14:07.231
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:14:07.831
STEP: Deploying the webhook pod 03/13/23 19:14:07.848
STEP: Wait for the deployment to be ready 03/13/23 19:14:07.899
Mar 13 19:14:07.914: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Mar 13 19:14:09.928: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 14, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 14, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 14, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 14, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 03/13/23 19:14:11.935
STEP: Verifying the service has paired with the endpoint 03/13/23 19:14:11.962
Mar 13 19:14:12.962: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308
STEP: Registering the crd webhook via the AdmissionRegistration API 03/13/23 19:14:12.967
STEP: Creating a custom resource definition that should be denied by the webhook 03/13/23 19:14:13.009
Mar 13 19:14:13.009: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:14:13.042: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-7642" for this suite. 03/13/23 19:14:13.114
STEP: Destroying namespace "webhook-7642-markers" for this suite. 03/13/23 19:14:13.122
------------------------------
â€¢ [SLOW TEST] [5.994 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:14:07.142
    Mar 13 19:14:07.142: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 19:14:07.143
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:07.177
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:07.186
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 19:14:07.231
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:14:07.831
    STEP: Deploying the webhook pod 03/13/23 19:14:07.848
    STEP: Wait for the deployment to be ready 03/13/23 19:14:07.899
    Mar 13 19:14:07.914: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Mar 13 19:14:09.928: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 14, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 14, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 14, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 14, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 03/13/23 19:14:11.935
    STEP: Verifying the service has paired with the endpoint 03/13/23 19:14:11.962
    Mar 13 19:14:12.962: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should deny crd creation [Conformance]
      test/e2e/apimachinery/webhook.go:308
    STEP: Registering the crd webhook via the AdmissionRegistration API 03/13/23 19:14:12.967
    STEP: Creating a custom resource definition that should be denied by the webhook 03/13/23 19:14:13.009
    Mar 13 19:14:13.009: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:14:13.042: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-7642" for this suite. 03/13/23 19:14:13.114
    STEP: Destroying namespace "webhook-7642-markers" for this suite. 03/13/23 19:14:13.122
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:14:13.149
Mar 13 19:14:13.150: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pods 03/13/23 19:14:13.151
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:13.187
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:13.196
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896
STEP: creating a Pod with a static label 03/13/23 19:14:13.223
STEP: watching for Pod to be ready 03/13/23 19:14:13.247
Mar 13 19:14:13.252: INFO: observed Pod pod-test in namespace pods-5227 in phase Pending with labels: map[test-pod-static:true] & conditions []
Mar 13 19:14:13.252: INFO: observed Pod pod-test in namespace pods-5227 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  }]
Mar 13 19:14:13.270: INFO: observed Pod pod-test in namespace pods-5227 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  }]
Mar 13 19:14:14.143: INFO: observed Pod pod-test in namespace pods-5227 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  }]
Mar 13 19:14:14.793: INFO: Found Pod pod-test in namespace pods-5227 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:14 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:14 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data 03/13/23 19:14:14.803
STEP: getting the Pod and ensuring that it's patched 03/13/23 19:14:14.831
STEP: replacing the Pod's status Ready condition to False 03/13/23 19:14:14.835
STEP: check the Pod again to ensure its Ready conditions are False 03/13/23 19:14:14.851
STEP: deleting the Pod via a Collection with a LabelSelector 03/13/23 19:14:14.851
STEP: watching for the Pod to be deleted 03/13/23 19:14:14.863
Mar 13 19:14:14.866: INFO: observed event type MODIFIED
Mar 13 19:14:16.797: INFO: observed event type MODIFIED
Mar 13 19:14:16.969: INFO: observed event type MODIFIED
Mar 13 19:14:17.801: INFO: observed event type MODIFIED
Mar 13 19:14:17.807: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar 13 19:14:17.811: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-5227" for this suite. 03/13/23 19:14:17.814
------------------------------
â€¢ [4.669 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:14:13.149
    Mar 13 19:14:13.150: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pods 03/13/23 19:14:13.151
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:13.187
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:13.196
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should run through the lifecycle of Pods and PodStatus [Conformance]
      test/e2e/common/node/pods.go:896
    STEP: creating a Pod with a static label 03/13/23 19:14:13.223
    STEP: watching for Pod to be ready 03/13/23 19:14:13.247
    Mar 13 19:14:13.252: INFO: observed Pod pod-test in namespace pods-5227 in phase Pending with labels: map[test-pod-static:true] & conditions []
    Mar 13 19:14:13.252: INFO: observed Pod pod-test in namespace pods-5227 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  }]
    Mar 13 19:14:13.270: INFO: observed Pod pod-test in namespace pods-5227 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  }]
    Mar 13 19:14:14.143: INFO: observed Pod pod-test in namespace pods-5227 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  }]
    Mar 13 19:14:14.793: INFO: Found Pod pod-test in namespace pods-5227 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:14 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:14 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:14:13 +0000 UTC  }]
    STEP: patching the Pod with a new Label and updated data 03/13/23 19:14:14.803
    STEP: getting the Pod and ensuring that it's patched 03/13/23 19:14:14.831
    STEP: replacing the Pod's status Ready condition to False 03/13/23 19:14:14.835
    STEP: check the Pod again to ensure its Ready conditions are False 03/13/23 19:14:14.851
    STEP: deleting the Pod via a Collection with a LabelSelector 03/13/23 19:14:14.851
    STEP: watching for the Pod to be deleted 03/13/23 19:14:14.863
    Mar 13 19:14:14.866: INFO: observed event type MODIFIED
    Mar 13 19:14:16.797: INFO: observed event type MODIFIED
    Mar 13 19:14:16.969: INFO: observed event type MODIFIED
    Mar 13 19:14:17.801: INFO: observed event type MODIFIED
    Mar 13 19:14:17.807: INFO: observed event type MODIFIED
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:14:17.811: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-5227" for this suite. 03/13/23 19:14:17.814
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace
  should update a single-container pod's image  [Conformance]
  test/e2e/kubectl/kubectl.go:1747
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:14:17.82
Mar 13 19:14:17.820: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 19:14:17.821
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:17.832
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:17.835
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1734
[It] should update a single-container pod's image  [Conformance]
  test/e2e/kubectl/kubectl.go:1747
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/13/23 19:14:17.838
Mar 13 19:14:17.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1042 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Mar 13 19:14:17.928: INFO: stderr: ""
Mar 13 19:14:17.928: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running 03/13/23 19:14:17.928
STEP: verifying the pod e2e-test-httpd-pod was created 03/13/23 19:14:22.979
Mar 13 19:14:22.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1042 get pod e2e-test-httpd-pod -o json'
Mar 13 19:14:23.059: INFO: stderr: ""
Mar 13 19:14:23.060: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"14f37451da416ef95914e2266009b157d180c859398354371ffb2672f8898089\",\n            \"cni.projectcalico.org/podIP\": \"10.244.181.160/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.244.181.160/32,2001:db8:42:1f:e556:e398:18f3:c258/128\"\n        },\n        \"creationTimestamp\": \"2023-03-13T19:14:17Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1042\",\n        \"resourceVersion\": \"15042\",\n        \"uid\": \"d6b91a3b-d96f-41a2-8ef3-26d7c7d59cb0\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-dzzvs\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"vke-automated-test-51df1d4fb06e\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-dzzvs\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-13T19:14:17Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-13T19:14:18Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-13T19:14:18Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-13T19:14:17Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://19a1f54d2b9192c5185a2642f7c8b3a80f66cef987b55e63dbfe57aa45786194\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-03-13T19:14:18Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.1.96.5\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.181.160\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.181.160\"\n            },\n            {\n                \"ip\": \"2001:db8:42:1f:e556:e398:18f3:c258\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-03-13T19:14:17Z\"\n    }\n}\n"
STEP: replace the image in the pod 03/13/23 19:14:23.06
Mar 13 19:14:23.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1042 replace -f -'
Mar 13 19:14:24.208: INFO: stderr: ""
Mar 13 19:14:24.208: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 03/13/23 19:14:24.208
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1738
Mar 13 19:14:24.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1042 delete pods e2e-test-httpd-pod'
Mar 13 19:14:25.837: INFO: stderr: ""
Mar 13 19:14:25.837: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 19:14:25.837: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1042" for this suite. 03/13/23 19:14:25.841
------------------------------
â€¢ [SLOW TEST] [8.025 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1731
    should update a single-container pod's image  [Conformance]
    test/e2e/kubectl/kubectl.go:1747

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:14:17.82
    Mar 13 19:14:17.820: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 19:14:17.821
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:17.832
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:17.835
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl replace
      test/e2e/kubectl/kubectl.go:1734
    [It] should update a single-container pod's image  [Conformance]
      test/e2e/kubectl/kubectl.go:1747
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/13/23 19:14:17.838
    Mar 13 19:14:17.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1042 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
    Mar 13 19:14:17.928: INFO: stderr: ""
    Mar 13 19:14:17.928: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: verifying the pod e2e-test-httpd-pod is running 03/13/23 19:14:17.928
    STEP: verifying the pod e2e-test-httpd-pod was created 03/13/23 19:14:22.979
    Mar 13 19:14:22.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1042 get pod e2e-test-httpd-pod -o json'
    Mar 13 19:14:23.059: INFO: stderr: ""
    Mar 13 19:14:23.060: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"14f37451da416ef95914e2266009b157d180c859398354371ffb2672f8898089\",\n            \"cni.projectcalico.org/podIP\": \"10.244.181.160/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.244.181.160/32,2001:db8:42:1f:e556:e398:18f3:c258/128\"\n        },\n        \"creationTimestamp\": \"2023-03-13T19:14:17Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1042\",\n        \"resourceVersion\": \"15042\",\n        \"uid\": \"d6b91a3b-d96f-41a2-8ef3-26d7c7d59cb0\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-dzzvs\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"vke-automated-test-51df1d4fb06e\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-dzzvs\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-13T19:14:17Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-13T19:14:18Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-13T19:14:18Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-13T19:14:17Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://19a1f54d2b9192c5185a2642f7c8b3a80f66cef987b55e63dbfe57aa45786194\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-03-13T19:14:18Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.1.96.5\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.181.160\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.181.160\"\n            },\n            {\n                \"ip\": \"2001:db8:42:1f:e556:e398:18f3:c258\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-03-13T19:14:17Z\"\n    }\n}\n"
    STEP: replace the image in the pod 03/13/23 19:14:23.06
    Mar 13 19:14:23.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1042 replace -f -'
    Mar 13 19:14:24.208: INFO: stderr: ""
    Mar 13 19:14:24.208: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
    STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 03/13/23 19:14:24.208
    [AfterEach] Kubectl replace
      test/e2e/kubectl/kubectl.go:1738
    Mar 13 19:14:24.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1042 delete pods e2e-test-httpd-pod'
    Mar 13 19:14:25.837: INFO: stderr: ""
    Mar 13 19:14:25.837: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:14:25.837: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1042" for this suite. 03/13/23 19:14:25.841
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:52
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:14:25.847
Mar 13 19:14:25.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-runtime 03/13/23 19:14:25.849
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:25.858
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:25.861
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:52
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' 03/13/23 19:14:25.871
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' 03/13/23 19:14:43.941
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition 03/13/23 19:14:43.944
STEP: Container 'terminate-cmd-rpa': should get the expected 'State' 03/13/23 19:14:43.951
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] 03/13/23 19:14:43.951
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' 03/13/23 19:14:43.966
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' 03/13/23 19:14:46.987
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition 03/13/23 19:14:48.998
STEP: Container 'terminate-cmd-rpof': should get the expected 'State' 03/13/23 19:14:49.004
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] 03/13/23 19:14:49.004
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' 03/13/23 19:14:49.019
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' 03/13/23 19:14:50.025
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition 03/13/23 19:14:52.04
STEP: Container 'terminate-cmd-rpn': should get the expected 'State' 03/13/23 19:14:52.045
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] 03/13/23 19:14:52.045
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Mar 13 19:14:52.061: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-4087" for this suite. 03/13/23 19:14:52.064
------------------------------
â€¢ [SLOW TEST] [26.221 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    when starting a container that exits
    test/e2e/common/node/runtime.go:45
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:52

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:14:25.847
    Mar 13 19:14:25.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-runtime 03/13/23 19:14:25.849
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:25.858
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:25.861
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should run with the expected status [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:52
    STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' 03/13/23 19:14:25.871
    STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' 03/13/23 19:14:43.941
    STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition 03/13/23 19:14:43.944
    STEP: Container 'terminate-cmd-rpa': should get the expected 'State' 03/13/23 19:14:43.951
    STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] 03/13/23 19:14:43.951
    STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' 03/13/23 19:14:43.966
    STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' 03/13/23 19:14:46.987
    STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition 03/13/23 19:14:48.998
    STEP: Container 'terminate-cmd-rpof': should get the expected 'State' 03/13/23 19:14:49.004
    STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] 03/13/23 19:14:49.004
    STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' 03/13/23 19:14:49.019
    STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' 03/13/23 19:14:50.025
    STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition 03/13/23 19:14:52.04
    STEP: Container 'terminate-cmd-rpn': should get the expected 'State' 03/13/23 19:14:52.045
    STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] 03/13/23 19:14:52.045
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:14:52.061: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-4087" for this suite. 03/13/23 19:14:52.064
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:14:52.07
Mar 13 19:14:52.070: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename secrets 03/13/23 19:14:52.073
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:52.08
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:52.083
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68
STEP: Creating secret with name secret-test-6d6e19cf-e033-4540-83c5-e8cf4b3c015e 03/13/23 19:14:52.086
STEP: Creating a pod to test consume secrets 03/13/23 19:14:52.089
Mar 13 19:14:52.094: INFO: Waiting up to 5m0s for pod "pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44" in namespace "secrets-9784" to be "Succeeded or Failed"
Mar 13 19:14:52.096: INFO: Pod "pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44": Phase="Pending", Reason="", readiness=false. Elapsed: 2.328981ms
Mar 13 19:14:54.100: INFO: Pod "pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44": Phase="Running", Reason="", readiness=false. Elapsed: 2.006055474s
Mar 13 19:14:56.101: INFO: Pod "pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006421655s
STEP: Saw pod success 03/13/23 19:14:56.101
Mar 13 19:14:56.101: INFO: Pod "pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44" satisfied condition "Succeeded or Failed"
Mar 13 19:14:56.103: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44 container secret-volume-test: <nil>
STEP: delete the pod 03/13/23 19:14:56.109
Mar 13 19:14:56.115: INFO: Waiting for pod pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44 to disappear
Mar 13 19:14:56.117: INFO: Pod pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar 13 19:14:56.117: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-9784" for this suite. 03/13/23 19:14:56.12
------------------------------
â€¢ [4.053 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:14:52.07
    Mar 13 19:14:52.070: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename secrets 03/13/23 19:14:52.073
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:52.08
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:52.083
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:68
    STEP: Creating secret with name secret-test-6d6e19cf-e033-4540-83c5-e8cf4b3c015e 03/13/23 19:14:52.086
    STEP: Creating a pod to test consume secrets 03/13/23 19:14:52.089
    Mar 13 19:14:52.094: INFO: Waiting up to 5m0s for pod "pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44" in namespace "secrets-9784" to be "Succeeded or Failed"
    Mar 13 19:14:52.096: INFO: Pod "pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44": Phase="Pending", Reason="", readiness=false. Elapsed: 2.328981ms
    Mar 13 19:14:54.100: INFO: Pod "pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44": Phase="Running", Reason="", readiness=false. Elapsed: 2.006055474s
    Mar 13 19:14:56.101: INFO: Pod "pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006421655s
    STEP: Saw pod success 03/13/23 19:14:56.101
    Mar 13 19:14:56.101: INFO: Pod "pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44" satisfied condition "Succeeded or Failed"
    Mar 13 19:14:56.103: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44 container secret-volume-test: <nil>
    STEP: delete the pod 03/13/23 19:14:56.109
    Mar 13 19:14:56.115: INFO: Waiting for pod pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44 to disappear
    Mar 13 19:14:56.117: INFO: Pod pod-secrets-dd1c8f36-1750-4e30-88ab-ba5a75b48b44 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:14:56.117: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-9784" for this suite. 03/13/23 19:14:56.12
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/apps/statefulset.go:977
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:14:56.124
Mar 13 19:14:56.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename statefulset 03/13/23 19:14:56.125
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:56.132
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:56.134
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-7027 03/13/23 19:14:56.137
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/apps/statefulset.go:977
STEP: Creating statefulset ss in namespace statefulset-7027 03/13/23 19:14:56.143
Mar 13 19:14:56.148: INFO: Found 0 stateful pods, waiting for 1
Mar 13 19:15:06.159: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label 03/13/23 19:15:06.189
STEP: Getting /status 03/13/23 19:15:06.231
Mar 13 19:15:06.240: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status 03/13/23 19:15:06.24
Mar 13 19:15:06.264: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated 03/13/23 19:15:06.264
Mar 13 19:15:06.269: INFO: Observed &StatefulSet event: ADDED
Mar 13 19:15:06.269: INFO: Found Statefulset ss in namespace statefulset-7027 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Mar 13 19:15:06.269: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status 03/13/23 19:15:06.269
Mar 13 19:15:06.269: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Mar 13 19:15:06.282: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched 03/13/23 19:15:06.282
Mar 13 19:15:06.286: INFO: Observed &StatefulSet event: ADDED
Mar 13 19:15:06.286: INFO: Observed Statefulset ss in namespace statefulset-7027 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Mar 13 19:15:06.286: INFO: Observed &StatefulSet event: MODIFIED
Mar 13 19:15:06.286: INFO: Found Statefulset ss in namespace statefulset-7027 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar 13 19:15:06.287: INFO: Deleting all statefulset in ns statefulset-7027
Mar 13 19:15:06.292: INFO: Scaling statefulset ss to 0
Mar 13 19:15:16.322: INFO: Waiting for statefulset status.replicas updated to 0
Mar 13 19:15:16.342: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:15:16.364: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-7027" for this suite. 03/13/23 19:15:16.368
------------------------------
â€¢ [SLOW TEST] [20.250 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/apps/statefulset.go:977

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:14:56.124
    Mar 13 19:14:56.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename statefulset 03/13/23 19:14:56.125
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:14:56.132
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:14:56.134
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-7027 03/13/23 19:14:56.137
    [It] should validate Statefulset Status endpoints [Conformance]
      test/e2e/apps/statefulset.go:977
    STEP: Creating statefulset ss in namespace statefulset-7027 03/13/23 19:14:56.143
    Mar 13 19:14:56.148: INFO: Found 0 stateful pods, waiting for 1
    Mar 13 19:15:06.159: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Patch Statefulset to include a label 03/13/23 19:15:06.189
    STEP: Getting /status 03/13/23 19:15:06.231
    Mar 13 19:15:06.240: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
    STEP: updating the StatefulSet Status 03/13/23 19:15:06.24
    Mar 13 19:15:06.264: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the statefulset status to be updated 03/13/23 19:15:06.264
    Mar 13 19:15:06.269: INFO: Observed &StatefulSet event: ADDED
    Mar 13 19:15:06.269: INFO: Found Statefulset ss in namespace statefulset-7027 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Mar 13 19:15:06.269: INFO: Statefulset ss has an updated status
    STEP: patching the Statefulset Status 03/13/23 19:15:06.269
    Mar 13 19:15:06.269: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Mar 13 19:15:06.282: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Statefulset status to be patched 03/13/23 19:15:06.282
    Mar 13 19:15:06.286: INFO: Observed &StatefulSet event: ADDED
    Mar 13 19:15:06.286: INFO: Observed Statefulset ss in namespace statefulset-7027 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Mar 13 19:15:06.286: INFO: Observed &StatefulSet event: MODIFIED
    Mar 13 19:15:06.286: INFO: Found Statefulset ss in namespace statefulset-7027 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar 13 19:15:06.287: INFO: Deleting all statefulset in ns statefulset-7027
    Mar 13 19:15:06.292: INFO: Scaling statefulset ss to 0
    Mar 13 19:15:16.322: INFO: Waiting for statefulset status.replicas updated to 0
    Mar 13 19:15:16.342: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:15:16.364: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-7027" for this suite. 03/13/23 19:15:16.368
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:15:16.378
Mar 13 19:15:16.378: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-probe 03/13/23 19:15:16.38
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:15:16.392
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:15:16.4
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199
STEP: Creating pod liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 in namespace container-probe-4313 03/13/23 19:15:16.405
Mar 13 19:15:16.414: INFO: Waiting up to 5m0s for pod "liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681" in namespace "container-probe-4313" to be "not pending"
Mar 13 19:15:16.419: INFO: Pod "liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681": Phase="Pending", Reason="", readiness=false. Elapsed: 5.022314ms
Mar 13 19:15:18.423: INFO: Pod "liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681": Phase="Running", Reason="", readiness=true. Elapsed: 2.008806867s
Mar 13 19:15:18.423: INFO: Pod "liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681" satisfied condition "not pending"
Mar 13 19:15:18.423: INFO: Started pod liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 in namespace container-probe-4313
STEP: checking the pod's current state and verifying that restartCount is present 03/13/23 19:15:18.423
Mar 13 19:15:18.426: INFO: Initial restart count of pod liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 is 0
Mar 13 19:15:38.478: INFO: Restart count of pod container-probe-4313/liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 is now 1 (20.051411368s elapsed)
Mar 13 19:15:58.518: INFO: Restart count of pod container-probe-4313/liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 is now 2 (40.092201869s elapsed)
Mar 13 19:16:18.574: INFO: Restart count of pod container-probe-4313/liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 is now 3 (1m0.14739888s elapsed)
Mar 13 19:16:38.617: INFO: Restart count of pod container-probe-4313/liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 is now 4 (1m20.190631365s elapsed)
Mar 13 19:17:38.776: INFO: Restart count of pod container-probe-4313/liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 is now 5 (2m20.349535771s elapsed)
STEP: deleting the pod 03/13/23 19:17:38.776
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar 13 19:17:38.786: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-4313" for this suite. 03/13/23 19:17:38.791
------------------------------
â€¢ [SLOW TEST] [142.422 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:15:16.378
    Mar 13 19:15:16.378: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-probe 03/13/23 19:15:16.38
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:15:16.392
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:15:16.4
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should have monotonically increasing restart count [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:199
    STEP: Creating pod liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 in namespace container-probe-4313 03/13/23 19:15:16.405
    Mar 13 19:15:16.414: INFO: Waiting up to 5m0s for pod "liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681" in namespace "container-probe-4313" to be "not pending"
    Mar 13 19:15:16.419: INFO: Pod "liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681": Phase="Pending", Reason="", readiness=false. Elapsed: 5.022314ms
    Mar 13 19:15:18.423: INFO: Pod "liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681": Phase="Running", Reason="", readiness=true. Elapsed: 2.008806867s
    Mar 13 19:15:18.423: INFO: Pod "liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681" satisfied condition "not pending"
    Mar 13 19:15:18.423: INFO: Started pod liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 in namespace container-probe-4313
    STEP: checking the pod's current state and verifying that restartCount is present 03/13/23 19:15:18.423
    Mar 13 19:15:18.426: INFO: Initial restart count of pod liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 is 0
    Mar 13 19:15:38.478: INFO: Restart count of pod container-probe-4313/liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 is now 1 (20.051411368s elapsed)
    Mar 13 19:15:58.518: INFO: Restart count of pod container-probe-4313/liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 is now 2 (40.092201869s elapsed)
    Mar 13 19:16:18.574: INFO: Restart count of pod container-probe-4313/liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 is now 3 (1m0.14739888s elapsed)
    Mar 13 19:16:38.617: INFO: Restart count of pod container-probe-4313/liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 is now 4 (1m20.190631365s elapsed)
    Mar 13 19:17:38.776: INFO: Restart count of pod container-probe-4313/liveness-909d1305-c984-4325-8ee5-a1ce2dcc9681 is now 5 (2m20.349535771s elapsed)
    STEP: deleting the pod 03/13/23 19:17:38.776
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:17:38.786: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-4313" for this suite. 03/13/23 19:17:38.791
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] Services
  should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:17:38.811
Mar 13 19:17:38.811: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 19:17:38.813
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:17:38.831
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:17:38.834
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428
STEP: creating a Service 03/13/23 19:17:38.844
STEP: watching for the Service to be added 03/13/23 19:17:38.855
Mar 13 19:17:38.863: INFO: Found Service test-service-wx8g8 in namespace services-8061 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Mar 13 19:17:38.866: INFO: Service test-service-wx8g8 created
STEP: Getting /status 03/13/23 19:17:38.866
Mar 13 19:17:38.873: INFO: Service test-service-wx8g8 has LoadBalancer: {[]}
STEP: patching the ServiceStatus 03/13/23 19:17:38.879
STEP: watching for the Service to be patched 03/13/23 19:17:38.887
Mar 13 19:17:38.897: INFO: observed Service test-service-wx8g8 in namespace services-8061 with annotations: map[] & LoadBalancer: {[]}
Mar 13 19:17:38.898: INFO: Found Service test-service-wx8g8 in namespace services-8061 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Mar 13 19:17:38.898: INFO: Service test-service-wx8g8 has service status patched
STEP: updating the ServiceStatus 03/13/23 19:17:38.898
Mar 13 19:17:38.906: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated 03/13/23 19:17:38.906
Mar 13 19:17:38.908: INFO: Observed Service test-service-wx8g8 in namespace services-8061 with annotations: map[] & Conditions: {[]}
Mar 13 19:17:38.908: INFO: Observed event: &Service{ObjectMeta:{test-service-wx8g8  services-8061  8bff8f26-d66a-46f4-a3bc-fc40132e2375 15827 0 2023-03-13 19:17:38 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-03-13 19:17:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-03-13 19:17:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.102.125.41,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.102.125.41],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Mar 13 19:17:38.909: INFO: Found Service test-service-wx8g8 in namespace services-8061 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Mar 13 19:17:38.909: INFO: Service test-service-wx8g8 has service status updated
STEP: patching the service 03/13/23 19:17:38.909
STEP: watching for the Service to be patched 03/13/23 19:17:38.926
Mar 13 19:17:38.928: INFO: observed Service test-service-wx8g8 in namespace services-8061 with labels: map[test-service-static:true]
Mar 13 19:17:38.928: INFO: observed Service test-service-wx8g8 in namespace services-8061 with labels: map[test-service-static:true]
Mar 13 19:17:38.928: INFO: observed Service test-service-wx8g8 in namespace services-8061 with labels: map[test-service-static:true]
Mar 13 19:17:38.928: INFO: Found Service test-service-wx8g8 in namespace services-8061 with labels: map[test-service:patched test-service-static:true]
Mar 13 19:17:38.928: INFO: Service test-service-wx8g8 patched
STEP: deleting the service 03/13/23 19:17:38.928
STEP: watching for the Service to be deleted 03/13/23 19:17:38.937
Mar 13 19:17:38.939: INFO: Observed event: ADDED
Mar 13 19:17:38.942: INFO: Observed event: MODIFIED
Mar 13 19:17:38.942: INFO: Observed event: MODIFIED
Mar 13 19:17:38.943: INFO: Observed event: MODIFIED
Mar 13 19:17:38.943: INFO: Found Service test-service-wx8g8 in namespace services-8061 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Mar 13 19:17:38.943: INFO: Service test-service-wx8g8 deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 19:17:38.944: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-8061" for this suite. 03/13/23 19:17:38.953
------------------------------
â€¢ [0.147 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:17:38.811
    Mar 13 19:17:38.811: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 19:17:38.813
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:17:38.831
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:17:38.834
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should complete a service status lifecycle [Conformance]
      test/e2e/network/service.go:3428
    STEP: creating a Service 03/13/23 19:17:38.844
    STEP: watching for the Service to be added 03/13/23 19:17:38.855
    Mar 13 19:17:38.863: INFO: Found Service test-service-wx8g8 in namespace services-8061 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
    Mar 13 19:17:38.866: INFO: Service test-service-wx8g8 created
    STEP: Getting /status 03/13/23 19:17:38.866
    Mar 13 19:17:38.873: INFO: Service test-service-wx8g8 has LoadBalancer: {[]}
    STEP: patching the ServiceStatus 03/13/23 19:17:38.879
    STEP: watching for the Service to be patched 03/13/23 19:17:38.887
    Mar 13 19:17:38.897: INFO: observed Service test-service-wx8g8 in namespace services-8061 with annotations: map[] & LoadBalancer: {[]}
    Mar 13 19:17:38.898: INFO: Found Service test-service-wx8g8 in namespace services-8061 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
    Mar 13 19:17:38.898: INFO: Service test-service-wx8g8 has service status patched
    STEP: updating the ServiceStatus 03/13/23 19:17:38.898
    Mar 13 19:17:38.906: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the Service to be updated 03/13/23 19:17:38.906
    Mar 13 19:17:38.908: INFO: Observed Service test-service-wx8g8 in namespace services-8061 with annotations: map[] & Conditions: {[]}
    Mar 13 19:17:38.908: INFO: Observed event: &Service{ObjectMeta:{test-service-wx8g8  services-8061  8bff8f26-d66a-46f4-a3bc-fc40132e2375 15827 0 2023-03-13 19:17:38 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-03-13 19:17:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-03-13 19:17:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.102.125.41,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.102.125.41],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
    Mar 13 19:17:38.909: INFO: Found Service test-service-wx8g8 in namespace services-8061 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Mar 13 19:17:38.909: INFO: Service test-service-wx8g8 has service status updated
    STEP: patching the service 03/13/23 19:17:38.909
    STEP: watching for the Service to be patched 03/13/23 19:17:38.926
    Mar 13 19:17:38.928: INFO: observed Service test-service-wx8g8 in namespace services-8061 with labels: map[test-service-static:true]
    Mar 13 19:17:38.928: INFO: observed Service test-service-wx8g8 in namespace services-8061 with labels: map[test-service-static:true]
    Mar 13 19:17:38.928: INFO: observed Service test-service-wx8g8 in namespace services-8061 with labels: map[test-service-static:true]
    Mar 13 19:17:38.928: INFO: Found Service test-service-wx8g8 in namespace services-8061 with labels: map[test-service:patched test-service-static:true]
    Mar 13 19:17:38.928: INFO: Service test-service-wx8g8 patched
    STEP: deleting the service 03/13/23 19:17:38.928
    STEP: watching for the Service to be deleted 03/13/23 19:17:38.937
    Mar 13 19:17:38.939: INFO: Observed event: ADDED
    Mar 13 19:17:38.942: INFO: Observed event: MODIFIED
    Mar 13 19:17:38.942: INFO: Observed event: MODIFIED
    Mar 13 19:17:38.943: INFO: Observed event: MODIFIED
    Mar 13 19:17:38.943: INFO: Found Service test-service-wx8g8 in namespace services-8061 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
    Mar 13 19:17:38.943: INFO: Service test-service-wx8g8 deleted
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:17:38.944: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-8061" for this suite. 03/13/23 19:17:38.953
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:347
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:17:38.958
Mar 13 19:17:38.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename security-context-test 03/13/23 19:17:38.959
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:17:38.969
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:17:38.972
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:347
Mar 13 19:17:38.984: INFO: Waiting up to 5m0s for pod "busybox-user-65534-4b3f6b02-a97a-4392-bb06-23a5ffd63844" in namespace "security-context-test-207" to be "Succeeded or Failed"
Mar 13 19:17:39.002: INFO: Pod "busybox-user-65534-4b3f6b02-a97a-4392-bb06-23a5ffd63844": Phase="Pending", Reason="", readiness=false. Elapsed: 13.973678ms
Mar 13 19:17:41.011: INFO: Pod "busybox-user-65534-4b3f6b02-a97a-4392-bb06-23a5ffd63844": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022877598s
Mar 13 19:17:43.011: INFO: Pod "busybox-user-65534-4b3f6b02-a97a-4392-bb06-23a5ffd63844": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023214545s
Mar 13 19:17:43.011: INFO: Pod "busybox-user-65534-4b3f6b02-a97a-4392-bb06-23a5ffd63844" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Mar 13 19:17:43.011: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-207" for this suite. 03/13/23 19:17:43.016
------------------------------
â€¢ [4.062 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a container with runAsUser
  test/e2e/common/node/security_context.go:309
    should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:347

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:17:38.958
    Mar 13 19:17:38.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename security-context-test 03/13/23 19:17:38.959
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:17:38.969
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:17:38.972
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:347
    Mar 13 19:17:38.984: INFO: Waiting up to 5m0s for pod "busybox-user-65534-4b3f6b02-a97a-4392-bb06-23a5ffd63844" in namespace "security-context-test-207" to be "Succeeded or Failed"
    Mar 13 19:17:39.002: INFO: Pod "busybox-user-65534-4b3f6b02-a97a-4392-bb06-23a5ffd63844": Phase="Pending", Reason="", readiness=false. Elapsed: 13.973678ms
    Mar 13 19:17:41.011: INFO: Pod "busybox-user-65534-4b3f6b02-a97a-4392-bb06-23a5ffd63844": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022877598s
    Mar 13 19:17:43.011: INFO: Pod "busybox-user-65534-4b3f6b02-a97a-4392-bb06-23a5ffd63844": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023214545s
    Mar 13 19:17:43.011: INFO: Pod "busybox-user-65534-4b3f6b02-a97a-4392-bb06-23a5ffd63844" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:17:43.011: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-207" for this suite. 03/13/23 19:17:43.016
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:17:43.021
Mar 13 19:17:43.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename secrets 03/13/23 19:17:43.022
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:17:43.031
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:17:43.034
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar 13 19:17:43.066: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-3353" for this suite. 03/13/23 19:17:43.07
------------------------------
â€¢ [0.054 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:17:43.021
    Mar 13 19:17:43.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename secrets 03/13/23 19:17:43.022
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:17:43.031
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:17:43.034
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be immutable if `immutable` field is set [Conformance]
      test/e2e/common/storage/secrets_volume.go:386
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:17:43.066: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-3353" for this suite. 03/13/23 19:17:43.07
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:17:43.084
Mar 13 19:17:43.084: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:17:43.085
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:17:43.101
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:17:43.104
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109
STEP: Creating configMap with name projected-configmap-test-volume-map-2e53186a-9280-4755-aded-c312f4782cdf 03/13/23 19:17:43.108
STEP: Creating a pod to test consume configMaps 03/13/23 19:17:43.112
Mar 13 19:17:43.119: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac" in namespace "projected-8149" to be "Succeeded or Failed"
Mar 13 19:17:43.122: INFO: Pod "pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac": Phase="Pending", Reason="", readiness=false. Elapsed: 2.578415ms
Mar 13 19:17:45.126: INFO: Pod "pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006433895s
Mar 13 19:17:47.127: INFO: Pod "pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008087778s
STEP: Saw pod success 03/13/23 19:17:47.127
Mar 13 19:17:47.127: INFO: Pod "pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac" satisfied condition "Succeeded or Failed"
Mar 13 19:17:47.131: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac container agnhost-container: <nil>
STEP: delete the pod 03/13/23 19:17:47.157
Mar 13 19:17:47.166: INFO: Waiting for pod pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac to disappear
Mar 13 19:17:47.168: INFO: Pod pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:17:47.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8149" for this suite. 03/13/23 19:17:47.172
------------------------------
â€¢ [4.092 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:17:43.084
    Mar 13 19:17:43.084: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:17:43.085
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:17:43.101
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:17:43.104
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:109
    STEP: Creating configMap with name projected-configmap-test-volume-map-2e53186a-9280-4755-aded-c312f4782cdf 03/13/23 19:17:43.108
    STEP: Creating a pod to test consume configMaps 03/13/23 19:17:43.112
    Mar 13 19:17:43.119: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac" in namespace "projected-8149" to be "Succeeded or Failed"
    Mar 13 19:17:43.122: INFO: Pod "pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac": Phase="Pending", Reason="", readiness=false. Elapsed: 2.578415ms
    Mar 13 19:17:45.126: INFO: Pod "pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006433895s
    Mar 13 19:17:47.127: INFO: Pod "pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008087778s
    STEP: Saw pod success 03/13/23 19:17:47.127
    Mar 13 19:17:47.127: INFO: Pod "pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac" satisfied condition "Succeeded or Failed"
    Mar 13 19:17:47.131: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 19:17:47.157
    Mar 13 19:17:47.166: INFO: Waiting for pod pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac to disappear
    Mar 13 19:17:47.168: INFO: Pod pod-projected-configmaps-73a56458-e2d7-4390-83d3-0655288f5dac no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:17:47.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8149" for this suite. 03/13/23 19:17:47.172
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:17:47.178
Mar 13 19:17:47.178: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename resourcequota 03/13/23 19:17:47.179
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:17:47.189
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:17:47.192
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448
STEP: Counting existing ResourceQuota 03/13/23 19:17:47.197
STEP: Creating a ResourceQuota 03/13/23 19:17:52.199
STEP: Ensuring resource quota status is calculated 03/13/23 19:17:52.204
STEP: Creating a ReplicaSet 03/13/23 19:17:54.21
STEP: Ensuring resource quota status captures replicaset creation 03/13/23 19:17:54.222
STEP: Deleting a ReplicaSet 03/13/23 19:17:56.227
STEP: Ensuring resource quota status released usage 03/13/23 19:17:56.232
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar 13 19:17:58.237: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-962" for this suite. 03/13/23 19:17:58.241
------------------------------
â€¢ [SLOW TEST] [11.068 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:17:47.178
    Mar 13 19:17:47.178: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename resourcequota 03/13/23 19:17:47.179
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:17:47.189
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:17:47.192
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
      test/e2e/apimachinery/resource_quota.go:448
    STEP: Counting existing ResourceQuota 03/13/23 19:17:47.197
    STEP: Creating a ResourceQuota 03/13/23 19:17:52.199
    STEP: Ensuring resource quota status is calculated 03/13/23 19:17:52.204
    STEP: Creating a ReplicaSet 03/13/23 19:17:54.21
    STEP: Ensuring resource quota status captures replicaset creation 03/13/23 19:17:54.222
    STEP: Deleting a ReplicaSet 03/13/23 19:17:56.227
    STEP: Ensuring resource quota status released usage 03/13/23 19:17:56.232
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:17:58.237: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-962" for this suite. 03/13/23 19:17:58.241
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/kubectl/kubectl.go:1276
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:17:58.246
Mar 13 19:17:58.246: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 19:17:58.247
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:17:58.257
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:17:58.261
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/kubectl/kubectl.go:1276
Mar 13 19:17:58.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 create -f -'
Mar 13 19:17:58.518: INFO: stderr: ""
Mar 13 19:17:58.518: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Mar 13 19:17:58.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 create -f -'
Mar 13 19:17:58.790: INFO: stderr: ""
Mar 13 19:17:58.790: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 03/13/23 19:17:58.79
Mar 13 19:17:59.800: INFO: Selector matched 1 pods for map[app:agnhost]
Mar 13 19:17:59.800: INFO: Found 1 / 1
Mar 13 19:17:59.800: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Mar 13 19:17:59.804: INFO: Selector matched 1 pods for map[app:agnhost]
Mar 13 19:17:59.804: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Mar 13 19:17:59.804: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 describe pod agnhost-primary-7rn4n'
Mar 13 19:17:59.909: INFO: stderr: ""
Mar 13 19:17:59.909: INFO: stdout: "Name:             agnhost-primary-7rn4n\nNamespace:        kubectl-7469\nPriority:         0\nService Account:  default\nNode:             vke-automated-test-51df1d4fb06e/10.1.96.5\nStart Time:       Mon, 13 Mar 2023 19:17:58 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: d24e23ea85297161f792d10e654c63bc43a1830b4bd72151610a4b2bc661ef35\n                  cni.projectcalico.org/podIP: 10.244.181.171/32\n                  cni.projectcalico.org/podIPs: 10.244.181.171/32,2001:db8:42:1f:e556:e398:18f3:c265/128\nStatus:           Running\nIP:               10.244.181.171\nIPs:\n  IP:           10.244.181.171\n  IP:           2001:db8:42:1f:e556:e398:18f3:c265\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://e3ac3315630a6b18ff5d4d0a49ad6230b7b9b1ea177d996fe74d2b4b805c68ec\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.43\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 13 Mar 2023 19:17:59 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-sxzkz (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-sxzkz:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-7469/agnhost-primary-7rn4n to vke-automated-test-51df1d4fb06e\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.43\" already present on machine\n  Normal  Created    0s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
Mar 13 19:17:59.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 describe rc agnhost-primary'
Mar 13 19:18:00.019: INFO: stderr: ""
Mar 13 19:18:00.019: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7469\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.43\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-7rn4n\n"
Mar 13 19:18:00.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 describe service agnhost-primary'
Mar 13 19:18:00.109: INFO: stderr: ""
Mar 13 19:18:00.109: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-7469\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.99.216.199\nIPs:               10.99.216.199\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.181.171:6379\nSession Affinity:  None\nEvents:            <none>\n"
Mar 13 19:18:00.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 describe node vke-automated-test-51df1d4fb06e'
Mar 13 19:18:00.263: INFO: stderr: ""
Mar 13 19:18:00.263: INFO: stdout: "Name:               vke-automated-test-51df1d4fb06e\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=vc2-2c-4gb\n                    beta.kubernetes.io/os=linux\n                    failure-domain.beta.kubernetes.io/region=ewr\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=vke-automated-test-51df1d4fb06e\n                    kubernetes.io/os=linux\n                    node.kubernetes.io/instance-type=vc2-2c-4gb\n                    region=EWR\n                    topology.kubernetes.io/region=ewr\n                    vke.vultr.com/gpu=false\n                    vke.vultr.com/node-id=dd0ba2e9-5b8e-4836-a86d-628482802cc3\n                    vke.vultr.com/node-pool=vke-automated-test\n                    vke.vultr.com/node-pool-id=0db41a68-2b8d-4e78-b4e3-9dc0463fa198\n                    vke.vultr.com/version=v1.26.2-1\nAnnotations:        csi.volume.kubernetes.io/nodeid: {\"block.csi.vultr.com\":\"dd0ba2e9-5b8e-4836-a86d-628482802cc3\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 10.1.96.5/8\n                    projectcalico.org/IPv4IPIPTunnelAddr: 10.244.181.128\n                    projectcalico.org/IPv6Address: 2001:19f0:1000:1cc7:5400:4ff:fe58:a85a/64\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 13 Mar 2023 18:38:24 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  vke-automated-test-51df1d4fb06e\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 13 Mar 2023 19:17:52 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 13 Mar 2023 18:39:04 +0000   Mon, 13 Mar 2023 18:39:04 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Mon, 13 Mar 2023 19:14:18 +0000   Mon, 13 Mar 2023 18:38:24 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 13 Mar 2023 19:14:18 +0000   Mon, 13 Mar 2023 18:38:24 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 13 Mar 2023 19:14:18 +0000   Mon, 13 Mar 2023 18:38:24 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 13 Mar 2023 19:14:18 +0000   Mon, 13 Mar 2023 18:38:53 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  Hostname:    vke-automated-test-51df1d4fb06e\n  InternalIP:  10.1.96.5\n  ExternalIP:  108.61.86.248\n  ExternalIP:  2001:19f0:1000:1cc7:5400:04ff:fe58:a85a\nCapacity:\n  cpu:                2\n  ephemeral-storage:  78668884Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             4025820Ki\n  pods:               110\nAllocatable:\n  cpu:                1800m\n  ephemeral-storage:  78668884Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3309020Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 b18a1d96655843879dbf447e796f9cb9\n  System UUID:                590dbd64-9868-4e4b-8bcd-e62816651d28\n  Boot ID:                    6c620983-bc48-4e61-984b-365163e0fce3\n  Kernel Version:             5.10.0-21-amd64\n  OS Image:                   Debian GNU/Linux 11 (bullseye)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.19\n  Kubelet Version:            v1.26.2\n  Kube-Proxy Version:         v1.26.2\nProviderID:                   vultr://dd0ba2e9-5b8e-4836-a86d-628482802cc3\nNon-terminated Pods:          (7 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-xs2jj                                          250m (13%)    0 (0%)      0 (0%)           0 (0%)         39m\n  kube-system                 csi-vultr-node-c4r8q                                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         7m30s\n  kube-system                 konnectivity-agent-k6k6r                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         7m29s\n  kubectl-7469                agnhost-primary-7rn4n                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         38m\n  sonobuoy                    sonobuoy-e2e-job-c23108cbbd714118                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         38m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-6xtp8    0 (0%)        0 (0%)      0 (0%)           0 (0%)         38m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (13%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From                   Message\n  ----     ------                   ----               ----                   -------\n  Normal   Starting                 39m                kube-proxy             \n  Normal   Starting                 39m                kubelet                Starting kubelet.\n  Warning  InvalidDiskCapacity      39m                kubelet                invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  39m                kubelet                Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    39m (x7 over 39m)  kubelet                Node vke-automated-test-51df1d4fb06e status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     39m (x7 over 39m)  kubelet                Node vke-automated-test-51df1d4fb06e status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  39m (x8 over 39m)  kubelet                Node vke-automated-test-51df1d4fb06e status is now: NodeHasSufficientMemory\n  Normal   Synced                   39m                cloud-node-controller  Node synced successfully\n  Normal   RegisteredNode           39m                node-controller        Node vke-automated-test-51df1d4fb06e event: Registered Node vke-automated-test-51df1d4fb06e in Controller\n"
Mar 13 19:18:00.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 describe namespace kubectl-7469'
Mar 13 19:18:00.385: INFO: stderr: ""
Mar 13 19:18:00.385: INFO: stdout: "Name:         kubectl-7469\nLabels:       e2e-framework=kubectl\n              e2e-run=fc5c0549-5916-43cc-b1a7-d8d6fc91ff6c\n              kubernetes.io/metadata.name=kubectl-7469\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 19:18:00.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-7469" for this suite. 03/13/23 19:18:00.393
------------------------------
â€¢ [2.164 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl describe
  test/e2e/kubectl/kubectl.go:1270
    should check if kubectl describe prints relevant information for rc and pods  [Conformance]
    test/e2e/kubectl/kubectl.go:1276

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:17:58.246
    Mar 13 19:17:58.246: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 19:17:58.247
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:17:58.257
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:17:58.261
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
      test/e2e/kubectl/kubectl.go:1276
    Mar 13 19:17:58.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 create -f -'
    Mar 13 19:17:58.518: INFO: stderr: ""
    Mar 13 19:17:58.518: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    Mar 13 19:17:58.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 create -f -'
    Mar 13 19:17:58.790: INFO: stderr: ""
    Mar 13 19:17:58.790: INFO: stdout: "service/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 03/13/23 19:17:58.79
    Mar 13 19:17:59.800: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar 13 19:17:59.800: INFO: Found 1 / 1
    Mar 13 19:17:59.800: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    Mar 13 19:17:59.804: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar 13 19:17:59.804: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Mar 13 19:17:59.804: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 describe pod agnhost-primary-7rn4n'
    Mar 13 19:17:59.909: INFO: stderr: ""
    Mar 13 19:17:59.909: INFO: stdout: "Name:             agnhost-primary-7rn4n\nNamespace:        kubectl-7469\nPriority:         0\nService Account:  default\nNode:             vke-automated-test-51df1d4fb06e/10.1.96.5\nStart Time:       Mon, 13 Mar 2023 19:17:58 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: d24e23ea85297161f792d10e654c63bc43a1830b4bd72151610a4b2bc661ef35\n                  cni.projectcalico.org/podIP: 10.244.181.171/32\n                  cni.projectcalico.org/podIPs: 10.244.181.171/32,2001:db8:42:1f:e556:e398:18f3:c265/128\nStatus:           Running\nIP:               10.244.181.171\nIPs:\n  IP:           10.244.181.171\n  IP:           2001:db8:42:1f:e556:e398:18f3:c265\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://e3ac3315630a6b18ff5d4d0a49ad6230b7b9b1ea177d996fe74d2b4b805c68ec\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.43\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 13 Mar 2023 19:17:59 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-sxzkz (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-sxzkz:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-7469/agnhost-primary-7rn4n to vke-automated-test-51df1d4fb06e\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.43\" already present on machine\n  Normal  Created    0s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
    Mar 13 19:17:59.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 describe rc agnhost-primary'
    Mar 13 19:18:00.019: INFO: stderr: ""
    Mar 13 19:18:00.019: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7469\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.43\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-7rn4n\n"
    Mar 13 19:18:00.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 describe service agnhost-primary'
    Mar 13 19:18:00.109: INFO: stderr: ""
    Mar 13 19:18:00.109: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-7469\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.99.216.199\nIPs:               10.99.216.199\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.181.171:6379\nSession Affinity:  None\nEvents:            <none>\n"
    Mar 13 19:18:00.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 describe node vke-automated-test-51df1d4fb06e'
    Mar 13 19:18:00.263: INFO: stderr: ""
    Mar 13 19:18:00.263: INFO: stdout: "Name:               vke-automated-test-51df1d4fb06e\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=vc2-2c-4gb\n                    beta.kubernetes.io/os=linux\n                    failure-domain.beta.kubernetes.io/region=ewr\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=vke-automated-test-51df1d4fb06e\n                    kubernetes.io/os=linux\n                    node.kubernetes.io/instance-type=vc2-2c-4gb\n                    region=EWR\n                    topology.kubernetes.io/region=ewr\n                    vke.vultr.com/gpu=false\n                    vke.vultr.com/node-id=dd0ba2e9-5b8e-4836-a86d-628482802cc3\n                    vke.vultr.com/node-pool=vke-automated-test\n                    vke.vultr.com/node-pool-id=0db41a68-2b8d-4e78-b4e3-9dc0463fa198\n                    vke.vultr.com/version=v1.26.2-1\nAnnotations:        csi.volume.kubernetes.io/nodeid: {\"block.csi.vultr.com\":\"dd0ba2e9-5b8e-4836-a86d-628482802cc3\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 10.1.96.5/8\n                    projectcalico.org/IPv4IPIPTunnelAddr: 10.244.181.128\n                    projectcalico.org/IPv6Address: 2001:19f0:1000:1cc7:5400:4ff:fe58:a85a/64\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 13 Mar 2023 18:38:24 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  vke-automated-test-51df1d4fb06e\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 13 Mar 2023 19:17:52 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 13 Mar 2023 18:39:04 +0000   Mon, 13 Mar 2023 18:39:04 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Mon, 13 Mar 2023 19:14:18 +0000   Mon, 13 Mar 2023 18:38:24 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 13 Mar 2023 19:14:18 +0000   Mon, 13 Mar 2023 18:38:24 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 13 Mar 2023 19:14:18 +0000   Mon, 13 Mar 2023 18:38:24 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 13 Mar 2023 19:14:18 +0000   Mon, 13 Mar 2023 18:38:53 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  Hostname:    vke-automated-test-51df1d4fb06e\n  InternalIP:  10.1.96.5\n  ExternalIP:  108.61.86.248\n  ExternalIP:  2001:19f0:1000:1cc7:5400:04ff:fe58:a85a\nCapacity:\n  cpu:                2\n  ephemeral-storage:  78668884Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             4025820Ki\n  pods:               110\nAllocatable:\n  cpu:                1800m\n  ephemeral-storage:  78668884Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3309020Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 b18a1d96655843879dbf447e796f9cb9\n  System UUID:                590dbd64-9868-4e4b-8bcd-e62816651d28\n  Boot ID:                    6c620983-bc48-4e61-984b-365163e0fce3\n  Kernel Version:             5.10.0-21-amd64\n  OS Image:                   Debian GNU/Linux 11 (bullseye)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.19\n  Kubelet Version:            v1.26.2\n  Kube-Proxy Version:         v1.26.2\nProviderID:                   vultr://dd0ba2e9-5b8e-4836-a86d-628482802cc3\nNon-terminated Pods:          (7 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-xs2jj                                          250m (13%)    0 (0%)      0 (0%)           0 (0%)         39m\n  kube-system                 csi-vultr-node-c4r8q                                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         7m30s\n  kube-system                 konnectivity-agent-k6k6r                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         7m29s\n  kubectl-7469                agnhost-primary-7rn4n                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         38m\n  sonobuoy                    sonobuoy-e2e-job-c23108cbbd714118                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         38m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-6xtp8    0 (0%)        0 (0%)      0 (0%)           0 (0%)         38m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (13%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From                   Message\n  ----     ------                   ----               ----                   -------\n  Normal   Starting                 39m                kube-proxy             \n  Normal   Starting                 39m                kubelet                Starting kubelet.\n  Warning  InvalidDiskCapacity      39m                kubelet                invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  39m                kubelet                Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    39m (x7 over 39m)  kubelet                Node vke-automated-test-51df1d4fb06e status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     39m (x7 over 39m)  kubelet                Node vke-automated-test-51df1d4fb06e status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  39m (x8 over 39m)  kubelet                Node vke-automated-test-51df1d4fb06e status is now: NodeHasSufficientMemory\n  Normal   Synced                   39m                cloud-node-controller  Node synced successfully\n  Normal   RegisteredNode           39m                node-controller        Node vke-automated-test-51df1d4fb06e event: Registered Node vke-automated-test-51df1d4fb06e in Controller\n"
    Mar 13 19:18:00.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7469 describe namespace kubectl-7469'
    Mar 13 19:18:00.385: INFO: stderr: ""
    Mar 13 19:18:00.385: INFO: stdout: "Name:         kubectl-7469\nLabels:       e2e-framework=kubectl\n              e2e-run=fc5c0549-5916-43cc-b1a7-d8d6fc91ff6c\n              kubernetes.io/metadata.name=kubectl-7469\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:18:00.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-7469" for this suite. 03/13/23 19:18:00.393
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:18:00.413
Mar 13 19:18:00.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename dns 03/13/23 19:18:00.414
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:00.443
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:00.449
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
 03/13/23 19:18:00.456
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
 03/13/23 19:18:00.456
STEP: creating a pod to probe DNS 03/13/23 19:18:00.457
STEP: submitting the pod to kubernetes 03/13/23 19:18:00.457
Mar 13 19:18:00.469: INFO: Waiting up to 15m0s for pod "dns-test-d9880dd3-9bed-4686-9639-c1c5ed8425ae" in namespace "dns-2478" to be "running"
Mar 13 19:18:00.476: INFO: Pod "dns-test-d9880dd3-9bed-4686-9639-c1c5ed8425ae": Phase="Pending", Reason="", readiness=false. Elapsed: 7.2848ms
Mar 13 19:18:02.497: INFO: Pod "dns-test-d9880dd3-9bed-4686-9639-c1c5ed8425ae": Phase="Running", Reason="", readiness=true. Elapsed: 2.028226307s
Mar 13 19:18:02.497: INFO: Pod "dns-test-d9880dd3-9bed-4686-9639-c1c5ed8425ae" satisfied condition "running"
STEP: retrieving the pod 03/13/23 19:18:02.497
STEP: looking for the results for each expected name from probers 03/13/23 19:18:02.505
Mar 13 19:18:02.617: INFO: DNS probes using dns-2478/dns-test-d9880dd3-9bed-4686-9639-c1c5ed8425ae succeeded

STEP: deleting the pod 03/13/23 19:18:02.617
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar 13 19:18:02.660: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-2478" for this suite. 03/13/23 19:18:02.67
------------------------------
â€¢ [2.284 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:18:00.413
    Mar 13 19:18:00.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename dns 03/13/23 19:18:00.414
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:00.443
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:00.449
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for the cluster  [Conformance]
      test/e2e/network/dns.go:50
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
     03/13/23 19:18:00.456
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
     03/13/23 19:18:00.456
    STEP: creating a pod to probe DNS 03/13/23 19:18:00.457
    STEP: submitting the pod to kubernetes 03/13/23 19:18:00.457
    Mar 13 19:18:00.469: INFO: Waiting up to 15m0s for pod "dns-test-d9880dd3-9bed-4686-9639-c1c5ed8425ae" in namespace "dns-2478" to be "running"
    Mar 13 19:18:00.476: INFO: Pod "dns-test-d9880dd3-9bed-4686-9639-c1c5ed8425ae": Phase="Pending", Reason="", readiness=false. Elapsed: 7.2848ms
    Mar 13 19:18:02.497: INFO: Pod "dns-test-d9880dd3-9bed-4686-9639-c1c5ed8425ae": Phase="Running", Reason="", readiness=true. Elapsed: 2.028226307s
    Mar 13 19:18:02.497: INFO: Pod "dns-test-d9880dd3-9bed-4686-9639-c1c5ed8425ae" satisfied condition "running"
    STEP: retrieving the pod 03/13/23 19:18:02.497
    STEP: looking for the results for each expected name from probers 03/13/23 19:18:02.505
    Mar 13 19:18:02.617: INFO: DNS probes using dns-2478/dns-test-d9880dd3-9bed-4686-9639-c1c5ed8425ae succeeded

    STEP: deleting the pod 03/13/23 19:18:02.617
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:18:02.660: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-2478" for this suite. 03/13/23 19:18:02.67
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:18:02.737
Mar 13 19:18:02.737: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:18:02.739
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:02.823
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:02.835
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249
STEP: Creating a pod to test downward API volume plugin 03/13/23 19:18:02.841
Mar 13 19:18:02.864: INFO: Waiting up to 5m0s for pod "downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6" in namespace "projected-8862" to be "Succeeded or Failed"
Mar 13 19:18:02.880: INFO: Pod "downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6": Phase="Pending", Reason="", readiness=false. Elapsed: 15.053981ms
Mar 13 19:18:04.886: INFO: Pod "downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021531558s
Mar 13 19:18:06.885: INFO: Pod "downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020797451s
STEP: Saw pod success 03/13/23 19:18:06.885
Mar 13 19:18:06.886: INFO: Pod "downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6" satisfied condition "Succeeded or Failed"
Mar 13 19:18:06.889: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6 container client-container: <nil>
STEP: delete the pod 03/13/23 19:18:06.904
Mar 13 19:18:06.923: INFO: Waiting for pod downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6 to disappear
Mar 13 19:18:06.926: INFO: Pod downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar 13 19:18:06.926: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8862" for this suite. 03/13/23 19:18:06.933
------------------------------
â€¢ [4.208 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:18:02.737
    Mar 13 19:18:02.737: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:18:02.739
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:02.823
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:02.835
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:249
    STEP: Creating a pod to test downward API volume plugin 03/13/23 19:18:02.841
    Mar 13 19:18:02.864: INFO: Waiting up to 5m0s for pod "downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6" in namespace "projected-8862" to be "Succeeded or Failed"
    Mar 13 19:18:02.880: INFO: Pod "downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6": Phase="Pending", Reason="", readiness=false. Elapsed: 15.053981ms
    Mar 13 19:18:04.886: INFO: Pod "downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021531558s
    Mar 13 19:18:06.885: INFO: Pod "downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020797451s
    STEP: Saw pod success 03/13/23 19:18:06.885
    Mar 13 19:18:06.886: INFO: Pod "downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6" satisfied condition "Succeeded or Failed"
    Mar 13 19:18:06.889: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6 container client-container: <nil>
    STEP: delete the pod 03/13/23 19:18:06.904
    Mar 13 19:18:06.923: INFO: Waiting for pod downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6 to disappear
    Mar 13 19:18:06.926: INFO: Pod downwardapi-volume-053eff67-48bf-4090-be60-52b54570ecc6 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:18:06.926: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8862" for this suite. 03/13/23 19:18:06.933
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:18:06.952
Mar 13 19:18:06.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 19:18:06.953
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:06.991
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:06.997
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 19:18:07.038
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:18:07.739
STEP: Deploying the webhook pod 03/13/23 19:18:07.758
STEP: Wait for the deployment to be ready 03/13/23 19:18:07.777
Mar 13 19:18:07.819: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/13/23 19:18:09.835
STEP: Verifying the service has paired with the endpoint 03/13/23 19:18:09.854
Mar 13 19:18:10.855: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323
Mar 13 19:18:10.867: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5375-crds.webhook.example.com via the AdmissionRegistration API 03/13/23 19:18:11.42
STEP: Creating a custom resource while v1 is storage version 03/13/23 19:18:11.467
STEP: Patching Custom Resource Definition to set v2 as storage 03/13/23 19:18:13.511
STEP: Patching the custom resource while v2 is storage version 03/13/23 19:18:13.534
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:18:14.155: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-5793" for this suite. 03/13/23 19:18:14.213
STEP: Destroying namespace "webhook-5793-markers" for this suite. 03/13/23 19:18:14.23
------------------------------
â€¢ [SLOW TEST] [7.293 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:18:06.952
    Mar 13 19:18:06.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 19:18:06.953
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:06.991
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:06.997
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 19:18:07.038
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:18:07.739
    STEP: Deploying the webhook pod 03/13/23 19:18:07.758
    STEP: Wait for the deployment to be ready 03/13/23 19:18:07.777
    Mar 13 19:18:07.819: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/13/23 19:18:09.835
    STEP: Verifying the service has paired with the endpoint 03/13/23 19:18:09.854
    Mar 13 19:18:10.855: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource with different stored version [Conformance]
      test/e2e/apimachinery/webhook.go:323
    Mar 13 19:18:10.867: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5375-crds.webhook.example.com via the AdmissionRegistration API 03/13/23 19:18:11.42
    STEP: Creating a custom resource while v1 is storage version 03/13/23 19:18:11.467
    STEP: Patching Custom Resource Definition to set v2 as storage 03/13/23 19:18:13.511
    STEP: Patching the custom resource while v2 is storage version 03/13/23 19:18:13.534
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:18:14.155: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-5793" for this suite. 03/13/23 19:18:14.213
    STEP: Destroying namespace "webhook-5793-markers" for this suite. 03/13/23 19:18:14.23
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:18:14.336
Mar 13 19:18:14.341: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename watch 03/13/23 19:18:14.342
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:14.387
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:14.393
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334
STEP: getting a starting resourceVersion 03/13/23 19:18:14.398
STEP: starting a background goroutine to produce watch events 03/13/23 19:18:14.401
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order 03/13/23 19:18:14.401
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Mar 13 19:18:17.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-5143" for this suite. 03/13/23 19:18:17.217
------------------------------
â€¢ [2.931 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:18:14.336
    Mar 13 19:18:14.341: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename watch 03/13/23 19:18:14.342
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:14.387
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:14.393
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should receive events on concurrent watches in same order [Conformance]
      test/e2e/apimachinery/watch.go:334
    STEP: getting a starting resourceVersion 03/13/23 19:18:14.398
    STEP: starting a background goroutine to produce watch events 03/13/23 19:18:14.401
    STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order 03/13/23 19:18:14.401
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:18:17.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-5143" for this suite. 03/13/23 19:18:17.217
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:18:17.269
Mar 13 19:18:17.269: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename resourcequota 03/13/23 19:18:17.27
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:17.281
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:17.284
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100
STEP: Counting existing ResourceQuota 03/13/23 19:18:17.287
STEP: Creating a ResourceQuota 03/13/23 19:18:22.29
STEP: Ensuring resource quota status is calculated 03/13/23 19:18:22.294
STEP: Creating a Service 03/13/23 19:18:24.302
STEP: Creating a NodePort Service 03/13/23 19:18:24.326
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota 03/13/23 19:18:24.34
STEP: Ensuring resource quota status captures service creation 03/13/23 19:18:24.353
STEP: Deleting Services 03/13/23 19:18:26.358
STEP: Ensuring resource quota status released usage 03/13/23 19:18:26.377
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar 13 19:18:28.382: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-4396" for this suite. 03/13/23 19:18:28.386
------------------------------
â€¢ [SLOW TEST] [11.122 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:18:17.269
    Mar 13 19:18:17.269: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename resourcequota 03/13/23 19:18:17.27
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:17.281
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:17.284
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a service. [Conformance]
      test/e2e/apimachinery/resource_quota.go:100
    STEP: Counting existing ResourceQuota 03/13/23 19:18:17.287
    STEP: Creating a ResourceQuota 03/13/23 19:18:22.29
    STEP: Ensuring resource quota status is calculated 03/13/23 19:18:22.294
    STEP: Creating a Service 03/13/23 19:18:24.302
    STEP: Creating a NodePort Service 03/13/23 19:18:24.326
    STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota 03/13/23 19:18:24.34
    STEP: Ensuring resource quota status captures service creation 03/13/23 19:18:24.353
    STEP: Deleting Services 03/13/23 19:18:26.358
    STEP: Ensuring resource quota status released usage 03/13/23 19:18:26.377
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:18:28.382: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-4396" for this suite. 03/13/23 19:18:28.386
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:18:28.403
Mar 13 19:18:28.403: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 19:18:28.404
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:28.413
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:28.417
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423
STEP: Creating configMap with name configmap-test-volume-0a60287a-b90f-422c-bb4b-5ae7592f6ec4 03/13/23 19:18:28.42
STEP: Creating a pod to test consume configMaps 03/13/23 19:18:28.424
Mar 13 19:18:28.431: INFO: Waiting up to 5m0s for pod "pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28" in namespace "configmap-5284" to be "Succeeded or Failed"
Mar 13 19:18:28.433: INFO: Pod "pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28": Phase="Pending", Reason="", readiness=false. Elapsed: 2.387703ms
Mar 13 19:18:30.436: INFO: Pod "pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005204876s
Mar 13 19:18:32.436: INFO: Pod "pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005614045s
STEP: Saw pod success 03/13/23 19:18:32.436
Mar 13 19:18:32.437: INFO: Pod "pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28" satisfied condition "Succeeded or Failed"
Mar 13 19:18:32.440: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28 container configmap-volume-test: <nil>
STEP: delete the pod 03/13/23 19:18:32.459
Mar 13 19:18:32.466: INFO: Waiting for pod pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28 to disappear
Mar 13 19:18:32.468: INFO: Pod pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:18:32.468: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-5284" for this suite. 03/13/23 19:18:32.472
------------------------------
â€¢ [4.074 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:18:28.403
    Mar 13 19:18:28.403: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 19:18:28.404
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:28.413
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:28.417
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:423
    STEP: Creating configMap with name configmap-test-volume-0a60287a-b90f-422c-bb4b-5ae7592f6ec4 03/13/23 19:18:28.42
    STEP: Creating a pod to test consume configMaps 03/13/23 19:18:28.424
    Mar 13 19:18:28.431: INFO: Waiting up to 5m0s for pod "pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28" in namespace "configmap-5284" to be "Succeeded or Failed"
    Mar 13 19:18:28.433: INFO: Pod "pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28": Phase="Pending", Reason="", readiness=false. Elapsed: 2.387703ms
    Mar 13 19:18:30.436: INFO: Pod "pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005204876s
    Mar 13 19:18:32.436: INFO: Pod "pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005614045s
    STEP: Saw pod success 03/13/23 19:18:32.436
    Mar 13 19:18:32.437: INFO: Pod "pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28" satisfied condition "Succeeded or Failed"
    Mar 13 19:18:32.440: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28 container configmap-volume-test: <nil>
    STEP: delete the pod 03/13/23 19:18:32.459
    Mar 13 19:18:32.466: INFO: Waiting for pod pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28 to disappear
    Mar 13 19:18:32.468: INFO: Pod pod-configmaps-64860b90-9889-4651-98e5-44a80d5c8f28 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:18:32.468: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-5284" for this suite. 03/13/23 19:18:32.472
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:18:32.484
Mar 13 19:18:32.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-probe 03/13/23 19:18:32.485
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:32.493
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:32.496
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169
STEP: Creating pod liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d in namespace container-probe-1005 03/13/23 19:18:32.498
Mar 13 19:18:32.504: INFO: Waiting up to 5m0s for pod "liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d" in namespace "container-probe-1005" to be "not pending"
Mar 13 19:18:32.507: INFO: Pod "liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.55206ms
Mar 13 19:18:34.524: INFO: Pod "liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d": Phase="Running", Reason="", readiness=true. Elapsed: 2.020120103s
Mar 13 19:18:34.524: INFO: Pod "liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d" satisfied condition "not pending"
Mar 13 19:18:34.524: INFO: Started pod liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d in namespace container-probe-1005
STEP: checking the pod's current state and verifying that restartCount is present 03/13/23 19:18:34.524
Mar 13 19:18:34.527: INFO: Initial restart count of pod liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d is 0
Mar 13 19:18:54.572: INFO: Restart count of pod container-probe-1005/liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d is now 1 (20.045112491s elapsed)
STEP: deleting the pod 03/13/23 19:18:54.572
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar 13 19:18:54.581: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-1005" for this suite. 03/13/23 19:18:54.585
------------------------------
â€¢ [SLOW TEST] [22.117 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:18:32.484
    Mar 13 19:18:32.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-probe 03/13/23 19:18:32.485
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:32.493
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:32.496
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:169
    STEP: Creating pod liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d in namespace container-probe-1005 03/13/23 19:18:32.498
    Mar 13 19:18:32.504: INFO: Waiting up to 5m0s for pod "liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d" in namespace "container-probe-1005" to be "not pending"
    Mar 13 19:18:32.507: INFO: Pod "liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.55206ms
    Mar 13 19:18:34.524: INFO: Pod "liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d": Phase="Running", Reason="", readiness=true. Elapsed: 2.020120103s
    Mar 13 19:18:34.524: INFO: Pod "liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d" satisfied condition "not pending"
    Mar 13 19:18:34.524: INFO: Started pod liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d in namespace container-probe-1005
    STEP: checking the pod's current state and verifying that restartCount is present 03/13/23 19:18:34.524
    Mar 13 19:18:34.527: INFO: Initial restart count of pod liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d is 0
    Mar 13 19:18:54.572: INFO: Restart count of pod container-probe-1005/liveness-4e335b29-3462-4ce1-8e9c-99c617ce6a5d is now 1 (20.045112491s elapsed)
    STEP: deleting the pod 03/13/23 19:18:54.572
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:18:54.581: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-1005" for this suite. 03/13/23 19:18:54.585
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:18:54.609
Mar 13 19:18:54.609: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename dns 03/13/23 19:18:54.612
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:54.625
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:54.629
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333
STEP: Creating a test externalName service 03/13/23 19:18:54.635
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9060.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9060.svc.cluster.local; sleep 1; done
 03/13/23 19:18:54.641
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9060.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local; sleep 1; done
 03/13/23 19:18:54.641
STEP: creating a pod to probe DNS 03/13/23 19:18:54.642
STEP: submitting the pod to kubernetes 03/13/23 19:18:54.642
Mar 13 19:18:54.649: INFO: Waiting up to 15m0s for pod "dns-test-b4756bef-fae7-4135-b21e-3a8b295b471c" in namespace "dns-9060" to be "running"
Mar 13 19:18:54.652: INFO: Pod "dns-test-b4756bef-fae7-4135-b21e-3a8b295b471c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.346189ms
Mar 13 19:18:56.661: INFO: Pod "dns-test-b4756bef-fae7-4135-b21e-3a8b295b471c": Phase="Running", Reason="", readiness=true. Elapsed: 2.012109479s
Mar 13 19:18:56.661: INFO: Pod "dns-test-b4756bef-fae7-4135-b21e-3a8b295b471c" satisfied condition "running"
STEP: retrieving the pod 03/13/23 19:18:56.662
STEP: looking for the results for each expected name from probers 03/13/23 19:18:56.666
Mar 13 19:18:56.682: INFO: DNS probes using dns-test-b4756bef-fae7-4135-b21e-3a8b295b471c succeeded

STEP: deleting the pod 03/13/23 19:18:56.682
STEP: changing the externalName to bar.example.com 03/13/23 19:18:56.69
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9060.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9060.svc.cluster.local; sleep 1; done
 03/13/23 19:18:56.696
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9060.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local; sleep 1; done
 03/13/23 19:18:56.697
STEP: creating a second pod to probe DNS 03/13/23 19:18:56.697
STEP: submitting the pod to kubernetes 03/13/23 19:18:56.697
Mar 13 19:18:56.702: INFO: Waiting up to 15m0s for pod "dns-test-2fab1c82-058a-4358-8343-71d223275dbc" in namespace "dns-9060" to be "running"
Mar 13 19:18:56.709: INFO: Pod "dns-test-2fab1c82-058a-4358-8343-71d223275dbc": Phase="Pending", Reason="", readiness=false. Elapsed: 7.737643ms
Mar 13 19:18:58.714: INFO: Pod "dns-test-2fab1c82-058a-4358-8343-71d223275dbc": Phase="Running", Reason="", readiness=true. Elapsed: 2.012205017s
Mar 13 19:18:58.714: INFO: Pod "dns-test-2fab1c82-058a-4358-8343-71d223275dbc" satisfied condition "running"
STEP: retrieving the pod 03/13/23 19:18:58.714
STEP: looking for the results for each expected name from probers 03/13/23 19:18:58.717
Mar 13 19:18:58.725: INFO: File wheezy_udp@dns-test-service-3.dns-9060.svc.cluster.local from pod  dns-9060/dns-test-2fab1c82-058a-4358-8343-71d223275dbc contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar 13 19:18:58.729: INFO: File jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local from pod  dns-9060/dns-test-2fab1c82-058a-4358-8343-71d223275dbc contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar 13 19:18:58.729: INFO: Lookups using dns-9060/dns-test-2fab1c82-058a-4358-8343-71d223275dbc failed for: [wheezy_udp@dns-test-service-3.dns-9060.svc.cluster.local jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local]

Mar 13 19:19:03.774: INFO: File jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local from pod  dns-9060/dns-test-2fab1c82-058a-4358-8343-71d223275dbc contains '' instead of 'bar.example.com.'
Mar 13 19:19:03.774: INFO: Lookups using dns-9060/dns-test-2fab1c82-058a-4358-8343-71d223275dbc failed for: [jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local]

Mar 13 19:19:08.780: INFO: DNS probes using dns-test-2fab1c82-058a-4358-8343-71d223275dbc succeeded

STEP: deleting the pod 03/13/23 19:19:08.78
STEP: changing the service to type=ClusterIP 03/13/23 19:19:08.816
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9060.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9060.svc.cluster.local; sleep 1; done
 03/13/23 19:19:08.889
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9060.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local; sleep 1; done
 03/13/23 19:19:08.889
STEP: creating a third pod to probe DNS 03/13/23 19:19:08.889
STEP: submitting the pod to kubernetes 03/13/23 19:19:08.902
Mar 13 19:19:08.916: INFO: Waiting up to 15m0s for pod "dns-test-c8ff866b-6a21-4f07-a3b6-f3cd578daea0" in namespace "dns-9060" to be "running"
Mar 13 19:19:08.929: INFO: Pod "dns-test-c8ff866b-6a21-4f07-a3b6-f3cd578daea0": Phase="Pending", Reason="", readiness=false. Elapsed: 12.879671ms
Mar 13 19:19:10.935: INFO: Pod "dns-test-c8ff866b-6a21-4f07-a3b6-f3cd578daea0": Phase="Running", Reason="", readiness=true. Elapsed: 2.018795939s
Mar 13 19:19:10.935: INFO: Pod "dns-test-c8ff866b-6a21-4f07-a3b6-f3cd578daea0" satisfied condition "running"
STEP: retrieving the pod 03/13/23 19:19:10.935
STEP: looking for the results for each expected name from probers 03/13/23 19:19:10.939
Mar 13 19:19:10.963: INFO: DNS probes using dns-test-c8ff866b-6a21-4f07-a3b6-f3cd578daea0 succeeded

STEP: deleting the pod 03/13/23 19:19:10.963
STEP: deleting the test externalName service 03/13/23 19:19:10.992
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar 13 19:19:11.015: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-9060" for this suite. 03/13/23 19:19:11.032
------------------------------
â€¢ [SLOW TEST] [16.447 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:18:54.609
    Mar 13 19:18:54.609: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename dns 03/13/23 19:18:54.612
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:18:54.625
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:18:54.629
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for ExternalName services [Conformance]
      test/e2e/network/dns.go:333
    STEP: Creating a test externalName service 03/13/23 19:18:54.635
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9060.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9060.svc.cluster.local; sleep 1; done
     03/13/23 19:18:54.641
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9060.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local; sleep 1; done
     03/13/23 19:18:54.641
    STEP: creating a pod to probe DNS 03/13/23 19:18:54.642
    STEP: submitting the pod to kubernetes 03/13/23 19:18:54.642
    Mar 13 19:18:54.649: INFO: Waiting up to 15m0s for pod "dns-test-b4756bef-fae7-4135-b21e-3a8b295b471c" in namespace "dns-9060" to be "running"
    Mar 13 19:18:54.652: INFO: Pod "dns-test-b4756bef-fae7-4135-b21e-3a8b295b471c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.346189ms
    Mar 13 19:18:56.661: INFO: Pod "dns-test-b4756bef-fae7-4135-b21e-3a8b295b471c": Phase="Running", Reason="", readiness=true. Elapsed: 2.012109479s
    Mar 13 19:18:56.661: INFO: Pod "dns-test-b4756bef-fae7-4135-b21e-3a8b295b471c" satisfied condition "running"
    STEP: retrieving the pod 03/13/23 19:18:56.662
    STEP: looking for the results for each expected name from probers 03/13/23 19:18:56.666
    Mar 13 19:18:56.682: INFO: DNS probes using dns-test-b4756bef-fae7-4135-b21e-3a8b295b471c succeeded

    STEP: deleting the pod 03/13/23 19:18:56.682
    STEP: changing the externalName to bar.example.com 03/13/23 19:18:56.69
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9060.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9060.svc.cluster.local; sleep 1; done
     03/13/23 19:18:56.696
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9060.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local; sleep 1; done
     03/13/23 19:18:56.697
    STEP: creating a second pod to probe DNS 03/13/23 19:18:56.697
    STEP: submitting the pod to kubernetes 03/13/23 19:18:56.697
    Mar 13 19:18:56.702: INFO: Waiting up to 15m0s for pod "dns-test-2fab1c82-058a-4358-8343-71d223275dbc" in namespace "dns-9060" to be "running"
    Mar 13 19:18:56.709: INFO: Pod "dns-test-2fab1c82-058a-4358-8343-71d223275dbc": Phase="Pending", Reason="", readiness=false. Elapsed: 7.737643ms
    Mar 13 19:18:58.714: INFO: Pod "dns-test-2fab1c82-058a-4358-8343-71d223275dbc": Phase="Running", Reason="", readiness=true. Elapsed: 2.012205017s
    Mar 13 19:18:58.714: INFO: Pod "dns-test-2fab1c82-058a-4358-8343-71d223275dbc" satisfied condition "running"
    STEP: retrieving the pod 03/13/23 19:18:58.714
    STEP: looking for the results for each expected name from probers 03/13/23 19:18:58.717
    Mar 13 19:18:58.725: INFO: File wheezy_udp@dns-test-service-3.dns-9060.svc.cluster.local from pod  dns-9060/dns-test-2fab1c82-058a-4358-8343-71d223275dbc contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar 13 19:18:58.729: INFO: File jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local from pod  dns-9060/dns-test-2fab1c82-058a-4358-8343-71d223275dbc contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar 13 19:18:58.729: INFO: Lookups using dns-9060/dns-test-2fab1c82-058a-4358-8343-71d223275dbc failed for: [wheezy_udp@dns-test-service-3.dns-9060.svc.cluster.local jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local]

    Mar 13 19:19:03.774: INFO: File jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local from pod  dns-9060/dns-test-2fab1c82-058a-4358-8343-71d223275dbc contains '' instead of 'bar.example.com.'
    Mar 13 19:19:03.774: INFO: Lookups using dns-9060/dns-test-2fab1c82-058a-4358-8343-71d223275dbc failed for: [jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local]

    Mar 13 19:19:08.780: INFO: DNS probes using dns-test-2fab1c82-058a-4358-8343-71d223275dbc succeeded

    STEP: deleting the pod 03/13/23 19:19:08.78
    STEP: changing the service to type=ClusterIP 03/13/23 19:19:08.816
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9060.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9060.svc.cluster.local; sleep 1; done
     03/13/23 19:19:08.889
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9060.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9060.svc.cluster.local; sleep 1; done
     03/13/23 19:19:08.889
    STEP: creating a third pod to probe DNS 03/13/23 19:19:08.889
    STEP: submitting the pod to kubernetes 03/13/23 19:19:08.902
    Mar 13 19:19:08.916: INFO: Waiting up to 15m0s for pod "dns-test-c8ff866b-6a21-4f07-a3b6-f3cd578daea0" in namespace "dns-9060" to be "running"
    Mar 13 19:19:08.929: INFO: Pod "dns-test-c8ff866b-6a21-4f07-a3b6-f3cd578daea0": Phase="Pending", Reason="", readiness=false. Elapsed: 12.879671ms
    Mar 13 19:19:10.935: INFO: Pod "dns-test-c8ff866b-6a21-4f07-a3b6-f3cd578daea0": Phase="Running", Reason="", readiness=true. Elapsed: 2.018795939s
    Mar 13 19:19:10.935: INFO: Pod "dns-test-c8ff866b-6a21-4f07-a3b6-f3cd578daea0" satisfied condition "running"
    STEP: retrieving the pod 03/13/23 19:19:10.935
    STEP: looking for the results for each expected name from probers 03/13/23 19:19:10.939
    Mar 13 19:19:10.963: INFO: DNS probes using dns-test-c8ff866b-6a21-4f07-a3b6-f3cd578daea0 succeeded

    STEP: deleting the pod 03/13/23 19:19:10.963
    STEP: deleting the test externalName service 03/13/23 19:19:10.992
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:19:11.015: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-9060" for this suite. 03/13/23 19:19:11.032
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:19:11.113
Mar 13 19:19:11.113: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 19:19:11.114
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:19:11.138
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:19:11.145
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 19:19:11.177
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:19:11.565
STEP: Deploying the webhook pod 03/13/23 19:19:11.583
STEP: Wait for the deployment to be ready 03/13/23 19:19:11.603
Mar 13 19:19:11.634: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Mar 13 19:19:13.659: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 19, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 19, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 19, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 19, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 03/13/23 19:19:15.665
STEP: Verifying the service has paired with the endpoint 03/13/23 19:19:15.699
Mar 13 19:19:16.699: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197
STEP: Registering the webhook via the AdmissionRegistration API 03/13/23 19:19:16.703
STEP: create a pod that should be denied by the webhook 03/13/23 19:19:16.729
STEP: create a pod that causes the webhook to hang 03/13/23 19:19:16.761
STEP: create a configmap that should be denied by the webhook 03/13/23 19:19:26.773
STEP: create a configmap that should be admitted by the webhook 03/13/23 19:19:26.811
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook 03/13/23 19:19:26.826
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook 03/13/23 19:19:26.836
STEP: create a namespace that bypass the webhook 03/13/23 19:19:26.845
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace 03/13/23 19:19:26.853
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:19:26.879: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-1878" for this suite. 03/13/23 19:19:26.917
STEP: Destroying namespace "webhook-1878-markers" for this suite. 03/13/23 19:19:26.928
------------------------------
â€¢ [SLOW TEST] [15.822 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:19:11.113
    Mar 13 19:19:11.113: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 19:19:11.114
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:19:11.138
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:19:11.145
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 19:19:11.177
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:19:11.565
    STEP: Deploying the webhook pod 03/13/23 19:19:11.583
    STEP: Wait for the deployment to be ready 03/13/23 19:19:11.603
    Mar 13 19:19:11.634: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Mar 13 19:19:13.659: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 19, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 19, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 19, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 19, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 03/13/23 19:19:15.665
    STEP: Verifying the service has paired with the endpoint 03/13/23 19:19:15.699
    Mar 13 19:19:16.699: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny pod and configmap creation [Conformance]
      test/e2e/apimachinery/webhook.go:197
    STEP: Registering the webhook via the AdmissionRegistration API 03/13/23 19:19:16.703
    STEP: create a pod that should be denied by the webhook 03/13/23 19:19:16.729
    STEP: create a pod that causes the webhook to hang 03/13/23 19:19:16.761
    STEP: create a configmap that should be denied by the webhook 03/13/23 19:19:26.773
    STEP: create a configmap that should be admitted by the webhook 03/13/23 19:19:26.811
    STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook 03/13/23 19:19:26.826
    STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook 03/13/23 19:19:26.836
    STEP: create a namespace that bypass the webhook 03/13/23 19:19:26.845
    STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace 03/13/23 19:19:26.853
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:19:26.879: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-1878" for this suite. 03/13/23 19:19:26.917
    STEP: Destroying namespace "webhook-1878-markers" for this suite. 03/13/23 19:19:26.928
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:19:26.936
Mar 13 19:19:26.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:19:26.948
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:19:26.972
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:19:26.975
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174
STEP: Creating configMap with name cm-test-opt-del-1605dfb5-6c45-4f04-b88c-df63c2b04906 03/13/23 19:19:27.022
STEP: Creating configMap with name cm-test-opt-upd-e2556c54-3730-404d-93b7-95c77e80cc03 03/13/23 19:19:27.044
STEP: Creating the pod 03/13/23 19:19:27.053
Mar 13 19:19:27.062: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-50a7a6a9-66e2-42b5-91ec-25a91be0bc4f" in namespace "projected-2263" to be "running and ready"
Mar 13 19:19:27.065: INFO: Pod "pod-projected-configmaps-50a7a6a9-66e2-42b5-91ec-25a91be0bc4f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.591866ms
Mar 13 19:19:27.065: INFO: The phase of Pod pod-projected-configmaps-50a7a6a9-66e2-42b5-91ec-25a91be0bc4f is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:19:29.071: INFO: Pod "pod-projected-configmaps-50a7a6a9-66e2-42b5-91ec-25a91be0bc4f": Phase="Running", Reason="", readiness=true. Elapsed: 2.008722184s
Mar 13 19:19:29.071: INFO: The phase of Pod pod-projected-configmaps-50a7a6a9-66e2-42b5-91ec-25a91be0bc4f is Running (Ready = true)
Mar 13 19:19:29.071: INFO: Pod "pod-projected-configmaps-50a7a6a9-66e2-42b5-91ec-25a91be0bc4f" satisfied condition "running and ready"
STEP: Deleting configmap cm-test-opt-del-1605dfb5-6c45-4f04-b88c-df63c2b04906 03/13/23 19:19:29.107
STEP: Updating configmap cm-test-opt-upd-e2556c54-3730-404d-93b7-95c77e80cc03 03/13/23 19:19:29.113
STEP: Creating configMap with name cm-test-opt-create-7fbc2e0b-c893-4b78-a4be-7aa34a9d8389 03/13/23 19:19:29.118
STEP: waiting to observe update in volume 03/13/23 19:19:29.127
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:19:31.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-2263" for this suite. 03/13/23 19:19:31.161
------------------------------
â€¢ [4.228 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:19:26.936
    Mar 13 19:19:26.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:19:26.948
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:19:26.972
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:19:26.975
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:174
    STEP: Creating configMap with name cm-test-opt-del-1605dfb5-6c45-4f04-b88c-df63c2b04906 03/13/23 19:19:27.022
    STEP: Creating configMap with name cm-test-opt-upd-e2556c54-3730-404d-93b7-95c77e80cc03 03/13/23 19:19:27.044
    STEP: Creating the pod 03/13/23 19:19:27.053
    Mar 13 19:19:27.062: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-50a7a6a9-66e2-42b5-91ec-25a91be0bc4f" in namespace "projected-2263" to be "running and ready"
    Mar 13 19:19:27.065: INFO: Pod "pod-projected-configmaps-50a7a6a9-66e2-42b5-91ec-25a91be0bc4f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.591866ms
    Mar 13 19:19:27.065: INFO: The phase of Pod pod-projected-configmaps-50a7a6a9-66e2-42b5-91ec-25a91be0bc4f is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:19:29.071: INFO: Pod "pod-projected-configmaps-50a7a6a9-66e2-42b5-91ec-25a91be0bc4f": Phase="Running", Reason="", readiness=true. Elapsed: 2.008722184s
    Mar 13 19:19:29.071: INFO: The phase of Pod pod-projected-configmaps-50a7a6a9-66e2-42b5-91ec-25a91be0bc4f is Running (Ready = true)
    Mar 13 19:19:29.071: INFO: Pod "pod-projected-configmaps-50a7a6a9-66e2-42b5-91ec-25a91be0bc4f" satisfied condition "running and ready"
    STEP: Deleting configmap cm-test-opt-del-1605dfb5-6c45-4f04-b88c-df63c2b04906 03/13/23 19:19:29.107
    STEP: Updating configmap cm-test-opt-upd-e2556c54-3730-404d-93b7-95c77e80cc03 03/13/23 19:19:29.113
    STEP: Creating configMap with name cm-test-opt-create-7fbc2e0b-c893-4b78-a4be-7aa34a9d8389 03/13/23 19:19:29.118
    STEP: waiting to observe update in volume 03/13/23 19:19:29.127
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:19:31.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-2263" for this suite. 03/13/23 19:19:31.161
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] ConfigMap
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:19:31.166
Mar 13 19:19:31.166: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 19:19:31.167
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:19:31.177
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:19:31.18
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:19:31.213: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-3565" for this suite. 03/13/23 19:19:31.216
------------------------------
â€¢ [0.057 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:19:31.166
    Mar 13 19:19:31.166: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 19:19:31.167
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:19:31.177
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:19:31.18
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be immutable if `immutable` field is set [Conformance]
      test/e2e/common/storage/configmap_volume.go:504
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:19:31.213: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-3565" for this suite. 03/13/23 19:19:31.216
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:19:31.227
Mar 13 19:19:31.227: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 19:19:31.228
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:19:31.238
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:19:31.241
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207
STEP: Creating a pod to test downward API volume plugin 03/13/23 19:19:31.245
Mar 13 19:19:31.253: INFO: Waiting up to 5m0s for pod "downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7" in namespace "downward-api-4551" to be "Succeeded or Failed"
Mar 13 19:19:31.255: INFO: Pod "downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.64178ms
Mar 13 19:19:33.261: INFO: Pod "downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008556092s
Mar 13 19:19:35.260: INFO: Pod "downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007383174s
STEP: Saw pod success 03/13/23 19:19:35.26
Mar 13 19:19:35.260: INFO: Pod "downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7" satisfied condition "Succeeded or Failed"
Mar 13 19:19:35.264: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7 container client-container: <nil>
STEP: delete the pod 03/13/23 19:19:35.272
Mar 13 19:19:35.282: INFO: Waiting for pod downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7 to disappear
Mar 13 19:19:35.285: INFO: Pod downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar 13 19:19:35.285: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-4551" for this suite. 03/13/23 19:19:35.295
------------------------------
â€¢ [4.074 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:19:31.227
    Mar 13 19:19:31.227: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 19:19:31.228
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:19:31.238
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:19:31.241
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's memory limit [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:207
    STEP: Creating a pod to test downward API volume plugin 03/13/23 19:19:31.245
    Mar 13 19:19:31.253: INFO: Waiting up to 5m0s for pod "downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7" in namespace "downward-api-4551" to be "Succeeded or Failed"
    Mar 13 19:19:31.255: INFO: Pod "downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.64178ms
    Mar 13 19:19:33.261: INFO: Pod "downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008556092s
    Mar 13 19:19:35.260: INFO: Pod "downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007383174s
    STEP: Saw pod success 03/13/23 19:19:35.26
    Mar 13 19:19:35.260: INFO: Pod "downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7" satisfied condition "Succeeded or Failed"
    Mar 13 19:19:35.264: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7 container client-container: <nil>
    STEP: delete the pod 03/13/23 19:19:35.272
    Mar 13 19:19:35.282: INFO: Waiting for pod downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7 to disappear
    Mar 13 19:19:35.285: INFO: Pod downwardapi-volume-bcdd2438-5ef8-4b07-8c20-6f664ca7cbf7 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:19:35.285: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-4551" for this suite. 03/13/23 19:19:35.295
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] CronJob
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:19:35.3
Mar 13 19:19:35.300: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename cronjob 03/13/23 19:19:35.301
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:19:35.316
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:19:35.319
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160
STEP: Creating a ReplaceConcurrent cronjob 03/13/23 19:19:35.322
STEP: Ensuring a job is scheduled 03/13/23 19:19:35.328
STEP: Ensuring exactly one is scheduled 03/13/23 19:20:01.333
STEP: Ensuring exactly one running job exists by listing jobs explicitly 03/13/23 19:20:01.352
STEP: Ensuring the job is replaced with a new one 03/13/23 19:20:01.358
STEP: Removing cronjob 03/13/23 19:21:01.363
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Mar 13 19:21:01.371: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-4607" for this suite. 03/13/23 19:21:01.376
------------------------------
â€¢ [SLOW TEST] [86.082 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:19:35.3
    Mar 13 19:19:35.300: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename cronjob 03/13/23 19:19:35.301
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:19:35.316
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:19:35.319
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should replace jobs when ReplaceConcurrent [Conformance]
      test/e2e/apps/cronjob.go:160
    STEP: Creating a ReplaceConcurrent cronjob 03/13/23 19:19:35.322
    STEP: Ensuring a job is scheduled 03/13/23 19:19:35.328
    STEP: Ensuring exactly one is scheduled 03/13/23 19:20:01.333
    STEP: Ensuring exactly one running job exists by listing jobs explicitly 03/13/23 19:20:01.352
    STEP: Ensuring the job is replaced with a new one 03/13/23 19:20:01.358
    STEP: Removing cronjob 03/13/23 19:21:01.363
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:21:01.371: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-4607" for this suite. 03/13/23 19:21:01.376
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:21:01.382
Mar 13 19:21:01.383: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-probe 03/13/23 19:21:01.386
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:21:01.408
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:21:01.419
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184
STEP: Creating pod liveness-de633a3d-5df1-4068-9822-7ed602a4cc97 in namespace container-probe-8062 03/13/23 19:21:01.428
Mar 13 19:21:01.437: INFO: Waiting up to 5m0s for pod "liveness-de633a3d-5df1-4068-9822-7ed602a4cc97" in namespace "container-probe-8062" to be "not pending"
Mar 13 19:21:01.443: INFO: Pod "liveness-de633a3d-5df1-4068-9822-7ed602a4cc97": Phase="Pending", Reason="", readiness=false. Elapsed: 6.343372ms
Mar 13 19:21:03.455: INFO: Pod "liveness-de633a3d-5df1-4068-9822-7ed602a4cc97": Phase="Running", Reason="", readiness=true. Elapsed: 2.018634215s
Mar 13 19:21:03.455: INFO: Pod "liveness-de633a3d-5df1-4068-9822-7ed602a4cc97" satisfied condition "not pending"
Mar 13 19:21:03.455: INFO: Started pod liveness-de633a3d-5df1-4068-9822-7ed602a4cc97 in namespace container-probe-8062
STEP: checking the pod's current state and verifying that restartCount is present 03/13/23 19:21:03.455
Mar 13 19:21:03.460: INFO: Initial restart count of pod liveness-de633a3d-5df1-4068-9822-7ed602a4cc97 is 0
STEP: deleting the pod 03/13/23 19:25:04.136
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar 13 19:25:04.178: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-8062" for this suite. 03/13/23 19:25:04.205
------------------------------
â€¢ [SLOW TEST] [242.841 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:21:01.382
    Mar 13 19:21:01.383: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-probe 03/13/23 19:21:01.386
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:21:01.408
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:21:01.419
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:184
    STEP: Creating pod liveness-de633a3d-5df1-4068-9822-7ed602a4cc97 in namespace container-probe-8062 03/13/23 19:21:01.428
    Mar 13 19:21:01.437: INFO: Waiting up to 5m0s for pod "liveness-de633a3d-5df1-4068-9822-7ed602a4cc97" in namespace "container-probe-8062" to be "not pending"
    Mar 13 19:21:01.443: INFO: Pod "liveness-de633a3d-5df1-4068-9822-7ed602a4cc97": Phase="Pending", Reason="", readiness=false. Elapsed: 6.343372ms
    Mar 13 19:21:03.455: INFO: Pod "liveness-de633a3d-5df1-4068-9822-7ed602a4cc97": Phase="Running", Reason="", readiness=true. Elapsed: 2.018634215s
    Mar 13 19:21:03.455: INFO: Pod "liveness-de633a3d-5df1-4068-9822-7ed602a4cc97" satisfied condition "not pending"
    Mar 13 19:21:03.455: INFO: Started pod liveness-de633a3d-5df1-4068-9822-7ed602a4cc97 in namespace container-probe-8062
    STEP: checking the pod's current state and verifying that restartCount is present 03/13/23 19:21:03.455
    Mar 13 19:21:03.460: INFO: Initial restart count of pod liveness-de633a3d-5df1-4068-9822-7ed602a4cc97 is 0
    STEP: deleting the pod 03/13/23 19:25:04.136
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:25:04.178: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-8062" for this suite. 03/13/23 19:25:04.205
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:25:04.233
Mar 13 19:25:04.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 19:25:04.236
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:04.3
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:04.31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235
STEP: Creating a pod to test downward API volume plugin 03/13/23 19:25:04.337
Mar 13 19:25:04.367: INFO: Waiting up to 5m0s for pod "downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d" in namespace "downward-api-1797" to be "Succeeded or Failed"
Mar 13 19:25:04.379: INFO: Pod "downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d": Phase="Pending", Reason="", readiness=false. Elapsed: 11.951877ms
Mar 13 19:25:06.389: INFO: Pod "downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d": Phase="Running", Reason="", readiness=true. Elapsed: 2.022011311s
Mar 13 19:25:08.383: INFO: Pod "downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d": Phase="Running", Reason="", readiness=false. Elapsed: 4.016409932s
Mar 13 19:25:10.387: INFO: Pod "downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019737355s
STEP: Saw pod success 03/13/23 19:25:10.387
Mar 13 19:25:10.388: INFO: Pod "downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d" satisfied condition "Succeeded or Failed"
Mar 13 19:25:10.396: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d container client-container: <nil>
STEP: delete the pod 03/13/23 19:25:10.45
Mar 13 19:25:10.470: INFO: Waiting for pod downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d to disappear
Mar 13 19:25:10.479: INFO: Pod downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar 13 19:25:10.479: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-1797" for this suite. 03/13/23 19:25:10.484
------------------------------
â€¢ [SLOW TEST] [6.262 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:25:04.233
    Mar 13 19:25:04.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 19:25:04.236
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:04.3
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:04.31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's memory request [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:235
    STEP: Creating a pod to test downward API volume plugin 03/13/23 19:25:04.337
    Mar 13 19:25:04.367: INFO: Waiting up to 5m0s for pod "downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d" in namespace "downward-api-1797" to be "Succeeded or Failed"
    Mar 13 19:25:04.379: INFO: Pod "downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d": Phase="Pending", Reason="", readiness=false. Elapsed: 11.951877ms
    Mar 13 19:25:06.389: INFO: Pod "downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d": Phase="Running", Reason="", readiness=true. Elapsed: 2.022011311s
    Mar 13 19:25:08.383: INFO: Pod "downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d": Phase="Running", Reason="", readiness=false. Elapsed: 4.016409932s
    Mar 13 19:25:10.387: INFO: Pod "downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019737355s
    STEP: Saw pod success 03/13/23 19:25:10.387
    Mar 13 19:25:10.388: INFO: Pod "downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d" satisfied condition "Succeeded or Failed"
    Mar 13 19:25:10.396: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d container client-container: <nil>
    STEP: delete the pod 03/13/23 19:25:10.45
    Mar 13 19:25:10.470: INFO: Waiting for pod downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d to disappear
    Mar 13 19:25:10.479: INFO: Pod downwardapi-volume-27f67db0-20e8-4a86-bc4f-b6bb2ba2505d no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:25:10.479: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-1797" for this suite. 03/13/23 19:25:10.484
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:25:10.5
Mar 13 19:25:10.500: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:25:10.501
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:10.53
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:10.535
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162
STEP: Creating the pod 03/13/23 19:25:10.544
Mar 13 19:25:10.557: INFO: Waiting up to 5m0s for pod "annotationupdate82049717-f55c-4087-afaa-322eca280db5" in namespace "projected-4322" to be "running and ready"
Mar 13 19:25:10.563: INFO: Pod "annotationupdate82049717-f55c-4087-afaa-322eca280db5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.290889ms
Mar 13 19:25:10.564: INFO: The phase of Pod annotationupdate82049717-f55c-4087-afaa-322eca280db5 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:25:12.580: INFO: Pod "annotationupdate82049717-f55c-4087-afaa-322eca280db5": Phase="Running", Reason="", readiness=true. Elapsed: 2.023184032s
Mar 13 19:25:12.581: INFO: The phase of Pod annotationupdate82049717-f55c-4087-afaa-322eca280db5 is Running (Ready = true)
Mar 13 19:25:12.581: INFO: Pod "annotationupdate82049717-f55c-4087-afaa-322eca280db5" satisfied condition "running and ready"
Mar 13 19:25:13.121: INFO: Successfully updated pod "annotationupdate82049717-f55c-4087-afaa-322eca280db5"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar 13 19:25:17.162: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4322" for this suite. 03/13/23 19:25:17.168
------------------------------
â€¢ [SLOW TEST] [6.673 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:25:10.5
    Mar 13 19:25:10.500: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:25:10.501
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:10.53
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:10.535
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should update annotations on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:162
    STEP: Creating the pod 03/13/23 19:25:10.544
    Mar 13 19:25:10.557: INFO: Waiting up to 5m0s for pod "annotationupdate82049717-f55c-4087-afaa-322eca280db5" in namespace "projected-4322" to be "running and ready"
    Mar 13 19:25:10.563: INFO: Pod "annotationupdate82049717-f55c-4087-afaa-322eca280db5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.290889ms
    Mar 13 19:25:10.564: INFO: The phase of Pod annotationupdate82049717-f55c-4087-afaa-322eca280db5 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:25:12.580: INFO: Pod "annotationupdate82049717-f55c-4087-afaa-322eca280db5": Phase="Running", Reason="", readiness=true. Elapsed: 2.023184032s
    Mar 13 19:25:12.581: INFO: The phase of Pod annotationupdate82049717-f55c-4087-afaa-322eca280db5 is Running (Ready = true)
    Mar 13 19:25:12.581: INFO: Pod "annotationupdate82049717-f55c-4087-afaa-322eca280db5" satisfied condition "running and ready"
    Mar 13 19:25:13.121: INFO: Successfully updated pod "annotationupdate82049717-f55c-4087-afaa-322eca280db5"
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:25:17.162: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4322" for this suite. 03/13/23 19:25:17.168
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] Daemon set [Serial]
  should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:25:17.174
Mar 13 19:25:17.175: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename daemonsets 03/13/23 19:25:17.177
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:17.187
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:17.191
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166
STEP: Creating simple DaemonSet "daemon-set" 03/13/23 19:25:17.213
STEP: Check that daemon pods launch on every node of the cluster. 03/13/23 19:25:17.221
Mar 13 19:25:17.229: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:25:17.229: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:25:18.237: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:25:18.237: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:25:19.236: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar 13 19:25:19.236: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived. 03/13/23 19:25:19.239
Mar 13 19:25:19.256: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar 13 19:25:19.260: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:25:20.269: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar 13 19:25:20.269: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:25:21.267: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar 13 19:25:21.268: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:25:22.280: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar 13 19:25:22.281: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:25:23.267: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar 13 19:25:23.267: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 03/13/23 19:25:23.269
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3820, will wait for the garbage collector to delete the pods 03/13/23 19:25:23.27
Mar 13 19:25:23.328: INFO: Deleting DaemonSet.extensions daemon-set took: 4.951579ms
Mar 13 19:25:23.429: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.915433ms
Mar 13 19:25:25.732: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:25:25.732: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Mar 13 19:25:25.735: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18113"},"items":null}

Mar 13 19:25:25.737: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18113"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:25:25.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-3820" for this suite. 03/13/23 19:25:25.748
------------------------------
â€¢ [SLOW TEST] [8.580 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:25:17.174
    Mar 13 19:25:17.175: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename daemonsets 03/13/23 19:25:17.177
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:17.187
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:17.191
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should run and stop simple daemon [Conformance]
      test/e2e/apps/daemon_set.go:166
    STEP: Creating simple DaemonSet "daemon-set" 03/13/23 19:25:17.213
    STEP: Check that daemon pods launch on every node of the cluster. 03/13/23 19:25:17.221
    Mar 13 19:25:17.229: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:25:17.229: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:25:18.237: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:25:18.237: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:25:19.236: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar 13 19:25:19.236: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Stop a daemon pod, check that the daemon pod is revived. 03/13/23 19:25:19.239
    Mar 13 19:25:19.256: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar 13 19:25:19.260: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:25:20.269: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar 13 19:25:20.269: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:25:21.267: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar 13 19:25:21.268: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:25:22.280: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar 13 19:25:22.281: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:25:23.267: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar 13 19:25:23.267: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 03/13/23 19:25:23.269
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3820, will wait for the garbage collector to delete the pods 03/13/23 19:25:23.27
    Mar 13 19:25:23.328: INFO: Deleting DaemonSet.extensions daemon-set took: 4.951579ms
    Mar 13 19:25:23.429: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.915433ms
    Mar 13 19:25:25.732: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:25:25.732: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Mar 13 19:25:25.735: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18113"},"items":null}

    Mar 13 19:25:25.737: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18113"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:25:25.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-3820" for this suite. 03/13/23 19:25:25.748
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:25:25.756
Mar 13 19:25:25.756: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename secrets 03/13/23 19:25:25.757
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:25.768
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:25.771
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95
STEP: creating secret secrets-6074/secret-test-a9c3543f-9a0e-456a-9221-1dd1dad79b4d 03/13/23 19:25:25.774
STEP: Creating a pod to test consume secrets 03/13/23 19:25:25.778
Mar 13 19:25:25.785: INFO: Waiting up to 5m0s for pod "pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5" in namespace "secrets-6074" to be "Succeeded or Failed"
Mar 13 19:25:25.790: INFO: Pod "pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.67448ms
Mar 13 19:25:27.794: INFO: Pod "pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5": Phase="Running", Reason="", readiness=false. Elapsed: 2.009068782s
Mar 13 19:25:29.794: INFO: Pod "pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009598119s
STEP: Saw pod success 03/13/23 19:25:29.795
Mar 13 19:25:29.795: INFO: Pod "pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5" satisfied condition "Succeeded or Failed"
Mar 13 19:25:29.798: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5 container env-test: <nil>
STEP: delete the pod 03/13/23 19:25:29.808
Mar 13 19:25:29.815: INFO: Waiting for pod pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5 to disappear
Mar 13 19:25:29.818: INFO: Pod pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Mar 13 19:25:29.818: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-6074" for this suite. 03/13/23 19:25:29.821
------------------------------
â€¢ [4.070 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:25:25.756
    Mar 13 19:25:25.756: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename secrets 03/13/23 19:25:25.757
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:25.768
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:25.771
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via the environment [NodeConformance] [Conformance]
      test/e2e/common/node/secrets.go:95
    STEP: creating secret secrets-6074/secret-test-a9c3543f-9a0e-456a-9221-1dd1dad79b4d 03/13/23 19:25:25.774
    STEP: Creating a pod to test consume secrets 03/13/23 19:25:25.778
    Mar 13 19:25:25.785: INFO: Waiting up to 5m0s for pod "pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5" in namespace "secrets-6074" to be "Succeeded or Failed"
    Mar 13 19:25:25.790: INFO: Pod "pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.67448ms
    Mar 13 19:25:27.794: INFO: Pod "pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5": Phase="Running", Reason="", readiness=false. Elapsed: 2.009068782s
    Mar 13 19:25:29.794: INFO: Pod "pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009598119s
    STEP: Saw pod success 03/13/23 19:25:29.795
    Mar 13 19:25:29.795: INFO: Pod "pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5" satisfied condition "Succeeded or Failed"
    Mar 13 19:25:29.798: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5 container env-test: <nil>
    STEP: delete the pod 03/13/23 19:25:29.808
    Mar 13 19:25:29.815: INFO: Waiting for pod pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5 to disappear
    Mar 13 19:25:29.818: INFO: Pod pod-configmaps-9682c307-f482-4d83-b1ab-26efda0d3fb5 no longer exists
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:25:29.818: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-6074" for this suite. 03/13/23 19:25:29.821
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] Deployment
  Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:25:29.829
Mar 13 19:25:29.829: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename deployment 03/13/23 19:25:29.83
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:29.843
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:29.846
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150
Mar 13 19:25:29.850: INFO: Creating simple deployment test-new-deployment
Mar 13 19:25:29.860: INFO: deployment "test-new-deployment" doesn't have the required revision set
STEP: getting scale subresource 03/13/23 19:25:31.879
STEP: updating a scale subresource 03/13/23 19:25:31.882
STEP: verifying the deployment Spec.Replicas was modified 03/13/23 19:25:31.886
STEP: Patch a scale subresource 03/13/23 19:25:31.889
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar 13 19:25:31.905: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-5119  0b9c65a2-61e9-4534-bad6-6172928e1f0d 18211 3 2023-03-13 19:25:29 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-03-13 19:25:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:25:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00270f7f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-13 19:25:31 +0000 UTC,LastTransitionTime:2023-03-13 19:25:31 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-7f5969cbc7" has successfully progressed.,LastUpdateTime:2023-03-13 19:25:31 +0000 UTC,LastTransitionTime:2023-03-13 19:25:29 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Mar 13 19:25:31.910: INFO: New ReplicaSet "test-new-deployment-7f5969cbc7" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-7f5969cbc7  deployment-5119  d3018a8b-2da8-4702-943d-a0128735d12b 18215 2 2023-03-13 19:25:29 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 0b9c65a2-61e9-4534-bad6-6172928e1f0d 0xc003316037 0xc003316038}] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:25:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0b9c65a2-61e9-4534-bad6-6172928e1f0d\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:25:31 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0033160c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Mar 13 19:25:31.919: INFO: Pod "test-new-deployment-7f5969cbc7-d8mc8" is not available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-d8mc8 test-new-deployment-7f5969cbc7- deployment-5119  0405b98d-7d23-4a79-a77f-4aabe78f8085 18216 0 2023-03-13 19:25:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 d3018a8b-2da8-4702-943d-a0128735d12b 0xc000d6c937 0xc000d6c938}] [] [{kube-controller-manager Update v1 2023-03-13 19:25:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d3018a8b-2da8-4702-943d-a0128735d12b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ghl4p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ghl4p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:25:31 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:25:31.919: INFO: Pod "test-new-deployment-7f5969cbc7-qc8rv" is available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-qc8rv test-new-deployment-7f5969cbc7- deployment-5119  2d6f8414-1d95-4585-aa48-938e0249ca40 18206 0 2023-03-13 19:25:29 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:02f379a8d08443ec43f0d2687918f097baf5bf9fb9a5e3090f0e510ec0d6a063 cni.projectcalico.org/podIP:10.244.181.145/32 cni.projectcalico.org/podIPs:10.244.181.145/32,2001:db8:42:1f:e556:e398:18f3:c24f/128] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 d3018a8b-2da8-4702-943d-a0128735d12b 0xc000d6ca90 0xc000d6ca91}] [] [{kube-controller-manager Update v1 2023-03-13 19:25:29 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d3018a8b-2da8-4702-943d-a0128735d12b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:25:30 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:25:31 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.145\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c24f\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qcfp4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qcfp4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:25:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:25:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:25:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:25:29 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.145,StartTime:2023-03-13 19:25:29 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:25:30 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://fc1e26933d2705937d40d87ede759e8142fb055c8756aaf64726cbbf60b327ce,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.145,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c24f,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar 13 19:25:31.919: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-5119" for this suite. 03/13/23 19:25:31.924
------------------------------
â€¢ [2.107 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:25:29.829
    Mar 13 19:25:29.829: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename deployment 03/13/23 19:25:29.83
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:29.843
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:29.846
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] Deployment should have a working scale subresource [Conformance]
      test/e2e/apps/deployment.go:150
    Mar 13 19:25:29.850: INFO: Creating simple deployment test-new-deployment
    Mar 13 19:25:29.860: INFO: deployment "test-new-deployment" doesn't have the required revision set
    STEP: getting scale subresource 03/13/23 19:25:31.879
    STEP: updating a scale subresource 03/13/23 19:25:31.882
    STEP: verifying the deployment Spec.Replicas was modified 03/13/23 19:25:31.886
    STEP: Patch a scale subresource 03/13/23 19:25:31.889
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar 13 19:25:31.905: INFO: Deployment "test-new-deployment":
    &Deployment{ObjectMeta:{test-new-deployment  deployment-5119  0b9c65a2-61e9-4534-bad6-6172928e1f0d 18211 3 2023-03-13 19:25:29 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-03-13 19:25:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:25:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00270f7f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-13 19:25:31 +0000 UTC,LastTransitionTime:2023-03-13 19:25:31 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-7f5969cbc7" has successfully progressed.,LastUpdateTime:2023-03-13 19:25:31 +0000 UTC,LastTransitionTime:2023-03-13 19:25:29 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Mar 13 19:25:31.910: INFO: New ReplicaSet "test-new-deployment-7f5969cbc7" of Deployment "test-new-deployment":
    &ReplicaSet{ObjectMeta:{test-new-deployment-7f5969cbc7  deployment-5119  d3018a8b-2da8-4702-943d-a0128735d12b 18215 2 2023-03-13 19:25:29 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 0b9c65a2-61e9-4534-bad6-6172928e1f0d 0xc003316037 0xc003316038}] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:25:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0b9c65a2-61e9-4534-bad6-6172928e1f0d\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:25:31 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0033160c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Mar 13 19:25:31.919: INFO: Pod "test-new-deployment-7f5969cbc7-d8mc8" is not available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-d8mc8 test-new-deployment-7f5969cbc7- deployment-5119  0405b98d-7d23-4a79-a77f-4aabe78f8085 18216 0 2023-03-13 19:25:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 d3018a8b-2da8-4702-943d-a0128735d12b 0xc000d6c937 0xc000d6c938}] [] [{kube-controller-manager Update v1 2023-03-13 19:25:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d3018a8b-2da8-4702-943d-a0128735d12b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ghl4p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ghl4p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:25:31 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:25:31.919: INFO: Pod "test-new-deployment-7f5969cbc7-qc8rv" is available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-qc8rv test-new-deployment-7f5969cbc7- deployment-5119  2d6f8414-1d95-4585-aa48-938e0249ca40 18206 0 2023-03-13 19:25:29 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:02f379a8d08443ec43f0d2687918f097baf5bf9fb9a5e3090f0e510ec0d6a063 cni.projectcalico.org/podIP:10.244.181.145/32 cni.projectcalico.org/podIPs:10.244.181.145/32,2001:db8:42:1f:e556:e398:18f3:c24f/128] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 d3018a8b-2da8-4702-943d-a0128735d12b 0xc000d6ca90 0xc000d6ca91}] [] [{kube-controller-manager Update v1 2023-03-13 19:25:29 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d3018a8b-2da8-4702-943d-a0128735d12b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:25:30 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:25:31 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.145\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c24f\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qcfp4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qcfp4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:25:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:25:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:25:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:25:29 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.145,StartTime:2023-03-13 19:25:29 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:25:30 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://fc1e26933d2705937d40d87ede759e8142fb055c8756aaf64726cbbf60b327ce,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.145,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c24f,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:25:31.919: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-5119" for this suite. 03/13/23 19:25:31.924
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:25:31.943
Mar 13 19:25:31.943: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 19:25:31.944
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:31.956
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:31.965
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302
STEP: creating service nodeport-test with type=NodePort in namespace services-304 03/13/23 19:25:31.969
STEP: creating replication controller nodeport-test in namespace services-304 03/13/23 19:25:31.993
I0313 19:25:32.000104      21 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-304, replica count: 2
I0313 19:25:35.051556      21 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar 13 19:25:35.051: INFO: Creating new exec pod
Mar 13 19:25:35.057: INFO: Waiting up to 5m0s for pod "execpodv2g9t" in namespace "services-304" to be "running"
Mar 13 19:25:35.060: INFO: Pod "execpodv2g9t": Phase="Pending", Reason="", readiness=false. Elapsed: 2.899486ms
Mar 13 19:25:37.064: INFO: Pod "execpodv2g9t": Phase="Running", Reason="", readiness=true. Elapsed: 2.007112311s
Mar 13 19:25:37.064: INFO: Pod "execpodv2g9t" satisfied condition "running"
Mar 13 19:25:38.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-304 exec execpodv2g9t -- /bin/sh -x -c nc -v -z -w 2 nodeport-test 80'
Mar 13 19:25:38.277: INFO: stderr: "+ nc -v -z -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Mar 13 19:25:38.277: INFO: stdout: ""
Mar 13 19:25:38.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-304 exec execpodv2g9t -- /bin/sh -x -c nc -v -z -w 2 10.104.81.176 80'
Mar 13 19:25:38.458: INFO: stderr: "+ nc -v -z -w 2 10.104.81.176 80\nConnection to 10.104.81.176 80 port [tcp/http] succeeded!\n"
Mar 13 19:25:38.458: INFO: stdout: ""
Mar 13 19:25:38.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-304 exec execpodv2g9t -- /bin/sh -x -c nc -v -z -w 2 10.1.96.5 30587'
Mar 13 19:25:38.687: INFO: stderr: "+ nc -v -z -w 2 10.1.96.5 30587\nConnection to 10.1.96.5 30587 port [tcp/*] succeeded!\n"
Mar 13 19:25:38.687: INFO: stdout: ""
Mar 13 19:25:38.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-304 exec execpodv2g9t -- /bin/sh -x -c nc -v -z -w 2 10.1.96.4 30587'
Mar 13 19:25:38.884: INFO: stderr: "+ nc -v -z -w 2 10.1.96.4 30587\nConnection to 10.1.96.4 30587 port [tcp/*] succeeded!\n"
Mar 13 19:25:38.884: INFO: stdout: ""
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 19:25:38.885: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-304" for this suite. 03/13/23 19:25:38.889
------------------------------
â€¢ [SLOW TEST] [6.951 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:25:31.943
    Mar 13 19:25:31.943: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 19:25:31.944
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:31.956
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:31.965
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to create a functioning NodePort service [Conformance]
      test/e2e/network/service.go:1302
    STEP: creating service nodeport-test with type=NodePort in namespace services-304 03/13/23 19:25:31.969
    STEP: creating replication controller nodeport-test in namespace services-304 03/13/23 19:25:31.993
    I0313 19:25:32.000104      21 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-304, replica count: 2
    I0313 19:25:35.051556      21 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar 13 19:25:35.051: INFO: Creating new exec pod
    Mar 13 19:25:35.057: INFO: Waiting up to 5m0s for pod "execpodv2g9t" in namespace "services-304" to be "running"
    Mar 13 19:25:35.060: INFO: Pod "execpodv2g9t": Phase="Pending", Reason="", readiness=false. Elapsed: 2.899486ms
    Mar 13 19:25:37.064: INFO: Pod "execpodv2g9t": Phase="Running", Reason="", readiness=true. Elapsed: 2.007112311s
    Mar 13 19:25:37.064: INFO: Pod "execpodv2g9t" satisfied condition "running"
    Mar 13 19:25:38.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-304 exec execpodv2g9t -- /bin/sh -x -c nc -v -z -w 2 nodeport-test 80'
    Mar 13 19:25:38.277: INFO: stderr: "+ nc -v -z -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
    Mar 13 19:25:38.277: INFO: stdout: ""
    Mar 13 19:25:38.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-304 exec execpodv2g9t -- /bin/sh -x -c nc -v -z -w 2 10.104.81.176 80'
    Mar 13 19:25:38.458: INFO: stderr: "+ nc -v -z -w 2 10.104.81.176 80\nConnection to 10.104.81.176 80 port [tcp/http] succeeded!\n"
    Mar 13 19:25:38.458: INFO: stdout: ""
    Mar 13 19:25:38.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-304 exec execpodv2g9t -- /bin/sh -x -c nc -v -z -w 2 10.1.96.5 30587'
    Mar 13 19:25:38.687: INFO: stderr: "+ nc -v -z -w 2 10.1.96.5 30587\nConnection to 10.1.96.5 30587 port [tcp/*] succeeded!\n"
    Mar 13 19:25:38.687: INFO: stdout: ""
    Mar 13 19:25:38.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-304 exec execpodv2g9t -- /bin/sh -x -c nc -v -z -w 2 10.1.96.4 30587'
    Mar 13 19:25:38.884: INFO: stderr: "+ nc -v -z -w 2 10.1.96.4 30587\nConnection to 10.1.96.4 30587 port [tcp/*] succeeded!\n"
    Mar 13 19:25:38.884: INFO: stdout: ""
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:25:38.885: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-304" for this suite. 03/13/23 19:25:38.889
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:25:38.901
Mar 13 19:25:38.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-probe 03/13/23 19:25:38.903
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:38.912
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:38.916
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215
STEP: Creating pod test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111 in namespace container-probe-4718 03/13/23 19:25:38.92
Mar 13 19:25:38.927: INFO: Waiting up to 5m0s for pod "test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111" in namespace "container-probe-4718" to be "not pending"
Mar 13 19:25:38.930: INFO: Pod "test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111": Phase="Pending", Reason="", readiness=false. Elapsed: 3.168739ms
Mar 13 19:25:40.936: INFO: Pod "test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111": Phase="Running", Reason="", readiness=true. Elapsed: 2.009474889s
Mar 13 19:25:40.936: INFO: Pod "test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111" satisfied condition "not pending"
Mar 13 19:25:40.936: INFO: Started pod test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111 in namespace container-probe-4718
STEP: checking the pod's current state and verifying that restartCount is present 03/13/23 19:25:40.936
Mar 13 19:25:40.940: INFO: Initial restart count of pod test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111 is 0
STEP: deleting the pod 03/13/23 19:29:41.624
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar 13 19:29:41.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-4718" for this suite. 03/13/23 19:29:41.65
------------------------------
â€¢ [SLOW TEST] [242.753 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:25:38.901
    Mar 13 19:25:38.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-probe 03/13/23 19:25:38.903
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:25:38.912
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:25:38.916
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:215
    STEP: Creating pod test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111 in namespace container-probe-4718 03/13/23 19:25:38.92
    Mar 13 19:25:38.927: INFO: Waiting up to 5m0s for pod "test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111" in namespace "container-probe-4718" to be "not pending"
    Mar 13 19:25:38.930: INFO: Pod "test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111": Phase="Pending", Reason="", readiness=false. Elapsed: 3.168739ms
    Mar 13 19:25:40.936: INFO: Pod "test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111": Phase="Running", Reason="", readiness=true. Elapsed: 2.009474889s
    Mar 13 19:25:40.936: INFO: Pod "test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111" satisfied condition "not pending"
    Mar 13 19:25:40.936: INFO: Started pod test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111 in namespace container-probe-4718
    STEP: checking the pod's current state and verifying that restartCount is present 03/13/23 19:25:40.936
    Mar 13 19:25:40.940: INFO: Initial restart count of pod test-webserver-b7269d15-0ed7-48ba-90e6-7e2927df3111 is 0
    STEP: deleting the pod 03/13/23 19:29:41.624
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:29:41.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-4718" for this suite. 03/13/23 19:29:41.65
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/kubectl/kubectl.go:931
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:29:41.679
Mar 13 19:29:41.679: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 19:29:41.682
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:29:41.71
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:29:41.717
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/kubectl/kubectl.go:931
STEP: create deployment with httpd image 03/13/23 19:29:41.724
Mar 13 19:29:41.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9385 create -f -'
Mar 13 19:29:43.036: INFO: stderr: ""
Mar 13 19:29:43.036: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image 03/13/23 19:29:43.036
Mar 13 19:29:43.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9385 diff -f -'
Mar 13 19:29:43.317: INFO: rc: 1
Mar 13 19:29:43.317: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9385 delete -f -'
Mar 13 19:29:43.395: INFO: stderr: ""
Mar 13 19:29:43.395: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 19:29:43.396: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-9385" for this suite. 03/13/23 19:29:43.403
------------------------------
â€¢ [1.730 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl diff
  test/e2e/kubectl/kubectl.go:925
    should check if kubectl diff finds a difference for Deployments [Conformance]
    test/e2e/kubectl/kubectl.go:931

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:29:41.679
    Mar 13 19:29:41.679: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 19:29:41.682
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:29:41.71
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:29:41.717
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl diff finds a difference for Deployments [Conformance]
      test/e2e/kubectl/kubectl.go:931
    STEP: create deployment with httpd image 03/13/23 19:29:41.724
    Mar 13 19:29:41.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9385 create -f -'
    Mar 13 19:29:43.036: INFO: stderr: ""
    Mar 13 19:29:43.036: INFO: stdout: "deployment.apps/httpd-deployment created\n"
    STEP: verify diff finds difference between live and declared image 03/13/23 19:29:43.036
    Mar 13 19:29:43.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9385 diff -f -'
    Mar 13 19:29:43.317: INFO: rc: 1
    Mar 13 19:29:43.317: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9385 delete -f -'
    Mar 13 19:29:43.395: INFO: stderr: ""
    Mar 13 19:29:43.395: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:29:43.396: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-9385" for this suite. 03/13/23 19:29:43.403
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:184
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:29:43.418
Mar 13 19:29:43.418: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubelet-test 03/13/23 19:29:43.419
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:29:43.429
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:29:43.432
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:184
Mar 13 19:29:43.443: INFO: Waiting up to 5m0s for pod "busybox-readonly-fsb80284cd-32d8-4f0a-9753-abc56972de14" in namespace "kubelet-test-8896" to be "running and ready"
Mar 13 19:29:43.445: INFO: Pod "busybox-readonly-fsb80284cd-32d8-4f0a-9753-abc56972de14": Phase="Pending", Reason="", readiness=false. Elapsed: 2.463126ms
Mar 13 19:29:43.446: INFO: The phase of Pod busybox-readonly-fsb80284cd-32d8-4f0a-9753-abc56972de14 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:29:45.450: INFO: Pod "busybox-readonly-fsb80284cd-32d8-4f0a-9753-abc56972de14": Phase="Running", Reason="", readiness=true. Elapsed: 2.006520344s
Mar 13 19:29:45.450: INFO: The phase of Pod busybox-readonly-fsb80284cd-32d8-4f0a-9753-abc56972de14 is Running (Ready = true)
Mar 13 19:29:45.450: INFO: Pod "busybox-readonly-fsb80284cd-32d8-4f0a-9753-abc56972de14" satisfied condition "running and ready"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:29:45.477: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-8896" for this suite. 03/13/23 19:29:45.482
------------------------------
â€¢ [2.071 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a read only busybox container
  test/e2e/common/node/kubelet.go:175
    should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:29:43.418
    Mar 13 19:29:43.418: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubelet-test 03/13/23 19:29:43.419
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:29:43.429
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:29:43.432
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:184
    Mar 13 19:29:43.443: INFO: Waiting up to 5m0s for pod "busybox-readonly-fsb80284cd-32d8-4f0a-9753-abc56972de14" in namespace "kubelet-test-8896" to be "running and ready"
    Mar 13 19:29:43.445: INFO: Pod "busybox-readonly-fsb80284cd-32d8-4f0a-9753-abc56972de14": Phase="Pending", Reason="", readiness=false. Elapsed: 2.463126ms
    Mar 13 19:29:43.446: INFO: The phase of Pod busybox-readonly-fsb80284cd-32d8-4f0a-9753-abc56972de14 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:29:45.450: INFO: Pod "busybox-readonly-fsb80284cd-32d8-4f0a-9753-abc56972de14": Phase="Running", Reason="", readiness=true. Elapsed: 2.006520344s
    Mar 13 19:29:45.450: INFO: The phase of Pod busybox-readonly-fsb80284cd-32d8-4f0a-9753-abc56972de14 is Running (Ready = true)
    Mar 13 19:29:45.450: INFO: Pod "busybox-readonly-fsb80284cd-32d8-4f0a-9753-abc56972de14" satisfied condition "running and ready"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:29:45.477: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-8896" for this suite. 03/13/23 19:29:45.482
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:29:45.492
Mar 13 19:29:45.492: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename replicaset 03/13/23 19:29:45.493
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:29:45.503
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:29:45.506
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154
Mar 13 19:29:45.520: INFO: Pod name sample-pod: Found 0 pods out of 1
Mar 13 19:29:50.526: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 03/13/23 19:29:50.526
STEP: Scaling up "test-rs" replicaset  03/13/23 19:29:50.526
Mar 13 19:29:50.536: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet 03/13/23 19:29:50.536
W0313 19:29:50.549566      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Mar 13 19:29:50.553: INFO: observed ReplicaSet test-rs in namespace replicaset-4402 with ReadyReplicas 1, AvailableReplicas 1
Mar 13 19:29:50.560: INFO: observed ReplicaSet test-rs in namespace replicaset-4402 with ReadyReplicas 1, AvailableReplicas 1
Mar 13 19:29:50.577: INFO: observed ReplicaSet test-rs in namespace replicaset-4402 with ReadyReplicas 1, AvailableReplicas 1
Mar 13 19:29:50.577: INFO: observed ReplicaSet test-rs in namespace replicaset-4402 with ReadyReplicas 1, AvailableReplicas 1
Mar 13 19:29:51.685: INFO: observed ReplicaSet test-rs in namespace replicaset-4402 with ReadyReplicas 2, AvailableReplicas 2
Mar 13 19:29:52.322: INFO: observed Replicaset test-rs in namespace replicaset-4402 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:29:52.323: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-4402" for this suite. 03/13/23 19:29:52.34
------------------------------
â€¢ [SLOW TEST] [6.856 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:29:45.492
    Mar 13 19:29:45.492: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename replicaset 03/13/23 19:29:45.493
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:29:45.503
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:29:45.506
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] Replace and Patch tests [Conformance]
      test/e2e/apps/replica_set.go:154
    Mar 13 19:29:45.520: INFO: Pod name sample-pod: Found 0 pods out of 1
    Mar 13 19:29:50.526: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 03/13/23 19:29:50.526
    STEP: Scaling up "test-rs" replicaset  03/13/23 19:29:50.526
    Mar 13 19:29:50.536: INFO: Updating replica set "test-rs"
    STEP: patching the ReplicaSet 03/13/23 19:29:50.536
    W0313 19:29:50.549566      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Mar 13 19:29:50.553: INFO: observed ReplicaSet test-rs in namespace replicaset-4402 with ReadyReplicas 1, AvailableReplicas 1
    Mar 13 19:29:50.560: INFO: observed ReplicaSet test-rs in namespace replicaset-4402 with ReadyReplicas 1, AvailableReplicas 1
    Mar 13 19:29:50.577: INFO: observed ReplicaSet test-rs in namespace replicaset-4402 with ReadyReplicas 1, AvailableReplicas 1
    Mar 13 19:29:50.577: INFO: observed ReplicaSet test-rs in namespace replicaset-4402 with ReadyReplicas 1, AvailableReplicas 1
    Mar 13 19:29:51.685: INFO: observed ReplicaSet test-rs in namespace replicaset-4402 with ReadyReplicas 2, AvailableReplicas 2
    Mar 13 19:29:52.322: INFO: observed Replicaset test-rs in namespace replicaset-4402 with ReadyReplicas 3 found true
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:29:52.323: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-4402" for this suite. 03/13/23 19:29:52.34
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:122
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:29:52.36
Mar 13 19:29:52.361: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pod-network-test 03/13/23 19:29:52.363
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:29:52.373
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:29:52.376
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:122
STEP: Performing setup for networking test in namespace pod-network-test-785 03/13/23 19:29:52.379
STEP: creating a selector 03/13/23 19:29:52.379
STEP: Creating the service pods in kubernetes 03/13/23 19:29:52.379
Mar 13 19:29:52.379: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Mar 13 19:29:52.394: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-785" to be "running and ready"
Mar 13 19:29:52.398: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.792277ms
Mar 13 19:29:52.398: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:29:54.402: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.007865009s
Mar 13 19:29:54.402: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:29:56.404: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.009610716s
Mar 13 19:29:56.404: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:29:58.404: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.01022123s
Mar 13 19:29:58.404: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:30:00.403: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.008628495s
Mar 13 19:30:00.403: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:30:02.412: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.018548586s
Mar 13 19:30:02.412: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:30:04.408: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.013865002s
Mar 13 19:30:04.408: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:30:06.404: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.009740094s
Mar 13 19:30:06.404: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:30:08.402: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.008305642s
Mar 13 19:30:08.402: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:30:10.406: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.012177131s
Mar 13 19:30:10.406: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:30:12.406: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.011623909s
Mar 13 19:30:12.406: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:30:14.402: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.007692635s
Mar 13 19:30:14.402: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Mar 13 19:30:14.402: INFO: Pod "netserver-0" satisfied condition "running and ready"
Mar 13 19:30:14.405: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-785" to be "running and ready"
Mar 13 19:30:14.409: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 4.050459ms
Mar 13 19:30:14.409: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Mar 13 19:30:14.409: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 03/13/23 19:30:14.414
Mar 13 19:30:14.424: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-785" to be "running"
Mar 13 19:30:14.428: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.417042ms
Mar 13 19:30:16.433: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.00900117s
Mar 13 19:30:16.433: INFO: Pod "test-container-pod" satisfied condition "running"
Mar 13 19:30:16.435: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-785" to be "running"
Mar 13 19:30:16.437: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.0386ms
Mar 13 19:30:16.437: INFO: Pod "host-test-container-pod" satisfied condition "running"
Mar 13 19:30:16.439: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Mar 13 19:30:16.440: INFO: Going to poll 10.244.181.189 on port 8081 at least 0 times, with a maximum of 34 tries before failing
Mar 13 19:30:16.441: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.181.189 8081 | grep -v '^\s*$'] Namespace:pod-network-test-785 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:30:16.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:30:16.443: INFO: ExecWithOptions: Clientset creation
Mar 13 19:30:16.443: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-785/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.181.189+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Mar 13 19:30:17.526: INFO: Found all 1 expected endpoints: [netserver-0]
Mar 13 19:30:17.526: INFO: Going to poll 10.244.40.235 on port 8081 at least 0 times, with a maximum of 34 tries before failing
Mar 13 19:30:17.529: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.40.235 8081 | grep -v '^\s*$'] Namespace:pod-network-test-785 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:30:17.529: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:30:17.530: INFO: ExecWithOptions: Clientset creation
Mar 13 19:30:17.530: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-785/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.40.235+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Mar 13 19:30:18.613: INFO: Found all 1 expected endpoints: [netserver-1]
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Mar 13 19:30:18.613: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-785" for this suite. 03/13/23 19:30:18.617
------------------------------
â€¢ [SLOW TEST] [26.262 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:29:52.36
    Mar 13 19:29:52.361: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pod-network-test 03/13/23 19:29:52.363
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:29:52.373
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:29:52.376
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:122
    STEP: Performing setup for networking test in namespace pod-network-test-785 03/13/23 19:29:52.379
    STEP: creating a selector 03/13/23 19:29:52.379
    STEP: Creating the service pods in kubernetes 03/13/23 19:29:52.379
    Mar 13 19:29:52.379: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Mar 13 19:29:52.394: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-785" to be "running and ready"
    Mar 13 19:29:52.398: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.792277ms
    Mar 13 19:29:52.398: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:29:54.402: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.007865009s
    Mar 13 19:29:54.402: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:29:56.404: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.009610716s
    Mar 13 19:29:56.404: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:29:58.404: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.01022123s
    Mar 13 19:29:58.404: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:30:00.403: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.008628495s
    Mar 13 19:30:00.403: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:30:02.412: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.018548586s
    Mar 13 19:30:02.412: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:30:04.408: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.013865002s
    Mar 13 19:30:04.408: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:30:06.404: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.009740094s
    Mar 13 19:30:06.404: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:30:08.402: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.008305642s
    Mar 13 19:30:08.402: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:30:10.406: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.012177131s
    Mar 13 19:30:10.406: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:30:12.406: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.011623909s
    Mar 13 19:30:12.406: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:30:14.402: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.007692635s
    Mar 13 19:30:14.402: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Mar 13 19:30:14.402: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Mar 13 19:30:14.405: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-785" to be "running and ready"
    Mar 13 19:30:14.409: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 4.050459ms
    Mar 13 19:30:14.409: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Mar 13 19:30:14.409: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 03/13/23 19:30:14.414
    Mar 13 19:30:14.424: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-785" to be "running"
    Mar 13 19:30:14.428: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.417042ms
    Mar 13 19:30:16.433: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.00900117s
    Mar 13 19:30:16.433: INFO: Pod "test-container-pod" satisfied condition "running"
    Mar 13 19:30:16.435: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-785" to be "running"
    Mar 13 19:30:16.437: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.0386ms
    Mar 13 19:30:16.437: INFO: Pod "host-test-container-pod" satisfied condition "running"
    Mar 13 19:30:16.439: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Mar 13 19:30:16.440: INFO: Going to poll 10.244.181.189 on port 8081 at least 0 times, with a maximum of 34 tries before failing
    Mar 13 19:30:16.441: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.181.189 8081 | grep -v '^\s*$'] Namespace:pod-network-test-785 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:30:16.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:30:16.443: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:30:16.443: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-785/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.181.189+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Mar 13 19:30:17.526: INFO: Found all 1 expected endpoints: [netserver-0]
    Mar 13 19:30:17.526: INFO: Going to poll 10.244.40.235 on port 8081 at least 0 times, with a maximum of 34 tries before failing
    Mar 13 19:30:17.529: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.40.235 8081 | grep -v '^\s*$'] Namespace:pod-network-test-785 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:30:17.529: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:30:17.530: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:30:17.530: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-785/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.40.235+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Mar 13 19:30:18.613: INFO: Found all 1 expected endpoints: [netserver-1]
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:30:18.613: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-785" for this suite. 03/13/23 19:30:18.617
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:30:18.625
Mar 13 19:30:18.625: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:30:18.626
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:18.634
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:18.64
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67
STEP: Creating projection with secret that has name projected-secret-test-d9ef76e4-944a-4847-8b96-dfba9f43ca71 03/13/23 19:30:18.643
STEP: Creating a pod to test consume secrets 03/13/23 19:30:18.647
Mar 13 19:30:18.653: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b" in namespace "projected-51" to be "Succeeded or Failed"
Mar 13 19:30:18.655: INFO: Pod "pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.252728ms
Mar 13 19:30:20.659: INFO: Pod "pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006290432s
Mar 13 19:30:22.659: INFO: Pod "pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005969469s
STEP: Saw pod success 03/13/23 19:30:22.659
Mar 13 19:30:22.659: INFO: Pod "pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b" satisfied condition "Succeeded or Failed"
Mar 13 19:30:22.662: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b container projected-secret-volume-test: <nil>
STEP: delete the pod 03/13/23 19:30:22.673
Mar 13 19:30:22.681: INFO: Waiting for pod pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b to disappear
Mar 13 19:30:22.683: INFO: Pod pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar 13 19:30:22.683: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-51" for this suite. 03/13/23 19:30:22.687
------------------------------
â€¢ [4.066 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:30:18.625
    Mar 13 19:30:18.625: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:30:18.626
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:18.634
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:18.64
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:67
    STEP: Creating projection with secret that has name projected-secret-test-d9ef76e4-944a-4847-8b96-dfba9f43ca71 03/13/23 19:30:18.643
    STEP: Creating a pod to test consume secrets 03/13/23 19:30:18.647
    Mar 13 19:30:18.653: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b" in namespace "projected-51" to be "Succeeded or Failed"
    Mar 13 19:30:18.655: INFO: Pod "pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.252728ms
    Mar 13 19:30:20.659: INFO: Pod "pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006290432s
    Mar 13 19:30:22.659: INFO: Pod "pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005969469s
    STEP: Saw pod success 03/13/23 19:30:22.659
    Mar 13 19:30:22.659: INFO: Pod "pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b" satisfied condition "Succeeded or Failed"
    Mar 13 19:30:22.662: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b container projected-secret-volume-test: <nil>
    STEP: delete the pod 03/13/23 19:30:22.673
    Mar 13 19:30:22.681: INFO: Waiting for pod pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b to disappear
    Mar 13 19:30:22.683: INFO: Pod pod-projected-secrets-98f9c598-aaac-45a4-a844-80e1aefd0b5b no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:30:22.683: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-51" for this suite. 03/13/23 19:30:22.687
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:30:22.699
Mar 13 19:30:22.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename daemonsets 03/13/23 19:30:22.701
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:22.709
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:22.712
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374
Mar 13 19:30:22.725: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster. 03/13/23 19:30:22.731
Mar 13 19:30:22.736: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:30:22.736: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:30:23.796: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:30:23.832: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:30:24.743: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar 13 19:30:24.744: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Update daemon pods image. 03/13/23 19:30:24.753
STEP: Check that daemon pods images are updated. 03/13/23 19:30:24.764
Mar 13 19:30:24.766: INFO: Wrong image for pod: daemon-set-974hq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Mar 13 19:30:24.766: INFO: Wrong image for pod: daemon-set-rvvn5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Mar 13 19:30:25.772: INFO: Wrong image for pod: daemon-set-974hq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Mar 13 19:30:26.772: INFO: Wrong image for pod: daemon-set-974hq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Mar 13 19:30:27.772: INFO: Wrong image for pod: daemon-set-974hq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Mar 13 19:30:27.772: INFO: Pod daemon-set-nxlkx is not available
Mar 13 19:30:28.772: INFO: Pod daemon-set-pf6sj is not available
STEP: Check that daemon pods are still running on every node of the cluster. 03/13/23 19:30:28.775
Mar 13 19:30:28.780: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar 13 19:30:28.780: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:30:29.787: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar 13 19:30:29.787: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 03/13/23 19:30:29.799
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4322, will wait for the garbage collector to delete the pods 03/13/23 19:30:29.799
Mar 13 19:30:29.855: INFO: Deleting DaemonSet.extensions daemon-set took: 4.557239ms
Mar 13 19:30:29.956: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.572034ms
Mar 13 19:30:32.559: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:30:32.559: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Mar 13 19:30:32.562: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19585"},"items":null}

Mar 13 19:30:32.565: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19585"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:30:32.573: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-4322" for this suite. 03/13/23 19:30:32.576
------------------------------
â€¢ [SLOW TEST] [9.881 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:30:22.699
    Mar 13 19:30:22.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename daemonsets 03/13/23 19:30:22.701
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:22.709
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:22.712
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
      test/e2e/apps/daemon_set.go:374
    Mar 13 19:30:22.725: INFO: Creating simple daemon set daemon-set
    STEP: Check that daemon pods launch on every node of the cluster. 03/13/23 19:30:22.731
    Mar 13 19:30:22.736: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:30:22.736: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:30:23.796: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:30:23.832: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:30:24.743: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar 13 19:30:24.744: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Update daemon pods image. 03/13/23 19:30:24.753
    STEP: Check that daemon pods images are updated. 03/13/23 19:30:24.764
    Mar 13 19:30:24.766: INFO: Wrong image for pod: daemon-set-974hq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Mar 13 19:30:24.766: INFO: Wrong image for pod: daemon-set-rvvn5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Mar 13 19:30:25.772: INFO: Wrong image for pod: daemon-set-974hq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Mar 13 19:30:26.772: INFO: Wrong image for pod: daemon-set-974hq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Mar 13 19:30:27.772: INFO: Wrong image for pod: daemon-set-974hq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Mar 13 19:30:27.772: INFO: Pod daemon-set-nxlkx is not available
    Mar 13 19:30:28.772: INFO: Pod daemon-set-pf6sj is not available
    STEP: Check that daemon pods are still running on every node of the cluster. 03/13/23 19:30:28.775
    Mar 13 19:30:28.780: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar 13 19:30:28.780: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:30:29.787: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar 13 19:30:29.787: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 03/13/23 19:30:29.799
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4322, will wait for the garbage collector to delete the pods 03/13/23 19:30:29.799
    Mar 13 19:30:29.855: INFO: Deleting DaemonSet.extensions daemon-set took: 4.557239ms
    Mar 13 19:30:29.956: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.572034ms
    Mar 13 19:30:32.559: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:30:32.559: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Mar 13 19:30:32.562: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19585"},"items":null}

    Mar 13 19:30:32.565: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19585"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:30:32.573: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-4322" for this suite. 03/13/23 19:30:32.576
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:30:32.582
Mar 13 19:30:32.582: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:30:32.583
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:32.592
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:32.595
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375
STEP: Creating configMap with name projected-configmap-test-volume-20446802-40ae-44b9-b94a-ca571d012a39 03/13/23 19:30:32.598
STEP: Creating a pod to test consume configMaps 03/13/23 19:30:32.601
Mar 13 19:30:32.608: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05" in namespace "projected-7591" to be "Succeeded or Failed"
Mar 13 19:30:32.610: INFO: Pod "pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05": Phase="Pending", Reason="", readiness=false. Elapsed: 2.541871ms
Mar 13 19:30:34.618: INFO: Pod "pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009969349s
Mar 13 19:30:36.619: INFO: Pod "pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010869763s
STEP: Saw pod success 03/13/23 19:30:36.619
Mar 13 19:30:36.619: INFO: Pod "pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05" satisfied condition "Succeeded or Failed"
Mar 13 19:30:36.621: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05 container projected-configmap-volume-test: <nil>
STEP: delete the pod 03/13/23 19:30:36.63
Mar 13 19:30:36.639: INFO: Waiting for pod pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05 to disappear
Mar 13 19:30:36.641: INFO: Pod pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:30:36.641: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7591" for this suite. 03/13/23 19:30:36.645
------------------------------
â€¢ [4.067 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:30:32.582
    Mar 13 19:30:32.582: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:30:32.583
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:32.592
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:32.595
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:375
    STEP: Creating configMap with name projected-configmap-test-volume-20446802-40ae-44b9-b94a-ca571d012a39 03/13/23 19:30:32.598
    STEP: Creating a pod to test consume configMaps 03/13/23 19:30:32.601
    Mar 13 19:30:32.608: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05" in namespace "projected-7591" to be "Succeeded or Failed"
    Mar 13 19:30:32.610: INFO: Pod "pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05": Phase="Pending", Reason="", readiness=false. Elapsed: 2.541871ms
    Mar 13 19:30:34.618: INFO: Pod "pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009969349s
    Mar 13 19:30:36.619: INFO: Pod "pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010869763s
    STEP: Saw pod success 03/13/23 19:30:36.619
    Mar 13 19:30:36.619: INFO: Pod "pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05" satisfied condition "Succeeded or Failed"
    Mar 13 19:30:36.621: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05 container projected-configmap-volume-test: <nil>
    STEP: delete the pod 03/13/23 19:30:36.63
    Mar 13 19:30:36.639: INFO: Waiting for pod pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05 to disappear
    Mar 13 19:30:36.641: INFO: Pod pod-projected-configmaps-1951b506-340d-4209-babc-ec6010b7be05 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:30:36.641: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7591" for this suite. 03/13/23 19:30:36.645
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-scheduling] LimitRange
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61
[BeforeEach] [sig-scheduling] LimitRange
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:30:36.651
Mar 13 19:30:36.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename limitrange 03/13/23 19:30:36.653
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:36.661
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:36.664
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:31
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61
STEP: Creating a LimitRange 03/13/23 19:30:36.667
STEP: Setting up watch 03/13/23 19:30:36.667
STEP: Submitting a LimitRange 03/13/23 19:30:36.77
STEP: Verifying LimitRange creation was observed 03/13/23 19:30:36.774
STEP: Fetching the LimitRange to ensure it has proper values 03/13/23 19:30:36.774
Mar 13 19:30:36.778: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Mar 13 19:30:36.778: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements 03/13/23 19:30:36.778
STEP: Ensuring Pod has resource requirements applied from LimitRange 03/13/23 19:30:36.782
Mar 13 19:30:36.785: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Mar 13 19:30:36.785: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements 03/13/23 19:30:36.785
STEP: Ensuring Pod has merged resource requirements applied from LimitRange 03/13/23 19:30:36.79
Mar 13 19:30:36.792: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Mar 13 19:30:36.793: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources 03/13/23 19:30:36.793
STEP: Failing to create a Pod with more than max resources 03/13/23 19:30:36.795
STEP: Updating a LimitRange 03/13/23 19:30:36.798
STEP: Verifying LimitRange updating is effective 03/13/23 19:30:36.801
STEP: Creating a Pod with less than former min resources 03/13/23 19:30:38.808
STEP: Failing to create a Pod with more than max resources 03/13/23 19:30:38.813
STEP: Deleting a LimitRange 03/13/23 19:30:38.816
STEP: Verifying the LimitRange was deleted 03/13/23 19:30:38.821
Mar 13 19:30:43.825: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources 03/13/23 19:30:43.825
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/node/init/init.go:32
Mar 13 19:30:43.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  tear down framework | framework.go:193
STEP: Destroying namespace "limitrange-6144" for this suite. 03/13/23 19:30:43.836
------------------------------
â€¢ [SLOW TEST] [7.189 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] LimitRange
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:30:36.651
    Mar 13 19:30:36.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename limitrange 03/13/23 19:30:36.653
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:36.661
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:36.664
    [BeforeEach] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
      test/e2e/scheduling/limit_range.go:61
    STEP: Creating a LimitRange 03/13/23 19:30:36.667
    STEP: Setting up watch 03/13/23 19:30:36.667
    STEP: Submitting a LimitRange 03/13/23 19:30:36.77
    STEP: Verifying LimitRange creation was observed 03/13/23 19:30:36.774
    STEP: Fetching the LimitRange to ensure it has proper values 03/13/23 19:30:36.774
    Mar 13 19:30:36.778: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
    Mar 13 19:30:36.778: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Creating a Pod with no resource requirements 03/13/23 19:30:36.778
    STEP: Ensuring Pod has resource requirements applied from LimitRange 03/13/23 19:30:36.782
    Mar 13 19:30:36.785: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
    Mar 13 19:30:36.785: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Creating a Pod with partial resource requirements 03/13/23 19:30:36.785
    STEP: Ensuring Pod has merged resource requirements applied from LimitRange 03/13/23 19:30:36.79
    Mar 13 19:30:36.792: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
    Mar 13 19:30:36.793: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Failing to create a Pod with less than min resources 03/13/23 19:30:36.793
    STEP: Failing to create a Pod with more than max resources 03/13/23 19:30:36.795
    STEP: Updating a LimitRange 03/13/23 19:30:36.798
    STEP: Verifying LimitRange updating is effective 03/13/23 19:30:36.801
    STEP: Creating a Pod with less than former min resources 03/13/23 19:30:38.808
    STEP: Failing to create a Pod with more than max resources 03/13/23 19:30:38.813
    STEP: Deleting a LimitRange 03/13/23 19:30:38.816
    STEP: Verifying the LimitRange was deleted 03/13/23 19:30:38.821
    Mar 13 19:30:43.825: INFO: limitRange is already deleted
    STEP: Creating a Pod with more than former max resources 03/13/23 19:30:43.825
    [AfterEach] [sig-scheduling] LimitRange
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:30:43.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      tear down framework | framework.go:193
    STEP: Destroying namespace "limitrange-6144" for this suite. 03/13/23 19:30:43.836
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:30:43.843
Mar 13 19:30:43.843: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 19:30:43.845
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:43.854
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:43.856
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244
STEP: creating an Endpoint 03/13/23 19:30:43.862
STEP: waiting for available Endpoint 03/13/23 19:30:43.865
STEP: listing all Endpoints 03/13/23 19:30:43.867
STEP: updating the Endpoint 03/13/23 19:30:43.87
STEP: fetching the Endpoint 03/13/23 19:30:43.874
STEP: patching the Endpoint 03/13/23 19:30:43.876
STEP: fetching the Endpoint 03/13/23 19:30:43.884
STEP: deleting the Endpoint by Collection 03/13/23 19:30:43.886
STEP: waiting for Endpoint deletion 03/13/23 19:30:43.89
STEP: fetching the Endpoint 03/13/23 19:30:43.892
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 19:30:43.893: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6184" for this suite. 03/13/23 19:30:43.896
------------------------------
â€¢ [0.057 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:30:43.843
    Mar 13 19:30:43.843: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 19:30:43.845
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:43.854
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:43.856
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should test the lifecycle of an Endpoint [Conformance]
      test/e2e/network/service.go:3244
    STEP: creating an Endpoint 03/13/23 19:30:43.862
    STEP: waiting for available Endpoint 03/13/23 19:30:43.865
    STEP: listing all Endpoints 03/13/23 19:30:43.867
    STEP: updating the Endpoint 03/13/23 19:30:43.87
    STEP: fetching the Endpoint 03/13/23 19:30:43.874
    STEP: patching the Endpoint 03/13/23 19:30:43.876
    STEP: fetching the Endpoint 03/13/23 19:30:43.884
    STEP: deleting the Endpoint by Collection 03/13/23 19:30:43.886
    STEP: waiting for Endpoint deletion 03/13/23 19:30:43.89
    STEP: fetching the Endpoint 03/13/23 19:30:43.892
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:30:43.893: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6184" for this suite. 03/13/23 19:30:43.896
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:30:43.901
Mar 13 19:30:43.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename deployment 03/13/23 19:30:43.902
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:43.913
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:43.915
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160
Mar 13 19:30:43.918: INFO: Creating deployment "webserver-deployment"
Mar 13 19:30:43.923: INFO: Waiting for observed generation 1
Mar 13 19:30:45.958: INFO: Waiting for all required pods to come up
Mar 13 19:30:45.999: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running 03/13/23 19:30:45.999
Mar 13 19:30:45.999: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-96kkd" in namespace "deployment-7124" to be "running"
Mar 13 19:30:46.000: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-9hv99" in namespace "deployment-7124" to be "running"
Mar 13 19:30:46.000: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-c7td7" in namespace "deployment-7124" to be "running"
Mar 13 19:30:46.000: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-dqwsl" in namespace "deployment-7124" to be "running"
Mar 13 19:30:46.000: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-f2w2w" in namespace "deployment-7124" to be "running"
Mar 13 19:30:46.000: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-knn54" in namespace "deployment-7124" to be "running"
Mar 13 19:30:46.001: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-mwct7" in namespace "deployment-7124" to be "running"
Mar 13 19:30:46.001: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-r24jd" in namespace "deployment-7124" to be "running"
Mar 13 19:30:46.001: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-sjfn2" in namespace "deployment-7124" to be "running"
Mar 13 19:30:46.005: INFO: Pod "webserver-deployment-7f5969cbc7-96kkd": Phase="Pending", Reason="", readiness=false. Elapsed: 5.911838ms
Mar 13 19:30:46.012: INFO: Pod "webserver-deployment-7f5969cbc7-mwct7": Phase="Pending", Reason="", readiness=false. Elapsed: 11.818842ms
Mar 13 19:30:46.036: INFO: Pod "webserver-deployment-7f5969cbc7-f2w2w": Phase="Pending", Reason="", readiness=false. Elapsed: 36.148856ms
Mar 13 19:30:46.045: INFO: Pod "webserver-deployment-7f5969cbc7-c7td7": Phase="Pending", Reason="", readiness=false. Elapsed: 44.781308ms
Mar 13 19:30:46.057: INFO: Pod "webserver-deployment-7f5969cbc7-sjfn2": Phase="Pending", Reason="", readiness=false. Elapsed: 55.763663ms
Mar 13 19:30:46.080: INFO: Pod "webserver-deployment-7f5969cbc7-r24jd": Phase="Pending", Reason="", readiness=false. Elapsed: 79.215478ms
Mar 13 19:30:46.089: INFO: Pod "webserver-deployment-7f5969cbc7-knn54": Phase="Pending", Reason="", readiness=false. Elapsed: 88.098763ms
Mar 13 19:30:46.098: INFO: Pod "webserver-deployment-7f5969cbc7-9hv99": Phase="Pending", Reason="", readiness=false. Elapsed: 98.56894ms
Mar 13 19:30:46.103: INFO: Pod "webserver-deployment-7f5969cbc7-dqwsl": Phase="Pending", Reason="", readiness=false. Elapsed: 102.903666ms
Mar 13 19:30:48.009: INFO: Pod "webserver-deployment-7f5969cbc7-96kkd": Phase="Running", Reason="", readiness=true. Elapsed: 2.009734574s
Mar 13 19:30:48.009: INFO: Pod "webserver-deployment-7f5969cbc7-96kkd" satisfied condition "running"
Mar 13 19:30:48.030: INFO: Pod "webserver-deployment-7f5969cbc7-mwct7": Phase="Running", Reason="", readiness=true. Elapsed: 2.029952254s
Mar 13 19:30:48.031: INFO: Pod "webserver-deployment-7f5969cbc7-mwct7" satisfied condition "running"
Mar 13 19:30:48.044: INFO: Pod "webserver-deployment-7f5969cbc7-f2w2w": Phase="Running", Reason="", readiness=true. Elapsed: 2.043674577s
Mar 13 19:30:48.044: INFO: Pod "webserver-deployment-7f5969cbc7-f2w2w" satisfied condition "running"
Mar 13 19:30:48.050: INFO: Pod "webserver-deployment-7f5969cbc7-c7td7": Phase="Running", Reason="", readiness=true. Elapsed: 2.049898583s
Mar 13 19:30:48.050: INFO: Pod "webserver-deployment-7f5969cbc7-c7td7" satisfied condition "running"
Mar 13 19:30:48.064: INFO: Pod "webserver-deployment-7f5969cbc7-sjfn2": Phase="Running", Reason="", readiness=true. Elapsed: 2.062620442s
Mar 13 19:30:48.064: INFO: Pod "webserver-deployment-7f5969cbc7-sjfn2" satisfied condition "running"
Mar 13 19:30:48.100: INFO: Pod "webserver-deployment-7f5969cbc7-r24jd": Phase="Running", Reason="", readiness=true. Elapsed: 2.099095661s
Mar 13 19:30:48.100: INFO: Pod "webserver-deployment-7f5969cbc7-r24jd" satisfied condition "running"
Mar 13 19:30:48.101: INFO: Pod "webserver-deployment-7f5969cbc7-knn54": Phase="Running", Reason="", readiness=true. Elapsed: 2.100075836s
Mar 13 19:30:48.101: INFO: Pod "webserver-deployment-7f5969cbc7-knn54" satisfied condition "running"
Mar 13 19:30:48.101: INFO: Pod "webserver-deployment-7f5969cbc7-9hv99": Phase="Running", Reason="", readiness=true. Elapsed: 2.101437851s
Mar 13 19:30:48.101: INFO: Pod "webserver-deployment-7f5969cbc7-9hv99" satisfied condition "running"
Mar 13 19:30:48.107: INFO: Pod "webserver-deployment-7f5969cbc7-dqwsl": Phase="Running", Reason="", readiness=true. Elapsed: 2.106581568s
Mar 13 19:30:48.107: INFO: Pod "webserver-deployment-7f5969cbc7-dqwsl" satisfied condition "running"
Mar 13 19:30:48.107: INFO: Waiting for deployment "webserver-deployment" to complete
Mar 13 19:30:48.112: INFO: Updating deployment "webserver-deployment" with a non-existent image
Mar 13 19:30:48.119: INFO: Updating deployment webserver-deployment
Mar 13 19:30:48.119: INFO: Waiting for observed generation 2
Mar 13 19:30:50.125: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Mar 13 19:30:50.128: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Mar 13 19:30:50.130: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Mar 13 19:30:50.136: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Mar 13 19:30:50.136: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Mar 13 19:30:50.138: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Mar 13 19:30:50.142: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Mar 13 19:30:50.142: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Mar 13 19:30:50.149: INFO: Updating deployment webserver-deployment
Mar 13 19:30:50.149: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Mar 13 19:30:50.153: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Mar 13 19:30:50.157: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar 13 19:30:50.164: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-7124  6b96a903-fc3f-42ea-abb0-882c7ead56d9 20035 3 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status} {e2e.test Update apps/v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0042d3448 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-13 19:30:46 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-d9f79cb5" is progressing.,LastUpdateTime:2023-03-13 19:30:48 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Mar 13 19:30:50.181: INFO: New ReplicaSet "webserver-deployment-d9f79cb5" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-d9f79cb5  deployment-7124  fbe2c487-250f-4597-8416-90dcaab33235 20039 3 2023-03-13 19:30:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 6b96a903-fc3f-42ea-abb0-882c7ead56d9 0xc00390c307 0xc00390c308}] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6b96a903-fc3f-42ea-abb0-882c7ead56d9\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: d9f79cb5,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00390c3b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Mar 13 19:30:50.181: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Mar 13 19:30:50.181: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-7f5969cbc7  deployment-7124  af9c0367-7d73-4471-ac3c-b69de9f0bb8d 20036 3 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 6b96a903-fc3f-42ea-abb0-882c7ead56d9 0xc00390c217 0xc00390c218}] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6b96a903-fc3f-42ea-abb0-882c7ead56d9\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00390c2a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Mar 13 19:30:50.276: INFO: Pod "webserver-deployment-7f5969cbc7-28bx2" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-28bx2 webserver-deployment-7f5969cbc7- deployment-7124  397bb0ee-ec02-42ec-9ae3-088e1d9bcb4b 20047 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc0042d3827 0xc0042d3828}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hzq8b,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hzq8b,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.276: INFO: Pod "webserver-deployment-7f5969cbc7-96kkd" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-96kkd webserver-deployment-7f5969cbc7- deployment-7124  c5f3307e-3cc7-43a5-80ae-793bee2bf68d 19880 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:2578bfd69c609bb2a5c055fdec84be57918e4a547f6798d7451e2783e908ad25 cni.projectcalico.org/podIP:10.244.40.221/32 cni.projectcalico.org/podIPs:10.244.40.221/32,2001:db8:42:54:cc0e:6104:8dc1:cca6/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc0042d3977 0xc0042d3978}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.40.221\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:54:cc0e:6104:8dc1:cca6\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2xwhp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2xwhp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.4,PodIP:10.244.40.221,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://cb2825abc47bdb430939a8307c2d1de957596cefc2b5f1633e4e1fff07ef1e09,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.40.221,},PodIP{IP:2001:db8:42:54:cc0e:6104:8dc1:cca6,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.277: INFO: Pod "webserver-deployment-7f5969cbc7-9hk5c" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-9hk5c webserver-deployment-7f5969cbc7- deployment-7124  6724d137-a6fc-4487-a3b3-2b69f0700a66 20052 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc0042d3f40 0xc0042d3f41}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vcqkn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vcqkn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.277: INFO: Pod "webserver-deployment-7f5969cbc7-9hv99" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-9hv99 webserver-deployment-7f5969cbc7- deployment-7124  1ab05664-cf15-4fc9-8bc1-3a62b6fc6d24 19871 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:11488d391daf1aac64a562d8f2644872509de93e06551f022a431406a6172499 cni.projectcalico.org/podIP:10.244.181.136/32 cni.projectcalico.org/podIPs:10.244.181.136/32,2001:db8:42:1f:e556:e398:18f3:c276/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d520f0 0xc003d520f1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.136\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c276\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ctcx9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ctcx9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.136,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://29d3b0342cb95a6c2cd5fce575668c423f73d5084d2670782775bd8b40161324,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.136,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c276,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.278: INFO: Pod "webserver-deployment-7f5969cbc7-c7td7" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-c7td7 webserver-deployment-7f5969cbc7- deployment-7124  84fe85fe-a88b-4dac-904d-20f52a5c2dce 19883 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:b4d862c6ff3c25a6515af30b4e6fab7aedc86c1798ac2c53e3e4557fcd786aff cni.projectcalico.org/podIP:10.244.40.248/32 cni.projectcalico.org/podIPs:10.244.40.248/32,2001:db8:42:54:cc0e:6104:8dc1:ccae/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d522f0 0xc003d522f1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.40.248\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:54:cc0e:6104:8dc1:ccae\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-55ntl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-55ntl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.4,PodIP:10.244.40.248,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://cc9287baca0a55c8368c9b3def6252f77835a1d7fae0c647324bd033bc3d06c0,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.40.248,},PodIP{IP:2001:db8:42:54:cc0e:6104:8dc1:ccae,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.278: INFO: Pod "webserver-deployment-7f5969cbc7-dwkjg" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-dwkjg webserver-deployment-7f5969cbc7- deployment-7124  cefdbd55-5ec7-47fe-941f-c20ea5e82d51 20046 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d524e0 0xc003d524e1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8kflt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8kflt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.279: INFO: Pod "webserver-deployment-7f5969cbc7-hftr9" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-hftr9 webserver-deployment-7f5969cbc7- deployment-7124  3351a275-c188-4cc6-a916-69ba77f56860 20040 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d52630 0xc003d52631}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-txn6w,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-txn6w,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.279: INFO: Pod "webserver-deployment-7f5969cbc7-kdk95" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-kdk95 webserver-deployment-7f5969cbc7- deployment-7124  99613040-7340-441f-8533-4a132ffa77a1 20051 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d52780 0xc003d52781}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-76x88,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-76x88,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.279: INFO: Pod "webserver-deployment-7f5969cbc7-knn54" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-knn54 webserver-deployment-7f5969cbc7- deployment-7124  7ee23f03-be6f-424d-951b-45dafb3a6bb0 19893 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:f15929c9f75f07ae2b373cf8690df8df96e4436e86f9fdbd12f07537c3b75864 cni.projectcalico.org/podIP:10.244.181.183/32 cni.projectcalico.org/podIPs:10.244.181.183/32,2001:db8:42:1f:e556:e398:18f3:c27f/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d528b7 0xc003d528b8}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.183\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c27f\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-n75qx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-n75qx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.183,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://1cc4bd1001b34963a7f32a378e574e14e7c95a088fc97136ef041b9c843d56dd,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.183,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c27f,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.280: INFO: Pod "webserver-deployment-7f5969cbc7-mwct7" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-mwct7 webserver-deployment-7f5969cbc7- deployment-7124  a9fb5321-5368-4243-878a-5c8843f2c1d2 19876 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:7985e523540e0d9b644408e0f69427ec76eee71a5a45cefd5f0e58ea68827a8a cni.projectcalico.org/podIP:10.244.181.177/32 cni.projectcalico.org/podIPs:10.244.181.177/32,2001:db8:42:1f:e556:e398:18f3:c274/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d52ac0 0xc003d52ac1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.177\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c274\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6l5br,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6l5br,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.177,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://755b28f0b55a81e0534873f392258dba7f250a0ec0a59e1bbf4cc4804fd433cc,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.177,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c274,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.280: INFO: Pod "webserver-deployment-7f5969cbc7-r24jd" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-r24jd webserver-deployment-7f5969cbc7- deployment-7124  4a9ff24f-7bb0-41b5-ba5e-e9229d115c4a 19867 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:af89465cda8a347b17a515343a0a2736e8e35bab3f48bc58654e00b6a4044f9e cni.projectcalico.org/podIP:10.244.181.166/32 cni.projectcalico.org/podIPs:10.244.181.166/32,2001:db8:42:1f:e556:e398:18f3:c26e/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d52cb0 0xc003d52cb1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.166\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c26e\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-q5wwv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-q5wwv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.166,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://b0f99cabb24fee5984a1e3c0796dd773212e78a02270d1efd350667ec74f37c7,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.166,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c26e,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.281: INFO: Pod "webserver-deployment-7f5969cbc7-sjfn2" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-sjfn2 webserver-deployment-7f5969cbc7- deployment-7124  50e8603e-c6a6-4ca9-85c3-e01cd93ad314 19895 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:d48b6686cdca3962c38d372b142496dbf521fad844c2d2bfdd1b97a4e8ce6db5 cni.projectcalico.org/podIP:10.244.40.225/32 cni.projectcalico.org/podIPs:10.244.40.225/32,2001:db8:42:54:cc0e:6104:8dc1:ccb5/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d52eb0 0xc003d52eb1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.40.225\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:54:cc0e:6104:8dc1:ccb5\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lxwdp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lxwdp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.4,PodIP:10.244.40.225,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://5db27cb26369dcaed138dcfdca18fd5c68736c8165ee1d855083c4ec41320ed7,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.40.225,},PodIP{IP:2001:db8:42:54:cc0e:6104:8dc1:ccb5,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.281: INFO: Pod "webserver-deployment-7f5969cbc7-wbgrn" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-wbgrn webserver-deployment-7f5969cbc7- deployment-7124  665f1ba2-a00e-47db-9849-5baaa2f597fa 19818 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:81adbbe4756320fe681099e64dbbba1fee2689075e96ba000d90c4a7aa55730f cni.projectcalico.org/podIP:10.244.181.185/32 cni.projectcalico.org/podIPs:10.244.181.185/32,2001:db8:42:1f:e556:e398:18f3:c25d/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d530a0 0xc003d530a1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.185\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c25d\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p7l8w,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p7l8w,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.185,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c84919479b6dc63a7986eeb23a8fa7e3e3a7459d250fa753fa4e0fb3ed06c75a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.185,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c25d,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.288: INFO: Pod "webserver-deployment-7f5969cbc7-z2dgc" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-z2dgc webserver-deployment-7f5969cbc7- deployment-7124  cef572ec-40e6-4040-8f34-830bcd5920dd 20049 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d53290 0xc003d53291}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z7sdw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z7sdw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.289: INFO: Pod "webserver-deployment-7f5969cbc7-zpzpw" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-zpzpw webserver-deployment-7f5969cbc7- deployment-7124  c9589107-afb6-42c8-8213-d64aa1a8d349 20048 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d533f7 0xc003d533f8}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5zkmg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5zkmg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.289: INFO: Pod "webserver-deployment-d9f79cb5-458k5" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-458k5 webserver-deployment-d9f79cb5- deployment-7124  e290e892-60ea-4204-9ae6-8f688efe855b 20045 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 fbe2c487-250f-4597-8416-90dcaab33235 0xc003d53537 0xc003d53538}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbe2c487-250f-4597-8416-90dcaab33235\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5pwtq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5pwtq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.289: INFO: Pod "webserver-deployment-d9f79cb5-82r5p" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-82r5p webserver-deployment-d9f79cb5- deployment-7124  8de4919e-4b8a-4772-b6c6-89d41c867806 20009 0 2023-03-13 19:30:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:6397ce328f7944f36614cfe1ace2b1f528e559ed6744cc97dd6467fb6aaae5e6 cni.projectcalico.org/podIP:10.244.181.158/32 cni.projectcalico.org/podIPs:10.244.181.158/32,2001:db8:42:1f:e556:e398:18f3:c249/128] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 fbe2c487-250f-4597-8416-90dcaab33235 0xc003d53687 0xc003d53688}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbe2c487-250f-4597-8416-90dcaab33235\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2023-03-13 19:30:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7cqwm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7cqwm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:,StartTime:2023-03-13 19:30:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.290: INFO: Pod "webserver-deployment-d9f79cb5-gl7z4" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-gl7z4 webserver-deployment-d9f79cb5- deployment-7124  c3c78967-9a61-4ba9-bc38-0d22d3ac561a 19997 0 2023-03-13 19:30:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:db492b114488a3112c7b0a7d517816e5139577f45e274a90ea3f426691885e9e cni.projectcalico.org/podIP:10.244.181.178/32 cni.projectcalico.org/podIPs:10.244.181.178/32,2001:db8:42:1f:e556:e398:18f3:c264/128] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 fbe2c487-250f-4597-8416-90dcaab33235 0xc003d5386f 0xc003d53950}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbe2c487-250f-4597-8416-90dcaab33235\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2023-03-13 19:30:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mpcw8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mpcw8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:,StartTime:2023-03-13 19:30:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.290: INFO: Pod "webserver-deployment-d9f79cb5-hzzcz" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-hzzcz webserver-deployment-d9f79cb5- deployment-7124  44cdf5de-45ad-438d-931f-941deb9b4ffb 20027 0 2023-03-13 19:30:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:f073b05301a4c052d3299154684cf4cbd8f88927084c4acbefc464ec39bf76b6 cni.projectcalico.org/podIP:10.244.40.223/32 cni.projectcalico.org/podIPs:10.244.40.223/32,2001:db8:42:54:cc0e:6104:8dc1:cca9/128] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 fbe2c487-250f-4597-8416-90dcaab33235 0xc003d53b2f 0xc003d53b50}] [] [{calico Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbe2c487-250f-4597-8416-90dcaab33235\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.40.223\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:54:cc0e:6104:8dc1:cca9\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2mgkx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2mgkx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.4,PodIP:10.244.40.223,StartTime:2023-03-13 19:30:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.40.223,},PodIP{IP:2001:db8:42:54:cc0e:6104:8dc1:cca9,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.291: INFO: Pod "webserver-deployment-d9f79cb5-jdll8" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-jdll8 webserver-deployment-d9f79cb5- deployment-7124  763f12a6-a801-4043-8ea4-eca8b6022bb7 19988 0 2023-03-13 19:30:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:f95b3bddd7e5ff76a5f11a2d537d2ffce6443c41fe09c10a2203467bed25467c cni.projectcalico.org/podIP:10.244.181.139/32 cni.projectcalico.org/podIPs:10.244.181.139/32,2001:db8:42:1f:e556:e398:18f3:c270/128] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 fbe2c487-250f-4597-8416-90dcaab33235 0xc003d53e6f 0xc003d53e80}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbe2c487-250f-4597-8416-90dcaab33235\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2023-03-13 19:30:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mtznd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mtznd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:,StartTime:2023-03-13 19:30:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:30:50.300: INFO: Pod "webserver-deployment-d9f79cb5-qk5zd" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-qk5zd webserver-deployment-d9f79cb5- deployment-7124  f4924fd8-93a1-4a76-a04f-afbbaecd93ef 20031 0 2023-03-13 19:30:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:e64f0452effb7f7eb525f2a85ed3bd265c8ad3854069c90f9b43f2472a8b5824 cni.projectcalico.org/podIP:10.244.40.234/32 cni.projectcalico.org/podIPs:10.244.40.234/32,2001:db8:42:54:cc0e:6104:8dc1:ccb7/128] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 fbe2c487-250f-4597-8416-90dcaab33235 0xc00453811f 0xc004538140}] [] [{calico Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbe2c487-250f-4597-8416-90dcaab33235\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.40.234\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:54:cc0e:6104:8dc1:ccb7\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xlhc4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xlhc4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.4,PodIP:10.244.40.234,StartTime:2023-03-13 19:30:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.40.234,},PodIP{IP:2001:db8:42:54:cc0e:6104:8dc1:ccb7,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar 13 19:30:50.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-7124" for this suite. 03/13/23 19:30:50.304
------------------------------
â€¢ [SLOW TEST] [6.409 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:30:43.901
    Mar 13 19:30:43.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename deployment 03/13/23 19:30:43.902
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:43.913
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:43.915
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should support proportional scaling [Conformance]
      test/e2e/apps/deployment.go:160
    Mar 13 19:30:43.918: INFO: Creating deployment "webserver-deployment"
    Mar 13 19:30:43.923: INFO: Waiting for observed generation 1
    Mar 13 19:30:45.958: INFO: Waiting for all required pods to come up
    Mar 13 19:30:45.999: INFO: Pod name httpd: Found 10 pods out of 10
    STEP: ensuring each pod is running 03/13/23 19:30:45.999
    Mar 13 19:30:45.999: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-96kkd" in namespace "deployment-7124" to be "running"
    Mar 13 19:30:46.000: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-9hv99" in namespace "deployment-7124" to be "running"
    Mar 13 19:30:46.000: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-c7td7" in namespace "deployment-7124" to be "running"
    Mar 13 19:30:46.000: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-dqwsl" in namespace "deployment-7124" to be "running"
    Mar 13 19:30:46.000: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-f2w2w" in namespace "deployment-7124" to be "running"
    Mar 13 19:30:46.000: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-knn54" in namespace "deployment-7124" to be "running"
    Mar 13 19:30:46.001: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-mwct7" in namespace "deployment-7124" to be "running"
    Mar 13 19:30:46.001: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-r24jd" in namespace "deployment-7124" to be "running"
    Mar 13 19:30:46.001: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-sjfn2" in namespace "deployment-7124" to be "running"
    Mar 13 19:30:46.005: INFO: Pod "webserver-deployment-7f5969cbc7-96kkd": Phase="Pending", Reason="", readiness=false. Elapsed: 5.911838ms
    Mar 13 19:30:46.012: INFO: Pod "webserver-deployment-7f5969cbc7-mwct7": Phase="Pending", Reason="", readiness=false. Elapsed: 11.818842ms
    Mar 13 19:30:46.036: INFO: Pod "webserver-deployment-7f5969cbc7-f2w2w": Phase="Pending", Reason="", readiness=false. Elapsed: 36.148856ms
    Mar 13 19:30:46.045: INFO: Pod "webserver-deployment-7f5969cbc7-c7td7": Phase="Pending", Reason="", readiness=false. Elapsed: 44.781308ms
    Mar 13 19:30:46.057: INFO: Pod "webserver-deployment-7f5969cbc7-sjfn2": Phase="Pending", Reason="", readiness=false. Elapsed: 55.763663ms
    Mar 13 19:30:46.080: INFO: Pod "webserver-deployment-7f5969cbc7-r24jd": Phase="Pending", Reason="", readiness=false. Elapsed: 79.215478ms
    Mar 13 19:30:46.089: INFO: Pod "webserver-deployment-7f5969cbc7-knn54": Phase="Pending", Reason="", readiness=false. Elapsed: 88.098763ms
    Mar 13 19:30:46.098: INFO: Pod "webserver-deployment-7f5969cbc7-9hv99": Phase="Pending", Reason="", readiness=false. Elapsed: 98.56894ms
    Mar 13 19:30:46.103: INFO: Pod "webserver-deployment-7f5969cbc7-dqwsl": Phase="Pending", Reason="", readiness=false. Elapsed: 102.903666ms
    Mar 13 19:30:48.009: INFO: Pod "webserver-deployment-7f5969cbc7-96kkd": Phase="Running", Reason="", readiness=true. Elapsed: 2.009734574s
    Mar 13 19:30:48.009: INFO: Pod "webserver-deployment-7f5969cbc7-96kkd" satisfied condition "running"
    Mar 13 19:30:48.030: INFO: Pod "webserver-deployment-7f5969cbc7-mwct7": Phase="Running", Reason="", readiness=true. Elapsed: 2.029952254s
    Mar 13 19:30:48.031: INFO: Pod "webserver-deployment-7f5969cbc7-mwct7" satisfied condition "running"
    Mar 13 19:30:48.044: INFO: Pod "webserver-deployment-7f5969cbc7-f2w2w": Phase="Running", Reason="", readiness=true. Elapsed: 2.043674577s
    Mar 13 19:30:48.044: INFO: Pod "webserver-deployment-7f5969cbc7-f2w2w" satisfied condition "running"
    Mar 13 19:30:48.050: INFO: Pod "webserver-deployment-7f5969cbc7-c7td7": Phase="Running", Reason="", readiness=true. Elapsed: 2.049898583s
    Mar 13 19:30:48.050: INFO: Pod "webserver-deployment-7f5969cbc7-c7td7" satisfied condition "running"
    Mar 13 19:30:48.064: INFO: Pod "webserver-deployment-7f5969cbc7-sjfn2": Phase="Running", Reason="", readiness=true. Elapsed: 2.062620442s
    Mar 13 19:30:48.064: INFO: Pod "webserver-deployment-7f5969cbc7-sjfn2" satisfied condition "running"
    Mar 13 19:30:48.100: INFO: Pod "webserver-deployment-7f5969cbc7-r24jd": Phase="Running", Reason="", readiness=true. Elapsed: 2.099095661s
    Mar 13 19:30:48.100: INFO: Pod "webserver-deployment-7f5969cbc7-r24jd" satisfied condition "running"
    Mar 13 19:30:48.101: INFO: Pod "webserver-deployment-7f5969cbc7-knn54": Phase="Running", Reason="", readiness=true. Elapsed: 2.100075836s
    Mar 13 19:30:48.101: INFO: Pod "webserver-deployment-7f5969cbc7-knn54" satisfied condition "running"
    Mar 13 19:30:48.101: INFO: Pod "webserver-deployment-7f5969cbc7-9hv99": Phase="Running", Reason="", readiness=true. Elapsed: 2.101437851s
    Mar 13 19:30:48.101: INFO: Pod "webserver-deployment-7f5969cbc7-9hv99" satisfied condition "running"
    Mar 13 19:30:48.107: INFO: Pod "webserver-deployment-7f5969cbc7-dqwsl": Phase="Running", Reason="", readiness=true. Elapsed: 2.106581568s
    Mar 13 19:30:48.107: INFO: Pod "webserver-deployment-7f5969cbc7-dqwsl" satisfied condition "running"
    Mar 13 19:30:48.107: INFO: Waiting for deployment "webserver-deployment" to complete
    Mar 13 19:30:48.112: INFO: Updating deployment "webserver-deployment" with a non-existent image
    Mar 13 19:30:48.119: INFO: Updating deployment webserver-deployment
    Mar 13 19:30:48.119: INFO: Waiting for observed generation 2
    Mar 13 19:30:50.125: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
    Mar 13 19:30:50.128: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
    Mar 13 19:30:50.130: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
    Mar 13 19:30:50.136: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
    Mar 13 19:30:50.136: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
    Mar 13 19:30:50.138: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
    Mar 13 19:30:50.142: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
    Mar 13 19:30:50.142: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
    Mar 13 19:30:50.149: INFO: Updating deployment webserver-deployment
    Mar 13 19:30:50.149: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
    Mar 13 19:30:50.153: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
    Mar 13 19:30:50.157: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar 13 19:30:50.164: INFO: Deployment "webserver-deployment":
    &Deployment{ObjectMeta:{webserver-deployment  deployment-7124  6b96a903-fc3f-42ea-abb0-882c7ead56d9 20035 3 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status} {e2e.test Update apps/v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0042d3448 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-13 19:30:46 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-d9f79cb5" is progressing.,LastUpdateTime:2023-03-13 19:30:48 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

    Mar 13 19:30:50.181: INFO: New ReplicaSet "webserver-deployment-d9f79cb5" of Deployment "webserver-deployment":
    &ReplicaSet{ObjectMeta:{webserver-deployment-d9f79cb5  deployment-7124  fbe2c487-250f-4597-8416-90dcaab33235 20039 3 2023-03-13 19:30:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 6b96a903-fc3f-42ea-abb0-882c7ead56d9 0xc00390c307 0xc00390c308}] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6b96a903-fc3f-42ea-abb0-882c7ead56d9\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: d9f79cb5,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00390c3b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Mar 13 19:30:50.181: INFO: All old ReplicaSets of Deployment "webserver-deployment":
    Mar 13 19:30:50.181: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-7f5969cbc7  deployment-7124  af9c0367-7d73-4471-ac3c-b69de9f0bb8d 20036 3 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 6b96a903-fc3f-42ea-abb0-882c7ead56d9 0xc00390c217 0xc00390c218}] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6b96a903-fc3f-42ea-abb0-882c7ead56d9\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00390c2a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
    Mar 13 19:30:50.276: INFO: Pod "webserver-deployment-7f5969cbc7-28bx2" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-28bx2 webserver-deployment-7f5969cbc7- deployment-7124  397bb0ee-ec02-42ec-9ae3-088e1d9bcb4b 20047 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc0042d3827 0xc0042d3828}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hzq8b,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hzq8b,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.276: INFO: Pod "webserver-deployment-7f5969cbc7-96kkd" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-96kkd webserver-deployment-7f5969cbc7- deployment-7124  c5f3307e-3cc7-43a5-80ae-793bee2bf68d 19880 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:2578bfd69c609bb2a5c055fdec84be57918e4a547f6798d7451e2783e908ad25 cni.projectcalico.org/podIP:10.244.40.221/32 cni.projectcalico.org/podIPs:10.244.40.221/32,2001:db8:42:54:cc0e:6104:8dc1:cca6/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc0042d3977 0xc0042d3978}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.40.221\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:54:cc0e:6104:8dc1:cca6\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2xwhp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2xwhp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.4,PodIP:10.244.40.221,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://cb2825abc47bdb430939a8307c2d1de957596cefc2b5f1633e4e1fff07ef1e09,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.40.221,},PodIP{IP:2001:db8:42:54:cc0e:6104:8dc1:cca6,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.277: INFO: Pod "webserver-deployment-7f5969cbc7-9hk5c" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-9hk5c webserver-deployment-7f5969cbc7- deployment-7124  6724d137-a6fc-4487-a3b3-2b69f0700a66 20052 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc0042d3f40 0xc0042d3f41}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vcqkn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vcqkn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.277: INFO: Pod "webserver-deployment-7f5969cbc7-9hv99" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-9hv99 webserver-deployment-7f5969cbc7- deployment-7124  1ab05664-cf15-4fc9-8bc1-3a62b6fc6d24 19871 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:11488d391daf1aac64a562d8f2644872509de93e06551f022a431406a6172499 cni.projectcalico.org/podIP:10.244.181.136/32 cni.projectcalico.org/podIPs:10.244.181.136/32,2001:db8:42:1f:e556:e398:18f3:c276/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d520f0 0xc003d520f1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.136\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c276\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ctcx9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ctcx9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.136,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://29d3b0342cb95a6c2cd5fce575668c423f73d5084d2670782775bd8b40161324,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.136,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c276,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.278: INFO: Pod "webserver-deployment-7f5969cbc7-c7td7" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-c7td7 webserver-deployment-7f5969cbc7- deployment-7124  84fe85fe-a88b-4dac-904d-20f52a5c2dce 19883 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:b4d862c6ff3c25a6515af30b4e6fab7aedc86c1798ac2c53e3e4557fcd786aff cni.projectcalico.org/podIP:10.244.40.248/32 cni.projectcalico.org/podIPs:10.244.40.248/32,2001:db8:42:54:cc0e:6104:8dc1:ccae/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d522f0 0xc003d522f1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.40.248\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:54:cc0e:6104:8dc1:ccae\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-55ntl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-55ntl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.4,PodIP:10.244.40.248,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://cc9287baca0a55c8368c9b3def6252f77835a1d7fae0c647324bd033bc3d06c0,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.40.248,},PodIP{IP:2001:db8:42:54:cc0e:6104:8dc1:ccae,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.278: INFO: Pod "webserver-deployment-7f5969cbc7-dwkjg" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-dwkjg webserver-deployment-7f5969cbc7- deployment-7124  cefdbd55-5ec7-47fe-941f-c20ea5e82d51 20046 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d524e0 0xc003d524e1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8kflt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8kflt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.279: INFO: Pod "webserver-deployment-7f5969cbc7-hftr9" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-hftr9 webserver-deployment-7f5969cbc7- deployment-7124  3351a275-c188-4cc6-a916-69ba77f56860 20040 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d52630 0xc003d52631}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-txn6w,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-txn6w,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.279: INFO: Pod "webserver-deployment-7f5969cbc7-kdk95" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-kdk95 webserver-deployment-7f5969cbc7- deployment-7124  99613040-7340-441f-8533-4a132ffa77a1 20051 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d52780 0xc003d52781}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-76x88,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-76x88,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.279: INFO: Pod "webserver-deployment-7f5969cbc7-knn54" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-knn54 webserver-deployment-7f5969cbc7- deployment-7124  7ee23f03-be6f-424d-951b-45dafb3a6bb0 19893 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:f15929c9f75f07ae2b373cf8690df8df96e4436e86f9fdbd12f07537c3b75864 cni.projectcalico.org/podIP:10.244.181.183/32 cni.projectcalico.org/podIPs:10.244.181.183/32,2001:db8:42:1f:e556:e398:18f3:c27f/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d528b7 0xc003d528b8}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.183\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c27f\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-n75qx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-n75qx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.183,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://1cc4bd1001b34963a7f32a378e574e14e7c95a088fc97136ef041b9c843d56dd,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.183,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c27f,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.280: INFO: Pod "webserver-deployment-7f5969cbc7-mwct7" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-mwct7 webserver-deployment-7f5969cbc7- deployment-7124  a9fb5321-5368-4243-878a-5c8843f2c1d2 19876 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:7985e523540e0d9b644408e0f69427ec76eee71a5a45cefd5f0e58ea68827a8a cni.projectcalico.org/podIP:10.244.181.177/32 cni.projectcalico.org/podIPs:10.244.181.177/32,2001:db8:42:1f:e556:e398:18f3:c274/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d52ac0 0xc003d52ac1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.177\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c274\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6l5br,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6l5br,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.177,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://755b28f0b55a81e0534873f392258dba7f250a0ec0a59e1bbf4cc4804fd433cc,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.177,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c274,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.280: INFO: Pod "webserver-deployment-7f5969cbc7-r24jd" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-r24jd webserver-deployment-7f5969cbc7- deployment-7124  4a9ff24f-7bb0-41b5-ba5e-e9229d115c4a 19867 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:af89465cda8a347b17a515343a0a2736e8e35bab3f48bc58654e00b6a4044f9e cni.projectcalico.org/podIP:10.244.181.166/32 cni.projectcalico.org/podIPs:10.244.181.166/32,2001:db8:42:1f:e556:e398:18f3:c26e/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d52cb0 0xc003d52cb1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.166\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c26e\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-q5wwv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-q5wwv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.166,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://b0f99cabb24fee5984a1e3c0796dd773212e78a02270d1efd350667ec74f37c7,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.166,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c26e,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.281: INFO: Pod "webserver-deployment-7f5969cbc7-sjfn2" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-sjfn2 webserver-deployment-7f5969cbc7- deployment-7124  50e8603e-c6a6-4ca9-85c3-e01cd93ad314 19895 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:d48b6686cdca3962c38d372b142496dbf521fad844c2d2bfdd1b97a4e8ce6db5 cni.projectcalico.org/podIP:10.244.40.225/32 cni.projectcalico.org/podIPs:10.244.40.225/32,2001:db8:42:54:cc0e:6104:8dc1:ccb5/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d52eb0 0xc003d52eb1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.40.225\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:54:cc0e:6104:8dc1:ccb5\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lxwdp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lxwdp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.4,PodIP:10.244.40.225,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://5db27cb26369dcaed138dcfdca18fd5c68736c8165ee1d855083c4ec41320ed7,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.40.225,},PodIP{IP:2001:db8:42:54:cc0e:6104:8dc1:ccb5,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.281: INFO: Pod "webserver-deployment-7f5969cbc7-wbgrn" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-wbgrn webserver-deployment-7f5969cbc7- deployment-7124  665f1ba2-a00e-47db-9849-5baaa2f597fa 19818 0 2023-03-13 19:30:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:81adbbe4756320fe681099e64dbbba1fee2689075e96ba000d90c4a7aa55730f cni.projectcalico.org/podIP:10.244.181.185/32 cni.projectcalico.org/podIPs:10.244.181.185/32,2001:db8:42:1f:e556:e398:18f3:c25d/128] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d530a0 0xc003d530a1}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:30:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:30:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.185\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c25d\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p7l8w,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p7l8w,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.185,StartTime:2023-03-13 19:30:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:30:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c84919479b6dc63a7986eeb23a8fa7e3e3a7459d250fa753fa4e0fb3ed06c75a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.185,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c25d,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.288: INFO: Pod "webserver-deployment-7f5969cbc7-z2dgc" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-z2dgc webserver-deployment-7f5969cbc7- deployment-7124  cef572ec-40e6-4040-8f34-830bcd5920dd 20049 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d53290 0xc003d53291}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z7sdw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z7sdw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.289: INFO: Pod "webserver-deployment-7f5969cbc7-zpzpw" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-zpzpw webserver-deployment-7f5969cbc7- deployment-7124  c9589107-afb6-42c8-8213-d64aa1a8d349 20048 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 af9c0367-7d73-4471-ac3c-b69de9f0bb8d 0xc003d533f7 0xc003d533f8}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"af9c0367-7d73-4471-ac3c-b69de9f0bb8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5zkmg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5zkmg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.289: INFO: Pod "webserver-deployment-d9f79cb5-458k5" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-458k5 webserver-deployment-d9f79cb5- deployment-7124  e290e892-60ea-4204-9ae6-8f688efe855b 20045 0 2023-03-13 19:30:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 fbe2c487-250f-4597-8416-90dcaab33235 0xc003d53537 0xc003d53538}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbe2c487-250f-4597-8416-90dcaab33235\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5pwtq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5pwtq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.289: INFO: Pod "webserver-deployment-d9f79cb5-82r5p" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-82r5p webserver-deployment-d9f79cb5- deployment-7124  8de4919e-4b8a-4772-b6c6-89d41c867806 20009 0 2023-03-13 19:30:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:6397ce328f7944f36614cfe1ace2b1f528e559ed6744cc97dd6467fb6aaae5e6 cni.projectcalico.org/podIP:10.244.181.158/32 cni.projectcalico.org/podIPs:10.244.181.158/32,2001:db8:42:1f:e556:e398:18f3:c249/128] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 fbe2c487-250f-4597-8416-90dcaab33235 0xc003d53687 0xc003d53688}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbe2c487-250f-4597-8416-90dcaab33235\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2023-03-13 19:30:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7cqwm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7cqwm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:,StartTime:2023-03-13 19:30:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.290: INFO: Pod "webserver-deployment-d9f79cb5-gl7z4" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-gl7z4 webserver-deployment-d9f79cb5- deployment-7124  c3c78967-9a61-4ba9-bc38-0d22d3ac561a 19997 0 2023-03-13 19:30:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:db492b114488a3112c7b0a7d517816e5139577f45e274a90ea3f426691885e9e cni.projectcalico.org/podIP:10.244.181.178/32 cni.projectcalico.org/podIPs:10.244.181.178/32,2001:db8:42:1f:e556:e398:18f3:c264/128] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 fbe2c487-250f-4597-8416-90dcaab33235 0xc003d5386f 0xc003d53950}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbe2c487-250f-4597-8416-90dcaab33235\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2023-03-13 19:30:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mpcw8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mpcw8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:,StartTime:2023-03-13 19:30:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.290: INFO: Pod "webserver-deployment-d9f79cb5-hzzcz" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-hzzcz webserver-deployment-d9f79cb5- deployment-7124  44cdf5de-45ad-438d-931f-941deb9b4ffb 20027 0 2023-03-13 19:30:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:f073b05301a4c052d3299154684cf4cbd8f88927084c4acbefc464ec39bf76b6 cni.projectcalico.org/podIP:10.244.40.223/32 cni.projectcalico.org/podIPs:10.244.40.223/32,2001:db8:42:54:cc0e:6104:8dc1:cca9/128] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 fbe2c487-250f-4597-8416-90dcaab33235 0xc003d53b2f 0xc003d53b50}] [] [{calico Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbe2c487-250f-4597-8416-90dcaab33235\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.40.223\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:54:cc0e:6104:8dc1:cca9\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2mgkx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2mgkx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.4,PodIP:10.244.40.223,StartTime:2023-03-13 19:30:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.40.223,},PodIP{IP:2001:db8:42:54:cc0e:6104:8dc1:cca9,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.291: INFO: Pod "webserver-deployment-d9f79cb5-jdll8" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-jdll8 webserver-deployment-d9f79cb5- deployment-7124  763f12a6-a801-4043-8ea4-eca8b6022bb7 19988 0 2023-03-13 19:30:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:f95b3bddd7e5ff76a5f11a2d537d2ffce6443c41fe09c10a2203467bed25467c cni.projectcalico.org/podIP:10.244.181.139/32 cni.projectcalico.org/podIPs:10.244.181.139/32,2001:db8:42:1f:e556:e398:18f3:c270/128] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 fbe2c487-250f-4597-8416-90dcaab33235 0xc003d53e6f 0xc003d53e80}] [] [{kube-controller-manager Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbe2c487-250f-4597-8416-90dcaab33235\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2023-03-13 19:30:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mtznd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mtznd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:,StartTime:2023-03-13 19:30:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:30:50.300: INFO: Pod "webserver-deployment-d9f79cb5-qk5zd" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-qk5zd webserver-deployment-d9f79cb5- deployment-7124  f4924fd8-93a1-4a76-a04f-afbbaecd93ef 20031 0 2023-03-13 19:30:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:e64f0452effb7f7eb525f2a85ed3bd265c8ad3854069c90f9b43f2472a8b5824 cni.projectcalico.org/podIP:10.244.40.234/32 cni.projectcalico.org/podIPs:10.244.40.234/32,2001:db8:42:54:cc0e:6104:8dc1:ccb7/128] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 fbe2c487-250f-4597-8416-90dcaab33235 0xc00453811f 0xc004538140}] [] [{calico Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2023-03-13 19:30:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbe2c487-250f-4597-8416-90dcaab33235\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 19:30:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.40.234\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:54:cc0e:6104:8dc1:ccb7\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xlhc4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xlhc4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-f5b1d7d2d722,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:30:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.4,PodIP:10.244.40.234,StartTime:2023-03-13 19:30:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.40.234,},PodIP{IP:2001:db8:42:54:cc0e:6104:8dc1:ccb7,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:30:50.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-7124" for this suite. 03/13/23 19:30:50.304
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial]
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:30:50.316
Mar 13 19:30:50.316: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename daemonsets 03/13/23 19:30:50.317
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:50.326
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:50.329
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823
STEP: Creating simple DaemonSet "daemon-set" 03/13/23 19:30:50.344
STEP: Check that daemon pods launch on every node of the cluster. 03/13/23 19:30:50.348
Mar 13 19:30:50.352: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:30:50.352: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:30:51.359: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:30:51.359: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:30:52.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:30:52.358: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:30:53.372: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:30:53.375: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:30:54.360: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:30:54.360: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:30:55.368: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:30:55.368: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:30:56.362: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:30:56.362: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:30:57.360: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:30:57.360: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:30:58.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:30:58.358: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:30:59.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:30:59.358: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:31:00.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:31:00.358: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:31:01.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:31:01.358: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:31:02.369: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar 13 19:31:02.369: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:31:03.377: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar 13 19:31:03.378: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: listing all DeamonSets 03/13/23 19:31:03.386
STEP: DeleteCollection of the DaemonSets 03/13/23 19:31:03.394
STEP: Verify that ReplicaSets have been deleted 03/13/23 19:31:03.413
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
Mar 13 19:31:03.450: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20491"},"items":null}

Mar 13 19:31:03.463: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20491"},"items":[{"metadata":{"name":"daemon-set-vwgcn","generateName":"daemon-set-","namespace":"daemonsets-3202","uid":"cb4a313f-1f08-45b5-8b4b-fcc34c4b86e2","resourceVersion":"20482","creationTimestamp":"2023-03-13T19:30:50Z","labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"1e8e7d4109928009a02134589aee7d3b5254e486ca90c46efe89f6c94deb9ee3","cni.projectcalico.org/podIP":"10.244.40.240/32","cni.projectcalico.org/podIPs":"10.244.40.240/32,2001:db8:42:54:cc0e:6104:8dc1:cc9e/128"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"379bb29f-1747-4d01-bef8-34aa7119e1dd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-03-13T19:30:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"379bb29f-1747-4d01-bef8-34aa7119e1dd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-03-13T19:30:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-03-13T19:31:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.40.240\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:54:cc0e:6104:8dc1:cc9e\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5pkm8","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5pkm8","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"vke-automated-test-f5b1d7d2d722","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["vke-automated-test-f5b1d7d2d722"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:50Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:50Z"}],"hostIP":"10.1.96.4","podIP":"10.244.40.240","podIPs":[{"ip":"10.244.40.240"},{"ip":"2001:db8:42:54:cc0e:6104:8dc1:cc9e"}],"startTime":"2023-03-13T19:30:50Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-03-13T19:30:53Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://fd6f32a9c4827f3a8d86e43b736dcf9fd0c3305b17ba04a86eae9ef4cb1a2a7e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-x4v4g","generateName":"daemon-set-","namespace":"daemonsets-3202","uid":"20e39205-975b-4cf7-b757-b3b50fbb2151","resourceVersion":"20487","creationTimestamp":"2023-03-13T19:30:50Z","labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"ba0013046ce62d9b8598aec0bfbb131d9ccdb25d09061e894d0a89244705c336","cni.projectcalico.org/podIP":"10.244.181.156/32","cni.projectcalico.org/podIPs":"10.244.181.156/32,2001:db8:42:1f:e556:e398:18f3:c248/128"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"379bb29f-1747-4d01-bef8-34aa7119e1dd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-03-13T19:30:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"379bb29f-1747-4d01-bef8-34aa7119e1dd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-03-13T19:30:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-03-13T19:31:02Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.156\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c248\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xgfjs","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xgfjs","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"vke-automated-test-51df1d4fb06e","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["vke-automated-test-51df1d4fb06e"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:50Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:50Z"}],"hostIP":"10.1.96.5","podIP":"10.244.181.156","podIPs":[{"ip":"10.244.181.156"},{"ip":"2001:db8:42:1f:e556:e398:18f3:c248"}],"startTime":"2023-03-13T19:30:50Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-03-13T19:30:53Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://f8a9bdd5ad757d9e2719e7eda61f7956c2faee5dea8b68a27ee30d558e3015f1","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:31:03.511: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-3202" for this suite. 03/13/23 19:31:03.524
------------------------------
â€¢ [SLOW TEST] [13.222 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:30:50.316
    Mar 13 19:30:50.316: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename daemonsets 03/13/23 19:30:50.317
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:30:50.326
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:30:50.329
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should list and delete a collection of DaemonSets [Conformance]
      test/e2e/apps/daemon_set.go:823
    STEP: Creating simple DaemonSet "daemon-set" 03/13/23 19:30:50.344
    STEP: Check that daemon pods launch on every node of the cluster. 03/13/23 19:30:50.348
    Mar 13 19:30:50.352: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:30:50.352: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:30:51.359: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:30:51.359: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:30:52.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:30:52.358: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:30:53.372: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:30:53.375: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:30:54.360: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:30:54.360: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:30:55.368: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:30:55.368: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:30:56.362: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:30:56.362: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:30:57.360: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:30:57.360: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:30:58.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:30:58.358: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:30:59.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:30:59.358: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:31:00.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:31:00.358: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:31:01.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:31:01.358: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:31:02.369: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar 13 19:31:02.369: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:31:03.377: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar 13 19:31:03.378: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: listing all DeamonSets 03/13/23 19:31:03.386
    STEP: DeleteCollection of the DaemonSets 03/13/23 19:31:03.394
    STEP: Verify that ReplicaSets have been deleted 03/13/23 19:31:03.413
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    Mar 13 19:31:03.450: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20491"},"items":null}

    Mar 13 19:31:03.463: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20491"},"items":[{"metadata":{"name":"daemon-set-vwgcn","generateName":"daemon-set-","namespace":"daemonsets-3202","uid":"cb4a313f-1f08-45b5-8b4b-fcc34c4b86e2","resourceVersion":"20482","creationTimestamp":"2023-03-13T19:30:50Z","labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"1e8e7d4109928009a02134589aee7d3b5254e486ca90c46efe89f6c94deb9ee3","cni.projectcalico.org/podIP":"10.244.40.240/32","cni.projectcalico.org/podIPs":"10.244.40.240/32,2001:db8:42:54:cc0e:6104:8dc1:cc9e/128"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"379bb29f-1747-4d01-bef8-34aa7119e1dd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-03-13T19:30:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"379bb29f-1747-4d01-bef8-34aa7119e1dd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-03-13T19:30:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-03-13T19:31:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.40.240\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:54:cc0e:6104:8dc1:cc9e\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5pkm8","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5pkm8","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"vke-automated-test-f5b1d7d2d722","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["vke-automated-test-f5b1d7d2d722"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:50Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:50Z"}],"hostIP":"10.1.96.4","podIP":"10.244.40.240","podIPs":[{"ip":"10.244.40.240"},{"ip":"2001:db8:42:54:cc0e:6104:8dc1:cc9e"}],"startTime":"2023-03-13T19:30:50Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-03-13T19:30:53Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://fd6f32a9c4827f3a8d86e43b736dcf9fd0c3305b17ba04a86eae9ef4cb1a2a7e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-x4v4g","generateName":"daemon-set-","namespace":"daemonsets-3202","uid":"20e39205-975b-4cf7-b757-b3b50fbb2151","resourceVersion":"20487","creationTimestamp":"2023-03-13T19:30:50Z","labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"ba0013046ce62d9b8598aec0bfbb131d9ccdb25d09061e894d0a89244705c336","cni.projectcalico.org/podIP":"10.244.181.156/32","cni.projectcalico.org/podIPs":"10.244.181.156/32,2001:db8:42:1f:e556:e398:18f3:c248/128"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"379bb29f-1747-4d01-bef8-34aa7119e1dd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-03-13T19:30:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"379bb29f-1747-4d01-bef8-34aa7119e1dd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-03-13T19:30:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-03-13T19:31:02Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.156\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c248\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xgfjs","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xgfjs","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"vke-automated-test-51df1d4fb06e","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["vke-automated-test-51df1d4fb06e"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:50Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-13T19:30:50Z"}],"hostIP":"10.1.96.5","podIP":"10.244.181.156","podIPs":[{"ip":"10.244.181.156"},{"ip":"2001:db8:42:1f:e556:e398:18f3:c248"}],"startTime":"2023-03-13T19:30:50Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-03-13T19:30:53Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://f8a9bdd5ad757d9e2719e7eda61f7956c2faee5dea8b68a27ee30d558e3015f1","started":true}],"qosClass":"BestEffort"}}]}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:31:03.511: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-3202" for this suite. 03/13/23 19:31:03.524
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:31:03.551
Mar 13 19:31:03.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename init-container 03/13/23 19:31:03.554
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:03.589
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:03.594
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255
STEP: creating the pod 03/13/23 19:31:03.607
Mar 13 19:31:03.607: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:31:08.721: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-2150" for this suite. 03/13/23 19:31:08.741
------------------------------
â€¢ [SLOW TEST] [5.201 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:31:03.551
    Mar 13 19:31:03.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename init-container 03/13/23 19:31:03.554
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:03.589
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:03.594
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should invoke init containers on a RestartAlways pod [Conformance]
      test/e2e/common/node/init_container.go:255
    STEP: creating the pod 03/13/23 19:31:03.607
    Mar 13 19:31:03.607: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:31:08.721: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-2150" for this suite. 03/13/23 19:31:08.741
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Downward API
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:31:08.753
Mar 13 19:31:08.753: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 19:31:08.755
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:08.781
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:08.788
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217
STEP: Creating a pod to test downward api env vars 03/13/23 19:31:08.797
Mar 13 19:31:08.811: INFO: Waiting up to 5m0s for pod "downward-api-3b15f999-7cfb-495d-953e-4823efc0a947" in namespace "downward-api-3374" to be "Succeeded or Failed"
Mar 13 19:31:08.824: INFO: Pod "downward-api-3b15f999-7cfb-495d-953e-4823efc0a947": Phase="Pending", Reason="", readiness=false. Elapsed: 12.894402ms
Mar 13 19:31:10.829: INFO: Pod "downward-api-3b15f999-7cfb-495d-953e-4823efc0a947": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01827974s
Mar 13 19:31:12.834: INFO: Pod "downward-api-3b15f999-7cfb-495d-953e-4823efc0a947": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023494839s
STEP: Saw pod success 03/13/23 19:31:12.834
Mar 13 19:31:12.835: INFO: Pod "downward-api-3b15f999-7cfb-495d-953e-4823efc0a947" satisfied condition "Succeeded or Failed"
Mar 13 19:31:12.843: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downward-api-3b15f999-7cfb-495d-953e-4823efc0a947 container dapi-container: <nil>
STEP: delete the pod 03/13/23 19:31:12.857
Mar 13 19:31:12.871: INFO: Waiting for pod downward-api-3b15f999-7cfb-495d-953e-4823efc0a947 to disappear
Mar 13 19:31:12.874: INFO: Pod downward-api-3b15f999-7cfb-495d-953e-4823efc0a947 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Mar 13 19:31:12.875: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-3374" for this suite. 03/13/23 19:31:12.88
------------------------------
â€¢ [4.148 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:31:08.753
    Mar 13 19:31:08.753: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 19:31:08.755
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:08.781
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:08.788
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:217
    STEP: Creating a pod to test downward api env vars 03/13/23 19:31:08.797
    Mar 13 19:31:08.811: INFO: Waiting up to 5m0s for pod "downward-api-3b15f999-7cfb-495d-953e-4823efc0a947" in namespace "downward-api-3374" to be "Succeeded or Failed"
    Mar 13 19:31:08.824: INFO: Pod "downward-api-3b15f999-7cfb-495d-953e-4823efc0a947": Phase="Pending", Reason="", readiness=false. Elapsed: 12.894402ms
    Mar 13 19:31:10.829: INFO: Pod "downward-api-3b15f999-7cfb-495d-953e-4823efc0a947": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01827974s
    Mar 13 19:31:12.834: INFO: Pod "downward-api-3b15f999-7cfb-495d-953e-4823efc0a947": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023494839s
    STEP: Saw pod success 03/13/23 19:31:12.834
    Mar 13 19:31:12.835: INFO: Pod "downward-api-3b15f999-7cfb-495d-953e-4823efc0a947" satisfied condition "Succeeded or Failed"
    Mar 13 19:31:12.843: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downward-api-3b15f999-7cfb-495d-953e-4823efc0a947 container dapi-container: <nil>
    STEP: delete the pod 03/13/23 19:31:12.857
    Mar 13 19:31:12.871: INFO: Waiting for pod downward-api-3b15f999-7cfb-495d-953e-4823efc0a947 to disappear
    Mar 13 19:31:12.874: INFO: Pod downward-api-3b15f999-7cfb-495d-953e-4823efc0a947 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:31:12.875: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-3374" for this suite. 03/13/23 19:31:12.88
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:31:12.901
Mar 13 19:31:12.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 19:31:12.902
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:12.916
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:12.92
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147
STEP: Creating a pod to test emptydir 0777 on tmpfs 03/13/23 19:31:12.928
Mar 13 19:31:12.945: INFO: Waiting up to 5m0s for pod "pod-0d331d42-1fc0-471f-910b-5168b114f3b3" in namespace "emptydir-657" to be "Succeeded or Failed"
Mar 13 19:31:12.964: INFO: Pod "pod-0d331d42-1fc0-471f-910b-5168b114f3b3": Phase="Pending", Reason="", readiness=false. Elapsed: 19.222243ms
Mar 13 19:31:14.970: INFO: Pod "pod-0d331d42-1fc0-471f-910b-5168b114f3b3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024623573s
Mar 13 19:31:16.969: INFO: Pod "pod-0d331d42-1fc0-471f-910b-5168b114f3b3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023908113s
STEP: Saw pod success 03/13/23 19:31:16.969
Mar 13 19:31:16.969: INFO: Pod "pod-0d331d42-1fc0-471f-910b-5168b114f3b3" satisfied condition "Succeeded or Failed"
Mar 13 19:31:16.972: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-0d331d42-1fc0-471f-910b-5168b114f3b3 container test-container: <nil>
STEP: delete the pod 03/13/23 19:31:16.979
Mar 13 19:31:16.987: INFO: Waiting for pod pod-0d331d42-1fc0-471f-910b-5168b114f3b3 to disappear
Mar 13 19:31:16.989: INFO: Pod pod-0d331d42-1fc0-471f-910b-5168b114f3b3 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 19:31:16.989: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-657" for this suite. 03/13/23 19:31:16.993
------------------------------
â€¢ [4.097 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:31:12.901
    Mar 13 19:31:12.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 19:31:12.902
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:12.916
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:12.92
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:147
    STEP: Creating a pod to test emptydir 0777 on tmpfs 03/13/23 19:31:12.928
    Mar 13 19:31:12.945: INFO: Waiting up to 5m0s for pod "pod-0d331d42-1fc0-471f-910b-5168b114f3b3" in namespace "emptydir-657" to be "Succeeded or Failed"
    Mar 13 19:31:12.964: INFO: Pod "pod-0d331d42-1fc0-471f-910b-5168b114f3b3": Phase="Pending", Reason="", readiness=false. Elapsed: 19.222243ms
    Mar 13 19:31:14.970: INFO: Pod "pod-0d331d42-1fc0-471f-910b-5168b114f3b3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024623573s
    Mar 13 19:31:16.969: INFO: Pod "pod-0d331d42-1fc0-471f-910b-5168b114f3b3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023908113s
    STEP: Saw pod success 03/13/23 19:31:16.969
    Mar 13 19:31:16.969: INFO: Pod "pod-0d331d42-1fc0-471f-910b-5168b114f3b3" satisfied condition "Succeeded or Failed"
    Mar 13 19:31:16.972: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-0d331d42-1fc0-471f-910b-5168b114f3b3 container test-container: <nil>
    STEP: delete the pod 03/13/23 19:31:16.979
    Mar 13 19:31:16.987: INFO: Waiting for pod pod-0d331d42-1fc0-471f-910b-5168b114f3b3 to disappear
    Mar 13 19:31:16.989: INFO: Pod pod-0d331d42-1fc0-471f-910b-5168b114f3b3 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:31:16.989: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-657" for this suite. 03/13/23 19:31:16.993
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] InitContainer [NodeConformance]
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:31:16.999
Mar 13 19:31:17.000: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename init-container 03/13/23 19:31:17.001
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:17.009
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:17.014
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458
STEP: creating the pod 03/13/23 19:31:17.017
Mar 13 19:31:17.017: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:31:21.769: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-9134" for this suite. 03/13/23 19:31:21.774
------------------------------
â€¢ [4.782 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:31:16.999
    Mar 13 19:31:17.000: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename init-container 03/13/23 19:31:17.001
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:17.009
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:17.014
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
      test/e2e/common/node/init_container.go:458
    STEP: creating the pod 03/13/23 19:31:17.017
    Mar 13 19:31:17.017: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:31:21.769: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-9134" for this suite. 03/13/23 19:31:21.774
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:31:21.795
Mar 13 19:31:21.796: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename replication-controller 03/13/23 19:31:21.797
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:21.807
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:21.812
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67
STEP: Creating replication controller my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd 03/13/23 19:31:21.821
Mar 13 19:31:21.830: INFO: Pod name my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd: Found 0 pods out of 1
Mar 13 19:31:26.834: INFO: Pod name my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd: Found 1 pods out of 1
Mar 13 19:31:26.834: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd" are running
Mar 13 19:31:26.834: INFO: Waiting up to 5m0s for pod "my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd-8vd9q" in namespace "replication-controller-990" to be "running"
Mar 13 19:31:26.837: INFO: Pod "my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd-8vd9q": Phase="Running", Reason="", readiness=true. Elapsed: 2.934524ms
Mar 13 19:31:26.837: INFO: Pod "my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd-8vd9q" satisfied condition "running"
Mar 13 19:31:26.837: INFO: Pod "my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd-8vd9q" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 19:31:21 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 19:31:22 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 19:31:22 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 19:31:21 +0000 UTC Reason: Message:}])
Mar 13 19:31:26.837: INFO: Trying to dial the pod
Mar 13 19:31:31.856: INFO: Controller my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd: Got expected result from replica 1 [my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd-8vd9q]: "my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd-8vd9q", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Mar 13 19:31:31.856: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-990" for this suite. 03/13/23 19:31:31.861
------------------------------
â€¢ [SLOW TEST] [10.071 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:31:21.795
    Mar 13 19:31:21.796: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename replication-controller 03/13/23 19:31:21.797
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:21.807
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:21.812
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should serve a basic image on each replica with a public image  [Conformance]
      test/e2e/apps/rc.go:67
    STEP: Creating replication controller my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd 03/13/23 19:31:21.821
    Mar 13 19:31:21.830: INFO: Pod name my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd: Found 0 pods out of 1
    Mar 13 19:31:26.834: INFO: Pod name my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd: Found 1 pods out of 1
    Mar 13 19:31:26.834: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd" are running
    Mar 13 19:31:26.834: INFO: Waiting up to 5m0s for pod "my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd-8vd9q" in namespace "replication-controller-990" to be "running"
    Mar 13 19:31:26.837: INFO: Pod "my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd-8vd9q": Phase="Running", Reason="", readiness=true. Elapsed: 2.934524ms
    Mar 13 19:31:26.837: INFO: Pod "my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd-8vd9q" satisfied condition "running"
    Mar 13 19:31:26.837: INFO: Pod "my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd-8vd9q" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 19:31:21 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 19:31:22 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 19:31:22 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-13 19:31:21 +0000 UTC Reason: Message:}])
    Mar 13 19:31:26.837: INFO: Trying to dial the pod
    Mar 13 19:31:31.856: INFO: Controller my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd: Got expected result from replica 1 [my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd-8vd9q]: "my-hostname-basic-7d9ac0b3-540b-4442-84da-f968d3ae33dd-8vd9q", 1 of 1 required successes so far
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:31:31.856: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-990" for this suite. 03/13/23 19:31:31.861
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:31:31.87
Mar 13 19:31:31.870: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 19:31:31.872
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:31.883
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:31.885
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74
STEP: Creating configMap with name configmap-test-volume-c5fa47c2-53c3-4d5c-9338-658badf12ca3 03/13/23 19:31:31.888
STEP: Creating a pod to test consume configMaps 03/13/23 19:31:31.892
Mar 13 19:31:31.899: INFO: Waiting up to 5m0s for pod "pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892" in namespace "configmap-1103" to be "Succeeded or Failed"
Mar 13 19:31:31.901: INFO: Pod "pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892": Phase="Pending", Reason="", readiness=false. Elapsed: 2.33161ms
Mar 13 19:31:33.909: INFO: Pod "pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010519378s
Mar 13 19:31:35.905: INFO: Pod "pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006040213s
STEP: Saw pod success 03/13/23 19:31:35.905
Mar 13 19:31:35.905: INFO: Pod "pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892" satisfied condition "Succeeded or Failed"
Mar 13 19:31:35.908: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892 container agnhost-container: <nil>
STEP: delete the pod 03/13/23 19:31:35.917
Mar 13 19:31:35.925: INFO: Waiting for pod pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892 to disappear
Mar 13 19:31:35.929: INFO: Pod pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:31:35.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-1103" for this suite. 03/13/23 19:31:35.933
------------------------------
â€¢ [4.067 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:31:31.87
    Mar 13 19:31:31.870: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 19:31:31.872
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:31.883
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:31.885
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:74
    STEP: Creating configMap with name configmap-test-volume-c5fa47c2-53c3-4d5c-9338-658badf12ca3 03/13/23 19:31:31.888
    STEP: Creating a pod to test consume configMaps 03/13/23 19:31:31.892
    Mar 13 19:31:31.899: INFO: Waiting up to 5m0s for pod "pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892" in namespace "configmap-1103" to be "Succeeded or Failed"
    Mar 13 19:31:31.901: INFO: Pod "pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892": Phase="Pending", Reason="", readiness=false. Elapsed: 2.33161ms
    Mar 13 19:31:33.909: INFO: Pod "pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010519378s
    Mar 13 19:31:35.905: INFO: Pod "pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006040213s
    STEP: Saw pod success 03/13/23 19:31:35.905
    Mar 13 19:31:35.905: INFO: Pod "pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892" satisfied condition "Succeeded or Failed"
    Mar 13 19:31:35.908: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892 container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 19:31:35.917
    Mar 13 19:31:35.925: INFO: Waiting for pod pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892 to disappear
    Mar 13 19:31:35.929: INFO: Pod pod-configmaps-6282dae3-712b-46e8-8c2f-667173af6892 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:31:35.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-1103" for this suite. 03/13/23 19:31:35.933
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-network] Services
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:31:35.94
Mar 13 19:31:35.940: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 19:31:35.942
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:35.951
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:35.954
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848
STEP: creating service multi-endpoint-test in namespace services-4856 03/13/23 19:31:35.958
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4856 to expose endpoints map[] 03/13/23 19:31:35.969
Mar 13 19:31:35.971: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Mar 13 19:31:36.984: INFO: successfully validated that service multi-endpoint-test in namespace services-4856 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-4856 03/13/23 19:31:36.984
Mar 13 19:31:36.990: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-4856" to be "running and ready"
Mar 13 19:31:37.003: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 13.244906ms
Mar 13 19:31:37.004: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:31:39.008: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.017953093s
Mar 13 19:31:39.008: INFO: The phase of Pod pod1 is Running (Ready = true)
Mar 13 19:31:39.008: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4856 to expose endpoints map[pod1:[100]] 03/13/23 19:31:39.011
Mar 13 19:31:39.020: INFO: successfully validated that service multi-endpoint-test in namespace services-4856 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-4856 03/13/23 19:31:39.02
Mar 13 19:31:39.024: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-4856" to be "running and ready"
Mar 13 19:31:39.026: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.287765ms
Mar 13 19:31:39.026: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:31:41.029: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.004930217s
Mar 13 19:31:41.029: INFO: The phase of Pod pod2 is Running (Ready = true)
Mar 13 19:31:41.029: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4856 to expose endpoints map[pod1:[100] pod2:[101]] 03/13/23 19:31:41.031
Mar 13 19:31:41.041: INFO: successfully validated that service multi-endpoint-test in namespace services-4856 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods 03/13/23 19:31:41.041
Mar 13 19:31:41.041: INFO: Creating new exec pod
Mar 13 19:31:41.045: INFO: Waiting up to 5m0s for pod "execpodc25fq" in namespace "services-4856" to be "running"
Mar 13 19:31:41.056: INFO: Pod "execpodc25fq": Phase="Pending", Reason="", readiness=false. Elapsed: 11.257607ms
Mar 13 19:31:43.064: INFO: Pod "execpodc25fq": Phase="Running", Reason="", readiness=true. Elapsed: 2.019021805s
Mar 13 19:31:43.064: INFO: Pod "execpodc25fq" satisfied condition "running"
Mar 13 19:31:44.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4856 exec execpodc25fq -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 80'
Mar 13 19:31:44.247: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Mar 13 19:31:44.247: INFO: stdout: ""
Mar 13 19:31:44.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4856 exec execpodc25fq -- /bin/sh -x -c nc -v -z -w 2 10.100.211.89 80'
Mar 13 19:31:44.428: INFO: stderr: "+ nc -v -z -w 2 10.100.211.89 80\nConnection to 10.100.211.89 80 port [tcp/http] succeeded!\n"
Mar 13 19:31:44.428: INFO: stdout: ""
Mar 13 19:31:44.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4856 exec execpodc25fq -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 81'
Mar 13 19:31:44.595: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Mar 13 19:31:44.595: INFO: stdout: ""
Mar 13 19:31:44.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4856 exec execpodc25fq -- /bin/sh -x -c nc -v -z -w 2 10.100.211.89 81'
Mar 13 19:31:44.767: INFO: stderr: "+ nc -v -z -w 2 10.100.211.89 81\nConnection to 10.100.211.89 81 port [tcp/*] succeeded!\n"
Mar 13 19:31:44.768: INFO: stdout: ""
STEP: Deleting pod pod1 in namespace services-4856 03/13/23 19:31:44.768
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4856 to expose endpoints map[pod2:[101]] 03/13/23 19:31:44.78
Mar 13 19:31:44.820: INFO: successfully validated that service multi-endpoint-test in namespace services-4856 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-4856 03/13/23 19:31:44.82
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4856 to expose endpoints map[] 03/13/23 19:31:44.836
Mar 13 19:31:44.852: INFO: successfully validated that service multi-endpoint-test in namespace services-4856 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 19:31:44.866: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-4856" for this suite. 03/13/23 19:31:44.892
------------------------------
â€¢ [SLOW TEST] [8.971 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:31:35.94
    Mar 13 19:31:35.940: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 19:31:35.942
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:35.951
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:35.954
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should serve multiport endpoints from pods  [Conformance]
      test/e2e/network/service.go:848
    STEP: creating service multi-endpoint-test in namespace services-4856 03/13/23 19:31:35.958
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4856 to expose endpoints map[] 03/13/23 19:31:35.969
    Mar 13 19:31:35.971: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
    Mar 13 19:31:36.984: INFO: successfully validated that service multi-endpoint-test in namespace services-4856 exposes endpoints map[]
    STEP: Creating pod pod1 in namespace services-4856 03/13/23 19:31:36.984
    Mar 13 19:31:36.990: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-4856" to be "running and ready"
    Mar 13 19:31:37.003: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 13.244906ms
    Mar 13 19:31:37.004: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:31:39.008: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.017953093s
    Mar 13 19:31:39.008: INFO: The phase of Pod pod1 is Running (Ready = true)
    Mar 13 19:31:39.008: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4856 to expose endpoints map[pod1:[100]] 03/13/23 19:31:39.011
    Mar 13 19:31:39.020: INFO: successfully validated that service multi-endpoint-test in namespace services-4856 exposes endpoints map[pod1:[100]]
    STEP: Creating pod pod2 in namespace services-4856 03/13/23 19:31:39.02
    Mar 13 19:31:39.024: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-4856" to be "running and ready"
    Mar 13 19:31:39.026: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.287765ms
    Mar 13 19:31:39.026: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:31:41.029: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.004930217s
    Mar 13 19:31:41.029: INFO: The phase of Pod pod2 is Running (Ready = true)
    Mar 13 19:31:41.029: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4856 to expose endpoints map[pod1:[100] pod2:[101]] 03/13/23 19:31:41.031
    Mar 13 19:31:41.041: INFO: successfully validated that service multi-endpoint-test in namespace services-4856 exposes endpoints map[pod1:[100] pod2:[101]]
    STEP: Checking if the Service forwards traffic to pods 03/13/23 19:31:41.041
    Mar 13 19:31:41.041: INFO: Creating new exec pod
    Mar 13 19:31:41.045: INFO: Waiting up to 5m0s for pod "execpodc25fq" in namespace "services-4856" to be "running"
    Mar 13 19:31:41.056: INFO: Pod "execpodc25fq": Phase="Pending", Reason="", readiness=false. Elapsed: 11.257607ms
    Mar 13 19:31:43.064: INFO: Pod "execpodc25fq": Phase="Running", Reason="", readiness=true. Elapsed: 2.019021805s
    Mar 13 19:31:43.064: INFO: Pod "execpodc25fq" satisfied condition "running"
    Mar 13 19:31:44.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4856 exec execpodc25fq -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 80'
    Mar 13 19:31:44.247: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
    Mar 13 19:31:44.247: INFO: stdout: ""
    Mar 13 19:31:44.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4856 exec execpodc25fq -- /bin/sh -x -c nc -v -z -w 2 10.100.211.89 80'
    Mar 13 19:31:44.428: INFO: stderr: "+ nc -v -z -w 2 10.100.211.89 80\nConnection to 10.100.211.89 80 port [tcp/http] succeeded!\n"
    Mar 13 19:31:44.428: INFO: stdout: ""
    Mar 13 19:31:44.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4856 exec execpodc25fq -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 81'
    Mar 13 19:31:44.595: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
    Mar 13 19:31:44.595: INFO: stdout: ""
    Mar 13 19:31:44.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4856 exec execpodc25fq -- /bin/sh -x -c nc -v -z -w 2 10.100.211.89 81'
    Mar 13 19:31:44.767: INFO: stderr: "+ nc -v -z -w 2 10.100.211.89 81\nConnection to 10.100.211.89 81 port [tcp/*] succeeded!\n"
    Mar 13 19:31:44.768: INFO: stdout: ""
    STEP: Deleting pod pod1 in namespace services-4856 03/13/23 19:31:44.768
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4856 to expose endpoints map[pod2:[101]] 03/13/23 19:31:44.78
    Mar 13 19:31:44.820: INFO: successfully validated that service multi-endpoint-test in namespace services-4856 exposes endpoints map[pod2:[101]]
    STEP: Deleting pod pod2 in namespace services-4856 03/13/23 19:31:44.82
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4856 to expose endpoints map[] 03/13/23 19:31:44.836
    Mar 13 19:31:44.852: INFO: successfully validated that service multi-endpoint-test in namespace services-4856 exposes endpoints map[]
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:31:44.866: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-4856" for this suite. 03/13/23 19:31:44.892
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-network] Services
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:31:44.914
Mar 13 19:31:44.914: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 19:31:44.917
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:44.945
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:44.949
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228
STEP: creating service in namespace services-8687 03/13/23 19:31:44.971
STEP: creating service affinity-nodeport in namespace services-8687 03/13/23 19:31:44.971
STEP: creating replication controller affinity-nodeport in namespace services-8687 03/13/23 19:31:44.989
I0313 19:31:44.995498      21 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-8687, replica count: 3
I0313 19:31:48.046867      21 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar 13 19:31:48.055: INFO: Creating new exec pod
Mar 13 19:31:48.062: INFO: Waiting up to 5m0s for pod "execpod-affinitystx4f" in namespace "services-8687" to be "running"
Mar 13 19:31:48.065: INFO: Pod "execpod-affinitystx4f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.617036ms
Mar 13 19:31:50.069: INFO: Pod "execpod-affinitystx4f": Phase="Running", Reason="", readiness=true. Elapsed: 2.006707682s
Mar 13 19:31:50.069: INFO: Pod "execpod-affinitystx4f" satisfied condition "running"
Mar 13 19:31:51.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-8687 exec execpod-affinitystx4f -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport 80'
Mar 13 19:31:51.249: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Mar 13 19:31:51.249: INFO: stdout: ""
Mar 13 19:31:51.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-8687 exec execpod-affinitystx4f -- /bin/sh -x -c nc -v -z -w 2 10.109.75.155 80'
Mar 13 19:31:51.451: INFO: stderr: "+ nc -v -z -w 2 10.109.75.155 80\nConnection to 10.109.75.155 80 port [tcp/http] succeeded!\n"
Mar 13 19:31:51.451: INFO: stdout: ""
Mar 13 19:31:51.452: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-8687 exec execpod-affinitystx4f -- /bin/sh -x -c nc -v -z -w 2 10.1.96.5 32340'
Mar 13 19:31:51.626: INFO: stderr: "+ nc -v -z -w 2 10.1.96.5 32340\nConnection to 10.1.96.5 32340 port [tcp/*] succeeded!\n"
Mar 13 19:31:51.626: INFO: stdout: ""
Mar 13 19:31:51.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-8687 exec execpod-affinitystx4f -- /bin/sh -x -c nc -v -z -w 2 10.1.96.4 32340'
Mar 13 19:31:51.799: INFO: stderr: "+ nc -v -z -w 2 10.1.96.4 32340\nConnection to 10.1.96.4 32340 port [tcp/*] succeeded!\n"
Mar 13 19:31:51.799: INFO: stdout: ""
Mar 13 19:31:51.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-8687 exec execpod-affinitystx4f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.1.96.5:32340/ ; done'
Mar 13 19:31:52.086: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n"
Mar 13 19:31:52.086: INFO: stdout: "\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph"
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.087: INFO: Received response from host: affinity-nodeport-dbpph
Mar 13 19:31:52.087: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-8687, will wait for the garbage collector to delete the pods 03/13/23 19:31:52.101
Mar 13 19:31:52.163: INFO: Deleting ReplicationController affinity-nodeport took: 8.237242ms
Mar 13 19:31:52.268: INFO: Terminating ReplicationController affinity-nodeport pods took: 104.646371ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 19:31:54.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-8687" for this suite. 03/13/23 19:31:54.291
------------------------------
â€¢ [SLOW TEST] [9.382 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:31:44.914
    Mar 13 19:31:44.914: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 19:31:44.917
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:44.945
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:44.949
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2228
    STEP: creating service in namespace services-8687 03/13/23 19:31:44.971
    STEP: creating service affinity-nodeport in namespace services-8687 03/13/23 19:31:44.971
    STEP: creating replication controller affinity-nodeport in namespace services-8687 03/13/23 19:31:44.989
    I0313 19:31:44.995498      21 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-8687, replica count: 3
    I0313 19:31:48.046867      21 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar 13 19:31:48.055: INFO: Creating new exec pod
    Mar 13 19:31:48.062: INFO: Waiting up to 5m0s for pod "execpod-affinitystx4f" in namespace "services-8687" to be "running"
    Mar 13 19:31:48.065: INFO: Pod "execpod-affinitystx4f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.617036ms
    Mar 13 19:31:50.069: INFO: Pod "execpod-affinitystx4f": Phase="Running", Reason="", readiness=true. Elapsed: 2.006707682s
    Mar 13 19:31:50.069: INFO: Pod "execpod-affinitystx4f" satisfied condition "running"
    Mar 13 19:31:51.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-8687 exec execpod-affinitystx4f -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport 80'
    Mar 13 19:31:51.249: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
    Mar 13 19:31:51.249: INFO: stdout: ""
    Mar 13 19:31:51.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-8687 exec execpod-affinitystx4f -- /bin/sh -x -c nc -v -z -w 2 10.109.75.155 80'
    Mar 13 19:31:51.451: INFO: stderr: "+ nc -v -z -w 2 10.109.75.155 80\nConnection to 10.109.75.155 80 port [tcp/http] succeeded!\n"
    Mar 13 19:31:51.451: INFO: stdout: ""
    Mar 13 19:31:51.452: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-8687 exec execpod-affinitystx4f -- /bin/sh -x -c nc -v -z -w 2 10.1.96.5 32340'
    Mar 13 19:31:51.626: INFO: stderr: "+ nc -v -z -w 2 10.1.96.5 32340\nConnection to 10.1.96.5 32340 port [tcp/*] succeeded!\n"
    Mar 13 19:31:51.626: INFO: stdout: ""
    Mar 13 19:31:51.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-8687 exec execpod-affinitystx4f -- /bin/sh -x -c nc -v -z -w 2 10.1.96.4 32340'
    Mar 13 19:31:51.799: INFO: stderr: "+ nc -v -z -w 2 10.1.96.4 32340\nConnection to 10.1.96.4 32340 port [tcp/*] succeeded!\n"
    Mar 13 19:31:51.799: INFO: stdout: ""
    Mar 13 19:31:51.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-8687 exec execpod-affinitystx4f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.1.96.5:32340/ ; done'
    Mar 13 19:31:52.086: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.1.96.5:32340/\n"
    Mar 13 19:31:52.086: INFO: stdout: "\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph\naffinity-nodeport-dbpph"
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.086: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.087: INFO: Received response from host: affinity-nodeport-dbpph
    Mar 13 19:31:52.087: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-nodeport in namespace services-8687, will wait for the garbage collector to delete the pods 03/13/23 19:31:52.101
    Mar 13 19:31:52.163: INFO: Deleting ReplicationController affinity-nodeport took: 8.237242ms
    Mar 13 19:31:52.268: INFO: Terminating ReplicationController affinity-nodeport pods took: 104.646371ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:31:54.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-8687" for this suite. 03/13/23 19:31:54.291
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:31:54.301
Mar 13 19:31:54.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename deployment 03/13/23 19:31:54.303
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:54.315
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:54.318
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105
Mar 13 19:31:54.322: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Mar 13 19:31:54.330: INFO: Pod name sample-pod: Found 0 pods out of 1
Mar 13 19:31:59.335: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 03/13/23 19:31:59.335
Mar 13 19:31:59.335: INFO: Creating deployment "test-rolling-update-deployment"
Mar 13 19:31:59.344: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Mar 13 19:31:59.355: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Mar 13 19:32:01.366: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Mar 13 19:32:01.369: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar 13 19:32:01.379: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-4713  c5b61030-7fb6-4470-9243-0d2ea1e4b1d1 21212 1 2023-03-13 19:31:59 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] [] [{e2e.test Update apps/v1 2023-03-13 19:31:59 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:32:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003400078 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-13 19:31:59 +0000 UTC,LastTransitionTime:2023-03-13 19:31:59 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-7549d9f46d" has successfully progressed.,LastUpdateTime:2023-03-13 19:32:00 +0000 UTC,LastTransitionTime:2023-03-13 19:31:59 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Mar 13 19:32:01.383: INFO: New ReplicaSet "test-rolling-update-deployment-7549d9f46d" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-7549d9f46d  deployment-4713  52d9b1e1-56c8-4a18-a825-6f8e8da94fd0 21202 1 2023-03-13 19:31:59 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment c5b61030-7fb6-4470-9243-0d2ea1e4b1d1 0xc003400577 0xc003400578}] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:31:59 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c5b61030-7fb6-4470-9243-0d2ea1e4b1d1\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:32:00 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 7549d9f46d,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003400628 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Mar 13 19:32:01.383: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Mar 13 19:32:01.384: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-4713  4b286da4-4b7b-4b1a-befd-014a7a01bb40 21211 2 2023-03-13 19:31:54 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment c5b61030-7fb6-4470-9243-0d2ea1e4b1d1 0xc003400447 0xc003400448}] [] [{e2e.test Update apps/v1 2023-03-13 19:31:54 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:32:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c5b61030-7fb6-4470-9243-0d2ea1e4b1d1\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:32:00 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc003400508 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Mar 13 19:32:01.389: INFO: Pod "test-rolling-update-deployment-7549d9f46d-rpm52" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-7549d9f46d-rpm52 test-rolling-update-deployment-7549d9f46d- deployment-4713  a5d87308-bf78-4dd7-97bb-033330e72612 21201 0 2023-03-13 19:31:59 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[cni.projectcalico.org/containerID:e2314f299600c7995ce0c28965ddba47cc5ada19e5bc7ea86bbbad07f6fff2d3 cni.projectcalico.org/podIP:10.244.181.133/32 cni.projectcalico.org/podIPs:10.244.181.133/32,2001:db8:42:1f:e556:e398:18f3:c262/128] [{apps/v1 ReplicaSet test-rolling-update-deployment-7549d9f46d 52d9b1e1-56c8-4a18-a825-6f8e8da94fd0 0xc003400a97 0xc003400a98}] [] [{calico Update v1 2023-03-13 19:31:59 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2023-03-13 19:31:59 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"52d9b1e1-56c8-4a18-a825-6f8e8da94fd0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 19:32:00 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.133\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c262\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-76457,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-76457,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:31:59 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:32:00 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:32:00 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:31:59 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.133,StartTime:2023-03-13 19:31:59 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:32:00 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://aa5dcbf0bd4dbd711c3c3b04c362669faac00563f0bc3a00855cd9619fbf088d,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.133,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c262,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar 13 19:32:01.390: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-4713" for this suite. 03/13/23 19:32:01.395
------------------------------
â€¢ [SLOW TEST] [7.102 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:31:54.301
    Mar 13 19:31:54.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename deployment 03/13/23 19:31:54.303
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:31:54.315
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:31:54.318
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
      test/e2e/apps/deployment.go:105
    Mar 13 19:31:54.322: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
    Mar 13 19:31:54.330: INFO: Pod name sample-pod: Found 0 pods out of 1
    Mar 13 19:31:59.335: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 03/13/23 19:31:59.335
    Mar 13 19:31:59.335: INFO: Creating deployment "test-rolling-update-deployment"
    Mar 13 19:31:59.344: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
    Mar 13 19:31:59.355: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
    Mar 13 19:32:01.366: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
    Mar 13 19:32:01.369: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar 13 19:32:01.379: INFO: Deployment "test-rolling-update-deployment":
    &Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-4713  c5b61030-7fb6-4470-9243-0d2ea1e4b1d1 21212 1 2023-03-13 19:31:59 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] [] [{e2e.test Update apps/v1 2023-03-13 19:31:59 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:32:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003400078 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-13 19:31:59 +0000 UTC,LastTransitionTime:2023-03-13 19:31:59 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-7549d9f46d" has successfully progressed.,LastUpdateTime:2023-03-13 19:32:00 +0000 UTC,LastTransitionTime:2023-03-13 19:31:59 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Mar 13 19:32:01.383: INFO: New ReplicaSet "test-rolling-update-deployment-7549d9f46d" of Deployment "test-rolling-update-deployment":
    &ReplicaSet{ObjectMeta:{test-rolling-update-deployment-7549d9f46d  deployment-4713  52d9b1e1-56c8-4a18-a825-6f8e8da94fd0 21202 1 2023-03-13 19:31:59 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment c5b61030-7fb6-4470-9243-0d2ea1e4b1d1 0xc003400577 0xc003400578}] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:31:59 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c5b61030-7fb6-4470-9243-0d2ea1e4b1d1\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:32:00 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 7549d9f46d,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003400628 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Mar 13 19:32:01.383: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
    Mar 13 19:32:01.384: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-4713  4b286da4-4b7b-4b1a-befd-014a7a01bb40 21211 2 2023-03-13 19:31:54 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment c5b61030-7fb6-4470-9243-0d2ea1e4b1d1 0xc003400447 0xc003400448}] [] [{e2e.test Update apps/v1 2023-03-13 19:31:54 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:32:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c5b61030-7fb6-4470-9243-0d2ea1e4b1d1\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:32:00 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc003400508 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Mar 13 19:32:01.389: INFO: Pod "test-rolling-update-deployment-7549d9f46d-rpm52" is available:
    &Pod{ObjectMeta:{test-rolling-update-deployment-7549d9f46d-rpm52 test-rolling-update-deployment-7549d9f46d- deployment-4713  a5d87308-bf78-4dd7-97bb-033330e72612 21201 0 2023-03-13 19:31:59 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[cni.projectcalico.org/containerID:e2314f299600c7995ce0c28965ddba47cc5ada19e5bc7ea86bbbad07f6fff2d3 cni.projectcalico.org/podIP:10.244.181.133/32 cni.projectcalico.org/podIPs:10.244.181.133/32,2001:db8:42:1f:e556:e398:18f3:c262/128] [{apps/v1 ReplicaSet test-rolling-update-deployment-7549d9f46d 52d9b1e1-56c8-4a18-a825-6f8e8da94fd0 0xc003400a97 0xc003400a98}] [] [{calico Update v1 2023-03-13 19:31:59 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2023-03-13 19:31:59 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"52d9b1e1-56c8-4a18-a825-6f8e8da94fd0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 19:32:00 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.133\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c262\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-76457,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-76457,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:31:59 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:32:00 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:32:00 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:31:59 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.133,StartTime:2023-03-13 19:31:59 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:32:00 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://aa5dcbf0bd4dbd711c3c3b04c362669faac00563f0bc3a00855cd9619fbf088d,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.133,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c262,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:32:01.390: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-4713" for this suite. 03/13/23 19:32:01.395
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:32:01.406
Mar 13 19:32:01.406: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 19:32:01.415
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:01.438
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:01.443
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation 03/13/23 19:32:01.447
Mar 13 19:32:01.448: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:32:03.544: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:32:10.961: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-4584" for this suite. 03/13/23 19:32:10.973
------------------------------
â€¢ [SLOW TEST] [9.590 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:32:01.406
    Mar 13 19:32:01.406: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 19:32:01.415
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:01.438
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:01.443
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of different groups [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:276
    STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation 03/13/23 19:32:01.447
    Mar 13 19:32:01.448: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:32:03.544: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:32:10.961: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-4584" for this suite. 03/13/23 19:32:10.973
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:32:10.997
Mar 13 19:32:10.997: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 19:32:10.998
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:11.021
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:11.025
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127
STEP: Creating a pod to test emptydir 0644 on tmpfs 03/13/23 19:32:11.03
Mar 13 19:32:11.044: INFO: Waiting up to 5m0s for pod "pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea" in namespace "emptydir-7253" to be "Succeeded or Failed"
Mar 13 19:32:11.049: INFO: Pod "pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea": Phase="Pending", Reason="", readiness=false. Elapsed: 5.472983ms
Mar 13 19:32:13.054: INFO: Pod "pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea": Phase="Running", Reason="", readiness=false. Elapsed: 2.010280447s
Mar 13 19:32:15.056: INFO: Pod "pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012076865s
STEP: Saw pod success 03/13/23 19:32:15.056
Mar 13 19:32:15.057: INFO: Pod "pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea" satisfied condition "Succeeded or Failed"
Mar 13 19:32:15.060: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea container test-container: <nil>
STEP: delete the pod 03/13/23 19:32:15.068
Mar 13 19:32:15.075: INFO: Waiting for pod pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea to disappear
Mar 13 19:32:15.078: INFO: Pod pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 19:32:15.078: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-7253" for this suite. 03/13/23 19:32:15.081
------------------------------
â€¢ [4.087 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:32:10.997
    Mar 13 19:32:10.997: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 19:32:10.998
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:11.021
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:11.025
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:127
    STEP: Creating a pod to test emptydir 0644 on tmpfs 03/13/23 19:32:11.03
    Mar 13 19:32:11.044: INFO: Waiting up to 5m0s for pod "pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea" in namespace "emptydir-7253" to be "Succeeded or Failed"
    Mar 13 19:32:11.049: INFO: Pod "pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea": Phase="Pending", Reason="", readiness=false. Elapsed: 5.472983ms
    Mar 13 19:32:13.054: INFO: Pod "pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea": Phase="Running", Reason="", readiness=false. Elapsed: 2.010280447s
    Mar 13 19:32:15.056: INFO: Pod "pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012076865s
    STEP: Saw pod success 03/13/23 19:32:15.056
    Mar 13 19:32:15.057: INFO: Pod "pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea" satisfied condition "Succeeded or Failed"
    Mar 13 19:32:15.060: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea container test-container: <nil>
    STEP: delete the pod 03/13/23 19:32:15.068
    Mar 13 19:32:15.075: INFO: Waiting for pod pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea to disappear
    Mar 13 19:32:15.078: INFO: Pod pod-3238ba2e-6ef5-4e71-a765-aca2530ee6ea no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:32:15.078: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-7253" for this suite. 03/13/23 19:32:15.081
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:32:15.087
Mar 13 19:32:15.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:32:15.089
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:15.098
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:15.101
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47
STEP: Creating configMap with name projected-configmap-test-volume-051acc71-c00c-4cc4-916c-7c0a3827bc93 03/13/23 19:32:15.103
STEP: Creating a pod to test consume configMaps 03/13/23 19:32:15.107
Mar 13 19:32:15.112: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f" in namespace "projected-4102" to be "Succeeded or Failed"
Mar 13 19:32:15.115: INFO: Pod "pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.403401ms
Mar 13 19:32:17.118: INFO: Pod "pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f": Phase="Running", Reason="", readiness=false. Elapsed: 2.005706693s
Mar 13 19:32:19.119: INFO: Pod "pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006311861s
STEP: Saw pod success 03/13/23 19:32:19.119
Mar 13 19:32:19.119: INFO: Pod "pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f" satisfied condition "Succeeded or Failed"
Mar 13 19:32:19.122: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f container agnhost-container: <nil>
STEP: delete the pod 03/13/23 19:32:19.131
Mar 13 19:32:19.138: INFO: Waiting for pod pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f to disappear
Mar 13 19:32:19.140: INFO: Pod pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:32:19.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4102" for this suite. 03/13/23 19:32:19.144
------------------------------
â€¢ [4.061 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:32:15.087
    Mar 13 19:32:15.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:32:15.089
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:15.098
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:15.101
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:47
    STEP: Creating configMap with name projected-configmap-test-volume-051acc71-c00c-4cc4-916c-7c0a3827bc93 03/13/23 19:32:15.103
    STEP: Creating a pod to test consume configMaps 03/13/23 19:32:15.107
    Mar 13 19:32:15.112: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f" in namespace "projected-4102" to be "Succeeded or Failed"
    Mar 13 19:32:15.115: INFO: Pod "pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.403401ms
    Mar 13 19:32:17.118: INFO: Pod "pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f": Phase="Running", Reason="", readiness=false. Elapsed: 2.005706693s
    Mar 13 19:32:19.119: INFO: Pod "pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006311861s
    STEP: Saw pod success 03/13/23 19:32:19.119
    Mar 13 19:32:19.119: INFO: Pod "pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f" satisfied condition "Succeeded or Failed"
    Mar 13 19:32:19.122: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 19:32:19.131
    Mar 13 19:32:19.138: INFO: Waiting for pod pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f to disappear
    Mar 13 19:32:19.140: INFO: Pod pod-projected-configmaps-31808a7f-1a8a-4b6f-8425-d06d62f1a37f no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:32:19.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4102" for this suite. 03/13/23 19:32:19.144
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes
  should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131
[BeforeEach] [sig-storage] CSIInlineVolumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:32:19.152
Mar 13 19:32:19.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename csiinlinevolumes 03/13/23 19:32:19.153
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:19.162
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:19.166
[BeforeEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131
STEP: creating 03/13/23 19:32:19.169
STEP: getting 03/13/23 19:32:19.181
STEP: listing in namespace 03/13/23 19:32:19.184
STEP: patching 03/13/23 19:32:19.187
STEP: deleting 03/13/23 19:32:19.197
[AfterEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/node/init/init.go:32
Mar 13 19:32:19.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  tear down framework | framework.go:193
STEP: Destroying namespace "csiinlinevolumes-9132" for this suite. 03/13/23 19:32:19.213
------------------------------
â€¢ [0.066 seconds]
[sig-storage] CSIInlineVolumes
test/e2e/storage/utils/framework.go:23
  should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIInlineVolumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:32:19.152
    Mar 13 19:32:19.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename csiinlinevolumes 03/13/23 19:32:19.153
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:19.162
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:19.166
    [BeforeEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CSIVolumeSource in Pod API [Conformance]
      test/e2e/storage/csi_inline.go:131
    STEP: creating 03/13/23 19:32:19.169
    STEP: getting 03/13/23 19:32:19.181
    STEP: listing in namespace 03/13/23 19:32:19.184
    STEP: patching 03/13/23 19:32:19.187
    STEP: deleting 03/13/23 19:32:19.197
    [AfterEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:32:19.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "csiinlinevolumes-9132" for this suite. 03/13/23 19:32:19.213
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:32:19.225
Mar 13 19:32:19.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:32:19.226
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:19.244
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:19.248
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74
STEP: Creating configMap with name projected-configmap-test-volume-846aab7e-c98c-4f37-b190-b428a8be7860 03/13/23 19:32:19.252
STEP: Creating a pod to test consume configMaps 03/13/23 19:32:19.255
Mar 13 19:32:19.262: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817" in namespace "projected-613" to be "Succeeded or Failed"
Mar 13 19:32:19.264: INFO: Pod "pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817": Phase="Pending", Reason="", readiness=false. Elapsed: 2.338814ms
Mar 13 19:32:21.268: INFO: Pod "pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006495086s
Mar 13 19:32:23.267: INFO: Pod "pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005534479s
STEP: Saw pod success 03/13/23 19:32:23.267
Mar 13 19:32:23.268: INFO: Pod "pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817" satisfied condition "Succeeded or Failed"
Mar 13 19:32:23.270: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817 container agnhost-container: <nil>
STEP: delete the pod 03/13/23 19:32:23.279
Mar 13 19:32:23.305: INFO: Waiting for pod pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817 to disappear
Mar 13 19:32:23.308: INFO: Pod pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:32:23.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-613" for this suite. 03/13/23 19:32:23.312
------------------------------
â€¢ [4.092 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:32:19.225
    Mar 13 19:32:19.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:32:19.226
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:19.244
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:19.248
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:74
    STEP: Creating configMap with name projected-configmap-test-volume-846aab7e-c98c-4f37-b190-b428a8be7860 03/13/23 19:32:19.252
    STEP: Creating a pod to test consume configMaps 03/13/23 19:32:19.255
    Mar 13 19:32:19.262: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817" in namespace "projected-613" to be "Succeeded or Failed"
    Mar 13 19:32:19.264: INFO: Pod "pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817": Phase="Pending", Reason="", readiness=false. Elapsed: 2.338814ms
    Mar 13 19:32:21.268: INFO: Pod "pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006495086s
    Mar 13 19:32:23.267: INFO: Pod "pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005534479s
    STEP: Saw pod success 03/13/23 19:32:23.267
    Mar 13 19:32:23.268: INFO: Pod "pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817" satisfied condition "Succeeded or Failed"
    Mar 13 19:32:23.270: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817 container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 19:32:23.279
    Mar 13 19:32:23.305: INFO: Waiting for pod pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817 to disappear
    Mar 13 19:32:23.308: INFO: Pod pod-projected-configmaps-311a2514-b28d-4f4e-9657-72043ceef817 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:32:23.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-613" for this suite. 03/13/23 19:32:23.312
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  listing custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:85
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:32:23.32
Mar 13 19:32:23.320: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename custom-resource-definition 03/13/23 19:32:23.321
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:23.334
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:23.337
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:85
Mar 13 19:32:23.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:32:29.550: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-1582" for this suite. 03/13/23 19:32:29.553
------------------------------
â€¢ [SLOW TEST] [6.238 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:85

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:32:23.32
    Mar 13 19:32:23.320: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename custom-resource-definition 03/13/23 19:32:23.321
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:23.334
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:23.337
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] listing custom resource definition objects works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:85
    Mar 13 19:32:23.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:32:29.550: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-1582" for this suite. 03/13/23 19:32:29.553
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance]
  will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:32:29.561
Mar 13 19:32:29.561: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename ephemeral-containers-test 03/13/23 19:32:29.562
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:29.569
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:29.574
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/common/node/ephemeral_containers.go:38
[It] will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45
STEP: creating a target pod 03/13/23 19:32:29.577
Mar 13 19:32:29.583: INFO: Waiting up to 5m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-926" to be "running and ready"
Mar 13 19:32:29.585: INFO: Pod "ephemeral-containers-target-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 1.869317ms
Mar 13 19:32:29.585: INFO: The phase of Pod ephemeral-containers-target-pod is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:32:31.589: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.005918064s
Mar 13 19:32:31.589: INFO: The phase of Pod ephemeral-containers-target-pod is Running (Ready = true)
Mar 13 19:32:31.589: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "running and ready"
STEP: adding an ephemeral container 03/13/23 19:32:31.592
Mar 13 19:32:31.602: INFO: Waiting up to 1m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-926" to be "container debugger running"
Mar 13 19:32:31.608: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 5.12305ms
Mar 13 19:32:33.612: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.009217686s
Mar 13 19:32:35.614: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.011435686s
Mar 13 19:32:35.614: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "container debugger running"
STEP: checking pod container endpoints 03/13/23 19:32:35.614
Mar 13 19:32:35.615: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-926 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:32:35.615: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:32:35.616: INFO: ExecWithOptions: Clientset creation
Mar 13 19:32:35.616: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-926/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
Mar 13 19:32:35.698: INFO: Exec stderr: ""
[AfterEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:32:35.705: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "ephemeral-containers-test-926" for this suite. 03/13/23 19:32:35.709
------------------------------
â€¢ [SLOW TEST] [6.154 seconds]
[sig-node] Ephemeral Containers [NodeConformance]
test/e2e/common/node/framework.go:23
  will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:32:29.561
    Mar 13 19:32:29.561: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename ephemeral-containers-test 03/13/23 19:32:29.562
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:29.569
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:29.574
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/common/node/ephemeral_containers.go:38
    [It] will start an ephemeral container in an existing pod [Conformance]
      test/e2e/common/node/ephemeral_containers.go:45
    STEP: creating a target pod 03/13/23 19:32:29.577
    Mar 13 19:32:29.583: INFO: Waiting up to 5m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-926" to be "running and ready"
    Mar 13 19:32:29.585: INFO: Pod "ephemeral-containers-target-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 1.869317ms
    Mar 13 19:32:29.585: INFO: The phase of Pod ephemeral-containers-target-pod is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:32:31.589: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.005918064s
    Mar 13 19:32:31.589: INFO: The phase of Pod ephemeral-containers-target-pod is Running (Ready = true)
    Mar 13 19:32:31.589: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "running and ready"
    STEP: adding an ephemeral container 03/13/23 19:32:31.592
    Mar 13 19:32:31.602: INFO: Waiting up to 1m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-926" to be "container debugger running"
    Mar 13 19:32:31.608: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 5.12305ms
    Mar 13 19:32:33.612: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.009217686s
    Mar 13 19:32:35.614: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.011435686s
    Mar 13 19:32:35.614: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "container debugger running"
    STEP: checking pod container endpoints 03/13/23 19:32:35.614
    Mar 13 19:32:35.615: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-926 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:32:35.615: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:32:35.616: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:32:35.616: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-926/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
    Mar 13 19:32:35.698: INFO: Exec stderr: ""
    [AfterEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:32:35.705: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "ephemeral-containers-test-926" for this suite. 03/13/23 19:32:35.709
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:110
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:32:35.73
Mar 13 19:32:35.730: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubelet-test 03/13/23 19:32:35.732
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:35.745
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:35.747
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:85
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:110
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:32:39.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-119" for this suite. 03/13/23 19:32:39.764
------------------------------
â€¢ [4.040 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:82
    should have an terminated reason [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:110

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:32:35.73
    Mar 13 19:32:35.730: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubelet-test 03/13/23 19:32:35.732
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:35.745
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:35.747
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [BeforeEach] when scheduling a busybox command that always fails in a pod
      test/e2e/common/node/kubelet.go:85
    [It] should have an terminated reason [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:110
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:32:39.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-119" for this suite. 03/13/23 19:32:39.764
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:32:39.769
Mar 13 19:32:39.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 19:32:39.77
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:39.779
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:39.782
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 19:32:39.794
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:32:40.353
STEP: Deploying the webhook pod 03/13/23 19:32:40.36
STEP: Wait for the deployment to be ready 03/13/23 19:32:40.368
Mar 13 19:32:40.374: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/13/23 19:32:42.383
STEP: Verifying the service has paired with the endpoint 03/13/23 19:32:42.392
Mar 13 19:32:43.393: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582
STEP: Listing all of the created validation webhooks 03/13/23 19:32:43.431
STEP: Creating a configMap that does not comply to the validation webhook rules 03/13/23 19:32:43.484
STEP: Deleting the collection of validation webhooks 03/13/23 19:32:43.533
STEP: Creating a configMap that does not comply to the validation webhook rules 03/13/23 19:32:43.552
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:32:43.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-6973" for this suite. 03/13/23 19:32:43.585
STEP: Destroying namespace "webhook-6973-markers" for this suite. 03/13/23 19:32:43.593
------------------------------
â€¢ [3.827 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:32:39.769
    Mar 13 19:32:39.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 19:32:39.77
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:39.779
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:39.782
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 19:32:39.794
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:32:40.353
    STEP: Deploying the webhook pod 03/13/23 19:32:40.36
    STEP: Wait for the deployment to be ready 03/13/23 19:32:40.368
    Mar 13 19:32:40.374: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/13/23 19:32:42.383
    STEP: Verifying the service has paired with the endpoint 03/13/23 19:32:42.392
    Mar 13 19:32:43.393: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] listing validating webhooks should work [Conformance]
      test/e2e/apimachinery/webhook.go:582
    STEP: Listing all of the created validation webhooks 03/13/23 19:32:43.431
    STEP: Creating a configMap that does not comply to the validation webhook rules 03/13/23 19:32:43.484
    STEP: Deleting the collection of validation webhooks 03/13/23 19:32:43.533
    STEP: Creating a configMap that does not comply to the validation webhook rules 03/13/23 19:32:43.552
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:32:43.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-6973" for this suite. 03/13/23 19:32:43.585
    STEP: Destroying namespace "webhook-6973-markers" for this suite. 03/13/23 19:32:43.593
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:32:43.631
Mar 13 19:32:43.647: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename daemonsets 03/13/23 19:32:43.648
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:43.663
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:43.676
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294
STEP: Creating a simple DaemonSet "daemon-set" 03/13/23 19:32:43.694
STEP: Check that daemon pods launch on every node of the cluster. 03/13/23 19:32:43.699
Mar 13 19:32:43.723: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:32:43.723: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:32:44.736: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:32:44.736: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:32:45.731: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar 13 19:32:45.731: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. 03/13/23 19:32:45.733
Mar 13 19:32:45.755: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar 13 19:32:45.756: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:32:46.763: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar 13 19:32:46.763: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:32:47.764: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar 13 19:32:47.764: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted. 03/13/23 19:32:47.764
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 03/13/23 19:32:47.77
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2120, will wait for the garbage collector to delete the pods 03/13/23 19:32:47.77
Mar 13 19:32:47.829: INFO: Deleting DaemonSet.extensions daemon-set took: 4.853005ms
Mar 13 19:32:47.930: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.89718ms
Mar 13 19:32:50.133: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:32:50.133: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Mar 13 19:32:50.135: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21834"},"items":null}

Mar 13 19:32:50.137: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21834"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:32:50.144: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-2120" for this suite. 03/13/23 19:32:50.147
------------------------------
â€¢ [SLOW TEST] [6.522 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:32:43.631
    Mar 13 19:32:43.647: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename daemonsets 03/13/23 19:32:43.648
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:43.663
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:43.676
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should retry creating failed daemon pods [Conformance]
      test/e2e/apps/daemon_set.go:294
    STEP: Creating a simple DaemonSet "daemon-set" 03/13/23 19:32:43.694
    STEP: Check that daemon pods launch on every node of the cluster. 03/13/23 19:32:43.699
    Mar 13 19:32:43.723: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:32:43.723: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:32:44.736: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:32:44.736: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:32:45.731: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar 13 19:32:45.731: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. 03/13/23 19:32:45.733
    Mar 13 19:32:45.755: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar 13 19:32:45.756: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:32:46.763: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar 13 19:32:46.763: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:32:47.764: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar 13 19:32:47.764: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Wait for the failed daemon pod to be completely deleted. 03/13/23 19:32:47.764
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 03/13/23 19:32:47.77
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2120, will wait for the garbage collector to delete the pods 03/13/23 19:32:47.77
    Mar 13 19:32:47.829: INFO: Deleting DaemonSet.extensions daemon-set took: 4.853005ms
    Mar 13 19:32:47.930: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.89718ms
    Mar 13 19:32:50.133: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:32:50.133: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Mar 13 19:32:50.135: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21834"},"items":null}

    Mar 13 19:32:50.137: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21834"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:32:50.144: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-2120" for this suite. 03/13/23 19:32:50.147
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Projected downwardAPI
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:32:50.152
Mar 13 19:32:50.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:32:50.154
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:50.163
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:50.166
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130
STEP: Creating the pod 03/13/23 19:32:50.168
Mar 13 19:32:50.175: INFO: Waiting up to 5m0s for pod "labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636" in namespace "projected-8282" to be "running and ready"
Mar 13 19:32:50.177: INFO: Pod "labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636": Phase="Pending", Reason="", readiness=false. Elapsed: 2.228146ms
Mar 13 19:32:50.177: INFO: The phase of Pod labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:32:52.181: INFO: Pod "labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636": Phase="Running", Reason="", readiness=true. Elapsed: 2.005939777s
Mar 13 19:32:52.181: INFO: The phase of Pod labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636 is Running (Ready = true)
Mar 13 19:32:52.181: INFO: Pod "labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636" satisfied condition "running and ready"
Mar 13 19:32:52.720: INFO: Successfully updated pod "labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar 13 19:32:56.749: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8282" for this suite. 03/13/23 19:32:56.753
------------------------------
â€¢ [SLOW TEST] [6.605 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:32:50.152
    Mar 13 19:32:50.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:32:50.154
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:50.163
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:50.166
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should update labels on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:130
    STEP: Creating the pod 03/13/23 19:32:50.168
    Mar 13 19:32:50.175: INFO: Waiting up to 5m0s for pod "labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636" in namespace "projected-8282" to be "running and ready"
    Mar 13 19:32:50.177: INFO: Pod "labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636": Phase="Pending", Reason="", readiness=false. Elapsed: 2.228146ms
    Mar 13 19:32:50.177: INFO: The phase of Pod labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:32:52.181: INFO: Pod "labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636": Phase="Running", Reason="", readiness=true. Elapsed: 2.005939777s
    Mar 13 19:32:52.181: INFO: The phase of Pod labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636 is Running (Ready = true)
    Mar 13 19:32:52.181: INFO: Pod "labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636" satisfied condition "running and ready"
    Mar 13 19:32:52.720: INFO: Successfully updated pod "labelsupdate8fad69c1-0d68-41e3-a2e8-95177c5e1636"
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:32:56.749: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8282" for this suite. 03/13/23 19:32:56.753
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:32:56.759
Mar 13 19:32:56.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 19:32:56.76
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:56.769
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:56.772
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 19:32:56.783
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:32:57.36
STEP: Deploying the webhook pod 03/13/23 19:32:57.364
STEP: Wait for the deployment to be ready 03/13/23 19:32:57.372
Mar 13 19:32:57.376: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
Mar 13 19:32:59.385: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 32, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 32, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 32, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 32, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 03/13/23 19:33:01.389
STEP: Verifying the service has paired with the endpoint 03/13/23 19:33:01.396
Mar 13 19:33:02.398: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341
Mar 13 19:33:02.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8305-crds.webhook.example.com via the AdmissionRegistration API 03/13/23 19:33:02.959
Mar 13 19:33:02.992: INFO: Waiting for webhook configuration to be ready...
STEP: Creating a custom resource that should be mutated by the webhook 03/13/23 19:33:03.133
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:33:05.892: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-4634" for this suite. 03/13/23 19:33:06.017
STEP: Destroying namespace "webhook-4634-markers" for this suite. 03/13/23 19:33:06.032
------------------------------
â€¢ [SLOW TEST] [9.322 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:32:56.759
    Mar 13 19:32:56.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 19:32:56.76
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:32:56.769
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:32:56.772
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 19:32:56.783
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:32:57.36
    STEP: Deploying the webhook pod 03/13/23 19:32:57.364
    STEP: Wait for the deployment to be ready 03/13/23 19:32:57.372
    Mar 13 19:32:57.376: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
    Mar 13 19:32:59.385: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 32, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 32, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 32, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 32, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 03/13/23 19:33:01.389
    STEP: Verifying the service has paired with the endpoint 03/13/23 19:33:01.396
    Mar 13 19:33:02.398: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource with pruning [Conformance]
      test/e2e/apimachinery/webhook.go:341
    Mar 13 19:33:02.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8305-crds.webhook.example.com via the AdmissionRegistration API 03/13/23 19:33:02.959
    Mar 13 19:33:02.992: INFO: Waiting for webhook configuration to be ready...
    STEP: Creating a custom resource that should be mutated by the webhook 03/13/23 19:33:03.133
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:33:05.892: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-4634" for this suite. 03/13/23 19:33:06.017
    STEP: Destroying namespace "webhook-4634-markers" for this suite. 03/13/23 19:33:06.032
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:33:06.119
Mar 13 19:33:06.119: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir-wrapper 03/13/23 19:33:06.123
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:33:06.227
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:33:06.242
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189
STEP: Creating 50 configmaps 03/13/23 19:33:06.256
STEP: Creating RC which spawns configmap-volume pods 03/13/23 19:33:06.7
Mar 13 19:33:06.727: INFO: Pod name wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221: Found 0 pods out of 5
Mar 13 19:33:11.742: INFO: Pod name wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221: Found 5 pods out of 5
STEP: Ensuring each pod is running 03/13/23 19:33:11.742
Mar 13 19:33:11.742: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:33:11.749: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns": Phase="Pending", Reason="", readiness=false. Elapsed: 7.278464ms
Mar 13 19:33:13.758: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015861788s
Mar 13 19:33:15.758: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01636868s
Mar 13 19:33:17.755: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns": Phase="Pending", Reason="", readiness=false. Elapsed: 6.012835671s
Mar 13 19:33:19.755: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns": Phase="Pending", Reason="", readiness=false. Elapsed: 8.013364565s
Mar 13 19:33:21.754: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns": Phase="Running", Reason="", readiness=true. Elapsed: 10.012167993s
Mar 13 19:33:21.754: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns" satisfied condition "running"
Mar 13 19:33:21.754: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-8h4xs" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:33:21.758: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-8h4xs": Phase="Running", Reason="", readiness=true. Elapsed: 4.105474ms
Mar 13 19:33:21.758: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-8h4xs" satisfied condition "running"
Mar 13 19:33:21.758: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-9vgj4" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:33:21.762: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-9vgj4": Phase="Running", Reason="", readiness=true. Elapsed: 3.263431ms
Mar 13 19:33:21.762: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-9vgj4" satisfied condition "running"
Mar 13 19:33:21.762: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-cdnhq" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:33:21.765: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-cdnhq": Phase="Running", Reason="", readiness=true. Elapsed: 3.234772ms
Mar 13 19:33:21.765: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-cdnhq" satisfied condition "running"
Mar 13 19:33:21.765: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-lhmp9" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:33:21.769: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-lhmp9": Phase="Running", Reason="", readiness=true. Elapsed: 3.264897ms
Mar 13 19:33:21.769: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-lhmp9" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221 in namespace emptydir-wrapper-8012, will wait for the garbage collector to delete the pods 03/13/23 19:33:21.769
Mar 13 19:33:21.828: INFO: Deleting ReplicationController wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221 took: 5.362115ms
Mar 13 19:33:21.929: INFO: Terminating ReplicationController wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221 pods took: 100.754263ms
STEP: Creating RC which spawns configmap-volume pods 03/13/23 19:33:26.235
Mar 13 19:33:26.250: INFO: Pod name wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43: Found 0 pods out of 5
Mar 13 19:33:31.264: INFO: Pod name wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43: Found 5 pods out of 5
STEP: Ensuring each pod is running 03/13/23 19:33:31.264
Mar 13 19:33:31.264: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:33:31.268: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh": Phase="Pending", Reason="", readiness=false. Elapsed: 3.918384ms
Mar 13 19:33:33.273: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009231831s
Mar 13 19:33:35.272: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008553342s
Mar 13 19:33:37.273: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh": Phase="Pending", Reason="", readiness=false. Elapsed: 6.009626492s
Mar 13 19:33:39.276: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh": Phase="Pending", Reason="", readiness=false. Elapsed: 8.012342631s
Mar 13 19:33:41.274: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh": Phase="Running", Reason="", readiness=true. Elapsed: 10.010155873s
Mar 13 19:33:41.274: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh" satisfied condition "running"
Mar 13 19:33:41.274: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-dwjkc" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:33:41.279: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-dwjkc": Phase="Running", Reason="", readiness=true. Elapsed: 4.372153ms
Mar 13 19:33:41.279: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-dwjkc" satisfied condition "running"
Mar 13 19:33:41.279: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-njhwh" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:33:41.283: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-njhwh": Phase="Running", Reason="", readiness=true. Elapsed: 3.831038ms
Mar 13 19:33:41.283: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-njhwh" satisfied condition "running"
Mar 13 19:33:41.283: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-rt6wj" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:33:41.287: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-rt6wj": Phase="Running", Reason="", readiness=true. Elapsed: 4.130858ms
Mar 13 19:33:41.287: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-rt6wj" satisfied condition "running"
Mar 13 19:33:41.287: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-tcnnx" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:33:41.291: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-tcnnx": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010948ms
Mar 13 19:33:43.296: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-tcnnx": Phase="Running", Reason="", readiness=true. Elapsed: 2.008960311s
Mar 13 19:33:43.296: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-tcnnx" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43 in namespace emptydir-wrapper-8012, will wait for the garbage collector to delete the pods 03/13/23 19:33:43.296
Mar 13 19:33:43.362: INFO: Deleting ReplicationController wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43 took: 6.39783ms
Mar 13 19:33:43.466: INFO: Terminating ReplicationController wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43 pods took: 103.874518ms
STEP: Creating RC which spawns configmap-volume pods 03/13/23 19:33:45.871
Mar 13 19:33:45.885: INFO: Pod name wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c: Found 0 pods out of 5
Mar 13 19:33:50.894: INFO: Pod name wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c: Found 5 pods out of 5
STEP: Ensuring each pod is running 03/13/23 19:33:50.894
Mar 13 19:33:50.894: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:33:50.897: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh": Phase="Pending", Reason="", readiness=false. Elapsed: 3.069804ms
Mar 13 19:33:52.902: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007913746s
Mar 13 19:33:54.903: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008845126s
Mar 13 19:33:56.903: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh": Phase="Pending", Reason="", readiness=false. Elapsed: 6.008569501s
Mar 13 19:33:58.903: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh": Phase="Pending", Reason="", readiness=false. Elapsed: 8.008748592s
Mar 13 19:34:00.903: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh": Phase="Running", Reason="", readiness=true. Elapsed: 10.008502367s
Mar 13 19:34:00.903: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh" satisfied condition "running"
Mar 13 19:34:00.903: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-gbx5w" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:34:00.907: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-gbx5w": Phase="Running", Reason="", readiness=true. Elapsed: 3.637266ms
Mar 13 19:34:00.907: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-gbx5w" satisfied condition "running"
Mar 13 19:34:00.907: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-lp7rm" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:34:00.910: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-lp7rm": Phase="Running", Reason="", readiness=true. Elapsed: 3.390389ms
Mar 13 19:34:00.910: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-lp7rm" satisfied condition "running"
Mar 13 19:34:00.910: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-v6jt8" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:34:00.914: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-v6jt8": Phase="Running", Reason="", readiness=true. Elapsed: 3.419025ms
Mar 13 19:34:00.914: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-v6jt8" satisfied condition "running"
Mar 13 19:34:00.914: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-z7mlp" in namespace "emptydir-wrapper-8012" to be "running"
Mar 13 19:34:00.917: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-z7mlp": Phase="Running", Reason="", readiness=true. Elapsed: 3.343678ms
Mar 13 19:34:00.917: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-z7mlp" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c in namespace emptydir-wrapper-8012, will wait for the garbage collector to delete the pods 03/13/23 19:34:00.917
Mar 13 19:34:00.979: INFO: Deleting ReplicationController wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c took: 6.137314ms
Mar 13 19:34:01.079: INFO: Terminating ReplicationController wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c pods took: 100.410721ms
STEP: Cleaning up the configMaps 03/13/23 19:34:06.28
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 19:34:06.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-wrapper-8012" for this suite. 03/13/23 19:34:06.909
------------------------------
â€¢ [SLOW TEST] [60.797 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:33:06.119
    Mar 13 19:33:06.119: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir-wrapper 03/13/23 19:33:06.123
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:33:06.227
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:33:06.242
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should not cause race condition when used for configmaps [Serial] [Conformance]
      test/e2e/storage/empty_dir_wrapper.go:189
    STEP: Creating 50 configmaps 03/13/23 19:33:06.256
    STEP: Creating RC which spawns configmap-volume pods 03/13/23 19:33:06.7
    Mar 13 19:33:06.727: INFO: Pod name wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221: Found 0 pods out of 5
    Mar 13 19:33:11.742: INFO: Pod name wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221: Found 5 pods out of 5
    STEP: Ensuring each pod is running 03/13/23 19:33:11.742
    Mar 13 19:33:11.742: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:33:11.749: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns": Phase="Pending", Reason="", readiness=false. Elapsed: 7.278464ms
    Mar 13 19:33:13.758: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015861788s
    Mar 13 19:33:15.758: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01636868s
    Mar 13 19:33:17.755: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns": Phase="Pending", Reason="", readiness=false. Elapsed: 6.012835671s
    Mar 13 19:33:19.755: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns": Phase="Pending", Reason="", readiness=false. Elapsed: 8.013364565s
    Mar 13 19:33:21.754: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns": Phase="Running", Reason="", readiness=true. Elapsed: 10.012167993s
    Mar 13 19:33:21.754: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-7b2ns" satisfied condition "running"
    Mar 13 19:33:21.754: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-8h4xs" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:33:21.758: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-8h4xs": Phase="Running", Reason="", readiness=true. Elapsed: 4.105474ms
    Mar 13 19:33:21.758: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-8h4xs" satisfied condition "running"
    Mar 13 19:33:21.758: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-9vgj4" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:33:21.762: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-9vgj4": Phase="Running", Reason="", readiness=true. Elapsed: 3.263431ms
    Mar 13 19:33:21.762: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-9vgj4" satisfied condition "running"
    Mar 13 19:33:21.762: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-cdnhq" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:33:21.765: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-cdnhq": Phase="Running", Reason="", readiness=true. Elapsed: 3.234772ms
    Mar 13 19:33:21.765: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-cdnhq" satisfied condition "running"
    Mar 13 19:33:21.765: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-lhmp9" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:33:21.769: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-lhmp9": Phase="Running", Reason="", readiness=true. Elapsed: 3.264897ms
    Mar 13 19:33:21.769: INFO: Pod "wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221-lhmp9" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221 in namespace emptydir-wrapper-8012, will wait for the garbage collector to delete the pods 03/13/23 19:33:21.769
    Mar 13 19:33:21.828: INFO: Deleting ReplicationController wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221 took: 5.362115ms
    Mar 13 19:33:21.929: INFO: Terminating ReplicationController wrapped-volume-race-3c4259dc-6c91-4ae7-9b71-8d29835a2221 pods took: 100.754263ms
    STEP: Creating RC which spawns configmap-volume pods 03/13/23 19:33:26.235
    Mar 13 19:33:26.250: INFO: Pod name wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43: Found 0 pods out of 5
    Mar 13 19:33:31.264: INFO: Pod name wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43: Found 5 pods out of 5
    STEP: Ensuring each pod is running 03/13/23 19:33:31.264
    Mar 13 19:33:31.264: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:33:31.268: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh": Phase="Pending", Reason="", readiness=false. Elapsed: 3.918384ms
    Mar 13 19:33:33.273: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009231831s
    Mar 13 19:33:35.272: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008553342s
    Mar 13 19:33:37.273: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh": Phase="Pending", Reason="", readiness=false. Elapsed: 6.009626492s
    Mar 13 19:33:39.276: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh": Phase="Pending", Reason="", readiness=false. Elapsed: 8.012342631s
    Mar 13 19:33:41.274: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh": Phase="Running", Reason="", readiness=true. Elapsed: 10.010155873s
    Mar 13 19:33:41.274: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-4q7rh" satisfied condition "running"
    Mar 13 19:33:41.274: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-dwjkc" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:33:41.279: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-dwjkc": Phase="Running", Reason="", readiness=true. Elapsed: 4.372153ms
    Mar 13 19:33:41.279: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-dwjkc" satisfied condition "running"
    Mar 13 19:33:41.279: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-njhwh" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:33:41.283: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-njhwh": Phase="Running", Reason="", readiness=true. Elapsed: 3.831038ms
    Mar 13 19:33:41.283: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-njhwh" satisfied condition "running"
    Mar 13 19:33:41.283: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-rt6wj" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:33:41.287: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-rt6wj": Phase="Running", Reason="", readiness=true. Elapsed: 4.130858ms
    Mar 13 19:33:41.287: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-rt6wj" satisfied condition "running"
    Mar 13 19:33:41.287: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-tcnnx" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:33:41.291: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-tcnnx": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010948ms
    Mar 13 19:33:43.296: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-tcnnx": Phase="Running", Reason="", readiness=true. Elapsed: 2.008960311s
    Mar 13 19:33:43.296: INFO: Pod "wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43-tcnnx" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43 in namespace emptydir-wrapper-8012, will wait for the garbage collector to delete the pods 03/13/23 19:33:43.296
    Mar 13 19:33:43.362: INFO: Deleting ReplicationController wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43 took: 6.39783ms
    Mar 13 19:33:43.466: INFO: Terminating ReplicationController wrapped-volume-race-88e354d0-0238-4e40-84aa-9508adf3bd43 pods took: 103.874518ms
    STEP: Creating RC which spawns configmap-volume pods 03/13/23 19:33:45.871
    Mar 13 19:33:45.885: INFO: Pod name wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c: Found 0 pods out of 5
    Mar 13 19:33:50.894: INFO: Pod name wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c: Found 5 pods out of 5
    STEP: Ensuring each pod is running 03/13/23 19:33:50.894
    Mar 13 19:33:50.894: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:33:50.897: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh": Phase="Pending", Reason="", readiness=false. Elapsed: 3.069804ms
    Mar 13 19:33:52.902: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007913746s
    Mar 13 19:33:54.903: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008845126s
    Mar 13 19:33:56.903: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh": Phase="Pending", Reason="", readiness=false. Elapsed: 6.008569501s
    Mar 13 19:33:58.903: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh": Phase="Pending", Reason="", readiness=false. Elapsed: 8.008748592s
    Mar 13 19:34:00.903: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh": Phase="Running", Reason="", readiness=true. Elapsed: 10.008502367s
    Mar 13 19:34:00.903: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-bxjbh" satisfied condition "running"
    Mar 13 19:34:00.903: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-gbx5w" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:34:00.907: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-gbx5w": Phase="Running", Reason="", readiness=true. Elapsed: 3.637266ms
    Mar 13 19:34:00.907: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-gbx5w" satisfied condition "running"
    Mar 13 19:34:00.907: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-lp7rm" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:34:00.910: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-lp7rm": Phase="Running", Reason="", readiness=true. Elapsed: 3.390389ms
    Mar 13 19:34:00.910: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-lp7rm" satisfied condition "running"
    Mar 13 19:34:00.910: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-v6jt8" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:34:00.914: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-v6jt8": Phase="Running", Reason="", readiness=true. Elapsed: 3.419025ms
    Mar 13 19:34:00.914: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-v6jt8" satisfied condition "running"
    Mar 13 19:34:00.914: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-z7mlp" in namespace "emptydir-wrapper-8012" to be "running"
    Mar 13 19:34:00.917: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-z7mlp": Phase="Running", Reason="", readiness=true. Elapsed: 3.343678ms
    Mar 13 19:34:00.917: INFO: Pod "wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c-z7mlp" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c in namespace emptydir-wrapper-8012, will wait for the garbage collector to delete the pods 03/13/23 19:34:00.917
    Mar 13 19:34:00.979: INFO: Deleting ReplicationController wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c took: 6.137314ms
    Mar 13 19:34:01.079: INFO: Terminating ReplicationController wrapped-volume-race-b248c3be-3fe6-4995-af81-f07cf0d6c96c pods took: 100.410721ms
    STEP: Cleaning up the configMaps 03/13/23 19:34:06.28
    [AfterEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:34:06.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-wrapper-8012" for this suite. 03/13/23 19:34:06.909
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:34:06.923
Mar 13 19:34:06.923: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename dns 03/13/23 19:34:06.925
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:06.945
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:06.954
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8763.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8763.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
 03/13/23 19:34:06.959
STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8763.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8763.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
 03/13/23 19:34:06.959
STEP: creating a pod to probe /etc/hosts 03/13/23 19:34:06.96
STEP: submitting the pod to kubernetes 03/13/23 19:34:06.96
Mar 13 19:34:06.971: INFO: Waiting up to 15m0s for pod "dns-test-6db33bf0-b51f-4eff-80b7-c8295e72fe18" in namespace "dns-8763" to be "running"
Mar 13 19:34:06.981: INFO: Pod "dns-test-6db33bf0-b51f-4eff-80b7-c8295e72fe18": Phase="Pending", Reason="", readiness=false. Elapsed: 10.570756ms
Mar 13 19:34:08.989: INFO: Pod "dns-test-6db33bf0-b51f-4eff-80b7-c8295e72fe18": Phase="Running", Reason="", readiness=true. Elapsed: 2.01860632s
Mar 13 19:34:08.989: INFO: Pod "dns-test-6db33bf0-b51f-4eff-80b7-c8295e72fe18" satisfied condition "running"
STEP: retrieving the pod 03/13/23 19:34:08.989
STEP: looking for the results for each expected name from probers 03/13/23 19:34:08.994
Mar 13 19:34:09.044: INFO: DNS probes using dns-8763/dns-test-6db33bf0-b51f-4eff-80b7-c8295e72fe18 succeeded

STEP: deleting the pod 03/13/23 19:34:09.044
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar 13 19:34:09.076: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-8763" for this suite. 03/13/23 19:34:09.088
------------------------------
â€¢ [2.173 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:34:06.923
    Mar 13 19:34:06.923: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename dns 03/13/23 19:34:06.925
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:06.945
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:06.954
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide /etc/hosts entries for the cluster [Conformance]
      test/e2e/network/dns.go:117
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8763.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8763.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
     03/13/23 19:34:06.959
    STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8763.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8763.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
     03/13/23 19:34:06.959
    STEP: creating a pod to probe /etc/hosts 03/13/23 19:34:06.96
    STEP: submitting the pod to kubernetes 03/13/23 19:34:06.96
    Mar 13 19:34:06.971: INFO: Waiting up to 15m0s for pod "dns-test-6db33bf0-b51f-4eff-80b7-c8295e72fe18" in namespace "dns-8763" to be "running"
    Mar 13 19:34:06.981: INFO: Pod "dns-test-6db33bf0-b51f-4eff-80b7-c8295e72fe18": Phase="Pending", Reason="", readiness=false. Elapsed: 10.570756ms
    Mar 13 19:34:08.989: INFO: Pod "dns-test-6db33bf0-b51f-4eff-80b7-c8295e72fe18": Phase="Running", Reason="", readiness=true. Elapsed: 2.01860632s
    Mar 13 19:34:08.989: INFO: Pod "dns-test-6db33bf0-b51f-4eff-80b7-c8295e72fe18" satisfied condition "running"
    STEP: retrieving the pod 03/13/23 19:34:08.989
    STEP: looking for the results for each expected name from probers 03/13/23 19:34:08.994
    Mar 13 19:34:09.044: INFO: DNS probes using dns-8763/dns-test-6db33bf0-b51f-4eff-80b7-c8295e72fe18 succeeded

    STEP: deleting the pod 03/13/23 19:34:09.044
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:34:09.076: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-8763" for this suite. 03/13/23 19:34:09.088
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] Ingress API
  should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552
[BeforeEach] [sig-network] Ingress API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:34:09.146
Mar 13 19:34:09.146: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename ingress 03/13/23 19:34:09.168
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:09.225
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:09.231
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/metrics/init/init.go:31
[It] should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552
STEP: getting /apis 03/13/23 19:34:09.236
STEP: getting /apis/networking.k8s.io 03/13/23 19:34:09.24
STEP: getting /apis/networking.k8s.iov1 03/13/23 19:34:09.242
STEP: creating 03/13/23 19:34:09.244
STEP: getting 03/13/23 19:34:09.268
STEP: listing 03/13/23 19:34:09.276
STEP: watching 03/13/23 19:34:09.281
Mar 13 19:34:09.281: INFO: starting watch
STEP: cluster-wide listing 03/13/23 19:34:09.283
STEP: cluster-wide watching 03/13/23 19:34:09.286
Mar 13 19:34:09.286: INFO: starting watch
STEP: patching 03/13/23 19:34:09.292
STEP: updating 03/13/23 19:34:09.305
Mar 13 19:34:09.323: INFO: waiting for watch events with expected annotations
Mar 13 19:34:09.323: INFO: saw patched and updated annotations
STEP: patching /status 03/13/23 19:34:09.323
STEP: updating /status 03/13/23 19:34:09.361
STEP: get /status 03/13/23 19:34:09.371
STEP: deleting 03/13/23 19:34:09.375
STEP: deleting a collection 03/13/23 19:34:09.393
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/node/init/init.go:32
Mar 13 19:34:09.416: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Ingress API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Ingress API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Ingress API
  tear down framework | framework.go:193
STEP: Destroying namespace "ingress-8980" for this suite. 03/13/23 19:34:09.43
------------------------------
â€¢ [0.296 seconds]
[sig-network] Ingress API
test/e2e/network/common/framework.go:23
  should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Ingress API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:34:09.146
    Mar 13 19:34:09.146: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename ingress 03/13/23 19:34:09.168
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:09.225
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:09.231
    [BeforeEach] [sig-network] Ingress API
      test/e2e/framework/metrics/init/init.go:31
    [It] should support creating Ingress API operations [Conformance]
      test/e2e/network/ingress.go:552
    STEP: getting /apis 03/13/23 19:34:09.236
    STEP: getting /apis/networking.k8s.io 03/13/23 19:34:09.24
    STEP: getting /apis/networking.k8s.iov1 03/13/23 19:34:09.242
    STEP: creating 03/13/23 19:34:09.244
    STEP: getting 03/13/23 19:34:09.268
    STEP: listing 03/13/23 19:34:09.276
    STEP: watching 03/13/23 19:34:09.281
    Mar 13 19:34:09.281: INFO: starting watch
    STEP: cluster-wide listing 03/13/23 19:34:09.283
    STEP: cluster-wide watching 03/13/23 19:34:09.286
    Mar 13 19:34:09.286: INFO: starting watch
    STEP: patching 03/13/23 19:34:09.292
    STEP: updating 03/13/23 19:34:09.305
    Mar 13 19:34:09.323: INFO: waiting for watch events with expected annotations
    Mar 13 19:34:09.323: INFO: saw patched and updated annotations
    STEP: patching /status 03/13/23 19:34:09.323
    STEP: updating /status 03/13/23 19:34:09.361
    STEP: get /status 03/13/23 19:34:09.371
    STEP: deleting 03/13/23 19:34:09.375
    STEP: deleting a collection 03/13/23 19:34:09.393
    [AfterEach] [sig-network] Ingress API
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:34:09.416: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Ingress API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Ingress API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Ingress API
      tear down framework | framework.go:193
    STEP: Destroying namespace "ingress-8980" for this suite. 03/13/23 19:34:09.43
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:486
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:34:09.444
Mar 13 19:34:09.444: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename security-context-test 03/13/23 19:34:09.445
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:09.465
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:09.471
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:486
Mar 13 19:34:09.526: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-840a2d0e-674d-42a6-a61d-9155ca66d5fe" in namespace "security-context-test-2441" to be "Succeeded or Failed"
Mar 13 19:34:09.540: INFO: Pod "busybox-readonly-false-840a2d0e-674d-42a6-a61d-9155ca66d5fe": Phase="Pending", Reason="", readiness=false. Elapsed: 13.623253ms
Mar 13 19:34:11.544: INFO: Pod "busybox-readonly-false-840a2d0e-674d-42a6-a61d-9155ca66d5fe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017886986s
Mar 13 19:34:13.546: INFO: Pod "busybox-readonly-false-840a2d0e-674d-42a6-a61d-9155ca66d5fe": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019493438s
Mar 13 19:34:15.543: INFO: Pod "busybox-readonly-false-840a2d0e-674d-42a6-a61d-9155ca66d5fe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017113428s
Mar 13 19:34:15.544: INFO: Pod "busybox-readonly-false-840a2d0e-674d-42a6-a61d-9155ca66d5fe" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Mar 13 19:34:15.544: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-2441" for this suite. 03/13/23 19:34:15.547
------------------------------
â€¢ [SLOW TEST] [6.108 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with readOnlyRootFilesystem
  test/e2e/common/node/security_context.go:430
    should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:486

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:34:09.444
    Mar 13 19:34:09.444: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename security-context-test 03/13/23 19:34:09.445
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:09.465
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:09.471
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:486
    Mar 13 19:34:09.526: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-840a2d0e-674d-42a6-a61d-9155ca66d5fe" in namespace "security-context-test-2441" to be "Succeeded or Failed"
    Mar 13 19:34:09.540: INFO: Pod "busybox-readonly-false-840a2d0e-674d-42a6-a61d-9155ca66d5fe": Phase="Pending", Reason="", readiness=false. Elapsed: 13.623253ms
    Mar 13 19:34:11.544: INFO: Pod "busybox-readonly-false-840a2d0e-674d-42a6-a61d-9155ca66d5fe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017886986s
    Mar 13 19:34:13.546: INFO: Pod "busybox-readonly-false-840a2d0e-674d-42a6-a61d-9155ca66d5fe": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019493438s
    Mar 13 19:34:15.543: INFO: Pod "busybox-readonly-false-840a2d0e-674d-42a6-a61d-9155ca66d5fe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017113428s
    Mar 13 19:34:15.544: INFO: Pod "busybox-readonly-false-840a2d0e-674d-42a6-a61d-9155ca66d5fe" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:34:15.544: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-2441" for this suite. 03/13/23 19:34:15.547
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:34:15.556
Mar 13 19:34:15.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 19:34:15.557
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:15.565
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:15.567
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157
STEP: Creating a pod to test emptydir volume type on node default medium 03/13/23 19:34:15.57
Mar 13 19:34:15.575: INFO: Waiting up to 5m0s for pod "pod-18e506dd-a2c7-4735-8731-0aa93e7a243a" in namespace "emptydir-589" to be "Succeeded or Failed"
Mar 13 19:34:15.581: INFO: Pod "pod-18e506dd-a2c7-4735-8731-0aa93e7a243a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.044707ms
Mar 13 19:34:17.585: INFO: Pod "pod-18e506dd-a2c7-4735-8731-0aa93e7a243a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008957686s
Mar 13 19:34:19.585: INFO: Pod "pod-18e506dd-a2c7-4735-8731-0aa93e7a243a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00925823s
STEP: Saw pod success 03/13/23 19:34:19.585
Mar 13 19:34:19.585: INFO: Pod "pod-18e506dd-a2c7-4735-8731-0aa93e7a243a" satisfied condition "Succeeded or Failed"
Mar 13 19:34:19.588: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-18e506dd-a2c7-4735-8731-0aa93e7a243a container test-container: <nil>
STEP: delete the pod 03/13/23 19:34:19.596
Mar 13 19:34:19.603: INFO: Waiting for pod pod-18e506dd-a2c7-4735-8731-0aa93e7a243a to disappear
Mar 13 19:34:19.605: INFO: Pod pod-18e506dd-a2c7-4735-8731-0aa93e7a243a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 19:34:19.605: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-589" for this suite. 03/13/23 19:34:19.609
------------------------------
â€¢ [4.056 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:34:15.556
    Mar 13 19:34:15.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 19:34:15.557
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:15.565
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:15.567
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:157
    STEP: Creating a pod to test emptydir volume type on node default medium 03/13/23 19:34:15.57
    Mar 13 19:34:15.575: INFO: Waiting up to 5m0s for pod "pod-18e506dd-a2c7-4735-8731-0aa93e7a243a" in namespace "emptydir-589" to be "Succeeded or Failed"
    Mar 13 19:34:15.581: INFO: Pod "pod-18e506dd-a2c7-4735-8731-0aa93e7a243a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.044707ms
    Mar 13 19:34:17.585: INFO: Pod "pod-18e506dd-a2c7-4735-8731-0aa93e7a243a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008957686s
    Mar 13 19:34:19.585: INFO: Pod "pod-18e506dd-a2c7-4735-8731-0aa93e7a243a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00925823s
    STEP: Saw pod success 03/13/23 19:34:19.585
    Mar 13 19:34:19.585: INFO: Pod "pod-18e506dd-a2c7-4735-8731-0aa93e7a243a" satisfied condition "Succeeded or Failed"
    Mar 13 19:34:19.588: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-18e506dd-a2c7-4735-8731-0aa93e7a243a container test-container: <nil>
    STEP: delete the pod 03/13/23 19:34:19.596
    Mar 13 19:34:19.603: INFO: Waiting for pod pod-18e506dd-a2c7-4735-8731-0aa93e7a243a to disappear
    Mar 13 19:34:19.605: INFO: Pod pod-18e506dd-a2c7-4735-8731-0aa93e7a243a no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:34:19.605: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-589" for this suite. 03/13/23 19:34:19.609
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:34:19.625
Mar 13 19:34:19.625: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename svcaccounts 03/13/23 19:34:19.626
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:19.64
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:19.642
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78
Mar 13 19:34:19.654: INFO: Waiting up to 5m0s for pod "pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7" in namespace "svcaccounts-4873" to be "running"
Mar 13 19:34:19.657: INFO: Pod "pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.132515ms
Mar 13 19:34:21.662: INFO: Pod "pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7": Phase="Running", Reason="", readiness=true. Elapsed: 2.006371573s
Mar 13 19:34:21.662: INFO: Pod "pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7" satisfied condition "running"
STEP: reading a file in the container 03/13/23 19:34:21.662
Mar 13 19:34:21.662: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4873 pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container 03/13/23 19:34:21.833
Mar 13 19:34:21.833: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4873 pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container 03/13/23 19:34:21.983
Mar 13 19:34:21.983: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4873 pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Mar 13 19:34:22.152: INFO: Got root ca configmap in namespace "svcaccounts-4873"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar 13 19:34:22.155: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-4873" for this suite. 03/13/23 19:34:22.159
------------------------------
â€¢ [2.538 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:34:19.625
    Mar 13 19:34:19.625: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename svcaccounts 03/13/23 19:34:19.626
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:19.64
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:19.642
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should mount an API token into pods  [Conformance]
      test/e2e/auth/service_accounts.go:78
    Mar 13 19:34:19.654: INFO: Waiting up to 5m0s for pod "pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7" in namespace "svcaccounts-4873" to be "running"
    Mar 13 19:34:19.657: INFO: Pod "pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.132515ms
    Mar 13 19:34:21.662: INFO: Pod "pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7": Phase="Running", Reason="", readiness=true. Elapsed: 2.006371573s
    Mar 13 19:34:21.662: INFO: Pod "pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7" satisfied condition "running"
    STEP: reading a file in the container 03/13/23 19:34:21.662
    Mar 13 19:34:21.662: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4873 pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
    STEP: reading a file in the container 03/13/23 19:34:21.833
    Mar 13 19:34:21.833: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4873 pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
    STEP: reading a file in the container 03/13/23 19:34:21.983
    Mar 13 19:34:21.983: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4873 pod-service-account-784d3528-4e89-4ce2-ae88-24b1c4abd2f7 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
    Mar 13 19:34:22.152: INFO: Got root ca configmap in namespace "svcaccounts-4873"
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:34:22.155: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-4873" for this suite. 03/13/23 19:34:22.159
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-apps] ControllerRevision [Serial]
  should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:34:22.164
Mar 13 19:34:22.164: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename controllerrevisions 03/13/23 19:34:22.166
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:22.174
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:22.177
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/apps/controller_revision.go:93
[It] should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124
STEP: Creating DaemonSet "e2e-fsptc-daemon-set" 03/13/23 19:34:22.191
STEP: Check that daemon pods launch on every node of the cluster. 03/13/23 19:34:22.196
Mar 13 19:34:22.201: INFO: Number of nodes with available pods controlled by daemonset e2e-fsptc-daemon-set: 0
Mar 13 19:34:22.201: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:34:23.208: INFO: Number of nodes with available pods controlled by daemonset e2e-fsptc-daemon-set: 0
Mar 13 19:34:23.208: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:34:24.208: INFO: Number of nodes with available pods controlled by daemonset e2e-fsptc-daemon-set: 2
Mar 13 19:34:24.208: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-fsptc-daemon-set
STEP: Confirm DaemonSet "e2e-fsptc-daemon-set" successfully created with "daemonset-name=e2e-fsptc-daemon-set" label 03/13/23 19:34:24.21
STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-fsptc-daemon-set" 03/13/23 19:34:24.215
Mar 13 19:34:24.218: INFO: Located ControllerRevision: "e2e-fsptc-daemon-set-779c858b7c"
STEP: Patching ControllerRevision "e2e-fsptc-daemon-set-779c858b7c" 03/13/23 19:34:24.219
Mar 13 19:34:24.225: INFO: e2e-fsptc-daemon-set-779c858b7c has been patched
STEP: Create a new ControllerRevision 03/13/23 19:34:24.225
Mar 13 19:34:24.229: INFO: Created ControllerRevision: e2e-fsptc-daemon-set-5b9996d8bf
STEP: Confirm that there are two ControllerRevisions 03/13/23 19:34:24.229
Mar 13 19:34:24.229: INFO: Requesting list of ControllerRevisions to confirm quantity
Mar 13 19:34:24.231: INFO: Found 2 ControllerRevisions
STEP: Deleting ControllerRevision "e2e-fsptc-daemon-set-779c858b7c" 03/13/23 19:34:24.231
STEP: Confirm that there is only one ControllerRevision 03/13/23 19:34:24.235
Mar 13 19:34:24.235: INFO: Requesting list of ControllerRevisions to confirm quantity
Mar 13 19:34:24.237: INFO: Found 1 ControllerRevisions
STEP: Updating ControllerRevision "e2e-fsptc-daemon-set-5b9996d8bf" 03/13/23 19:34:24.239
Mar 13 19:34:24.245: INFO: e2e-fsptc-daemon-set-5b9996d8bf has been updated
STEP: Generate another ControllerRevision by patching the Daemonset 03/13/23 19:34:24.245
W0313 19:34:24.250022      21 warnings.go:70] unknown field "updateStrategy"
STEP: Confirm that there are two ControllerRevisions 03/13/23 19:34:24.25
Mar 13 19:34:24.250: INFO: Requesting list of ControllerRevisions to confirm quantity
Mar 13 19:34:25.252: INFO: Requesting list of ControllerRevisions to confirm quantity
Mar 13 19:34:25.256: INFO: Found 2 ControllerRevisions
STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-fsptc-daemon-set-5b9996d8bf=updated" 03/13/23 19:34:25.256
STEP: Confirm that there is only one ControllerRevision 03/13/23 19:34:25.261
Mar 13 19:34:25.261: INFO: Requesting list of ControllerRevisions to confirm quantity
Mar 13 19:34:25.263: INFO: Found 1 ControllerRevisions
Mar 13 19:34:25.266: INFO: ControllerRevision "e2e-fsptc-daemon-set-df4cd8848" has revision 3
[AfterEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/apps/controller_revision.go:58
STEP: Deleting DaemonSet "e2e-fsptc-daemon-set" 03/13/23 19:34:25.268
STEP: deleting DaemonSet.extensions e2e-fsptc-daemon-set in namespace controllerrevisions-7505, will wait for the garbage collector to delete the pods 03/13/23 19:34:25.268
Mar 13 19:34:25.326: INFO: Deleting DaemonSet.extensions e2e-fsptc-daemon-set took: 4.079802ms
Mar 13 19:34:25.426: INFO: Terminating DaemonSet.extensions e2e-fsptc-daemon-set pods took: 100.758154ms
Mar 13 19:34:26.730: INFO: Number of nodes with available pods controlled by daemonset e2e-fsptc-daemon-set: 0
Mar 13 19:34:26.730: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-fsptc-daemon-set
Mar 13 19:34:26.732: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23455"},"items":null}

Mar 13 19:34:26.734: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23455"},"items":null}

[AfterEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:34:26.742: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "controllerrevisions-7505" for this suite. 03/13/23 19:34:26.745
------------------------------
â€¢ [4.585 seconds]
[sig-apps] ControllerRevision [Serial]
test/e2e/apps/framework.go:23
  should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:34:22.164
    Mar 13 19:34:22.164: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename controllerrevisions 03/13/23 19:34:22.166
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:22.174
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:22.177
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/apps/controller_revision.go:93
    [It] should manage the lifecycle of a ControllerRevision [Conformance]
      test/e2e/apps/controller_revision.go:124
    STEP: Creating DaemonSet "e2e-fsptc-daemon-set" 03/13/23 19:34:22.191
    STEP: Check that daemon pods launch on every node of the cluster. 03/13/23 19:34:22.196
    Mar 13 19:34:22.201: INFO: Number of nodes with available pods controlled by daemonset e2e-fsptc-daemon-set: 0
    Mar 13 19:34:22.201: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:34:23.208: INFO: Number of nodes with available pods controlled by daemonset e2e-fsptc-daemon-set: 0
    Mar 13 19:34:23.208: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:34:24.208: INFO: Number of nodes with available pods controlled by daemonset e2e-fsptc-daemon-set: 2
    Mar 13 19:34:24.208: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-fsptc-daemon-set
    STEP: Confirm DaemonSet "e2e-fsptc-daemon-set" successfully created with "daemonset-name=e2e-fsptc-daemon-set" label 03/13/23 19:34:24.21
    STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-fsptc-daemon-set" 03/13/23 19:34:24.215
    Mar 13 19:34:24.218: INFO: Located ControllerRevision: "e2e-fsptc-daemon-set-779c858b7c"
    STEP: Patching ControllerRevision "e2e-fsptc-daemon-set-779c858b7c" 03/13/23 19:34:24.219
    Mar 13 19:34:24.225: INFO: e2e-fsptc-daemon-set-779c858b7c has been patched
    STEP: Create a new ControllerRevision 03/13/23 19:34:24.225
    Mar 13 19:34:24.229: INFO: Created ControllerRevision: e2e-fsptc-daemon-set-5b9996d8bf
    STEP: Confirm that there are two ControllerRevisions 03/13/23 19:34:24.229
    Mar 13 19:34:24.229: INFO: Requesting list of ControllerRevisions to confirm quantity
    Mar 13 19:34:24.231: INFO: Found 2 ControllerRevisions
    STEP: Deleting ControllerRevision "e2e-fsptc-daemon-set-779c858b7c" 03/13/23 19:34:24.231
    STEP: Confirm that there is only one ControllerRevision 03/13/23 19:34:24.235
    Mar 13 19:34:24.235: INFO: Requesting list of ControllerRevisions to confirm quantity
    Mar 13 19:34:24.237: INFO: Found 1 ControllerRevisions
    STEP: Updating ControllerRevision "e2e-fsptc-daemon-set-5b9996d8bf" 03/13/23 19:34:24.239
    Mar 13 19:34:24.245: INFO: e2e-fsptc-daemon-set-5b9996d8bf has been updated
    STEP: Generate another ControllerRevision by patching the Daemonset 03/13/23 19:34:24.245
    W0313 19:34:24.250022      21 warnings.go:70] unknown field "updateStrategy"
    STEP: Confirm that there are two ControllerRevisions 03/13/23 19:34:24.25
    Mar 13 19:34:24.250: INFO: Requesting list of ControllerRevisions to confirm quantity
    Mar 13 19:34:25.252: INFO: Requesting list of ControllerRevisions to confirm quantity
    Mar 13 19:34:25.256: INFO: Found 2 ControllerRevisions
    STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-fsptc-daemon-set-5b9996d8bf=updated" 03/13/23 19:34:25.256
    STEP: Confirm that there is only one ControllerRevision 03/13/23 19:34:25.261
    Mar 13 19:34:25.261: INFO: Requesting list of ControllerRevisions to confirm quantity
    Mar 13 19:34:25.263: INFO: Found 1 ControllerRevisions
    Mar 13 19:34:25.266: INFO: ControllerRevision "e2e-fsptc-daemon-set-df4cd8848" has revision 3
    [AfterEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/apps/controller_revision.go:58
    STEP: Deleting DaemonSet "e2e-fsptc-daemon-set" 03/13/23 19:34:25.268
    STEP: deleting DaemonSet.extensions e2e-fsptc-daemon-set in namespace controllerrevisions-7505, will wait for the garbage collector to delete the pods 03/13/23 19:34:25.268
    Mar 13 19:34:25.326: INFO: Deleting DaemonSet.extensions e2e-fsptc-daemon-set took: 4.079802ms
    Mar 13 19:34:25.426: INFO: Terminating DaemonSet.extensions e2e-fsptc-daemon-set pods took: 100.758154ms
    Mar 13 19:34:26.730: INFO: Number of nodes with available pods controlled by daemonset e2e-fsptc-daemon-set: 0
    Mar 13 19:34:26.730: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-fsptc-daemon-set
    Mar 13 19:34:26.732: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23455"},"items":null}

    Mar 13 19:34:26.734: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23455"},"items":null}

    [AfterEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:34:26.742: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "controllerrevisions-7505" for this suite. 03/13/23 19:34:26.745
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:34:26.753
Mar 13 19:34:26.753: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename var-expansion 03/13/23 19:34:26.754
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:26.762
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:26.764
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44
STEP: Creating a pod to test env composition 03/13/23 19:34:26.767
Mar 13 19:34:26.773: INFO: Waiting up to 5m0s for pod "var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0" in namespace "var-expansion-7637" to be "Succeeded or Failed"
Mar 13 19:34:26.776: INFO: Pod "var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013977ms
Mar 13 19:34:28.780: INFO: Pod "var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006303127s
Mar 13 19:34:30.779: INFO: Pod "var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0057773s
STEP: Saw pod success 03/13/23 19:34:30.779
Mar 13 19:34:30.780: INFO: Pod "var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0" satisfied condition "Succeeded or Failed"
Mar 13 19:34:30.782: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0 container dapi-container: <nil>
STEP: delete the pod 03/13/23 19:34:30.792
Mar 13 19:34:30.799: INFO: Waiting for pod var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0 to disappear
Mar 13 19:34:30.802: INFO: Pod var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar 13 19:34:30.802: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-7637" for this suite. 03/13/23 19:34:30.805
------------------------------
â€¢ [4.057 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:34:26.753
    Mar 13 19:34:26.753: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename var-expansion 03/13/23 19:34:26.754
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:26.762
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:26.764
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:44
    STEP: Creating a pod to test env composition 03/13/23 19:34:26.767
    Mar 13 19:34:26.773: INFO: Waiting up to 5m0s for pod "var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0" in namespace "var-expansion-7637" to be "Succeeded or Failed"
    Mar 13 19:34:26.776: INFO: Pod "var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013977ms
    Mar 13 19:34:28.780: INFO: Pod "var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006303127s
    Mar 13 19:34:30.779: INFO: Pod "var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0057773s
    STEP: Saw pod success 03/13/23 19:34:30.779
    Mar 13 19:34:30.780: INFO: Pod "var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0" satisfied condition "Succeeded or Failed"
    Mar 13 19:34:30.782: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0 container dapi-container: <nil>
    STEP: delete the pod 03/13/23 19:34:30.792
    Mar 13 19:34:30.799: INFO: Waiting for pod var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0 to disappear
    Mar 13 19:34:30.802: INFO: Pod var-expansion-023d6817-408e-465e-8e97-68d78e8a61f0 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:34:30.802: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-7637" for this suite. 03/13/23 19:34:30.805
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with projected pod [Conformance]
  test/e2e/storage/subpath.go:106
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:34:30.817
Mar 13 19:34:30.817: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename subpath 03/13/23 19:34:30.818
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:30.829
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:30.831
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 03/13/23 19:34:30.834
[It] should support subpaths with projected pod [Conformance]
  test/e2e/storage/subpath.go:106
STEP: Creating pod pod-subpath-test-projected-zg2f 03/13/23 19:34:30.841
STEP: Creating a pod to test atomic-volume-subpath 03/13/23 19:34:30.841
Mar 13 19:34:30.848: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-zg2f" in namespace "subpath-2903" to be "Succeeded or Failed"
Mar 13 19:34:30.851: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.806297ms
Mar 13 19:34:32.856: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 2.007362328s
Mar 13 19:34:34.854: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 4.005968744s
Mar 13 19:34:36.855: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 6.007145784s
Mar 13 19:34:38.856: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 8.007601353s
Mar 13 19:34:40.855: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 10.006960292s
Mar 13 19:34:42.856: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 12.007431999s
Mar 13 19:34:44.856: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 14.007652696s
Mar 13 19:34:46.856: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 16.007634725s
Mar 13 19:34:48.857: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 18.008346395s
Mar 13 19:34:50.856: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 20.007799859s
Mar 13 19:34:52.855: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=false. Elapsed: 22.006763784s
Mar 13 19:34:54.855: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.007090576s
STEP: Saw pod success 03/13/23 19:34:54.855
Mar 13 19:34:54.856: INFO: Pod "pod-subpath-test-projected-zg2f" satisfied condition "Succeeded or Failed"
Mar 13 19:34:54.859: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-subpath-test-projected-zg2f container test-container-subpath-projected-zg2f: <nil>
STEP: delete the pod 03/13/23 19:34:54.868
Mar 13 19:34:54.881: INFO: Waiting for pod pod-subpath-test-projected-zg2f to disappear
Mar 13 19:34:54.884: INFO: Pod pod-subpath-test-projected-zg2f no longer exists
STEP: Deleting pod pod-subpath-test-projected-zg2f 03/13/23 19:34:54.885
Mar 13 19:34:54.885: INFO: Deleting pod "pod-subpath-test-projected-zg2f" in namespace "subpath-2903"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Mar 13 19:34:54.888: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-2903" for this suite. 03/13/23 19:34:54.892
------------------------------
â€¢ [SLOW TEST] [24.079 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/storage/subpath.go:106

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:34:30.817
    Mar 13 19:34:30.817: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename subpath 03/13/23 19:34:30.818
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:30.829
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:30.831
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 03/13/23 19:34:30.834
    [It] should support subpaths with projected pod [Conformance]
      test/e2e/storage/subpath.go:106
    STEP: Creating pod pod-subpath-test-projected-zg2f 03/13/23 19:34:30.841
    STEP: Creating a pod to test atomic-volume-subpath 03/13/23 19:34:30.841
    Mar 13 19:34:30.848: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-zg2f" in namespace "subpath-2903" to be "Succeeded or Failed"
    Mar 13 19:34:30.851: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.806297ms
    Mar 13 19:34:32.856: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 2.007362328s
    Mar 13 19:34:34.854: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 4.005968744s
    Mar 13 19:34:36.855: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 6.007145784s
    Mar 13 19:34:38.856: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 8.007601353s
    Mar 13 19:34:40.855: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 10.006960292s
    Mar 13 19:34:42.856: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 12.007431999s
    Mar 13 19:34:44.856: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 14.007652696s
    Mar 13 19:34:46.856: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 16.007634725s
    Mar 13 19:34:48.857: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 18.008346395s
    Mar 13 19:34:50.856: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=true. Elapsed: 20.007799859s
    Mar 13 19:34:52.855: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Running", Reason="", readiness=false. Elapsed: 22.006763784s
    Mar 13 19:34:54.855: INFO: Pod "pod-subpath-test-projected-zg2f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.007090576s
    STEP: Saw pod success 03/13/23 19:34:54.855
    Mar 13 19:34:54.856: INFO: Pod "pod-subpath-test-projected-zg2f" satisfied condition "Succeeded or Failed"
    Mar 13 19:34:54.859: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-subpath-test-projected-zg2f container test-container-subpath-projected-zg2f: <nil>
    STEP: delete the pod 03/13/23 19:34:54.868
    Mar 13 19:34:54.881: INFO: Waiting for pod pod-subpath-test-projected-zg2f to disappear
    Mar 13 19:34:54.884: INFO: Pod pod-subpath-test-projected-zg2f no longer exists
    STEP: Deleting pod pod-subpath-test-projected-zg2f 03/13/23 19:34:54.885
    Mar 13 19:34:54.885: INFO: Deleting pod "pod-subpath-test-projected-zg2f" in namespace "subpath-2903"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:34:54.888: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-2903" for this suite. 03/13/23 19:34:54.892
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:34:54.897
Mar 13 19:34:54.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:34:54.899
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:54.908
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:54.91
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215
STEP: Creating secret with name s-test-opt-del-265bfada-8868-4602-96f6-7054fb806717 03/13/23 19:34:54.916
STEP: Creating secret with name s-test-opt-upd-b9909a7d-e3eb-4a4b-9ca7-0b56cf21cd31 03/13/23 19:34:54.92
STEP: Creating the pod 03/13/23 19:34:54.923
Mar 13 19:34:54.930: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-e786189d-4a61-4a52-b865-59c040944491" in namespace "projected-42" to be "running and ready"
Mar 13 19:34:54.932: INFO: Pod "pod-projected-secrets-e786189d-4a61-4a52-b865-59c040944491": Phase="Pending", Reason="", readiness=false. Elapsed: 2.450692ms
Mar 13 19:34:54.932: INFO: The phase of Pod pod-projected-secrets-e786189d-4a61-4a52-b865-59c040944491 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:34:56.937: INFO: Pod "pod-projected-secrets-e786189d-4a61-4a52-b865-59c040944491": Phase="Running", Reason="", readiness=true. Elapsed: 2.00702651s
Mar 13 19:34:56.937: INFO: The phase of Pod pod-projected-secrets-e786189d-4a61-4a52-b865-59c040944491 is Running (Ready = true)
Mar 13 19:34:56.937: INFO: Pod "pod-projected-secrets-e786189d-4a61-4a52-b865-59c040944491" satisfied condition "running and ready"
STEP: Deleting secret s-test-opt-del-265bfada-8868-4602-96f6-7054fb806717 03/13/23 19:34:56.962
STEP: Updating secret s-test-opt-upd-b9909a7d-e3eb-4a4b-9ca7-0b56cf21cd31 03/13/23 19:34:56.967
STEP: Creating secret with name s-test-opt-create-8a4cb496-7f80-4bba-9870-a208829c687f 03/13/23 19:34:56.971
STEP: waiting to observe update in volume 03/13/23 19:34:56.974
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar 13 19:35:01.009: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-42" for this suite. 03/13/23 19:35:01.013
------------------------------
â€¢ [SLOW TEST] [6.120 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:34:54.897
    Mar 13 19:34:54.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:34:54.899
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:34:54.908
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:34:54.91
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:215
    STEP: Creating secret with name s-test-opt-del-265bfada-8868-4602-96f6-7054fb806717 03/13/23 19:34:54.916
    STEP: Creating secret with name s-test-opt-upd-b9909a7d-e3eb-4a4b-9ca7-0b56cf21cd31 03/13/23 19:34:54.92
    STEP: Creating the pod 03/13/23 19:34:54.923
    Mar 13 19:34:54.930: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-e786189d-4a61-4a52-b865-59c040944491" in namespace "projected-42" to be "running and ready"
    Mar 13 19:34:54.932: INFO: Pod "pod-projected-secrets-e786189d-4a61-4a52-b865-59c040944491": Phase="Pending", Reason="", readiness=false. Elapsed: 2.450692ms
    Mar 13 19:34:54.932: INFO: The phase of Pod pod-projected-secrets-e786189d-4a61-4a52-b865-59c040944491 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:34:56.937: INFO: Pod "pod-projected-secrets-e786189d-4a61-4a52-b865-59c040944491": Phase="Running", Reason="", readiness=true. Elapsed: 2.00702651s
    Mar 13 19:34:56.937: INFO: The phase of Pod pod-projected-secrets-e786189d-4a61-4a52-b865-59c040944491 is Running (Ready = true)
    Mar 13 19:34:56.937: INFO: Pod "pod-projected-secrets-e786189d-4a61-4a52-b865-59c040944491" satisfied condition "running and ready"
    STEP: Deleting secret s-test-opt-del-265bfada-8868-4602-96f6-7054fb806717 03/13/23 19:34:56.962
    STEP: Updating secret s-test-opt-upd-b9909a7d-e3eb-4a4b-9ca7-0b56cf21cd31 03/13/23 19:34:56.967
    STEP: Creating secret with name s-test-opt-create-8a4cb496-7f80-4bba-9870-a208829c687f 03/13/23 19:34:56.971
    STEP: waiting to observe update in volume 03/13/23 19:34:56.974
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:35:01.009: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-42" for this suite. 03/13/23 19:35:01.013
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:35:01.021
Mar 13 19:35:01.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 19:35:01.022
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:01.031
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:01.034
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation 03/13/23 19:35:01.037
Mar 13 19:35:01.038: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation 03/13/23 19:35:09.593
Mar 13 19:35:09.594: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:35:11.423: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:35:18.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-5973" for this suite. 03/13/23 19:35:18.229
------------------------------
â€¢ [SLOW TEST] [17.214 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:35:01.021
    Mar 13 19:35:01.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 19:35:01.022
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:01.031
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:01.034
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of same group but different versions [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:309
    STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation 03/13/23 19:35:01.037
    Mar 13 19:35:01.038: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation 03/13/23 19:35:09.593
    Mar 13 19:35:09.594: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:35:11.423: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:35:18.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-5973" for this suite. 03/13/23 19:35:18.229
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:35:18.237
Mar 13 19:35:18.237: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename endpointslice 03/13/23 19:35:18.238
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:18.247
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:18.25
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66
Mar 13 19:35:18.260: INFO: Endpoints addresses: [10.1.96.3] , ports: [6443]
Mar 13 19:35:18.260: INFO: EndpointSlices addresses: [10.1.96.3] , ports: [6443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Mar 13 19:35:18.260: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-5965" for this suite. 03/13/23 19:35:18.263
------------------------------
â€¢ [0.032 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:35:18.237
    Mar 13 19:35:18.237: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename endpointslice 03/13/23 19:35:18.238
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:18.247
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:18.25
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
      test/e2e/network/endpointslice.go:66
    Mar 13 19:35:18.260: INFO: Endpoints addresses: [10.1.96.3] , ports: [6443]
    Mar 13 19:35:18.260: INFO: EndpointSlices addresses: [10.1.96.3] , ports: [6443]
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:35:18.260: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-5965" for this suite. 03/13/23 19:35:18.263
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Pods
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:35:18.276
Mar 13 19:35:18.277: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pods 03/13/23 19:35:18.277
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:18.292
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:18.295
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226
STEP: creating the pod 03/13/23 19:35:18.298
STEP: setting up watch 03/13/23 19:35:18.298
STEP: submitting the pod to kubernetes 03/13/23 19:35:18.401
STEP: verifying the pod is in kubernetes 03/13/23 19:35:18.408
STEP: verifying pod creation was observed 03/13/23 19:35:18.411
Mar 13 19:35:18.411: INFO: Waiting up to 5m0s for pod "pod-submit-remove-49b20516-4aae-4acd-ab16-773d9f794fa4" in namespace "pods-4434" to be "running"
Mar 13 19:35:18.414: INFO: Pod "pod-submit-remove-49b20516-4aae-4acd-ab16-773d9f794fa4": Phase="Pending", Reason="", readiness=false. Elapsed: 3.242976ms
Mar 13 19:35:20.421: INFO: Pod "pod-submit-remove-49b20516-4aae-4acd-ab16-773d9f794fa4": Phase="Running", Reason="", readiness=true. Elapsed: 2.009496446s
Mar 13 19:35:20.421: INFO: Pod "pod-submit-remove-49b20516-4aae-4acd-ab16-773d9f794fa4" satisfied condition "running"
STEP: deleting the pod gracefully 03/13/23 19:35:20.424
STEP: verifying pod deletion was observed 03/13/23 19:35:20.429
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar 13 19:35:22.771: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-4434" for this suite. 03/13/23 19:35:22.775
------------------------------
â€¢ [4.504 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:35:18.276
    Mar 13 19:35:18.277: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pods 03/13/23 19:35:18.277
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:18.292
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:18.295
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should be submitted and removed [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:226
    STEP: creating the pod 03/13/23 19:35:18.298
    STEP: setting up watch 03/13/23 19:35:18.298
    STEP: submitting the pod to kubernetes 03/13/23 19:35:18.401
    STEP: verifying the pod is in kubernetes 03/13/23 19:35:18.408
    STEP: verifying pod creation was observed 03/13/23 19:35:18.411
    Mar 13 19:35:18.411: INFO: Waiting up to 5m0s for pod "pod-submit-remove-49b20516-4aae-4acd-ab16-773d9f794fa4" in namespace "pods-4434" to be "running"
    Mar 13 19:35:18.414: INFO: Pod "pod-submit-remove-49b20516-4aae-4acd-ab16-773d9f794fa4": Phase="Pending", Reason="", readiness=false. Elapsed: 3.242976ms
    Mar 13 19:35:20.421: INFO: Pod "pod-submit-remove-49b20516-4aae-4acd-ab16-773d9f794fa4": Phase="Running", Reason="", readiness=true. Elapsed: 2.009496446s
    Mar 13 19:35:20.421: INFO: Pod "pod-submit-remove-49b20516-4aae-4acd-ab16-773d9f794fa4" satisfied condition "running"
    STEP: deleting the pod gracefully 03/13/23 19:35:20.424
    STEP: verifying pod deletion was observed 03/13/23 19:35:20.429
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:35:22.771: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-4434" for this suite. 03/13/23 19:35:22.775
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:35:22.782
Mar 13 19:35:22.782: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename runtimeclass 03/13/23 19:35:22.783
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:22.794
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:22.797
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Mar 13 19:35:22.806: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-3761" for this suite. 03/13/23 19:35:22.81
------------------------------
â€¢ [0.034 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:35:22.782
    Mar 13 19:35:22.782: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename runtimeclass 03/13/23 19:35:22.783
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:22.794
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:22.797
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:55
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:35:22.806: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-3761" for this suite. 03/13/23 19:35:22.81
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:35:22.819
Mar 13 19:35:22.819: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 19:35:22.82
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:22.834
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:22.838
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442
STEP: set up a multi version CRD 03/13/23 19:35:22.841
Mar 13 19:35:22.842: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: mark a version not serverd 03/13/23 19:35:26.759
STEP: check the unserved version gets removed 03/13/23 19:35:26.775
STEP: check the other version is not changed 03/13/23 19:35:28.335
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:35:31.490: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-1590" for this suite. 03/13/23 19:35:31.499
------------------------------
â€¢ [SLOW TEST] [8.685 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:35:22.819
    Mar 13 19:35:22.819: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 19:35:22.82
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:22.834
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:22.838
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] removes definition from spec when one version gets changed to not be served [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:442
    STEP: set up a multi version CRD 03/13/23 19:35:22.841
    Mar 13 19:35:22.842: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: mark a version not serverd 03/13/23 19:35:26.759
    STEP: check the unserved version gets removed 03/13/23 19:35:26.775
    STEP: check the other version is not changed 03/13/23 19:35:28.335
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:35:31.490: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-1590" for this suite. 03/13/23 19:35:31.499
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:35:31.507
Mar 13 19:35:31.507: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename var-expansion 03/13/23 19:35:31.508
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:31.521
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:31.524
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186
Mar 13 19:35:31.533: INFO: Waiting up to 2m0s for pod "var-expansion-9a92d640-fe99-427b-8553-4ca6879a18b4" in namespace "var-expansion-764" to be "container 0 failed with reason CreateContainerConfigError"
Mar 13 19:35:31.536: INFO: Pod "var-expansion-9a92d640-fe99-427b-8553-4ca6879a18b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.824915ms
Mar 13 19:35:33.540: INFO: Pod "var-expansion-9a92d640-fe99-427b-8553-4ca6879a18b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00676292s
Mar 13 19:35:33.540: INFO: Pod "var-expansion-9a92d640-fe99-427b-8553-4ca6879a18b4" satisfied condition "container 0 failed with reason CreateContainerConfigError"
Mar 13 19:35:33.540: INFO: Deleting pod "var-expansion-9a92d640-fe99-427b-8553-4ca6879a18b4" in namespace "var-expansion-764"
Mar 13 19:35:33.546: INFO: Wait up to 5m0s for pod "var-expansion-9a92d640-fe99-427b-8553-4ca6879a18b4" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar 13 19:35:37.555: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-764" for this suite. 03/13/23 19:35:37.559
------------------------------
â€¢ [SLOW TEST] [6.058 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:35:31.507
    Mar 13 19:35:31.507: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename var-expansion 03/13/23 19:35:31.508
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:31.521
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:31.524
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
      test/e2e/common/node/expansion.go:186
    Mar 13 19:35:31.533: INFO: Waiting up to 2m0s for pod "var-expansion-9a92d640-fe99-427b-8553-4ca6879a18b4" in namespace "var-expansion-764" to be "container 0 failed with reason CreateContainerConfigError"
    Mar 13 19:35:31.536: INFO: Pod "var-expansion-9a92d640-fe99-427b-8553-4ca6879a18b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.824915ms
    Mar 13 19:35:33.540: INFO: Pod "var-expansion-9a92d640-fe99-427b-8553-4ca6879a18b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00676292s
    Mar 13 19:35:33.540: INFO: Pod "var-expansion-9a92d640-fe99-427b-8553-4ca6879a18b4" satisfied condition "container 0 failed with reason CreateContainerConfigError"
    Mar 13 19:35:33.540: INFO: Deleting pod "var-expansion-9a92d640-fe99-427b-8553-4ca6879a18b4" in namespace "var-expansion-764"
    Mar 13 19:35:33.546: INFO: Wait up to 5m0s for pod "var-expansion-9a92d640-fe99-427b-8553-4ca6879a18b4" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:35:37.555: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-764" for this suite. 03/13/23 19:35:37.559
  << End Captured GinkgoWriter Output
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:35:37.569
Mar 13 19:35:37.569: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename sched-pred 03/13/23 19:35:37.57
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:37.633
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:37.637
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Mar 13 19:35:37.640: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Mar 13 19:35:37.646: INFO: Waiting for terminating namespaces to be deleted...
Mar 13 19:35:37.649: INFO: 
Logging pods the apiserver thinks is on node vke-automated-test-51df1d4fb06e before test
Mar 13 19:35:37.656: INFO: calico-node-xs2jj from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 19:35:37.656: INFO: 	Container calico-node ready: true, restart count 0
Mar 13 19:35:37.656: INFO: csi-vultr-node-c4r8q from kube-system started at 2023-03-13 19:10:30 +0000 UTC (2 container statuses recorded)
Mar 13 19:35:37.656: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
Mar 13 19:35:37.656: INFO: 	Container driver-registrar ready: true, restart count 0
Mar 13 19:35:37.656: INFO: konnectivity-agent-k6k6r from kube-system started at 2023-03-13 19:10:31 +0000 UTC (1 container statuses recorded)
Mar 13 19:35:37.656: INFO: 	Container konnectivity-agent ready: true, restart count 0
Mar 13 19:35:37.656: INFO: sonobuoy from sonobuoy started at 2023-03-13 18:39:50 +0000 UTC (1 container statuses recorded)
Mar 13 19:35:37.657: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Mar 13 19:35:37.657: INFO: sonobuoy-e2e-job-c23108cbbd714118 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
Mar 13 19:35:37.657: INFO: 	Container e2e ready: true, restart count 0
Mar 13 19:35:37.657: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar 13 19:35:37.657: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-6xtp8 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
Mar 13 19:35:37.657: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar 13 19:35:37.657: INFO: 	Container systemd-logs ready: true, restart count 0
Mar 13 19:35:37.657: INFO: 
Logging pods the apiserver thinks is on node vke-automated-test-f5b1d7d2d722 before test
Mar 13 19:35:37.664: INFO: calico-kube-controllers-57b57c56f-hkwr4 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 19:35:37.664: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Mar 13 19:35:37.664: INFO: calico-node-qgbkz from kube-system started at 2023-03-13 18:38:35 +0000 UTC (1 container statuses recorded)
Mar 13 19:35:37.664: INFO: 	Container calico-node ready: true, restart count 0
Mar 13 19:35:37.664: INFO: cluster-autoscaler-598bdb7954-cwz8l from kube-system started at 2023-03-13 18:38:45 +0000 UTC (1 container statuses recorded)
Mar 13 19:35:37.664: INFO: 	Container cluster-autoscaler ready: true, restart count 0
Mar 13 19:35:37.664: INFO: coredns-85c5d49895-6j25x from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 19:35:37.664: INFO: 	Container coredns ready: true, restart count 0
Mar 13 19:35:37.664: INFO: csi-vultr-controller-0 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (4 container statuses recorded)
Mar 13 19:35:37.664: INFO: 	Container csi-attacher ready: true, restart count 0
Mar 13 19:35:37.664: INFO: 	Container csi-provisioner ready: true, restart count 0
Mar 13 19:35:37.664: INFO: 	Container csi-resizer ready: true, restart count 0
Mar 13 19:35:37.664: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
Mar 13 19:35:37.664: INFO: csi-vultr-node-p88qb from kube-system started at 2023-03-13 18:38:43 +0000 UTC (2 container statuses recorded)
Mar 13 19:35:37.664: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
Mar 13 19:35:37.664: INFO: 	Container driver-registrar ready: true, restart count 0
Mar 13 19:35:37.664: INFO: konnectivity-agent-8xln6 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 19:35:37.664: INFO: 	Container konnectivity-agent ready: true, restart count 0
Mar 13 19:35:37.664: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-9nqbq from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
Mar 13 19:35:37.664: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar 13 19:35:37.664: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331
STEP: verifying the node has the label node vke-automated-test-51df1d4fb06e 03/13/23 19:35:37.676
STEP: verifying the node has the label node vke-automated-test-f5b1d7d2d722 03/13/23 19:35:37.698
Mar 13 19:35:37.711: INFO: Pod calico-kube-controllers-57b57c56f-hkwr4 requesting resource cpu=0m on Node vke-automated-test-f5b1d7d2d722
Mar 13 19:35:37.711: INFO: Pod calico-node-qgbkz requesting resource cpu=250m on Node vke-automated-test-f5b1d7d2d722
Mar 13 19:35:37.712: INFO: Pod calico-node-xs2jj requesting resource cpu=250m on Node vke-automated-test-51df1d4fb06e
Mar 13 19:35:37.712: INFO: Pod cluster-autoscaler-598bdb7954-cwz8l requesting resource cpu=100m on Node vke-automated-test-f5b1d7d2d722
Mar 13 19:35:37.712: INFO: Pod coredns-85c5d49895-6j25x requesting resource cpu=100m on Node vke-automated-test-f5b1d7d2d722
Mar 13 19:35:37.712: INFO: Pod csi-vultr-controller-0 requesting resource cpu=0m on Node vke-automated-test-f5b1d7d2d722
Mar 13 19:35:37.712: INFO: Pod csi-vultr-node-c4r8q requesting resource cpu=0m on Node vke-automated-test-51df1d4fb06e
Mar 13 19:35:37.712: INFO: Pod csi-vultr-node-p88qb requesting resource cpu=0m on Node vke-automated-test-f5b1d7d2d722
Mar 13 19:35:37.712: INFO: Pod konnectivity-agent-8xln6 requesting resource cpu=0m on Node vke-automated-test-f5b1d7d2d722
Mar 13 19:35:37.712: INFO: Pod konnectivity-agent-k6k6r requesting resource cpu=0m on Node vke-automated-test-51df1d4fb06e
Mar 13 19:35:37.713: INFO: Pod sonobuoy requesting resource cpu=0m on Node vke-automated-test-51df1d4fb06e
Mar 13 19:35:37.713: INFO: Pod sonobuoy-e2e-job-c23108cbbd714118 requesting resource cpu=0m on Node vke-automated-test-51df1d4fb06e
Mar 13 19:35:37.713: INFO: Pod sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-6xtp8 requesting resource cpu=0m on Node vke-automated-test-51df1d4fb06e
Mar 13 19:35:37.713: INFO: Pod sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-9nqbq requesting resource cpu=0m on Node vke-automated-test-f5b1d7d2d722
STEP: Starting Pods to consume most of the cluster CPU. 03/13/23 19:35:37.713
Mar 13 19:35:37.714: INFO: Creating a pod which consumes cpu=1085m on Node vke-automated-test-51df1d4fb06e
Mar 13 19:35:37.723: INFO: Creating a pod which consumes cpu=945m on Node vke-automated-test-f5b1d7d2d722
Mar 13 19:35:37.728: INFO: Waiting up to 5m0s for pod "filler-pod-353623ff-8613-4068-b708-0a24e0547c37" in namespace "sched-pred-6269" to be "running"
Mar 13 19:35:37.734: INFO: Pod "filler-pod-353623ff-8613-4068-b708-0a24e0547c37": Phase="Pending", Reason="", readiness=false. Elapsed: 5.834037ms
Mar 13 19:35:39.744: INFO: Pod "filler-pod-353623ff-8613-4068-b708-0a24e0547c37": Phase="Running", Reason="", readiness=true. Elapsed: 2.015867113s
Mar 13 19:35:39.744: INFO: Pod "filler-pod-353623ff-8613-4068-b708-0a24e0547c37" satisfied condition "running"
Mar 13 19:35:39.744: INFO: Waiting up to 5m0s for pod "filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59" in namespace "sched-pred-6269" to be "running"
Mar 13 19:35:39.752: INFO: Pod "filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59": Phase="Running", Reason="", readiness=true. Elapsed: 8.027212ms
Mar 13 19:35:39.752: INFO: Pod "filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59" satisfied condition "running"
STEP: Creating another pod that requires unavailable amount of CPU. 03/13/23 19:35:39.752
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-353623ff-8613-4068-b708-0a24e0547c37.174c119f78fed410], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6269/filler-pod-353623ff-8613-4068-b708-0a24e0547c37 to vke-automated-test-51df1d4fb06e] 03/13/23 19:35:39.759
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-353623ff-8613-4068-b708-0a24e0547c37.174c119fa4703b7e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 03/13/23 19:35:39.759
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-353623ff-8613-4068-b708-0a24e0547c37.174c119fa53ad756], Reason = [Created], Message = [Created container filler-pod-353623ff-8613-4068-b708-0a24e0547c37] 03/13/23 19:35:39.759
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-353623ff-8613-4068-b708-0a24e0547c37.174c119faab8f6d9], Reason = [Started], Message = [Started container filler-pod-353623ff-8613-4068-b708-0a24e0547c37] 03/13/23 19:35:39.76
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59.174c119f79344bfc], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6269/filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59 to vke-automated-test-f5b1d7d2d722] 03/13/23 19:35:39.76
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59.174c119fa46dbca7], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 03/13/23 19:35:39.76
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59.174c119fa518eb32], Reason = [Created], Message = [Created container filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59] 03/13/23 19:35:39.76
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59.174c119facc0143e], Reason = [Started], Message = [Started container filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59] 03/13/23 19:35:39.76
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.174c119ff3afe329], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod..] 03/13/23 19:35:39.801
STEP: removing the label node off the node vke-automated-test-51df1d4fb06e 03/13/23 19:35:40.79
STEP: verifying the node doesn't have the label node 03/13/23 19:35:40.805
STEP: removing the label node off the node vke-automated-test-f5b1d7d2d722 03/13/23 19:35:40.814
STEP: verifying the node doesn't have the label node 03/13/23 19:35:40.823
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:35:40.839: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-6269" for this suite. 03/13/23 19:35:40.843
------------------------------
â€¢ [3.280 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:35:37.569
    Mar 13 19:35:37.569: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename sched-pred 03/13/23 19:35:37.57
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:37.633
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:37.637
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Mar 13 19:35:37.640: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Mar 13 19:35:37.646: INFO: Waiting for terminating namespaces to be deleted...
    Mar 13 19:35:37.649: INFO: 
    Logging pods the apiserver thinks is on node vke-automated-test-51df1d4fb06e before test
    Mar 13 19:35:37.656: INFO: calico-node-xs2jj from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 19:35:37.656: INFO: 	Container calico-node ready: true, restart count 0
    Mar 13 19:35:37.656: INFO: csi-vultr-node-c4r8q from kube-system started at 2023-03-13 19:10:30 +0000 UTC (2 container statuses recorded)
    Mar 13 19:35:37.656: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
    Mar 13 19:35:37.656: INFO: 	Container driver-registrar ready: true, restart count 0
    Mar 13 19:35:37.656: INFO: konnectivity-agent-k6k6r from kube-system started at 2023-03-13 19:10:31 +0000 UTC (1 container statuses recorded)
    Mar 13 19:35:37.656: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Mar 13 19:35:37.656: INFO: sonobuoy from sonobuoy started at 2023-03-13 18:39:50 +0000 UTC (1 container statuses recorded)
    Mar 13 19:35:37.657: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Mar 13 19:35:37.657: INFO: sonobuoy-e2e-job-c23108cbbd714118 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
    Mar 13 19:35:37.657: INFO: 	Container e2e ready: true, restart count 0
    Mar 13 19:35:37.657: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar 13 19:35:37.657: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-6xtp8 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
    Mar 13 19:35:37.657: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar 13 19:35:37.657: INFO: 	Container systemd-logs ready: true, restart count 0
    Mar 13 19:35:37.657: INFO: 
    Logging pods the apiserver thinks is on node vke-automated-test-f5b1d7d2d722 before test
    Mar 13 19:35:37.664: INFO: calico-kube-controllers-57b57c56f-hkwr4 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 19:35:37.664: INFO: 	Container calico-kube-controllers ready: true, restart count 0
    Mar 13 19:35:37.664: INFO: calico-node-qgbkz from kube-system started at 2023-03-13 18:38:35 +0000 UTC (1 container statuses recorded)
    Mar 13 19:35:37.664: INFO: 	Container calico-node ready: true, restart count 0
    Mar 13 19:35:37.664: INFO: cluster-autoscaler-598bdb7954-cwz8l from kube-system started at 2023-03-13 18:38:45 +0000 UTC (1 container statuses recorded)
    Mar 13 19:35:37.664: INFO: 	Container cluster-autoscaler ready: true, restart count 0
    Mar 13 19:35:37.664: INFO: coredns-85c5d49895-6j25x from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 19:35:37.664: INFO: 	Container coredns ready: true, restart count 0
    Mar 13 19:35:37.664: INFO: csi-vultr-controller-0 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (4 container statuses recorded)
    Mar 13 19:35:37.664: INFO: 	Container csi-attacher ready: true, restart count 0
    Mar 13 19:35:37.664: INFO: 	Container csi-provisioner ready: true, restart count 0
    Mar 13 19:35:37.664: INFO: 	Container csi-resizer ready: true, restart count 0
    Mar 13 19:35:37.664: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
    Mar 13 19:35:37.664: INFO: csi-vultr-node-p88qb from kube-system started at 2023-03-13 18:38:43 +0000 UTC (2 container statuses recorded)
    Mar 13 19:35:37.664: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
    Mar 13 19:35:37.664: INFO: 	Container driver-registrar ready: true, restart count 0
    Mar 13 19:35:37.664: INFO: konnectivity-agent-8xln6 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 19:35:37.664: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Mar 13 19:35:37.664: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-9nqbq from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
    Mar 13 19:35:37.664: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar 13 19:35:37.664: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates resource limits of pods that are allowed to run  [Conformance]
      test/e2e/scheduling/predicates.go:331
    STEP: verifying the node has the label node vke-automated-test-51df1d4fb06e 03/13/23 19:35:37.676
    STEP: verifying the node has the label node vke-automated-test-f5b1d7d2d722 03/13/23 19:35:37.698
    Mar 13 19:35:37.711: INFO: Pod calico-kube-controllers-57b57c56f-hkwr4 requesting resource cpu=0m on Node vke-automated-test-f5b1d7d2d722
    Mar 13 19:35:37.711: INFO: Pod calico-node-qgbkz requesting resource cpu=250m on Node vke-automated-test-f5b1d7d2d722
    Mar 13 19:35:37.712: INFO: Pod calico-node-xs2jj requesting resource cpu=250m on Node vke-automated-test-51df1d4fb06e
    Mar 13 19:35:37.712: INFO: Pod cluster-autoscaler-598bdb7954-cwz8l requesting resource cpu=100m on Node vke-automated-test-f5b1d7d2d722
    Mar 13 19:35:37.712: INFO: Pod coredns-85c5d49895-6j25x requesting resource cpu=100m on Node vke-automated-test-f5b1d7d2d722
    Mar 13 19:35:37.712: INFO: Pod csi-vultr-controller-0 requesting resource cpu=0m on Node vke-automated-test-f5b1d7d2d722
    Mar 13 19:35:37.712: INFO: Pod csi-vultr-node-c4r8q requesting resource cpu=0m on Node vke-automated-test-51df1d4fb06e
    Mar 13 19:35:37.712: INFO: Pod csi-vultr-node-p88qb requesting resource cpu=0m on Node vke-automated-test-f5b1d7d2d722
    Mar 13 19:35:37.712: INFO: Pod konnectivity-agent-8xln6 requesting resource cpu=0m on Node vke-automated-test-f5b1d7d2d722
    Mar 13 19:35:37.712: INFO: Pod konnectivity-agent-k6k6r requesting resource cpu=0m on Node vke-automated-test-51df1d4fb06e
    Mar 13 19:35:37.713: INFO: Pod sonobuoy requesting resource cpu=0m on Node vke-automated-test-51df1d4fb06e
    Mar 13 19:35:37.713: INFO: Pod sonobuoy-e2e-job-c23108cbbd714118 requesting resource cpu=0m on Node vke-automated-test-51df1d4fb06e
    Mar 13 19:35:37.713: INFO: Pod sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-6xtp8 requesting resource cpu=0m on Node vke-automated-test-51df1d4fb06e
    Mar 13 19:35:37.713: INFO: Pod sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-9nqbq requesting resource cpu=0m on Node vke-automated-test-f5b1d7d2d722
    STEP: Starting Pods to consume most of the cluster CPU. 03/13/23 19:35:37.713
    Mar 13 19:35:37.714: INFO: Creating a pod which consumes cpu=1085m on Node vke-automated-test-51df1d4fb06e
    Mar 13 19:35:37.723: INFO: Creating a pod which consumes cpu=945m on Node vke-automated-test-f5b1d7d2d722
    Mar 13 19:35:37.728: INFO: Waiting up to 5m0s for pod "filler-pod-353623ff-8613-4068-b708-0a24e0547c37" in namespace "sched-pred-6269" to be "running"
    Mar 13 19:35:37.734: INFO: Pod "filler-pod-353623ff-8613-4068-b708-0a24e0547c37": Phase="Pending", Reason="", readiness=false. Elapsed: 5.834037ms
    Mar 13 19:35:39.744: INFO: Pod "filler-pod-353623ff-8613-4068-b708-0a24e0547c37": Phase="Running", Reason="", readiness=true. Elapsed: 2.015867113s
    Mar 13 19:35:39.744: INFO: Pod "filler-pod-353623ff-8613-4068-b708-0a24e0547c37" satisfied condition "running"
    Mar 13 19:35:39.744: INFO: Waiting up to 5m0s for pod "filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59" in namespace "sched-pred-6269" to be "running"
    Mar 13 19:35:39.752: INFO: Pod "filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59": Phase="Running", Reason="", readiness=true. Elapsed: 8.027212ms
    Mar 13 19:35:39.752: INFO: Pod "filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59" satisfied condition "running"
    STEP: Creating another pod that requires unavailable amount of CPU. 03/13/23 19:35:39.752
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-353623ff-8613-4068-b708-0a24e0547c37.174c119f78fed410], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6269/filler-pod-353623ff-8613-4068-b708-0a24e0547c37 to vke-automated-test-51df1d4fb06e] 03/13/23 19:35:39.759
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-353623ff-8613-4068-b708-0a24e0547c37.174c119fa4703b7e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 03/13/23 19:35:39.759
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-353623ff-8613-4068-b708-0a24e0547c37.174c119fa53ad756], Reason = [Created], Message = [Created container filler-pod-353623ff-8613-4068-b708-0a24e0547c37] 03/13/23 19:35:39.759
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-353623ff-8613-4068-b708-0a24e0547c37.174c119faab8f6d9], Reason = [Started], Message = [Started container filler-pod-353623ff-8613-4068-b708-0a24e0547c37] 03/13/23 19:35:39.76
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59.174c119f79344bfc], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6269/filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59 to vke-automated-test-f5b1d7d2d722] 03/13/23 19:35:39.76
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59.174c119fa46dbca7], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 03/13/23 19:35:39.76
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59.174c119fa518eb32], Reason = [Created], Message = [Created container filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59] 03/13/23 19:35:39.76
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59.174c119facc0143e], Reason = [Started], Message = [Started container filler-pod-7d89eec7-7a30-4747-8a6a-3e2914658b59] 03/13/23 19:35:39.76
    STEP: Considering event: 
    Type = [Warning], Name = [additional-pod.174c119ff3afe329], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod..] 03/13/23 19:35:39.801
    STEP: removing the label node off the node vke-automated-test-51df1d4fb06e 03/13/23 19:35:40.79
    STEP: verifying the node doesn't have the label node 03/13/23 19:35:40.805
    STEP: removing the label node off the node vke-automated-test-f5b1d7d2d722 03/13/23 19:35:40.814
    STEP: verifying the node doesn't have the label node 03/13/23 19:35:40.823
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:35:40.839: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-6269" for this suite. 03/13/23 19:35:40.843
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] DisruptionController
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:35:40.849
Mar 13 19:35:40.850: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename disruption 03/13/23 19:35:40.858
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:40.879
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:40.882
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347
STEP: Creating a pdb that targets all three pods in a test replica set 03/13/23 19:35:40.886
STEP: Waiting for the pdb to be processed 03/13/23 19:35:40.89
STEP: First trying to evict a pod which shouldn't be evictable 03/13/23 19:35:42.903
STEP: Waiting for all pods to be running 03/13/23 19:35:42.903
Mar 13 19:35:42.908: INFO: pods: 0 < 3
STEP: locating a running pod 03/13/23 19:35:44.912
STEP: Updating the pdb to allow a pod to be evicted 03/13/23 19:35:44.923
STEP: Waiting for the pdb to be processed 03/13/23 19:35:44.931
STEP: Trying to evict the same pod we tried earlier which should now be evictable 03/13/23 19:35:46.939
STEP: Waiting for all pods to be running 03/13/23 19:35:46.939
STEP: Waiting for the pdb to observed all healthy pods 03/13/23 19:35:46.942
STEP: Patching the pdb to disallow a pod to be evicted 03/13/23 19:35:46.969
STEP: Waiting for the pdb to be processed 03/13/23 19:35:47.024
STEP: Waiting for all pods to be running 03/13/23 19:35:47.032
Mar 13 19:35:47.067: INFO: running pods: 2 < 3
STEP: locating a running pod 03/13/23 19:35:49.072
STEP: Deleting the pdb to allow a pod to be evicted 03/13/23 19:35:49.081
STEP: Waiting for the pdb to be deleted 03/13/23 19:35:49.086
STEP: Trying to evict the same pod we tried earlier which should now be evictable 03/13/23 19:35:49.089
STEP: Waiting for all pods to be running 03/13/23 19:35:49.089
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Mar 13 19:35:49.103: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-4463" for this suite. 03/13/23 19:35:49.128
------------------------------
â€¢ [SLOW TEST] [8.312 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:35:40.849
    Mar 13 19:35:40.850: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename disruption 03/13/23 19:35:40.858
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:40.879
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:40.882
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should block an eviction until the PDB is updated to allow it [Conformance]
      test/e2e/apps/disruption.go:347
    STEP: Creating a pdb that targets all three pods in a test replica set 03/13/23 19:35:40.886
    STEP: Waiting for the pdb to be processed 03/13/23 19:35:40.89
    STEP: First trying to evict a pod which shouldn't be evictable 03/13/23 19:35:42.903
    STEP: Waiting for all pods to be running 03/13/23 19:35:42.903
    Mar 13 19:35:42.908: INFO: pods: 0 < 3
    STEP: locating a running pod 03/13/23 19:35:44.912
    STEP: Updating the pdb to allow a pod to be evicted 03/13/23 19:35:44.923
    STEP: Waiting for the pdb to be processed 03/13/23 19:35:44.931
    STEP: Trying to evict the same pod we tried earlier which should now be evictable 03/13/23 19:35:46.939
    STEP: Waiting for all pods to be running 03/13/23 19:35:46.939
    STEP: Waiting for the pdb to observed all healthy pods 03/13/23 19:35:46.942
    STEP: Patching the pdb to disallow a pod to be evicted 03/13/23 19:35:46.969
    STEP: Waiting for the pdb to be processed 03/13/23 19:35:47.024
    STEP: Waiting for all pods to be running 03/13/23 19:35:47.032
    Mar 13 19:35:47.067: INFO: running pods: 2 < 3
    STEP: locating a running pod 03/13/23 19:35:49.072
    STEP: Deleting the pdb to allow a pod to be evicted 03/13/23 19:35:49.081
    STEP: Waiting for the pdb to be deleted 03/13/23 19:35:49.086
    STEP: Trying to evict the same pod we tried earlier which should now be evictable 03/13/23 19:35:49.089
    STEP: Waiting for all pods to be running 03/13/23 19:35:49.089
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:35:49.103: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-4463" for this suite. 03/13/23 19:35:49.128
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:35:49.172
Mar 13 19:35:49.172: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 19:35:49.178
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:49.224
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:49.233
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197
STEP: Creating a pod to test emptydir 0644 on node default medium 03/13/23 19:35:49.238
Mar 13 19:35:49.244: INFO: Waiting up to 5m0s for pod "pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11" in namespace "emptydir-3160" to be "Succeeded or Failed"
Mar 13 19:35:49.247: INFO: Pod "pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11": Phase="Pending", Reason="", readiness=false. Elapsed: 2.837999ms
Mar 13 19:35:51.252: INFO: Pod "pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008145027s
Mar 13 19:35:53.251: INFO: Pod "pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007111179s
STEP: Saw pod success 03/13/23 19:35:53.251
Mar 13 19:35:53.251: INFO: Pod "pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11" satisfied condition "Succeeded or Failed"
Mar 13 19:35:53.255: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11 container test-container: <nil>
STEP: delete the pod 03/13/23 19:35:53.266
Mar 13 19:35:53.274: INFO: Waiting for pod pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11 to disappear
Mar 13 19:35:53.277: INFO: Pod pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 19:35:53.277: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-3160" for this suite. 03/13/23 19:35:53.281
------------------------------
â€¢ [4.114 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:35:49.172
    Mar 13 19:35:49.172: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 19:35:49.178
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:49.224
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:49.233
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:197
    STEP: Creating a pod to test emptydir 0644 on node default medium 03/13/23 19:35:49.238
    Mar 13 19:35:49.244: INFO: Waiting up to 5m0s for pod "pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11" in namespace "emptydir-3160" to be "Succeeded or Failed"
    Mar 13 19:35:49.247: INFO: Pod "pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11": Phase="Pending", Reason="", readiness=false. Elapsed: 2.837999ms
    Mar 13 19:35:51.252: INFO: Pod "pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008145027s
    Mar 13 19:35:53.251: INFO: Pod "pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007111179s
    STEP: Saw pod success 03/13/23 19:35:53.251
    Mar 13 19:35:53.251: INFO: Pod "pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11" satisfied condition "Succeeded or Failed"
    Mar 13 19:35:53.255: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11 container test-container: <nil>
    STEP: delete the pod 03/13/23 19:35:53.266
    Mar 13 19:35:53.274: INFO: Waiting for pod pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11 to disappear
    Mar 13 19:35:53.277: INFO: Pod pod-d43b8a80-1ac6-4dc6-a9e8-70581a2b3b11 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:35:53.277: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-3160" for this suite. 03/13/23 19:35:53.281
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:35:53.286
Mar 13 19:35:53.286: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename gc 03/13/23 19:35:53.288
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:53.299
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:53.304
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650
STEP: create the rc 03/13/23 19:35:53.309
STEP: delete the rc 03/13/23 19:35:58.322
STEP: wait for the rc to be deleted 03/13/23 19:35:58.331
Mar 13 19:35:59.457: INFO: 80 pods remaining
Mar 13 19:35:59.457: INFO: 80 pods has nil DeletionTimestamp
Mar 13 19:35:59.457: INFO: 
Mar 13 19:36:00.347: INFO: 71 pods remaining
Mar 13 19:36:00.347: INFO: 71 pods has nil DeletionTimestamp
Mar 13 19:36:00.347: INFO: 
Mar 13 19:36:01.362: INFO: 59 pods remaining
Mar 13 19:36:01.362: INFO: 59 pods has nil DeletionTimestamp
Mar 13 19:36:01.362: INFO: 
Mar 13 19:36:02.412: INFO: 40 pods remaining
Mar 13 19:36:02.412: INFO: 40 pods has nil DeletionTimestamp
Mar 13 19:36:02.412: INFO: 
Mar 13 19:36:03.402: INFO: 32 pods remaining
Mar 13 19:36:03.402: INFO: 31 pods has nil DeletionTimestamp
Mar 13 19:36:03.402: INFO: 
Mar 13 19:36:04.345: INFO: 19 pods remaining
Mar 13 19:36:04.345: INFO: 19 pods has nil DeletionTimestamp
Mar 13 19:36:04.345: INFO: 
STEP: Gathering metrics 03/13/23 19:36:05.366
W0313 19:36:05.385208      21 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Mar 13 19:36:05.385: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar 13 19:36:05.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-5202" for this suite. 03/13/23 19:36:05.44
------------------------------
â€¢ [SLOW TEST] [12.186 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:35:53.286
    Mar 13 19:35:53.286: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename gc 03/13/23 19:35:53.288
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:35:53.299
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:35:53.304
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
      test/e2e/apimachinery/garbage_collector.go:650
    STEP: create the rc 03/13/23 19:35:53.309
    STEP: delete the rc 03/13/23 19:35:58.322
    STEP: wait for the rc to be deleted 03/13/23 19:35:58.331
    Mar 13 19:35:59.457: INFO: 80 pods remaining
    Mar 13 19:35:59.457: INFO: 80 pods has nil DeletionTimestamp
    Mar 13 19:35:59.457: INFO: 
    Mar 13 19:36:00.347: INFO: 71 pods remaining
    Mar 13 19:36:00.347: INFO: 71 pods has nil DeletionTimestamp
    Mar 13 19:36:00.347: INFO: 
    Mar 13 19:36:01.362: INFO: 59 pods remaining
    Mar 13 19:36:01.362: INFO: 59 pods has nil DeletionTimestamp
    Mar 13 19:36:01.362: INFO: 
    Mar 13 19:36:02.412: INFO: 40 pods remaining
    Mar 13 19:36:02.412: INFO: 40 pods has nil DeletionTimestamp
    Mar 13 19:36:02.412: INFO: 
    Mar 13 19:36:03.402: INFO: 32 pods remaining
    Mar 13 19:36:03.402: INFO: 31 pods has nil DeletionTimestamp
    Mar 13 19:36:03.402: INFO: 
    Mar 13 19:36:04.345: INFO: 19 pods remaining
    Mar 13 19:36:04.345: INFO: 19 pods has nil DeletionTimestamp
    Mar 13 19:36:04.345: INFO: 
    STEP: Gathering metrics 03/13/23 19:36:05.366
    W0313 19:36:05.385208      21 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Mar 13 19:36:05.385: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:36:05.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-5202" for this suite. 03/13/23 19:36:05.44
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Should recreate evicted statefulset [Conformance]
  test/e2e/apps/statefulset.go:739
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:36:05.473
Mar 13 19:36:05.473: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename statefulset 03/13/23 19:36:05.475
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:36:05.56
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:36:05.589
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-2250 03/13/23 19:36:05.608
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/apps/statefulset.go:739
STEP: Looking for a node to schedule stateful set and pod 03/13/23 19:36:05.614
STEP: Creating pod with conflicting port in namespace statefulset-2250 03/13/23 19:36:05.662
STEP: Waiting until pod test-pod will start running in namespace statefulset-2250 03/13/23 19:36:05.685
Mar 13 19:36:05.685: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "statefulset-2250" to be "running"
Mar 13 19:36:05.700: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 15.277297ms
Mar 13 19:36:07.726: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.041237246s
Mar 13 19:36:09.717: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.031682374s
Mar 13 19:36:11.709: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.024007069s
Mar 13 19:36:13.708: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 8.023345916s
Mar 13 19:36:15.704: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 10.01943189s
Mar 13 19:36:17.705: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 12.020417155s
Mar 13 19:36:19.704: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 14.019049731s
Mar 13 19:36:21.704: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 16.019226334s
Mar 13 19:36:21.704: INFO: Pod "test-pod" satisfied condition "running"
STEP: Creating statefulset with conflicting port in namespace statefulset-2250 03/13/23 19:36:21.704
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-2250 03/13/23 19:36:21.71
Mar 13 19:36:21.730: INFO: Observed stateful pod in namespace: statefulset-2250, name: ss-0, uid: 3ab358b7-316d-4726-950a-d7245333b910, status phase: Pending. Waiting for statefulset controller to delete.
Mar 13 19:36:21.737: INFO: Observed stateful pod in namespace: statefulset-2250, name: ss-0, uid: 3ab358b7-316d-4726-950a-d7245333b910, status phase: Failed. Waiting for statefulset controller to delete.
Mar 13 19:36:21.741: INFO: Observed stateful pod in namespace: statefulset-2250, name: ss-0, uid: 3ab358b7-316d-4726-950a-d7245333b910, status phase: Failed. Waiting for statefulset controller to delete.
Mar 13 19:36:21.743: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-2250
STEP: Removing pod with conflicting port in namespace statefulset-2250 03/13/23 19:36:21.743
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-2250 and will be in running state 03/13/23 19:36:21.762
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar 13 19:36:23.770: INFO: Deleting all statefulset in ns statefulset-2250
Mar 13 19:36:23.774: INFO: Scaling statefulset ss to 0
Mar 13 19:36:33.794: INFO: Waiting for statefulset status.replicas updated to 0
Mar 13 19:36:33.797: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:36:33.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-2250" for this suite. 03/13/23 19:36:33.813
------------------------------
â€¢ [SLOW TEST] [28.345 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Should recreate evicted statefulset [Conformance]
    test/e2e/apps/statefulset.go:739

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:36:05.473
    Mar 13 19:36:05.473: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename statefulset 03/13/23 19:36:05.475
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:36:05.56
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:36:05.589
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-2250 03/13/23 19:36:05.608
    [It] Should recreate evicted statefulset [Conformance]
      test/e2e/apps/statefulset.go:739
    STEP: Looking for a node to schedule stateful set and pod 03/13/23 19:36:05.614
    STEP: Creating pod with conflicting port in namespace statefulset-2250 03/13/23 19:36:05.662
    STEP: Waiting until pod test-pod will start running in namespace statefulset-2250 03/13/23 19:36:05.685
    Mar 13 19:36:05.685: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "statefulset-2250" to be "running"
    Mar 13 19:36:05.700: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 15.277297ms
    Mar 13 19:36:07.726: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.041237246s
    Mar 13 19:36:09.717: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.031682374s
    Mar 13 19:36:11.709: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.024007069s
    Mar 13 19:36:13.708: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 8.023345916s
    Mar 13 19:36:15.704: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 10.01943189s
    Mar 13 19:36:17.705: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 12.020417155s
    Mar 13 19:36:19.704: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 14.019049731s
    Mar 13 19:36:21.704: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 16.019226334s
    Mar 13 19:36:21.704: INFO: Pod "test-pod" satisfied condition "running"
    STEP: Creating statefulset with conflicting port in namespace statefulset-2250 03/13/23 19:36:21.704
    STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-2250 03/13/23 19:36:21.71
    Mar 13 19:36:21.730: INFO: Observed stateful pod in namespace: statefulset-2250, name: ss-0, uid: 3ab358b7-316d-4726-950a-d7245333b910, status phase: Pending. Waiting for statefulset controller to delete.
    Mar 13 19:36:21.737: INFO: Observed stateful pod in namespace: statefulset-2250, name: ss-0, uid: 3ab358b7-316d-4726-950a-d7245333b910, status phase: Failed. Waiting for statefulset controller to delete.
    Mar 13 19:36:21.741: INFO: Observed stateful pod in namespace: statefulset-2250, name: ss-0, uid: 3ab358b7-316d-4726-950a-d7245333b910, status phase: Failed. Waiting for statefulset controller to delete.
    Mar 13 19:36:21.743: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-2250
    STEP: Removing pod with conflicting port in namespace statefulset-2250 03/13/23 19:36:21.743
    STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-2250 and will be in running state 03/13/23 19:36:21.762
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar 13 19:36:23.770: INFO: Deleting all statefulset in ns statefulset-2250
    Mar 13 19:36:23.774: INFO: Scaling statefulset ss to 0
    Mar 13 19:36:33.794: INFO: Waiting for statefulset status.replicas updated to 0
    Mar 13 19:36:33.797: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:36:33.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-2250" for this suite. 03/13/23 19:36:33.813
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:36:33.823
Mar 13 19:36:33.824: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename namespaces 03/13/23 19:36:33.825
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:36:33.834
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:36:33.836
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299
STEP: Read namespace status 03/13/23 19:36:33.839
Mar 13 19:36:33.842: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
STEP: Patch namespace status 03/13/23 19:36:33.842
Mar 13 19:36:33.846: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
STEP: Update namespace status 03/13/23 19:36:33.846
Mar 13 19:36:33.852: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:36:33.853: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-3808" for this suite. 03/13/23 19:36:33.856
------------------------------
â€¢ [0.037 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:36:33.823
    Mar 13 19:36:33.824: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename namespaces 03/13/23 19:36:33.825
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:36:33.834
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:36:33.836
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a namespace status [Conformance]
      test/e2e/apimachinery/namespace.go:299
    STEP: Read namespace status 03/13/23 19:36:33.839
    Mar 13 19:36:33.842: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
    STEP: Patch namespace status 03/13/23 19:36:33.842
    Mar 13 19:36:33.846: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
    STEP: Update namespace status 03/13/23 19:36:33.846
    Mar 13 19:36:33.852: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:36:33.853: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-3808" for this suite. 03/13/23 19:36:33.856
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53
[BeforeEach] [sig-network] EndpointSliceMirroring
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:36:33.866
Mar 13 19:36:33.866: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename endpointslicemirroring 03/13/23 19:36:33.868
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:36:33.877
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:36:33.879
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53
STEP: mirroring a new custom Endpoint 03/13/23 19:36:33.893
Mar 13 19:36:33.899: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint 03/13/23 19:36:35.903
Mar 13 19:36:35.909: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint 03/13/23 19:36:37.913
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/node/init/init.go:32
Mar 13 19:36:37.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslicemirroring-8299" for this suite. 03/13/23 19:36:37.925
------------------------------
â€¢ [4.063 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSliceMirroring
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:36:33.866
    Mar 13 19:36:33.866: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename endpointslicemirroring 03/13/23 19:36:33.868
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:36:33.877
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:36:33.879
    [BeforeEach] [sig-network] EndpointSliceMirroring
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSliceMirroring
      test/e2e/network/endpointslicemirroring.go:41
    [It] should mirror a custom Endpoints resource through create update and delete [Conformance]
      test/e2e/network/endpointslicemirroring.go:53
    STEP: mirroring a new custom Endpoint 03/13/23 19:36:33.893
    Mar 13 19:36:33.899: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
    STEP: mirroring an update to a custom Endpoint 03/13/23 19:36:35.903
    Mar 13 19:36:35.909: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
    STEP: mirroring deletion of a custom Endpoint 03/13/23 19:36:37.913
    [AfterEach] [sig-network] EndpointSliceMirroring
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:36:37.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslicemirroring-8299" for this suite. 03/13/23 19:36:37.925
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:36:37.934
Mar 13 19:36:37.934: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename svcaccounts 03/13/23 19:36:37.935
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:36:37.952
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:36:37.964
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649
STEP: creating a ServiceAccount 03/13/23 19:36:37.969
STEP: watching for the ServiceAccount to be added 03/13/23 19:36:37.976
STEP: patching the ServiceAccount 03/13/23 19:36:37.978
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) 03/13/23 19:36:37.985
STEP: deleting the ServiceAccount 03/13/23 19:36:37.989
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar 13 19:36:37.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-9277" for this suite. 03/13/23 19:36:38.001
------------------------------
â€¢ [0.071 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:36:37.934
    Mar 13 19:36:37.934: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename svcaccounts 03/13/23 19:36:37.935
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:36:37.952
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:36:37.964
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should run through the lifecycle of a ServiceAccount [Conformance]
      test/e2e/auth/service_accounts.go:649
    STEP: creating a ServiceAccount 03/13/23 19:36:37.969
    STEP: watching for the ServiceAccount to be added 03/13/23 19:36:37.976
    STEP: patching the ServiceAccount 03/13/23 19:36:37.978
    STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) 03/13/23 19:36:37.985
    STEP: deleting the ServiceAccount 03/13/23 19:36:37.989
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:36:37.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-9277" for this suite. 03/13/23 19:36:38.001
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:36:38.006
Mar 13 19:36:38.006: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename svcaccounts 03/13/23 19:36:38.007
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:36:38.018
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:36:38.02
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531
Mar 13 19:36:38.036: INFO: created pod
Mar 13 19:36:38.036: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-4262" to be "Succeeded or Failed"
Mar 13 19:36:38.039: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.557758ms
Mar 13 19:36:40.043: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00637355s
Mar 13 19:36:42.042: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006111723s
STEP: Saw pod success 03/13/23 19:36:42.042
Mar 13 19:36:42.043: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Mar 13 19:37:12.043: INFO: polling logs
Mar 13 19:37:12.073: INFO: Pod logs: 
I0313 19:36:38.876526       1 log.go:198] OK: Got token
I0313 19:36:38.876586       1 log.go:198] validating with in-cluster discovery
I0313 19:36:38.877134       1 log.go:198] OK: got issuer https://kubernetes.default.svc
I0313 19:36:38.877176       1 log.go:198] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4262:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1678736798, NotBefore:1678736198, IssuedAt:1678736198, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4262", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"79213a2b-7995-4c26-9e8e-d8786ee6bd06"}}}
I0313 19:36:38.887758       1 log.go:198] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
I0313 19:36:38.895829       1 log.go:198] OK: Validated signature on JWT
I0313 19:36:38.895980       1 log.go:198] OK: Got valid claims from token!
I0313 19:36:38.896123       1 log.go:198] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4262:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1678736798, NotBefore:1678736198, IssuedAt:1678736198, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4262", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"79213a2b-7995-4c26-9e8e-d8786ee6bd06"}}}

Mar 13 19:37:12.073: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar 13 19:37:12.093: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-4262" for this suite. 03/13/23 19:37:12.114
------------------------------
â€¢ [SLOW TEST] [34.120 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:36:38.006
    Mar 13 19:36:38.006: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename svcaccounts 03/13/23 19:36:38.007
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:36:38.018
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:36:38.02
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
      test/e2e/auth/service_accounts.go:531
    Mar 13 19:36:38.036: INFO: created pod
    Mar 13 19:36:38.036: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-4262" to be "Succeeded or Failed"
    Mar 13 19:36:38.039: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.557758ms
    Mar 13 19:36:40.043: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00637355s
    Mar 13 19:36:42.042: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006111723s
    STEP: Saw pod success 03/13/23 19:36:42.042
    Mar 13 19:36:42.043: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
    Mar 13 19:37:12.043: INFO: polling logs
    Mar 13 19:37:12.073: INFO: Pod logs: 
    I0313 19:36:38.876526       1 log.go:198] OK: Got token
    I0313 19:36:38.876586       1 log.go:198] validating with in-cluster discovery
    I0313 19:36:38.877134       1 log.go:198] OK: got issuer https://kubernetes.default.svc
    I0313 19:36:38.877176       1 log.go:198] Full, not-validated claims: 
    openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4262:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1678736798, NotBefore:1678736198, IssuedAt:1678736198, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4262", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"79213a2b-7995-4c26-9e8e-d8786ee6bd06"}}}
    I0313 19:36:38.887758       1 log.go:198] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
    I0313 19:36:38.895829       1 log.go:198] OK: Validated signature on JWT
    I0313 19:36:38.895980       1 log.go:198] OK: Got valid claims from token!
    I0313 19:36:38.896123       1 log.go:198] Full, validated claims: 
    &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4262:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1678736798, NotBefore:1678736198, IssuedAt:1678736198, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4262", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"79213a2b-7995-4c26-9e8e-d8786ee6bd06"}}}

    Mar 13 19:37:12.073: INFO: completed pod
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:37:12.093: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-4262" for this suite. 03/13/23 19:37:12.114
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:37:12.13
Mar 13 19:37:12.131: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 19:37:12.133
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:37:12.204
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:37:12.232
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477
STEP: creating a service externalname-service with the type=ExternalName in namespace services-318 03/13/23 19:37:12.247
STEP: changing the ExternalName service to type=NodePort 03/13/23 19:37:12.28
STEP: creating replication controller externalname-service in namespace services-318 03/13/23 19:37:12.343
I0313 19:37:12.351847      21 runners.go:193] Created replication controller with name: externalname-service, namespace: services-318, replica count: 2
I0313 19:37:15.403138      21 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar 13 19:37:15.403: INFO: Creating new exec pod
Mar 13 19:37:15.408: INFO: Waiting up to 5m0s for pod "execpodqhk4k" in namespace "services-318" to be "running"
Mar 13 19:37:15.412: INFO: Pod "execpodqhk4k": Phase="Pending", Reason="", readiness=false. Elapsed: 3.905252ms
Mar 13 19:37:17.418: INFO: Pod "execpodqhk4k": Phase="Running", Reason="", readiness=true. Elapsed: 2.00959484s
Mar 13 19:37:17.418: INFO: Pod "execpodqhk4k" satisfied condition "running"
Mar 13 19:37:18.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-318 exec execpodqhk4k -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
Mar 13 19:37:18.599: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Mar 13 19:37:18.599: INFO: stdout: ""
Mar 13 19:37:18.599: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-318 exec execpodqhk4k -- /bin/sh -x -c nc -v -z -w 2 10.103.221.223 80'
Mar 13 19:37:18.775: INFO: stderr: "+ nc -v -z -w 2 10.103.221.223 80\nConnection to 10.103.221.223 80 port [tcp/http] succeeded!\n"
Mar 13 19:37:18.775: INFO: stdout: ""
Mar 13 19:37:18.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-318 exec execpodqhk4k -- /bin/sh -x -c nc -v -z -w 2 10.1.96.5 32524'
Mar 13 19:37:18.932: INFO: stderr: "+ nc -v -z -w 2 10.1.96.5 32524\nConnection to 10.1.96.5 32524 port [tcp/*] succeeded!\n"
Mar 13 19:37:18.932: INFO: stdout: ""
Mar 13 19:37:18.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-318 exec execpodqhk4k -- /bin/sh -x -c nc -v -z -w 2 10.1.96.4 32524'
Mar 13 19:37:19.094: INFO: stderr: "+ nc -v -z -w 2 10.1.96.4 32524\nConnection to 10.1.96.4 32524 port [tcp/*] succeeded!\n"
Mar 13 19:37:19.094: INFO: stdout: ""
Mar 13 19:37:19.094: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 19:37:19.116: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-318" for this suite. 03/13/23 19:37:19.119
------------------------------
â€¢ [SLOW TEST] [6.993 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:37:12.13
    Mar 13 19:37:12.131: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 19:37:12.133
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:37:12.204
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:37:12.232
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ExternalName to NodePort [Conformance]
      test/e2e/network/service.go:1477
    STEP: creating a service externalname-service with the type=ExternalName in namespace services-318 03/13/23 19:37:12.247
    STEP: changing the ExternalName service to type=NodePort 03/13/23 19:37:12.28
    STEP: creating replication controller externalname-service in namespace services-318 03/13/23 19:37:12.343
    I0313 19:37:12.351847      21 runners.go:193] Created replication controller with name: externalname-service, namespace: services-318, replica count: 2
    I0313 19:37:15.403138      21 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar 13 19:37:15.403: INFO: Creating new exec pod
    Mar 13 19:37:15.408: INFO: Waiting up to 5m0s for pod "execpodqhk4k" in namespace "services-318" to be "running"
    Mar 13 19:37:15.412: INFO: Pod "execpodqhk4k": Phase="Pending", Reason="", readiness=false. Elapsed: 3.905252ms
    Mar 13 19:37:17.418: INFO: Pod "execpodqhk4k": Phase="Running", Reason="", readiness=true. Elapsed: 2.00959484s
    Mar 13 19:37:17.418: INFO: Pod "execpodqhk4k" satisfied condition "running"
    Mar 13 19:37:18.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-318 exec execpodqhk4k -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
    Mar 13 19:37:18.599: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
    Mar 13 19:37:18.599: INFO: stdout: ""
    Mar 13 19:37:18.599: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-318 exec execpodqhk4k -- /bin/sh -x -c nc -v -z -w 2 10.103.221.223 80'
    Mar 13 19:37:18.775: INFO: stderr: "+ nc -v -z -w 2 10.103.221.223 80\nConnection to 10.103.221.223 80 port [tcp/http] succeeded!\n"
    Mar 13 19:37:18.775: INFO: stdout: ""
    Mar 13 19:37:18.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-318 exec execpodqhk4k -- /bin/sh -x -c nc -v -z -w 2 10.1.96.5 32524'
    Mar 13 19:37:18.932: INFO: stderr: "+ nc -v -z -w 2 10.1.96.5 32524\nConnection to 10.1.96.5 32524 port [tcp/*] succeeded!\n"
    Mar 13 19:37:18.932: INFO: stdout: ""
    Mar 13 19:37:18.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-318 exec execpodqhk4k -- /bin/sh -x -c nc -v -z -w 2 10.1.96.4 32524'
    Mar 13 19:37:19.094: INFO: stderr: "+ nc -v -z -w 2 10.1.96.4 32524\nConnection to 10.1.96.4 32524 port [tcp/*] succeeded!\n"
    Mar 13 19:37:19.094: INFO: stdout: ""
    Mar 13 19:37:19.094: INFO: Cleaning up the ExternalName to NodePort test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:37:19.116: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-318" for this suite. 03/13/23 19:37:19.119
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:37:19.131
Mar 13 19:37:19.131: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 19:37:19.136
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:37:19.148
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:37:19.151
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 19:37:19.167
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:37:19.978
STEP: Deploying the webhook pod 03/13/23 19:37:19.986
STEP: Wait for the deployment to be ready 03/13/23 19:37:19.996
Mar 13 19:37:20.003: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/13/23 19:37:22.015
STEP: Verifying the service has paired with the endpoint 03/13/23 19:37:22.029
Mar 13 19:37:23.031: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413
STEP: Creating a validating webhook configuration 03/13/23 19:37:23.035
STEP: Creating a configMap that does not comply to the validation webhook rules 03/13/23 19:37:23.058
STEP: Updating a validating webhook configuration's rules to not include the create operation 03/13/23 19:37:23.074
STEP: Creating a configMap that does not comply to the validation webhook rules 03/13/23 19:37:23.085
STEP: Patching a validating webhook configuration's rules to include the create operation 03/13/23 19:37:23.092
STEP: Creating a configMap that does not comply to the validation webhook rules 03/13/23 19:37:23.099
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:37:23.112: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-5610" for this suite. 03/13/23 19:37:23.14
STEP: Destroying namespace "webhook-5610-markers" for this suite. 03/13/23 19:37:23.152
------------------------------
â€¢ [4.030 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:37:19.131
    Mar 13 19:37:19.131: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 19:37:19.136
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:37:19.148
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:37:19.151
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 19:37:19.167
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:37:19.978
    STEP: Deploying the webhook pod 03/13/23 19:37:19.986
    STEP: Wait for the deployment to be ready 03/13/23 19:37:19.996
    Mar 13 19:37:20.003: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/13/23 19:37:22.015
    STEP: Verifying the service has paired with the endpoint 03/13/23 19:37:22.029
    Mar 13 19:37:23.031: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] patching/updating a validating webhook should work [Conformance]
      test/e2e/apimachinery/webhook.go:413
    STEP: Creating a validating webhook configuration 03/13/23 19:37:23.035
    STEP: Creating a configMap that does not comply to the validation webhook rules 03/13/23 19:37:23.058
    STEP: Updating a validating webhook configuration's rules to not include the create operation 03/13/23 19:37:23.074
    STEP: Creating a configMap that does not comply to the validation webhook rules 03/13/23 19:37:23.085
    STEP: Patching a validating webhook configuration's rules to include the create operation 03/13/23 19:37:23.092
    STEP: Creating a configMap that does not comply to the validation webhook rules 03/13/23 19:37:23.099
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:37:23.112: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-5610" for this suite. 03/13/23 19:37:23.14
    STEP: Destroying namespace "webhook-5610-markers" for this suite. 03/13/23 19:37:23.152
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:212
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:37:23.201
Mar 13 19:37:23.201: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-lifecycle-hook 03/13/23 19:37:23.202
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:37:23.216
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:37:23.219
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 03/13/23 19:37:23.228
Mar 13 19:37:23.239: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-7947" to be "running and ready"
Mar 13 19:37:23.246: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 6.924562ms
Mar 13 19:37:23.246: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:37:25.250: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.011254939s
Mar 13 19:37:25.250: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Mar 13 19:37:25.250: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:212
STEP: create the pod with lifecycle hook 03/13/23 19:37:25.254
Mar 13 19:37:25.259: INFO: Waiting up to 5m0s for pod "pod-with-prestop-http-hook" in namespace "container-lifecycle-hook-7947" to be "running and ready"
Mar 13 19:37:25.263: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 4.10083ms
Mar 13 19:37:25.263: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:37:27.268: INFO: Pod "pod-with-prestop-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.008902824s
Mar 13 19:37:27.268: INFO: The phase of Pod pod-with-prestop-http-hook is Running (Ready = true)
Mar 13 19:37:27.268: INFO: Pod "pod-with-prestop-http-hook" satisfied condition "running and ready"
STEP: delete the pod with lifecycle hook 03/13/23 19:37:27.271
Mar 13 19:37:27.277: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Mar 13 19:37:27.281: INFO: Pod pod-with-prestop-http-hook still exists
Mar 13 19:37:29.282: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Mar 13 19:37:29.285: INFO: Pod pod-with-prestop-http-hook still exists
Mar 13 19:37:31.283: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Mar 13 19:37:31.286: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook 03/13/23 19:37:31.287
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Mar 13 19:37:31.310: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-7947" for this suite. 03/13/23 19:37:31.314
------------------------------
â€¢ [SLOW TEST] [8.118 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:212

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:37:23.201
    Mar 13 19:37:23.201: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-lifecycle-hook 03/13/23 19:37:23.202
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:37:23.216
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:37:23.219
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 03/13/23 19:37:23.228
    Mar 13 19:37:23.239: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-7947" to be "running and ready"
    Mar 13 19:37:23.246: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 6.924562ms
    Mar 13 19:37:23.246: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:37:25.250: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.011254939s
    Mar 13 19:37:25.250: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Mar 13 19:37:25.250: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute prestop http hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:212
    STEP: create the pod with lifecycle hook 03/13/23 19:37:25.254
    Mar 13 19:37:25.259: INFO: Waiting up to 5m0s for pod "pod-with-prestop-http-hook" in namespace "container-lifecycle-hook-7947" to be "running and ready"
    Mar 13 19:37:25.263: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 4.10083ms
    Mar 13 19:37:25.263: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:37:27.268: INFO: Pod "pod-with-prestop-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.008902824s
    Mar 13 19:37:27.268: INFO: The phase of Pod pod-with-prestop-http-hook is Running (Ready = true)
    Mar 13 19:37:27.268: INFO: Pod "pod-with-prestop-http-hook" satisfied condition "running and ready"
    STEP: delete the pod with lifecycle hook 03/13/23 19:37:27.271
    Mar 13 19:37:27.277: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Mar 13 19:37:27.281: INFO: Pod pod-with-prestop-http-hook still exists
    Mar 13 19:37:29.282: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Mar 13 19:37:29.285: INFO: Pod pod-with-prestop-http-hook still exists
    Mar 13 19:37:31.283: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Mar 13 19:37:31.286: INFO: Pod pod-with-prestop-http-hook no longer exists
    STEP: check prestop hook 03/13/23 19:37:31.287
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:37:31.310: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-7947" for this suite. 03/13/23 19:37:31.314
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:37:31.323
Mar 13 19:37:31.323: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 19:37:31.324
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:37:31.333
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:37:31.339
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240
STEP: Creating configMap with name cm-test-opt-del-705c5dd0-269c-44a8-a042-d4693dcad675 03/13/23 19:37:31.345
STEP: Creating configMap with name cm-test-opt-upd-f492cdd1-7e7e-4428-80ec-5e1478ebf351 03/13/23 19:37:31.349
STEP: Creating the pod 03/13/23 19:37:31.352
Mar 13 19:37:31.358: INFO: Waiting up to 5m0s for pod "pod-configmaps-4bbc2f78-342a-46c9-af74-049c809e201b" in namespace "configmap-4708" to be "running and ready"
Mar 13 19:37:31.360: INFO: Pod "pod-configmaps-4bbc2f78-342a-46c9-af74-049c809e201b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.244349ms
Mar 13 19:37:31.360: INFO: The phase of Pod pod-configmaps-4bbc2f78-342a-46c9-af74-049c809e201b is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:37:33.364: INFO: Pod "pod-configmaps-4bbc2f78-342a-46c9-af74-049c809e201b": Phase="Running", Reason="", readiness=true. Elapsed: 2.00622668s
Mar 13 19:37:33.364: INFO: The phase of Pod pod-configmaps-4bbc2f78-342a-46c9-af74-049c809e201b is Running (Ready = true)
Mar 13 19:37:33.364: INFO: Pod "pod-configmaps-4bbc2f78-342a-46c9-af74-049c809e201b" satisfied condition "running and ready"
STEP: Deleting configmap cm-test-opt-del-705c5dd0-269c-44a8-a042-d4693dcad675 03/13/23 19:37:33.4
STEP: Updating configmap cm-test-opt-upd-f492cdd1-7e7e-4428-80ec-5e1478ebf351 03/13/23 19:37:33.404
STEP: Creating configMap with name cm-test-opt-create-8f2dca34-b598-496d-90d1-996ecae5e94d 03/13/23 19:37:33.407
STEP: waiting to observe update in volume 03/13/23 19:37:33.411
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:37:35.437: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-4708" for this suite. 03/13/23 19:37:35.44
------------------------------
â€¢ [4.122 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:37:31.323
    Mar 13 19:37:31.323: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 19:37:31.324
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:37:31.333
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:37:31.339
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:240
    STEP: Creating configMap with name cm-test-opt-del-705c5dd0-269c-44a8-a042-d4693dcad675 03/13/23 19:37:31.345
    STEP: Creating configMap with name cm-test-opt-upd-f492cdd1-7e7e-4428-80ec-5e1478ebf351 03/13/23 19:37:31.349
    STEP: Creating the pod 03/13/23 19:37:31.352
    Mar 13 19:37:31.358: INFO: Waiting up to 5m0s for pod "pod-configmaps-4bbc2f78-342a-46c9-af74-049c809e201b" in namespace "configmap-4708" to be "running and ready"
    Mar 13 19:37:31.360: INFO: Pod "pod-configmaps-4bbc2f78-342a-46c9-af74-049c809e201b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.244349ms
    Mar 13 19:37:31.360: INFO: The phase of Pod pod-configmaps-4bbc2f78-342a-46c9-af74-049c809e201b is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:37:33.364: INFO: Pod "pod-configmaps-4bbc2f78-342a-46c9-af74-049c809e201b": Phase="Running", Reason="", readiness=true. Elapsed: 2.00622668s
    Mar 13 19:37:33.364: INFO: The phase of Pod pod-configmaps-4bbc2f78-342a-46c9-af74-049c809e201b is Running (Ready = true)
    Mar 13 19:37:33.364: INFO: Pod "pod-configmaps-4bbc2f78-342a-46c9-af74-049c809e201b" satisfied condition "running and ready"
    STEP: Deleting configmap cm-test-opt-del-705c5dd0-269c-44a8-a042-d4693dcad675 03/13/23 19:37:33.4
    STEP: Updating configmap cm-test-opt-upd-f492cdd1-7e7e-4428-80ec-5e1478ebf351 03/13/23 19:37:33.404
    STEP: Creating configMap with name cm-test-opt-create-8f2dca34-b598-496d-90d1-996ecae5e94d 03/13/23 19:37:33.407
    STEP: waiting to observe update in volume 03/13/23 19:37:33.411
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:37:35.437: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-4708" for this suite. 03/13/23 19:37:35.44
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Downward API
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:37:35.447
Mar 13 19:37:35.447: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 19:37:35.448
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:37:35.458
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:37:35.461
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44
STEP: Creating a pod to test downward api env vars 03/13/23 19:37:35.464
Mar 13 19:37:35.470: INFO: Waiting up to 5m0s for pod "downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea" in namespace "downward-api-2444" to be "Succeeded or Failed"
Mar 13 19:37:35.473: INFO: Pod "downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea": Phase="Pending", Reason="", readiness=false. Elapsed: 2.20791ms
Mar 13 19:37:37.477: INFO: Pod "downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006728966s
Mar 13 19:37:39.478: INFO: Pod "downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007481112s
STEP: Saw pod success 03/13/23 19:37:39.478
Mar 13 19:37:39.478: INFO: Pod "downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea" satisfied condition "Succeeded or Failed"
Mar 13 19:37:39.481: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea container dapi-container: <nil>
STEP: delete the pod 03/13/23 19:37:39.491
Mar 13 19:37:39.501: INFO: Waiting for pod downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea to disappear
Mar 13 19:37:39.503: INFO: Pod downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Mar 13 19:37:39.504: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-2444" for this suite. 03/13/23 19:37:39.507
------------------------------
â€¢ [4.065 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:37:35.447
    Mar 13 19:37:35.447: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 19:37:35.448
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:37:35.458
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:37:35.461
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:44
    STEP: Creating a pod to test downward api env vars 03/13/23 19:37:35.464
    Mar 13 19:37:35.470: INFO: Waiting up to 5m0s for pod "downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea" in namespace "downward-api-2444" to be "Succeeded or Failed"
    Mar 13 19:37:35.473: INFO: Pod "downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea": Phase="Pending", Reason="", readiness=false. Elapsed: 2.20791ms
    Mar 13 19:37:37.477: INFO: Pod "downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006728966s
    Mar 13 19:37:39.478: INFO: Pod "downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007481112s
    STEP: Saw pod success 03/13/23 19:37:39.478
    Mar 13 19:37:39.478: INFO: Pod "downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea" satisfied condition "Succeeded or Failed"
    Mar 13 19:37:39.481: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea container dapi-container: <nil>
    STEP: delete the pod 03/13/23 19:37:39.491
    Mar 13 19:37:39.501: INFO: Waiting for pod downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea to disappear
    Mar 13 19:37:39.503: INFO: Pod downward-api-02b92361-c2d6-4caa-8c3c-f05fd5a6a5ea no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:37:39.504: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-2444" for this suite. 03/13/23 19:37:39.507
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] CronJob
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:37:39.514
Mar 13 19:37:39.514: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename cronjob 03/13/23 19:37:39.516
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:37:39.526
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:37:39.529
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96
STEP: Creating a suspended cronjob 03/13/23 19:37:39.532
STEP: Ensuring no jobs are scheduled 03/13/23 19:37:39.538
STEP: Ensuring no job exists by listing jobs explicitly 03/13/23 19:42:39.546
STEP: Removing cronjob 03/13/23 19:42:39.55
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Mar 13 19:42:39.555: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-1859" for this suite. 03/13/23 19:42:39.56
------------------------------
â€¢ [SLOW TEST] [300.050 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:37:39.514
    Mar 13 19:37:39.514: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename cronjob 03/13/23 19:37:39.516
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:37:39.526
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:37:39.529
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should not schedule jobs when suspended [Slow] [Conformance]
      test/e2e/apps/cronjob.go:96
    STEP: Creating a suspended cronjob 03/13/23 19:37:39.532
    STEP: Ensuring no jobs are scheduled 03/13/23 19:37:39.538
    STEP: Ensuring no job exists by listing jobs explicitly 03/13/23 19:42:39.546
    STEP: Removing cronjob 03/13/23 19:42:39.55
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:42:39.555: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-1859" for this suite. 03/13/23 19:42:39.56
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/kubectl/kubectl.go:962
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:42:39.565
Mar 13 19:42:39.565: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 19:42:39.568
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:42:39.577
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:42:39.58
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/kubectl/kubectl.go:962
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/13/23 19:42:39.583
Mar 13 19:42:39.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1066 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Mar 13 19:42:39.684: INFO: stderr: ""
Mar 13 19:42:39.684: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run 03/13/23 19:42:39.684
Mar 13 19:42:39.684: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1066 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
Mar 13 19:42:40.768: INFO: stderr: ""
Mar 13 19:42:40.768: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/13/23 19:42:40.768
Mar 13 19:42:40.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1066 delete pods e2e-test-httpd-pod'
Mar 13 19:42:43.450: INFO: stderr: ""
Mar 13 19:42:43.450: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 19:42:43.450: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1066" for this suite. 03/13/23 19:42:43.454
------------------------------
â€¢ [3.894 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl server-side dry-run
  test/e2e/kubectl/kubectl.go:956
    should check if kubectl can dry-run update Pods [Conformance]
    test/e2e/kubectl/kubectl.go:962

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:42:39.565
    Mar 13 19:42:39.565: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 19:42:39.568
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:42:39.577
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:42:39.58
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl can dry-run update Pods [Conformance]
      test/e2e/kubectl/kubectl.go:962
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/13/23 19:42:39.583
    Mar 13 19:42:39.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1066 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
    Mar 13 19:42:39.684: INFO: stderr: ""
    Mar 13 19:42:39.684: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: replace the image in the pod with server-side dry-run 03/13/23 19:42:39.684
    Mar 13 19:42:39.684: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1066 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
    Mar 13 19:42:40.768: INFO: stderr: ""
    Mar 13 19:42:40.768: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
    STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/13/23 19:42:40.768
    Mar 13 19:42:40.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-1066 delete pods e2e-test-httpd-pod'
    Mar 13 19:42:43.450: INFO: stderr: ""
    Mar 13 19:42:43.450: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:42:43.450: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1066" for this suite. 03/13/23 19:42:43.454
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:42:43.459
Mar 13 19:42:43.459: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 19:42:43.461
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:42:43.47
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:42:43.473
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194
Mar 13 19:42:43.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 03/13/23 19:42:45.118
Mar 13 19:42:45.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-6390 --namespace=crd-publish-openapi-6390 create -f -'
Mar 13 19:42:45.885: INFO: stderr: ""
Mar 13 19:42:45.885: INFO: stdout: "e2e-test-crd-publish-openapi-9314-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Mar 13 19:42:45.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-6390 --namespace=crd-publish-openapi-6390 delete e2e-test-crd-publish-openapi-9314-crds test-cr'
Mar 13 19:42:45.970: INFO: stderr: ""
Mar 13 19:42:45.970: INFO: stdout: "e2e-test-crd-publish-openapi-9314-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Mar 13 19:42:45.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-6390 --namespace=crd-publish-openapi-6390 apply -f -'
Mar 13 19:42:46.205: INFO: stderr: ""
Mar 13 19:42:46.205: INFO: stdout: "e2e-test-crd-publish-openapi-9314-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Mar 13 19:42:46.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-6390 --namespace=crd-publish-openapi-6390 delete e2e-test-crd-publish-openapi-9314-crds test-cr'
Mar 13 19:42:46.290: INFO: stderr: ""
Mar 13 19:42:46.290: INFO: stdout: "e2e-test-crd-publish-openapi-9314-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR 03/13/23 19:42:46.29
Mar 13 19:42:46.290: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-6390 explain e2e-test-crd-publish-openapi-9314-crds'
Mar 13 19:42:46.515: INFO: stderr: ""
Mar 13 19:42:46.515: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9314-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:42:48.117: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-6390" for this suite. 03/13/23 19:42:48.127
------------------------------
â€¢ [4.673 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:42:43.459
    Mar 13 19:42:43.459: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 19:42:43.461
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:42:43.47
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:42:43.473
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD preserving unknown fields at the schema root [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:194
    Mar 13 19:42:43.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 03/13/23 19:42:45.118
    Mar 13 19:42:45.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-6390 --namespace=crd-publish-openapi-6390 create -f -'
    Mar 13 19:42:45.885: INFO: stderr: ""
    Mar 13 19:42:45.885: INFO: stdout: "e2e-test-crd-publish-openapi-9314-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
    Mar 13 19:42:45.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-6390 --namespace=crd-publish-openapi-6390 delete e2e-test-crd-publish-openapi-9314-crds test-cr'
    Mar 13 19:42:45.970: INFO: stderr: ""
    Mar 13 19:42:45.970: INFO: stdout: "e2e-test-crd-publish-openapi-9314-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
    Mar 13 19:42:45.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-6390 --namespace=crd-publish-openapi-6390 apply -f -'
    Mar 13 19:42:46.205: INFO: stderr: ""
    Mar 13 19:42:46.205: INFO: stdout: "e2e-test-crd-publish-openapi-9314-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
    Mar 13 19:42:46.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-6390 --namespace=crd-publish-openapi-6390 delete e2e-test-crd-publish-openapi-9314-crds test-cr'
    Mar 13 19:42:46.290: INFO: stderr: ""
    Mar 13 19:42:46.290: INFO: stdout: "e2e-test-crd-publish-openapi-9314-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR 03/13/23 19:42:46.29
    Mar 13 19:42:46.290: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-6390 explain e2e-test-crd-publish-openapi-9314-crds'
    Mar 13 19:42:46.515: INFO: stderr: ""
    Mar 13 19:42:46.515: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9314-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:42:48.117: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-6390" for this suite. 03/13/23 19:42:48.127
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:42:48.134
Mar 13 19:42:48.134: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 19:42:48.136
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:42:48.148
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:42:48.152
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187
STEP: Creating a pod to test emptydir 0777 on node default medium 03/13/23 19:42:48.155
Mar 13 19:42:48.161: INFO: Waiting up to 5m0s for pod "pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d" in namespace "emptydir-3119" to be "Succeeded or Failed"
Mar 13 19:42:48.163: INFO: Pod "pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.108376ms
Mar 13 19:42:50.168: INFO: Pod "pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006861556s
Mar 13 19:42:52.169: INFO: Pod "pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007412154s
STEP: Saw pod success 03/13/23 19:42:52.169
Mar 13 19:42:52.169: INFO: Pod "pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d" satisfied condition "Succeeded or Failed"
Mar 13 19:42:52.172: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d container test-container: <nil>
STEP: delete the pod 03/13/23 19:42:52.197
Mar 13 19:42:52.205: INFO: Waiting for pod pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d to disappear
Mar 13 19:42:52.207: INFO: Pod pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 19:42:52.207: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-3119" for this suite. 03/13/23 19:42:52.21
------------------------------
â€¢ [4.080 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:42:48.134
    Mar 13 19:42:48.134: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 19:42:48.136
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:42:48.148
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:42:48.152
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:187
    STEP: Creating a pod to test emptydir 0777 on node default medium 03/13/23 19:42:48.155
    Mar 13 19:42:48.161: INFO: Waiting up to 5m0s for pod "pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d" in namespace "emptydir-3119" to be "Succeeded or Failed"
    Mar 13 19:42:48.163: INFO: Pod "pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.108376ms
    Mar 13 19:42:50.168: INFO: Pod "pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006861556s
    Mar 13 19:42:52.169: INFO: Pod "pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007412154s
    STEP: Saw pod success 03/13/23 19:42:52.169
    Mar 13 19:42:52.169: INFO: Pod "pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d" satisfied condition "Succeeded or Failed"
    Mar 13 19:42:52.172: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d container test-container: <nil>
    STEP: delete the pod 03/13/23 19:42:52.197
    Mar 13 19:42:52.205: INFO: Waiting for pod pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d to disappear
    Mar 13 19:42:52.207: INFO: Pod pod-0c056ba9-6d6c-4f80-8b14-24eb531f569d no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:42:52.207: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-3119" for this suite. 03/13/23 19:42:52.21
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:42:52.217
Mar 13 19:42:52.217: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 19:42:52.218
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:42:52.226
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:42:52.229
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89
STEP: Creating configMap with name configmap-test-volume-map-c63da34e-1d4c-4707-87ea-f40fa70f2bd9 03/13/23 19:42:52.233
STEP: Creating a pod to test consume configMaps 03/13/23 19:42:52.237
Mar 13 19:42:52.242: INFO: Waiting up to 5m0s for pod "pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b" in namespace "configmap-7475" to be "Succeeded or Failed"
Mar 13 19:42:52.245: INFO: Pod "pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.442543ms
Mar 13 19:42:54.249: INFO: Pod "pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006124642s
Mar 13 19:42:56.249: INFO: Pod "pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006507007s
STEP: Saw pod success 03/13/23 19:42:56.249
Mar 13 19:42:56.249: INFO: Pod "pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b" satisfied condition "Succeeded or Failed"
Mar 13 19:42:56.252: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b container agnhost-container: <nil>
STEP: delete the pod 03/13/23 19:42:56.258
Mar 13 19:42:56.265: INFO: Waiting for pod pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b to disappear
Mar 13 19:42:56.268: INFO: Pod pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:42:56.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-7475" for this suite. 03/13/23 19:42:56.271
------------------------------
â€¢ [4.058 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:42:52.217
    Mar 13 19:42:52.217: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 19:42:52.218
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:42:52.226
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:42:52.229
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:89
    STEP: Creating configMap with name configmap-test-volume-map-c63da34e-1d4c-4707-87ea-f40fa70f2bd9 03/13/23 19:42:52.233
    STEP: Creating a pod to test consume configMaps 03/13/23 19:42:52.237
    Mar 13 19:42:52.242: INFO: Waiting up to 5m0s for pod "pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b" in namespace "configmap-7475" to be "Succeeded or Failed"
    Mar 13 19:42:52.245: INFO: Pod "pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.442543ms
    Mar 13 19:42:54.249: INFO: Pod "pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006124642s
    Mar 13 19:42:56.249: INFO: Pod "pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006507007s
    STEP: Saw pod success 03/13/23 19:42:56.249
    Mar 13 19:42:56.249: INFO: Pod "pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b" satisfied condition "Succeeded or Failed"
    Mar 13 19:42:56.252: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 19:42:56.258
    Mar 13 19:42:56.265: INFO: Waiting for pod pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b to disappear
    Mar 13 19:42:56.268: INFO: Pod pod-configmaps-fb434e10-c140-4b77-9c88-92df0a721c8b no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:42:56.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-7475" for this suite. 03/13/23 19:42:56.271
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:42:56.282
Mar 13 19:42:56.282: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pods 03/13/23 19:42:56.283
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:42:56.291
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:42:56.293
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083
STEP: Create a pod 03/13/23 19:42:56.296
Mar 13 19:42:56.301: INFO: Waiting up to 5m0s for pod "pod-jgzqn" in namespace "pods-3099" to be "running"
Mar 13 19:42:56.304: INFO: Pod "pod-jgzqn": Phase="Pending", Reason="", readiness=false. Elapsed: 2.699368ms
Mar 13 19:42:58.308: INFO: Pod "pod-jgzqn": Phase="Running", Reason="", readiness=true. Elapsed: 2.006896169s
Mar 13 19:42:58.308: INFO: Pod "pod-jgzqn" satisfied condition "running"
STEP: patching /status 03/13/23 19:42:58.308
Mar 13 19:42:58.316: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar 13 19:42:58.316: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-3099" for this suite. 03/13/23 19:42:58.321
------------------------------
â€¢ [2.049 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:42:56.282
    Mar 13 19:42:56.282: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pods 03/13/23 19:42:56.283
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:42:56.291
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:42:56.293
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should patch a pod status [Conformance]
      test/e2e/common/node/pods.go:1083
    STEP: Create a pod 03/13/23 19:42:56.296
    Mar 13 19:42:56.301: INFO: Waiting up to 5m0s for pod "pod-jgzqn" in namespace "pods-3099" to be "running"
    Mar 13 19:42:56.304: INFO: Pod "pod-jgzqn": Phase="Pending", Reason="", readiness=false. Elapsed: 2.699368ms
    Mar 13 19:42:58.308: INFO: Pod "pod-jgzqn": Phase="Running", Reason="", readiness=true. Elapsed: 2.006896169s
    Mar 13 19:42:58.308: INFO: Pod "pod-jgzqn" satisfied condition "running"
    STEP: patching /status 03/13/23 19:42:58.308
    Mar 13 19:42:58.316: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:42:58.316: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-3099" for this suite. 03/13/23 19:42:58.321
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch
  should add annotations for pods in rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1652
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:42:58.339
Mar 13 19:42:58.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 19:42:58.341
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:42:58.36
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:42:58.363
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1652
STEP: creating Agnhost RC 03/13/23 19:42:58.366
Mar 13 19:42:58.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-2028 create -f -'
Mar 13 19:42:58.931: INFO: stderr: ""
Mar 13 19:42:58.932: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 03/13/23 19:42:58.932
Mar 13 19:42:59.936: INFO: Selector matched 1 pods for map[app:agnhost]
Mar 13 19:42:59.936: INFO: Found 0 / 1
Mar 13 19:43:00.935: INFO: Selector matched 1 pods for map[app:agnhost]
Mar 13 19:43:00.935: INFO: Found 1 / 1
Mar 13 19:43:00.935: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods 03/13/23 19:43:00.935
Mar 13 19:43:00.939: INFO: Selector matched 1 pods for map[app:agnhost]
Mar 13 19:43:00.939: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Mar 13 19:43:00.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-2028 patch pod agnhost-primary-mcvdh -p {"metadata":{"annotations":{"x":"y"}}}'
Mar 13 19:43:01.032: INFO: stderr: ""
Mar 13 19:43:01.032: INFO: stdout: "pod/agnhost-primary-mcvdh patched\n"
STEP: checking annotations 03/13/23 19:43:01.032
Mar 13 19:43:01.044: INFO: Selector matched 1 pods for map[app:agnhost]
Mar 13 19:43:01.044: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 19:43:01.044: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-2028" for this suite. 03/13/23 19:43:01.048
------------------------------
â€¢ [2.716 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl patch
  test/e2e/kubectl/kubectl.go:1646
    should add annotations for pods in rc  [Conformance]
    test/e2e/kubectl/kubectl.go:1652

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:42:58.339
    Mar 13 19:42:58.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 19:42:58.341
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:42:58.36
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:42:58.363
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should add annotations for pods in rc  [Conformance]
      test/e2e/kubectl/kubectl.go:1652
    STEP: creating Agnhost RC 03/13/23 19:42:58.366
    Mar 13 19:42:58.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-2028 create -f -'
    Mar 13 19:42:58.931: INFO: stderr: ""
    Mar 13 19:42:58.932: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 03/13/23 19:42:58.932
    Mar 13 19:42:59.936: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar 13 19:42:59.936: INFO: Found 0 / 1
    Mar 13 19:43:00.935: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar 13 19:43:00.935: INFO: Found 1 / 1
    Mar 13 19:43:00.935: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    STEP: patching all pods 03/13/23 19:43:00.935
    Mar 13 19:43:00.939: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar 13 19:43:00.939: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Mar 13 19:43:00.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-2028 patch pod agnhost-primary-mcvdh -p {"metadata":{"annotations":{"x":"y"}}}'
    Mar 13 19:43:01.032: INFO: stderr: ""
    Mar 13 19:43:01.032: INFO: stdout: "pod/agnhost-primary-mcvdh patched\n"
    STEP: checking annotations 03/13/23 19:43:01.032
    Mar 13 19:43:01.044: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar 13 19:43:01.044: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:43:01.044: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-2028" for this suite. 03/13/23 19:43:01.048
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events API
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207
[BeforeEach] [sig-instrumentation] Events API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:43:01.055
Mar 13 19:43:01.055: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename events 03/13/23 19:43:01.057
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:43:01.075
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:43:01.079
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207
STEP: Create set of events 03/13/23 19:43:01.083
STEP: get a list of Events with a label in the current namespace 03/13/23 19:43:01.1
STEP: delete a list of events 03/13/23 19:43:01.105
Mar 13 19:43:01.105: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity 03/13/23 19:43:01.125
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/node/init/init.go:32
Mar 13 19:43:01.131: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events API
  tear down framework | framework.go:193
STEP: Destroying namespace "events-4026" for this suite. 03/13/23 19:43:01.137
------------------------------
â€¢ [0.091 seconds]
[sig-instrumentation] Events API
test/e2e/instrumentation/common/framework.go:23
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:43:01.055
    Mar 13 19:43:01.055: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename events 03/13/23 19:43:01.057
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:43:01.075
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:43:01.079
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/instrumentation/events.go:84
    [It] should delete a collection of events [Conformance]
      test/e2e/instrumentation/events.go:207
    STEP: Create set of events 03/13/23 19:43:01.083
    STEP: get a list of Events with a label in the current namespace 03/13/23 19:43:01.1
    STEP: delete a list of events 03/13/23 19:43:01.105
    Mar 13 19:43:01.105: INFO: requesting DeleteCollection of events
    STEP: check that the list of events matches the requested quantity 03/13/23 19:43:01.125
    [AfterEach] [sig-instrumentation] Events API
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:43:01.131: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-4026" for this suite. 03/13/23 19:43:01.137
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:43:01.152
Mar 13 19:43:01.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:43:01.153
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:43:01.175
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:43:01.18
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68
STEP: Creating a pod to test downward API volume plugin 03/13/23 19:43:01.188
Mar 13 19:43:01.207: INFO: Waiting up to 5m0s for pod "downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7" in namespace "projected-1675" to be "Succeeded or Failed"
Mar 13 19:43:01.213: INFO: Pod "downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7": Phase="Pending", Reason="", readiness=false. Elapsed: 5.284955ms
Mar 13 19:43:03.224: INFO: Pod "downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016608009s
Mar 13 19:43:05.234: INFO: Pod "downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026275632s
STEP: Saw pod success 03/13/23 19:43:05.234
Mar 13 19:43:05.234: INFO: Pod "downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7" satisfied condition "Succeeded or Failed"
Mar 13 19:43:05.241: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7 container client-container: <nil>
STEP: delete the pod 03/13/23 19:43:05.253
Mar 13 19:43:05.270: INFO: Waiting for pod downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7 to disappear
Mar 13 19:43:05.274: INFO: Pod downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar 13 19:43:05.274: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1675" for this suite. 03/13/23 19:43:05.278
------------------------------
â€¢ [4.136 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:43:01.152
    Mar 13 19:43:01.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:43:01.153
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:43:01.175
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:43:01.18
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:68
    STEP: Creating a pod to test downward API volume plugin 03/13/23 19:43:01.188
    Mar 13 19:43:01.207: INFO: Waiting up to 5m0s for pod "downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7" in namespace "projected-1675" to be "Succeeded or Failed"
    Mar 13 19:43:01.213: INFO: Pod "downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7": Phase="Pending", Reason="", readiness=false. Elapsed: 5.284955ms
    Mar 13 19:43:03.224: INFO: Pod "downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016608009s
    Mar 13 19:43:05.234: INFO: Pod "downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026275632s
    STEP: Saw pod success 03/13/23 19:43:05.234
    Mar 13 19:43:05.234: INFO: Pod "downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7" satisfied condition "Succeeded or Failed"
    Mar 13 19:43:05.241: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7 container client-container: <nil>
    STEP: delete the pod 03/13/23 19:43:05.253
    Mar 13 19:43:05.270: INFO: Waiting for pod downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7 to disappear
    Mar 13 19:43:05.274: INFO: Pod downwardapi-volume-69fc9939-fd55-4309-806d-c5f7f0f904e7 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:43:05.274: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1675" for this suite. 03/13/23 19:43:05.278
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch
  watch on custom resource definition objects [Conformance]
  test/e2e/apimachinery/crd_watch.go:51
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:43:05.291
Mar 13 19:43:05.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename crd-watch 03/13/23 19:43:05.292
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:43:05.343
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:43:05.35
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] watch on custom resource definition objects [Conformance]
  test/e2e/apimachinery/crd_watch.go:51
Mar 13 19:43:05.357: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Creating first CR  03/13/23 19:43:07.963
Mar 13 19:43:07.976: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-13T19:43:07Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-13T19:43:07Z]] name:name1 resourceVersion:27584 uid:c1c01abb-02e2-4508-ab98-06abb3aa2735] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR 03/13/23 19:43:17.976
Mar 13 19:43:17.985: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-13T19:43:17Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-13T19:43:17Z]] name:name2 resourceVersion:27620 uid:5a107b42-f213-4571-a998-f3f922041d01] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR 03/13/23 19:43:27.985
Mar 13 19:43:27.991: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-13T19:43:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-13T19:43:27Z]] name:name1 resourceVersion:27646 uid:c1c01abb-02e2-4508-ab98-06abb3aa2735] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR 03/13/23 19:43:37.992
Mar 13 19:43:37.999: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-13T19:43:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-13T19:43:37Z]] name:name2 resourceVersion:27672 uid:5a107b42-f213-4571-a998-f3f922041d01] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR 03/13/23 19:43:48
Mar 13 19:43:48.006: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-13T19:43:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-13T19:43:27Z]] name:name1 resourceVersion:27697 uid:c1c01abb-02e2-4508-ab98-06abb3aa2735] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR 03/13/23 19:43:58.007
Mar 13 19:43:58.014: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-13T19:43:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-13T19:43:37Z]] name:name2 resourceVersion:27722 uid:5a107b42-f213-4571-a998-f3f922041d01] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:44:08.539: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-watch-1733" for this suite. 03/13/23 19:44:08.544
------------------------------
â€¢ [SLOW TEST] [63.266 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/apimachinery/crd_watch.go:51

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:43:05.291
    Mar 13 19:43:05.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename crd-watch 03/13/23 19:43:05.292
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:43:05.343
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:43:05.35
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] watch on custom resource definition objects [Conformance]
      test/e2e/apimachinery/crd_watch.go:51
    Mar 13 19:43:05.357: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Creating first CR  03/13/23 19:43:07.963
    Mar 13 19:43:07.976: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-13T19:43:07Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-13T19:43:07Z]] name:name1 resourceVersion:27584 uid:c1c01abb-02e2-4508-ab98-06abb3aa2735] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Creating second CR 03/13/23 19:43:17.976
    Mar 13 19:43:17.985: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-13T19:43:17Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-13T19:43:17Z]] name:name2 resourceVersion:27620 uid:5a107b42-f213-4571-a998-f3f922041d01] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Modifying first CR 03/13/23 19:43:27.985
    Mar 13 19:43:27.991: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-13T19:43:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-13T19:43:27Z]] name:name1 resourceVersion:27646 uid:c1c01abb-02e2-4508-ab98-06abb3aa2735] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Modifying second CR 03/13/23 19:43:37.992
    Mar 13 19:43:37.999: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-13T19:43:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-13T19:43:37Z]] name:name2 resourceVersion:27672 uid:5a107b42-f213-4571-a998-f3f922041d01] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Deleting first CR 03/13/23 19:43:48
    Mar 13 19:43:48.006: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-13T19:43:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-13T19:43:27Z]] name:name1 resourceVersion:27697 uid:c1c01abb-02e2-4508-ab98-06abb3aa2735] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Deleting second CR 03/13/23 19:43:58.007
    Mar 13 19:43:58.014: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-13T19:43:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-13T19:43:37Z]] name:name2 resourceVersion:27722 uid:5a107b42-f213-4571-a998-f3f922041d01] num:map[num1:9223372036854775807 num2:1000000]]}
    [AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:44:08.539: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-watch-1733" for this suite. 03/13/23 19:44:08.544
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial]
  should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:44:08.563
Mar 13 19:44:08.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename daemonsets 03/13/23 19:44:08.565
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:44:08.592
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:44:08.596
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862
STEP: Creating simple DaemonSet "daemon-set" 03/13/23 19:44:08.63
STEP: Check that daemon pods launch on every node of the cluster. 03/13/23 19:44:08.64
Mar 13 19:44:08.652: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:44:08.653: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 19:44:09.676: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar 13 19:44:09.676: INFO: Node vke-automated-test-f5b1d7d2d722 is running 0 daemon pod, expected 1
Mar 13 19:44:10.670: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar 13 19:44:10.671: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Getting /status 03/13/23 19:44:10.674
Mar 13 19:44:10.680: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status 03/13/23 19:44:10.68
Mar 13 19:44:10.691: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated 03/13/23 19:44:10.691
Mar 13 19:44:10.694: INFO: Observed &DaemonSet event: ADDED
Mar 13 19:44:10.695: INFO: Observed &DaemonSet event: MODIFIED
Mar 13 19:44:10.695: INFO: Observed &DaemonSet event: MODIFIED
Mar 13 19:44:10.695: INFO: Observed &DaemonSet event: MODIFIED
Mar 13 19:44:10.695: INFO: Found daemon set daemon-set in namespace daemonsets-3456 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Mar 13 19:44:10.695: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status 03/13/23 19:44:10.696
STEP: watching for the daemon set status to be patched 03/13/23 19:44:10.707
Mar 13 19:44:10.709: INFO: Observed &DaemonSet event: ADDED
Mar 13 19:44:10.710: INFO: Observed &DaemonSet event: MODIFIED
Mar 13 19:44:10.710: INFO: Observed &DaemonSet event: MODIFIED
Mar 13 19:44:10.710: INFO: Observed &DaemonSet event: MODIFIED
Mar 13 19:44:10.710: INFO: Observed daemon set daemon-set in namespace daemonsets-3456 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Mar 13 19:44:10.711: INFO: Observed &DaemonSet event: MODIFIED
Mar 13 19:44:10.711: INFO: Found daemon set daemon-set in namespace daemonsets-3456 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Mar 13 19:44:10.711: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 03/13/23 19:44:10.718
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3456, will wait for the garbage collector to delete the pods 03/13/23 19:44:10.719
Mar 13 19:44:10.779: INFO: Deleting DaemonSet.extensions daemon-set took: 6.988929ms
Mar 13 19:44:10.880: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.70699ms
Mar 13 19:44:13.084: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 19:44:13.084: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Mar 13 19:44:13.088: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27828"},"items":null}

Mar 13 19:44:13.090: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27828"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:44:13.107: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-3456" for this suite. 03/13/23 19:44:13.11
------------------------------
â€¢ [4.553 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:44:08.563
    Mar 13 19:44:08.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename daemonsets 03/13/23 19:44:08.565
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:44:08.592
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:44:08.596
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should verify changes to a daemon set status [Conformance]
      test/e2e/apps/daemon_set.go:862
    STEP: Creating simple DaemonSet "daemon-set" 03/13/23 19:44:08.63
    STEP: Check that daemon pods launch on every node of the cluster. 03/13/23 19:44:08.64
    Mar 13 19:44:08.652: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:44:08.653: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 19:44:09.676: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar 13 19:44:09.676: INFO: Node vke-automated-test-f5b1d7d2d722 is running 0 daemon pod, expected 1
    Mar 13 19:44:10.670: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar 13 19:44:10.671: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Getting /status 03/13/23 19:44:10.674
    Mar 13 19:44:10.680: INFO: Daemon Set daemon-set has Conditions: []
    STEP: updating the DaemonSet Status 03/13/23 19:44:10.68
    Mar 13 19:44:10.691: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the daemon set status to be updated 03/13/23 19:44:10.691
    Mar 13 19:44:10.694: INFO: Observed &DaemonSet event: ADDED
    Mar 13 19:44:10.695: INFO: Observed &DaemonSet event: MODIFIED
    Mar 13 19:44:10.695: INFO: Observed &DaemonSet event: MODIFIED
    Mar 13 19:44:10.695: INFO: Observed &DaemonSet event: MODIFIED
    Mar 13 19:44:10.695: INFO: Found daemon set daemon-set in namespace daemonsets-3456 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Mar 13 19:44:10.695: INFO: Daemon set daemon-set has an updated status
    STEP: patching the DaemonSet Status 03/13/23 19:44:10.696
    STEP: watching for the daemon set status to be patched 03/13/23 19:44:10.707
    Mar 13 19:44:10.709: INFO: Observed &DaemonSet event: ADDED
    Mar 13 19:44:10.710: INFO: Observed &DaemonSet event: MODIFIED
    Mar 13 19:44:10.710: INFO: Observed &DaemonSet event: MODIFIED
    Mar 13 19:44:10.710: INFO: Observed &DaemonSet event: MODIFIED
    Mar 13 19:44:10.710: INFO: Observed daemon set daemon-set in namespace daemonsets-3456 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Mar 13 19:44:10.711: INFO: Observed &DaemonSet event: MODIFIED
    Mar 13 19:44:10.711: INFO: Found daemon set daemon-set in namespace daemonsets-3456 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
    Mar 13 19:44:10.711: INFO: Daemon set daemon-set has a patched status
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 03/13/23 19:44:10.718
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3456, will wait for the garbage collector to delete the pods 03/13/23 19:44:10.719
    Mar 13 19:44:10.779: INFO: Deleting DaemonSet.extensions daemon-set took: 6.988929ms
    Mar 13 19:44:10.880: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.70699ms
    Mar 13 19:44:13.084: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 19:44:13.084: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Mar 13 19:44:13.088: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27828"},"items":null}

    Mar 13 19:44:13.090: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27828"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:44:13.107: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-3456" for this suite. 03/13/23 19:44:13.11
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:44:13.116
Mar 13 19:44:13.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 19:44:13.117
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:44:13.135
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:44:13.14
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 19:44:13.157
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:44:13.416
STEP: Deploying the webhook pod 03/13/23 19:44:13.422
STEP: Wait for the deployment to be ready 03/13/23 19:44:13.433
Mar 13 19:44:13.440: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service 03/13/23 19:44:15.45
STEP: Verifying the service has paired with the endpoint 03/13/23 19:44:15.459
Mar 13 19:44:16.460: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381
STEP: Setting timeout (1s) shorter than webhook latency (5s) 03/13/23 19:44:16.463
STEP: Registering slow webhook via the AdmissionRegistration API 03/13/23 19:44:16.464
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) 03/13/23 19:44:16.493
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore 03/13/23 19:44:17.501
STEP: Registering slow webhook via the AdmissionRegistration API 03/13/23 19:44:17.501
STEP: Having no error when timeout is longer than webhook latency 03/13/23 19:44:18.524
STEP: Registering slow webhook via the AdmissionRegistration API 03/13/23 19:44:18.524
STEP: Having no error when timeout is empty (defaulted to 10s in v1) 03/13/23 19:44:23.556
STEP: Registering slow webhook via the AdmissionRegistration API 03/13/23 19:44:23.556
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:44:28.578: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-4972" for this suite. 03/13/23 19:44:28.604
STEP: Destroying namespace "webhook-4972-markers" for this suite. 03/13/23 19:44:28.607
------------------------------
â€¢ [SLOW TEST] [15.500 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:44:13.116
    Mar 13 19:44:13.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 19:44:13.117
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:44:13.135
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:44:13.14
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 19:44:13.157
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:44:13.416
    STEP: Deploying the webhook pod 03/13/23 19:44:13.422
    STEP: Wait for the deployment to be ready 03/13/23 19:44:13.433
    Mar 13 19:44:13.440: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
    STEP: Deploying the webhook service 03/13/23 19:44:15.45
    STEP: Verifying the service has paired with the endpoint 03/13/23 19:44:15.459
    Mar 13 19:44:16.460: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should honor timeout [Conformance]
      test/e2e/apimachinery/webhook.go:381
    STEP: Setting timeout (1s) shorter than webhook latency (5s) 03/13/23 19:44:16.463
    STEP: Registering slow webhook via the AdmissionRegistration API 03/13/23 19:44:16.464
    STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) 03/13/23 19:44:16.493
    STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore 03/13/23 19:44:17.501
    STEP: Registering slow webhook via the AdmissionRegistration API 03/13/23 19:44:17.501
    STEP: Having no error when timeout is longer than webhook latency 03/13/23 19:44:18.524
    STEP: Registering slow webhook via the AdmissionRegistration API 03/13/23 19:44:18.524
    STEP: Having no error when timeout is empty (defaulted to 10s in v1) 03/13/23 19:44:23.556
    STEP: Registering slow webhook via the AdmissionRegistration API 03/13/23 19:44:23.556
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:44:28.578: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-4972" for this suite. 03/13/23 19:44:28.604
    STEP: Destroying namespace "webhook-4972-markers" for this suite. 03/13/23 19:44:28.607
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:44:28.616
Mar 13 19:44:28.616: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename replicaset 03/13/23 19:44:28.617
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:44:28.66
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:44:28.676
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota 03/13/23 19:44:28.679
Mar 13 19:44:28.729: INFO: Pod name sample-pod: Found 0 pods out of 1
Mar 13 19:44:33.738: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 03/13/23 19:44:33.738
STEP: getting scale subresource 03/13/23 19:44:33.742
STEP: updating a scale subresource 03/13/23 19:44:33.752
STEP: verifying the replicaset Spec.Replicas was modified 03/13/23 19:44:33.757
STEP: Patch a scale subresource 03/13/23 19:44:33.759
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:44:33.772: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-7140" for this suite. 03/13/23 19:44:33.78
------------------------------
â€¢ [SLOW TEST] [5.172 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:44:28.616
    Mar 13 19:44:28.616: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename replicaset 03/13/23 19:44:28.617
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:44:28.66
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:44:28.676
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] Replicaset should have a working scale subresource [Conformance]
      test/e2e/apps/replica_set.go:143
    STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota 03/13/23 19:44:28.679
    Mar 13 19:44:28.729: INFO: Pod name sample-pod: Found 0 pods out of 1
    Mar 13 19:44:33.738: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 03/13/23 19:44:33.738
    STEP: getting scale subresource 03/13/23 19:44:33.742
    STEP: updating a scale subresource 03/13/23 19:44:33.752
    STEP: verifying the replicaset Spec.Replicas was modified 03/13/23 19:44:33.757
    STEP: Patch a scale subresource 03/13/23 19:44:33.759
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:44:33.772: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-7140" for this suite. 03/13/23 19:44:33.78
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:44:33.816
Mar 13 19:44:33.816: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename var-expansion 03/13/23 19:44:33.817
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:44:33.828
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:44:33.831
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152
Mar 13 19:44:33.840: INFO: Waiting up to 2m0s for pod "var-expansion-c2f909a0-07b5-49b0-8641-2194011bc923" in namespace "var-expansion-9636" to be "container 0 failed with reason CreateContainerConfigError"
Mar 13 19:44:33.842: INFO: Pod "var-expansion-c2f909a0-07b5-49b0-8641-2194011bc923": Phase="Pending", Reason="", readiness=false. Elapsed: 2.411283ms
Mar 13 19:44:35.847: INFO: Pod "var-expansion-c2f909a0-07b5-49b0-8641-2194011bc923": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00702773s
Mar 13 19:44:35.847: INFO: Pod "var-expansion-c2f909a0-07b5-49b0-8641-2194011bc923" satisfied condition "container 0 failed with reason CreateContainerConfigError"
Mar 13 19:44:35.847: INFO: Deleting pod "var-expansion-c2f909a0-07b5-49b0-8641-2194011bc923" in namespace "var-expansion-9636"
Mar 13 19:44:35.851: INFO: Wait up to 5m0s for pod "var-expansion-c2f909a0-07b5-49b0-8641-2194011bc923" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar 13 19:44:37.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-9636" for this suite. 03/13/23 19:44:37.862
------------------------------
â€¢ [4.056 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:44:33.816
    Mar 13 19:44:33.816: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename var-expansion 03/13/23 19:44:33.817
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:44:33.828
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:44:33.831
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
      test/e2e/common/node/expansion.go:152
    Mar 13 19:44:33.840: INFO: Waiting up to 2m0s for pod "var-expansion-c2f909a0-07b5-49b0-8641-2194011bc923" in namespace "var-expansion-9636" to be "container 0 failed with reason CreateContainerConfigError"
    Mar 13 19:44:33.842: INFO: Pod "var-expansion-c2f909a0-07b5-49b0-8641-2194011bc923": Phase="Pending", Reason="", readiness=false. Elapsed: 2.411283ms
    Mar 13 19:44:35.847: INFO: Pod "var-expansion-c2f909a0-07b5-49b0-8641-2194011bc923": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00702773s
    Mar 13 19:44:35.847: INFO: Pod "var-expansion-c2f909a0-07b5-49b0-8641-2194011bc923" satisfied condition "container 0 failed with reason CreateContainerConfigError"
    Mar 13 19:44:35.847: INFO: Deleting pod "var-expansion-c2f909a0-07b5-49b0-8641-2194011bc923" in namespace "var-expansion-9636"
    Mar 13 19:44:35.851: INFO: Wait up to 5m0s for pod "var-expansion-c2f909a0-07b5-49b0-8641-2194011bc923" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:44:37.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-9636" for this suite. 03/13/23 19:44:37.862
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:44:37.869
Mar 13 19:44:37.869: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename watch 03/13/23 19:44:37.87
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:44:37.88
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:44:37.883
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60
STEP: creating a watch on configmaps with label A 03/13/23 19:44:37.886
STEP: creating a watch on configmaps with label B 03/13/23 19:44:37.887
STEP: creating a watch on configmaps with label A or B 03/13/23 19:44:37.889
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification 03/13/23 19:44:37.89
Mar 13 19:44:37.893: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28071 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Mar 13 19:44:37.894: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28071 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification 03/13/23 19:44:37.894
Mar 13 19:44:37.899: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28072 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar 13 19:44:37.900: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28072 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification 03/13/23 19:44:37.9
Mar 13 19:44:37.905: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28073 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar 13 19:44:37.905: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28073 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification 03/13/23 19:44:37.905
Mar 13 19:44:37.908: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28074 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar 13 19:44:37.909: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28074 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification 03/13/23 19:44:37.909
Mar 13 19:44:37.912: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6633  ae93543a-c0b2-4ca8-8315-bd4442cfe87e 28075 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Mar 13 19:44:37.912: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6633  ae93543a-c0b2-4ca8-8315-bd4442cfe87e 28075 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification 03/13/23 19:44:47.913
Mar 13 19:44:47.918: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6633  ae93543a-c0b2-4ca8-8315-bd4442cfe87e 28137 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Mar 13 19:44:47.918: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6633  ae93543a-c0b2-4ca8-8315-bd4442cfe87e 28137 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Mar 13 19:44:57.919: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-6633" for this suite. 03/13/23 19:44:57.927
------------------------------
â€¢ [SLOW TEST] [20.063 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:44:37.869
    Mar 13 19:44:37.869: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename watch 03/13/23 19:44:37.87
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:44:37.88
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:44:37.883
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should observe add, update, and delete watch notifications on configmaps [Conformance]
      test/e2e/apimachinery/watch.go:60
    STEP: creating a watch on configmaps with label A 03/13/23 19:44:37.886
    STEP: creating a watch on configmaps with label B 03/13/23 19:44:37.887
    STEP: creating a watch on configmaps with label A or B 03/13/23 19:44:37.889
    STEP: creating a configmap with label A and ensuring the correct watchers observe the notification 03/13/23 19:44:37.89
    Mar 13 19:44:37.893: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28071 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar 13 19:44:37.894: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28071 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying configmap A and ensuring the correct watchers observe the notification 03/13/23 19:44:37.894
    Mar 13 19:44:37.899: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28072 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar 13 19:44:37.900: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28072 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying configmap A again and ensuring the correct watchers observe the notification 03/13/23 19:44:37.9
    Mar 13 19:44:37.905: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28073 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar 13 19:44:37.905: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28073 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: deleting configmap A and ensuring the correct watchers observe the notification 03/13/23 19:44:37.905
    Mar 13 19:44:37.908: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28074 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar 13 19:44:37.909: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6633  3fce7982-0484-42a0-bb09-bbe81b60d4a4 28074 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: creating a configmap with label B and ensuring the correct watchers observe the notification 03/13/23 19:44:37.909
    Mar 13 19:44:37.912: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6633  ae93543a-c0b2-4ca8-8315-bd4442cfe87e 28075 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar 13 19:44:37.912: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6633  ae93543a-c0b2-4ca8-8315-bd4442cfe87e 28075 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: deleting configmap B and ensuring the correct watchers observe the notification 03/13/23 19:44:47.913
    Mar 13 19:44:47.918: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6633  ae93543a-c0b2-4ca8-8315-bd4442cfe87e 28137 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar 13 19:44:47.918: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6633  ae93543a-c0b2-4ca8-8315-bd4442cfe87e 28137 0 2023-03-13 19:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-13 19:44:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:44:57.919: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-6633" for this suite. 03/13/23 19:44:57.927
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:44:57.936
Mar 13 19:44:57.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename job 03/13/23 19:44:57.938
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:44:57.948
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:44:57.951
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507
STEP: Creating a job 03/13/23 19:44:57.955
STEP: Ensuring active pods == parallelism 03/13/23 19:44:57.96
STEP: Orphaning one of the Job's Pods 03/13/23 19:44:59.964
Mar 13 19:45:00.476: INFO: Successfully updated pod "adopt-release-4hph8"
STEP: Checking that the Job readopts the Pod 03/13/23 19:45:00.476
Mar 13 19:45:00.476: INFO: Waiting up to 15m0s for pod "adopt-release-4hph8" in namespace "job-951" to be "adopted"
Mar 13 19:45:00.479: INFO: Pod "adopt-release-4hph8": Phase="Running", Reason="", readiness=true. Elapsed: 2.826953ms
Mar 13 19:45:02.498: INFO: Pod "adopt-release-4hph8": Phase="Running", Reason="", readiness=true. Elapsed: 2.021673338s
Mar 13 19:45:02.498: INFO: Pod "adopt-release-4hph8" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod 03/13/23 19:45:02.498
Mar 13 19:45:03.066: INFO: Successfully updated pod "adopt-release-4hph8"
STEP: Checking that the Job releases the Pod 03/13/23 19:45:03.067
Mar 13 19:45:03.067: INFO: Waiting up to 15m0s for pod "adopt-release-4hph8" in namespace "job-951" to be "released"
Mar 13 19:45:03.086: INFO: Pod "adopt-release-4hph8": Phase="Running", Reason="", readiness=true. Elapsed: 19.096723ms
Mar 13 19:45:05.095: INFO: Pod "adopt-release-4hph8": Phase="Running", Reason="", readiness=true. Elapsed: 2.027421347s
Mar 13 19:45:05.095: INFO: Pod "adopt-release-4hph8" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Mar 13 19:45:05.095: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-951" for this suite. 03/13/23 19:45:05.101
------------------------------
â€¢ [SLOW TEST] [7.185 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:44:57.936
    Mar 13 19:44:57.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename job 03/13/23 19:44:57.938
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:44:57.948
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:44:57.951
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should adopt matching orphans and release non-matching pods [Conformance]
      test/e2e/apps/job.go:507
    STEP: Creating a job 03/13/23 19:44:57.955
    STEP: Ensuring active pods == parallelism 03/13/23 19:44:57.96
    STEP: Orphaning one of the Job's Pods 03/13/23 19:44:59.964
    Mar 13 19:45:00.476: INFO: Successfully updated pod "adopt-release-4hph8"
    STEP: Checking that the Job readopts the Pod 03/13/23 19:45:00.476
    Mar 13 19:45:00.476: INFO: Waiting up to 15m0s for pod "adopt-release-4hph8" in namespace "job-951" to be "adopted"
    Mar 13 19:45:00.479: INFO: Pod "adopt-release-4hph8": Phase="Running", Reason="", readiness=true. Elapsed: 2.826953ms
    Mar 13 19:45:02.498: INFO: Pod "adopt-release-4hph8": Phase="Running", Reason="", readiness=true. Elapsed: 2.021673338s
    Mar 13 19:45:02.498: INFO: Pod "adopt-release-4hph8" satisfied condition "adopted"
    STEP: Removing the labels from the Job's Pod 03/13/23 19:45:02.498
    Mar 13 19:45:03.066: INFO: Successfully updated pod "adopt-release-4hph8"
    STEP: Checking that the Job releases the Pod 03/13/23 19:45:03.067
    Mar 13 19:45:03.067: INFO: Waiting up to 15m0s for pod "adopt-release-4hph8" in namespace "job-951" to be "released"
    Mar 13 19:45:03.086: INFO: Pod "adopt-release-4hph8": Phase="Running", Reason="", readiness=true. Elapsed: 19.096723ms
    Mar 13 19:45:05.095: INFO: Pod "adopt-release-4hph8": Phase="Running", Reason="", readiness=true. Elapsed: 2.027421347s
    Mar 13 19:45:05.095: INFO: Pod "adopt-release-4hph8" satisfied condition "released"
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:45:05.095: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-951" for this suite. 03/13/23 19:45:05.101
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:45:05.129
Mar 13 19:45:05.129: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:45:05.131
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:05.202
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:05.206
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78
STEP: Creating projection with secret that has name projected-secret-test-map-bee0112b-c4dc-4bdb-8565-2241fb390d65 03/13/23 19:45:05.22
STEP: Creating a pod to test consume secrets 03/13/23 19:45:05.228
Mar 13 19:45:05.261: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe" in namespace "projected-4611" to be "Succeeded or Failed"
Mar 13 19:45:05.278: INFO: Pod "pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe": Phase="Pending", Reason="", readiness=false. Elapsed: 17.257687ms
Mar 13 19:45:07.286: INFO: Pod "pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02479962s
Mar 13 19:45:09.284: INFO: Pod "pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02346997s
STEP: Saw pod success 03/13/23 19:45:09.284
Mar 13 19:45:09.285: INFO: Pod "pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe" satisfied condition "Succeeded or Failed"
Mar 13 19:45:09.289: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe container projected-secret-volume-test: <nil>
STEP: delete the pod 03/13/23 19:45:09.337
Mar 13 19:45:09.349: INFO: Waiting for pod pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe to disappear
Mar 13 19:45:09.353: INFO: Pod pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar 13 19:45:09.354: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4611" for this suite. 03/13/23 19:45:09.359
------------------------------
â€¢ [4.244 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:45:05.129
    Mar 13 19:45:05.129: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:45:05.131
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:05.202
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:05.206
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:78
    STEP: Creating projection with secret that has name projected-secret-test-map-bee0112b-c4dc-4bdb-8565-2241fb390d65 03/13/23 19:45:05.22
    STEP: Creating a pod to test consume secrets 03/13/23 19:45:05.228
    Mar 13 19:45:05.261: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe" in namespace "projected-4611" to be "Succeeded or Failed"
    Mar 13 19:45:05.278: INFO: Pod "pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe": Phase="Pending", Reason="", readiness=false. Elapsed: 17.257687ms
    Mar 13 19:45:07.286: INFO: Pod "pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02479962s
    Mar 13 19:45:09.284: INFO: Pod "pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02346997s
    STEP: Saw pod success 03/13/23 19:45:09.284
    Mar 13 19:45:09.285: INFO: Pod "pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe" satisfied condition "Succeeded or Failed"
    Mar 13 19:45:09.289: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe container projected-secret-volume-test: <nil>
    STEP: delete the pod 03/13/23 19:45:09.337
    Mar 13 19:45:09.349: INFO: Waiting for pod pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe to disappear
    Mar 13 19:45:09.353: INFO: Pod pod-projected-secrets-39fa5c68-9393-4b64-a2c6-ef079fc5b6fe no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:45:09.354: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4611" for this suite. 03/13/23 19:45:09.359
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] KubeletManagedEtcHosts
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:45:09.373
Mar 13 19:45:09.374: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts 03/13/23 19:45:09.375
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:09.399
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:09.405
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/metrics/init/init.go:31
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63
STEP: Setting up the test 03/13/23 19:45:09.414
STEP: Creating hostNetwork=false pod 03/13/23 19:45:09.414
Mar 13 19:45:09.445: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "e2e-kubelet-etc-hosts-2971" to be "running and ready"
Mar 13 19:45:09.450: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.824055ms
Mar 13 19:45:09.450: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:45:11.457: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.011986655s
Mar 13 19:45:11.457: INFO: The phase of Pod test-pod is Running (Ready = true)
Mar 13 19:45:11.457: INFO: Pod "test-pod" satisfied condition "running and ready"
STEP: Creating hostNetwork=true pod 03/13/23 19:45:11.464
Mar 13 19:45:11.472: INFO: Waiting up to 5m0s for pod "test-host-network-pod" in namespace "e2e-kubelet-etc-hosts-2971" to be "running and ready"
Mar 13 19:45:11.478: INFO: Pod "test-host-network-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.480075ms
Mar 13 19:45:11.478: INFO: The phase of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:45:13.495: INFO: Pod "test-host-network-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.022545569s
Mar 13 19:45:13.495: INFO: The phase of Pod test-host-network-pod is Running (Ready = true)
Mar 13 19:45:13.495: INFO: Pod "test-host-network-pod" satisfied condition "running and ready"
STEP: Running the test 03/13/23 19:45:13.5
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false 03/13/23 19:45:13.5
Mar 13 19:45:13.501: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:45:13.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:45:13.501: INFO: ExecWithOptions: Clientset creation
Mar 13 19:45:13.502: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Mar 13 19:45:13.651: INFO: Exec stderr: ""
Mar 13 19:45:13.651: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:45:13.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:45:13.652: INFO: ExecWithOptions: Clientset creation
Mar 13 19:45:13.652: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Mar 13 19:45:13.791: INFO: Exec stderr: ""
Mar 13 19:45:13.792: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:45:13.792: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:45:13.793: INFO: ExecWithOptions: Clientset creation
Mar 13 19:45:13.794: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Mar 13 19:45:13.923: INFO: Exec stderr: ""
Mar 13 19:45:13.923: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:45:13.923: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:45:13.924: INFO: ExecWithOptions: Clientset creation
Mar 13 19:45:13.924: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Mar 13 19:45:14.051: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount 03/13/23 19:45:14.051
Mar 13 19:45:14.051: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:45:14.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:45:14.052: INFO: ExecWithOptions: Clientset creation
Mar 13 19:45:14.052: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Mar 13 19:45:14.159: INFO: Exec stderr: ""
Mar 13 19:45:14.159: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:45:14.159: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:45:14.160: INFO: ExecWithOptions: Clientset creation
Mar 13 19:45:14.160: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Mar 13 19:45:14.257: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true 03/13/23 19:45:14.257
Mar 13 19:45:14.257: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:45:14.257: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:45:14.258: INFO: ExecWithOptions: Clientset creation
Mar 13 19:45:14.258: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Mar 13 19:45:14.400: INFO: Exec stderr: ""
Mar 13 19:45:14.400: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:45:14.400: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:45:14.401: INFO: ExecWithOptions: Clientset creation
Mar 13 19:45:14.401: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Mar 13 19:45:14.504: INFO: Exec stderr: ""
Mar 13 19:45:14.504: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:45:14.504: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:45:14.505: INFO: ExecWithOptions: Clientset creation
Mar 13 19:45:14.505: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Mar 13 19:45:14.626: INFO: Exec stderr: ""
Mar 13 19:45:14.626: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:45:14.627: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:45:14.627: INFO: ExecWithOptions: Clientset creation
Mar 13 19:45:14.627: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Mar 13 19:45:14.769: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/node/init/init.go:32
Mar 13 19:45:14.770: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  tear down framework | framework.go:193
STEP: Destroying namespace "e2e-kubelet-etc-hosts-2971" for this suite. 03/13/23 19:45:14.78
------------------------------
â€¢ [SLOW TEST] [5.423 seconds]
[sig-node] KubeletManagedEtcHosts
test/e2e/common/node/framework.go:23
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] KubeletManagedEtcHosts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:45:09.373
    Mar 13 19:45:09.374: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts 03/13/23 19:45:09.375
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:09.399
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:09.405
    [BeforeEach] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/metrics/init/init.go:31
    [It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet_etc_hosts.go:63
    STEP: Setting up the test 03/13/23 19:45:09.414
    STEP: Creating hostNetwork=false pod 03/13/23 19:45:09.414
    Mar 13 19:45:09.445: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "e2e-kubelet-etc-hosts-2971" to be "running and ready"
    Mar 13 19:45:09.450: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.824055ms
    Mar 13 19:45:09.450: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:45:11.457: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.011986655s
    Mar 13 19:45:11.457: INFO: The phase of Pod test-pod is Running (Ready = true)
    Mar 13 19:45:11.457: INFO: Pod "test-pod" satisfied condition "running and ready"
    STEP: Creating hostNetwork=true pod 03/13/23 19:45:11.464
    Mar 13 19:45:11.472: INFO: Waiting up to 5m0s for pod "test-host-network-pod" in namespace "e2e-kubelet-etc-hosts-2971" to be "running and ready"
    Mar 13 19:45:11.478: INFO: Pod "test-host-network-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.480075ms
    Mar 13 19:45:11.478: INFO: The phase of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:45:13.495: INFO: Pod "test-host-network-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.022545569s
    Mar 13 19:45:13.495: INFO: The phase of Pod test-host-network-pod is Running (Ready = true)
    Mar 13 19:45:13.495: INFO: Pod "test-host-network-pod" satisfied condition "running and ready"
    STEP: Running the test 03/13/23 19:45:13.5
    STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false 03/13/23 19:45:13.5
    Mar 13 19:45:13.501: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:45:13.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:45:13.501: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:45:13.502: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Mar 13 19:45:13.651: INFO: Exec stderr: ""
    Mar 13 19:45:13.651: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:45:13.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:45:13.652: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:45:13.652: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Mar 13 19:45:13.791: INFO: Exec stderr: ""
    Mar 13 19:45:13.792: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:45:13.792: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:45:13.793: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:45:13.794: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Mar 13 19:45:13.923: INFO: Exec stderr: ""
    Mar 13 19:45:13.923: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:45:13.923: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:45:13.924: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:45:13.924: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Mar 13 19:45:14.051: INFO: Exec stderr: ""
    STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount 03/13/23 19:45:14.051
    Mar 13 19:45:14.051: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:45:14.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:45:14.052: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:45:14.052: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
    Mar 13 19:45:14.159: INFO: Exec stderr: ""
    Mar 13 19:45:14.159: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:45:14.159: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:45:14.160: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:45:14.160: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
    Mar 13 19:45:14.257: INFO: Exec stderr: ""
    STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true 03/13/23 19:45:14.257
    Mar 13 19:45:14.257: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:45:14.257: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:45:14.258: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:45:14.258: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Mar 13 19:45:14.400: INFO: Exec stderr: ""
    Mar 13 19:45:14.400: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:45:14.400: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:45:14.401: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:45:14.401: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Mar 13 19:45:14.504: INFO: Exec stderr: ""
    Mar 13 19:45:14.504: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:45:14.504: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:45:14.505: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:45:14.505: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Mar 13 19:45:14.626: INFO: Exec stderr: ""
    Mar 13 19:45:14.626: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2971 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:45:14.627: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:45:14.627: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:45:14.627: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2971/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Mar 13 19:45:14.769: INFO: Exec stderr: ""
    [AfterEach] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:45:14.770: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      tear down framework | framework.go:193
    STEP: Destroying namespace "e2e-kubelet-etc-hosts-2971" for this suite. 03/13/23 19:45:14.78
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:45:14.806
Mar 13 19:45:14.806: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pods 03/13/23 19:45:14.808
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:14.842
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:14.848
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845
STEP: Create set of pods 03/13/23 19:45:14.853
Mar 13 19:45:14.863: INFO: created test-pod-1
Mar 13 19:45:14.873: INFO: created test-pod-2
Mar 13 19:45:14.881: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running 03/13/23 19:45:14.881
Mar 13 19:45:14.881: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-5940' to be running and ready
Mar 13 19:45:14.892: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Mar 13 19:45:14.892: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Mar 13 19:45:14.893: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Mar 13 19:45:14.893: INFO: 0 / 3 pods in namespace 'pods-5940' are running and ready (0 seconds elapsed)
Mar 13 19:45:14.893: INFO: expected 0 pod replicas in namespace 'pods-5940', 0 are Running and Ready.
Mar 13 19:45:14.893: INFO: POD         NODE                             PHASE    GRACE  CONDITIONS
Mar 13 19:45:14.893: INFO: test-pod-1  vke-automated-test-51df1d4fb06e  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC  }]
Mar 13 19:45:14.893: INFO: test-pod-2  vke-automated-test-f5b1d7d2d722  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC  }]
Mar 13 19:45:14.893: INFO: test-pod-3  vke-automated-test-f5b1d7d2d722  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC  }]
Mar 13 19:45:14.893: INFO: 
Mar 13 19:45:16.916: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Mar 13 19:45:16.916: INFO: 2 / 3 pods in namespace 'pods-5940' are running and ready (2 seconds elapsed)
Mar 13 19:45:16.916: INFO: expected 0 pod replicas in namespace 'pods-5940', 0 are Running and Ready.
Mar 13 19:45:16.916: INFO: POD         NODE                             PHASE    GRACE  CONDITIONS
Mar 13 19:45:16.916: INFO: test-pod-3  vke-automated-test-f5b1d7d2d722  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC  }]
Mar 13 19:45:16.917: INFO: 
Mar 13 19:45:18.903: INFO: 3 / 3 pods in namespace 'pods-5940' are running and ready (4 seconds elapsed)
Mar 13 19:45:18.903: INFO: expected 0 pod replicas in namespace 'pods-5940', 0 are Running and Ready.
STEP: waiting for all pods to be deleted 03/13/23 19:45:18.916
Mar 13 19:45:18.921: INFO: Pod quantity 3 is different from expected quantity 0
Mar 13 19:45:19.930: INFO: Pod quantity 2 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar 13 19:45:20.931: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-5940" for this suite. 03/13/23 19:45:20.935
------------------------------
â€¢ [SLOW TEST] [6.133 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:45:14.806
    Mar 13 19:45:14.806: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pods 03/13/23 19:45:14.808
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:14.842
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:14.848
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should delete a collection of pods [Conformance]
      test/e2e/common/node/pods.go:845
    STEP: Create set of pods 03/13/23 19:45:14.853
    Mar 13 19:45:14.863: INFO: created test-pod-1
    Mar 13 19:45:14.873: INFO: created test-pod-2
    Mar 13 19:45:14.881: INFO: created test-pod-3
    STEP: waiting for all 3 pods to be running 03/13/23 19:45:14.881
    Mar 13 19:45:14.881: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-5940' to be running and ready
    Mar 13 19:45:14.892: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Mar 13 19:45:14.892: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Mar 13 19:45:14.893: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Mar 13 19:45:14.893: INFO: 0 / 3 pods in namespace 'pods-5940' are running and ready (0 seconds elapsed)
    Mar 13 19:45:14.893: INFO: expected 0 pod replicas in namespace 'pods-5940', 0 are Running and Ready.
    Mar 13 19:45:14.893: INFO: POD         NODE                             PHASE    GRACE  CONDITIONS
    Mar 13 19:45:14.893: INFO: test-pod-1  vke-automated-test-51df1d4fb06e  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC  }]
    Mar 13 19:45:14.893: INFO: test-pod-2  vke-automated-test-f5b1d7d2d722  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC  }]
    Mar 13 19:45:14.893: INFO: test-pod-3  vke-automated-test-f5b1d7d2d722  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC  }]
    Mar 13 19:45:14.893: INFO: 
    Mar 13 19:45:16.916: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Mar 13 19:45:16.916: INFO: 2 / 3 pods in namespace 'pods-5940' are running and ready (2 seconds elapsed)
    Mar 13 19:45:16.916: INFO: expected 0 pod replicas in namespace 'pods-5940', 0 are Running and Ready.
    Mar 13 19:45:16.916: INFO: POD         NODE                             PHASE    GRACE  CONDITIONS
    Mar 13 19:45:16.916: INFO: test-pod-3  vke-automated-test-f5b1d7d2d722  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 19:45:14 +0000 UTC  }]
    Mar 13 19:45:16.917: INFO: 
    Mar 13 19:45:18.903: INFO: 3 / 3 pods in namespace 'pods-5940' are running and ready (4 seconds elapsed)
    Mar 13 19:45:18.903: INFO: expected 0 pod replicas in namespace 'pods-5940', 0 are Running and Ready.
    STEP: waiting for all pods to be deleted 03/13/23 19:45:18.916
    Mar 13 19:45:18.921: INFO: Pod quantity 3 is different from expected quantity 0
    Mar 13 19:45:19.930: INFO: Pod quantity 2 is different from expected quantity 0
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:45:20.931: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-5940" for this suite. 03/13/23 19:45:20.935
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:45:20.941
Mar 13 19:45:20.941: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pods 03/13/23 19:45:20.942
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:20.954
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:20.958
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536
Mar 13 19:45:20.962: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: creating the pod 03/13/23 19:45:20.963
STEP: submitting the pod to kubernetes 03/13/23 19:45:20.963
Mar 13 19:45:20.969: INFO: Waiting up to 5m0s for pod "pod-exec-websocket-1719c66c-6445-4c9a-9a95-a2cf09630190" in namespace "pods-9256" to be "running and ready"
Mar 13 19:45:20.972: INFO: Pod "pod-exec-websocket-1719c66c-6445-4c9a-9a95-a2cf09630190": Phase="Pending", Reason="", readiness=false. Elapsed: 3.178239ms
Mar 13 19:45:20.974: INFO: The phase of Pod pod-exec-websocket-1719c66c-6445-4c9a-9a95-a2cf09630190 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:45:22.979: INFO: Pod "pod-exec-websocket-1719c66c-6445-4c9a-9a95-a2cf09630190": Phase="Running", Reason="", readiness=true. Elapsed: 2.010014034s
Mar 13 19:45:22.979: INFO: The phase of Pod pod-exec-websocket-1719c66c-6445-4c9a-9a95-a2cf09630190 is Running (Ready = true)
Mar 13 19:45:22.979: INFO: Pod "pod-exec-websocket-1719c66c-6445-4c9a-9a95-a2cf09630190" satisfied condition "running and ready"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar 13 19:45:23.073: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-9256" for this suite. 03/13/23 19:45:23.077
------------------------------
â€¢ [2.142 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:45:20.941
    Mar 13 19:45:20.941: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pods 03/13/23 19:45:20.942
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:20.954
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:20.958
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should support remote command execution over websockets [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:536
    Mar 13 19:45:20.962: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: creating the pod 03/13/23 19:45:20.963
    STEP: submitting the pod to kubernetes 03/13/23 19:45:20.963
    Mar 13 19:45:20.969: INFO: Waiting up to 5m0s for pod "pod-exec-websocket-1719c66c-6445-4c9a-9a95-a2cf09630190" in namespace "pods-9256" to be "running and ready"
    Mar 13 19:45:20.972: INFO: Pod "pod-exec-websocket-1719c66c-6445-4c9a-9a95-a2cf09630190": Phase="Pending", Reason="", readiness=false. Elapsed: 3.178239ms
    Mar 13 19:45:20.974: INFO: The phase of Pod pod-exec-websocket-1719c66c-6445-4c9a-9a95-a2cf09630190 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:45:22.979: INFO: Pod "pod-exec-websocket-1719c66c-6445-4c9a-9a95-a2cf09630190": Phase="Running", Reason="", readiness=true. Elapsed: 2.010014034s
    Mar 13 19:45:22.979: INFO: The phase of Pod pod-exec-websocket-1719c66c-6445-4c9a-9a95-a2cf09630190 is Running (Ready = true)
    Mar 13 19:45:22.979: INFO: Pod "pod-exec-websocket-1719c66c-6445-4c9a-9a95-a2cf09630190" satisfied condition "running and ready"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:45:23.073: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-9256" for this suite. 03/13/23 19:45:23.077
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:45:23.085
Mar 13 19:45:23.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 19:45:23.086
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:23.095
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:23.097
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 19:45:23.109
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:45:23.751
STEP: Deploying the webhook pod 03/13/23 19:45:23.76
STEP: Wait for the deployment to be ready 03/13/23 19:45:23.788
Mar 13 19:45:23.821: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 45, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 45, 23, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-865554f4d9\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 45, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 45, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 03/13/23 19:45:25.824
STEP: Verifying the service has paired with the endpoint 03/13/23 19:45:25.839
Mar 13 19:45:26.839: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221
Mar 13 19:45:26.844: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Registering the custom resource webhook via the AdmissionRegistration API 03/13/23 19:45:27.357
STEP: Creating a custom resource that should be denied by the webhook 03/13/23 19:45:27.38
STEP: Creating a custom resource whose deletion would be denied by the webhook 03/13/23 19:45:29.442
STEP: Updating the custom resource with disallowed data should be denied 03/13/23 19:45:29.45
STEP: Deleting the custom resource should be denied 03/13/23 19:45:29.461
STEP: Remove the offending key and value from the custom resource data 03/13/23 19:45:29.469
STEP: Deleting the updated custom resource should be successful 03/13/23 19:45:29.479
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:45:29.999: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-620" for this suite. 03/13/23 19:45:30.041
STEP: Destroying namespace "webhook-620-markers" for this suite. 03/13/23 19:45:30.047
------------------------------
â€¢ [SLOW TEST] [6.967 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:45:23.085
    Mar 13 19:45:23.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 19:45:23.086
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:23.095
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:23.097
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 19:45:23.109
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:45:23.751
    STEP: Deploying the webhook pod 03/13/23 19:45:23.76
    STEP: Wait for the deployment to be ready 03/13/23 19:45:23.788
    Mar 13 19:45:23.821: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 45, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 45, 23, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-865554f4d9\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 45, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 45, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 03/13/23 19:45:25.824
    STEP: Verifying the service has paired with the endpoint 03/13/23 19:45:25.839
    Mar 13 19:45:26.839: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny custom resource creation, update and deletion [Conformance]
      test/e2e/apimachinery/webhook.go:221
    Mar 13 19:45:26.844: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Registering the custom resource webhook via the AdmissionRegistration API 03/13/23 19:45:27.357
    STEP: Creating a custom resource that should be denied by the webhook 03/13/23 19:45:27.38
    STEP: Creating a custom resource whose deletion would be denied by the webhook 03/13/23 19:45:29.442
    STEP: Updating the custom resource with disallowed data should be denied 03/13/23 19:45:29.45
    STEP: Deleting the custom resource should be denied 03/13/23 19:45:29.461
    STEP: Remove the offending key and value from the custom resource data 03/13/23 19:45:29.469
    STEP: Deleting the updated custom resource should be successful 03/13/23 19:45:29.479
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:45:29.999: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-620" for this suite. 03/13/23 19:45:30.041
    STEP: Destroying namespace "webhook-620-markers" for this suite. 03/13/23 19:45:30.047
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] Security Context
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:45:30.054
Mar 13 19:45:30.054: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename security-context 03/13/23 19:45:30.055
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:30.073
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:30.077
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 03/13/23 19:45:30.081
Mar 13 19:45:30.087: INFO: Waiting up to 5m0s for pod "security-context-97c50988-f64a-4978-959f-02a372196eed" in namespace "security-context-97" to be "Succeeded or Failed"
Mar 13 19:45:30.097: INFO: Pod "security-context-97c50988-f64a-4978-959f-02a372196eed": Phase="Pending", Reason="", readiness=false. Elapsed: 9.4202ms
Mar 13 19:45:32.100: INFO: Pod "security-context-97c50988-f64a-4978-959f-02a372196eed": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013151603s
Mar 13 19:45:34.101: INFO: Pod "security-context-97c50988-f64a-4978-959f-02a372196eed": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013721071s
STEP: Saw pod success 03/13/23 19:45:34.101
Mar 13 19:45:34.101: INFO: Pod "security-context-97c50988-f64a-4978-959f-02a372196eed" satisfied condition "Succeeded or Failed"
Mar 13 19:45:34.105: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod security-context-97c50988-f64a-4978-959f-02a372196eed container test-container: <nil>
STEP: delete the pod 03/13/23 19:45:34.113
Mar 13 19:45:34.121: INFO: Waiting for pod security-context-97c50988-f64a-4978-959f-02a372196eed to disappear
Mar 13 19:45:34.125: INFO: Pod security-context-97c50988-f64a-4978-959f-02a372196eed no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Mar 13 19:45:34.125: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-97" for this suite. 03/13/23 19:45:34.129
------------------------------
â€¢ [4.079 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:45:30.054
    Mar 13 19:45:30.054: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename security-context 03/13/23 19:45:30.055
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:30.073
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:30.077
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
      test/e2e/node/security_context.go:164
    STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 03/13/23 19:45:30.081
    Mar 13 19:45:30.087: INFO: Waiting up to 5m0s for pod "security-context-97c50988-f64a-4978-959f-02a372196eed" in namespace "security-context-97" to be "Succeeded or Failed"
    Mar 13 19:45:30.097: INFO: Pod "security-context-97c50988-f64a-4978-959f-02a372196eed": Phase="Pending", Reason="", readiness=false. Elapsed: 9.4202ms
    Mar 13 19:45:32.100: INFO: Pod "security-context-97c50988-f64a-4978-959f-02a372196eed": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013151603s
    Mar 13 19:45:34.101: INFO: Pod "security-context-97c50988-f64a-4978-959f-02a372196eed": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013721071s
    STEP: Saw pod success 03/13/23 19:45:34.101
    Mar 13 19:45:34.101: INFO: Pod "security-context-97c50988-f64a-4978-959f-02a372196eed" satisfied condition "Succeeded or Failed"
    Mar 13 19:45:34.105: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod security-context-97c50988-f64a-4978-959f-02a372196eed container test-container: <nil>
    STEP: delete the pod 03/13/23 19:45:34.113
    Mar 13 19:45:34.121: INFO: Waiting for pod security-context-97c50988-f64a-4978-959f-02a372196eed to disappear
    Mar 13 19:45:34.125: INFO: Pod security-context-97c50988-f64a-4978-959f-02a372196eed no longer exists
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:45:34.125: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-97" for this suite. 03/13/23 19:45:34.129
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] Service endpoints latency
  should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59
[BeforeEach] [sig-network] Service endpoints latency
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:45:34.133
Mar 13 19:45:34.134: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename svc-latency 03/13/23 19:45:34.134
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:34.145
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:34.15
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/metrics/init/init.go:31
[It] should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59
Mar 13 19:45:34.153: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: creating replication controller svc-latency-rc in namespace svc-latency-8120 03/13/23 19:45:34.154
I0313 19:45:34.160399      21 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8120, replica count: 1
I0313 19:45:35.210989      21 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0313 19:45:36.211415      21 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar 13 19:45:36.323: INFO: Created: latency-svc-m8kp9
Mar 13 19:45:36.328: INFO: Got endpoints: latency-svc-m8kp9 [16.157264ms]
Mar 13 19:45:36.341: INFO: Created: latency-svc-vmvsg
Mar 13 19:45:36.345: INFO: Got endpoints: latency-svc-vmvsg [15.532141ms]
Mar 13 19:45:36.351: INFO: Created: latency-svc-ntz9s
Mar 13 19:45:36.353: INFO: Got endpoints: latency-svc-ntz9s [24.015194ms]
Mar 13 19:45:36.356: INFO: Created: latency-svc-qskxn
Mar 13 19:45:36.359: INFO: Got endpoints: latency-svc-qskxn [29.788668ms]
Mar 13 19:45:36.366: INFO: Created: latency-svc-99nc5
Mar 13 19:45:36.369: INFO: Got endpoints: latency-svc-99nc5 [39.819612ms]
Mar 13 19:45:36.373: INFO: Created: latency-svc-z2k9f
Mar 13 19:45:36.378: INFO: Got endpoints: latency-svc-z2k9f [48.011132ms]
Mar 13 19:45:36.383: INFO: Created: latency-svc-mc4lw
Mar 13 19:45:36.386: INFO: Got endpoints: latency-svc-mc4lw [55.594737ms]
Mar 13 19:45:36.390: INFO: Created: latency-svc-nn97t
Mar 13 19:45:36.395: INFO: Got endpoints: latency-svc-nn97t [65.025208ms]
Mar 13 19:45:36.396: INFO: Created: latency-svc-fv694
Mar 13 19:45:36.398: INFO: Got endpoints: latency-svc-fv694 [67.487266ms]
Mar 13 19:45:36.405: INFO: Created: latency-svc-mkc4q
Mar 13 19:45:36.408: INFO: Got endpoints: latency-svc-mkc4q [78.006738ms]
Mar 13 19:45:36.411: INFO: Created: latency-svc-h8ff7
Mar 13 19:45:36.413: INFO: Got endpoints: latency-svc-h8ff7 [83.040946ms]
Mar 13 19:45:36.419: INFO: Created: latency-svc-6f6vd
Mar 13 19:45:36.421: INFO: Got endpoints: latency-svc-6f6vd [90.623518ms]
Mar 13 19:45:36.427: INFO: Created: latency-svc-ss8kh
Mar 13 19:45:36.430: INFO: Got endpoints: latency-svc-ss8kh [100.164728ms]
Mar 13 19:45:36.441: INFO: Created: latency-svc-ljfrq
Mar 13 19:45:36.444: INFO: Got endpoints: latency-svc-ljfrq [113.136271ms]
Mar 13 19:45:36.446: INFO: Created: latency-svc-q5jlm
Mar 13 19:45:36.450: INFO: Got endpoints: latency-svc-q5jlm [118.821478ms]
Mar 13 19:45:36.451: INFO: Created: latency-svc-sbjs8
Mar 13 19:45:36.456: INFO: Got endpoints: latency-svc-sbjs8 [125.965194ms]
Mar 13 19:45:36.458: INFO: Created: latency-svc-h2zq6
Mar 13 19:45:36.461: INFO: Got endpoints: latency-svc-h2zq6 [115.606766ms]
Mar 13 19:45:36.465: INFO: Created: latency-svc-hhfr5
Mar 13 19:45:36.468: INFO: Got endpoints: latency-svc-hhfr5 [115.146874ms]
Mar 13 19:45:36.472: INFO: Created: latency-svc-9m7l8
Mar 13 19:45:36.474: INFO: Got endpoints: latency-svc-9m7l8 [114.60395ms]
Mar 13 19:45:36.476: INFO: Created: latency-svc-pv5ck
Mar 13 19:45:36.479: INFO: Got endpoints: latency-svc-pv5ck [109.698005ms]
Mar 13 19:45:36.485: INFO: Created: latency-svc-86j5x
Mar 13 19:45:36.505: INFO: Got endpoints: latency-svc-86j5x [126.655774ms]
Mar 13 19:45:36.509: INFO: Created: latency-svc-k4vd4
Mar 13 19:45:36.511: INFO: Got endpoints: latency-svc-k4vd4 [124.891067ms]
Mar 13 19:45:36.514: INFO: Created: latency-svc-vp7r4
Mar 13 19:45:36.516: INFO: Got endpoints: latency-svc-vp7r4 [121.209765ms]
Mar 13 19:45:36.523: INFO: Created: latency-svc-hvcf7
Mar 13 19:45:36.526: INFO: Got endpoints: latency-svc-hvcf7 [128.059365ms]
Mar 13 19:45:36.541: INFO: Created: latency-svc-zcqd8
Mar 13 19:45:36.545: INFO: Got endpoints: latency-svc-zcqd8 [136.134293ms]
Mar 13 19:45:36.548: INFO: Created: latency-svc-djhm8
Mar 13 19:45:36.552: INFO: Got endpoints: latency-svc-djhm8 [138.291794ms]
Mar 13 19:45:36.559: INFO: Created: latency-svc-5r2dh
Mar 13 19:45:36.564: INFO: Got endpoints: latency-svc-5r2dh [142.535508ms]
Mar 13 19:45:36.565: INFO: Created: latency-svc-6cdl7
Mar 13 19:45:36.567: INFO: Got endpoints: latency-svc-6cdl7 [137.327564ms]
Mar 13 19:45:36.572: INFO: Created: latency-svc-mqtpv
Mar 13 19:45:36.575: INFO: Got endpoints: latency-svc-mqtpv [131.150085ms]
Mar 13 19:45:36.580: INFO: Created: latency-svc-kb7mm
Mar 13 19:45:36.582: INFO: Got endpoints: latency-svc-kb7mm [131.943189ms]
Mar 13 19:45:36.585: INFO: Created: latency-svc-p7g6j
Mar 13 19:45:36.587: INFO: Got endpoints: latency-svc-p7g6j [131.312237ms]
Mar 13 19:45:36.591: INFO: Created: latency-svc-rgs2x
Mar 13 19:45:36.594: INFO: Got endpoints: latency-svc-rgs2x [133.121995ms]
Mar 13 19:45:36.599: INFO: Created: latency-svc-fbs5n
Mar 13 19:45:36.600: INFO: Got endpoints: latency-svc-fbs5n [131.589465ms]
Mar 13 19:45:36.609: INFO: Created: latency-svc-whsbj
Mar 13 19:45:36.612: INFO: Got endpoints: latency-svc-whsbj [137.711217ms]
Mar 13 19:45:36.616: INFO: Created: latency-svc-pqptx
Mar 13 19:45:36.617: INFO: Created: latency-svc-4q8kp
Mar 13 19:45:36.618: INFO: Got endpoints: latency-svc-pqptx [138.992499ms]
Mar 13 19:45:36.627: INFO: Created: latency-svc-c5xw9
Mar 13 19:45:36.629: INFO: Got endpoints: latency-svc-4q8kp [124.463581ms]
Mar 13 19:45:36.632: INFO: Created: latency-svc-pn266
Mar 13 19:45:36.644: INFO: Created: latency-svc-h57dm
Mar 13 19:45:36.651: INFO: Created: latency-svc-8lbvm
Mar 13 19:45:36.663: INFO: Created: latency-svc-2c5fh
Mar 13 19:45:36.667: INFO: Created: latency-svc-phhml
Mar 13 19:45:36.674: INFO: Created: latency-svc-vvbwk
Mar 13 19:45:36.681: INFO: Got endpoints: latency-svc-c5xw9 [169.907894ms]
Mar 13 19:45:36.685: INFO: Created: latency-svc-vkcq9
Mar 13 19:45:36.690: INFO: Created: latency-svc-pj66b
Mar 13 19:45:36.697: INFO: Created: latency-svc-hq7tm
Mar 13 19:45:36.702: INFO: Created: latency-svc-x9jfr
Mar 13 19:45:36.709: INFO: Created: latency-svc-bftkp
Mar 13 19:45:36.718: INFO: Created: latency-svc-9ksq5
Mar 13 19:45:36.727: INFO: Created: latency-svc-bzjtg
Mar 13 19:45:36.730: INFO: Got endpoints: latency-svc-pn266 [213.61915ms]
Mar 13 19:45:36.733: INFO: Created: latency-svc-kbxlr
Mar 13 19:45:36.749: INFO: Created: latency-svc-75xc4
Mar 13 19:45:36.753: INFO: Created: latency-svc-m549p
Mar 13 19:45:36.776: INFO: Got endpoints: latency-svc-h57dm [249.623018ms]
Mar 13 19:45:36.790: INFO: Created: latency-svc-hkpsw
Mar 13 19:45:36.828: INFO: Got endpoints: latency-svc-8lbvm [283.295453ms]
Mar 13 19:45:36.838: INFO: Created: latency-svc-7vt9z
Mar 13 19:45:36.876: INFO: Got endpoints: latency-svc-2c5fh [324.213631ms]
Mar 13 19:45:36.887: INFO: Created: latency-svc-8p6gj
Mar 13 19:45:36.926: INFO: Got endpoints: latency-svc-phhml [361.966873ms]
Mar 13 19:45:36.939: INFO: Created: latency-svc-8rmjd
Mar 13 19:45:36.978: INFO: Got endpoints: latency-svc-vvbwk [410.047252ms]
Mar 13 19:45:36.988: INFO: Created: latency-svc-ndxnc
Mar 13 19:45:37.027: INFO: Got endpoints: latency-svc-vkcq9 [452.056867ms]
Mar 13 19:45:37.038: INFO: Created: latency-svc-wnjvz
Mar 13 19:45:37.077: INFO: Got endpoints: latency-svc-pj66b [495.677764ms]
Mar 13 19:45:37.087: INFO: Created: latency-svc-qdmgr
Mar 13 19:45:37.127: INFO: Got endpoints: latency-svc-hq7tm [539.019957ms]
Mar 13 19:45:37.138: INFO: Created: latency-svc-87zvp
Mar 13 19:45:37.178: INFO: Got endpoints: latency-svc-x9jfr [583.64344ms]
Mar 13 19:45:37.189: INFO: Created: latency-svc-w2qmx
Mar 13 19:45:37.228: INFO: Got endpoints: latency-svc-bftkp [627.957871ms]
Mar 13 19:45:37.238: INFO: Created: latency-svc-plg7n
Mar 13 19:45:37.277: INFO: Got endpoints: latency-svc-9ksq5 [664.743889ms]
Mar 13 19:45:37.287: INFO: Created: latency-svc-g9755
Mar 13 19:45:37.328: INFO: Got endpoints: latency-svc-bzjtg [710.227379ms]
Mar 13 19:45:37.342: INFO: Created: latency-svc-bnn9k
Mar 13 19:45:37.378: INFO: Got endpoints: latency-svc-kbxlr [748.544253ms]
Mar 13 19:45:37.389: INFO: Created: latency-svc-tqx84
Mar 13 19:45:37.427: INFO: Got endpoints: latency-svc-75xc4 [746.385317ms]
Mar 13 19:45:37.448: INFO: Created: latency-svc-rhmr8
Mar 13 19:45:37.478: INFO: Got endpoints: latency-svc-m549p [747.943738ms]
Mar 13 19:45:37.490: INFO: Created: latency-svc-hcjgt
Mar 13 19:45:37.527: INFO: Got endpoints: latency-svc-hkpsw [751.04606ms]
Mar 13 19:45:37.538: INFO: Created: latency-svc-84877
Mar 13 19:45:37.577: INFO: Got endpoints: latency-svc-7vt9z [748.255562ms]
Mar 13 19:45:37.586: INFO: Created: latency-svc-vhk8t
Mar 13 19:45:37.628: INFO: Got endpoints: latency-svc-8p6gj [752.242176ms]
Mar 13 19:45:37.640: INFO: Created: latency-svc-4cbvs
Mar 13 19:45:37.678: INFO: Got endpoints: latency-svc-8rmjd [752.194704ms]
Mar 13 19:45:37.690: INFO: Created: latency-svc-dx26j
Mar 13 19:45:37.728: INFO: Got endpoints: latency-svc-ndxnc [750.681222ms]
Mar 13 19:45:37.738: INFO: Created: latency-svc-bktzg
Mar 13 19:45:37.777: INFO: Got endpoints: latency-svc-wnjvz [749.768624ms]
Mar 13 19:45:37.789: INFO: Created: latency-svc-lwngd
Mar 13 19:45:37.826: INFO: Got endpoints: latency-svc-qdmgr [748.622885ms]
Mar 13 19:45:37.838: INFO: Created: latency-svc-66dtd
Mar 13 19:45:37.877: INFO: Got endpoints: latency-svc-87zvp [750.515414ms]
Mar 13 19:45:37.889: INFO: Created: latency-svc-f868h
Mar 13 19:45:37.927: INFO: Got endpoints: latency-svc-w2qmx [749.662968ms]
Mar 13 19:45:37.940: INFO: Created: latency-svc-8r9zf
Mar 13 19:45:37.977: INFO: Got endpoints: latency-svc-plg7n [749.817656ms]
Mar 13 19:45:37.987: INFO: Created: latency-svc-74fkh
Mar 13 19:45:38.027: INFO: Got endpoints: latency-svc-g9755 [749.689514ms]
Mar 13 19:45:38.053: INFO: Created: latency-svc-zz85q
Mar 13 19:45:38.081: INFO: Got endpoints: latency-svc-bnn9k [753.105158ms]
Mar 13 19:45:38.095: INFO: Created: latency-svc-ksb46
Mar 13 19:45:38.130: INFO: Got endpoints: latency-svc-tqx84 [751.198167ms]
Mar 13 19:45:38.139: INFO: Created: latency-svc-9qmnq
Mar 13 19:45:38.178: INFO: Got endpoints: latency-svc-rhmr8 [750.44457ms]
Mar 13 19:45:38.187: INFO: Created: latency-svc-twdlv
Mar 13 19:45:38.226: INFO: Got endpoints: latency-svc-hcjgt [747.527886ms]
Mar 13 19:45:38.234: INFO: Created: latency-svc-kj29l
Mar 13 19:45:38.277: INFO: Got endpoints: latency-svc-84877 [748.903473ms]
Mar 13 19:45:38.288: INFO: Created: latency-svc-dxtcs
Mar 13 19:45:38.328: INFO: Got endpoints: latency-svc-vhk8t [751.164587ms]
Mar 13 19:45:38.338: INFO: Created: latency-svc-kw98n
Mar 13 19:45:38.377: INFO: Got endpoints: latency-svc-4cbvs [748.206106ms]
Mar 13 19:45:38.385: INFO: Created: latency-svc-qcw9s
Mar 13 19:45:38.427: INFO: Got endpoints: latency-svc-dx26j [748.499087ms]
Mar 13 19:45:38.436: INFO: Created: latency-svc-m9jx7
Mar 13 19:45:38.476: INFO: Got endpoints: latency-svc-bktzg [747.831081ms]
Mar 13 19:45:38.485: INFO: Created: latency-svc-h2m98
Mar 13 19:45:38.535: INFO: Got endpoints: latency-svc-lwngd [757.762384ms]
Mar 13 19:45:38.546: INFO: Created: latency-svc-m4dhd
Mar 13 19:45:38.576: INFO: Got endpoints: latency-svc-66dtd [749.914062ms]
Mar 13 19:45:38.584: INFO: Created: latency-svc-n4v28
Mar 13 19:45:38.627: INFO: Got endpoints: latency-svc-f868h [748.847291ms]
Mar 13 19:45:38.641: INFO: Created: latency-svc-n6fbx
Mar 13 19:45:38.676: INFO: Got endpoints: latency-svc-8r9zf [748.847904ms]
Mar 13 19:45:38.684: INFO: Created: latency-svc-glwks
Mar 13 19:45:38.726: INFO: Got endpoints: latency-svc-74fkh [748.080433ms]
Mar 13 19:45:38.735: INFO: Created: latency-svc-92rfn
Mar 13 19:45:38.776: INFO: Got endpoints: latency-svc-zz85q [749.813174ms]
Mar 13 19:45:38.784: INFO: Created: latency-svc-st9sv
Mar 13 19:45:38.827: INFO: Got endpoints: latency-svc-ksb46 [745.191138ms]
Mar 13 19:45:38.835: INFO: Created: latency-svc-pshkv
Mar 13 19:45:38.877: INFO: Got endpoints: latency-svc-9qmnq [747.145221ms]
Mar 13 19:45:38.886: INFO: Created: latency-svc-4vjbq
Mar 13 19:45:38.928: INFO: Got endpoints: latency-svc-twdlv [749.820253ms]
Mar 13 19:45:38.937: INFO: Created: latency-svc-vz4mr
Mar 13 19:45:38.977: INFO: Got endpoints: latency-svc-kj29l [750.80175ms]
Mar 13 19:45:38.995: INFO: Created: latency-svc-598nc
Mar 13 19:45:39.027: INFO: Got endpoints: latency-svc-dxtcs [750.465988ms]
Mar 13 19:45:39.036: INFO: Created: latency-svc-cbhlk
Mar 13 19:45:39.077: INFO: Got endpoints: latency-svc-kw98n [749.538236ms]
Mar 13 19:45:39.090: INFO: Created: latency-svc-n4mjx
Mar 13 19:45:39.126: INFO: Got endpoints: latency-svc-qcw9s [749.685312ms]
Mar 13 19:45:39.136: INFO: Created: latency-svc-h9mfk
Mar 13 19:45:39.176: INFO: Got endpoints: latency-svc-m9jx7 [748.32958ms]
Mar 13 19:45:39.185: INFO: Created: latency-svc-x4f87
Mar 13 19:45:39.227: INFO: Got endpoints: latency-svc-h2m98 [750.53144ms]
Mar 13 19:45:39.235: INFO: Created: latency-svc-8ml2c
Mar 13 19:45:39.277: INFO: Got endpoints: latency-svc-m4dhd [741.189951ms]
Mar 13 19:45:39.286: INFO: Created: latency-svc-7wn6d
Mar 13 19:45:39.328: INFO: Got endpoints: latency-svc-n4v28 [751.475605ms]
Mar 13 19:45:39.338: INFO: Created: latency-svc-t5cdk
Mar 13 19:45:39.377: INFO: Got endpoints: latency-svc-n6fbx [749.606226ms]
Mar 13 19:45:39.386: INFO: Created: latency-svc-mkrb7
Mar 13 19:45:39.427: INFO: Got endpoints: latency-svc-glwks [750.682009ms]
Mar 13 19:45:39.437: INFO: Created: latency-svc-9d2pt
Mar 13 19:45:39.477: INFO: Got endpoints: latency-svc-92rfn [751.012119ms]
Mar 13 19:45:39.487: INFO: Created: latency-svc-wcds5
Mar 13 19:45:39.526: INFO: Got endpoints: latency-svc-st9sv [749.8659ms]
Mar 13 19:45:39.536: INFO: Created: latency-svc-btvn8
Mar 13 19:45:39.576: INFO: Got endpoints: latency-svc-pshkv [749.463499ms]
Mar 13 19:45:39.585: INFO: Created: latency-svc-sjc72
Mar 13 19:45:39.627: INFO: Got endpoints: latency-svc-4vjbq [749.290012ms]
Mar 13 19:45:39.637: INFO: Created: latency-svc-cvj7m
Mar 13 19:45:39.684: INFO: Got endpoints: latency-svc-vz4mr [756.065933ms]
Mar 13 19:45:39.697: INFO: Created: latency-svc-nxzqj
Mar 13 19:45:39.727: INFO: Got endpoints: latency-svc-598nc [749.615064ms]
Mar 13 19:45:39.736: INFO: Created: latency-svc-zwdrr
Mar 13 19:45:39.777: INFO: Got endpoints: latency-svc-cbhlk [749.408647ms]
Mar 13 19:45:39.785: INFO: Created: latency-svc-j6pzw
Mar 13 19:45:39.827: INFO: Got endpoints: latency-svc-n4mjx [749.746312ms]
Mar 13 19:45:39.837: INFO: Created: latency-svc-qpdtx
Mar 13 19:45:39.881: INFO: Got endpoints: latency-svc-h9mfk [753.836703ms]
Mar 13 19:45:39.895: INFO: Created: latency-svc-t2t5t
Mar 13 19:45:39.928: INFO: Got endpoints: latency-svc-x4f87 [752.152445ms]
Mar 13 19:45:39.937: INFO: Created: latency-svc-qx89l
Mar 13 19:45:39.977: INFO: Got endpoints: latency-svc-8ml2c [750.008411ms]
Mar 13 19:45:39.989: INFO: Created: latency-svc-cdpbs
Mar 13 19:45:40.027: INFO: Got endpoints: latency-svc-7wn6d [750.627247ms]
Mar 13 19:45:40.038: INFO: Created: latency-svc-sz5vw
Mar 13 19:45:40.078: INFO: Got endpoints: latency-svc-t5cdk [749.856245ms]
Mar 13 19:45:40.086: INFO: Created: latency-svc-lmw4h
Mar 13 19:45:40.127: INFO: Got endpoints: latency-svc-mkrb7 [749.942946ms]
Mar 13 19:45:40.137: INFO: Created: latency-svc-5v8w8
Mar 13 19:45:40.176: INFO: Got endpoints: latency-svc-9d2pt [749.325761ms]
Mar 13 19:45:40.189: INFO: Created: latency-svc-xp9vv
Mar 13 19:45:40.227: INFO: Got endpoints: latency-svc-wcds5 [750.230984ms]
Mar 13 19:45:40.237: INFO: Created: latency-svc-tp5hv
Mar 13 19:45:40.277: INFO: Got endpoints: latency-svc-btvn8 [750.415981ms]
Mar 13 19:45:40.285: INFO: Created: latency-svc-f7vff
Mar 13 19:45:40.329: INFO: Got endpoints: latency-svc-sjc72 [752.171185ms]
Mar 13 19:45:40.338: INFO: Created: latency-svc-8f66q
Mar 13 19:45:40.377: INFO: Got endpoints: latency-svc-cvj7m [749.865427ms]
Mar 13 19:45:40.387: INFO: Created: latency-svc-r7fts
Mar 13 19:45:40.428: INFO: Got endpoints: latency-svc-nxzqj [744.505522ms]
Mar 13 19:45:40.440: INFO: Created: latency-svc-wjdsv
Mar 13 19:45:40.477: INFO: Got endpoints: latency-svc-zwdrr [750.367168ms]
Mar 13 19:45:40.486: INFO: Created: latency-svc-qmznk
Mar 13 19:45:40.527: INFO: Got endpoints: latency-svc-j6pzw [749.948261ms]
Mar 13 19:45:40.536: INFO: Created: latency-svc-wrblr
Mar 13 19:45:40.577: INFO: Got endpoints: latency-svc-qpdtx [749.89748ms]
Mar 13 19:45:40.592: INFO: Created: latency-svc-gpbxp
Mar 13 19:45:40.627: INFO: Got endpoints: latency-svc-t2t5t [745.969465ms]
Mar 13 19:45:40.638: INFO: Created: latency-svc-6wtkn
Mar 13 19:45:40.678: INFO: Got endpoints: latency-svc-qx89l [750.107916ms]
Mar 13 19:45:40.687: INFO: Created: latency-svc-r4grn
Mar 13 19:45:40.729: INFO: Got endpoints: latency-svc-cdpbs [751.827078ms]
Mar 13 19:45:40.762: INFO: Created: latency-svc-ckhmd
Mar 13 19:45:40.794: INFO: Got endpoints: latency-svc-sz5vw [766.178078ms]
Mar 13 19:45:40.808: INFO: Created: latency-svc-4tg46
Mar 13 19:45:40.827: INFO: Got endpoints: latency-svc-lmw4h [748.353461ms]
Mar 13 19:45:40.836: INFO: Created: latency-svc-tgmzh
Mar 13 19:45:40.877: INFO: Got endpoints: latency-svc-5v8w8 [749.930659ms]
Mar 13 19:45:40.886: INFO: Created: latency-svc-6fwz9
Mar 13 19:45:40.949: INFO: Got endpoints: latency-svc-xp9vv [772.545416ms]
Mar 13 19:45:40.962: INFO: Created: latency-svc-p5585
Mar 13 19:45:40.977: INFO: Got endpoints: latency-svc-tp5hv [749.870436ms]
Mar 13 19:45:40.990: INFO: Created: latency-svc-gvp9x
Mar 13 19:45:41.026: INFO: Got endpoints: latency-svc-f7vff [748.641709ms]
Mar 13 19:45:41.035: INFO: Created: latency-svc-k82g6
Mar 13 19:45:41.077: INFO: Got endpoints: latency-svc-8f66q [747.934936ms]
Mar 13 19:45:41.084: INFO: Created: latency-svc-nhz96
Mar 13 19:45:41.131: INFO: Got endpoints: latency-svc-r7fts [754.373887ms]
Mar 13 19:45:41.141: INFO: Created: latency-svc-pwwc8
Mar 13 19:45:41.178: INFO: Got endpoints: latency-svc-wjdsv [748.929652ms]
Mar 13 19:45:41.188: INFO: Created: latency-svc-cssqr
Mar 13 19:45:41.227: INFO: Got endpoints: latency-svc-qmznk [749.836574ms]
Mar 13 19:45:41.238: INFO: Created: latency-svc-gp9lt
Mar 13 19:45:41.277: INFO: Got endpoints: latency-svc-wrblr [749.419113ms]
Mar 13 19:45:41.288: INFO: Created: latency-svc-c8prx
Mar 13 19:45:41.326: INFO: Got endpoints: latency-svc-gpbxp [748.716364ms]
Mar 13 19:45:41.345: INFO: Created: latency-svc-56hbb
Mar 13 19:45:41.376: INFO: Got endpoints: latency-svc-6wtkn [749.656986ms]
Mar 13 19:45:41.388: INFO: Created: latency-svc-w8g8m
Mar 13 19:45:41.428: INFO: Got endpoints: latency-svc-r4grn [750.404761ms]
Mar 13 19:45:41.437: INFO: Created: latency-svc-dkplf
Mar 13 19:45:41.477: INFO: Got endpoints: latency-svc-ckhmd [747.78281ms]
Mar 13 19:45:41.485: INFO: Created: latency-svc-xszfg
Mar 13 19:45:41.526: INFO: Got endpoints: latency-svc-4tg46 [731.884792ms]
Mar 13 19:45:41.536: INFO: Created: latency-svc-sgsfj
Mar 13 19:45:41.577: INFO: Got endpoints: latency-svc-tgmzh [750.33555ms]
Mar 13 19:45:41.586: INFO: Created: latency-svc-mkbj2
Mar 13 19:45:41.627: INFO: Got endpoints: latency-svc-6fwz9 [749.568161ms]
Mar 13 19:45:41.637: INFO: Created: latency-svc-gjd4h
Mar 13 19:45:41.676: INFO: Got endpoints: latency-svc-p5585 [727.262478ms]
Mar 13 19:45:41.688: INFO: Created: latency-svc-8zzfv
Mar 13 19:45:41.727: INFO: Got endpoints: latency-svc-gvp9x [747.178096ms]
Mar 13 19:45:41.736: INFO: Created: latency-svc-lr22h
Mar 13 19:45:41.776: INFO: Got endpoints: latency-svc-k82g6 [750.038847ms]
Mar 13 19:45:41.786: INFO: Created: latency-svc-lv5fr
Mar 13 19:45:41.827: INFO: Got endpoints: latency-svc-nhz96 [750.375577ms]
Mar 13 19:45:41.837: INFO: Created: latency-svc-vmtdm
Mar 13 19:45:41.877: INFO: Got endpoints: latency-svc-pwwc8 [746.013682ms]
Mar 13 19:45:41.886: INFO: Created: latency-svc-9qrmq
Mar 13 19:45:41.930: INFO: Got endpoints: latency-svc-cssqr [752.077228ms]
Mar 13 19:45:41.939: INFO: Created: latency-svc-47gjd
Mar 13 19:45:41.976: INFO: Got endpoints: latency-svc-gp9lt [748.764988ms]
Mar 13 19:45:41.984: INFO: Created: latency-svc-9nlck
Mar 13 19:45:42.030: INFO: Got endpoints: latency-svc-c8prx [752.525296ms]
Mar 13 19:45:42.039: INFO: Created: latency-svc-zzbtp
Mar 13 19:45:42.088: INFO: Got endpoints: latency-svc-56hbb [761.819367ms]
Mar 13 19:45:42.100: INFO: Created: latency-svc-82t2w
Mar 13 19:45:42.127: INFO: Got endpoints: latency-svc-w8g8m [750.448484ms]
Mar 13 19:45:42.137: INFO: Created: latency-svc-7lppf
Mar 13 19:45:42.178: INFO: Got endpoints: latency-svc-dkplf [748.985929ms]
Mar 13 19:45:42.188: INFO: Created: latency-svc-bvhjm
Mar 13 19:45:42.228: INFO: Got endpoints: latency-svc-xszfg [751.311281ms]
Mar 13 19:45:42.239: INFO: Created: latency-svc-fgklb
Mar 13 19:45:42.276: INFO: Got endpoints: latency-svc-sgsfj [750.361251ms]
Mar 13 19:45:42.287: INFO: Created: latency-svc-8d7th
Mar 13 19:45:42.326: INFO: Got endpoints: latency-svc-mkbj2 [749.314658ms]
Mar 13 19:45:42.338: INFO: Created: latency-svc-z4hrm
Mar 13 19:45:42.376: INFO: Got endpoints: latency-svc-gjd4h [748.737877ms]
Mar 13 19:45:42.384: INFO: Created: latency-svc-b6hcr
Mar 13 19:45:42.427: INFO: Got endpoints: latency-svc-8zzfv [750.644714ms]
Mar 13 19:45:42.440: INFO: Created: latency-svc-fvl4c
Mar 13 19:45:42.477: INFO: Got endpoints: latency-svc-lr22h [749.92926ms]
Mar 13 19:45:42.489: INFO: Created: latency-svc-jz969
Mar 13 19:45:42.527: INFO: Got endpoints: latency-svc-lv5fr [751.093544ms]
Mar 13 19:45:42.536: INFO: Created: latency-svc-5744d
Mar 13 19:45:42.578: INFO: Got endpoints: latency-svc-vmtdm [750.810893ms]
Mar 13 19:45:42.590: INFO: Created: latency-svc-ghlmx
Mar 13 19:45:42.626: INFO: Got endpoints: latency-svc-9qrmq [749.015739ms]
Mar 13 19:45:42.643: INFO: Created: latency-svc-th4nq
Mar 13 19:45:42.677: INFO: Got endpoints: latency-svc-47gjd [747.463203ms]
Mar 13 19:45:42.686: INFO: Created: latency-svc-vznrf
Mar 13 19:45:42.728: INFO: Got endpoints: latency-svc-9nlck [752.135327ms]
Mar 13 19:45:42.737: INFO: Created: latency-svc-j8prg
Mar 13 19:45:42.777: INFO: Got endpoints: latency-svc-zzbtp [747.677621ms]
Mar 13 19:45:42.787: INFO: Created: latency-svc-qvp7s
Mar 13 19:45:42.827: INFO: Got endpoints: latency-svc-82t2w [739.326799ms]
Mar 13 19:45:42.837: INFO: Created: latency-svc-5dhlh
Mar 13 19:45:42.878: INFO: Got endpoints: latency-svc-7lppf [751.216435ms]
Mar 13 19:45:42.890: INFO: Created: latency-svc-pxs2r
Mar 13 19:45:42.926: INFO: Got endpoints: latency-svc-bvhjm [748.272065ms]
Mar 13 19:45:42.937: INFO: Created: latency-svc-bv4dx
Mar 13 19:45:42.978: INFO: Got endpoints: latency-svc-fgklb [749.713294ms]
Mar 13 19:45:42.987: INFO: Created: latency-svc-fswsk
Mar 13 19:45:43.028: INFO: Got endpoints: latency-svc-8d7th [751.598938ms]
Mar 13 19:45:43.039: INFO: Created: latency-svc-5lw65
Mar 13 19:45:43.077: INFO: Got endpoints: latency-svc-z4hrm [750.084081ms]
Mar 13 19:45:43.086: INFO: Created: latency-svc-cq9fr
Mar 13 19:45:43.128: INFO: Got endpoints: latency-svc-b6hcr [752.040843ms]
Mar 13 19:45:43.138: INFO: Created: latency-svc-jzc4r
Mar 13 19:45:43.178: INFO: Got endpoints: latency-svc-fvl4c [750.445622ms]
Mar 13 19:45:43.187: INFO: Created: latency-svc-2r4xh
Mar 13 19:45:43.227: INFO: Got endpoints: latency-svc-jz969 [749.944512ms]
Mar 13 19:45:43.241: INFO: Created: latency-svc-dctb4
Mar 13 19:45:43.280: INFO: Got endpoints: latency-svc-5744d [753.022004ms]
Mar 13 19:45:43.290: INFO: Created: latency-svc-x2ch7
Mar 13 19:45:43.326: INFO: Got endpoints: latency-svc-ghlmx [748.124572ms]
Mar 13 19:45:43.335: INFO: Created: latency-svc-8rflt
Mar 13 19:45:43.377: INFO: Got endpoints: latency-svc-th4nq [749.733351ms]
Mar 13 19:45:43.386: INFO: Created: latency-svc-qgv4r
Mar 13 19:45:43.427: INFO: Got endpoints: latency-svc-vznrf [749.896169ms]
Mar 13 19:45:43.436: INFO: Created: latency-svc-26gr6
Mar 13 19:45:43.476: INFO: Got endpoints: latency-svc-j8prg [747.936975ms]
Mar 13 19:45:43.486: INFO: Created: latency-svc-j7f6r
Mar 13 19:45:43.527: INFO: Got endpoints: latency-svc-qvp7s [749.610703ms]
Mar 13 19:45:43.536: INFO: Created: latency-svc-gw9fz
Mar 13 19:45:43.578: INFO: Got endpoints: latency-svc-5dhlh [750.607657ms]
Mar 13 19:45:43.587: INFO: Created: latency-svc-ksns6
Mar 13 19:45:43.627: INFO: Got endpoints: latency-svc-pxs2r [748.199871ms]
Mar 13 19:45:43.641: INFO: Created: latency-svc-q6s2r
Mar 13 19:45:43.680: INFO: Got endpoints: latency-svc-bv4dx [753.988765ms]
Mar 13 19:45:43.695: INFO: Created: latency-svc-txb6n
Mar 13 19:45:43.729: INFO: Got endpoints: latency-svc-fswsk [751.32605ms]
Mar 13 19:45:43.745: INFO: Created: latency-svc-5ghl6
Mar 13 19:45:43.776: INFO: Got endpoints: latency-svc-5lw65 [747.699381ms]
Mar 13 19:45:43.787: INFO: Created: latency-svc-m6b5w
Mar 13 19:45:43.826: INFO: Got endpoints: latency-svc-cq9fr [749.673359ms]
Mar 13 19:45:43.836: INFO: Created: latency-svc-hcm24
Mar 13 19:45:43.877: INFO: Got endpoints: latency-svc-jzc4r [749.04997ms]
Mar 13 19:45:43.889: INFO: Created: latency-svc-j8gxf
Mar 13 19:45:43.928: INFO: Got endpoints: latency-svc-2r4xh [749.915689ms]
Mar 13 19:45:43.938: INFO: Created: latency-svc-8p5p4
Mar 13 19:45:43.977: INFO: Got endpoints: latency-svc-dctb4 [749.845948ms]
Mar 13 19:45:43.988: INFO: Created: latency-svc-2fx76
Mar 13 19:45:44.026: INFO: Got endpoints: latency-svc-x2ch7 [746.355988ms]
Mar 13 19:45:44.037: INFO: Created: latency-svc-l772x
Mar 13 19:45:44.077: INFO: Got endpoints: latency-svc-8rflt [750.93591ms]
Mar 13 19:45:44.087: INFO: Created: latency-svc-s7wmb
Mar 13 19:45:44.127: INFO: Got endpoints: latency-svc-qgv4r [750.270744ms]
Mar 13 19:45:44.139: INFO: Created: latency-svc-f5dmq
Mar 13 19:45:44.177: INFO: Got endpoints: latency-svc-26gr6 [749.58913ms]
Mar 13 19:45:44.227: INFO: Got endpoints: latency-svc-j7f6r [750.205482ms]
Mar 13 19:45:44.278: INFO: Got endpoints: latency-svc-gw9fz [751.134353ms]
Mar 13 19:45:44.328: INFO: Got endpoints: latency-svc-ksns6 [749.496455ms]
Mar 13 19:45:44.377: INFO: Got endpoints: latency-svc-q6s2r [750.017476ms]
Mar 13 19:45:44.427: INFO: Got endpoints: latency-svc-txb6n [746.68335ms]
Mar 13 19:45:44.477: INFO: Got endpoints: latency-svc-5ghl6 [747.308929ms]
Mar 13 19:45:44.528: INFO: Got endpoints: latency-svc-m6b5w [751.676156ms]
Mar 13 19:45:44.577: INFO: Got endpoints: latency-svc-hcm24 [750.240689ms]
Mar 13 19:45:44.628: INFO: Got endpoints: latency-svc-j8gxf [750.191373ms]
Mar 13 19:45:44.677: INFO: Got endpoints: latency-svc-8p5p4 [749.278249ms]
Mar 13 19:45:44.728: INFO: Got endpoints: latency-svc-2fx76 [749.874555ms]
Mar 13 19:45:44.778: INFO: Got endpoints: latency-svc-l772x [751.162251ms]
Mar 13 19:45:44.826: INFO: Got endpoints: latency-svc-s7wmb [748.977222ms]
Mar 13 19:45:44.876: INFO: Got endpoints: latency-svc-f5dmq [748.814998ms]
Mar 13 19:45:44.877: INFO: Latencies: [15.532141ms 24.015194ms 29.788668ms 39.819612ms 48.011132ms 55.594737ms 65.025208ms 67.487266ms 78.006738ms 83.040946ms 90.623518ms 100.164728ms 109.698005ms 113.136271ms 114.60395ms 115.146874ms 115.606766ms 118.821478ms 121.209765ms 124.463581ms 124.891067ms 125.965194ms 126.655774ms 128.059365ms 131.150085ms 131.312237ms 131.589465ms 131.943189ms 133.121995ms 136.134293ms 137.327564ms 137.711217ms 138.291794ms 138.992499ms 142.535508ms 169.907894ms 213.61915ms 249.623018ms 283.295453ms 324.213631ms 361.966873ms 410.047252ms 452.056867ms 495.677764ms 539.019957ms 583.64344ms 627.957871ms 664.743889ms 710.227379ms 727.262478ms 731.884792ms 739.326799ms 741.189951ms 744.505522ms 745.191138ms 745.969465ms 746.013682ms 746.355988ms 746.385317ms 746.68335ms 747.145221ms 747.178096ms 747.308929ms 747.463203ms 747.527886ms 747.677621ms 747.699381ms 747.78281ms 747.831081ms 747.934936ms 747.936975ms 747.943738ms 748.080433ms 748.124572ms 748.199871ms 748.206106ms 748.255562ms 748.272065ms 748.32958ms 748.353461ms 748.499087ms 748.544253ms 748.622885ms 748.641709ms 748.716364ms 748.737877ms 748.764988ms 748.814998ms 748.847291ms 748.847904ms 748.903473ms 748.929652ms 748.977222ms 748.985929ms 749.015739ms 749.04997ms 749.278249ms 749.290012ms 749.314658ms 749.325761ms 749.408647ms 749.419113ms 749.463499ms 749.496455ms 749.538236ms 749.568161ms 749.58913ms 749.606226ms 749.610703ms 749.615064ms 749.656986ms 749.662968ms 749.673359ms 749.685312ms 749.689514ms 749.713294ms 749.733351ms 749.746312ms 749.768624ms 749.813174ms 749.817656ms 749.820253ms 749.836574ms 749.845948ms 749.856245ms 749.865427ms 749.8659ms 749.870436ms 749.874555ms 749.896169ms 749.89748ms 749.914062ms 749.915689ms 749.92926ms 749.930659ms 749.942946ms 749.944512ms 749.948261ms 750.008411ms 750.017476ms 750.038847ms 750.084081ms 750.107916ms 750.191373ms 750.205482ms 750.230984ms 750.240689ms 750.270744ms 750.33555ms 750.361251ms 750.367168ms 750.375577ms 750.404761ms 750.415981ms 750.44457ms 750.445622ms 750.448484ms 750.465988ms 750.515414ms 750.53144ms 750.607657ms 750.627247ms 750.644714ms 750.681222ms 750.682009ms 750.80175ms 750.810893ms 750.93591ms 751.012119ms 751.04606ms 751.093544ms 751.134353ms 751.162251ms 751.164587ms 751.198167ms 751.216435ms 751.311281ms 751.32605ms 751.475605ms 751.598938ms 751.676156ms 751.827078ms 752.040843ms 752.077228ms 752.135327ms 752.152445ms 752.171185ms 752.194704ms 752.242176ms 752.525296ms 753.022004ms 753.105158ms 753.836703ms 753.988765ms 754.373887ms 756.065933ms 757.762384ms 761.819367ms 766.178078ms 772.545416ms]
Mar 13 19:45:44.877: INFO: 50 %ile: 749.408647ms
Mar 13 19:45:44.877: INFO: 90 %ile: 751.676156ms
Mar 13 19:45:44.877: INFO: 99 %ile: 766.178078ms
Mar 13 19:45:44.877: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/node/init/init.go:32
Mar 13 19:45:44.877: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  tear down framework | framework.go:193
STEP: Destroying namespace "svc-latency-8120" for this suite. 03/13/23 19:45:44.882
------------------------------
â€¢ [SLOW TEST] [10.753 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Service endpoints latency
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:45:34.133
    Mar 13 19:45:34.134: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename svc-latency 03/13/23 19:45:34.134
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:34.145
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:34.15
    [BeforeEach] [sig-network] Service endpoints latency
      test/e2e/framework/metrics/init/init.go:31
    [It] should not be very high  [Conformance]
      test/e2e/network/service_latency.go:59
    Mar 13 19:45:34.153: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: creating replication controller svc-latency-rc in namespace svc-latency-8120 03/13/23 19:45:34.154
    I0313 19:45:34.160399      21 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8120, replica count: 1
    I0313 19:45:35.210989      21 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0313 19:45:36.211415      21 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar 13 19:45:36.323: INFO: Created: latency-svc-m8kp9
    Mar 13 19:45:36.328: INFO: Got endpoints: latency-svc-m8kp9 [16.157264ms]
    Mar 13 19:45:36.341: INFO: Created: latency-svc-vmvsg
    Mar 13 19:45:36.345: INFO: Got endpoints: latency-svc-vmvsg [15.532141ms]
    Mar 13 19:45:36.351: INFO: Created: latency-svc-ntz9s
    Mar 13 19:45:36.353: INFO: Got endpoints: latency-svc-ntz9s [24.015194ms]
    Mar 13 19:45:36.356: INFO: Created: latency-svc-qskxn
    Mar 13 19:45:36.359: INFO: Got endpoints: latency-svc-qskxn [29.788668ms]
    Mar 13 19:45:36.366: INFO: Created: latency-svc-99nc5
    Mar 13 19:45:36.369: INFO: Got endpoints: latency-svc-99nc5 [39.819612ms]
    Mar 13 19:45:36.373: INFO: Created: latency-svc-z2k9f
    Mar 13 19:45:36.378: INFO: Got endpoints: latency-svc-z2k9f [48.011132ms]
    Mar 13 19:45:36.383: INFO: Created: latency-svc-mc4lw
    Mar 13 19:45:36.386: INFO: Got endpoints: latency-svc-mc4lw [55.594737ms]
    Mar 13 19:45:36.390: INFO: Created: latency-svc-nn97t
    Mar 13 19:45:36.395: INFO: Got endpoints: latency-svc-nn97t [65.025208ms]
    Mar 13 19:45:36.396: INFO: Created: latency-svc-fv694
    Mar 13 19:45:36.398: INFO: Got endpoints: latency-svc-fv694 [67.487266ms]
    Mar 13 19:45:36.405: INFO: Created: latency-svc-mkc4q
    Mar 13 19:45:36.408: INFO: Got endpoints: latency-svc-mkc4q [78.006738ms]
    Mar 13 19:45:36.411: INFO: Created: latency-svc-h8ff7
    Mar 13 19:45:36.413: INFO: Got endpoints: latency-svc-h8ff7 [83.040946ms]
    Mar 13 19:45:36.419: INFO: Created: latency-svc-6f6vd
    Mar 13 19:45:36.421: INFO: Got endpoints: latency-svc-6f6vd [90.623518ms]
    Mar 13 19:45:36.427: INFO: Created: latency-svc-ss8kh
    Mar 13 19:45:36.430: INFO: Got endpoints: latency-svc-ss8kh [100.164728ms]
    Mar 13 19:45:36.441: INFO: Created: latency-svc-ljfrq
    Mar 13 19:45:36.444: INFO: Got endpoints: latency-svc-ljfrq [113.136271ms]
    Mar 13 19:45:36.446: INFO: Created: latency-svc-q5jlm
    Mar 13 19:45:36.450: INFO: Got endpoints: latency-svc-q5jlm [118.821478ms]
    Mar 13 19:45:36.451: INFO: Created: latency-svc-sbjs8
    Mar 13 19:45:36.456: INFO: Got endpoints: latency-svc-sbjs8 [125.965194ms]
    Mar 13 19:45:36.458: INFO: Created: latency-svc-h2zq6
    Mar 13 19:45:36.461: INFO: Got endpoints: latency-svc-h2zq6 [115.606766ms]
    Mar 13 19:45:36.465: INFO: Created: latency-svc-hhfr5
    Mar 13 19:45:36.468: INFO: Got endpoints: latency-svc-hhfr5 [115.146874ms]
    Mar 13 19:45:36.472: INFO: Created: latency-svc-9m7l8
    Mar 13 19:45:36.474: INFO: Got endpoints: latency-svc-9m7l8 [114.60395ms]
    Mar 13 19:45:36.476: INFO: Created: latency-svc-pv5ck
    Mar 13 19:45:36.479: INFO: Got endpoints: latency-svc-pv5ck [109.698005ms]
    Mar 13 19:45:36.485: INFO: Created: latency-svc-86j5x
    Mar 13 19:45:36.505: INFO: Got endpoints: latency-svc-86j5x [126.655774ms]
    Mar 13 19:45:36.509: INFO: Created: latency-svc-k4vd4
    Mar 13 19:45:36.511: INFO: Got endpoints: latency-svc-k4vd4 [124.891067ms]
    Mar 13 19:45:36.514: INFO: Created: latency-svc-vp7r4
    Mar 13 19:45:36.516: INFO: Got endpoints: latency-svc-vp7r4 [121.209765ms]
    Mar 13 19:45:36.523: INFO: Created: latency-svc-hvcf7
    Mar 13 19:45:36.526: INFO: Got endpoints: latency-svc-hvcf7 [128.059365ms]
    Mar 13 19:45:36.541: INFO: Created: latency-svc-zcqd8
    Mar 13 19:45:36.545: INFO: Got endpoints: latency-svc-zcqd8 [136.134293ms]
    Mar 13 19:45:36.548: INFO: Created: latency-svc-djhm8
    Mar 13 19:45:36.552: INFO: Got endpoints: latency-svc-djhm8 [138.291794ms]
    Mar 13 19:45:36.559: INFO: Created: latency-svc-5r2dh
    Mar 13 19:45:36.564: INFO: Got endpoints: latency-svc-5r2dh [142.535508ms]
    Mar 13 19:45:36.565: INFO: Created: latency-svc-6cdl7
    Mar 13 19:45:36.567: INFO: Got endpoints: latency-svc-6cdl7 [137.327564ms]
    Mar 13 19:45:36.572: INFO: Created: latency-svc-mqtpv
    Mar 13 19:45:36.575: INFO: Got endpoints: latency-svc-mqtpv [131.150085ms]
    Mar 13 19:45:36.580: INFO: Created: latency-svc-kb7mm
    Mar 13 19:45:36.582: INFO: Got endpoints: latency-svc-kb7mm [131.943189ms]
    Mar 13 19:45:36.585: INFO: Created: latency-svc-p7g6j
    Mar 13 19:45:36.587: INFO: Got endpoints: latency-svc-p7g6j [131.312237ms]
    Mar 13 19:45:36.591: INFO: Created: latency-svc-rgs2x
    Mar 13 19:45:36.594: INFO: Got endpoints: latency-svc-rgs2x [133.121995ms]
    Mar 13 19:45:36.599: INFO: Created: latency-svc-fbs5n
    Mar 13 19:45:36.600: INFO: Got endpoints: latency-svc-fbs5n [131.589465ms]
    Mar 13 19:45:36.609: INFO: Created: latency-svc-whsbj
    Mar 13 19:45:36.612: INFO: Got endpoints: latency-svc-whsbj [137.711217ms]
    Mar 13 19:45:36.616: INFO: Created: latency-svc-pqptx
    Mar 13 19:45:36.617: INFO: Created: latency-svc-4q8kp
    Mar 13 19:45:36.618: INFO: Got endpoints: latency-svc-pqptx [138.992499ms]
    Mar 13 19:45:36.627: INFO: Created: latency-svc-c5xw9
    Mar 13 19:45:36.629: INFO: Got endpoints: latency-svc-4q8kp [124.463581ms]
    Mar 13 19:45:36.632: INFO: Created: latency-svc-pn266
    Mar 13 19:45:36.644: INFO: Created: latency-svc-h57dm
    Mar 13 19:45:36.651: INFO: Created: latency-svc-8lbvm
    Mar 13 19:45:36.663: INFO: Created: latency-svc-2c5fh
    Mar 13 19:45:36.667: INFO: Created: latency-svc-phhml
    Mar 13 19:45:36.674: INFO: Created: latency-svc-vvbwk
    Mar 13 19:45:36.681: INFO: Got endpoints: latency-svc-c5xw9 [169.907894ms]
    Mar 13 19:45:36.685: INFO: Created: latency-svc-vkcq9
    Mar 13 19:45:36.690: INFO: Created: latency-svc-pj66b
    Mar 13 19:45:36.697: INFO: Created: latency-svc-hq7tm
    Mar 13 19:45:36.702: INFO: Created: latency-svc-x9jfr
    Mar 13 19:45:36.709: INFO: Created: latency-svc-bftkp
    Mar 13 19:45:36.718: INFO: Created: latency-svc-9ksq5
    Mar 13 19:45:36.727: INFO: Created: latency-svc-bzjtg
    Mar 13 19:45:36.730: INFO: Got endpoints: latency-svc-pn266 [213.61915ms]
    Mar 13 19:45:36.733: INFO: Created: latency-svc-kbxlr
    Mar 13 19:45:36.749: INFO: Created: latency-svc-75xc4
    Mar 13 19:45:36.753: INFO: Created: latency-svc-m549p
    Mar 13 19:45:36.776: INFO: Got endpoints: latency-svc-h57dm [249.623018ms]
    Mar 13 19:45:36.790: INFO: Created: latency-svc-hkpsw
    Mar 13 19:45:36.828: INFO: Got endpoints: latency-svc-8lbvm [283.295453ms]
    Mar 13 19:45:36.838: INFO: Created: latency-svc-7vt9z
    Mar 13 19:45:36.876: INFO: Got endpoints: latency-svc-2c5fh [324.213631ms]
    Mar 13 19:45:36.887: INFO: Created: latency-svc-8p6gj
    Mar 13 19:45:36.926: INFO: Got endpoints: latency-svc-phhml [361.966873ms]
    Mar 13 19:45:36.939: INFO: Created: latency-svc-8rmjd
    Mar 13 19:45:36.978: INFO: Got endpoints: latency-svc-vvbwk [410.047252ms]
    Mar 13 19:45:36.988: INFO: Created: latency-svc-ndxnc
    Mar 13 19:45:37.027: INFO: Got endpoints: latency-svc-vkcq9 [452.056867ms]
    Mar 13 19:45:37.038: INFO: Created: latency-svc-wnjvz
    Mar 13 19:45:37.077: INFO: Got endpoints: latency-svc-pj66b [495.677764ms]
    Mar 13 19:45:37.087: INFO: Created: latency-svc-qdmgr
    Mar 13 19:45:37.127: INFO: Got endpoints: latency-svc-hq7tm [539.019957ms]
    Mar 13 19:45:37.138: INFO: Created: latency-svc-87zvp
    Mar 13 19:45:37.178: INFO: Got endpoints: latency-svc-x9jfr [583.64344ms]
    Mar 13 19:45:37.189: INFO: Created: latency-svc-w2qmx
    Mar 13 19:45:37.228: INFO: Got endpoints: latency-svc-bftkp [627.957871ms]
    Mar 13 19:45:37.238: INFO: Created: latency-svc-plg7n
    Mar 13 19:45:37.277: INFO: Got endpoints: latency-svc-9ksq5 [664.743889ms]
    Mar 13 19:45:37.287: INFO: Created: latency-svc-g9755
    Mar 13 19:45:37.328: INFO: Got endpoints: latency-svc-bzjtg [710.227379ms]
    Mar 13 19:45:37.342: INFO: Created: latency-svc-bnn9k
    Mar 13 19:45:37.378: INFO: Got endpoints: latency-svc-kbxlr [748.544253ms]
    Mar 13 19:45:37.389: INFO: Created: latency-svc-tqx84
    Mar 13 19:45:37.427: INFO: Got endpoints: latency-svc-75xc4 [746.385317ms]
    Mar 13 19:45:37.448: INFO: Created: latency-svc-rhmr8
    Mar 13 19:45:37.478: INFO: Got endpoints: latency-svc-m549p [747.943738ms]
    Mar 13 19:45:37.490: INFO: Created: latency-svc-hcjgt
    Mar 13 19:45:37.527: INFO: Got endpoints: latency-svc-hkpsw [751.04606ms]
    Mar 13 19:45:37.538: INFO: Created: latency-svc-84877
    Mar 13 19:45:37.577: INFO: Got endpoints: latency-svc-7vt9z [748.255562ms]
    Mar 13 19:45:37.586: INFO: Created: latency-svc-vhk8t
    Mar 13 19:45:37.628: INFO: Got endpoints: latency-svc-8p6gj [752.242176ms]
    Mar 13 19:45:37.640: INFO: Created: latency-svc-4cbvs
    Mar 13 19:45:37.678: INFO: Got endpoints: latency-svc-8rmjd [752.194704ms]
    Mar 13 19:45:37.690: INFO: Created: latency-svc-dx26j
    Mar 13 19:45:37.728: INFO: Got endpoints: latency-svc-ndxnc [750.681222ms]
    Mar 13 19:45:37.738: INFO: Created: latency-svc-bktzg
    Mar 13 19:45:37.777: INFO: Got endpoints: latency-svc-wnjvz [749.768624ms]
    Mar 13 19:45:37.789: INFO: Created: latency-svc-lwngd
    Mar 13 19:45:37.826: INFO: Got endpoints: latency-svc-qdmgr [748.622885ms]
    Mar 13 19:45:37.838: INFO: Created: latency-svc-66dtd
    Mar 13 19:45:37.877: INFO: Got endpoints: latency-svc-87zvp [750.515414ms]
    Mar 13 19:45:37.889: INFO: Created: latency-svc-f868h
    Mar 13 19:45:37.927: INFO: Got endpoints: latency-svc-w2qmx [749.662968ms]
    Mar 13 19:45:37.940: INFO: Created: latency-svc-8r9zf
    Mar 13 19:45:37.977: INFO: Got endpoints: latency-svc-plg7n [749.817656ms]
    Mar 13 19:45:37.987: INFO: Created: latency-svc-74fkh
    Mar 13 19:45:38.027: INFO: Got endpoints: latency-svc-g9755 [749.689514ms]
    Mar 13 19:45:38.053: INFO: Created: latency-svc-zz85q
    Mar 13 19:45:38.081: INFO: Got endpoints: latency-svc-bnn9k [753.105158ms]
    Mar 13 19:45:38.095: INFO: Created: latency-svc-ksb46
    Mar 13 19:45:38.130: INFO: Got endpoints: latency-svc-tqx84 [751.198167ms]
    Mar 13 19:45:38.139: INFO: Created: latency-svc-9qmnq
    Mar 13 19:45:38.178: INFO: Got endpoints: latency-svc-rhmr8 [750.44457ms]
    Mar 13 19:45:38.187: INFO: Created: latency-svc-twdlv
    Mar 13 19:45:38.226: INFO: Got endpoints: latency-svc-hcjgt [747.527886ms]
    Mar 13 19:45:38.234: INFO: Created: latency-svc-kj29l
    Mar 13 19:45:38.277: INFO: Got endpoints: latency-svc-84877 [748.903473ms]
    Mar 13 19:45:38.288: INFO: Created: latency-svc-dxtcs
    Mar 13 19:45:38.328: INFO: Got endpoints: latency-svc-vhk8t [751.164587ms]
    Mar 13 19:45:38.338: INFO: Created: latency-svc-kw98n
    Mar 13 19:45:38.377: INFO: Got endpoints: latency-svc-4cbvs [748.206106ms]
    Mar 13 19:45:38.385: INFO: Created: latency-svc-qcw9s
    Mar 13 19:45:38.427: INFO: Got endpoints: latency-svc-dx26j [748.499087ms]
    Mar 13 19:45:38.436: INFO: Created: latency-svc-m9jx7
    Mar 13 19:45:38.476: INFO: Got endpoints: latency-svc-bktzg [747.831081ms]
    Mar 13 19:45:38.485: INFO: Created: latency-svc-h2m98
    Mar 13 19:45:38.535: INFO: Got endpoints: latency-svc-lwngd [757.762384ms]
    Mar 13 19:45:38.546: INFO: Created: latency-svc-m4dhd
    Mar 13 19:45:38.576: INFO: Got endpoints: latency-svc-66dtd [749.914062ms]
    Mar 13 19:45:38.584: INFO: Created: latency-svc-n4v28
    Mar 13 19:45:38.627: INFO: Got endpoints: latency-svc-f868h [748.847291ms]
    Mar 13 19:45:38.641: INFO: Created: latency-svc-n6fbx
    Mar 13 19:45:38.676: INFO: Got endpoints: latency-svc-8r9zf [748.847904ms]
    Mar 13 19:45:38.684: INFO: Created: latency-svc-glwks
    Mar 13 19:45:38.726: INFO: Got endpoints: latency-svc-74fkh [748.080433ms]
    Mar 13 19:45:38.735: INFO: Created: latency-svc-92rfn
    Mar 13 19:45:38.776: INFO: Got endpoints: latency-svc-zz85q [749.813174ms]
    Mar 13 19:45:38.784: INFO: Created: latency-svc-st9sv
    Mar 13 19:45:38.827: INFO: Got endpoints: latency-svc-ksb46 [745.191138ms]
    Mar 13 19:45:38.835: INFO: Created: latency-svc-pshkv
    Mar 13 19:45:38.877: INFO: Got endpoints: latency-svc-9qmnq [747.145221ms]
    Mar 13 19:45:38.886: INFO: Created: latency-svc-4vjbq
    Mar 13 19:45:38.928: INFO: Got endpoints: latency-svc-twdlv [749.820253ms]
    Mar 13 19:45:38.937: INFO: Created: latency-svc-vz4mr
    Mar 13 19:45:38.977: INFO: Got endpoints: latency-svc-kj29l [750.80175ms]
    Mar 13 19:45:38.995: INFO: Created: latency-svc-598nc
    Mar 13 19:45:39.027: INFO: Got endpoints: latency-svc-dxtcs [750.465988ms]
    Mar 13 19:45:39.036: INFO: Created: latency-svc-cbhlk
    Mar 13 19:45:39.077: INFO: Got endpoints: latency-svc-kw98n [749.538236ms]
    Mar 13 19:45:39.090: INFO: Created: latency-svc-n4mjx
    Mar 13 19:45:39.126: INFO: Got endpoints: latency-svc-qcw9s [749.685312ms]
    Mar 13 19:45:39.136: INFO: Created: latency-svc-h9mfk
    Mar 13 19:45:39.176: INFO: Got endpoints: latency-svc-m9jx7 [748.32958ms]
    Mar 13 19:45:39.185: INFO: Created: latency-svc-x4f87
    Mar 13 19:45:39.227: INFO: Got endpoints: latency-svc-h2m98 [750.53144ms]
    Mar 13 19:45:39.235: INFO: Created: latency-svc-8ml2c
    Mar 13 19:45:39.277: INFO: Got endpoints: latency-svc-m4dhd [741.189951ms]
    Mar 13 19:45:39.286: INFO: Created: latency-svc-7wn6d
    Mar 13 19:45:39.328: INFO: Got endpoints: latency-svc-n4v28 [751.475605ms]
    Mar 13 19:45:39.338: INFO: Created: latency-svc-t5cdk
    Mar 13 19:45:39.377: INFO: Got endpoints: latency-svc-n6fbx [749.606226ms]
    Mar 13 19:45:39.386: INFO: Created: latency-svc-mkrb7
    Mar 13 19:45:39.427: INFO: Got endpoints: latency-svc-glwks [750.682009ms]
    Mar 13 19:45:39.437: INFO: Created: latency-svc-9d2pt
    Mar 13 19:45:39.477: INFO: Got endpoints: latency-svc-92rfn [751.012119ms]
    Mar 13 19:45:39.487: INFO: Created: latency-svc-wcds5
    Mar 13 19:45:39.526: INFO: Got endpoints: latency-svc-st9sv [749.8659ms]
    Mar 13 19:45:39.536: INFO: Created: latency-svc-btvn8
    Mar 13 19:45:39.576: INFO: Got endpoints: latency-svc-pshkv [749.463499ms]
    Mar 13 19:45:39.585: INFO: Created: latency-svc-sjc72
    Mar 13 19:45:39.627: INFO: Got endpoints: latency-svc-4vjbq [749.290012ms]
    Mar 13 19:45:39.637: INFO: Created: latency-svc-cvj7m
    Mar 13 19:45:39.684: INFO: Got endpoints: latency-svc-vz4mr [756.065933ms]
    Mar 13 19:45:39.697: INFO: Created: latency-svc-nxzqj
    Mar 13 19:45:39.727: INFO: Got endpoints: latency-svc-598nc [749.615064ms]
    Mar 13 19:45:39.736: INFO: Created: latency-svc-zwdrr
    Mar 13 19:45:39.777: INFO: Got endpoints: latency-svc-cbhlk [749.408647ms]
    Mar 13 19:45:39.785: INFO: Created: latency-svc-j6pzw
    Mar 13 19:45:39.827: INFO: Got endpoints: latency-svc-n4mjx [749.746312ms]
    Mar 13 19:45:39.837: INFO: Created: latency-svc-qpdtx
    Mar 13 19:45:39.881: INFO: Got endpoints: latency-svc-h9mfk [753.836703ms]
    Mar 13 19:45:39.895: INFO: Created: latency-svc-t2t5t
    Mar 13 19:45:39.928: INFO: Got endpoints: latency-svc-x4f87 [752.152445ms]
    Mar 13 19:45:39.937: INFO: Created: latency-svc-qx89l
    Mar 13 19:45:39.977: INFO: Got endpoints: latency-svc-8ml2c [750.008411ms]
    Mar 13 19:45:39.989: INFO: Created: latency-svc-cdpbs
    Mar 13 19:45:40.027: INFO: Got endpoints: latency-svc-7wn6d [750.627247ms]
    Mar 13 19:45:40.038: INFO: Created: latency-svc-sz5vw
    Mar 13 19:45:40.078: INFO: Got endpoints: latency-svc-t5cdk [749.856245ms]
    Mar 13 19:45:40.086: INFO: Created: latency-svc-lmw4h
    Mar 13 19:45:40.127: INFO: Got endpoints: latency-svc-mkrb7 [749.942946ms]
    Mar 13 19:45:40.137: INFO: Created: latency-svc-5v8w8
    Mar 13 19:45:40.176: INFO: Got endpoints: latency-svc-9d2pt [749.325761ms]
    Mar 13 19:45:40.189: INFO: Created: latency-svc-xp9vv
    Mar 13 19:45:40.227: INFO: Got endpoints: latency-svc-wcds5 [750.230984ms]
    Mar 13 19:45:40.237: INFO: Created: latency-svc-tp5hv
    Mar 13 19:45:40.277: INFO: Got endpoints: latency-svc-btvn8 [750.415981ms]
    Mar 13 19:45:40.285: INFO: Created: latency-svc-f7vff
    Mar 13 19:45:40.329: INFO: Got endpoints: latency-svc-sjc72 [752.171185ms]
    Mar 13 19:45:40.338: INFO: Created: latency-svc-8f66q
    Mar 13 19:45:40.377: INFO: Got endpoints: latency-svc-cvj7m [749.865427ms]
    Mar 13 19:45:40.387: INFO: Created: latency-svc-r7fts
    Mar 13 19:45:40.428: INFO: Got endpoints: latency-svc-nxzqj [744.505522ms]
    Mar 13 19:45:40.440: INFO: Created: latency-svc-wjdsv
    Mar 13 19:45:40.477: INFO: Got endpoints: latency-svc-zwdrr [750.367168ms]
    Mar 13 19:45:40.486: INFO: Created: latency-svc-qmznk
    Mar 13 19:45:40.527: INFO: Got endpoints: latency-svc-j6pzw [749.948261ms]
    Mar 13 19:45:40.536: INFO: Created: latency-svc-wrblr
    Mar 13 19:45:40.577: INFO: Got endpoints: latency-svc-qpdtx [749.89748ms]
    Mar 13 19:45:40.592: INFO: Created: latency-svc-gpbxp
    Mar 13 19:45:40.627: INFO: Got endpoints: latency-svc-t2t5t [745.969465ms]
    Mar 13 19:45:40.638: INFO: Created: latency-svc-6wtkn
    Mar 13 19:45:40.678: INFO: Got endpoints: latency-svc-qx89l [750.107916ms]
    Mar 13 19:45:40.687: INFO: Created: latency-svc-r4grn
    Mar 13 19:45:40.729: INFO: Got endpoints: latency-svc-cdpbs [751.827078ms]
    Mar 13 19:45:40.762: INFO: Created: latency-svc-ckhmd
    Mar 13 19:45:40.794: INFO: Got endpoints: latency-svc-sz5vw [766.178078ms]
    Mar 13 19:45:40.808: INFO: Created: latency-svc-4tg46
    Mar 13 19:45:40.827: INFO: Got endpoints: latency-svc-lmw4h [748.353461ms]
    Mar 13 19:45:40.836: INFO: Created: latency-svc-tgmzh
    Mar 13 19:45:40.877: INFO: Got endpoints: latency-svc-5v8w8 [749.930659ms]
    Mar 13 19:45:40.886: INFO: Created: latency-svc-6fwz9
    Mar 13 19:45:40.949: INFO: Got endpoints: latency-svc-xp9vv [772.545416ms]
    Mar 13 19:45:40.962: INFO: Created: latency-svc-p5585
    Mar 13 19:45:40.977: INFO: Got endpoints: latency-svc-tp5hv [749.870436ms]
    Mar 13 19:45:40.990: INFO: Created: latency-svc-gvp9x
    Mar 13 19:45:41.026: INFO: Got endpoints: latency-svc-f7vff [748.641709ms]
    Mar 13 19:45:41.035: INFO: Created: latency-svc-k82g6
    Mar 13 19:45:41.077: INFO: Got endpoints: latency-svc-8f66q [747.934936ms]
    Mar 13 19:45:41.084: INFO: Created: latency-svc-nhz96
    Mar 13 19:45:41.131: INFO: Got endpoints: latency-svc-r7fts [754.373887ms]
    Mar 13 19:45:41.141: INFO: Created: latency-svc-pwwc8
    Mar 13 19:45:41.178: INFO: Got endpoints: latency-svc-wjdsv [748.929652ms]
    Mar 13 19:45:41.188: INFO: Created: latency-svc-cssqr
    Mar 13 19:45:41.227: INFO: Got endpoints: latency-svc-qmznk [749.836574ms]
    Mar 13 19:45:41.238: INFO: Created: latency-svc-gp9lt
    Mar 13 19:45:41.277: INFO: Got endpoints: latency-svc-wrblr [749.419113ms]
    Mar 13 19:45:41.288: INFO: Created: latency-svc-c8prx
    Mar 13 19:45:41.326: INFO: Got endpoints: latency-svc-gpbxp [748.716364ms]
    Mar 13 19:45:41.345: INFO: Created: latency-svc-56hbb
    Mar 13 19:45:41.376: INFO: Got endpoints: latency-svc-6wtkn [749.656986ms]
    Mar 13 19:45:41.388: INFO: Created: latency-svc-w8g8m
    Mar 13 19:45:41.428: INFO: Got endpoints: latency-svc-r4grn [750.404761ms]
    Mar 13 19:45:41.437: INFO: Created: latency-svc-dkplf
    Mar 13 19:45:41.477: INFO: Got endpoints: latency-svc-ckhmd [747.78281ms]
    Mar 13 19:45:41.485: INFO: Created: latency-svc-xszfg
    Mar 13 19:45:41.526: INFO: Got endpoints: latency-svc-4tg46 [731.884792ms]
    Mar 13 19:45:41.536: INFO: Created: latency-svc-sgsfj
    Mar 13 19:45:41.577: INFO: Got endpoints: latency-svc-tgmzh [750.33555ms]
    Mar 13 19:45:41.586: INFO: Created: latency-svc-mkbj2
    Mar 13 19:45:41.627: INFO: Got endpoints: latency-svc-6fwz9 [749.568161ms]
    Mar 13 19:45:41.637: INFO: Created: latency-svc-gjd4h
    Mar 13 19:45:41.676: INFO: Got endpoints: latency-svc-p5585 [727.262478ms]
    Mar 13 19:45:41.688: INFO: Created: latency-svc-8zzfv
    Mar 13 19:45:41.727: INFO: Got endpoints: latency-svc-gvp9x [747.178096ms]
    Mar 13 19:45:41.736: INFO: Created: latency-svc-lr22h
    Mar 13 19:45:41.776: INFO: Got endpoints: latency-svc-k82g6 [750.038847ms]
    Mar 13 19:45:41.786: INFO: Created: latency-svc-lv5fr
    Mar 13 19:45:41.827: INFO: Got endpoints: latency-svc-nhz96 [750.375577ms]
    Mar 13 19:45:41.837: INFO: Created: latency-svc-vmtdm
    Mar 13 19:45:41.877: INFO: Got endpoints: latency-svc-pwwc8 [746.013682ms]
    Mar 13 19:45:41.886: INFO: Created: latency-svc-9qrmq
    Mar 13 19:45:41.930: INFO: Got endpoints: latency-svc-cssqr [752.077228ms]
    Mar 13 19:45:41.939: INFO: Created: latency-svc-47gjd
    Mar 13 19:45:41.976: INFO: Got endpoints: latency-svc-gp9lt [748.764988ms]
    Mar 13 19:45:41.984: INFO: Created: latency-svc-9nlck
    Mar 13 19:45:42.030: INFO: Got endpoints: latency-svc-c8prx [752.525296ms]
    Mar 13 19:45:42.039: INFO: Created: latency-svc-zzbtp
    Mar 13 19:45:42.088: INFO: Got endpoints: latency-svc-56hbb [761.819367ms]
    Mar 13 19:45:42.100: INFO: Created: latency-svc-82t2w
    Mar 13 19:45:42.127: INFO: Got endpoints: latency-svc-w8g8m [750.448484ms]
    Mar 13 19:45:42.137: INFO: Created: latency-svc-7lppf
    Mar 13 19:45:42.178: INFO: Got endpoints: latency-svc-dkplf [748.985929ms]
    Mar 13 19:45:42.188: INFO: Created: latency-svc-bvhjm
    Mar 13 19:45:42.228: INFO: Got endpoints: latency-svc-xszfg [751.311281ms]
    Mar 13 19:45:42.239: INFO: Created: latency-svc-fgklb
    Mar 13 19:45:42.276: INFO: Got endpoints: latency-svc-sgsfj [750.361251ms]
    Mar 13 19:45:42.287: INFO: Created: latency-svc-8d7th
    Mar 13 19:45:42.326: INFO: Got endpoints: latency-svc-mkbj2 [749.314658ms]
    Mar 13 19:45:42.338: INFO: Created: latency-svc-z4hrm
    Mar 13 19:45:42.376: INFO: Got endpoints: latency-svc-gjd4h [748.737877ms]
    Mar 13 19:45:42.384: INFO: Created: latency-svc-b6hcr
    Mar 13 19:45:42.427: INFO: Got endpoints: latency-svc-8zzfv [750.644714ms]
    Mar 13 19:45:42.440: INFO: Created: latency-svc-fvl4c
    Mar 13 19:45:42.477: INFO: Got endpoints: latency-svc-lr22h [749.92926ms]
    Mar 13 19:45:42.489: INFO: Created: latency-svc-jz969
    Mar 13 19:45:42.527: INFO: Got endpoints: latency-svc-lv5fr [751.093544ms]
    Mar 13 19:45:42.536: INFO: Created: latency-svc-5744d
    Mar 13 19:45:42.578: INFO: Got endpoints: latency-svc-vmtdm [750.810893ms]
    Mar 13 19:45:42.590: INFO: Created: latency-svc-ghlmx
    Mar 13 19:45:42.626: INFO: Got endpoints: latency-svc-9qrmq [749.015739ms]
    Mar 13 19:45:42.643: INFO: Created: latency-svc-th4nq
    Mar 13 19:45:42.677: INFO: Got endpoints: latency-svc-47gjd [747.463203ms]
    Mar 13 19:45:42.686: INFO: Created: latency-svc-vznrf
    Mar 13 19:45:42.728: INFO: Got endpoints: latency-svc-9nlck [752.135327ms]
    Mar 13 19:45:42.737: INFO: Created: latency-svc-j8prg
    Mar 13 19:45:42.777: INFO: Got endpoints: latency-svc-zzbtp [747.677621ms]
    Mar 13 19:45:42.787: INFO: Created: latency-svc-qvp7s
    Mar 13 19:45:42.827: INFO: Got endpoints: latency-svc-82t2w [739.326799ms]
    Mar 13 19:45:42.837: INFO: Created: latency-svc-5dhlh
    Mar 13 19:45:42.878: INFO: Got endpoints: latency-svc-7lppf [751.216435ms]
    Mar 13 19:45:42.890: INFO: Created: latency-svc-pxs2r
    Mar 13 19:45:42.926: INFO: Got endpoints: latency-svc-bvhjm [748.272065ms]
    Mar 13 19:45:42.937: INFO: Created: latency-svc-bv4dx
    Mar 13 19:45:42.978: INFO: Got endpoints: latency-svc-fgklb [749.713294ms]
    Mar 13 19:45:42.987: INFO: Created: latency-svc-fswsk
    Mar 13 19:45:43.028: INFO: Got endpoints: latency-svc-8d7th [751.598938ms]
    Mar 13 19:45:43.039: INFO: Created: latency-svc-5lw65
    Mar 13 19:45:43.077: INFO: Got endpoints: latency-svc-z4hrm [750.084081ms]
    Mar 13 19:45:43.086: INFO: Created: latency-svc-cq9fr
    Mar 13 19:45:43.128: INFO: Got endpoints: latency-svc-b6hcr [752.040843ms]
    Mar 13 19:45:43.138: INFO: Created: latency-svc-jzc4r
    Mar 13 19:45:43.178: INFO: Got endpoints: latency-svc-fvl4c [750.445622ms]
    Mar 13 19:45:43.187: INFO: Created: latency-svc-2r4xh
    Mar 13 19:45:43.227: INFO: Got endpoints: latency-svc-jz969 [749.944512ms]
    Mar 13 19:45:43.241: INFO: Created: latency-svc-dctb4
    Mar 13 19:45:43.280: INFO: Got endpoints: latency-svc-5744d [753.022004ms]
    Mar 13 19:45:43.290: INFO: Created: latency-svc-x2ch7
    Mar 13 19:45:43.326: INFO: Got endpoints: latency-svc-ghlmx [748.124572ms]
    Mar 13 19:45:43.335: INFO: Created: latency-svc-8rflt
    Mar 13 19:45:43.377: INFO: Got endpoints: latency-svc-th4nq [749.733351ms]
    Mar 13 19:45:43.386: INFO: Created: latency-svc-qgv4r
    Mar 13 19:45:43.427: INFO: Got endpoints: latency-svc-vznrf [749.896169ms]
    Mar 13 19:45:43.436: INFO: Created: latency-svc-26gr6
    Mar 13 19:45:43.476: INFO: Got endpoints: latency-svc-j8prg [747.936975ms]
    Mar 13 19:45:43.486: INFO: Created: latency-svc-j7f6r
    Mar 13 19:45:43.527: INFO: Got endpoints: latency-svc-qvp7s [749.610703ms]
    Mar 13 19:45:43.536: INFO: Created: latency-svc-gw9fz
    Mar 13 19:45:43.578: INFO: Got endpoints: latency-svc-5dhlh [750.607657ms]
    Mar 13 19:45:43.587: INFO: Created: latency-svc-ksns6
    Mar 13 19:45:43.627: INFO: Got endpoints: latency-svc-pxs2r [748.199871ms]
    Mar 13 19:45:43.641: INFO: Created: latency-svc-q6s2r
    Mar 13 19:45:43.680: INFO: Got endpoints: latency-svc-bv4dx [753.988765ms]
    Mar 13 19:45:43.695: INFO: Created: latency-svc-txb6n
    Mar 13 19:45:43.729: INFO: Got endpoints: latency-svc-fswsk [751.32605ms]
    Mar 13 19:45:43.745: INFO: Created: latency-svc-5ghl6
    Mar 13 19:45:43.776: INFO: Got endpoints: latency-svc-5lw65 [747.699381ms]
    Mar 13 19:45:43.787: INFO: Created: latency-svc-m6b5w
    Mar 13 19:45:43.826: INFO: Got endpoints: latency-svc-cq9fr [749.673359ms]
    Mar 13 19:45:43.836: INFO: Created: latency-svc-hcm24
    Mar 13 19:45:43.877: INFO: Got endpoints: latency-svc-jzc4r [749.04997ms]
    Mar 13 19:45:43.889: INFO: Created: latency-svc-j8gxf
    Mar 13 19:45:43.928: INFO: Got endpoints: latency-svc-2r4xh [749.915689ms]
    Mar 13 19:45:43.938: INFO: Created: latency-svc-8p5p4
    Mar 13 19:45:43.977: INFO: Got endpoints: latency-svc-dctb4 [749.845948ms]
    Mar 13 19:45:43.988: INFO: Created: latency-svc-2fx76
    Mar 13 19:45:44.026: INFO: Got endpoints: latency-svc-x2ch7 [746.355988ms]
    Mar 13 19:45:44.037: INFO: Created: latency-svc-l772x
    Mar 13 19:45:44.077: INFO: Got endpoints: latency-svc-8rflt [750.93591ms]
    Mar 13 19:45:44.087: INFO: Created: latency-svc-s7wmb
    Mar 13 19:45:44.127: INFO: Got endpoints: latency-svc-qgv4r [750.270744ms]
    Mar 13 19:45:44.139: INFO: Created: latency-svc-f5dmq
    Mar 13 19:45:44.177: INFO: Got endpoints: latency-svc-26gr6 [749.58913ms]
    Mar 13 19:45:44.227: INFO: Got endpoints: latency-svc-j7f6r [750.205482ms]
    Mar 13 19:45:44.278: INFO: Got endpoints: latency-svc-gw9fz [751.134353ms]
    Mar 13 19:45:44.328: INFO: Got endpoints: latency-svc-ksns6 [749.496455ms]
    Mar 13 19:45:44.377: INFO: Got endpoints: latency-svc-q6s2r [750.017476ms]
    Mar 13 19:45:44.427: INFO: Got endpoints: latency-svc-txb6n [746.68335ms]
    Mar 13 19:45:44.477: INFO: Got endpoints: latency-svc-5ghl6 [747.308929ms]
    Mar 13 19:45:44.528: INFO: Got endpoints: latency-svc-m6b5w [751.676156ms]
    Mar 13 19:45:44.577: INFO: Got endpoints: latency-svc-hcm24 [750.240689ms]
    Mar 13 19:45:44.628: INFO: Got endpoints: latency-svc-j8gxf [750.191373ms]
    Mar 13 19:45:44.677: INFO: Got endpoints: latency-svc-8p5p4 [749.278249ms]
    Mar 13 19:45:44.728: INFO: Got endpoints: latency-svc-2fx76 [749.874555ms]
    Mar 13 19:45:44.778: INFO: Got endpoints: latency-svc-l772x [751.162251ms]
    Mar 13 19:45:44.826: INFO: Got endpoints: latency-svc-s7wmb [748.977222ms]
    Mar 13 19:45:44.876: INFO: Got endpoints: latency-svc-f5dmq [748.814998ms]
    Mar 13 19:45:44.877: INFO: Latencies: [15.532141ms 24.015194ms 29.788668ms 39.819612ms 48.011132ms 55.594737ms 65.025208ms 67.487266ms 78.006738ms 83.040946ms 90.623518ms 100.164728ms 109.698005ms 113.136271ms 114.60395ms 115.146874ms 115.606766ms 118.821478ms 121.209765ms 124.463581ms 124.891067ms 125.965194ms 126.655774ms 128.059365ms 131.150085ms 131.312237ms 131.589465ms 131.943189ms 133.121995ms 136.134293ms 137.327564ms 137.711217ms 138.291794ms 138.992499ms 142.535508ms 169.907894ms 213.61915ms 249.623018ms 283.295453ms 324.213631ms 361.966873ms 410.047252ms 452.056867ms 495.677764ms 539.019957ms 583.64344ms 627.957871ms 664.743889ms 710.227379ms 727.262478ms 731.884792ms 739.326799ms 741.189951ms 744.505522ms 745.191138ms 745.969465ms 746.013682ms 746.355988ms 746.385317ms 746.68335ms 747.145221ms 747.178096ms 747.308929ms 747.463203ms 747.527886ms 747.677621ms 747.699381ms 747.78281ms 747.831081ms 747.934936ms 747.936975ms 747.943738ms 748.080433ms 748.124572ms 748.199871ms 748.206106ms 748.255562ms 748.272065ms 748.32958ms 748.353461ms 748.499087ms 748.544253ms 748.622885ms 748.641709ms 748.716364ms 748.737877ms 748.764988ms 748.814998ms 748.847291ms 748.847904ms 748.903473ms 748.929652ms 748.977222ms 748.985929ms 749.015739ms 749.04997ms 749.278249ms 749.290012ms 749.314658ms 749.325761ms 749.408647ms 749.419113ms 749.463499ms 749.496455ms 749.538236ms 749.568161ms 749.58913ms 749.606226ms 749.610703ms 749.615064ms 749.656986ms 749.662968ms 749.673359ms 749.685312ms 749.689514ms 749.713294ms 749.733351ms 749.746312ms 749.768624ms 749.813174ms 749.817656ms 749.820253ms 749.836574ms 749.845948ms 749.856245ms 749.865427ms 749.8659ms 749.870436ms 749.874555ms 749.896169ms 749.89748ms 749.914062ms 749.915689ms 749.92926ms 749.930659ms 749.942946ms 749.944512ms 749.948261ms 750.008411ms 750.017476ms 750.038847ms 750.084081ms 750.107916ms 750.191373ms 750.205482ms 750.230984ms 750.240689ms 750.270744ms 750.33555ms 750.361251ms 750.367168ms 750.375577ms 750.404761ms 750.415981ms 750.44457ms 750.445622ms 750.448484ms 750.465988ms 750.515414ms 750.53144ms 750.607657ms 750.627247ms 750.644714ms 750.681222ms 750.682009ms 750.80175ms 750.810893ms 750.93591ms 751.012119ms 751.04606ms 751.093544ms 751.134353ms 751.162251ms 751.164587ms 751.198167ms 751.216435ms 751.311281ms 751.32605ms 751.475605ms 751.598938ms 751.676156ms 751.827078ms 752.040843ms 752.077228ms 752.135327ms 752.152445ms 752.171185ms 752.194704ms 752.242176ms 752.525296ms 753.022004ms 753.105158ms 753.836703ms 753.988765ms 754.373887ms 756.065933ms 757.762384ms 761.819367ms 766.178078ms 772.545416ms]
    Mar 13 19:45:44.877: INFO: 50 %ile: 749.408647ms
    Mar 13 19:45:44.877: INFO: 90 %ile: 751.676156ms
    Mar 13 19:45:44.877: INFO: 99 %ile: 766.178078ms
    Mar 13 19:45:44.877: INFO: Total sample count: 200
    [AfterEach] [sig-network] Service endpoints latency
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:45:44.877: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      tear down framework | framework.go:193
    STEP: Destroying namespace "svc-latency-8120" for this suite. 03/13/23 19:45:44.882
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:45:44.891
Mar 13 19:45:44.891: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename secrets 03/13/23 19:45:44.894
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:44.903
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:44.907
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125
STEP: Creating secret with name secret-test-45acdd7e-63e3-438f-aac7-49f21778e624 03/13/23 19:45:44.91
STEP: Creating a pod to test consume secrets 03/13/23 19:45:44.914
Mar 13 19:45:44.921: INFO: Waiting up to 5m0s for pod "pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6" in namespace "secrets-1140" to be "Succeeded or Failed"
Mar 13 19:45:44.924: INFO: Pod "pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.361453ms
Mar 13 19:45:46.929: INFO: Pod "pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007937371s
Mar 13 19:45:48.929: INFO: Pod "pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008320403s
STEP: Saw pod success 03/13/23 19:45:48.929
Mar 13 19:45:48.929: INFO: Pod "pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6" satisfied condition "Succeeded or Failed"
Mar 13 19:45:48.933: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6 container secret-volume-test: <nil>
STEP: delete the pod 03/13/23 19:45:48.943
Mar 13 19:45:48.952: INFO: Waiting for pod pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6 to disappear
Mar 13 19:45:48.955: INFO: Pod pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar 13 19:45:48.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-1140" for this suite. 03/13/23 19:45:48.959
------------------------------
â€¢ [4.072 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:45:44.891
    Mar 13 19:45:44.891: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename secrets 03/13/23 19:45:44.894
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:44.903
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:44.907
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:125
    STEP: Creating secret with name secret-test-45acdd7e-63e3-438f-aac7-49f21778e624 03/13/23 19:45:44.91
    STEP: Creating a pod to test consume secrets 03/13/23 19:45:44.914
    Mar 13 19:45:44.921: INFO: Waiting up to 5m0s for pod "pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6" in namespace "secrets-1140" to be "Succeeded or Failed"
    Mar 13 19:45:44.924: INFO: Pod "pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.361453ms
    Mar 13 19:45:46.929: INFO: Pod "pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007937371s
    Mar 13 19:45:48.929: INFO: Pod "pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008320403s
    STEP: Saw pod success 03/13/23 19:45:48.929
    Mar 13 19:45:48.929: INFO: Pod "pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6" satisfied condition "Succeeded or Failed"
    Mar 13 19:45:48.933: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6 container secret-volume-test: <nil>
    STEP: delete the pod 03/13/23 19:45:48.943
    Mar 13 19:45:48.952: INFO: Waiting for pod pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6 to disappear
    Mar 13 19:45:48.955: INFO: Pod pod-secrets-57d68944-49b5-4daa-afa3-7dc71a99a6e6 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:45:48.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-1140" for this suite. 03/13/23 19:45:48.959
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:45:48.972
Mar 13 19:45:48.972: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename svcaccounts 03/13/23 19:45:48.974
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:48.984
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:48.986
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742
Mar 13 19:45:48.992: INFO: Got root ca configmap in namespace "svcaccounts-7173"
Mar 13 19:45:48.997: INFO: Deleted root ca configmap in namespace "svcaccounts-7173"
STEP: waiting for a new root ca configmap created 03/13/23 19:45:49.498
Mar 13 19:45:49.500: INFO: Recreated root ca configmap in namespace "svcaccounts-7173"
Mar 13 19:45:49.504: INFO: Updated root ca configmap in namespace "svcaccounts-7173"
STEP: waiting for the root ca configmap reconciled 03/13/23 19:45:50.004
Mar 13 19:45:50.008: INFO: Reconciled root ca configmap in namespace "svcaccounts-7173"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar 13 19:45:50.008: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-7173" for this suite. 03/13/23 19:45:50.011
------------------------------
â€¢ [1.044 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:45:48.972
    Mar 13 19:45:48.972: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename svcaccounts 03/13/23 19:45:48.974
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:48.984
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:48.986
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
      test/e2e/auth/service_accounts.go:742
    Mar 13 19:45:48.992: INFO: Got root ca configmap in namespace "svcaccounts-7173"
    Mar 13 19:45:48.997: INFO: Deleted root ca configmap in namespace "svcaccounts-7173"
    STEP: waiting for a new root ca configmap created 03/13/23 19:45:49.498
    Mar 13 19:45:49.500: INFO: Recreated root ca configmap in namespace "svcaccounts-7173"
    Mar 13 19:45:49.504: INFO: Updated root ca configmap in namespace "svcaccounts-7173"
    STEP: waiting for the root ca configmap reconciled 03/13/23 19:45:50.004
    Mar 13 19:45:50.008: INFO: Reconciled root ca configmap in namespace "svcaccounts-7173"
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:45:50.008: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-7173" for this suite. 03/13/23 19:45:50.011
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events
  should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57
[BeforeEach] [sig-instrumentation] Events
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:45:50.053
Mar 13 19:45:50.053: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename events 03/13/23 19:45:50.054
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:50.076
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:50.087
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57
STEP: creating a test event 03/13/23 19:45:50.093
STEP: listing all events in all namespaces 03/13/23 19:45:50.102
STEP: patching the test event 03/13/23 19:45:50.107
STEP: fetching the test event 03/13/23 19:45:50.113
STEP: updating the test event 03/13/23 19:45:50.121
STEP: getting the test event 03/13/23 19:45:50.132
STEP: deleting the test event 03/13/23 19:45:50.135
STEP: listing all events in all namespaces 03/13/23 19:45:50.14
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/node/init/init.go:32
Mar 13 19:45:50.144: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events
  tear down framework | framework.go:193
STEP: Destroying namespace "events-1859" for this suite. 03/13/23 19:45:50.148
------------------------------
â€¢ [0.099 seconds]
[sig-instrumentation] Events
test/e2e/instrumentation/common/framework.go:23
  should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:45:50.053
    Mar 13 19:45:50.053: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename events 03/13/23 19:45:50.054
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:50.076
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:50.087
    [BeforeEach] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of an event [Conformance]
      test/e2e/instrumentation/core_events.go:57
    STEP: creating a test event 03/13/23 19:45:50.093
    STEP: listing all events in all namespaces 03/13/23 19:45:50.102
    STEP: patching the test event 03/13/23 19:45:50.107
    STEP: fetching the test event 03/13/23 19:45:50.113
    STEP: updating the test event 03/13/23 19:45:50.121
    STEP: getting the test event 03/13/23 19:45:50.132
    STEP: deleting the test event 03/13/23 19:45:50.135
    STEP: listing all events in all namespaces 03/13/23 19:45:50.14
    [AfterEach] [sig-instrumentation] Events
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:45:50.144: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-1859" for this suite. 03/13/23 19:45:50.148
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/kubectl/kubectl.go:1592
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:45:50.154
Mar 13 19:45:50.154: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 19:45:50.155
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:50.17
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:50.174
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1572
STEP: creating an pod 03/13/23 19:45:50.179
Mar 13 19:45:50.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.43 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Mar 13 19:45:50.330: INFO: stderr: ""
Mar 13 19:45:50.330: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/kubectl/kubectl.go:1592
STEP: Waiting for log generator to start. 03/13/23 19:45:50.33
Mar 13 19:45:50.330: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Mar 13 19:45:50.330: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-9545" to be "running and ready, or succeeded"
Mar 13 19:45:50.340: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 9.493606ms
Mar 13 19:45:50.340: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on 'vke-automated-test-51df1d4fb06e' to be 'Running' but was 'Pending'
Mar 13 19:45:52.346: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.015234242s
Mar 13 19:45:52.346: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Mar 13 19:45:52.346: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings 03/13/23 19:45:52.346
Mar 13 19:45:52.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 logs logs-generator logs-generator'
Mar 13 19:45:52.459: INFO: stderr: ""
Mar 13 19:45:52.459: INFO: stdout: "I0313 19:45:51.311891       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/7f2 225\nI0313 19:45:51.512064       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/zszd 283\nI0313 19:45:51.712676       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/4ngf 480\nI0313 19:45:51.911955       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/5g7f 238\nI0313 19:45:52.112325       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/trv 275\nI0313 19:45:52.312830       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/vgbc 328\n"
STEP: limiting log lines 03/13/23 19:45:52.459
Mar 13 19:45:52.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 logs logs-generator logs-generator --tail=1'
Mar 13 19:45:52.561: INFO: stderr: ""
Mar 13 19:45:52.561: INFO: stdout: "I0313 19:45:52.512031       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/jgjk 255\n"
Mar 13 19:45:52.561: INFO: got output "I0313 19:45:52.512031       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/jgjk 255\n"
STEP: limiting log bytes 03/13/23 19:45:52.561
Mar 13 19:45:52.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 logs logs-generator logs-generator --limit-bytes=1'
Mar 13 19:45:52.672: INFO: stderr: ""
Mar 13 19:45:52.672: INFO: stdout: "I"
Mar 13 19:45:52.672: INFO: got output "I"
STEP: exposing timestamps 03/13/23 19:45:52.672
Mar 13 19:45:52.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 logs logs-generator logs-generator --tail=1 --timestamps'
Mar 13 19:45:52.770: INFO: stderr: ""
Mar 13 19:45:52.770: INFO: stdout: "2023-03-13T19:45:52.712658285Z I0313 19:45:52.712480       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/xng 280\n"
Mar 13 19:45:52.770: INFO: got output "2023-03-13T19:45:52.712658285Z I0313 19:45:52.712480       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/xng 280\n"
STEP: restricting to a time range 03/13/23 19:45:52.77
Mar 13 19:45:55.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 logs logs-generator logs-generator --since=1s'
Mar 13 19:45:55.365: INFO: stderr: ""
Mar 13 19:45:55.365: INFO: stdout: "I0313 19:45:54.512802       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/n6t 325\nI0313 19:45:54.712032       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/rx7 475\nI0313 19:45:54.912401       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/zsvw 483\nI0313 19:45:55.112744       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/wvvf 287\nI0313 19:45:55.312978       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/lz9 559\n"
Mar 13 19:45:55.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 logs logs-generator logs-generator --since=24h'
Mar 13 19:45:55.453: INFO: stderr: ""
Mar 13 19:45:55.453: INFO: stdout: "I0313 19:45:51.311891       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/7f2 225\nI0313 19:45:51.512064       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/zszd 283\nI0313 19:45:51.712676       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/4ngf 480\nI0313 19:45:51.911955       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/5g7f 238\nI0313 19:45:52.112325       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/trv 275\nI0313 19:45:52.312830       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/vgbc 328\nI0313 19:45:52.512031       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/jgjk 255\nI0313 19:45:52.712480       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/xng 280\nI0313 19:45:52.912312       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/2cb 238\nI0313 19:45:53.112450       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/5g49 221\nI0313 19:45:53.312014       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/8k9 350\nI0313 19:45:53.512426       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/vjr 303\nI0313 19:45:53.712125       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/2sb 254\nI0313 19:45:53.912780       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/9tpx 579\nI0313 19:45:54.112029       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/rfwq 292\nI0313 19:45:54.312420       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/zfd 467\nI0313 19:45:54.512802       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/n6t 325\nI0313 19:45:54.712032       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/rx7 475\nI0313 19:45:54.912401       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/zsvw 483\nI0313 19:45:55.112744       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/wvvf 287\nI0313 19:45:55.312978       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/lz9 559\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1577
Mar 13 19:45:55.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 delete pod logs-generator'
Mar 13 19:45:57.009: INFO: stderr: ""
Mar 13 19:45:57.009: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 19:45:57.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-9545" for this suite. 03/13/23 19:45:57.014
------------------------------
â€¢ [SLOW TEST] [6.865 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1569
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/kubectl/kubectl.go:1592

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:45:50.154
    Mar 13 19:45:50.154: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 19:45:50.155
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:50.17
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:50.174
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl logs
      test/e2e/kubectl/kubectl.go:1572
    STEP: creating an pod 03/13/23 19:45:50.179
    Mar 13 19:45:50.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.43 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
    Mar 13 19:45:50.330: INFO: stderr: ""
    Mar 13 19:45:50.330: INFO: stdout: "pod/logs-generator created\n"
    [It] should be able to retrieve and filter logs  [Conformance]
      test/e2e/kubectl/kubectl.go:1592
    STEP: Waiting for log generator to start. 03/13/23 19:45:50.33
    Mar 13 19:45:50.330: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
    Mar 13 19:45:50.330: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-9545" to be "running and ready, or succeeded"
    Mar 13 19:45:50.340: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 9.493606ms
    Mar 13 19:45:50.340: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on 'vke-automated-test-51df1d4fb06e' to be 'Running' but was 'Pending'
    Mar 13 19:45:52.346: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.015234242s
    Mar 13 19:45:52.346: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
    Mar 13 19:45:52.346: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
    STEP: checking for a matching strings 03/13/23 19:45:52.346
    Mar 13 19:45:52.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 logs logs-generator logs-generator'
    Mar 13 19:45:52.459: INFO: stderr: ""
    Mar 13 19:45:52.459: INFO: stdout: "I0313 19:45:51.311891       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/7f2 225\nI0313 19:45:51.512064       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/zszd 283\nI0313 19:45:51.712676       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/4ngf 480\nI0313 19:45:51.911955       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/5g7f 238\nI0313 19:45:52.112325       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/trv 275\nI0313 19:45:52.312830       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/vgbc 328\n"
    STEP: limiting log lines 03/13/23 19:45:52.459
    Mar 13 19:45:52.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 logs logs-generator logs-generator --tail=1'
    Mar 13 19:45:52.561: INFO: stderr: ""
    Mar 13 19:45:52.561: INFO: stdout: "I0313 19:45:52.512031       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/jgjk 255\n"
    Mar 13 19:45:52.561: INFO: got output "I0313 19:45:52.512031       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/jgjk 255\n"
    STEP: limiting log bytes 03/13/23 19:45:52.561
    Mar 13 19:45:52.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 logs logs-generator logs-generator --limit-bytes=1'
    Mar 13 19:45:52.672: INFO: stderr: ""
    Mar 13 19:45:52.672: INFO: stdout: "I"
    Mar 13 19:45:52.672: INFO: got output "I"
    STEP: exposing timestamps 03/13/23 19:45:52.672
    Mar 13 19:45:52.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 logs logs-generator logs-generator --tail=1 --timestamps'
    Mar 13 19:45:52.770: INFO: stderr: ""
    Mar 13 19:45:52.770: INFO: stdout: "2023-03-13T19:45:52.712658285Z I0313 19:45:52.712480       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/xng 280\n"
    Mar 13 19:45:52.770: INFO: got output "2023-03-13T19:45:52.712658285Z I0313 19:45:52.712480       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/xng 280\n"
    STEP: restricting to a time range 03/13/23 19:45:52.77
    Mar 13 19:45:55.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 logs logs-generator logs-generator --since=1s'
    Mar 13 19:45:55.365: INFO: stderr: ""
    Mar 13 19:45:55.365: INFO: stdout: "I0313 19:45:54.512802       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/n6t 325\nI0313 19:45:54.712032       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/rx7 475\nI0313 19:45:54.912401       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/zsvw 483\nI0313 19:45:55.112744       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/wvvf 287\nI0313 19:45:55.312978       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/lz9 559\n"
    Mar 13 19:45:55.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 logs logs-generator logs-generator --since=24h'
    Mar 13 19:45:55.453: INFO: stderr: ""
    Mar 13 19:45:55.453: INFO: stdout: "I0313 19:45:51.311891       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/7f2 225\nI0313 19:45:51.512064       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/zszd 283\nI0313 19:45:51.712676       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/4ngf 480\nI0313 19:45:51.911955       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/5g7f 238\nI0313 19:45:52.112325       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/trv 275\nI0313 19:45:52.312830       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/vgbc 328\nI0313 19:45:52.512031       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/jgjk 255\nI0313 19:45:52.712480       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/xng 280\nI0313 19:45:52.912312       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/2cb 238\nI0313 19:45:53.112450       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/5g49 221\nI0313 19:45:53.312014       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/8k9 350\nI0313 19:45:53.512426       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/vjr 303\nI0313 19:45:53.712125       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/2sb 254\nI0313 19:45:53.912780       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/9tpx 579\nI0313 19:45:54.112029       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/rfwq 292\nI0313 19:45:54.312420       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/zfd 467\nI0313 19:45:54.512802       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/n6t 325\nI0313 19:45:54.712032       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/rx7 475\nI0313 19:45:54.912401       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/zsvw 483\nI0313 19:45:55.112744       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/wvvf 287\nI0313 19:45:55.312978       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/lz9 559\n"
    [AfterEach] Kubectl logs
      test/e2e/kubectl/kubectl.go:1577
    Mar 13 19:45:55.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-9545 delete pod logs-generator'
    Mar 13 19:45:57.009: INFO: stderr: ""
    Mar 13 19:45:57.009: INFO: stdout: "pod \"logs-generator\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:45:57.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-9545" for this suite. 03/13/23 19:45:57.014
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets
  should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:45:57.021
Mar 13 19:45:57.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename secrets 03/13/23 19:45:57.023
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:57.035
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:57.038
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154
STEP: creating a secret 03/13/23 19:45:57.043
STEP: listing secrets in all namespaces to ensure that there are more than zero 03/13/23 19:45:57.047
STEP: patching the secret 03/13/23 19:45:57.05
STEP: deleting the secret using a LabelSelector 03/13/23 19:45:57.059
STEP: listing secrets in all namespaces, searching for label name and value in patch 03/13/23 19:45:57.065
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Mar 13 19:45:57.068: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-6667" for this suite. 03/13/23 19:45:57.072
------------------------------
â€¢ [0.056 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:45:57.021
    Mar 13 19:45:57.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename secrets 03/13/23 19:45:57.023
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:57.035
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:57.038
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should patch a secret [Conformance]
      test/e2e/common/node/secrets.go:154
    STEP: creating a secret 03/13/23 19:45:57.043
    STEP: listing secrets in all namespaces to ensure that there are more than zero 03/13/23 19:45:57.047
    STEP: patching the secret 03/13/23 19:45:57.05
    STEP: deleting the secret using a LabelSelector 03/13/23 19:45:57.059
    STEP: listing secrets in all namespaces, searching for label name and value in patch 03/13/23 19:45:57.065
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:45:57.068: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-6667" for this suite. 03/13/23 19:45:57.072
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:45:57.078
Mar 13 19:45:57.078: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 19:45:57.079
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:57.089
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:57.093
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 19:45:57.107
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:45:57.377
STEP: Deploying the webhook pod 03/13/23 19:45:57.384
STEP: Wait for the deployment to be ready 03/13/23 19:45:57.395
Mar 13 19:45:57.402: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/13/23 19:45:59.411
STEP: Verifying the service has paired with the endpoint 03/13/23 19:45:59.418
Mar 13 19:46:00.420: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
Mar 13 19:46:01.420: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
Mar 13 19:46:02.420: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117
STEP: fetching the /apis discovery document 03/13/23 19:46:02.427
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document 03/13/23 19:46:02.429
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document 03/13/23 19:46:02.429
STEP: fetching the /apis/admissionregistration.k8s.io discovery document 03/13/23 19:46:02.429
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document 03/13/23 19:46:02.431
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document 03/13/23 19:46:02.431
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document 03/13/23 19:46:02.434
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:46:02.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-379" for this suite. 03/13/23 19:46:02.604
STEP: Destroying namespace "webhook-379-markers" for this suite. 03/13/23 19:46:02.641
------------------------------
â€¢ [SLOW TEST] [5.618 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:45:57.078
    Mar 13 19:45:57.078: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 19:45:57.079
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:45:57.089
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:45:57.093
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 19:45:57.107
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:45:57.377
    STEP: Deploying the webhook pod 03/13/23 19:45:57.384
    STEP: Wait for the deployment to be ready 03/13/23 19:45:57.395
    Mar 13 19:45:57.402: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/13/23 19:45:59.411
    STEP: Verifying the service has paired with the endpoint 03/13/23 19:45:59.418
    Mar 13 19:46:00.420: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    Mar 13 19:46:01.420: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    Mar 13 19:46:02.420: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should include webhook resources in discovery documents [Conformance]
      test/e2e/apimachinery/webhook.go:117
    STEP: fetching the /apis discovery document 03/13/23 19:46:02.427
    STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document 03/13/23 19:46:02.429
    STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document 03/13/23 19:46:02.429
    STEP: fetching the /apis/admissionregistration.k8s.io discovery document 03/13/23 19:46:02.429
    STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document 03/13/23 19:46:02.431
    STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document 03/13/23 19:46:02.431
    STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document 03/13/23 19:46:02.434
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:46:02.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-379" for this suite. 03/13/23 19:46:02.604
    STEP: Destroying namespace "webhook-379-markers" for this suite. 03/13/23 19:46:02.641
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-network] Services
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:46:02.698
Mar 13 19:46:02.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 19:46:02.7
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:02.758
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:02.763
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787
STEP: creating service endpoint-test2 in namespace services-5016 03/13/23 19:46:02.806
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5016 to expose endpoints map[] 03/13/23 19:46:02.843
Mar 13 19:46:02.873: INFO: successfully validated that service endpoint-test2 in namespace services-5016 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-5016 03/13/23 19:46:02.873
Mar 13 19:46:02.898: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-5016" to be "running and ready"
Mar 13 19:46:02.916: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 17.978993ms
Mar 13 19:46:02.916: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:46:04.919: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.021644829s
Mar 13 19:46:04.919: INFO: The phase of Pod pod1 is Running (Ready = true)
Mar 13 19:46:04.919: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5016 to expose endpoints map[pod1:[80]] 03/13/23 19:46:04.924
Mar 13 19:46:04.941: INFO: successfully validated that service endpoint-test2 in namespace services-5016 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1 03/13/23 19:46:04.941
Mar 13 19:46:04.941: INFO: Creating new exec pod
Mar 13 19:46:04.955: INFO: Waiting up to 5m0s for pod "execpodn4g2q" in namespace "services-5016" to be "running"
Mar 13 19:46:04.971: INFO: Pod "execpodn4g2q": Phase="Pending", Reason="", readiness=false. Elapsed: 15.161404ms
Mar 13 19:46:06.976: INFO: Pod "execpodn4g2q": Phase="Running", Reason="", readiness=true. Elapsed: 2.020796878s
Mar 13 19:46:06.976: INFO: Pod "execpodn4g2q" satisfied condition "running"
Mar 13 19:46:07.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5016 exec execpodn4g2q -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Mar 13 19:46:08.184: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Mar 13 19:46:08.184: INFO: stdout: ""
Mar 13 19:46:08.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5016 exec execpodn4g2q -- /bin/sh -x -c nc -v -z -w 2 10.106.179.96 80'
Mar 13 19:46:08.369: INFO: stderr: "+ nc -v -z -w 2 10.106.179.96 80\nConnection to 10.106.179.96 80 port [tcp/http] succeeded!\n"
Mar 13 19:46:08.369: INFO: stdout: ""
STEP: Creating pod pod2 in namespace services-5016 03/13/23 19:46:08.369
Mar 13 19:46:08.381: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-5016" to be "running and ready"
Mar 13 19:46:08.389: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 8.137844ms
Mar 13 19:46:08.389: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:46:10.395: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.013515708s
Mar 13 19:46:10.395: INFO: The phase of Pod pod2 is Running (Ready = true)
Mar 13 19:46:10.395: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5016 to expose endpoints map[pod1:[80] pod2:[80]] 03/13/23 19:46:10.399
Mar 13 19:46:10.416: INFO: successfully validated that service endpoint-test2 in namespace services-5016 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2 03/13/23 19:46:10.416
Mar 13 19:46:11.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5016 exec execpodn4g2q -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Mar 13 19:46:11.617: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Mar 13 19:46:11.617: INFO: stdout: ""
Mar 13 19:46:11.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5016 exec execpodn4g2q -- /bin/sh -x -c nc -v -z -w 2 10.106.179.96 80'
Mar 13 19:46:11.808: INFO: stderr: "+ nc -v -z -w 2 10.106.179.96 80\nConnection to 10.106.179.96 80 port [tcp/http] succeeded!\n"
Mar 13 19:46:11.808: INFO: stdout: ""
STEP: Deleting pod pod1 in namespace services-5016 03/13/23 19:46:11.808
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5016 to expose endpoints map[pod2:[80]] 03/13/23 19:46:11.832
Mar 13 19:46:11.880: INFO: successfully validated that service endpoint-test2 in namespace services-5016 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2 03/13/23 19:46:11.88
Mar 13 19:46:12.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5016 exec execpodn4g2q -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Mar 13 19:46:13.091: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Mar 13 19:46:13.091: INFO: stdout: ""
Mar 13 19:46:13.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5016 exec execpodn4g2q -- /bin/sh -x -c nc -v -z -w 2 10.106.179.96 80'
Mar 13 19:46:13.244: INFO: stderr: "+ nc -v -z -w 2 10.106.179.96 80\nConnection to 10.106.179.96 80 port [tcp/http] succeeded!\n"
Mar 13 19:46:13.244: INFO: stdout: ""
STEP: Deleting pod pod2 in namespace services-5016 03/13/23 19:46:13.244
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5016 to expose endpoints map[] 03/13/23 19:46:13.253
Mar 13 19:46:14.267: INFO: successfully validated that service endpoint-test2 in namespace services-5016 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 19:46:14.278: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-5016" for this suite. 03/13/23 19:46:14.282
------------------------------
â€¢ [SLOW TEST] [11.588 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:46:02.698
    Mar 13 19:46:02.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 19:46:02.7
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:02.758
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:02.763
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should serve a basic endpoint from pods  [Conformance]
      test/e2e/network/service.go:787
    STEP: creating service endpoint-test2 in namespace services-5016 03/13/23 19:46:02.806
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5016 to expose endpoints map[] 03/13/23 19:46:02.843
    Mar 13 19:46:02.873: INFO: successfully validated that service endpoint-test2 in namespace services-5016 exposes endpoints map[]
    STEP: Creating pod pod1 in namespace services-5016 03/13/23 19:46:02.873
    Mar 13 19:46:02.898: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-5016" to be "running and ready"
    Mar 13 19:46:02.916: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 17.978993ms
    Mar 13 19:46:02.916: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:46:04.919: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.021644829s
    Mar 13 19:46:04.919: INFO: The phase of Pod pod1 is Running (Ready = true)
    Mar 13 19:46:04.919: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5016 to expose endpoints map[pod1:[80]] 03/13/23 19:46:04.924
    Mar 13 19:46:04.941: INFO: successfully validated that service endpoint-test2 in namespace services-5016 exposes endpoints map[pod1:[80]]
    STEP: Checking if the Service forwards traffic to pod1 03/13/23 19:46:04.941
    Mar 13 19:46:04.941: INFO: Creating new exec pod
    Mar 13 19:46:04.955: INFO: Waiting up to 5m0s for pod "execpodn4g2q" in namespace "services-5016" to be "running"
    Mar 13 19:46:04.971: INFO: Pod "execpodn4g2q": Phase="Pending", Reason="", readiness=false. Elapsed: 15.161404ms
    Mar 13 19:46:06.976: INFO: Pod "execpodn4g2q": Phase="Running", Reason="", readiness=true. Elapsed: 2.020796878s
    Mar 13 19:46:06.976: INFO: Pod "execpodn4g2q" satisfied condition "running"
    Mar 13 19:46:07.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5016 exec execpodn4g2q -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Mar 13 19:46:08.184: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Mar 13 19:46:08.184: INFO: stdout: ""
    Mar 13 19:46:08.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5016 exec execpodn4g2q -- /bin/sh -x -c nc -v -z -w 2 10.106.179.96 80'
    Mar 13 19:46:08.369: INFO: stderr: "+ nc -v -z -w 2 10.106.179.96 80\nConnection to 10.106.179.96 80 port [tcp/http] succeeded!\n"
    Mar 13 19:46:08.369: INFO: stdout: ""
    STEP: Creating pod pod2 in namespace services-5016 03/13/23 19:46:08.369
    Mar 13 19:46:08.381: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-5016" to be "running and ready"
    Mar 13 19:46:08.389: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 8.137844ms
    Mar 13 19:46:08.389: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:46:10.395: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.013515708s
    Mar 13 19:46:10.395: INFO: The phase of Pod pod2 is Running (Ready = true)
    Mar 13 19:46:10.395: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5016 to expose endpoints map[pod1:[80] pod2:[80]] 03/13/23 19:46:10.399
    Mar 13 19:46:10.416: INFO: successfully validated that service endpoint-test2 in namespace services-5016 exposes endpoints map[pod1:[80] pod2:[80]]
    STEP: Checking if the Service forwards traffic to pod1 and pod2 03/13/23 19:46:10.416
    Mar 13 19:46:11.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5016 exec execpodn4g2q -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Mar 13 19:46:11.617: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Mar 13 19:46:11.617: INFO: stdout: ""
    Mar 13 19:46:11.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5016 exec execpodn4g2q -- /bin/sh -x -c nc -v -z -w 2 10.106.179.96 80'
    Mar 13 19:46:11.808: INFO: stderr: "+ nc -v -z -w 2 10.106.179.96 80\nConnection to 10.106.179.96 80 port [tcp/http] succeeded!\n"
    Mar 13 19:46:11.808: INFO: stdout: ""
    STEP: Deleting pod pod1 in namespace services-5016 03/13/23 19:46:11.808
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5016 to expose endpoints map[pod2:[80]] 03/13/23 19:46:11.832
    Mar 13 19:46:11.880: INFO: successfully validated that service endpoint-test2 in namespace services-5016 exposes endpoints map[pod2:[80]]
    STEP: Checking if the Service forwards traffic to pod2 03/13/23 19:46:11.88
    Mar 13 19:46:12.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5016 exec execpodn4g2q -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Mar 13 19:46:13.091: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Mar 13 19:46:13.091: INFO: stdout: ""
    Mar 13 19:46:13.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5016 exec execpodn4g2q -- /bin/sh -x -c nc -v -z -w 2 10.106.179.96 80'
    Mar 13 19:46:13.244: INFO: stderr: "+ nc -v -z -w 2 10.106.179.96 80\nConnection to 10.106.179.96 80 port [tcp/http] succeeded!\n"
    Mar 13 19:46:13.244: INFO: stdout: ""
    STEP: Deleting pod pod2 in namespace services-5016 03/13/23 19:46:13.244
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5016 to expose endpoints map[] 03/13/23 19:46:13.253
    Mar 13 19:46:14.267: INFO: successfully validated that service endpoint-test2 in namespace services-5016 exposes endpoints map[]
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:46:14.278: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-5016" for this suite. 03/13/23 19:46:14.282
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:46:14.287
Mar 13 19:46:14.287: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename runtimeclass 03/13/23 19:46:14.289
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:14.307
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:14.311
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129
Mar 13 19:46:14.336: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-158 to be scheduled
Mar 13 19:46:14.339: INFO: 1 pods are not scheduled: [runtimeclass-158/test-runtimeclass-runtimeclass-158-preconfigured-handler-9kxtn(6b9ec46a-d3f4-4e4d-81c3-f8ed3dc07ba8)]
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Mar 13 19:46:16.346: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-158" for this suite. 03/13/23 19:46:16.35
------------------------------
â€¢ [2.067 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:46:14.287
    Mar 13 19:46:14.287: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename runtimeclass 03/13/23 19:46:14.289
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:14.307
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:14.311
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:129
    Mar 13 19:46:14.336: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-158 to be scheduled
    Mar 13 19:46:14.339: INFO: 1 pods are not scheduled: [runtimeclass-158/test-runtimeclass-runtimeclass-158-preconfigured-handler-9kxtn(6b9ec46a-d3f4-4e4d-81c3-f8ed3dc07ba8)]
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:46:16.346: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-158" for this suite. 03/13/23 19:46:16.35
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:46:16.355
Mar 13 19:46:16.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename resourcequota 03/13/23 19:46:16.357
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:16.366
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:16.368
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884
STEP: Creating a ResourceQuota 03/13/23 19:46:16.372
STEP: Getting a ResourceQuota 03/13/23 19:46:16.376
STEP: Updating a ResourceQuota 03/13/23 19:46:16.38
STEP: Verifying a ResourceQuota was modified 03/13/23 19:46:16.383
STEP: Deleting a ResourceQuota 03/13/23 19:46:16.385
STEP: Verifying the deleted ResourceQuota 03/13/23 19:46:16.391
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar 13 19:46:16.393: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-1238" for this suite. 03/13/23 19:46:16.399
------------------------------
â€¢ [0.050 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:46:16.355
    Mar 13 19:46:16.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename resourcequota 03/13/23 19:46:16.357
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:16.366
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:16.368
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to update and delete ResourceQuota. [Conformance]
      test/e2e/apimachinery/resource_quota.go:884
    STEP: Creating a ResourceQuota 03/13/23 19:46:16.372
    STEP: Getting a ResourceQuota 03/13/23 19:46:16.376
    STEP: Updating a ResourceQuota 03/13/23 19:46:16.38
    STEP: Verifying a ResourceQuota was modified 03/13/23 19:46:16.383
    STEP: Deleting a ResourceQuota 03/13/23 19:46:16.385
    STEP: Verifying the deleted ResourceQuota 03/13/23 19:46:16.391
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:46:16.393: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-1238" for this suite. 03/13/23 19:46:16.399
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose
  should create services for rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1415
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:46:16.407
Mar 13 19:46:16.407: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 19:46:16.408
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:16.429
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:16.434
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should create services for rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1415
STEP: creating Agnhost RC 03/13/23 19:46:16.44
Mar 13 19:46:16.440: INFO: namespace kubectl-5957
Mar 13 19:46:16.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-5957 create -f -'
Mar 13 19:46:17.473: INFO: stderr: ""
Mar 13 19:46:17.473: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 03/13/23 19:46:17.473
Mar 13 19:46:18.477: INFO: Selector matched 1 pods for map[app:agnhost]
Mar 13 19:46:18.477: INFO: Found 0 / 1
Mar 13 19:46:19.477: INFO: Selector matched 1 pods for map[app:agnhost]
Mar 13 19:46:19.477: INFO: Found 1 / 1
Mar 13 19:46:19.477: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Mar 13 19:46:19.480: INFO: Selector matched 1 pods for map[app:agnhost]
Mar 13 19:46:19.480: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Mar 13 19:46:19.480: INFO: wait on agnhost-primary startup in kubectl-5957 
Mar 13 19:46:19.480: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-5957 logs agnhost-primary-kxsjc agnhost-primary'
Mar 13 19:46:19.595: INFO: stderr: ""
Mar 13 19:46:19.595: INFO: stdout: "Paused\n"
STEP: exposing RC 03/13/23 19:46:19.596
Mar 13 19:46:19.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-5957 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Mar 13 19:46:19.699: INFO: stderr: ""
Mar 13 19:46:19.700: INFO: stdout: "service/rm2 exposed\n"
Mar 13 19:46:19.701: INFO: Service rm2 in namespace kubectl-5957 found.
STEP: exposing service 03/13/23 19:46:21.707
Mar 13 19:46:21.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-5957 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Mar 13 19:46:21.808: INFO: stderr: ""
Mar 13 19:46:21.808: INFO: stdout: "service/rm3 exposed\n"
Mar 13 19:46:21.812: INFO: Service rm3 in namespace kubectl-5957 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 19:46:23.818: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-5957" for this suite. 03/13/23 19:46:23.821
------------------------------
â€¢ [SLOW TEST] [7.418 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1409
    should create services for rc  [Conformance]
    test/e2e/kubectl/kubectl.go:1415

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:46:16.407
    Mar 13 19:46:16.407: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 19:46:16.408
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:16.429
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:16.434
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should create services for rc  [Conformance]
      test/e2e/kubectl/kubectl.go:1415
    STEP: creating Agnhost RC 03/13/23 19:46:16.44
    Mar 13 19:46:16.440: INFO: namespace kubectl-5957
    Mar 13 19:46:16.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-5957 create -f -'
    Mar 13 19:46:17.473: INFO: stderr: ""
    Mar 13 19:46:17.473: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 03/13/23 19:46:17.473
    Mar 13 19:46:18.477: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar 13 19:46:18.477: INFO: Found 0 / 1
    Mar 13 19:46:19.477: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar 13 19:46:19.477: INFO: Found 1 / 1
    Mar 13 19:46:19.477: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    Mar 13 19:46:19.480: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar 13 19:46:19.480: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Mar 13 19:46:19.480: INFO: wait on agnhost-primary startup in kubectl-5957 
    Mar 13 19:46:19.480: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-5957 logs agnhost-primary-kxsjc agnhost-primary'
    Mar 13 19:46:19.595: INFO: stderr: ""
    Mar 13 19:46:19.595: INFO: stdout: "Paused\n"
    STEP: exposing RC 03/13/23 19:46:19.596
    Mar 13 19:46:19.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-5957 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
    Mar 13 19:46:19.699: INFO: stderr: ""
    Mar 13 19:46:19.700: INFO: stdout: "service/rm2 exposed\n"
    Mar 13 19:46:19.701: INFO: Service rm2 in namespace kubectl-5957 found.
    STEP: exposing service 03/13/23 19:46:21.707
    Mar 13 19:46:21.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-5957 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
    Mar 13 19:46:21.808: INFO: stderr: ""
    Mar 13 19:46:21.808: INFO: stdout: "service/rm3 exposed\n"
    Mar 13 19:46:21.812: INFO: Service rm3 in namespace kubectl-5957 found.
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:46:23.818: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-5957" for this suite. 03/13/23 19:46:23.821
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:232
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:46:23.826
Mar 13 19:46:23.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-runtime 03/13/23 19:46:23.828
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:23.838
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:23.841
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:232
STEP: create the container 03/13/23 19:46:23.844
STEP: wait for the container to reach Succeeded 03/13/23 19:46:23.849
STEP: get the container status 03/13/23 19:46:27.868
STEP: the container should be terminated 03/13/23 19:46:27.871
STEP: the termination message should be set 03/13/23 19:46:27.871
Mar 13 19:46:27.871: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container 03/13/23 19:46:27.871
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Mar 13 19:46:27.881: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-7810" for this suite. 03/13/23 19:46:27.886
------------------------------
â€¢ [4.065 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:232

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:46:23.826
    Mar 13 19:46:23.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-runtime 03/13/23 19:46:23.828
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:23.838
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:23.841
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:232
    STEP: create the container 03/13/23 19:46:23.844
    STEP: wait for the container to reach Succeeded 03/13/23 19:46:23.849
    STEP: get the container status 03/13/23 19:46:27.868
    STEP: the container should be terminated 03/13/23 19:46:27.871
    STEP: the termination message should be set 03/13/23 19:46:27.871
    Mar 13 19:46:27.871: INFO: Expected: &{} to match Container's Termination Message:  --
    STEP: delete the container 03/13/23 19:46:27.871
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:46:27.881: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-7810" for this suite. 03/13/23 19:46:27.886
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1
  should proxy through a service and a pod  [Conformance]
  test/e2e/network/proxy.go:101
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:46:27.898
Mar 13 19:46:27.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename proxy 03/13/23 19:46:27.899
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:27.908
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:27.911
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/network/proxy.go:101
STEP: starting an echo server on multiple ports 03/13/23 19:46:27.925
STEP: creating replication controller proxy-service-rsb44 in namespace proxy-7945 03/13/23 19:46:27.926
I0313 19:46:27.930558      21 runners.go:193] Created replication controller with name: proxy-service-rsb44, namespace: proxy-7945, replica count: 1
I0313 19:46:28.982053      21 runners.go:193] proxy-service-rsb44 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0313 19:46:29.982386      21 runners.go:193] proxy-service-rsb44 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar 13 19:46:29.985: INFO: setup took 2.071740431s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts 03/13/23 19:46:29.985
Mar 13 19:46:30.008: INFO: (0) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 22.017721ms)
Mar 13 19:46:30.013: INFO: (0) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 25.875335ms)
Mar 13 19:46:30.014: INFO: (0) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 26.85868ms)
Mar 13 19:46:30.018: INFO: (0) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 31.641499ms)
Mar 13 19:46:30.018: INFO: (0) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 32.028588ms)
Mar 13 19:46:30.018: INFO: (0) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 32.820143ms)
Mar 13 19:46:30.019: INFO: (0) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 32.524502ms)
Mar 13 19:46:30.019: INFO: (0) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 32.912387ms)
Mar 13 19:46:30.019: INFO: (0) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 32.243375ms)
Mar 13 19:46:30.021: INFO: (0) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 34.3385ms)
Mar 13 19:46:30.021: INFO: (0) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 34.671469ms)
Mar 13 19:46:30.022: INFO: (0) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 35.215648ms)
Mar 13 19:46:30.022: INFO: (0) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 35.73018ms)
Mar 13 19:46:30.022: INFO: (0) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 35.455684ms)
Mar 13 19:46:30.022: INFO: (0) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 35.996438ms)
Mar 13 19:46:30.023: INFO: (0) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 36.077467ms)
Mar 13 19:46:30.034: INFO: (1) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 11.199787ms)
Mar 13 19:46:30.034: INFO: (1) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 10.028886ms)
Mar 13 19:46:30.034: INFO: (1) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 10.902889ms)
Mar 13 19:46:30.035: INFO: (1) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 11.180274ms)
Mar 13 19:46:30.035: INFO: (1) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 12.261752ms)
Mar 13 19:46:30.035: INFO: (1) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 11.379791ms)
Mar 13 19:46:30.035: INFO: (1) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 11.403967ms)
Mar 13 19:46:30.038: INFO: (1) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 12.987802ms)
Mar 13 19:46:30.038: INFO: (1) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 14.674124ms)
Mar 13 19:46:30.039: INFO: (1) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 15.162994ms)
Mar 13 19:46:30.039: INFO: (1) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.292679ms)
Mar 13 19:46:30.039: INFO: (1) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 14.22882ms)
Mar 13 19:46:30.040: INFO: (1) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 15.504535ms)
Mar 13 19:46:30.040: INFO: (1) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 16.944752ms)
Mar 13 19:46:30.041: INFO: (1) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 16.254878ms)
Mar 13 19:46:30.041: INFO: (1) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 16.511952ms)
Mar 13 19:46:30.048: INFO: (2) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 6.678956ms)
Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 9.932866ms)
Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 10.47296ms)
Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 10.834354ms)
Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 10.210923ms)
Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 8.985111ms)
Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 10.161925ms)
Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 10.327636ms)
Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 10.103307ms)
Mar 13 19:46:30.056: INFO: (2) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 13.048766ms)
Mar 13 19:46:30.057: INFO: (2) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 14.468516ms)
Mar 13 19:46:30.057: INFO: (2) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 14.253193ms)
Mar 13 19:46:30.058: INFO: (2) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 15.359294ms)
Mar 13 19:46:30.058: INFO: (2) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 15.082491ms)
Mar 13 19:46:30.058: INFO: (2) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 14.720744ms)
Mar 13 19:46:30.058: INFO: (2) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 14.778168ms)
Mar 13 19:46:30.064: INFO: (3) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 5.887156ms)
Mar 13 19:46:30.068: INFO: (3) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 9.677419ms)
Mar 13 19:46:30.070: INFO: (3) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 11.70119ms)
Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 11.941179ms)
Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 12.917628ms)
Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 11.460077ms)
Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 12.350404ms)
Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 12.552313ms)
Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 12.808334ms)
Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 12.995182ms)
Mar 13 19:46:30.075: INFO: (3) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 16.52717ms)
Mar 13 19:46:30.075: INFO: (3) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 14.950158ms)
Mar 13 19:46:30.075: INFO: (3) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 15.273679ms)
Mar 13 19:46:30.075: INFO: (3) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 17.187085ms)
Mar 13 19:46:30.076: INFO: (3) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 16.037611ms)
Mar 13 19:46:30.076: INFO: (3) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 17.173595ms)
Mar 13 19:46:30.084: INFO: (4) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 7.294146ms)
Mar 13 19:46:30.084: INFO: (4) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 7.232419ms)
Mar 13 19:46:30.084: INFO: (4) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 7.113298ms)
Mar 13 19:46:30.085: INFO: (4) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 7.823043ms)
Mar 13 19:46:30.085: INFO: (4) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 7.96814ms)
Mar 13 19:46:30.088: INFO: (4) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 10.684094ms)
Mar 13 19:46:30.088: INFO: (4) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 10.017418ms)
Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 12.68557ms)
Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.070516ms)
Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 14.048313ms)
Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 14.039405ms)
Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 14.268139ms)
Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 14.007413ms)
Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 14.107926ms)
Mar 13 19:46:30.095: INFO: (4) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 17.620652ms)
Mar 13 19:46:30.095: INFO: (4) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 17.91981ms)
Mar 13 19:46:30.104: INFO: (5) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 7.756101ms)
Mar 13 19:46:30.110: INFO: (5) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 14.58039ms)
Mar 13 19:46:30.110: INFO: (5) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.852127ms)
Mar 13 19:46:30.110: INFO: (5) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 14.759147ms)
Mar 13 19:46:30.113: INFO: (5) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 16.500127ms)
Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 19.012726ms)
Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 18.873695ms)
Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 20.044628ms)
Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 20.058541ms)
Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 19.400237ms)
Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 20.046787ms)
Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 19.265338ms)
Mar 13 19:46:30.117: INFO: (5) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 20.077072ms)
Mar 13 19:46:30.117: INFO: (5) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 21.245461ms)
Mar 13 19:46:30.117: INFO: (5) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 19.894012ms)
Mar 13 19:46:30.119: INFO: (5) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 22.174075ms)
Mar 13 19:46:30.125: INFO: (6) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 5.961974ms)
Mar 13 19:46:30.125: INFO: (6) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 5.8614ms)
Mar 13 19:46:30.129: INFO: (6) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 8.948983ms)
Mar 13 19:46:30.130: INFO: (6) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 9.794502ms)
Mar 13 19:46:30.130: INFO: (6) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 9.704662ms)
Mar 13 19:46:30.130: INFO: (6) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 9.822263ms)
Mar 13 19:46:30.130: INFO: (6) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 9.698043ms)
Mar 13 19:46:30.130: INFO: (6) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 10.702238ms)
Mar 13 19:46:30.130: INFO: (6) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 9.829859ms)
Mar 13 19:46:30.131: INFO: (6) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 10.971157ms)
Mar 13 19:46:30.131: INFO: (6) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 11.857505ms)
Mar 13 19:46:30.134: INFO: (6) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 14.016172ms)
Mar 13 19:46:30.135: INFO: (6) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 14.016259ms)
Mar 13 19:46:30.135: INFO: (6) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 14.905637ms)
Mar 13 19:46:30.135: INFO: (6) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 14.449673ms)
Mar 13 19:46:30.135: INFO: (6) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 14.713162ms)
Mar 13 19:46:30.144: INFO: (7) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 8.529757ms)
Mar 13 19:46:30.144: INFO: (7) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 8.562878ms)
Mar 13 19:46:30.144: INFO: (7) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 8.838157ms)
Mar 13 19:46:30.149: INFO: (7) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 13.852091ms)
Mar 13 19:46:30.150: INFO: (7) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 14.68041ms)
Mar 13 19:46:30.151: INFO: (7) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 15.332722ms)
Mar 13 19:46:30.151: INFO: (7) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 15.598385ms)
Mar 13 19:46:30.150: INFO: (7) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 14.128901ms)
Mar 13 19:46:30.150: INFO: (7) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 14.885236ms)
Mar 13 19:46:30.151: INFO: (7) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 14.655867ms)
Mar 13 19:46:30.151: INFO: (7) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 14.957523ms)
Mar 13 19:46:30.151: INFO: (7) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.938709ms)
Mar 13 19:46:30.153: INFO: (7) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 17.623548ms)
Mar 13 19:46:30.153: INFO: (7) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 17.596544ms)
Mar 13 19:46:30.154: INFO: (7) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 17.921165ms)
Mar 13 19:46:30.157: INFO: (7) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 21.52843ms)
Mar 13 19:46:30.165: INFO: (8) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 7.638013ms)
Mar 13 19:46:30.166: INFO: (8) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 6.878531ms)
Mar 13 19:46:30.166: INFO: (8) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 7.872099ms)
Mar 13 19:46:30.166: INFO: (8) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 7.179221ms)
Mar 13 19:46:30.167: INFO: (8) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 7.87414ms)
Mar 13 19:46:30.167: INFO: (8) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 7.992183ms)
Mar 13 19:46:30.168: INFO: (8) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 8.940218ms)
Mar 13 19:46:30.169: INFO: (8) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 10.91657ms)
Mar 13 19:46:30.169: INFO: (8) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 12.007872ms)
Mar 13 19:46:30.170: INFO: (8) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 11.585002ms)
Mar 13 19:46:30.171: INFO: (8) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 13.485841ms)
Mar 13 19:46:30.171: INFO: (8) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 12.732762ms)
Mar 13 19:46:30.172: INFO: (8) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 14.516508ms)
Mar 13 19:46:30.173: INFO: (8) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 14.402957ms)
Mar 13 19:46:30.173: INFO: (8) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 15.24625ms)
Mar 13 19:46:30.173: INFO: (8) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 14.944392ms)
Mar 13 19:46:30.182: INFO: (9) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 8.716315ms)
Mar 13 19:46:30.182: INFO: (9) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 8.522463ms)
Mar 13 19:46:30.183: INFO: (9) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 8.840002ms)
Mar 13 19:46:30.183: INFO: (9) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 9.274291ms)
Mar 13 19:46:30.183: INFO: (9) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 9.582959ms)
Mar 13 19:46:30.183: INFO: (9) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 9.792172ms)
Mar 13 19:46:30.187: INFO: (9) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 13.679226ms)
Mar 13 19:46:30.188: INFO: (9) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 13.923061ms)
Mar 13 19:46:30.188: INFO: (9) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 13.924489ms)
Mar 13 19:46:30.188: INFO: (9) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 14.085189ms)
Mar 13 19:46:30.189: INFO: (9) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 15.369157ms)
Mar 13 19:46:30.189: INFO: (9) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 14.729593ms)
Mar 13 19:46:30.189: INFO: (9) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.622294ms)
Mar 13 19:46:30.195: INFO: (9) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 21.177754ms)
Mar 13 19:46:30.195: INFO: (9) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 20.716288ms)
Mar 13 19:46:30.195: INFO: (9) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 20.853777ms)
Mar 13 19:46:30.204: INFO: (10) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 7.215505ms)
Mar 13 19:46:30.204: INFO: (10) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 7.261978ms)
Mar 13 19:46:30.206: INFO: (10) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 9.478018ms)
Mar 13 19:46:30.206: INFO: (10) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 9.463689ms)
Mar 13 19:46:30.206: INFO: (10) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 9.190401ms)
Mar 13 19:46:30.206: INFO: (10) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 10.332568ms)
Mar 13 19:46:30.206: INFO: (10) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 9.193153ms)
Mar 13 19:46:30.206: INFO: (10) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 9.587793ms)
Mar 13 19:46:30.209: INFO: (10) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 12.051461ms)
Mar 13 19:46:30.209: INFO: (10) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 11.937781ms)
Mar 13 19:46:30.209: INFO: (10) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 12.45607ms)
Mar 13 19:46:30.209: INFO: (10) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 12.614388ms)
Mar 13 19:46:30.209: INFO: (10) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 12.00022ms)
Mar 13 19:46:30.209: INFO: (10) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 12.18751ms)
Mar 13 19:46:30.210: INFO: (10) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 13.486387ms)
Mar 13 19:46:30.211: INFO: (10) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 13.872887ms)
Mar 13 19:46:30.219: INFO: (11) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 8.457635ms)
Mar 13 19:46:30.223: INFO: (11) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 11.739486ms)
Mar 13 19:46:30.223: INFO: (11) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 12.30288ms)
Mar 13 19:46:30.224: INFO: (11) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 12.957675ms)
Mar 13 19:46:30.224: INFO: (11) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 12.729055ms)
Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 13.942027ms)
Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 14.444039ms)
Mar 13 19:46:30.224: INFO: (11) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 12.750728ms)
Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 14.526453ms)
Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 14.355093ms)
Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 14.749175ms)
Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 14.64283ms)
Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.378344ms)
Mar 13 19:46:30.226: INFO: (11) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.653938ms)
Mar 13 19:46:30.226: INFO: (11) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 14.736306ms)
Mar 13 19:46:30.226: INFO: (11) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 14.419599ms)
Mar 13 19:46:30.232: INFO: (12) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 6.425528ms)
Mar 13 19:46:30.233: INFO: (12) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 6.624819ms)
Mar 13 19:46:30.233: INFO: (12) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 7.006264ms)
Mar 13 19:46:30.235: INFO: (12) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 8.366009ms)
Mar 13 19:46:30.235: INFO: (12) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 8.646734ms)
Mar 13 19:46:30.236: INFO: (12) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 9.303368ms)
Mar 13 19:46:30.236: INFO: (12) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 9.406906ms)
Mar 13 19:46:30.236: INFO: (12) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 9.585689ms)
Mar 13 19:46:30.236: INFO: (12) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 9.89478ms)
Mar 13 19:46:30.237: INFO: (12) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 10.834191ms)
Mar 13 19:46:30.238: INFO: (12) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 10.755846ms)
Mar 13 19:46:30.239: INFO: (12) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 12.757857ms)
Mar 13 19:46:30.239: INFO: (12) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 12.887574ms)
Mar 13 19:46:30.239: INFO: (12) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 12.159464ms)
Mar 13 19:46:30.239: INFO: (12) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 12.61718ms)
Mar 13 19:46:30.242: INFO: (12) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 15.309737ms)
Mar 13 19:46:30.250: INFO: (13) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 7.377448ms)
Mar 13 19:46:30.251: INFO: (13) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 7.830897ms)
Mar 13 19:46:30.252: INFO: (13) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 8.878263ms)
Mar 13 19:46:30.252: INFO: (13) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 9.113297ms)
Mar 13 19:46:30.253: INFO: (13) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 10.348118ms)
Mar 13 19:46:30.253: INFO: (13) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 9.630031ms)
Mar 13 19:46:30.253: INFO: (13) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 9.596569ms)
Mar 13 19:46:30.254: INFO: (13) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 9.957755ms)
Mar 13 19:46:30.254: INFO: (13) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 10.245183ms)
Mar 13 19:46:30.254: INFO: (13) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 10.697623ms)
Mar 13 19:46:30.255: INFO: (13) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 10.928658ms)
Mar 13 19:46:30.258: INFO: (13) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 14.128042ms)
Mar 13 19:46:30.258: INFO: (13) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 15.041929ms)
Mar 13 19:46:30.258: INFO: (13) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 15.191467ms)
Mar 13 19:46:30.258: INFO: (13) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 14.707724ms)
Mar 13 19:46:30.261: INFO: (13) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 18.290883ms)
Mar 13 19:46:30.274: INFO: (14) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 9.013234ms)
Mar 13 19:46:30.274: INFO: (14) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 9.030213ms)
Mar 13 19:46:30.274: INFO: (14) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 9.166609ms)
Mar 13 19:46:30.274: INFO: (14) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 9.641444ms)
Mar 13 19:46:30.278: INFO: (14) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 12.558252ms)
Mar 13 19:46:30.280: INFO: (14) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 14.207977ms)
Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 15.410026ms)
Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.911928ms)
Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 14.962499ms)
Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 15.332662ms)
Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 15.682149ms)
Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 15.921878ms)
Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 15.429873ms)
Mar 13 19:46:30.291: INFO: (14) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 25.950008ms)
Mar 13 19:46:30.291: INFO: (14) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 25.804047ms)
Mar 13 19:46:30.291: INFO: (14) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 25.819367ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 31.664898ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 34.607876ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 31.519632ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 32.00098ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 31.520526ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 31.915065ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 31.617949ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 31.74639ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 34.897999ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 31.884281ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 31.537166ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 31.873307ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 31.774498ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 31.738405ms)
Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 31.870454ms)
Mar 13 19:46:30.331: INFO: (15) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 35.86858ms)
Mar 13 19:46:30.339: INFO: (16) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 6.463272ms)
Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 7.900476ms)
Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 8.801406ms)
Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 8.235509ms)
Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 7.231407ms)
Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 7.152223ms)
Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 8.679712ms)
Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 8.272941ms)
Mar 13 19:46:30.341: INFO: (16) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 9.554231ms)
Mar 13 19:46:30.341: INFO: (16) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 8.431893ms)
Mar 13 19:46:30.341: INFO: (16) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 9.496978ms)
Mar 13 19:46:30.343: INFO: (16) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 10.999775ms)
Mar 13 19:46:30.343: INFO: (16) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 10.612456ms)
Mar 13 19:46:30.343: INFO: (16) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 11.16423ms)
Mar 13 19:46:30.343: INFO: (16) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 11.637169ms)
Mar 13 19:46:30.343: INFO: (16) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 10.942606ms)
Mar 13 19:46:30.348: INFO: (17) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 5.086705ms)
Mar 13 19:46:30.350: INFO: (17) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 6.581976ms)
Mar 13 19:46:30.350: INFO: (17) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 6.688764ms)
Mar 13 19:46:30.351: INFO: (17) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 7.651482ms)
Mar 13 19:46:30.352: INFO: (17) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 8.914457ms)
Mar 13 19:46:30.352: INFO: (17) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 8.552057ms)
Mar 13 19:46:30.352: INFO: (17) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 8.483873ms)
Mar 13 19:46:30.352: INFO: (17) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 8.907373ms)
Mar 13 19:46:30.352: INFO: (17) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 8.831706ms)
Mar 13 19:46:30.354: INFO: (17) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 10.861035ms)
Mar 13 19:46:30.354: INFO: (17) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 11.049925ms)
Mar 13 19:46:30.355: INFO: (17) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 10.667559ms)
Mar 13 19:46:30.355: INFO: (17) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 11.107967ms)
Mar 13 19:46:30.356: INFO: (17) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 12.59299ms)
Mar 13 19:46:30.356: INFO: (17) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 12.812522ms)
Mar 13 19:46:30.357: INFO: (17) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 13.182622ms)
Mar 13 19:46:30.361: INFO: (18) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 4.6427ms)
Mar 13 19:46:30.362: INFO: (18) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 4.968434ms)
Mar 13 19:46:30.362: INFO: (18) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 4.664815ms)
Mar 13 19:46:30.362: INFO: (18) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 4.772774ms)
Mar 13 19:46:30.362: INFO: (18) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 5.499817ms)
Mar 13 19:46:30.363: INFO: (18) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 5.63956ms)
Mar 13 19:46:30.368: INFO: (18) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 10.109246ms)
Mar 13 19:46:30.368: INFO: (18) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 10.050847ms)
Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 10.622123ms)
Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 10.790355ms)
Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 11.238109ms)
Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 11.335703ms)
Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 11.482387ms)
Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 10.800375ms)
Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 11.00696ms)
Mar 13 19:46:30.371: INFO: (18) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 13.788809ms)
Mar 13 19:46:30.377: INFO: (19) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 4.960117ms)
Mar 13 19:46:30.379: INFO: (19) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 6.323825ms)
Mar 13 19:46:30.382: INFO: (19) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 9.248802ms)
Mar 13 19:46:30.382: INFO: (19) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 10.055224ms)
Mar 13 19:46:30.382: INFO: (19) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 9.959138ms)
Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 10.799528ms)
Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 9.82765ms)
Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 9.950478ms)
Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 10.36764ms)
Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 11.646418ms)
Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 11.208824ms)
Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 10.686332ms)
Mar 13 19:46:30.384: INFO: (19) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 11.34323ms)
Mar 13 19:46:30.384: INFO: (19) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 10.971415ms)
Mar 13 19:46:30.384: INFO: (19) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 11.228536ms)
Mar 13 19:46:30.384: INFO: (19) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 11.857922ms)
STEP: deleting ReplicationController proxy-service-rsb44 in namespace proxy-7945, will wait for the garbage collector to delete the pods 03/13/23 19:46:30.384
Mar 13 19:46:30.442: INFO: Deleting ReplicationController proxy-service-rsb44 took: 4.226592ms
Mar 13 19:46:30.543: INFO: Terminating ReplicationController proxy-service-rsb44 pods took: 100.523382ms
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Mar 13 19:46:33.144: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-7945" for this suite. 03/13/23 19:46:33.149
------------------------------
â€¢ [SLOW TEST] [5.257 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/network/proxy.go:101

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:46:27.898
    Mar 13 19:46:27.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename proxy 03/13/23 19:46:27.899
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:27.908
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:27.911
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] should proxy through a service and a pod  [Conformance]
      test/e2e/network/proxy.go:101
    STEP: starting an echo server on multiple ports 03/13/23 19:46:27.925
    STEP: creating replication controller proxy-service-rsb44 in namespace proxy-7945 03/13/23 19:46:27.926
    I0313 19:46:27.930558      21 runners.go:193] Created replication controller with name: proxy-service-rsb44, namespace: proxy-7945, replica count: 1
    I0313 19:46:28.982053      21 runners.go:193] proxy-service-rsb44 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0313 19:46:29.982386      21 runners.go:193] proxy-service-rsb44 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar 13 19:46:29.985: INFO: setup took 2.071740431s, starting test cases
    STEP: running 16 cases, 20 attempts per case, 320 total attempts 03/13/23 19:46:29.985
    Mar 13 19:46:30.008: INFO: (0) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 22.017721ms)
    Mar 13 19:46:30.013: INFO: (0) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 25.875335ms)
    Mar 13 19:46:30.014: INFO: (0) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 26.85868ms)
    Mar 13 19:46:30.018: INFO: (0) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 31.641499ms)
    Mar 13 19:46:30.018: INFO: (0) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 32.028588ms)
    Mar 13 19:46:30.018: INFO: (0) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 32.820143ms)
    Mar 13 19:46:30.019: INFO: (0) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 32.524502ms)
    Mar 13 19:46:30.019: INFO: (0) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 32.912387ms)
    Mar 13 19:46:30.019: INFO: (0) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 32.243375ms)
    Mar 13 19:46:30.021: INFO: (0) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 34.3385ms)
    Mar 13 19:46:30.021: INFO: (0) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 34.671469ms)
    Mar 13 19:46:30.022: INFO: (0) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 35.215648ms)
    Mar 13 19:46:30.022: INFO: (0) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 35.73018ms)
    Mar 13 19:46:30.022: INFO: (0) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 35.455684ms)
    Mar 13 19:46:30.022: INFO: (0) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 35.996438ms)
    Mar 13 19:46:30.023: INFO: (0) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 36.077467ms)
    Mar 13 19:46:30.034: INFO: (1) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 11.199787ms)
    Mar 13 19:46:30.034: INFO: (1) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 10.028886ms)
    Mar 13 19:46:30.034: INFO: (1) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 10.902889ms)
    Mar 13 19:46:30.035: INFO: (1) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 11.180274ms)
    Mar 13 19:46:30.035: INFO: (1) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 12.261752ms)
    Mar 13 19:46:30.035: INFO: (1) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 11.379791ms)
    Mar 13 19:46:30.035: INFO: (1) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 11.403967ms)
    Mar 13 19:46:30.038: INFO: (1) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 12.987802ms)
    Mar 13 19:46:30.038: INFO: (1) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 14.674124ms)
    Mar 13 19:46:30.039: INFO: (1) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 15.162994ms)
    Mar 13 19:46:30.039: INFO: (1) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.292679ms)
    Mar 13 19:46:30.039: INFO: (1) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 14.22882ms)
    Mar 13 19:46:30.040: INFO: (1) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 15.504535ms)
    Mar 13 19:46:30.040: INFO: (1) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 16.944752ms)
    Mar 13 19:46:30.041: INFO: (1) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 16.254878ms)
    Mar 13 19:46:30.041: INFO: (1) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 16.511952ms)
    Mar 13 19:46:30.048: INFO: (2) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 6.678956ms)
    Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 9.932866ms)
    Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 10.47296ms)
    Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 10.834354ms)
    Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 10.210923ms)
    Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 8.985111ms)
    Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 10.161925ms)
    Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 10.327636ms)
    Mar 13 19:46:30.052: INFO: (2) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 10.103307ms)
    Mar 13 19:46:30.056: INFO: (2) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 13.048766ms)
    Mar 13 19:46:30.057: INFO: (2) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 14.468516ms)
    Mar 13 19:46:30.057: INFO: (2) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 14.253193ms)
    Mar 13 19:46:30.058: INFO: (2) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 15.359294ms)
    Mar 13 19:46:30.058: INFO: (2) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 15.082491ms)
    Mar 13 19:46:30.058: INFO: (2) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 14.720744ms)
    Mar 13 19:46:30.058: INFO: (2) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 14.778168ms)
    Mar 13 19:46:30.064: INFO: (3) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 5.887156ms)
    Mar 13 19:46:30.068: INFO: (3) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 9.677419ms)
    Mar 13 19:46:30.070: INFO: (3) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 11.70119ms)
    Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 11.941179ms)
    Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 12.917628ms)
    Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 11.460077ms)
    Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 12.350404ms)
    Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 12.552313ms)
    Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 12.808334ms)
    Mar 13 19:46:30.071: INFO: (3) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 12.995182ms)
    Mar 13 19:46:30.075: INFO: (3) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 16.52717ms)
    Mar 13 19:46:30.075: INFO: (3) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 14.950158ms)
    Mar 13 19:46:30.075: INFO: (3) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 15.273679ms)
    Mar 13 19:46:30.075: INFO: (3) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 17.187085ms)
    Mar 13 19:46:30.076: INFO: (3) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 16.037611ms)
    Mar 13 19:46:30.076: INFO: (3) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 17.173595ms)
    Mar 13 19:46:30.084: INFO: (4) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 7.294146ms)
    Mar 13 19:46:30.084: INFO: (4) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 7.232419ms)
    Mar 13 19:46:30.084: INFO: (4) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 7.113298ms)
    Mar 13 19:46:30.085: INFO: (4) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 7.823043ms)
    Mar 13 19:46:30.085: INFO: (4) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 7.96814ms)
    Mar 13 19:46:30.088: INFO: (4) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 10.684094ms)
    Mar 13 19:46:30.088: INFO: (4) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 10.017418ms)
    Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 12.68557ms)
    Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.070516ms)
    Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 14.048313ms)
    Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 14.039405ms)
    Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 14.268139ms)
    Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 14.007413ms)
    Mar 13 19:46:30.091: INFO: (4) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 14.107926ms)
    Mar 13 19:46:30.095: INFO: (4) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 17.620652ms)
    Mar 13 19:46:30.095: INFO: (4) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 17.91981ms)
    Mar 13 19:46:30.104: INFO: (5) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 7.756101ms)
    Mar 13 19:46:30.110: INFO: (5) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 14.58039ms)
    Mar 13 19:46:30.110: INFO: (5) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.852127ms)
    Mar 13 19:46:30.110: INFO: (5) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 14.759147ms)
    Mar 13 19:46:30.113: INFO: (5) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 16.500127ms)
    Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 19.012726ms)
    Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 18.873695ms)
    Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 20.044628ms)
    Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 20.058541ms)
    Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 19.400237ms)
    Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 20.046787ms)
    Mar 13 19:46:30.116: INFO: (5) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 19.265338ms)
    Mar 13 19:46:30.117: INFO: (5) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 20.077072ms)
    Mar 13 19:46:30.117: INFO: (5) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 21.245461ms)
    Mar 13 19:46:30.117: INFO: (5) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 19.894012ms)
    Mar 13 19:46:30.119: INFO: (5) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 22.174075ms)
    Mar 13 19:46:30.125: INFO: (6) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 5.961974ms)
    Mar 13 19:46:30.125: INFO: (6) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 5.8614ms)
    Mar 13 19:46:30.129: INFO: (6) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 8.948983ms)
    Mar 13 19:46:30.130: INFO: (6) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 9.794502ms)
    Mar 13 19:46:30.130: INFO: (6) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 9.704662ms)
    Mar 13 19:46:30.130: INFO: (6) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 9.822263ms)
    Mar 13 19:46:30.130: INFO: (6) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 9.698043ms)
    Mar 13 19:46:30.130: INFO: (6) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 10.702238ms)
    Mar 13 19:46:30.130: INFO: (6) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 9.829859ms)
    Mar 13 19:46:30.131: INFO: (6) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 10.971157ms)
    Mar 13 19:46:30.131: INFO: (6) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 11.857505ms)
    Mar 13 19:46:30.134: INFO: (6) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 14.016172ms)
    Mar 13 19:46:30.135: INFO: (6) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 14.016259ms)
    Mar 13 19:46:30.135: INFO: (6) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 14.905637ms)
    Mar 13 19:46:30.135: INFO: (6) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 14.449673ms)
    Mar 13 19:46:30.135: INFO: (6) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 14.713162ms)
    Mar 13 19:46:30.144: INFO: (7) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 8.529757ms)
    Mar 13 19:46:30.144: INFO: (7) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 8.562878ms)
    Mar 13 19:46:30.144: INFO: (7) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 8.838157ms)
    Mar 13 19:46:30.149: INFO: (7) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 13.852091ms)
    Mar 13 19:46:30.150: INFO: (7) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 14.68041ms)
    Mar 13 19:46:30.151: INFO: (7) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 15.332722ms)
    Mar 13 19:46:30.151: INFO: (7) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 15.598385ms)
    Mar 13 19:46:30.150: INFO: (7) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 14.128901ms)
    Mar 13 19:46:30.150: INFO: (7) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 14.885236ms)
    Mar 13 19:46:30.151: INFO: (7) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 14.655867ms)
    Mar 13 19:46:30.151: INFO: (7) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 14.957523ms)
    Mar 13 19:46:30.151: INFO: (7) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.938709ms)
    Mar 13 19:46:30.153: INFO: (7) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 17.623548ms)
    Mar 13 19:46:30.153: INFO: (7) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 17.596544ms)
    Mar 13 19:46:30.154: INFO: (7) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 17.921165ms)
    Mar 13 19:46:30.157: INFO: (7) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 21.52843ms)
    Mar 13 19:46:30.165: INFO: (8) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 7.638013ms)
    Mar 13 19:46:30.166: INFO: (8) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 6.878531ms)
    Mar 13 19:46:30.166: INFO: (8) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 7.872099ms)
    Mar 13 19:46:30.166: INFO: (8) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 7.179221ms)
    Mar 13 19:46:30.167: INFO: (8) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 7.87414ms)
    Mar 13 19:46:30.167: INFO: (8) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 7.992183ms)
    Mar 13 19:46:30.168: INFO: (8) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 8.940218ms)
    Mar 13 19:46:30.169: INFO: (8) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 10.91657ms)
    Mar 13 19:46:30.169: INFO: (8) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 12.007872ms)
    Mar 13 19:46:30.170: INFO: (8) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 11.585002ms)
    Mar 13 19:46:30.171: INFO: (8) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 13.485841ms)
    Mar 13 19:46:30.171: INFO: (8) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 12.732762ms)
    Mar 13 19:46:30.172: INFO: (8) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 14.516508ms)
    Mar 13 19:46:30.173: INFO: (8) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 14.402957ms)
    Mar 13 19:46:30.173: INFO: (8) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 15.24625ms)
    Mar 13 19:46:30.173: INFO: (8) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 14.944392ms)
    Mar 13 19:46:30.182: INFO: (9) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 8.716315ms)
    Mar 13 19:46:30.182: INFO: (9) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 8.522463ms)
    Mar 13 19:46:30.183: INFO: (9) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 8.840002ms)
    Mar 13 19:46:30.183: INFO: (9) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 9.274291ms)
    Mar 13 19:46:30.183: INFO: (9) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 9.582959ms)
    Mar 13 19:46:30.183: INFO: (9) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 9.792172ms)
    Mar 13 19:46:30.187: INFO: (9) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 13.679226ms)
    Mar 13 19:46:30.188: INFO: (9) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 13.923061ms)
    Mar 13 19:46:30.188: INFO: (9) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 13.924489ms)
    Mar 13 19:46:30.188: INFO: (9) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 14.085189ms)
    Mar 13 19:46:30.189: INFO: (9) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 15.369157ms)
    Mar 13 19:46:30.189: INFO: (9) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 14.729593ms)
    Mar 13 19:46:30.189: INFO: (9) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.622294ms)
    Mar 13 19:46:30.195: INFO: (9) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 21.177754ms)
    Mar 13 19:46:30.195: INFO: (9) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 20.716288ms)
    Mar 13 19:46:30.195: INFO: (9) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 20.853777ms)
    Mar 13 19:46:30.204: INFO: (10) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 7.215505ms)
    Mar 13 19:46:30.204: INFO: (10) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 7.261978ms)
    Mar 13 19:46:30.206: INFO: (10) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 9.478018ms)
    Mar 13 19:46:30.206: INFO: (10) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 9.463689ms)
    Mar 13 19:46:30.206: INFO: (10) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 9.190401ms)
    Mar 13 19:46:30.206: INFO: (10) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 10.332568ms)
    Mar 13 19:46:30.206: INFO: (10) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 9.193153ms)
    Mar 13 19:46:30.206: INFO: (10) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 9.587793ms)
    Mar 13 19:46:30.209: INFO: (10) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 12.051461ms)
    Mar 13 19:46:30.209: INFO: (10) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 11.937781ms)
    Mar 13 19:46:30.209: INFO: (10) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 12.45607ms)
    Mar 13 19:46:30.209: INFO: (10) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 12.614388ms)
    Mar 13 19:46:30.209: INFO: (10) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 12.00022ms)
    Mar 13 19:46:30.209: INFO: (10) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 12.18751ms)
    Mar 13 19:46:30.210: INFO: (10) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 13.486387ms)
    Mar 13 19:46:30.211: INFO: (10) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 13.872887ms)
    Mar 13 19:46:30.219: INFO: (11) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 8.457635ms)
    Mar 13 19:46:30.223: INFO: (11) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 11.739486ms)
    Mar 13 19:46:30.223: INFO: (11) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 12.30288ms)
    Mar 13 19:46:30.224: INFO: (11) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 12.957675ms)
    Mar 13 19:46:30.224: INFO: (11) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 12.729055ms)
    Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 13.942027ms)
    Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 14.444039ms)
    Mar 13 19:46:30.224: INFO: (11) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 12.750728ms)
    Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 14.526453ms)
    Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 14.355093ms)
    Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 14.749175ms)
    Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 14.64283ms)
    Mar 13 19:46:30.225: INFO: (11) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.378344ms)
    Mar 13 19:46:30.226: INFO: (11) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.653938ms)
    Mar 13 19:46:30.226: INFO: (11) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 14.736306ms)
    Mar 13 19:46:30.226: INFO: (11) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 14.419599ms)
    Mar 13 19:46:30.232: INFO: (12) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 6.425528ms)
    Mar 13 19:46:30.233: INFO: (12) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 6.624819ms)
    Mar 13 19:46:30.233: INFO: (12) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 7.006264ms)
    Mar 13 19:46:30.235: INFO: (12) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 8.366009ms)
    Mar 13 19:46:30.235: INFO: (12) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 8.646734ms)
    Mar 13 19:46:30.236: INFO: (12) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 9.303368ms)
    Mar 13 19:46:30.236: INFO: (12) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 9.406906ms)
    Mar 13 19:46:30.236: INFO: (12) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 9.585689ms)
    Mar 13 19:46:30.236: INFO: (12) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 9.89478ms)
    Mar 13 19:46:30.237: INFO: (12) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 10.834191ms)
    Mar 13 19:46:30.238: INFO: (12) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 10.755846ms)
    Mar 13 19:46:30.239: INFO: (12) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 12.757857ms)
    Mar 13 19:46:30.239: INFO: (12) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 12.887574ms)
    Mar 13 19:46:30.239: INFO: (12) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 12.159464ms)
    Mar 13 19:46:30.239: INFO: (12) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 12.61718ms)
    Mar 13 19:46:30.242: INFO: (12) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 15.309737ms)
    Mar 13 19:46:30.250: INFO: (13) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 7.377448ms)
    Mar 13 19:46:30.251: INFO: (13) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 7.830897ms)
    Mar 13 19:46:30.252: INFO: (13) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 8.878263ms)
    Mar 13 19:46:30.252: INFO: (13) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 9.113297ms)
    Mar 13 19:46:30.253: INFO: (13) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 10.348118ms)
    Mar 13 19:46:30.253: INFO: (13) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 9.630031ms)
    Mar 13 19:46:30.253: INFO: (13) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 9.596569ms)
    Mar 13 19:46:30.254: INFO: (13) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 9.957755ms)
    Mar 13 19:46:30.254: INFO: (13) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 10.245183ms)
    Mar 13 19:46:30.254: INFO: (13) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 10.697623ms)
    Mar 13 19:46:30.255: INFO: (13) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 10.928658ms)
    Mar 13 19:46:30.258: INFO: (13) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 14.128042ms)
    Mar 13 19:46:30.258: INFO: (13) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 15.041929ms)
    Mar 13 19:46:30.258: INFO: (13) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 15.191467ms)
    Mar 13 19:46:30.258: INFO: (13) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 14.707724ms)
    Mar 13 19:46:30.261: INFO: (13) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 18.290883ms)
    Mar 13 19:46:30.274: INFO: (14) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 9.013234ms)
    Mar 13 19:46:30.274: INFO: (14) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 9.030213ms)
    Mar 13 19:46:30.274: INFO: (14) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 9.166609ms)
    Mar 13 19:46:30.274: INFO: (14) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 9.641444ms)
    Mar 13 19:46:30.278: INFO: (14) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 12.558252ms)
    Mar 13 19:46:30.280: INFO: (14) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 14.207977ms)
    Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 15.410026ms)
    Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 14.911928ms)
    Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 14.962499ms)
    Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 15.332662ms)
    Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 15.682149ms)
    Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 15.921878ms)
    Mar 13 19:46:30.281: INFO: (14) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 15.429873ms)
    Mar 13 19:46:30.291: INFO: (14) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 25.950008ms)
    Mar 13 19:46:30.291: INFO: (14) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 25.804047ms)
    Mar 13 19:46:30.291: INFO: (14) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 25.819367ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 31.664898ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 34.607876ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 31.519632ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 32.00098ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 31.520526ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 31.915065ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 31.617949ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 31.74639ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 34.897999ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 31.884281ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 31.537166ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 31.873307ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 31.774498ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 31.738405ms)
    Mar 13 19:46:30.326: INFO: (15) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 31.870454ms)
    Mar 13 19:46:30.331: INFO: (15) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 35.86858ms)
    Mar 13 19:46:30.339: INFO: (16) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 6.463272ms)
    Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 7.900476ms)
    Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 8.801406ms)
    Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 8.235509ms)
    Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 7.231407ms)
    Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 7.152223ms)
    Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 8.679712ms)
    Mar 13 19:46:30.340: INFO: (16) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 8.272941ms)
    Mar 13 19:46:30.341: INFO: (16) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 9.554231ms)
    Mar 13 19:46:30.341: INFO: (16) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 8.431893ms)
    Mar 13 19:46:30.341: INFO: (16) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 9.496978ms)
    Mar 13 19:46:30.343: INFO: (16) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 10.999775ms)
    Mar 13 19:46:30.343: INFO: (16) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 10.612456ms)
    Mar 13 19:46:30.343: INFO: (16) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 11.16423ms)
    Mar 13 19:46:30.343: INFO: (16) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 11.637169ms)
    Mar 13 19:46:30.343: INFO: (16) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 10.942606ms)
    Mar 13 19:46:30.348: INFO: (17) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 5.086705ms)
    Mar 13 19:46:30.350: INFO: (17) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 6.581976ms)
    Mar 13 19:46:30.350: INFO: (17) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 6.688764ms)
    Mar 13 19:46:30.351: INFO: (17) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 7.651482ms)
    Mar 13 19:46:30.352: INFO: (17) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 8.914457ms)
    Mar 13 19:46:30.352: INFO: (17) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 8.552057ms)
    Mar 13 19:46:30.352: INFO: (17) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 8.483873ms)
    Mar 13 19:46:30.352: INFO: (17) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 8.907373ms)
    Mar 13 19:46:30.352: INFO: (17) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 8.831706ms)
    Mar 13 19:46:30.354: INFO: (17) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 10.861035ms)
    Mar 13 19:46:30.354: INFO: (17) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 11.049925ms)
    Mar 13 19:46:30.355: INFO: (17) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 10.667559ms)
    Mar 13 19:46:30.355: INFO: (17) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 11.107967ms)
    Mar 13 19:46:30.356: INFO: (17) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 12.59299ms)
    Mar 13 19:46:30.356: INFO: (17) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 12.812522ms)
    Mar 13 19:46:30.357: INFO: (17) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 13.182622ms)
    Mar 13 19:46:30.361: INFO: (18) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 4.6427ms)
    Mar 13 19:46:30.362: INFO: (18) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 4.968434ms)
    Mar 13 19:46:30.362: INFO: (18) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 4.664815ms)
    Mar 13 19:46:30.362: INFO: (18) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 4.772774ms)
    Mar 13 19:46:30.362: INFO: (18) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 5.499817ms)
    Mar 13 19:46:30.363: INFO: (18) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 5.63956ms)
    Mar 13 19:46:30.368: INFO: (18) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 10.109246ms)
    Mar 13 19:46:30.368: INFO: (18) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 10.050847ms)
    Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 10.622123ms)
    Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 10.790355ms)
    Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 11.238109ms)
    Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 11.335703ms)
    Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 11.482387ms)
    Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 10.800375ms)
    Mar 13 19:46:30.369: INFO: (18) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 11.00696ms)
    Mar 13 19:46:30.371: INFO: (18) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 13.788809ms)
    Mar 13 19:46:30.377: INFO: (19) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:160/proxy/: foo (200; 4.960117ms)
    Mar 13 19:46:30.379: INFO: (19) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:462/proxy/: tls qux (200; 6.323825ms)
    Mar 13 19:46:30.382: INFO: (19) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:160/proxy/: foo (200; 9.248802ms)
    Mar 13 19:46:30.382: INFO: (19) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:1080/proxy/rewriteme">test<... (200; 10.055224ms)
    Mar 13 19:46:30.382: INFO: (19) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:1080/proxy/rewriteme">... (200; 9.959138ms)
    Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname1/proxy/: foo (200; 10.799528ms)
    Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname2/proxy/: bar (200; 9.82765ms)
    Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/pods/http:proxy-service-rsb44-49c8d:162/proxy/: bar (200; 9.950478ms)
    Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:443/proxy/tlsrewritem... (200; 10.36764ms)
    Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname2/proxy/: tls qux (200; 11.646418ms)
    Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/services/proxy-service-rsb44:portname2/proxy/: bar (200; 11.208824ms)
    Mar 13 19:46:30.383: INFO: (19) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d:162/proxy/: bar (200; 10.686332ms)
    Mar 13 19:46:30.384: INFO: (19) /api/v1/namespaces/proxy-7945/pods/https:proxy-service-rsb44-49c8d:460/proxy/: tls baz (200; 11.34323ms)
    Mar 13 19:46:30.384: INFO: (19) /api/v1/namespaces/proxy-7945/services/http:proxy-service-rsb44:portname1/proxy/: foo (200; 10.971415ms)
    Mar 13 19:46:30.384: INFO: (19) /api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/: <a href="/api/v1/namespaces/proxy-7945/pods/proxy-service-rsb44-49c8d/proxy/rewriteme">test</a> (200; 11.228536ms)
    Mar 13 19:46:30.384: INFO: (19) /api/v1/namespaces/proxy-7945/services/https:proxy-service-rsb44:tlsportname1/proxy/: tls baz (200; 11.857922ms)
    STEP: deleting ReplicationController proxy-service-rsb44 in namespace proxy-7945, will wait for the garbage collector to delete the pods 03/13/23 19:46:30.384
    Mar 13 19:46:30.442: INFO: Deleting ReplicationController proxy-service-rsb44 took: 4.226592ms
    Mar 13 19:46:30.543: INFO: Terminating ReplicationController proxy-service-rsb44 pods took: 100.523382ms
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:46:33.144: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-7945" for this suite. 03/13/23 19:46:33.149
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:134
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:46:33.155
Mar 13 19:46:33.155: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-lifecycle-hook 03/13/23 19:46:33.157
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:33.169
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:33.173
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 03/13/23 19:46:33.179
Mar 13 19:46:33.186: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-7875" to be "running and ready"
Mar 13 19:46:33.189: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.567999ms
Mar 13 19:46:33.189: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:46:35.193: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.006937076s
Mar 13 19:46:35.193: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Mar 13 19:46:35.193: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:134
STEP: create the pod with lifecycle hook 03/13/23 19:46:35.196
Mar 13 19:46:35.200: INFO: Waiting up to 5m0s for pod "pod-with-poststart-exec-hook" in namespace "container-lifecycle-hook-7875" to be "running and ready"
Mar 13 19:46:35.203: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 2.446831ms
Mar 13 19:46:35.203: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:46:37.207: INFO: Pod "pod-with-poststart-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.006715307s
Mar 13 19:46:37.207: INFO: The phase of Pod pod-with-poststart-exec-hook is Running (Ready = true)
Mar 13 19:46:37.207: INFO: Pod "pod-with-poststart-exec-hook" satisfied condition "running and ready"
STEP: check poststart hook 03/13/23 19:46:37.21
STEP: delete the pod with lifecycle hook 03/13/23 19:46:37.231
Mar 13 19:46:37.236: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Mar 13 19:46:37.239: INFO: Pod pod-with-poststart-exec-hook still exists
Mar 13 19:46:39.240: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Mar 13 19:46:39.244: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Mar 13 19:46:39.245: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-7875" for this suite. 03/13/23 19:46:39.248
------------------------------
â€¢ [SLOW TEST] [6.096 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:134

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:46:33.155
    Mar 13 19:46:33.155: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-lifecycle-hook 03/13/23 19:46:33.157
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:33.169
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:33.173
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 03/13/23 19:46:33.179
    Mar 13 19:46:33.186: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-7875" to be "running and ready"
    Mar 13 19:46:33.189: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.567999ms
    Mar 13 19:46:33.189: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:46:35.193: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.006937076s
    Mar 13 19:46:35.193: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Mar 13 19:46:35.193: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute poststart exec hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:134
    STEP: create the pod with lifecycle hook 03/13/23 19:46:35.196
    Mar 13 19:46:35.200: INFO: Waiting up to 5m0s for pod "pod-with-poststart-exec-hook" in namespace "container-lifecycle-hook-7875" to be "running and ready"
    Mar 13 19:46:35.203: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 2.446831ms
    Mar 13 19:46:35.203: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:46:37.207: INFO: Pod "pod-with-poststart-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.006715307s
    Mar 13 19:46:37.207: INFO: The phase of Pod pod-with-poststart-exec-hook is Running (Ready = true)
    Mar 13 19:46:37.207: INFO: Pod "pod-with-poststart-exec-hook" satisfied condition "running and ready"
    STEP: check poststart hook 03/13/23 19:46:37.21
    STEP: delete the pod with lifecycle hook 03/13/23 19:46:37.231
    Mar 13 19:46:37.236: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Mar 13 19:46:37.239: INFO: Pod pod-with-poststart-exec-hook still exists
    Mar 13 19:46:39.240: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Mar 13 19:46:39.244: INFO: Pod pod-with-poststart-exec-hook no longer exists
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:46:39.245: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-7875" for this suite. 03/13/23 19:46:39.248
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:93
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:46:39.258
Mar 13 19:46:39.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pod-network-test 03/13/23 19:46:39.259
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:39.269
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:39.271
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:93
STEP: Performing setup for networking test in namespace pod-network-test-437 03/13/23 19:46:39.275
STEP: creating a selector 03/13/23 19:46:39.275
STEP: Creating the service pods in kubernetes 03/13/23 19:46:39.275
Mar 13 19:46:39.275: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Mar 13 19:46:39.290: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-437" to be "running and ready"
Mar 13 19:46:39.293: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.900733ms
Mar 13 19:46:39.293: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:46:41.297: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.006771773s
Mar 13 19:46:41.297: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:46:43.298: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.008155061s
Mar 13 19:46:43.298: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:46:45.298: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.008227545s
Mar 13 19:46:45.298: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:46:47.300: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.010409763s
Mar 13 19:46:47.300: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:46:49.297: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.007268482s
Mar 13 19:46:49.297: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:46:51.297: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.007482919s
Mar 13 19:46:51.297: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:46:53.298: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.007876699s
Mar 13 19:46:53.298: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:46:55.297: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.006879466s
Mar 13 19:46:55.297: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:46:57.298: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.007536499s
Mar 13 19:46:57.298: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:46:59.297: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.006913966s
Mar 13 19:46:59.297: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar 13 19:47:01.298: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.007619758s
Mar 13 19:47:01.298: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Mar 13 19:47:01.298: INFO: Pod "netserver-0" satisfied condition "running and ready"
Mar 13 19:47:01.300: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-437" to be "running and ready"
Mar 13 19:47:01.303: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 2.677001ms
Mar 13 19:47:01.303: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Mar 13 19:47:01.303: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 03/13/23 19:47:01.306
Mar 13 19:47:01.310: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-437" to be "running"
Mar 13 19:47:01.313: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.854166ms
Mar 13 19:47:03.319: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008465149s
Mar 13 19:47:03.319: INFO: Pod "test-container-pod" satisfied condition "running"
Mar 13 19:47:03.323: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Mar 13 19:47:03.323: INFO: Breadth first check of 10.244.181.171 on host 10.1.96.5...
Mar 13 19:47:03.336: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.181.172:9080/dial?request=hostname&protocol=udp&host=10.244.181.171&port=8081&tries=1'] Namespace:pod-network-test-437 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:47:03.336: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:47:03.338: INFO: ExecWithOptions: Clientset creation
Mar 13 19:47:03.338: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-437/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.181.172%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.181.171%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Mar 13 19:47:03.521: INFO: Waiting for responses: map[]
Mar 13 19:47:03.522: INFO: reached 10.244.181.171 after 0/1 tries
Mar 13 19:47:03.522: INFO: Breadth first check of 10.244.40.224 on host 10.1.96.4...
Mar 13 19:47:03.528: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.181.172:9080/dial?request=hostname&protocol=udp&host=10.244.40.224&port=8081&tries=1'] Namespace:pod-network-test-437 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:47:03.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:47:03.529: INFO: ExecWithOptions: Clientset creation
Mar 13 19:47:03.529: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-437/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.181.172%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.40.224%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Mar 13 19:47:03.768: INFO: Waiting for responses: map[]
Mar 13 19:47:03.770: INFO: reached 10.244.40.224 after 0/1 tries
Mar 13 19:47:03.770: INFO: Going to retry 0 out of 2 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Mar 13 19:47:03.770: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-437" for this suite. 03/13/23 19:47:03.787
------------------------------
â€¢ [SLOW TEST] [24.547 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:93

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:46:39.258
    Mar 13 19:46:39.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pod-network-test 03/13/23 19:46:39.259
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:46:39.269
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:46:39.271
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:93
    STEP: Performing setup for networking test in namespace pod-network-test-437 03/13/23 19:46:39.275
    STEP: creating a selector 03/13/23 19:46:39.275
    STEP: Creating the service pods in kubernetes 03/13/23 19:46:39.275
    Mar 13 19:46:39.275: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Mar 13 19:46:39.290: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-437" to be "running and ready"
    Mar 13 19:46:39.293: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.900733ms
    Mar 13 19:46:39.293: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:46:41.297: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.006771773s
    Mar 13 19:46:41.297: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:46:43.298: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.008155061s
    Mar 13 19:46:43.298: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:46:45.298: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.008227545s
    Mar 13 19:46:45.298: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:46:47.300: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.010409763s
    Mar 13 19:46:47.300: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:46:49.297: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.007268482s
    Mar 13 19:46:49.297: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:46:51.297: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.007482919s
    Mar 13 19:46:51.297: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:46:53.298: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.007876699s
    Mar 13 19:46:53.298: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:46:55.297: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.006879466s
    Mar 13 19:46:55.297: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:46:57.298: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.007536499s
    Mar 13 19:46:57.298: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:46:59.297: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.006913966s
    Mar 13 19:46:59.297: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar 13 19:47:01.298: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.007619758s
    Mar 13 19:47:01.298: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Mar 13 19:47:01.298: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Mar 13 19:47:01.300: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-437" to be "running and ready"
    Mar 13 19:47:01.303: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 2.677001ms
    Mar 13 19:47:01.303: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Mar 13 19:47:01.303: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 03/13/23 19:47:01.306
    Mar 13 19:47:01.310: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-437" to be "running"
    Mar 13 19:47:01.313: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.854166ms
    Mar 13 19:47:03.319: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008465149s
    Mar 13 19:47:03.319: INFO: Pod "test-container-pod" satisfied condition "running"
    Mar 13 19:47:03.323: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Mar 13 19:47:03.323: INFO: Breadth first check of 10.244.181.171 on host 10.1.96.5...
    Mar 13 19:47:03.336: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.181.172:9080/dial?request=hostname&protocol=udp&host=10.244.181.171&port=8081&tries=1'] Namespace:pod-network-test-437 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:47:03.336: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:47:03.338: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:47:03.338: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-437/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.181.172%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.181.171%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Mar 13 19:47:03.521: INFO: Waiting for responses: map[]
    Mar 13 19:47:03.522: INFO: reached 10.244.181.171 after 0/1 tries
    Mar 13 19:47:03.522: INFO: Breadth first check of 10.244.40.224 on host 10.1.96.4...
    Mar 13 19:47:03.528: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.181.172:9080/dial?request=hostname&protocol=udp&host=10.244.40.224&port=8081&tries=1'] Namespace:pod-network-test-437 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:47:03.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:47:03.529: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:47:03.529: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-437/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.181.172%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.40.224%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Mar 13 19:47:03.768: INFO: Waiting for responses: map[]
    Mar 13 19:47:03.770: INFO: reached 10.244.40.224 after 0/1 tries
    Mar 13 19:47:03.770: INFO: Going to retry 0 out of 2 pods....
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:47:03.770: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-437" for this suite. 03/13/23 19:47:03.787
  << End Captured GinkgoWriter Output
------------------------------
[sig-cli] Kubectl client Guestbook application
  should create and stop a working application  [Conformance]
  test/e2e/kubectl/kubectl.go:394
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:47:03.808
Mar 13 19:47:03.808: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 19:47:03.81
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:03.885
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:03.901
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should create and stop a working application  [Conformance]
  test/e2e/kubectl/kubectl.go:394
STEP: creating all guestbook components 03/13/23 19:47:03.916
Mar 13 19:47:03.916: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Mar 13 19:47:03.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 create -f -'
Mar 13 19:47:04.222: INFO: stderr: ""
Mar 13 19:47:04.222: INFO: stdout: "service/agnhost-replica created\n"
Mar 13 19:47:04.222: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Mar 13 19:47:04.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 create -f -'
Mar 13 19:47:04.558: INFO: stderr: ""
Mar 13 19:47:04.558: INFO: stdout: "service/agnhost-primary created\n"
Mar 13 19:47:04.559: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Mar 13 19:47:04.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 create -f -'
Mar 13 19:47:04.854: INFO: stderr: ""
Mar 13 19:47:04.854: INFO: stdout: "service/frontend created\n"
Mar 13 19:47:04.854: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Mar 13 19:47:04.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 create -f -'
Mar 13 19:47:05.101: INFO: stderr: ""
Mar 13 19:47:05.101: INFO: stdout: "deployment.apps/frontend created\n"
Mar 13 19:47:05.101: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Mar 13 19:47:05.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 create -f -'
Mar 13 19:47:05.409: INFO: stderr: ""
Mar 13 19:47:05.409: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Mar 13 19:47:05.409: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Mar 13 19:47:05.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 create -f -'
Mar 13 19:47:05.842: INFO: stderr: ""
Mar 13 19:47:05.842: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app 03/13/23 19:47:05.842
Mar 13 19:47:05.842: INFO: Waiting for all frontend pods to be Running.
Mar 13 19:47:10.896: INFO: Waiting for frontend to serve content.
Mar 13 19:47:10.936: INFO: Trying to add a new entry to the guestbook.
Mar 13 19:47:10.952: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources 03/13/23 19:47:10.991
Mar 13 19:47:10.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 delete --grace-period=0 --force -f -'
Mar 13 19:47:11.142: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar 13 19:47:11.142: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources 03/13/23 19:47:11.142
Mar 13 19:47:11.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 delete --grace-period=0 --force -f -'
Mar 13 19:47:11.272: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar 13 19:47:11.272: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources 03/13/23 19:47:11.273
Mar 13 19:47:11.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 delete --grace-period=0 --force -f -'
Mar 13 19:47:11.418: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar 13 19:47:11.418: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources 03/13/23 19:47:11.418
Mar 13 19:47:11.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 delete --grace-period=0 --force -f -'
Mar 13 19:47:11.541: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar 13 19:47:11.541: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources 03/13/23 19:47:11.541
Mar 13 19:47:11.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 delete --grace-period=0 --force -f -'
Mar 13 19:47:11.770: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar 13 19:47:11.770: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources 03/13/23 19:47:11.77
Mar 13 19:47:11.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 delete --grace-period=0 --force -f -'
Mar 13 19:47:12.192: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar 13 19:47:12.192: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 19:47:12.192: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8826" for this suite. 03/13/23 19:47:12.2
------------------------------
â€¢ [SLOW TEST] [8.408 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:369
    should create and stop a working application  [Conformance]
    test/e2e/kubectl/kubectl.go:394

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:47:03.808
    Mar 13 19:47:03.808: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 19:47:03.81
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:03.885
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:03.901
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should create and stop a working application  [Conformance]
      test/e2e/kubectl/kubectl.go:394
    STEP: creating all guestbook components 03/13/23 19:47:03.916
    Mar 13 19:47:03.916: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: agnhost-replica
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      ports:
      - port: 6379
      selector:
        app: agnhost
        role: replica
        tier: backend

    Mar 13 19:47:03.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 create -f -'
    Mar 13 19:47:04.222: INFO: stderr: ""
    Mar 13 19:47:04.222: INFO: stdout: "service/agnhost-replica created\n"
    Mar 13 19:47:04.222: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: agnhost-primary
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      ports:
      - port: 6379
        targetPort: 6379
      selector:
        app: agnhost
        role: primary
        tier: backend

    Mar 13 19:47:04.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 create -f -'
    Mar 13 19:47:04.558: INFO: stderr: ""
    Mar 13 19:47:04.558: INFO: stdout: "service/agnhost-primary created\n"
    Mar 13 19:47:04.559: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: frontend
      labels:
        app: guestbook
        tier: frontend
    spec:
      # if your cluster supports it, uncomment the following to automatically create
      # an external load-balanced IP for the frontend service.
      # type: LoadBalancer
      ports:
      - port: 80
      selector:
        app: guestbook
        tier: frontend

    Mar 13 19:47:04.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 create -f -'
    Mar 13 19:47:04.854: INFO: stderr: ""
    Mar 13 19:47:04.854: INFO: stdout: "service/frontend created\n"
    Mar 13 19:47:04.854: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: frontend
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: guestbook
          tier: frontend
      template:
        metadata:
          labels:
            app: guestbook
            tier: frontend
        spec:
          containers:
          - name: guestbook-frontend
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--backend-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 80

    Mar 13 19:47:04.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 create -f -'
    Mar 13 19:47:05.101: INFO: stderr: ""
    Mar 13 19:47:05.101: INFO: stdout: "deployment.apps/frontend created\n"
    Mar 13 19:47:05.101: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: agnhost-primary
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: agnhost
          role: primary
          tier: backend
      template:
        metadata:
          labels:
            app: agnhost
            role: primary
            tier: backend
        spec:
          containers:
          - name: primary
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--http-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 6379

    Mar 13 19:47:05.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 create -f -'
    Mar 13 19:47:05.409: INFO: stderr: ""
    Mar 13 19:47:05.409: INFO: stdout: "deployment.apps/agnhost-primary created\n"
    Mar 13 19:47:05.409: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: agnhost-replica
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: agnhost
          role: replica
          tier: backend
      template:
        metadata:
          labels:
            app: agnhost
            role: replica
            tier: backend
        spec:
          containers:
          - name: replica
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 6379

    Mar 13 19:47:05.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 create -f -'
    Mar 13 19:47:05.842: INFO: stderr: ""
    Mar 13 19:47:05.842: INFO: stdout: "deployment.apps/agnhost-replica created\n"
    STEP: validating guestbook app 03/13/23 19:47:05.842
    Mar 13 19:47:05.842: INFO: Waiting for all frontend pods to be Running.
    Mar 13 19:47:10.896: INFO: Waiting for frontend to serve content.
    Mar 13 19:47:10.936: INFO: Trying to add a new entry to the guestbook.
    Mar 13 19:47:10.952: INFO: Verifying that added entry can be retrieved.
    STEP: using delete to clean up resources 03/13/23 19:47:10.991
    Mar 13 19:47:10.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 delete --grace-period=0 --force -f -'
    Mar 13 19:47:11.142: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar 13 19:47:11.142: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
    STEP: using delete to clean up resources 03/13/23 19:47:11.142
    Mar 13 19:47:11.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 delete --grace-period=0 --force -f -'
    Mar 13 19:47:11.272: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar 13 19:47:11.272: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
    STEP: using delete to clean up resources 03/13/23 19:47:11.273
    Mar 13 19:47:11.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 delete --grace-period=0 --force -f -'
    Mar 13 19:47:11.418: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar 13 19:47:11.418: INFO: stdout: "service \"frontend\" force deleted\n"
    STEP: using delete to clean up resources 03/13/23 19:47:11.418
    Mar 13 19:47:11.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 delete --grace-period=0 --force -f -'
    Mar 13 19:47:11.541: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar 13 19:47:11.541: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
    STEP: using delete to clean up resources 03/13/23 19:47:11.541
    Mar 13 19:47:11.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 delete --grace-period=0 --force -f -'
    Mar 13 19:47:11.770: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar 13 19:47:11.770: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
    STEP: using delete to clean up resources 03/13/23 19:47:11.77
    Mar 13 19:47:11.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8826 delete --grace-period=0 --force -f -'
    Mar 13 19:47:12.192: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar 13 19:47:12.192: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:47:12.192: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8826" for this suite. 03/13/23 19:47:12.2
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] DisruptionController
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:47:12.215
Mar 13 19:47:12.215: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename disruption 03/13/23 19:47:12.218
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:12.274
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:12.31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164
STEP: Waiting for the pdb to be processed 03/13/23 19:47:12.344
STEP: Updating PodDisruptionBudget status 03/13/23 19:47:14.369
STEP: Waiting for all pods to be running 03/13/23 19:47:14.386
Mar 13 19:47:14.394: INFO: running pods: 0 < 1
STEP: locating a running pod 03/13/23 19:47:16.398
STEP: Waiting for the pdb to be processed 03/13/23 19:47:16.408
STEP: Patching PodDisruptionBudget status 03/13/23 19:47:16.413
STEP: Waiting for the pdb to be processed 03/13/23 19:47:16.42
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Mar 13 19:47:16.423: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-2512" for this suite. 03/13/23 19:47:16.426
------------------------------
â€¢ [4.216 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:47:12.215
    Mar 13 19:47:12.215: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename disruption 03/13/23 19:47:12.218
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:12.274
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:12.31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should update/patch PodDisruptionBudget status [Conformance]
      test/e2e/apps/disruption.go:164
    STEP: Waiting for the pdb to be processed 03/13/23 19:47:12.344
    STEP: Updating PodDisruptionBudget status 03/13/23 19:47:14.369
    STEP: Waiting for all pods to be running 03/13/23 19:47:14.386
    Mar 13 19:47:14.394: INFO: running pods: 0 < 1
    STEP: locating a running pod 03/13/23 19:47:16.398
    STEP: Waiting for the pdb to be processed 03/13/23 19:47:16.408
    STEP: Patching PodDisruptionBudget status 03/13/23 19:47:16.413
    STEP: Waiting for the pdb to be processed 03/13/23 19:47:16.42
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:47:16.423: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-2512" for this suite. 03/13/23 19:47:16.426
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/node/pods.go:161
[BeforeEach] [sig-node] Pods Extended
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:47:16.433
Mar 13 19:47:16.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pods 03/13/23 19:47:16.435
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:16.444
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:16.447
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/node/pods.go:161
STEP: creating the pod 03/13/23 19:47:16.451
STEP: submitting the pod to kubernetes 03/13/23 19:47:16.451
STEP: verifying QOS class is set on the pod 03/13/23 19:47:16.457
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/node/init/init.go:32
Mar 13 19:47:16.460: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods Extended
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods Extended
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods Extended
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-6733" for this suite. 03/13/23 19:47:16.465
------------------------------
â€¢ [0.036 seconds]
[sig-node] Pods Extended
test/e2e/node/framework.go:23
  Pods Set QOS Class
  test/e2e/node/pods.go:150
    should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
    test/e2e/node/pods.go:161

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods Extended
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:47:16.433
    Mar 13 19:47:16.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pods 03/13/23 19:47:16.435
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:16.444
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:16.447
    [BeforeEach] [sig-node] Pods Extended
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Pods Set QOS Class
      test/e2e/node/pods.go:152
    [It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
      test/e2e/node/pods.go:161
    STEP: creating the pod 03/13/23 19:47:16.451
    STEP: submitting the pod to kubernetes 03/13/23 19:47:16.451
    STEP: verifying QOS class is set on the pod 03/13/23 19:47:16.457
    [AfterEach] [sig-node] Pods Extended
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:47:16.460: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods Extended
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods Extended
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods Extended
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-6733" for this suite. 03/13/23 19:47:16.465
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-network] Proxy version v1
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/network/proxy.go:286
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:47:16.47
Mar 13 19:47:16.470: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename proxy 03/13/23 19:47:16.471
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:16.48
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:16.482
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/network/proxy.go:286
Mar 13 19:47:16.486: INFO: Creating pod...
Mar 13 19:47:16.495: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-7372" to be "running"
Mar 13 19:47:16.497: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 2.374465ms
Mar 13 19:47:18.501: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.005943937s
Mar 13 19:47:18.501: INFO: Pod "agnhost" satisfied condition "running"
Mar 13 19:47:18.501: INFO: Creating service...
Mar 13 19:47:18.510: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/DELETE
Mar 13 19:47:18.520: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Mar 13 19:47:18.520: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/GET
Mar 13 19:47:18.525: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Mar 13 19:47:18.525: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/HEAD
Mar 13 19:47:18.529: INFO: http.Client request:HEAD | StatusCode:200
Mar 13 19:47:18.529: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/OPTIONS
Mar 13 19:47:18.536: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Mar 13 19:47:18.536: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/PATCH
Mar 13 19:47:18.540: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Mar 13 19:47:18.540: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/POST
Mar 13 19:47:18.544: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Mar 13 19:47:18.544: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/PUT
Mar 13 19:47:18.548: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Mar 13 19:47:18.548: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/DELETE
Mar 13 19:47:18.558: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Mar 13 19:47:18.558: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/GET
Mar 13 19:47:18.563: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Mar 13 19:47:18.563: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/HEAD
Mar 13 19:47:18.567: INFO: http.Client request:HEAD | StatusCode:200
Mar 13 19:47:18.567: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/OPTIONS
Mar 13 19:47:18.571: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Mar 13 19:47:18.571: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/PATCH
Mar 13 19:47:18.575: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Mar 13 19:47:18.575: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/POST
Mar 13 19:47:18.579: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Mar 13 19:47:18.579: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/PUT
Mar 13 19:47:18.583: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Mar 13 19:47:18.583: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-7372" for this suite. 03/13/23 19:47:18.587
------------------------------
â€¢ [2.122 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
    test/e2e/network/proxy.go:286

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:47:16.47
    Mar 13 19:47:16.470: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename proxy 03/13/23 19:47:16.471
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:16.48
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:16.482
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
      test/e2e/network/proxy.go:286
    Mar 13 19:47:16.486: INFO: Creating pod...
    Mar 13 19:47:16.495: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-7372" to be "running"
    Mar 13 19:47:16.497: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 2.374465ms
    Mar 13 19:47:18.501: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.005943937s
    Mar 13 19:47:18.501: INFO: Pod "agnhost" satisfied condition "running"
    Mar 13 19:47:18.501: INFO: Creating service...
    Mar 13 19:47:18.510: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/DELETE
    Mar 13 19:47:18.520: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Mar 13 19:47:18.520: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/GET
    Mar 13 19:47:18.525: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
    Mar 13 19:47:18.525: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/HEAD
    Mar 13 19:47:18.529: INFO: http.Client request:HEAD | StatusCode:200
    Mar 13 19:47:18.529: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/OPTIONS
    Mar 13 19:47:18.536: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Mar 13 19:47:18.536: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/PATCH
    Mar 13 19:47:18.540: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Mar 13 19:47:18.540: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/POST
    Mar 13 19:47:18.544: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Mar 13 19:47:18.544: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/pods/agnhost/proxy/some/path/with/PUT
    Mar 13 19:47:18.548: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Mar 13 19:47:18.548: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/DELETE
    Mar 13 19:47:18.558: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Mar 13 19:47:18.558: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/GET
    Mar 13 19:47:18.563: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
    Mar 13 19:47:18.563: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/HEAD
    Mar 13 19:47:18.567: INFO: http.Client request:HEAD | StatusCode:200
    Mar 13 19:47:18.567: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/OPTIONS
    Mar 13 19:47:18.571: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Mar 13 19:47:18.571: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/PATCH
    Mar 13 19:47:18.575: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Mar 13 19:47:18.575: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/POST
    Mar 13 19:47:18.579: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Mar 13 19:47:18.579: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7372/services/test-service/proxy/some/path/with/PUT
    Mar 13 19:47:18.583: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:47:18.583: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-7372" for this suite. 03/13/23 19:47:18.587
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop
  should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168
[BeforeEach] [sig-node] PreStop
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:47:18.6
Mar 13 19:47:18.600: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename prestop 03/13/23 19:47:18.601
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:18.618
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:18.623
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168
STEP: Creating server pod server in namespace prestop-8002 03/13/23 19:47:18.627
STEP: Waiting for pods to come up. 03/13/23 19:47:18.632
Mar 13 19:47:18.633: INFO: Waiting up to 5m0s for pod "server" in namespace "prestop-8002" to be "running"
Mar 13 19:47:18.635: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 2.614735ms
Mar 13 19:47:20.639: INFO: Pod "server": Phase="Running", Reason="", readiness=true. Elapsed: 2.006724529s
Mar 13 19:47:20.639: INFO: Pod "server" satisfied condition "running"
STEP: Creating tester pod tester in namespace prestop-8002 03/13/23 19:47:20.642
Mar 13 19:47:20.646: INFO: Waiting up to 5m0s for pod "tester" in namespace "prestop-8002" to be "running"
Mar 13 19:47:20.649: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 2.491097ms
Mar 13 19:47:22.653: INFO: Pod "tester": Phase="Running", Reason="", readiness=true. Elapsed: 2.006525025s
Mar 13 19:47:22.653: INFO: Pod "tester" satisfied condition "running"
STEP: Deleting pre-stop pod 03/13/23 19:47:22.653
Mar 13 19:47:27.671: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod 03/13/23 19:47:27.672
[AfterEach] [sig-node] PreStop
  test/e2e/framework/node/init/init.go:32
Mar 13 19:47:27.687: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PreStop
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PreStop
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PreStop
  tear down framework | framework.go:193
STEP: Destroying namespace "prestop-8002" for this suite. 03/13/23 19:47:27.707
------------------------------
â€¢ [SLOW TEST] [9.113 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PreStop
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:47:18.6
    Mar 13 19:47:18.600: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename prestop 03/13/23 19:47:18.601
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:18.618
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:18.623
    [BeforeEach] [sig-node] PreStop
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] PreStop
      test/e2e/node/pre_stop.go:159
    [It] should call prestop when killing a pod  [Conformance]
      test/e2e/node/pre_stop.go:168
    STEP: Creating server pod server in namespace prestop-8002 03/13/23 19:47:18.627
    STEP: Waiting for pods to come up. 03/13/23 19:47:18.632
    Mar 13 19:47:18.633: INFO: Waiting up to 5m0s for pod "server" in namespace "prestop-8002" to be "running"
    Mar 13 19:47:18.635: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 2.614735ms
    Mar 13 19:47:20.639: INFO: Pod "server": Phase="Running", Reason="", readiness=true. Elapsed: 2.006724529s
    Mar 13 19:47:20.639: INFO: Pod "server" satisfied condition "running"
    STEP: Creating tester pod tester in namespace prestop-8002 03/13/23 19:47:20.642
    Mar 13 19:47:20.646: INFO: Waiting up to 5m0s for pod "tester" in namespace "prestop-8002" to be "running"
    Mar 13 19:47:20.649: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 2.491097ms
    Mar 13 19:47:22.653: INFO: Pod "tester": Phase="Running", Reason="", readiness=true. Elapsed: 2.006525025s
    Mar 13 19:47:22.653: INFO: Pod "tester" satisfied condition "running"
    STEP: Deleting pre-stop pod 03/13/23 19:47:22.653
    Mar 13 19:47:27.671: INFO: Saw: {
    	"Hostname": "server",
    	"Sent": null,
    	"Received": {
    		"prestop": 1
    	},
    	"Errors": null,
    	"Log": [
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
    	],
    	"StillContactingPeers": true
    }
    STEP: Deleting the server pod 03/13/23 19:47:27.672
    [AfterEach] [sig-node] PreStop
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:47:27.687: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PreStop
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PreStop
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PreStop
      tear down framework | framework.go:193
    STEP: Destroying namespace "prestop-8002" for this suite. 03/13/23 19:47:27.707
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:47:27.73
Mar 13 19:47:27.730: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 19:47:27.733
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:27.76
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:27.785
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107
STEP: Creating a pod to test emptydir 0666 on tmpfs 03/13/23 19:47:27.796
Mar 13 19:47:27.804: INFO: Waiting up to 5m0s for pod "pod-a649a66e-e727-4e14-b6fb-d26282a0797b" in namespace "emptydir-891" to be "Succeeded or Failed"
Mar 13 19:47:27.816: INFO: Pod "pod-a649a66e-e727-4e14-b6fb-d26282a0797b": Phase="Pending", Reason="", readiness=false. Elapsed: 7.915486ms
Mar 13 19:47:29.819: INFO: Pod "pod-a649a66e-e727-4e14-b6fb-d26282a0797b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011525618s
Mar 13 19:47:31.826: INFO: Pod "pod-a649a66e-e727-4e14-b6fb-d26282a0797b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018361228s
STEP: Saw pod success 03/13/23 19:47:31.828
Mar 13 19:47:31.828: INFO: Pod "pod-a649a66e-e727-4e14-b6fb-d26282a0797b" satisfied condition "Succeeded or Failed"
Mar 13 19:47:31.832: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-a649a66e-e727-4e14-b6fb-d26282a0797b container test-container: <nil>
STEP: delete the pod 03/13/23 19:47:31.84
Mar 13 19:47:31.851: INFO: Waiting for pod pod-a649a66e-e727-4e14-b6fb-d26282a0797b to disappear
Mar 13 19:47:31.854: INFO: Pod pod-a649a66e-e727-4e14-b6fb-d26282a0797b no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 19:47:31.855: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-891" for this suite. 03/13/23 19:47:31.859
------------------------------
â€¢ [4.134 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:47:27.73
    Mar 13 19:47:27.730: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 19:47:27.733
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:27.76
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:27.785
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:107
    STEP: Creating a pod to test emptydir 0666 on tmpfs 03/13/23 19:47:27.796
    Mar 13 19:47:27.804: INFO: Waiting up to 5m0s for pod "pod-a649a66e-e727-4e14-b6fb-d26282a0797b" in namespace "emptydir-891" to be "Succeeded or Failed"
    Mar 13 19:47:27.816: INFO: Pod "pod-a649a66e-e727-4e14-b6fb-d26282a0797b": Phase="Pending", Reason="", readiness=false. Elapsed: 7.915486ms
    Mar 13 19:47:29.819: INFO: Pod "pod-a649a66e-e727-4e14-b6fb-d26282a0797b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011525618s
    Mar 13 19:47:31.826: INFO: Pod "pod-a649a66e-e727-4e14-b6fb-d26282a0797b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018361228s
    STEP: Saw pod success 03/13/23 19:47:31.828
    Mar 13 19:47:31.828: INFO: Pod "pod-a649a66e-e727-4e14-b6fb-d26282a0797b" satisfied condition "Succeeded or Failed"
    Mar 13 19:47:31.832: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-a649a66e-e727-4e14-b6fb-d26282a0797b container test-container: <nil>
    STEP: delete the pod 03/13/23 19:47:31.84
    Mar 13 19:47:31.851: INFO: Waiting for pod pod-a649a66e-e727-4e14-b6fb-d26282a0797b to disappear
    Mar 13 19:47:31.854: INFO: Pod pod-a649a66e-e727-4e14-b6fb-d26282a0797b no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:47:31.855: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-891" for this suite. 03/13/23 19:47:31.859
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:47:31.867
Mar 13 19:47:31.867: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename containers 03/13/23 19:47:31.868
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:31.879
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:31.882
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59
STEP: Creating a pod to test override arguments 03/13/23 19:47:31.885
Mar 13 19:47:31.892: INFO: Waiting up to 5m0s for pod "client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea" in namespace "containers-8927" to be "Succeeded or Failed"
Mar 13 19:47:31.895: INFO: Pod "client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea": Phase="Pending", Reason="", readiness=false. Elapsed: 3.061027ms
Mar 13 19:47:33.899: INFO: Pod "client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007311431s
Mar 13 19:47:35.899: INFO: Pod "client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007143647s
STEP: Saw pod success 03/13/23 19:47:35.899
Mar 13 19:47:35.899: INFO: Pod "client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea" satisfied condition "Succeeded or Failed"
Mar 13 19:47:35.902: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea container agnhost-container: <nil>
STEP: delete the pod 03/13/23 19:47:35.909
Mar 13 19:47:35.916: INFO: Waiting for pod client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea to disappear
Mar 13 19:47:35.919: INFO: Pod client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Mar 13 19:47:35.919: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-8927" for this suite. 03/13/23 19:47:35.922
------------------------------
â€¢ [4.062 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:47:31.867
    Mar 13 19:47:31.867: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename containers 03/13/23 19:47:31.868
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:31.879
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:31.882
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:59
    STEP: Creating a pod to test override arguments 03/13/23 19:47:31.885
    Mar 13 19:47:31.892: INFO: Waiting up to 5m0s for pod "client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea" in namespace "containers-8927" to be "Succeeded or Failed"
    Mar 13 19:47:31.895: INFO: Pod "client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea": Phase="Pending", Reason="", readiness=false. Elapsed: 3.061027ms
    Mar 13 19:47:33.899: INFO: Pod "client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007311431s
    Mar 13 19:47:35.899: INFO: Pod "client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007143647s
    STEP: Saw pod success 03/13/23 19:47:35.899
    Mar 13 19:47:35.899: INFO: Pod "client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea" satisfied condition "Succeeded or Failed"
    Mar 13 19:47:35.902: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 19:47:35.909
    Mar 13 19:47:35.916: INFO: Waiting for pod client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea to disappear
    Mar 13 19:47:35.919: INFO: Pod client-containers-8a4c9690-7616-48fd-bcdb-9dbdb8d387ea no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:47:35.919: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-8927" for this suite. 03/13/23 19:47:35.922
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:47:35.929
Mar 13 19:47:35.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename var-expansion 03/13/23 19:47:35.931
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:35.942
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:35.945
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73
STEP: Creating a pod to test substitution in container's command 03/13/23 19:47:35.948
Mar 13 19:47:35.954: INFO: Waiting up to 5m0s for pod "var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb" in namespace "var-expansion-5048" to be "Succeeded or Failed"
Mar 13 19:47:35.957: INFO: Pod "var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.546839ms
Mar 13 19:47:37.960: INFO: Pod "var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006225882s
Mar 13 19:47:39.963: INFO: Pod "var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008315144s
STEP: Saw pod success 03/13/23 19:47:39.963
Mar 13 19:47:39.963: INFO: Pod "var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb" satisfied condition "Succeeded or Failed"
Mar 13 19:47:39.967: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb container dapi-container: <nil>
STEP: delete the pod 03/13/23 19:47:39.982
Mar 13 19:47:39.993: INFO: Waiting for pod var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb to disappear
Mar 13 19:47:40.003: INFO: Pod var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar 13 19:47:40.003: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-5048" for this suite. 03/13/23 19:47:40.009
------------------------------
â€¢ [4.083 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:47:35.929
    Mar 13 19:47:35.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename var-expansion 03/13/23 19:47:35.931
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:35.942
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:35.945
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a container's command [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:73
    STEP: Creating a pod to test substitution in container's command 03/13/23 19:47:35.948
    Mar 13 19:47:35.954: INFO: Waiting up to 5m0s for pod "var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb" in namespace "var-expansion-5048" to be "Succeeded or Failed"
    Mar 13 19:47:35.957: INFO: Pod "var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.546839ms
    Mar 13 19:47:37.960: INFO: Pod "var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006225882s
    Mar 13 19:47:39.963: INFO: Pod "var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008315144s
    STEP: Saw pod success 03/13/23 19:47:39.963
    Mar 13 19:47:39.963: INFO: Pod "var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb" satisfied condition "Succeeded or Failed"
    Mar 13 19:47:39.967: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb container dapi-container: <nil>
    STEP: delete the pod 03/13/23 19:47:39.982
    Mar 13 19:47:39.993: INFO: Waiting for pod var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb to disappear
    Mar 13 19:47:40.003: INFO: Pod var-expansion-087a952b-334f-4df7-8d1d-5a16d09d73cb no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:47:40.003: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-5048" for this suite. 03/13/23 19:47:40.009
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Downward API
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:47:40.013
Mar 13 19:47:40.013: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 19:47:40.015
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:40.025
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:40.029
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90
STEP: Creating a pod to test downward api env vars 03/13/23 19:47:40.033
Mar 13 19:47:40.040: INFO: Waiting up to 5m0s for pod "downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc" in namespace "downward-api-5712" to be "Succeeded or Failed"
Mar 13 19:47:40.043: INFO: Pod "downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.992161ms
Mar 13 19:47:42.047: INFO: Pod "downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006642727s
Mar 13 19:47:44.048: INFO: Pod "downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008415254s
STEP: Saw pod success 03/13/23 19:47:44.049
Mar 13 19:47:44.049: INFO: Pod "downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc" satisfied condition "Succeeded or Failed"
Mar 13 19:47:44.052: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc container dapi-container: <nil>
STEP: delete the pod 03/13/23 19:47:44.06
Mar 13 19:47:44.068: INFO: Waiting for pod downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc to disappear
Mar 13 19:47:44.071: INFO: Pod downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Mar 13 19:47:44.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-5712" for this suite. 03/13/23 19:47:44.074
------------------------------
â€¢ [4.065 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:47:40.013
    Mar 13 19:47:40.013: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 19:47:40.015
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:40.025
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:40.029
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide host IP as an env var [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:90
    STEP: Creating a pod to test downward api env vars 03/13/23 19:47:40.033
    Mar 13 19:47:40.040: INFO: Waiting up to 5m0s for pod "downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc" in namespace "downward-api-5712" to be "Succeeded or Failed"
    Mar 13 19:47:40.043: INFO: Pod "downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.992161ms
    Mar 13 19:47:42.047: INFO: Pod "downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006642727s
    Mar 13 19:47:44.048: INFO: Pod "downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008415254s
    STEP: Saw pod success 03/13/23 19:47:44.049
    Mar 13 19:47:44.049: INFO: Pod "downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc" satisfied condition "Succeeded or Failed"
    Mar 13 19:47:44.052: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc container dapi-container: <nil>
    STEP: delete the pod 03/13/23 19:47:44.06
    Mar 13 19:47:44.068: INFO: Waiting for pod downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc to disappear
    Mar 13 19:47:44.071: INFO: Pod downward-api-0f2e9ccb-fce1-447a-9591-358a2df714dc no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:47:44.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-5712" for this suite. 03/13/23 19:47:44.074
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/apps/statefulset.go:317
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:47:44.082
Mar 13 19:47:44.083: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename statefulset 03/13/23 19:47:44.083
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:44.095
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:44.098
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-2856 03/13/23 19:47:44.103
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/apps/statefulset.go:317
STEP: Creating a new StatefulSet 03/13/23 19:47:44.11
Mar 13 19:47:44.119: INFO: Found 0 stateful pods, waiting for 3
Mar 13 19:47:54.126: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Mar 13 19:47:54.126: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Mar 13 19:47:54.126: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 03/13/23 19:47:54.136
Mar 13 19:47:54.155: INFO: Updating stateful set ss2
STEP: Creating a new revision 03/13/23 19:47:54.155
STEP: Not applying an update when the partition is greater than the number of replicas 03/13/23 19:48:04.18
STEP: Performing a canary update 03/13/23 19:48:04.18
Mar 13 19:48:04.211: INFO: Updating stateful set ss2
Mar 13 19:48:04.231: INFO: Waiting for Pod statefulset-2856/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
STEP: Restoring Pods to the correct revision when they are deleted 03/13/23 19:48:14.24
Mar 13 19:48:14.282: INFO: Found 2 stateful pods, waiting for 3
Mar 13 19:48:24.286: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Mar 13 19:48:24.287: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Mar 13 19:48:24.287: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update 03/13/23 19:48:24.293
Mar 13 19:48:24.311: INFO: Updating stateful set ss2
Mar 13 19:48:24.316: INFO: Waiting for Pod statefulset-2856/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Mar 13 19:48:34.343: INFO: Updating stateful set ss2
Mar 13 19:48:34.349: INFO: Waiting for StatefulSet statefulset-2856/ss2 to complete update
Mar 13 19:48:34.353: INFO: Waiting for Pod statefulset-2856/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar 13 19:48:44.361: INFO: Deleting all statefulset in ns statefulset-2856
Mar 13 19:48:44.363: INFO: Scaling statefulset ss2 to 0
Mar 13 19:48:54.384: INFO: Waiting for statefulset status.replicas updated to 0
Mar 13 19:48:54.387: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:48:54.398: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-2856" for this suite. 03/13/23 19:48:54.404
------------------------------
â€¢ [SLOW TEST] [70.326 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/apps/statefulset.go:317

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:47:44.082
    Mar 13 19:47:44.083: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename statefulset 03/13/23 19:47:44.083
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:47:44.095
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:47:44.098
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-2856 03/13/23 19:47:44.103
    [It] should perform canary updates and phased rolling updates of template modifications [Conformance]
      test/e2e/apps/statefulset.go:317
    STEP: Creating a new StatefulSet 03/13/23 19:47:44.11
    Mar 13 19:47:44.119: INFO: Found 0 stateful pods, waiting for 3
    Mar 13 19:47:54.126: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Mar 13 19:47:54.126: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Mar 13 19:47:54.126: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 03/13/23 19:47:54.136
    Mar 13 19:47:54.155: INFO: Updating stateful set ss2
    STEP: Creating a new revision 03/13/23 19:47:54.155
    STEP: Not applying an update when the partition is greater than the number of replicas 03/13/23 19:48:04.18
    STEP: Performing a canary update 03/13/23 19:48:04.18
    Mar 13 19:48:04.211: INFO: Updating stateful set ss2
    Mar 13 19:48:04.231: INFO: Waiting for Pod statefulset-2856/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    STEP: Restoring Pods to the correct revision when they are deleted 03/13/23 19:48:14.24
    Mar 13 19:48:14.282: INFO: Found 2 stateful pods, waiting for 3
    Mar 13 19:48:24.286: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Mar 13 19:48:24.287: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Mar 13 19:48:24.287: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Performing a phased rolling update 03/13/23 19:48:24.293
    Mar 13 19:48:24.311: INFO: Updating stateful set ss2
    Mar 13 19:48:24.316: INFO: Waiting for Pod statefulset-2856/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Mar 13 19:48:34.343: INFO: Updating stateful set ss2
    Mar 13 19:48:34.349: INFO: Waiting for StatefulSet statefulset-2856/ss2 to complete update
    Mar 13 19:48:34.353: INFO: Waiting for Pod statefulset-2856/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar 13 19:48:44.361: INFO: Deleting all statefulset in ns statefulset-2856
    Mar 13 19:48:44.363: INFO: Scaling statefulset ss2 to 0
    Mar 13 19:48:54.384: INFO: Waiting for statefulset status.replicas updated to 0
    Mar 13 19:48:54.387: INFO: Deleting statefulset ss2
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:48:54.398: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-2856" for this suite. 03/13/23 19:48:54.404
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/apps/statefulset.go:908
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:48:54.413
Mar 13 19:48:54.414: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename statefulset 03/13/23 19:48:54.416
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:48:54.427
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:48:54.43
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-7641 03/13/23 19:48:54.433
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/apps/statefulset.go:908
Mar 13 19:48:54.445: INFO: Found 0 stateful pods, waiting for 1
Mar 13 19:49:04.476: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet 03/13/23 19:49:04.49
W0313 19:49:04.526581      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Mar 13 19:49:04.561: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Mar 13 19:49:04.561: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
Mar 13 19:49:14.568: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Mar 13 19:49:14.568: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets 03/13/23 19:49:14.576
STEP: Delete all of the StatefulSets 03/13/23 19:49:14.579
STEP: Verify that StatefulSets have been deleted 03/13/23 19:49:14.587
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar 13 19:49:14.590: INFO: Deleting all statefulset in ns statefulset-7641
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:49:14.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-7641" for this suite. 03/13/23 19:49:14.607
------------------------------
â€¢ [SLOW TEST] [20.202 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/apps/statefulset.go:908

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:48:54.413
    Mar 13 19:48:54.414: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename statefulset 03/13/23 19:48:54.416
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:48:54.427
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:48:54.43
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-7641 03/13/23 19:48:54.433
    [It] should list, patch and delete a collection of StatefulSets [Conformance]
      test/e2e/apps/statefulset.go:908
    Mar 13 19:48:54.445: INFO: Found 0 stateful pods, waiting for 1
    Mar 13 19:49:04.476: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: patching the StatefulSet 03/13/23 19:49:04.49
    W0313 19:49:04.526581      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Mar 13 19:49:04.561: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Mar 13 19:49:04.561: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
    Mar 13 19:49:14.568: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Mar 13 19:49:14.568: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Listing all StatefulSets 03/13/23 19:49:14.576
    STEP: Delete all of the StatefulSets 03/13/23 19:49:14.579
    STEP: Verify that StatefulSets have been deleted 03/13/23 19:49:14.587
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar 13 19:49:14.590: INFO: Deleting all statefulset in ns statefulset-7641
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:49:14.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-7641" for this suite. 03/13/23 19:49:14.607
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:49:14.634
Mar 13 19:49:14.636: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename namespaces 03/13/23 19:49:14.64
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:49:14.668
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:49:14.686
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394
STEP: Creating namespace "e2e-ns-wkbx7" 03/13/23 19:49:14.697
Mar 13 19:49:14.709: INFO: Namespace "e2e-ns-wkbx7-2712" has []v1.FinalizerName{"kubernetes"}
STEP: Adding e2e finalizer to namespace "e2e-ns-wkbx7-2712" 03/13/23 19:49:14.709
Mar 13 19:49:14.730: INFO: Namespace "e2e-ns-wkbx7-2712" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
STEP: Removing e2e finalizer from namespace "e2e-ns-wkbx7-2712" 03/13/23 19:49:14.73
Mar 13 19:49:14.747: INFO: Namespace "e2e-ns-wkbx7-2712" has []v1.FinalizerName{"kubernetes"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:49:14.747: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-6823" for this suite. 03/13/23 19:49:14.752
STEP: Destroying namespace "e2e-ns-wkbx7-2712" for this suite. 03/13/23 19:49:14.759
------------------------------
â€¢ [0.131 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:49:14.634
    Mar 13 19:49:14.636: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename namespaces 03/13/23 19:49:14.64
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:49:14.668
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:49:14.686
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply a finalizer to a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:394
    STEP: Creating namespace "e2e-ns-wkbx7" 03/13/23 19:49:14.697
    Mar 13 19:49:14.709: INFO: Namespace "e2e-ns-wkbx7-2712" has []v1.FinalizerName{"kubernetes"}
    STEP: Adding e2e finalizer to namespace "e2e-ns-wkbx7-2712" 03/13/23 19:49:14.709
    Mar 13 19:49:14.730: INFO: Namespace "e2e-ns-wkbx7-2712" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
    STEP: Removing e2e finalizer from namespace "e2e-ns-wkbx7-2712" 03/13/23 19:49:14.73
    Mar 13 19:49:14.747: INFO: Namespace "e2e-ns-wkbx7-2712" has []v1.FinalizerName{"kubernetes"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:49:14.747: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-6823" for this suite. 03/13/23 19:49:14.752
    STEP: Destroying namespace "e2e-ns-wkbx7-2712" for this suite. 03/13/23 19:49:14.759
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Proxy server
  should support --unix-socket=/path  [Conformance]
  test/e2e/kubectl/kubectl.go:1812
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:49:14.765
Mar 13 19:49:14.765: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 19:49:14.766
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:49:14.786
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:49:14.789
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/kubectl/kubectl.go:1812
STEP: Starting the proxy 03/13/23 19:49:14.792
Mar 13 19:49:14.792: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7351 proxy --unix-socket=/tmp/kubectl-proxy-unix4235956234/test'
STEP: retrieving proxy /api/ output 03/13/23 19:49:14.92
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 19:49:14.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-7351" for this suite. 03/13/23 19:49:14.926
------------------------------
â€¢ [0.165 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Proxy server
  test/e2e/kubectl/kubectl.go:1780
    should support --unix-socket=/path  [Conformance]
    test/e2e/kubectl/kubectl.go:1812

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:49:14.765
    Mar 13 19:49:14.765: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 19:49:14.766
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:49:14.786
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:49:14.789
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should support --unix-socket=/path  [Conformance]
      test/e2e/kubectl/kubectl.go:1812
    STEP: Starting the proxy 03/13/23 19:49:14.792
    Mar 13 19:49:14.792: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7351 proxy --unix-socket=/tmp/kubectl-proxy-unix4235956234/test'
    STEP: retrieving proxy /api/ output 03/13/23 19:49:14.92
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:49:14.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-7351" for this suite. 03/13/23 19:49:14.926
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:49:14.945
Mar 13 19:49:14.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename sched-pred 03/13/23 19:49:14.946
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:49:14.962
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:49:14.968
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Mar 13 19:49:14.975: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Mar 13 19:49:14.984: INFO: Waiting for terminating namespaces to be deleted...
Mar 13 19:49:15.008: INFO: 
Logging pods the apiserver thinks is on node vke-automated-test-51df1d4fb06e before test
Mar 13 19:49:15.025: INFO: calico-node-xs2jj from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 19:49:15.030: INFO: 	Container calico-node ready: true, restart count 0
Mar 13 19:49:15.030: INFO: csi-vultr-node-c4r8q from kube-system started at 2023-03-13 19:10:30 +0000 UTC (2 container statuses recorded)
Mar 13 19:49:15.030: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
Mar 13 19:49:15.030: INFO: 	Container driver-registrar ready: true, restart count 0
Mar 13 19:49:15.030: INFO: konnectivity-agent-k6k6r from kube-system started at 2023-03-13 19:10:31 +0000 UTC (1 container statuses recorded)
Mar 13 19:49:15.030: INFO: 	Container konnectivity-agent ready: true, restart count 0
Mar 13 19:49:15.030: INFO: pod-qos-class-35a5aba3-aaf5-4e29-b6cf-93f66d7efcc1 from pods-6733 started at 2023-03-13 19:47:16 +0000 UTC (1 container statuses recorded)
Mar 13 19:49:15.030: INFO: 	Container agnhost ready: false, restart count 0
Mar 13 19:49:15.030: INFO: sonobuoy from sonobuoy started at 2023-03-13 18:39:50 +0000 UTC (1 container statuses recorded)
Mar 13 19:49:15.030: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Mar 13 19:49:15.030: INFO: sonobuoy-e2e-job-c23108cbbd714118 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
Mar 13 19:49:15.030: INFO: 	Container e2e ready: true, restart count 0
Mar 13 19:49:15.030: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar 13 19:49:15.030: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-6xtp8 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
Mar 13 19:49:15.030: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar 13 19:49:15.030: INFO: 	Container systemd-logs ready: true, restart count 0
Mar 13 19:49:15.030: INFO: test-ss-0 from statefulset-7641 started at 2023-03-13 19:49:06 +0000 UTC (2 container statuses recorded)
Mar 13 19:49:15.030: INFO: 	Container test-ss ready: true, restart count 0
Mar 13 19:49:15.030: INFO: 	Container webserver ready: true, restart count 0
Mar 13 19:49:15.030: INFO: 
Logging pods the apiserver thinks is on node vke-automated-test-f5b1d7d2d722 before test
Mar 13 19:49:15.042: INFO: calico-kube-controllers-57b57c56f-hkwr4 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 19:49:15.042: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Mar 13 19:49:15.042: INFO: calico-node-qgbkz from kube-system started at 2023-03-13 18:38:35 +0000 UTC (1 container statuses recorded)
Mar 13 19:49:15.042: INFO: 	Container calico-node ready: true, restart count 0
Mar 13 19:49:15.042: INFO: cluster-autoscaler-598bdb7954-cwz8l from kube-system started at 2023-03-13 18:38:45 +0000 UTC (1 container statuses recorded)
Mar 13 19:49:15.042: INFO: 	Container cluster-autoscaler ready: true, restart count 0
Mar 13 19:49:15.042: INFO: coredns-85c5d49895-6j25x from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 19:49:15.042: INFO: 	Container coredns ready: true, restart count 0
Mar 13 19:49:15.042: INFO: csi-vultr-controller-0 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (4 container statuses recorded)
Mar 13 19:49:15.042: INFO: 	Container csi-attacher ready: true, restart count 0
Mar 13 19:49:15.042: INFO: 	Container csi-provisioner ready: true, restart count 0
Mar 13 19:49:15.042: INFO: 	Container csi-resizer ready: true, restart count 0
Mar 13 19:49:15.042: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
Mar 13 19:49:15.042: INFO: csi-vultr-node-p88qb from kube-system started at 2023-03-13 18:38:43 +0000 UTC (2 container statuses recorded)
Mar 13 19:49:15.042: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
Mar 13 19:49:15.042: INFO: 	Container driver-registrar ready: true, restart count 0
Mar 13 19:49:15.042: INFO: konnectivity-agent-8xln6 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
Mar 13 19:49:15.042: INFO: 	Container konnectivity-agent ready: true, restart count 0
Mar 13 19:49:15.042: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-9nqbq from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
Mar 13 19:49:15.042: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar 13 19:49:15.042: INFO: 	Container systemd-logs ready: true, restart count 0
Mar 13 19:49:15.042: INFO: test-ss-1 from statefulset-7641 started at 2023-03-13 19:49:04 +0000 UTC (2 container statuses recorded)
Mar 13 19:49:15.042: INFO: 	Container test-ss ready: true, restart count 0
Mar 13 19:49:15.042: INFO: 	Container webserver ready: false, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704
STEP: Trying to launch a pod without a label to get a node which can launch it. 03/13/23 19:49:15.042
Mar 13 19:49:15.050: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-4809" to be "running"
Mar 13 19:49:15.053: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 2.96245ms
Mar 13 19:49:17.060: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.01054069s
Mar 13 19:49:17.061: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 03/13/23 19:49:17.063
STEP: Trying to apply a random label on the found node. 03/13/23 19:49:17.08
STEP: verifying the node has the label kubernetes.io/e2e-c8962bca-a4c8-4be7-ad62-ed5f22d753a6 95 03/13/23 19:49:17.089
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled 03/13/23 19:49:17.102
Mar 13 19:49:17.107: INFO: Waiting up to 5m0s for pod "pod4" in namespace "sched-pred-4809" to be "not pending"
Mar 13 19:49:17.113: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 6.099377ms
Mar 13 19:49:19.117: INFO: Pod "pod4": Phase="Running", Reason="", readiness=true. Elapsed: 2.009950485s
Mar 13 19:49:19.117: INFO: Pod "pod4" satisfied condition "not pending"
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.1.96.5 on the node which pod4 resides and expect not scheduled 03/13/23 19:49:19.117
Mar 13 19:49:19.122: INFO: Waiting up to 5m0s for pod "pod5" in namespace "sched-pred-4809" to be "not pending"
Mar 13 19:49:19.124: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.736326ms
Mar 13 19:49:21.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006463788s
Mar 13 19:49:23.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.00637428s
Mar 13 19:49:25.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.007154569s
Mar 13 19:49:27.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.0064211s
Mar 13 19:49:29.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.006782347s
Mar 13 19:49:31.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.007160912s
Mar 13 19:49:33.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 14.006463802s
Mar 13 19:49:35.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 16.008142832s
Mar 13 19:49:37.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.007684766s
Mar 13 19:49:39.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 20.007811067s
Mar 13 19:49:41.133: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.010875665s
Mar 13 19:49:43.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 24.008251451s
Mar 13 19:49:45.133: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 26.011220582s
Mar 13 19:49:47.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 28.00647035s
Mar 13 19:49:49.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 30.006506347s
Mar 13 19:49:51.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 32.007779004s
Mar 13 19:49:53.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 34.007186068s
Mar 13 19:49:55.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 36.00772448s
Mar 13 19:49:57.136: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 38.013866972s
Mar 13 19:49:59.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 40.007386587s
Mar 13 19:50:01.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 42.006925708s
Mar 13 19:50:03.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 44.007618894s
Mar 13 19:50:05.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 46.009950975s
Mar 13 19:50:07.135: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 48.013661994s
Mar 13 19:50:09.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 50.008599061s
Mar 13 19:50:11.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 52.008613884s
Mar 13 19:50:13.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 54.009143731s
Mar 13 19:50:15.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 56.008931484s
Mar 13 19:50:17.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 58.008679412s
Mar 13 19:50:19.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.006944633s
Mar 13 19:50:21.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.008140741s
Mar 13 19:50:23.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.009205472s
Mar 13 19:50:25.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.007236244s
Mar 13 19:50:27.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.007585328s
Mar 13 19:50:29.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.006613619s
Mar 13 19:50:31.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.007045742s
Mar 13 19:50:33.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.006948249s
Mar 13 19:50:35.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.007916156s
Mar 13 19:50:37.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.00654694s
Mar 13 19:50:39.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.006127736s
Mar 13 19:50:41.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.007095186s
Mar 13 19:50:43.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.006629852s
Mar 13 19:50:45.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.007017974s
Mar 13 19:50:47.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.008099556s
Mar 13 19:50:49.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.006789685s
Mar 13 19:50:51.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.006499531s
Mar 13 19:50:53.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.006861894s
Mar 13 19:50:55.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.007756578s
Mar 13 19:50:57.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.007340006s
Mar 13 19:50:59.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.008235362s
Mar 13 19:51:01.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.00756196s
Mar 13 19:51:03.141: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.019088494s
Mar 13 19:51:05.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.008065689s
Mar 13 19:51:07.138: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.016211203s
Mar 13 19:51:09.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.007318499s
Mar 13 19:51:11.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.008846578s
Mar 13 19:51:13.135: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.013114121s
Mar 13 19:51:15.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.010012788s
Mar 13 19:51:17.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.00861254s
Mar 13 19:51:19.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.007073186s
Mar 13 19:51:21.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m2.009785815s
Mar 13 19:51:23.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m4.010191582s
Mar 13 19:51:25.136: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m6.014530185s
Mar 13 19:51:27.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m8.009059229s
Mar 13 19:51:29.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m10.007260572s
Mar 13 19:51:31.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m12.008976966s
Mar 13 19:51:33.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m14.006858553s
Mar 13 19:51:35.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m16.007639798s
Mar 13 19:51:37.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m18.007704718s
Mar 13 19:51:39.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m20.007895012s
Mar 13 19:51:41.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m22.007720317s
Mar 13 19:51:43.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m24.006393595s
Mar 13 19:51:45.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m26.01002389s
Mar 13 19:51:47.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m28.007072564s
Mar 13 19:51:49.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m30.008932118s
Mar 13 19:51:51.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m32.007999477s
Mar 13 19:51:53.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m34.008036823s
Mar 13 19:51:55.133: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m36.011098445s
Mar 13 19:51:57.139: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m38.017810987s
Mar 13 19:51:59.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m40.010402046s
Mar 13 19:52:01.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m42.008783647s
Mar 13 19:52:03.157: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m44.035687309s
Mar 13 19:52:05.133: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m46.011775627s
Mar 13 19:52:07.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m48.009624543s
Mar 13 19:52:09.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m50.007886617s
Mar 13 19:52:11.135: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m52.013065722s
Mar 13 19:52:13.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m54.007849203s
Mar 13 19:52:15.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m56.007181259s
Mar 13 19:52:17.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m58.006348417s
Mar 13 19:52:19.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m0.006597535s
Mar 13 19:52:21.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m2.006728011s
Mar 13 19:52:23.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m4.00733461s
Mar 13 19:52:25.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m6.008008917s
Mar 13 19:52:27.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m8.00807973s
Mar 13 19:52:29.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m10.006473459s
Mar 13 19:52:31.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m12.00741803s
Mar 13 19:52:33.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m14.007580439s
Mar 13 19:52:35.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m16.006858565s
Mar 13 19:52:37.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m18.007920625s
Mar 13 19:52:39.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m20.006790009s
Mar 13 19:52:41.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m22.007544005s
Mar 13 19:52:43.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m24.006548042s
Mar 13 19:52:45.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m26.008533046s
Mar 13 19:52:47.134: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m28.012842152s
Mar 13 19:52:49.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m30.006600724s
Mar 13 19:52:51.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m32.006226478s
Mar 13 19:52:53.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m34.007667351s
Mar 13 19:52:55.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m36.007327573s
Mar 13 19:52:57.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m38.007525643s
Mar 13 19:52:59.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m40.007069145s
Mar 13 19:53:01.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m42.007317621s
Mar 13 19:53:03.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m44.007685631s
Mar 13 19:53:05.143: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m46.0216648s
Mar 13 19:53:07.163: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m48.041653711s
Mar 13 19:53:09.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m50.007329949s
Mar 13 19:53:11.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m52.008145405s
Mar 13 19:53:13.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m54.007670816s
Mar 13 19:53:15.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m56.008033089s
Mar 13 19:53:17.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m58.00850454s
Mar 13 19:53:19.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m0.008293612s
Mar 13 19:53:21.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m2.009234904s
Mar 13 19:53:23.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m4.006987124s
Mar 13 19:53:25.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m6.009805935s
Mar 13 19:53:27.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m8.007709431s
Mar 13 19:53:29.136: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m10.014502297s
Mar 13 19:53:31.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m12.008587716s
Mar 13 19:53:33.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m14.007588788s
Mar 13 19:53:35.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m16.006572701s
Mar 13 19:53:37.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m18.007024597s
Mar 13 19:53:39.140: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m20.017888888s
Mar 13 19:53:41.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m22.007277472s
Mar 13 19:53:43.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m24.010117881s
Mar 13 19:53:45.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m26.009133426s
Mar 13 19:53:47.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m28.00730373s
Mar 13 19:53:49.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m30.006824418s
Mar 13 19:53:51.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m32.008499365s
Mar 13 19:53:53.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m34.008300886s
Mar 13 19:53:55.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m36.007091276s
Mar 13 19:53:57.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m38.007810058s
Mar 13 19:53:59.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m40.008296643s
Mar 13 19:54:01.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m42.006678183s
Mar 13 19:54:03.135: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m44.013222091s
Mar 13 19:54:05.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m46.007753668s
Mar 13 19:54:07.140: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m48.018022611s
Mar 13 19:54:09.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m50.008118328s
Mar 13 19:54:11.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m52.008806562s
Mar 13 19:54:13.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m54.007376072s
Mar 13 19:54:15.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m56.007601975s
Mar 13 19:54:17.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m58.006341263s
Mar 13 19:54:19.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.009867436s
Mar 13 19:54:19.135: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.013750443s
STEP: removing the label kubernetes.io/e2e-c8962bca-a4c8-4be7-ad62-ed5f22d753a6 off the node vke-automated-test-51df1d4fb06e 03/13/23 19:54:19.135
STEP: verifying the node doesn't have the label kubernetes.io/e2e-c8962bca-a4c8-4be7-ad62-ed5f22d753a6 03/13/23 19:54:19.153
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:54:19.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-4809" for this suite. 03/13/23 19:54:19.172
------------------------------
â€¢ [SLOW TEST] [304.234 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:49:14.945
    Mar 13 19:49:14.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename sched-pred 03/13/23 19:49:14.946
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:49:14.962
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:49:14.968
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Mar 13 19:49:14.975: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Mar 13 19:49:14.984: INFO: Waiting for terminating namespaces to be deleted...
    Mar 13 19:49:15.008: INFO: 
    Logging pods the apiserver thinks is on node vke-automated-test-51df1d4fb06e before test
    Mar 13 19:49:15.025: INFO: calico-node-xs2jj from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 19:49:15.030: INFO: 	Container calico-node ready: true, restart count 0
    Mar 13 19:49:15.030: INFO: csi-vultr-node-c4r8q from kube-system started at 2023-03-13 19:10:30 +0000 UTC (2 container statuses recorded)
    Mar 13 19:49:15.030: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
    Mar 13 19:49:15.030: INFO: 	Container driver-registrar ready: true, restart count 0
    Mar 13 19:49:15.030: INFO: konnectivity-agent-k6k6r from kube-system started at 2023-03-13 19:10:31 +0000 UTC (1 container statuses recorded)
    Mar 13 19:49:15.030: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Mar 13 19:49:15.030: INFO: pod-qos-class-35a5aba3-aaf5-4e29-b6cf-93f66d7efcc1 from pods-6733 started at 2023-03-13 19:47:16 +0000 UTC (1 container statuses recorded)
    Mar 13 19:49:15.030: INFO: 	Container agnhost ready: false, restart count 0
    Mar 13 19:49:15.030: INFO: sonobuoy from sonobuoy started at 2023-03-13 18:39:50 +0000 UTC (1 container statuses recorded)
    Mar 13 19:49:15.030: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Mar 13 19:49:15.030: INFO: sonobuoy-e2e-job-c23108cbbd714118 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
    Mar 13 19:49:15.030: INFO: 	Container e2e ready: true, restart count 0
    Mar 13 19:49:15.030: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar 13 19:49:15.030: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-6xtp8 from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
    Mar 13 19:49:15.030: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar 13 19:49:15.030: INFO: 	Container systemd-logs ready: true, restart count 0
    Mar 13 19:49:15.030: INFO: test-ss-0 from statefulset-7641 started at 2023-03-13 19:49:06 +0000 UTC (2 container statuses recorded)
    Mar 13 19:49:15.030: INFO: 	Container test-ss ready: true, restart count 0
    Mar 13 19:49:15.030: INFO: 	Container webserver ready: true, restart count 0
    Mar 13 19:49:15.030: INFO: 
    Logging pods the apiserver thinks is on node vke-automated-test-f5b1d7d2d722 before test
    Mar 13 19:49:15.042: INFO: calico-kube-controllers-57b57c56f-hkwr4 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 19:49:15.042: INFO: 	Container calico-kube-controllers ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: calico-node-qgbkz from kube-system started at 2023-03-13 18:38:35 +0000 UTC (1 container statuses recorded)
    Mar 13 19:49:15.042: INFO: 	Container calico-node ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: cluster-autoscaler-598bdb7954-cwz8l from kube-system started at 2023-03-13 18:38:45 +0000 UTC (1 container statuses recorded)
    Mar 13 19:49:15.042: INFO: 	Container cluster-autoscaler ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: coredns-85c5d49895-6j25x from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 19:49:15.042: INFO: 	Container coredns ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: csi-vultr-controller-0 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (4 container statuses recorded)
    Mar 13 19:49:15.042: INFO: 	Container csi-attacher ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: 	Container csi-provisioner ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: 	Container csi-resizer ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: csi-vultr-node-p88qb from kube-system started at 2023-03-13 18:38:43 +0000 UTC (2 container statuses recorded)
    Mar 13 19:49:15.042: INFO: 	Container csi-vultr-plugin ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: 	Container driver-registrar ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: konnectivity-agent-8xln6 from kube-system started at 2023-03-13 18:38:43 +0000 UTC (1 container statuses recorded)
    Mar 13 19:49:15.042: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: sonobuoy-systemd-logs-daemon-set-6cdc579dc3bc47d5-9nqbq from sonobuoy started at 2023-03-13 18:39:52 +0000 UTC (2 container statuses recorded)
    Mar 13 19:49:15.042: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: 	Container systemd-logs ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: test-ss-1 from statefulset-7641 started at 2023-03-13 19:49:04 +0000 UTC (2 container statuses recorded)
    Mar 13 19:49:15.042: INFO: 	Container test-ss ready: true, restart count 0
    Mar 13 19:49:15.042: INFO: 	Container webserver ready: false, restart count 0
    [It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
      test/e2e/scheduling/predicates.go:704
    STEP: Trying to launch a pod without a label to get a node which can launch it. 03/13/23 19:49:15.042
    Mar 13 19:49:15.050: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-4809" to be "running"
    Mar 13 19:49:15.053: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 2.96245ms
    Mar 13 19:49:17.060: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.01054069s
    Mar 13 19:49:17.061: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 03/13/23 19:49:17.063
    STEP: Trying to apply a random label on the found node. 03/13/23 19:49:17.08
    STEP: verifying the node has the label kubernetes.io/e2e-c8962bca-a4c8-4be7-ad62-ed5f22d753a6 95 03/13/23 19:49:17.089
    STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled 03/13/23 19:49:17.102
    Mar 13 19:49:17.107: INFO: Waiting up to 5m0s for pod "pod4" in namespace "sched-pred-4809" to be "not pending"
    Mar 13 19:49:17.113: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 6.099377ms
    Mar 13 19:49:19.117: INFO: Pod "pod4": Phase="Running", Reason="", readiness=true. Elapsed: 2.009950485s
    Mar 13 19:49:19.117: INFO: Pod "pod4" satisfied condition "not pending"
    STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.1.96.5 on the node which pod4 resides and expect not scheduled 03/13/23 19:49:19.117
    Mar 13 19:49:19.122: INFO: Waiting up to 5m0s for pod "pod5" in namespace "sched-pred-4809" to be "not pending"
    Mar 13 19:49:19.124: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.736326ms
    Mar 13 19:49:21.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006463788s
    Mar 13 19:49:23.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.00637428s
    Mar 13 19:49:25.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.007154569s
    Mar 13 19:49:27.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.0064211s
    Mar 13 19:49:29.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.006782347s
    Mar 13 19:49:31.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.007160912s
    Mar 13 19:49:33.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 14.006463802s
    Mar 13 19:49:35.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 16.008142832s
    Mar 13 19:49:37.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.007684766s
    Mar 13 19:49:39.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 20.007811067s
    Mar 13 19:49:41.133: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.010875665s
    Mar 13 19:49:43.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 24.008251451s
    Mar 13 19:49:45.133: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 26.011220582s
    Mar 13 19:49:47.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 28.00647035s
    Mar 13 19:49:49.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 30.006506347s
    Mar 13 19:49:51.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 32.007779004s
    Mar 13 19:49:53.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 34.007186068s
    Mar 13 19:49:55.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 36.00772448s
    Mar 13 19:49:57.136: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 38.013866972s
    Mar 13 19:49:59.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 40.007386587s
    Mar 13 19:50:01.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 42.006925708s
    Mar 13 19:50:03.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 44.007618894s
    Mar 13 19:50:05.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 46.009950975s
    Mar 13 19:50:07.135: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 48.013661994s
    Mar 13 19:50:09.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 50.008599061s
    Mar 13 19:50:11.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 52.008613884s
    Mar 13 19:50:13.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 54.009143731s
    Mar 13 19:50:15.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 56.008931484s
    Mar 13 19:50:17.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 58.008679412s
    Mar 13 19:50:19.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.006944633s
    Mar 13 19:50:21.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.008140741s
    Mar 13 19:50:23.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.009205472s
    Mar 13 19:50:25.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.007236244s
    Mar 13 19:50:27.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.007585328s
    Mar 13 19:50:29.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.006613619s
    Mar 13 19:50:31.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.007045742s
    Mar 13 19:50:33.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.006948249s
    Mar 13 19:50:35.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.007916156s
    Mar 13 19:50:37.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.00654694s
    Mar 13 19:50:39.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.006127736s
    Mar 13 19:50:41.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.007095186s
    Mar 13 19:50:43.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.006629852s
    Mar 13 19:50:45.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.007017974s
    Mar 13 19:50:47.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.008099556s
    Mar 13 19:50:49.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.006789685s
    Mar 13 19:50:51.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.006499531s
    Mar 13 19:50:53.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.006861894s
    Mar 13 19:50:55.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.007756578s
    Mar 13 19:50:57.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.007340006s
    Mar 13 19:50:59.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.008235362s
    Mar 13 19:51:01.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.00756196s
    Mar 13 19:51:03.141: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.019088494s
    Mar 13 19:51:05.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.008065689s
    Mar 13 19:51:07.138: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.016211203s
    Mar 13 19:51:09.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.007318499s
    Mar 13 19:51:11.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.008846578s
    Mar 13 19:51:13.135: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.013114121s
    Mar 13 19:51:15.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.010012788s
    Mar 13 19:51:17.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.00861254s
    Mar 13 19:51:19.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.007073186s
    Mar 13 19:51:21.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m2.009785815s
    Mar 13 19:51:23.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m4.010191582s
    Mar 13 19:51:25.136: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m6.014530185s
    Mar 13 19:51:27.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m8.009059229s
    Mar 13 19:51:29.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m10.007260572s
    Mar 13 19:51:31.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m12.008976966s
    Mar 13 19:51:33.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m14.006858553s
    Mar 13 19:51:35.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m16.007639798s
    Mar 13 19:51:37.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m18.007704718s
    Mar 13 19:51:39.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m20.007895012s
    Mar 13 19:51:41.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m22.007720317s
    Mar 13 19:51:43.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m24.006393595s
    Mar 13 19:51:45.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m26.01002389s
    Mar 13 19:51:47.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m28.007072564s
    Mar 13 19:51:49.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m30.008932118s
    Mar 13 19:51:51.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m32.007999477s
    Mar 13 19:51:53.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m34.008036823s
    Mar 13 19:51:55.133: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m36.011098445s
    Mar 13 19:51:57.139: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m38.017810987s
    Mar 13 19:51:59.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m40.010402046s
    Mar 13 19:52:01.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m42.008783647s
    Mar 13 19:52:03.157: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m44.035687309s
    Mar 13 19:52:05.133: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m46.011775627s
    Mar 13 19:52:07.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m48.009624543s
    Mar 13 19:52:09.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m50.007886617s
    Mar 13 19:52:11.135: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m52.013065722s
    Mar 13 19:52:13.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m54.007849203s
    Mar 13 19:52:15.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m56.007181259s
    Mar 13 19:52:17.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m58.006348417s
    Mar 13 19:52:19.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m0.006597535s
    Mar 13 19:52:21.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m2.006728011s
    Mar 13 19:52:23.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m4.00733461s
    Mar 13 19:52:25.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m6.008008917s
    Mar 13 19:52:27.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m8.00807973s
    Mar 13 19:52:29.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m10.006473459s
    Mar 13 19:52:31.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m12.00741803s
    Mar 13 19:52:33.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m14.007580439s
    Mar 13 19:52:35.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m16.006858565s
    Mar 13 19:52:37.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m18.007920625s
    Mar 13 19:52:39.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m20.006790009s
    Mar 13 19:52:41.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m22.007544005s
    Mar 13 19:52:43.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m24.006548042s
    Mar 13 19:52:45.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m26.008533046s
    Mar 13 19:52:47.134: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m28.012842152s
    Mar 13 19:52:49.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m30.006600724s
    Mar 13 19:52:51.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m32.006226478s
    Mar 13 19:52:53.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m34.007667351s
    Mar 13 19:52:55.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m36.007327573s
    Mar 13 19:52:57.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m38.007525643s
    Mar 13 19:52:59.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m40.007069145s
    Mar 13 19:53:01.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m42.007317621s
    Mar 13 19:53:03.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m44.007685631s
    Mar 13 19:53:05.143: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m46.0216648s
    Mar 13 19:53:07.163: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m48.041653711s
    Mar 13 19:53:09.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m50.007329949s
    Mar 13 19:53:11.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m52.008145405s
    Mar 13 19:53:13.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m54.007670816s
    Mar 13 19:53:15.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m56.008033089s
    Mar 13 19:53:17.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m58.00850454s
    Mar 13 19:53:19.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m0.008293612s
    Mar 13 19:53:21.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m2.009234904s
    Mar 13 19:53:23.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m4.006987124s
    Mar 13 19:53:25.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m6.009805935s
    Mar 13 19:53:27.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m8.007709431s
    Mar 13 19:53:29.136: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m10.014502297s
    Mar 13 19:53:31.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m12.008587716s
    Mar 13 19:53:33.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m14.007588788s
    Mar 13 19:53:35.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m16.006572701s
    Mar 13 19:53:37.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m18.007024597s
    Mar 13 19:53:39.140: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m20.017888888s
    Mar 13 19:53:41.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m22.007277472s
    Mar 13 19:53:43.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m24.010117881s
    Mar 13 19:53:45.131: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m26.009133426s
    Mar 13 19:53:47.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m28.00730373s
    Mar 13 19:53:49.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m30.006824418s
    Mar 13 19:53:51.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m32.008499365s
    Mar 13 19:53:53.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m34.008300886s
    Mar 13 19:53:55.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m36.007091276s
    Mar 13 19:53:57.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m38.007810058s
    Mar 13 19:53:59.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m40.008296643s
    Mar 13 19:54:01.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m42.006678183s
    Mar 13 19:54:03.135: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m44.013222091s
    Mar 13 19:54:05.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m46.007753668s
    Mar 13 19:54:07.140: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m48.018022611s
    Mar 13 19:54:09.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m50.008118328s
    Mar 13 19:54:11.130: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m52.008806562s
    Mar 13 19:54:13.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m54.007376072s
    Mar 13 19:54:15.129: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m56.007601975s
    Mar 13 19:54:17.128: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m58.006341263s
    Mar 13 19:54:19.132: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.009867436s
    Mar 13 19:54:19.135: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.013750443s
    STEP: removing the label kubernetes.io/e2e-c8962bca-a4c8-4be7-ad62-ed5f22d753a6 off the node vke-automated-test-51df1d4fb06e 03/13/23 19:54:19.135
    STEP: verifying the node doesn't have the label kubernetes.io/e2e-c8962bca-a4c8-4be7-ad62-ed5f22d753a6 03/13/23 19:54:19.153
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:54:19.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-4809" for this suite. 03/13/23 19:54:19.172
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:54:19.181
Mar 13 19:54:19.181: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:54:19.183
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:19.205
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:19.208
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221
STEP: Creating a pod to test downward API volume plugin 03/13/23 19:54:19.211
Mar 13 19:54:19.218: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510" in namespace "projected-4854" to be "Succeeded or Failed"
Mar 13 19:54:19.222: INFO: Pod "downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510": Phase="Pending", Reason="", readiness=false. Elapsed: 3.743236ms
Mar 13 19:54:21.229: INFO: Pod "downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010421724s
Mar 13 19:54:23.226: INFO: Pod "downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007597796s
STEP: Saw pod success 03/13/23 19:54:23.226
Mar 13 19:54:23.226: INFO: Pod "downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510" satisfied condition "Succeeded or Failed"
Mar 13 19:54:23.229: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510 container client-container: <nil>
STEP: delete the pod 03/13/23 19:54:23.253
Mar 13 19:54:23.260: INFO: Waiting for pod downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510 to disappear
Mar 13 19:54:23.263: INFO: Pod downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar 13 19:54:23.263: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4854" for this suite. 03/13/23 19:54:23.266
------------------------------
â€¢ [4.088 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:54:19.181
    Mar 13 19:54:19.181: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:54:19.183
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:19.205
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:19.208
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's cpu request [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:221
    STEP: Creating a pod to test downward API volume plugin 03/13/23 19:54:19.211
    Mar 13 19:54:19.218: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510" in namespace "projected-4854" to be "Succeeded or Failed"
    Mar 13 19:54:19.222: INFO: Pod "downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510": Phase="Pending", Reason="", readiness=false. Elapsed: 3.743236ms
    Mar 13 19:54:21.229: INFO: Pod "downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010421724s
    Mar 13 19:54:23.226: INFO: Pod "downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007597796s
    STEP: Saw pod success 03/13/23 19:54:23.226
    Mar 13 19:54:23.226: INFO: Pod "downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510" satisfied condition "Succeeded or Failed"
    Mar 13 19:54:23.229: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510 container client-container: <nil>
    STEP: delete the pod 03/13/23 19:54:23.253
    Mar 13 19:54:23.260: INFO: Waiting for pod downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510 to disappear
    Mar 13 19:54:23.263: INFO: Pod downwardapi-volume-2e211012-bf4d-4c32-b2c4-177589c8a510 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:54:23.263: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4854" for this suite. 03/13/23 19:54:23.266
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:54:23.271
Mar 13 19:54:23.271: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 19:54:23.272
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:23.282
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:23.284
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84
STEP: Creating a pod to test downward API volume plugin 03/13/23 19:54:23.287
Mar 13 19:54:23.294: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41" in namespace "projected-7815" to be "Succeeded or Failed"
Mar 13 19:54:23.297: INFO: Pod "downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41": Phase="Pending", Reason="", readiness=false. Elapsed: 2.222211ms
Mar 13 19:54:25.300: INFO: Pod "downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005925032s
Mar 13 19:54:27.300: INFO: Pod "downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41": Phase="Pending", Reason="", readiness=false. Elapsed: 4.005970374s
Mar 13 19:54:29.308: INFO: Pod "downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.013530714s
STEP: Saw pod success 03/13/23 19:54:29.308
Mar 13 19:54:29.308: INFO: Pod "downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41" satisfied condition "Succeeded or Failed"
Mar 13 19:54:29.315: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41 container client-container: <nil>
STEP: delete the pod 03/13/23 19:54:29.354
Mar 13 19:54:29.380: INFO: Waiting for pod downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41 to disappear
Mar 13 19:54:29.384: INFO: Pod downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar 13 19:54:29.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7815" for this suite. 03/13/23 19:54:29.391
------------------------------
â€¢ [SLOW TEST] [6.130 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:54:23.271
    Mar 13 19:54:23.271: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 19:54:23.272
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:23.282
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:23.284
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:84
    STEP: Creating a pod to test downward API volume plugin 03/13/23 19:54:23.287
    Mar 13 19:54:23.294: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41" in namespace "projected-7815" to be "Succeeded or Failed"
    Mar 13 19:54:23.297: INFO: Pod "downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41": Phase="Pending", Reason="", readiness=false. Elapsed: 2.222211ms
    Mar 13 19:54:25.300: INFO: Pod "downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005925032s
    Mar 13 19:54:27.300: INFO: Pod "downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41": Phase="Pending", Reason="", readiness=false. Elapsed: 4.005970374s
    Mar 13 19:54:29.308: INFO: Pod "downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.013530714s
    STEP: Saw pod success 03/13/23 19:54:29.308
    Mar 13 19:54:29.308: INFO: Pod "downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41" satisfied condition "Succeeded or Failed"
    Mar 13 19:54:29.315: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41 container client-container: <nil>
    STEP: delete the pod 03/13/23 19:54:29.354
    Mar 13 19:54:29.380: INFO: Waiting for pod downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41 to disappear
    Mar 13 19:54:29.384: INFO: Pod downwardapi-volume-d118a5fb-5811-4b73-b083-e30428defb41 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:54:29.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7815" for this suite. 03/13/23 19:54:29.391
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:54:29.405
Mar 13 19:54:29.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 19:54:29.406
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:29.418
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:29.422
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162
STEP: Creating the pod 03/13/23 19:54:29.427
Mar 13 19:54:29.436: INFO: Waiting up to 5m0s for pod "annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca" in namespace "downward-api-3429" to be "running and ready"
Mar 13 19:54:29.439: INFO: Pod "annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca": Phase="Pending", Reason="", readiness=false. Elapsed: 2.9369ms
Mar 13 19:54:29.439: INFO: The phase of Pod annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:54:31.443: INFO: Pod "annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca": Phase="Running", Reason="", readiness=true. Elapsed: 2.006951896s
Mar 13 19:54:31.443: INFO: The phase of Pod annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca is Running (Ready = true)
Mar 13 19:54:31.443: INFO: Pod "annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca" satisfied condition "running and ready"
Mar 13 19:54:31.965: INFO: Successfully updated pod "annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar 13 19:54:36.001: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-3429" for this suite. 03/13/23 19:54:36.005
------------------------------
â€¢ [SLOW TEST] [6.604 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:54:29.405
    Mar 13 19:54:29.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 19:54:29.406
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:29.418
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:29.422
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should update annotations on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:162
    STEP: Creating the pod 03/13/23 19:54:29.427
    Mar 13 19:54:29.436: INFO: Waiting up to 5m0s for pod "annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca" in namespace "downward-api-3429" to be "running and ready"
    Mar 13 19:54:29.439: INFO: Pod "annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca": Phase="Pending", Reason="", readiness=false. Elapsed: 2.9369ms
    Mar 13 19:54:29.439: INFO: The phase of Pod annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:54:31.443: INFO: Pod "annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca": Phase="Running", Reason="", readiness=true. Elapsed: 2.006951896s
    Mar 13 19:54:31.443: INFO: The phase of Pod annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca is Running (Ready = true)
    Mar 13 19:54:31.443: INFO: Pod "annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca" satisfied condition "running and ready"
    Mar 13 19:54:31.965: INFO: Successfully updated pod "annotationupdate0a823fe4-fd22-4eef-8901-2e5503ad93ca"
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:54:36.001: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-3429" for this suite. 03/13/23 19:54:36.005
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:54:36.011
Mar 13 19:54:36.011: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pods 03/13/23 19:54:36.013
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:36.022
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:36.024
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398
STEP: creating the pod 03/13/23 19:54:36.027
STEP: submitting the pod to kubernetes 03/13/23 19:54:36.027
Mar 13 19:54:36.033: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2" in namespace "pods-6351" to be "running and ready"
Mar 13 19:54:36.035: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.068983ms
Mar 13 19:54:36.036: INFO: The phase of Pod pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:54:38.041: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2": Phase="Running", Reason="", readiness=true. Elapsed: 2.007227768s
Mar 13 19:54:38.041: INFO: The phase of Pod pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2 is Running (Ready = true)
Mar 13 19:54:38.041: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2" satisfied condition "running and ready"
STEP: verifying the pod is in kubernetes 03/13/23 19:54:38.043
STEP: updating the pod 03/13/23 19:54:38.047
Mar 13 19:54:38.560: INFO: Successfully updated pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2"
Mar 13 19:54:38.563: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2" in namespace "pods-6351" to be "terminated with reason DeadlineExceeded"
Mar 13 19:54:38.572: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2": Phase="Running", Reason="", readiness=true. Elapsed: 9.011953ms
Mar 13 19:54:40.576: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2": Phase="Running", Reason="", readiness=true. Elapsed: 2.013043017s
Mar 13 19:54:42.593: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2": Phase="Running", Reason="", readiness=false. Elapsed: 4.029896622s
Mar 13 19:54:44.576: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 6.012838486s
Mar 13 19:54:44.576: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2" satisfied condition "terminated with reason DeadlineExceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar 13 19:54:44.576: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-6351" for this suite. 03/13/23 19:54:44.581
------------------------------
â€¢ [SLOW TEST] [8.574 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:54:36.011
    Mar 13 19:54:36.011: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pods 03/13/23 19:54:36.013
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:36.022
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:36.024
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:398
    STEP: creating the pod 03/13/23 19:54:36.027
    STEP: submitting the pod to kubernetes 03/13/23 19:54:36.027
    Mar 13 19:54:36.033: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2" in namespace "pods-6351" to be "running and ready"
    Mar 13 19:54:36.035: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.068983ms
    Mar 13 19:54:36.036: INFO: The phase of Pod pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:54:38.041: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2": Phase="Running", Reason="", readiness=true. Elapsed: 2.007227768s
    Mar 13 19:54:38.041: INFO: The phase of Pod pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2 is Running (Ready = true)
    Mar 13 19:54:38.041: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2" satisfied condition "running and ready"
    STEP: verifying the pod is in kubernetes 03/13/23 19:54:38.043
    STEP: updating the pod 03/13/23 19:54:38.047
    Mar 13 19:54:38.560: INFO: Successfully updated pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2"
    Mar 13 19:54:38.563: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2" in namespace "pods-6351" to be "terminated with reason DeadlineExceeded"
    Mar 13 19:54:38.572: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2": Phase="Running", Reason="", readiness=true. Elapsed: 9.011953ms
    Mar 13 19:54:40.576: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2": Phase="Running", Reason="", readiness=true. Elapsed: 2.013043017s
    Mar 13 19:54:42.593: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2": Phase="Running", Reason="", readiness=false. Elapsed: 4.029896622s
    Mar 13 19:54:44.576: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 6.012838486s
    Mar 13 19:54:44.576: INFO: Pod "pod-update-activedeadlineseconds-a9c18950-9000-4948-acc7-cf07488d52c2" satisfied condition "terminated with reason DeadlineExceeded"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:54:44.576: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-6351" for this suite. 03/13/23 19:54:44.581
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:54:44.592
Mar 13 19:54:44.592: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename dns 03/13/23 19:54:44.594
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:44.603
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:44.606
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... 03/13/23 19:54:44.612
Mar 13 19:54:44.618: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9085  5083487c-82f3-43b6-a505-4fb627757e5a 33801 0 2023-03-13 19:54:44 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-03-13 19:54:44 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vjrpg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vjrpg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar 13 19:54:44.619: INFO: Waiting up to 5m0s for pod "test-dns-nameservers" in namespace "dns-9085" to be "running and ready"
Mar 13 19:54:44.621: INFO: Pod "test-dns-nameservers": Phase="Pending", Reason="", readiness=false. Elapsed: 2.437439ms
Mar 13 19:54:44.621: INFO: The phase of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:54:46.625: INFO: Pod "test-dns-nameservers": Phase="Running", Reason="", readiness=true. Elapsed: 2.006109126s
Mar 13 19:54:46.625: INFO: The phase of Pod test-dns-nameservers is Running (Ready = true)
Mar 13 19:54:46.625: INFO: Pod "test-dns-nameservers" satisfied condition "running and ready"
STEP: Verifying customized DNS suffix list is configured on pod... 03/13/23 19:54:46.625
Mar 13 19:54:46.625: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9085 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:54:46.625: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:54:46.626: INFO: ExecWithOptions: Clientset creation
Mar 13 19:54:46.626: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-9085/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod... 03/13/23 19:54:46.761
Mar 13 19:54:46.761: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9085 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 19:54:46.761: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 19:54:46.762: INFO: ExecWithOptions: Clientset creation
Mar 13 19:54:46.762: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-9085/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Mar 13 19:54:46.860: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar 13 19:54:46.868: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-9085" for this suite. 03/13/23 19:54:46.872
------------------------------
â€¢ [2.284 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:54:44.592
    Mar 13 19:54:44.592: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename dns 03/13/23 19:54:44.594
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:44.603
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:44.606
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should support configurable pod DNS nameservers [Conformance]
      test/e2e/network/dns.go:411
    STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... 03/13/23 19:54:44.612
    Mar 13 19:54:44.618: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9085  5083487c-82f3-43b6-a505-4fb627757e5a 33801 0 2023-03-13 19:54:44 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-03-13 19:54:44 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vjrpg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vjrpg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar 13 19:54:44.619: INFO: Waiting up to 5m0s for pod "test-dns-nameservers" in namespace "dns-9085" to be "running and ready"
    Mar 13 19:54:44.621: INFO: Pod "test-dns-nameservers": Phase="Pending", Reason="", readiness=false. Elapsed: 2.437439ms
    Mar 13 19:54:44.621: INFO: The phase of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:54:46.625: INFO: Pod "test-dns-nameservers": Phase="Running", Reason="", readiness=true. Elapsed: 2.006109126s
    Mar 13 19:54:46.625: INFO: The phase of Pod test-dns-nameservers is Running (Ready = true)
    Mar 13 19:54:46.625: INFO: Pod "test-dns-nameservers" satisfied condition "running and ready"
    STEP: Verifying customized DNS suffix list is configured on pod... 03/13/23 19:54:46.625
    Mar 13 19:54:46.625: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9085 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:54:46.625: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:54:46.626: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:54:46.626: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-9085/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    STEP: Verifying customized DNS server is configured on pod... 03/13/23 19:54:46.761
    Mar 13 19:54:46.761: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9085 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 19:54:46.761: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 19:54:46.762: INFO: ExecWithOptions: Clientset creation
    Mar 13 19:54:46.762: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-9085/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Mar 13 19:54:46.860: INFO: Deleting pod test-dns-nameservers...
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:54:46.868: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-9085" for this suite. 03/13/23 19:54:46.872
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:54:46.898
Mar 13 19:54:46.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 19:54:46.9
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:46.916
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:46.92
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138
STEP: Creating configMap that has name configmap-test-emptyKey-dd6965a2-daa7-4b5b-8538-7926fb75a474 03/13/23 19:54:46.925
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:54:46.928: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8953" for this suite. 03/13/23 19:54:46.932
------------------------------
â€¢ [0.038 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:54:46.898
    Mar 13 19:54:46.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 19:54:46.9
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:46.916
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:46.92
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail to create ConfigMap with empty key [Conformance]
      test/e2e/common/node/configmap.go:138
    STEP: Creating configMap that has name configmap-test-emptyKey-dd6965a2-daa7-4b5b-8538-7926fb75a474 03/13/23 19:54:46.925
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:54:46.928: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8953" for this suite. 03/13/23 19:54:46.932
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:54:46.942
Mar 13 19:54:46.942: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 19:54:46.944
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:46.956
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:46.959
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175
STEP: Creating configMap with name configmap-test-upd-82a6af82-a245-40e7-bc66-96633ed43a4e 03/13/23 19:54:46.965
STEP: Creating the pod 03/13/23 19:54:46.969
Mar 13 19:54:46.975: INFO: Waiting up to 5m0s for pod "pod-configmaps-231be7e1-8fe9-4a38-b85b-16d774a7f2fe" in namespace "configmap-5861" to be "running"
Mar 13 19:54:46.979: INFO: Pod "pod-configmaps-231be7e1-8fe9-4a38-b85b-16d774a7f2fe": Phase="Pending", Reason="", readiness=false. Elapsed: 3.40944ms
Mar 13 19:54:48.983: INFO: Pod "pod-configmaps-231be7e1-8fe9-4a38-b85b-16d774a7f2fe": Phase="Running", Reason="", readiness=false. Elapsed: 2.007785421s
Mar 13 19:54:48.983: INFO: Pod "pod-configmaps-231be7e1-8fe9-4a38-b85b-16d774a7f2fe" satisfied condition "running"
STEP: Waiting for pod with text data 03/13/23 19:54:48.983
STEP: Waiting for pod with binary data 03/13/23 19:54:48.99
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:54:48.996: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-5861" for this suite. 03/13/23 19:54:48.999
------------------------------
â€¢ [2.063 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:54:46.942
    Mar 13 19:54:46.942: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 19:54:46.944
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:46.956
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:46.959
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] binary data should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:175
    STEP: Creating configMap with name configmap-test-upd-82a6af82-a245-40e7-bc66-96633ed43a4e 03/13/23 19:54:46.965
    STEP: Creating the pod 03/13/23 19:54:46.969
    Mar 13 19:54:46.975: INFO: Waiting up to 5m0s for pod "pod-configmaps-231be7e1-8fe9-4a38-b85b-16d774a7f2fe" in namespace "configmap-5861" to be "running"
    Mar 13 19:54:46.979: INFO: Pod "pod-configmaps-231be7e1-8fe9-4a38-b85b-16d774a7f2fe": Phase="Pending", Reason="", readiness=false. Elapsed: 3.40944ms
    Mar 13 19:54:48.983: INFO: Pod "pod-configmaps-231be7e1-8fe9-4a38-b85b-16d774a7f2fe": Phase="Running", Reason="", readiness=false. Elapsed: 2.007785421s
    Mar 13 19:54:48.983: INFO: Pod "pod-configmaps-231be7e1-8fe9-4a38-b85b-16d774a7f2fe" satisfied condition "running"
    STEP: Waiting for pod with text data 03/13/23 19:54:48.983
    STEP: Waiting for pod with binary data 03/13/23 19:54:48.99
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:54:48.996: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-5861" for this suite. 03/13/23 19:54:48.999
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/apps/statefulset.go:587
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:54:49.006
Mar 13 19:54:49.006: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename statefulset 03/13/23 19:54:49.007
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:49.017
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:49.021
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-6624 03/13/23 19:54:49.024
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/apps/statefulset.go:587
STEP: Initializing watcher for selector baz=blah,foo=bar 03/13/23 19:54:49.028
STEP: Creating stateful set ss in namespace statefulset-6624 03/13/23 19:54:49.03
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6624 03/13/23 19:54:49.034
Mar 13 19:54:49.036: INFO: Found 0 stateful pods, waiting for 1
Mar 13 19:54:59.041: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod 03/13/23 19:54:59.041
Mar 13 19:54:59.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar 13 19:54:59.246: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar 13 19:54:59.246: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar 13 19:54:59.246: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar 13 19:54:59.249: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Mar 13 19:55:09.259: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Mar 13 19:55:09.259: INFO: Waiting for statefulset status.replicas updated to 0
Mar 13 19:55:09.291: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999666s
Mar 13 19:55:10.296: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.99003574s
Mar 13 19:55:11.309: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.984153408s
Mar 13 19:55:12.322: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.97119474s
Mar 13 19:55:13.335: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.958080667s
Mar 13 19:55:14.342: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.945188786s
Mar 13 19:55:15.346: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.938918809s
Mar 13 19:55:16.351: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.934267135s
Mar 13 19:55:17.355: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.929470226s
Mar 13 19:55:18.359: INFO: Verifying statefulset ss doesn't scale past 1 for another 925.676439ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6624 03/13/23 19:55:19.359
Mar 13 19:55:19.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar 13 19:55:19.536: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar 13 19:55:19.536: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar 13 19:55:19.536: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar 13 19:55:19.539: INFO: Found 1 stateful pods, waiting for 3
Mar 13 19:55:29.546: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Mar 13 19:55:29.546: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Mar 13 19:55:29.546: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order 03/13/23 19:55:29.546
STEP: Scale down will halt with unhealthy stateful pod 03/13/23 19:55:29.547
Mar 13 19:55:29.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar 13 19:55:29.730: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar 13 19:55:29.730: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar 13 19:55:29.730: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar 13 19:55:29.730: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar 13 19:55:29.910: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar 13 19:55:29.910: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar 13 19:55:29.910: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar 13 19:55:29.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar 13 19:55:30.074: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar 13 19:55:30.074: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar 13 19:55:30.074: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar 13 19:55:30.074: INFO: Waiting for statefulset status.replicas updated to 0
Mar 13 19:55:30.078: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Mar 13 19:55:40.088: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Mar 13 19:55:40.088: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Mar 13 19:55:40.088: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Mar 13 19:55:40.098: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999768s
Mar 13 19:55:41.105: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996403051s
Mar 13 19:55:42.109: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.990067315s
Mar 13 19:55:43.115: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.984987692s
Mar 13 19:55:44.122: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.980412273s
Mar 13 19:55:45.127: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.972071604s
Mar 13 19:55:46.131: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.967645828s
Mar 13 19:55:47.136: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.963659836s
Mar 13 19:55:48.140: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.959074706s
Mar 13 19:55:49.145: INFO: Verifying statefulset ss doesn't scale past 3 for another 954.23555ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6624 03/13/23 19:55:50.145
Mar 13 19:55:50.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar 13 19:55:50.318: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar 13 19:55:50.318: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar 13 19:55:50.318: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar 13 19:55:50.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar 13 19:55:50.501: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar 13 19:55:50.501: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar 13 19:55:50.501: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar 13 19:55:50.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar 13 19:55:50.676: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar 13 19:55:50.676: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar 13 19:55:50.676: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar 13 19:55:50.676: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order 03/13/23 19:56:00.696
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar 13 19:56:00.696: INFO: Deleting all statefulset in ns statefulset-6624
Mar 13 19:56:00.700: INFO: Scaling statefulset ss to 0
Mar 13 19:56:00.712: INFO: Waiting for statefulset status.replicas updated to 0
Mar 13 19:56:00.715: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:56:00.735: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-6624" for this suite. 03/13/23 19:56:00.74
------------------------------
â€¢ [SLOW TEST] [71.741 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/apps/statefulset.go:587

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:54:49.006
    Mar 13 19:54:49.006: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename statefulset 03/13/23 19:54:49.007
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:54:49.017
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:54:49.021
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-6624 03/13/23 19:54:49.024
    [It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
      test/e2e/apps/statefulset.go:587
    STEP: Initializing watcher for selector baz=blah,foo=bar 03/13/23 19:54:49.028
    STEP: Creating stateful set ss in namespace statefulset-6624 03/13/23 19:54:49.03
    STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6624 03/13/23 19:54:49.034
    Mar 13 19:54:49.036: INFO: Found 0 stateful pods, waiting for 1
    Mar 13 19:54:59.041: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod 03/13/23 19:54:59.041
    Mar 13 19:54:59.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar 13 19:54:59.246: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar 13 19:54:59.246: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar 13 19:54:59.246: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar 13 19:54:59.249: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
    Mar 13 19:55:09.259: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Mar 13 19:55:09.259: INFO: Waiting for statefulset status.replicas updated to 0
    Mar 13 19:55:09.291: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999666s
    Mar 13 19:55:10.296: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.99003574s
    Mar 13 19:55:11.309: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.984153408s
    Mar 13 19:55:12.322: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.97119474s
    Mar 13 19:55:13.335: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.958080667s
    Mar 13 19:55:14.342: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.945188786s
    Mar 13 19:55:15.346: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.938918809s
    Mar 13 19:55:16.351: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.934267135s
    Mar 13 19:55:17.355: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.929470226s
    Mar 13 19:55:18.359: INFO: Verifying statefulset ss doesn't scale past 1 for another 925.676439ms
    STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6624 03/13/23 19:55:19.359
    Mar 13 19:55:19.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar 13 19:55:19.536: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar 13 19:55:19.536: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar 13 19:55:19.536: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar 13 19:55:19.539: INFO: Found 1 stateful pods, waiting for 3
    Mar 13 19:55:29.546: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Mar 13 19:55:29.546: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Mar 13 19:55:29.546: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Verifying that stateful set ss was scaled up in order 03/13/23 19:55:29.546
    STEP: Scale down will halt with unhealthy stateful pod 03/13/23 19:55:29.547
    Mar 13 19:55:29.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar 13 19:55:29.730: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar 13 19:55:29.730: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar 13 19:55:29.730: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar 13 19:55:29.730: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar 13 19:55:29.910: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar 13 19:55:29.910: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar 13 19:55:29.910: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar 13 19:55:29.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar 13 19:55:30.074: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar 13 19:55:30.074: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar 13 19:55:30.074: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar 13 19:55:30.074: INFO: Waiting for statefulset status.replicas updated to 0
    Mar 13 19:55:30.078: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
    Mar 13 19:55:40.088: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Mar 13 19:55:40.088: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
    Mar 13 19:55:40.088: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
    Mar 13 19:55:40.098: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999768s
    Mar 13 19:55:41.105: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996403051s
    Mar 13 19:55:42.109: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.990067315s
    Mar 13 19:55:43.115: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.984987692s
    Mar 13 19:55:44.122: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.980412273s
    Mar 13 19:55:45.127: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.972071604s
    Mar 13 19:55:46.131: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.967645828s
    Mar 13 19:55:47.136: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.963659836s
    Mar 13 19:55:48.140: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.959074706s
    Mar 13 19:55:49.145: INFO: Verifying statefulset ss doesn't scale past 3 for another 954.23555ms
    STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6624 03/13/23 19:55:50.145
    Mar 13 19:55:50.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar 13 19:55:50.318: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar 13 19:55:50.318: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar 13 19:55:50.318: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar 13 19:55:50.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar 13 19:55:50.501: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar 13 19:55:50.501: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar 13 19:55:50.501: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar 13 19:55:50.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-6624 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar 13 19:55:50.676: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar 13 19:55:50.676: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar 13 19:55:50.676: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar 13 19:55:50.676: INFO: Scaling statefulset ss to 0
    STEP: Verifying that stateful set ss was scaled down in reverse order 03/13/23 19:56:00.696
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar 13 19:56:00.696: INFO: Deleting all statefulset in ns statefulset-6624
    Mar 13 19:56:00.700: INFO: Scaling statefulset ss to 0
    Mar 13 19:56:00.712: INFO: Waiting for statefulset status.replicas updated to 0
    Mar 13 19:56:00.715: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:56:00.735: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-6624" for this suite. 03/13/23 19:56:00.74
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:56:00.749
Mar 13 19:56:00.749: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename endpointslice 03/13/23 19:56:00.75
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:00.762
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:00.766
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Mar 13 19:56:00.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-6314" for this suite. 03/13/23 19:56:00.807
------------------------------
â€¢ [0.064 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:56:00.749
    Mar 13 19:56:00.749: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename endpointslice 03/13/23 19:56:00.75
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:00.762
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:00.766
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
      test/e2e/network/endpointslice.go:102
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:56:00.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-6314" for this suite. 03/13/23 19:56:00.807
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:52
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:56:00.817
Mar 13 19:56:00.817: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubelet-test 03/13/23 19:56:00.818
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:00.829
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:00.832
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:52
Mar 13 19:56:00.843: INFO: Waiting up to 5m0s for pod "busybox-scheduling-c8323fa5-24e7-4af5-98ba-21530c4f59ed" in namespace "kubelet-test-9488" to be "running and ready"
Mar 13 19:56:00.845: INFO: Pod "busybox-scheduling-c8323fa5-24e7-4af5-98ba-21530c4f59ed": Phase="Pending", Reason="", readiness=false. Elapsed: 2.385525ms
Mar 13 19:56:00.846: INFO: The phase of Pod busybox-scheduling-c8323fa5-24e7-4af5-98ba-21530c4f59ed is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:56:02.856: INFO: Pod "busybox-scheduling-c8323fa5-24e7-4af5-98ba-21530c4f59ed": Phase="Running", Reason="", readiness=true. Elapsed: 2.012540729s
Mar 13 19:56:02.856: INFO: The phase of Pod busybox-scheduling-c8323fa5-24e7-4af5-98ba-21530c4f59ed is Running (Ready = true)
Mar 13 19:56:02.856: INFO: Pod "busybox-scheduling-c8323fa5-24e7-4af5-98ba-21530c4f59ed" satisfied condition "running and ready"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Mar 13 19:56:02.873: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-9488" for this suite. 03/13/23 19:56:02.891
------------------------------
â€¢ [2.108 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command in a pod
  test/e2e/common/node/kubelet.go:44
    should print the output to logs [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:52

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:56:00.817
    Mar 13 19:56:00.817: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubelet-test 03/13/23 19:56:00.818
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:00.829
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:00.832
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should print the output to logs [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:52
    Mar 13 19:56:00.843: INFO: Waiting up to 5m0s for pod "busybox-scheduling-c8323fa5-24e7-4af5-98ba-21530c4f59ed" in namespace "kubelet-test-9488" to be "running and ready"
    Mar 13 19:56:00.845: INFO: Pod "busybox-scheduling-c8323fa5-24e7-4af5-98ba-21530c4f59ed": Phase="Pending", Reason="", readiness=false. Elapsed: 2.385525ms
    Mar 13 19:56:00.846: INFO: The phase of Pod busybox-scheduling-c8323fa5-24e7-4af5-98ba-21530c4f59ed is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:56:02.856: INFO: Pod "busybox-scheduling-c8323fa5-24e7-4af5-98ba-21530c4f59ed": Phase="Running", Reason="", readiness=true. Elapsed: 2.012540729s
    Mar 13 19:56:02.856: INFO: The phase of Pod busybox-scheduling-c8323fa5-24e7-4af5-98ba-21530c4f59ed is Running (Ready = true)
    Mar 13 19:56:02.856: INFO: Pod "busybox-scheduling-c8323fa5-24e7-4af5-98ba-21530c4f59ed" satisfied condition "running and ready"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:56:02.873: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-9488" for this suite. 03/13/23 19:56:02.891
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:56:02.925
Mar 13 19:56:02.925: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename tables 03/13/23 19:56:02.926
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:02.954
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:02.972
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/node/init/init.go:32
Mar 13 19:56:03.005: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  tear down framework | framework.go:193
STEP: Destroying namespace "tables-4946" for this suite. 03/13/23 19:56:03.013
------------------------------
â€¢ [0.128 seconds]
[sig-api-machinery] Servers with support for Table transformation
test/e2e/apimachinery/framework.go:23
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:56:02.925
    Mar 13 19:56:02.925: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename tables 03/13/23 19:56:02.926
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:02.954
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:02.972
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/apimachinery/table_conversion.go:49
    [It] should return a 406 for a backend which does not implement metadata [Conformance]
      test/e2e/apimachinery/table_conversion.go:154
    [AfterEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:56:03.005: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      tear down framework | framework.go:193
    STEP: Destroying namespace "tables-4946" for this suite. 03/13/23 19:56:03.013
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122
[BeforeEach] [sig-api-machinery] Discovery
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:56:03.063
Mar 13 19:56:03.063: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename discovery 03/13/23 19:56:03.064
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:03.117
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:03.125
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert 03/13/23 19:56:03.141
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122
Mar 13 19:56:03.949: INFO: Checking APIGroup: apiregistration.k8s.io
Mar 13 19:56:03.952: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Mar 13 19:56:03.952: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Mar 13 19:56:03.952: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Mar 13 19:56:03.952: INFO: Checking APIGroup: apps
Mar 13 19:56:03.954: INFO: PreferredVersion.GroupVersion: apps/v1
Mar 13 19:56:03.954: INFO: Versions found [{apps/v1 v1}]
Mar 13 19:56:03.954: INFO: apps/v1 matches apps/v1
Mar 13 19:56:03.954: INFO: Checking APIGroup: events.k8s.io
Mar 13 19:56:03.956: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Mar 13 19:56:03.956: INFO: Versions found [{events.k8s.io/v1 v1}]
Mar 13 19:56:03.956: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Mar 13 19:56:03.956: INFO: Checking APIGroup: authentication.k8s.io
Mar 13 19:56:03.958: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Mar 13 19:56:03.958: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Mar 13 19:56:03.958: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Mar 13 19:56:03.958: INFO: Checking APIGroup: authorization.k8s.io
Mar 13 19:56:03.959: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Mar 13 19:56:03.959: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Mar 13 19:56:03.959: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Mar 13 19:56:03.959: INFO: Checking APIGroup: autoscaling
Mar 13 19:56:03.963: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Mar 13 19:56:03.963: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
Mar 13 19:56:03.963: INFO: autoscaling/v2 matches autoscaling/v2
Mar 13 19:56:03.963: INFO: Checking APIGroup: batch
Mar 13 19:56:03.969: INFO: PreferredVersion.GroupVersion: batch/v1
Mar 13 19:56:03.969: INFO: Versions found [{batch/v1 v1}]
Mar 13 19:56:03.969: INFO: batch/v1 matches batch/v1
Mar 13 19:56:03.969: INFO: Checking APIGroup: certificates.k8s.io
Mar 13 19:56:03.971: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Mar 13 19:56:03.971: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Mar 13 19:56:03.971: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Mar 13 19:56:03.971: INFO: Checking APIGroup: networking.k8s.io
Mar 13 19:56:03.974: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Mar 13 19:56:03.974: INFO: Versions found [{networking.k8s.io/v1 v1} {networking.k8s.io/v1alpha1 v1alpha1}]
Mar 13 19:56:03.974: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Mar 13 19:56:03.974: INFO: Checking APIGroup: policy
Mar 13 19:56:03.982: INFO: PreferredVersion.GroupVersion: policy/v1
Mar 13 19:56:03.983: INFO: Versions found [{policy/v1 v1}]
Mar 13 19:56:03.983: INFO: policy/v1 matches policy/v1
Mar 13 19:56:03.983: INFO: Checking APIGroup: rbac.authorization.k8s.io
Mar 13 19:56:03.984: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Mar 13 19:56:03.984: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Mar 13 19:56:03.984: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Mar 13 19:56:03.984: INFO: Checking APIGroup: storage.k8s.io
Mar 13 19:56:03.986: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Mar 13 19:56:03.986: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Mar 13 19:56:03.986: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Mar 13 19:56:03.986: INFO: Checking APIGroup: admissionregistration.k8s.io
Mar 13 19:56:03.987: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Mar 13 19:56:03.987: INFO: Versions found [{admissionregistration.k8s.io/v1 v1} {admissionregistration.k8s.io/v1alpha1 v1alpha1}]
Mar 13 19:56:03.987: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Mar 13 19:56:03.987: INFO: Checking APIGroup: apiextensions.k8s.io
Mar 13 19:56:03.990: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Mar 13 19:56:03.990: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Mar 13 19:56:03.990: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Mar 13 19:56:03.990: INFO: Checking APIGroup: scheduling.k8s.io
Mar 13 19:56:03.994: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Mar 13 19:56:03.994: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Mar 13 19:56:03.994: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Mar 13 19:56:03.994: INFO: Checking APIGroup: coordination.k8s.io
Mar 13 19:56:03.995: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Mar 13 19:56:03.995: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Mar 13 19:56:03.995: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Mar 13 19:56:03.995: INFO: Checking APIGroup: node.k8s.io
Mar 13 19:56:04.003: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Mar 13 19:56:04.003: INFO: Versions found [{node.k8s.io/v1 v1}]
Mar 13 19:56:04.003: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Mar 13 19:56:04.003: INFO: Checking APIGroup: discovery.k8s.io
Mar 13 19:56:04.004: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Mar 13 19:56:04.005: INFO: Versions found [{discovery.k8s.io/v1 v1}]
Mar 13 19:56:04.005: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Mar 13 19:56:04.005: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Mar 13 19:56:04.006: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
Mar 13 19:56:04.006: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
Mar 13 19:56:04.006: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
Mar 13 19:56:04.006: INFO: Checking APIGroup: internal.apiserver.k8s.io
Mar 13 19:56:04.008: INFO: PreferredVersion.GroupVersion: internal.apiserver.k8s.io/v1alpha1
Mar 13 19:56:04.008: INFO: Versions found [{internal.apiserver.k8s.io/v1alpha1 v1alpha1}]
Mar 13 19:56:04.008: INFO: internal.apiserver.k8s.io/v1alpha1 matches internal.apiserver.k8s.io/v1alpha1
Mar 13 19:56:04.008: INFO: Checking APIGroup: resource.k8s.io
Mar 13 19:56:04.011: INFO: PreferredVersion.GroupVersion: resource.k8s.io/v1alpha1
Mar 13 19:56:04.011: INFO: Versions found [{resource.k8s.io/v1alpha1 v1alpha1}]
Mar 13 19:56:04.011: INFO: resource.k8s.io/v1alpha1 matches resource.k8s.io/v1alpha1
Mar 13 19:56:04.011: INFO: Checking APIGroup: crd.projectcalico.org
Mar 13 19:56:04.013: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
Mar 13 19:56:04.013: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
Mar 13 19:56:04.013: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/node/init/init.go:32
Mar 13 19:56:04.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  tear down framework | framework.go:193
STEP: Destroying namespace "discovery-5182" for this suite. 03/13/23 19:56:04.019
------------------------------
â€¢ [0.962 seconds]
[sig-api-machinery] Discovery
test/e2e/apimachinery/framework.go:23
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Discovery
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:56:03.063
    Mar 13 19:56:03.063: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename discovery 03/13/23 19:56:03.064
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:03.117
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:03.125
    [BeforeEach] [sig-api-machinery] Discovery
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Discovery
      test/e2e/apimachinery/discovery.go:43
    STEP: Setting up server cert 03/13/23 19:56:03.141
    [It] should validate PreferredVersion for each APIGroup [Conformance]
      test/e2e/apimachinery/discovery.go:122
    Mar 13 19:56:03.949: INFO: Checking APIGroup: apiregistration.k8s.io
    Mar 13 19:56:03.952: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
    Mar 13 19:56:03.952: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
    Mar 13 19:56:03.952: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
    Mar 13 19:56:03.952: INFO: Checking APIGroup: apps
    Mar 13 19:56:03.954: INFO: PreferredVersion.GroupVersion: apps/v1
    Mar 13 19:56:03.954: INFO: Versions found [{apps/v1 v1}]
    Mar 13 19:56:03.954: INFO: apps/v1 matches apps/v1
    Mar 13 19:56:03.954: INFO: Checking APIGroup: events.k8s.io
    Mar 13 19:56:03.956: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
    Mar 13 19:56:03.956: INFO: Versions found [{events.k8s.io/v1 v1}]
    Mar 13 19:56:03.956: INFO: events.k8s.io/v1 matches events.k8s.io/v1
    Mar 13 19:56:03.956: INFO: Checking APIGroup: authentication.k8s.io
    Mar 13 19:56:03.958: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
    Mar 13 19:56:03.958: INFO: Versions found [{authentication.k8s.io/v1 v1}]
    Mar 13 19:56:03.958: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
    Mar 13 19:56:03.958: INFO: Checking APIGroup: authorization.k8s.io
    Mar 13 19:56:03.959: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
    Mar 13 19:56:03.959: INFO: Versions found [{authorization.k8s.io/v1 v1}]
    Mar 13 19:56:03.959: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
    Mar 13 19:56:03.959: INFO: Checking APIGroup: autoscaling
    Mar 13 19:56:03.963: INFO: PreferredVersion.GroupVersion: autoscaling/v2
    Mar 13 19:56:03.963: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
    Mar 13 19:56:03.963: INFO: autoscaling/v2 matches autoscaling/v2
    Mar 13 19:56:03.963: INFO: Checking APIGroup: batch
    Mar 13 19:56:03.969: INFO: PreferredVersion.GroupVersion: batch/v1
    Mar 13 19:56:03.969: INFO: Versions found [{batch/v1 v1}]
    Mar 13 19:56:03.969: INFO: batch/v1 matches batch/v1
    Mar 13 19:56:03.969: INFO: Checking APIGroup: certificates.k8s.io
    Mar 13 19:56:03.971: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
    Mar 13 19:56:03.971: INFO: Versions found [{certificates.k8s.io/v1 v1}]
    Mar 13 19:56:03.971: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
    Mar 13 19:56:03.971: INFO: Checking APIGroup: networking.k8s.io
    Mar 13 19:56:03.974: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
    Mar 13 19:56:03.974: INFO: Versions found [{networking.k8s.io/v1 v1} {networking.k8s.io/v1alpha1 v1alpha1}]
    Mar 13 19:56:03.974: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
    Mar 13 19:56:03.974: INFO: Checking APIGroup: policy
    Mar 13 19:56:03.982: INFO: PreferredVersion.GroupVersion: policy/v1
    Mar 13 19:56:03.983: INFO: Versions found [{policy/v1 v1}]
    Mar 13 19:56:03.983: INFO: policy/v1 matches policy/v1
    Mar 13 19:56:03.983: INFO: Checking APIGroup: rbac.authorization.k8s.io
    Mar 13 19:56:03.984: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
    Mar 13 19:56:03.984: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
    Mar 13 19:56:03.984: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
    Mar 13 19:56:03.984: INFO: Checking APIGroup: storage.k8s.io
    Mar 13 19:56:03.986: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
    Mar 13 19:56:03.986: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
    Mar 13 19:56:03.986: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
    Mar 13 19:56:03.986: INFO: Checking APIGroup: admissionregistration.k8s.io
    Mar 13 19:56:03.987: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
    Mar 13 19:56:03.987: INFO: Versions found [{admissionregistration.k8s.io/v1 v1} {admissionregistration.k8s.io/v1alpha1 v1alpha1}]
    Mar 13 19:56:03.987: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
    Mar 13 19:56:03.987: INFO: Checking APIGroup: apiextensions.k8s.io
    Mar 13 19:56:03.990: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
    Mar 13 19:56:03.990: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
    Mar 13 19:56:03.990: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
    Mar 13 19:56:03.990: INFO: Checking APIGroup: scheduling.k8s.io
    Mar 13 19:56:03.994: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
    Mar 13 19:56:03.994: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
    Mar 13 19:56:03.994: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
    Mar 13 19:56:03.994: INFO: Checking APIGroup: coordination.k8s.io
    Mar 13 19:56:03.995: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
    Mar 13 19:56:03.995: INFO: Versions found [{coordination.k8s.io/v1 v1}]
    Mar 13 19:56:03.995: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
    Mar 13 19:56:03.995: INFO: Checking APIGroup: node.k8s.io
    Mar 13 19:56:04.003: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
    Mar 13 19:56:04.003: INFO: Versions found [{node.k8s.io/v1 v1}]
    Mar 13 19:56:04.003: INFO: node.k8s.io/v1 matches node.k8s.io/v1
    Mar 13 19:56:04.003: INFO: Checking APIGroup: discovery.k8s.io
    Mar 13 19:56:04.004: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
    Mar 13 19:56:04.005: INFO: Versions found [{discovery.k8s.io/v1 v1}]
    Mar 13 19:56:04.005: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
    Mar 13 19:56:04.005: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
    Mar 13 19:56:04.006: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
    Mar 13 19:56:04.006: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
    Mar 13 19:56:04.006: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
    Mar 13 19:56:04.006: INFO: Checking APIGroup: internal.apiserver.k8s.io
    Mar 13 19:56:04.008: INFO: PreferredVersion.GroupVersion: internal.apiserver.k8s.io/v1alpha1
    Mar 13 19:56:04.008: INFO: Versions found [{internal.apiserver.k8s.io/v1alpha1 v1alpha1}]
    Mar 13 19:56:04.008: INFO: internal.apiserver.k8s.io/v1alpha1 matches internal.apiserver.k8s.io/v1alpha1
    Mar 13 19:56:04.008: INFO: Checking APIGroup: resource.k8s.io
    Mar 13 19:56:04.011: INFO: PreferredVersion.GroupVersion: resource.k8s.io/v1alpha1
    Mar 13 19:56:04.011: INFO: Versions found [{resource.k8s.io/v1alpha1 v1alpha1}]
    Mar 13 19:56:04.011: INFO: resource.k8s.io/v1alpha1 matches resource.k8s.io/v1alpha1
    Mar 13 19:56:04.011: INFO: Checking APIGroup: crd.projectcalico.org
    Mar 13 19:56:04.013: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
    Mar 13 19:56:04.013: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
    Mar 13 19:56:04.013: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
    [AfterEach] [sig-api-machinery] Discovery
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:56:04.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      tear down framework | framework.go:193
    STEP: Destroying namespace "discovery-5182" for this suite. 03/13/23 19:56:04.019
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:56:04.026
Mar 13 19:56:04.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 19:56:04.029
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:04.08
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:04.104
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124
STEP: Creating configMap with name configmap-test-upd-cdbf94a2-df32-4089-8cf8-2318c502c03b 03/13/23 19:56:04.127
STEP: Creating the pod 03/13/23 19:56:04.15
Mar 13 19:56:04.188: INFO: Waiting up to 5m0s for pod "pod-configmaps-fcbf3f55-edcb-4e98-bd69-783da20c8167" in namespace "configmap-5288" to be "running and ready"
Mar 13 19:56:04.210: INFO: Pod "pod-configmaps-fcbf3f55-edcb-4e98-bd69-783da20c8167": Phase="Pending", Reason="", readiness=false. Elapsed: 22.092306ms
Mar 13 19:56:04.210: INFO: The phase of Pod pod-configmaps-fcbf3f55-edcb-4e98-bd69-783da20c8167 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:56:06.218: INFO: Pod "pod-configmaps-fcbf3f55-edcb-4e98-bd69-783da20c8167": Phase="Running", Reason="", readiness=true. Elapsed: 2.029707967s
Mar 13 19:56:06.218: INFO: The phase of Pod pod-configmaps-fcbf3f55-edcb-4e98-bd69-783da20c8167 is Running (Ready = true)
Mar 13 19:56:06.218: INFO: Pod "pod-configmaps-fcbf3f55-edcb-4e98-bd69-783da20c8167" satisfied condition "running and ready"
STEP: Updating configmap configmap-test-upd-cdbf94a2-df32-4089-8cf8-2318c502c03b 03/13/23 19:56:06.239
STEP: waiting to observe update in volume 03/13/23 19:56:06.245
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:56:08.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-5288" for this suite. 03/13/23 19:56:08.283
------------------------------
â€¢ [4.264 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:56:04.026
    Mar 13 19:56:04.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 19:56:04.029
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:04.08
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:04.104
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:124
    STEP: Creating configMap with name configmap-test-upd-cdbf94a2-df32-4089-8cf8-2318c502c03b 03/13/23 19:56:04.127
    STEP: Creating the pod 03/13/23 19:56:04.15
    Mar 13 19:56:04.188: INFO: Waiting up to 5m0s for pod "pod-configmaps-fcbf3f55-edcb-4e98-bd69-783da20c8167" in namespace "configmap-5288" to be "running and ready"
    Mar 13 19:56:04.210: INFO: Pod "pod-configmaps-fcbf3f55-edcb-4e98-bd69-783da20c8167": Phase="Pending", Reason="", readiness=false. Elapsed: 22.092306ms
    Mar 13 19:56:04.210: INFO: The phase of Pod pod-configmaps-fcbf3f55-edcb-4e98-bd69-783da20c8167 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:56:06.218: INFO: Pod "pod-configmaps-fcbf3f55-edcb-4e98-bd69-783da20c8167": Phase="Running", Reason="", readiness=true. Elapsed: 2.029707967s
    Mar 13 19:56:06.218: INFO: The phase of Pod pod-configmaps-fcbf3f55-edcb-4e98-bd69-783da20c8167 is Running (Ready = true)
    Mar 13 19:56:06.218: INFO: Pod "pod-configmaps-fcbf3f55-edcb-4e98-bd69-783da20c8167" satisfied condition "running and ready"
    STEP: Updating configmap configmap-test-upd-cdbf94a2-df32-4089-8cf8-2318c502c03b 03/13/23 19:56:06.239
    STEP: waiting to observe update in volume 03/13/23 19:56:06.245
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:56:08.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-5288" for this suite. 03/13/23 19:56:08.283
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Pods
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:56:08.291
Mar 13 19:56:08.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pods 03/13/23 19:56:08.292
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:08.374
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:08.38
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618
Mar 13 19:56:08.385: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: creating the pod 03/13/23 19:56:08.386
STEP: submitting the pod to kubernetes 03/13/23 19:56:08.387
Mar 13 19:56:08.399: INFO: Waiting up to 5m0s for pod "pod-logs-websocket-686608dd-3841-412a-984c-f73f83329c12" in namespace "pods-6177" to be "running and ready"
Mar 13 19:56:08.405: INFO: Pod "pod-logs-websocket-686608dd-3841-412a-984c-f73f83329c12": Phase="Pending", Reason="", readiness=false. Elapsed: 5.467932ms
Mar 13 19:56:08.405: INFO: The phase of Pod pod-logs-websocket-686608dd-3841-412a-984c-f73f83329c12 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:56:10.417: INFO: Pod "pod-logs-websocket-686608dd-3841-412a-984c-f73f83329c12": Phase="Running", Reason="", readiness=true. Elapsed: 2.017190255s
Mar 13 19:56:10.417: INFO: The phase of Pod pod-logs-websocket-686608dd-3841-412a-984c-f73f83329c12 is Running (Ready = true)
Mar 13 19:56:10.417: INFO: Pod "pod-logs-websocket-686608dd-3841-412a-984c-f73f83329c12" satisfied condition "running and ready"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar 13 19:56:10.446: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-6177" for this suite. 03/13/23 19:56:10.451
------------------------------
â€¢ [2.170 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:56:08.291
    Mar 13 19:56:08.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pods 03/13/23 19:56:08.292
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:08.374
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:08.38
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:618
    Mar 13 19:56:08.385: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: creating the pod 03/13/23 19:56:08.386
    STEP: submitting the pod to kubernetes 03/13/23 19:56:08.387
    Mar 13 19:56:08.399: INFO: Waiting up to 5m0s for pod "pod-logs-websocket-686608dd-3841-412a-984c-f73f83329c12" in namespace "pods-6177" to be "running and ready"
    Mar 13 19:56:08.405: INFO: Pod "pod-logs-websocket-686608dd-3841-412a-984c-f73f83329c12": Phase="Pending", Reason="", readiness=false. Elapsed: 5.467932ms
    Mar 13 19:56:08.405: INFO: The phase of Pod pod-logs-websocket-686608dd-3841-412a-984c-f73f83329c12 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:56:10.417: INFO: Pod "pod-logs-websocket-686608dd-3841-412a-984c-f73f83329c12": Phase="Running", Reason="", readiness=true. Elapsed: 2.017190255s
    Mar 13 19:56:10.417: INFO: The phase of Pod pod-logs-websocket-686608dd-3841-412a-984c-f73f83329c12 is Running (Ready = true)
    Mar 13 19:56:10.417: INFO: Pod "pod-logs-websocket-686608dd-3841-412a-984c-f73f83329c12" satisfied condition "running and ready"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:56:10.446: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-6177" for this suite. 03/13/23 19:56:10.451
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment
  deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:56:10.464
Mar 13 19:56:10.464: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename deployment 03/13/23 19:56:10.465
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:10.485
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:10.489
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132
Mar 13 19:56:10.505: INFO: Pod name rollover-pod: Found 0 pods out of 1
Mar 13 19:56:15.509: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 03/13/23 19:56:15.509
Mar 13 19:56:15.509: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Mar 13 19:56:17.512: INFO: Creating deployment "test-rollover-deployment"
Mar 13 19:56:17.519: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Mar 13 19:56:19.526: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Mar 13 19:56:19.532: INFO: Ensure that both replica sets have 1 created replica
Mar 13 19:56:19.536: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Mar 13 19:56:19.543: INFO: Updating deployment test-rollover-deployment
Mar 13 19:56:19.543: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Mar 13 19:56:21.550: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Mar 13 19:56:21.557: INFO: Make sure deployment "test-rollover-deployment" is complete
Mar 13 19:56:21.562: INFO: all replica sets need to contain the pod-template-hash label
Mar 13 19:56:21.562: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:56:23.569: INFO: all replica sets need to contain the pod-template-hash label
Mar 13 19:56:23.569: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:56:25.568: INFO: all replica sets need to contain the pod-template-hash label
Mar 13 19:56:25.568: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:56:27.569: INFO: all replica sets need to contain the pod-template-hash label
Mar 13 19:56:27.569: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:56:29.568: INFO: all replica sets need to contain the pod-template-hash label
Mar 13 19:56:29.568: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar 13 19:56:31.568: INFO: 
Mar 13 19:56:31.569: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar 13 19:56:31.576: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-9158  a1d5194d-7041-461c-874c-c060618b2b97 34617 2 2023-03-13 19:56:17 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-03-13 19:56:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:56:30 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc007028008 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-13 19:56:17 +0000 UTC,LastTransitionTime:2023-03-13 19:56:17 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-6c6df9974f" has successfully progressed.,LastUpdateTime:2023-03-13 19:56:30 +0000 UTC,LastTransitionTime:2023-03-13 19:56:17 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Mar 13 19:56:31.578: INFO: New ReplicaSet "test-rollover-deployment-6c6df9974f" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-6c6df9974f  deployment-9158  49dd5fc8-9918-4e4c-ba60-414cc770a371 34607 2 2023-03-13 19:56:19 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment a1d5194d-7041-461c-874c-c060618b2b97 0xc0070284e7 0xc0070284e8}] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:56:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a1d5194d-7041-461c-874c-c060618b2b97\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:56:30 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 6c6df9974f,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc007028598 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Mar 13 19:56:31.579: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Mar 13 19:56:31.579: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-9158  8994eb7b-37c0-4a10-b8df-803485775b1e 34616 2 2023-03-13 19:56:10 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment a1d5194d-7041-461c-874c-c060618b2b97 0xc0070283b7 0xc0070283b8}] [] [{e2e.test Update apps/v1 2023-03-13 19:56:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:56:30 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a1d5194d-7041-461c-874c-c060618b2b97\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:56:30 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc007028478 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Mar 13 19:56:31.579: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-768dcbc65b  deployment-9158  f33ef52f-390e-40b7-b413-e358fb6e9609 34556 2 2023-03-13 19:56:17 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment a1d5194d-7041-461c-874c-c060618b2b97 0xc007028607 0xc007028608}] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:56:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a1d5194d-7041-461c-874c-c060618b2b97\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:56:19 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 768dcbc65b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[] [] [] []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0070286c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Mar 13 19:56:31.582: INFO: Pod "test-rollover-deployment-6c6df9974f-qhj84" is available:
&Pod{ObjectMeta:{test-rollover-deployment-6c6df9974f-qhj84 test-rollover-deployment-6c6df9974f- deployment-9158  ede57918-3764-4aa0-b262-43d34f196e5b 34575 0 2023-03-13 19:56:19 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[cni.projectcalico.org/containerID:c81303b1401f0f726ad897596fed7637bb6c9ec4fae3bfd5b41e1a64cf0a3b76 cni.projectcalico.org/podIP:10.244.181.190/32 cni.projectcalico.org/podIPs:10.244.181.190/32,2001:db8:42:1f:e556:e398:18f3:c27c/128] [{apps/v1 ReplicaSet test-rollover-deployment-6c6df9974f 49dd5fc8-9918-4e4c-ba60-414cc770a371 0xc003a24977 0xc003a24978}] [] [{kube-controller-manager Update v1 2023-03-13 19:56:19 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"49dd5fc8-9918-4e4c-ba60-414cc770a371\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:56:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:56:20 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.190\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c27c\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xbkns,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xbkns,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:56:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:56:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:56:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:56:19 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.190,StartTime:2023-03-13 19:56:19 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:56:20 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://d5d0b88573c2aca6522355c4ed9bf212aede96046de54f2818cfd747964b5aab,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.190,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c27c,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar 13 19:56:31.583: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-9158" for this suite. 03/13/23 19:56:31.586
------------------------------
â€¢ [SLOW TEST] [21.125 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:56:10.464
    Mar 13 19:56:10.464: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename deployment 03/13/23 19:56:10.465
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:10.485
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:10.489
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should support rollover [Conformance]
      test/e2e/apps/deployment.go:132
    Mar 13 19:56:10.505: INFO: Pod name rollover-pod: Found 0 pods out of 1
    Mar 13 19:56:15.509: INFO: Pod name rollover-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 03/13/23 19:56:15.509
    Mar 13 19:56:15.509: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
    Mar 13 19:56:17.512: INFO: Creating deployment "test-rollover-deployment"
    Mar 13 19:56:17.519: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
    Mar 13 19:56:19.526: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
    Mar 13 19:56:19.532: INFO: Ensure that both replica sets have 1 created replica
    Mar 13 19:56:19.536: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
    Mar 13 19:56:19.543: INFO: Updating deployment test-rollover-deployment
    Mar 13 19:56:19.543: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
    Mar 13 19:56:21.550: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
    Mar 13 19:56:21.557: INFO: Make sure deployment "test-rollover-deployment" is complete
    Mar 13 19:56:21.562: INFO: all replica sets need to contain the pod-template-hash label
    Mar 13 19:56:21.562: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:56:23.569: INFO: all replica sets need to contain the pod-template-hash label
    Mar 13 19:56:23.569: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:56:25.568: INFO: all replica sets need to contain the pod-template-hash label
    Mar 13 19:56:25.568: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:56:27.569: INFO: all replica sets need to contain the pod-template-hash label
    Mar 13 19:56:27.569: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:56:29.568: INFO: all replica sets need to contain the pod-template-hash label
    Mar 13 19:56:29.568: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 56, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 56, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar 13 19:56:31.568: INFO: 
    Mar 13 19:56:31.569: INFO: Ensure that both old replica sets have no replicas
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar 13 19:56:31.576: INFO: Deployment "test-rollover-deployment":
    &Deployment{ObjectMeta:{test-rollover-deployment  deployment-9158  a1d5194d-7041-461c-874c-c060618b2b97 34617 2 2023-03-13 19:56:17 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-03-13 19:56:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:56:30 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc007028008 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-13 19:56:17 +0000 UTC,LastTransitionTime:2023-03-13 19:56:17 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-6c6df9974f" has successfully progressed.,LastUpdateTime:2023-03-13 19:56:30 +0000 UTC,LastTransitionTime:2023-03-13 19:56:17 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Mar 13 19:56:31.578: INFO: New ReplicaSet "test-rollover-deployment-6c6df9974f" of Deployment "test-rollover-deployment":
    &ReplicaSet{ObjectMeta:{test-rollover-deployment-6c6df9974f  deployment-9158  49dd5fc8-9918-4e4c-ba60-414cc770a371 34607 2 2023-03-13 19:56:19 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment a1d5194d-7041-461c-874c-c060618b2b97 0xc0070284e7 0xc0070284e8}] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:56:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a1d5194d-7041-461c-874c-c060618b2b97\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:56:30 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 6c6df9974f,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc007028598 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Mar 13 19:56:31.579: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
    Mar 13 19:56:31.579: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-9158  8994eb7b-37c0-4a10-b8df-803485775b1e 34616 2 2023-03-13 19:56:10 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment a1d5194d-7041-461c-874c-c060618b2b97 0xc0070283b7 0xc0070283b8}] [] [{e2e.test Update apps/v1 2023-03-13 19:56:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:56:30 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a1d5194d-7041-461c-874c-c060618b2b97\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:56:30 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc007028478 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Mar 13 19:56:31.579: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-768dcbc65b  deployment-9158  f33ef52f-390e-40b7-b413-e358fb6e9609 34556 2 2023-03-13 19:56:17 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment a1d5194d-7041-461c-874c-c060618b2b97 0xc007028607 0xc007028608}] [] [{kube-controller-manager Update apps/v1 2023-03-13 19:56:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a1d5194d-7041-461c-874c-c060618b2b97\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 19:56:19 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 768dcbc65b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[] [] [] []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0070286c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Mar 13 19:56:31.582: INFO: Pod "test-rollover-deployment-6c6df9974f-qhj84" is available:
    &Pod{ObjectMeta:{test-rollover-deployment-6c6df9974f-qhj84 test-rollover-deployment-6c6df9974f- deployment-9158  ede57918-3764-4aa0-b262-43d34f196e5b 34575 0 2023-03-13 19:56:19 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[cni.projectcalico.org/containerID:c81303b1401f0f726ad897596fed7637bb6c9ec4fae3bfd5b41e1a64cf0a3b76 cni.projectcalico.org/podIP:10.244.181.190/32 cni.projectcalico.org/podIPs:10.244.181.190/32,2001:db8:42:1f:e556:e398:18f3:c27c/128] [{apps/v1 ReplicaSet test-rollover-deployment-6c6df9974f 49dd5fc8-9918-4e4c-ba60-414cc770a371 0xc003a24977 0xc003a24978}] [] [{kube-controller-manager Update v1 2023-03-13 19:56:19 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"49dd5fc8-9918-4e4c-ba60-414cc770a371\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2023-03-13 19:56:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-13 19:56:20 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.181.190\"}":{".":{},"f:ip":{}},"k:{\"ip\":\"2001:db8:42:1f:e556:e398:18f3:c27c\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xbkns,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xbkns,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:56:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:56:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:56:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 19:56:19 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:10.244.181.190,StartTime:2023-03-13 19:56:19 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-13 19:56:20 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://d5d0b88573c2aca6522355c4ed9bf212aede96046de54f2818cfd747964b5aab,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.181.190,},PodIP{IP:2001:db8:42:1f:e556:e398:18f3:c27c,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:56:31.583: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-9158" for this suite. 03/13/23 19:56:31.586
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:216
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:56:31.59
Mar 13 19:56:31.590: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-runtime 03/13/23 19:56:31.592
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:31.6
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:31.603
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:216
STEP: create the container 03/13/23 19:56:31.606
STEP: wait for the container to reach Failed 03/13/23 19:56:31.611
STEP: get the container status 03/13/23 19:56:34.625
STEP: the container should be terminated 03/13/23 19:56:34.628
STEP: the termination message should be set 03/13/23 19:56:34.628
Mar 13 19:56:34.628: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container 03/13/23 19:56:34.628
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Mar 13 19:56:34.642: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-7643" for this suite. 03/13/23 19:56:34.646
------------------------------
â€¢ [3.060 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:216

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:56:31.59
    Mar 13 19:56:31.590: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-runtime 03/13/23 19:56:31.592
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:31.6
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:31.603
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:216
    STEP: create the container 03/13/23 19:56:31.606
    STEP: wait for the container to reach Failed 03/13/23 19:56:31.611
    STEP: get the container status 03/13/23 19:56:34.625
    STEP: the container should be terminated 03/13/23 19:56:34.628
    STEP: the termination message should be set 03/13/23 19:56:34.628
    Mar 13 19:56:34.628: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
    STEP: delete the container 03/13/23 19:56:34.628
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:56:34.642: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-7643" for this suite. 03/13/23 19:56:34.646
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:56:34.658
Mar 13 19:56:34.658: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename deployment 03/13/23 19:56:34.66
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:34.671
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:34.674
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185
STEP: creating a Deployment 03/13/23 19:56:34.68
STEP: waiting for Deployment to be created 03/13/23 19:56:34.685
STEP: waiting for all Replicas to be Ready 03/13/23 19:56:34.687
Mar 13 19:56:34.688: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar 13 19:56:34.688: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar 13 19:56:34.692: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar 13 19:56:34.692: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar 13 19:56:34.706: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar 13 19:56:34.706: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar 13 19:56:34.714: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar 13 19:56:34.714: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar 13 19:56:35.788: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Mar 13 19:56:35.788: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Mar 13 19:56:35.963: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment 03/13/23 19:56:35.963
W0313 19:56:35.968520      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Mar 13 19:56:35.970: INFO: observed event type ADDED
STEP: waiting for Replicas to scale 03/13/23 19:56:35.97
Mar 13 19:56:35.971: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
Mar 13 19:56:35.971: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
Mar 13 19:56:35.971: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
Mar 13 19:56:35.971: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
Mar 13 19:56:35.971: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
Mar 13 19:56:35.971: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
Mar 13 19:56:35.976: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
Mar 13 19:56:35.976: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
Mar 13 19:56:35.988: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
Mar 13 19:56:35.988: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
Mar 13 19:56:35.996: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
Mar 13 19:56:35.996: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
Mar 13 19:56:36.010: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
Mar 13 19:56:36.010: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
Mar 13 19:56:37.825: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
Mar 13 19:56:37.825: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
Mar 13 19:56:37.844: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
STEP: listing Deployments 03/13/23 19:56:37.844
Mar 13 19:56:37.848: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment 03/13/23 19:56:37.848
Mar 13 19:56:37.884: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
STEP: fetching the DeploymentStatus 03/13/23 19:56:37.884
Mar 13 19:56:37.892: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Mar 13 19:56:37.892: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Mar 13 19:56:37.913: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Mar 13 19:56:37.931: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Mar 13 19:56:37.931: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Mar 13 19:56:38.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Mar 13 19:56:39.849: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
Mar 13 19:56:39.864: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Mar 13 19:56:39.877: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Mar 13 19:56:40.998: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus 03/13/23 19:56:41.027
STEP: fetching the DeploymentStatus 03/13/23 19:56:41.053
Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 3
Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 3
STEP: deleting the Deployment 03/13/23 19:56:41.079
Mar 13 19:56:41.087: INFO: observed event type MODIFIED
Mar 13 19:56:41.087: INFO: observed event type MODIFIED
Mar 13 19:56:41.087: INFO: observed event type MODIFIED
Mar 13 19:56:41.087: INFO: observed event type MODIFIED
Mar 13 19:56:41.087: INFO: observed event type MODIFIED
Mar 13 19:56:41.087: INFO: observed event type MODIFIED
Mar 13 19:56:41.087: INFO: observed event type MODIFIED
Mar 13 19:56:41.087: INFO: observed event type MODIFIED
Mar 13 19:56:41.087: INFO: observed event type MODIFIED
Mar 13 19:56:41.087: INFO: observed event type MODIFIED
Mar 13 19:56:41.087: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar 13 19:56:41.095: INFO: Log out all the ReplicaSets if there is no deployment created
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar 13 19:56:41.098: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-1282" for this suite. 03/13/23 19:56:41.103
------------------------------
â€¢ [SLOW TEST] [6.457 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:56:34.658
    Mar 13 19:56:34.658: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename deployment 03/13/23 19:56:34.66
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:34.671
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:34.674
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] should run the lifecycle of a Deployment [Conformance]
      test/e2e/apps/deployment.go:185
    STEP: creating a Deployment 03/13/23 19:56:34.68
    STEP: waiting for Deployment to be created 03/13/23 19:56:34.685
    STEP: waiting for all Replicas to be Ready 03/13/23 19:56:34.687
    Mar 13 19:56:34.688: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar 13 19:56:34.688: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar 13 19:56:34.692: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar 13 19:56:34.692: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar 13 19:56:34.706: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar 13 19:56:34.706: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar 13 19:56:34.714: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar 13 19:56:34.714: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar 13 19:56:35.788: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment-static:true]
    Mar 13 19:56:35.788: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment-static:true]
    Mar 13 19:56:35.963: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2 and labels map[test-deployment-static:true]
    STEP: patching the Deployment 03/13/23 19:56:35.963
    W0313 19:56:35.968520      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Mar 13 19:56:35.970: INFO: observed event type ADDED
    STEP: waiting for Replicas to scale 03/13/23 19:56:35.97
    Mar 13 19:56:35.971: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
    Mar 13 19:56:35.971: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
    Mar 13 19:56:35.971: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
    Mar 13 19:56:35.971: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
    Mar 13 19:56:35.971: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
    Mar 13 19:56:35.971: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
    Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
    Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 0
    Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
    Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
    Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
    Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
    Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
    Mar 13 19:56:35.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
    Mar 13 19:56:35.976: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
    Mar 13 19:56:35.976: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
    Mar 13 19:56:35.988: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
    Mar 13 19:56:35.988: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
    Mar 13 19:56:35.996: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
    Mar 13 19:56:35.996: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
    Mar 13 19:56:36.010: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
    Mar 13 19:56:36.010: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
    Mar 13 19:56:37.825: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
    Mar 13 19:56:37.825: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
    Mar 13 19:56:37.844: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
    STEP: listing Deployments 03/13/23 19:56:37.844
    Mar 13 19:56:37.848: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
    STEP: updating the Deployment 03/13/23 19:56:37.848
    Mar 13 19:56:37.884: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
    STEP: fetching the DeploymentStatus 03/13/23 19:56:37.884
    Mar 13 19:56:37.892: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Mar 13 19:56:37.892: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Mar 13 19:56:37.913: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Mar 13 19:56:37.931: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Mar 13 19:56:37.931: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Mar 13 19:56:38.972: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Mar 13 19:56:39.849: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
    Mar 13 19:56:39.864: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Mar 13 19:56:39.877: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Mar 13 19:56:40.998: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
    STEP: patching the DeploymentStatus 03/13/23 19:56:41.027
    STEP: fetching the DeploymentStatus 03/13/23 19:56:41.053
    Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
    Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
    Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
    Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
    Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 1
    Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
    Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 3
    Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
    Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 2
    Mar 13 19:56:41.079: INFO: observed Deployment test-deployment in namespace deployment-1282 with ReadyReplicas 3
    STEP: deleting the Deployment 03/13/23 19:56:41.079
    Mar 13 19:56:41.087: INFO: observed event type MODIFIED
    Mar 13 19:56:41.087: INFO: observed event type MODIFIED
    Mar 13 19:56:41.087: INFO: observed event type MODIFIED
    Mar 13 19:56:41.087: INFO: observed event type MODIFIED
    Mar 13 19:56:41.087: INFO: observed event type MODIFIED
    Mar 13 19:56:41.087: INFO: observed event type MODIFIED
    Mar 13 19:56:41.087: INFO: observed event type MODIFIED
    Mar 13 19:56:41.087: INFO: observed event type MODIFIED
    Mar 13 19:56:41.087: INFO: observed event type MODIFIED
    Mar 13 19:56:41.087: INFO: observed event type MODIFIED
    Mar 13 19:56:41.087: INFO: observed event type MODIFIED
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar 13 19:56:41.095: INFO: Log out all the ReplicaSets if there is no deployment created
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:56:41.098: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-1282" for this suite. 03/13/23 19:56:41.103
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with secret pod [Conformance]
  test/e2e/storage/subpath.go:60
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:56:41.117
Mar 13 19:56:41.117: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename subpath 03/13/23 19:56:41.118
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:41.139
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:41.152
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 03/13/23 19:56:41.161
[It] should support subpaths with secret pod [Conformance]
  test/e2e/storage/subpath.go:60
STEP: Creating pod pod-subpath-test-secret-lpds 03/13/23 19:56:41.17
STEP: Creating a pod to test atomic-volume-subpath 03/13/23 19:56:41.17
Mar 13 19:56:41.181: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-lpds" in namespace "subpath-9917" to be "Succeeded or Failed"
Mar 13 19:56:41.185: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Pending", Reason="", readiness=false. Elapsed: 3.772414ms
Mar 13 19:56:43.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 2.007854624s
Mar 13 19:56:45.190: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 4.008517795s
Mar 13 19:56:47.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 6.007682306s
Mar 13 19:56:49.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 8.008158909s
Mar 13 19:56:51.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 10.007554246s
Mar 13 19:56:53.190: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 12.008644579s
Mar 13 19:56:55.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 14.008200388s
Mar 13 19:56:57.190: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 16.008719409s
Mar 13 19:56:59.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 18.007712401s
Mar 13 19:57:01.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 20.007796105s
Mar 13 19:57:03.193: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=false. Elapsed: 22.011640196s
Mar 13 19:57:05.192: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.010258085s
STEP: Saw pod success 03/13/23 19:57:05.192
Mar 13 19:57:05.192: INFO: Pod "pod-subpath-test-secret-lpds" satisfied condition "Succeeded or Failed"
Mar 13 19:57:05.197: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-subpath-test-secret-lpds container test-container-subpath-secret-lpds: <nil>
STEP: delete the pod 03/13/23 19:57:05.22
Mar 13 19:57:05.237: INFO: Waiting for pod pod-subpath-test-secret-lpds to disappear
Mar 13 19:57:05.242: INFO: Pod pod-subpath-test-secret-lpds no longer exists
STEP: Deleting pod pod-subpath-test-secret-lpds 03/13/23 19:57:05.242
Mar 13 19:57:05.242: INFO: Deleting pod "pod-subpath-test-secret-lpds" in namespace "subpath-9917"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Mar 13 19:57:05.249: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-9917" for this suite. 03/13/23 19:57:05.265
------------------------------
â€¢ [SLOW TEST] [24.170 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/storage/subpath.go:60

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:56:41.117
    Mar 13 19:56:41.117: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename subpath 03/13/23 19:56:41.118
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:56:41.139
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:56:41.152
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 03/13/23 19:56:41.161
    [It] should support subpaths with secret pod [Conformance]
      test/e2e/storage/subpath.go:60
    STEP: Creating pod pod-subpath-test-secret-lpds 03/13/23 19:56:41.17
    STEP: Creating a pod to test atomic-volume-subpath 03/13/23 19:56:41.17
    Mar 13 19:56:41.181: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-lpds" in namespace "subpath-9917" to be "Succeeded or Failed"
    Mar 13 19:56:41.185: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Pending", Reason="", readiness=false. Elapsed: 3.772414ms
    Mar 13 19:56:43.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 2.007854624s
    Mar 13 19:56:45.190: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 4.008517795s
    Mar 13 19:56:47.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 6.007682306s
    Mar 13 19:56:49.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 8.008158909s
    Mar 13 19:56:51.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 10.007554246s
    Mar 13 19:56:53.190: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 12.008644579s
    Mar 13 19:56:55.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 14.008200388s
    Mar 13 19:56:57.190: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 16.008719409s
    Mar 13 19:56:59.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 18.007712401s
    Mar 13 19:57:01.189: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=true. Elapsed: 20.007796105s
    Mar 13 19:57:03.193: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Running", Reason="", readiness=false. Elapsed: 22.011640196s
    Mar 13 19:57:05.192: INFO: Pod "pod-subpath-test-secret-lpds": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.010258085s
    STEP: Saw pod success 03/13/23 19:57:05.192
    Mar 13 19:57:05.192: INFO: Pod "pod-subpath-test-secret-lpds" satisfied condition "Succeeded or Failed"
    Mar 13 19:57:05.197: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-subpath-test-secret-lpds container test-container-subpath-secret-lpds: <nil>
    STEP: delete the pod 03/13/23 19:57:05.22
    Mar 13 19:57:05.237: INFO: Waiting for pod pod-subpath-test-secret-lpds to disappear
    Mar 13 19:57:05.242: INFO: Pod pod-subpath-test-secret-lpds no longer exists
    STEP: Deleting pod pod-subpath-test-secret-lpds 03/13/23 19:57:05.242
    Mar 13 19:57:05.242: INFO: Deleting pod "pod-subpath-test-secret-lpds" in namespace "subpath-9917"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:57:05.249: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-9917" for this suite. 03/13/23 19:57:05.265
  << End Captured GinkgoWriter Output
------------------------------
[sig-instrumentation] Events
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175
[BeforeEach] [sig-instrumentation] Events
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:57:05.29
Mar 13 19:57:05.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename events 03/13/23 19:57:05.292
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:05.37
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:05.382
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175
STEP: Create set of events 03/13/23 19:57:05.387
Mar 13 19:57:05.398: INFO: created test-event-1
Mar 13 19:57:05.403: INFO: created test-event-2
Mar 13 19:57:05.413: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace 03/13/23 19:57:05.413
STEP: delete collection of events 03/13/23 19:57:05.419
Mar 13 19:57:05.419: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity 03/13/23 19:57:05.449
Mar 13 19:57:05.450: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/node/init/init.go:32
Mar 13 19:57:05.455: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events
  tear down framework | framework.go:193
STEP: Destroying namespace "events-5800" for this suite. 03/13/23 19:57:05.463
------------------------------
â€¢ [0.183 seconds]
[sig-instrumentation] Events
test/e2e/instrumentation/common/framework.go:23
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:57:05.29
    Mar 13 19:57:05.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename events 03/13/23 19:57:05.292
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:05.37
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:05.382
    [BeforeEach] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a collection of events [Conformance]
      test/e2e/instrumentation/core_events.go:175
    STEP: Create set of events 03/13/23 19:57:05.387
    Mar 13 19:57:05.398: INFO: created test-event-1
    Mar 13 19:57:05.403: INFO: created test-event-2
    Mar 13 19:57:05.413: INFO: created test-event-3
    STEP: get a list of Events with a label in the current namespace 03/13/23 19:57:05.413
    STEP: delete collection of events 03/13/23 19:57:05.419
    Mar 13 19:57:05.419: INFO: requesting DeleteCollection of events
    STEP: check that the list of events matches the requested quantity 03/13/23 19:57:05.449
    Mar 13 19:57:05.450: INFO: requesting list of events to confirm quantity
    [AfterEach] [sig-instrumentation] Events
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:57:05.455: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-5800" for this suite. 03/13/23 19:57:05.463
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:57:05.476
Mar 13 19:57:05.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename replication-controller 03/13/23 19:57:05.477
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:05.51
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:05.515
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110
STEP: creating a ReplicationController 03/13/23 19:57:05.532
STEP: waiting for RC to be added 03/13/23 19:57:05.562
STEP: waiting for available Replicas 03/13/23 19:57:05.562
STEP: patching ReplicationController 03/13/23 19:57:06.979
STEP: waiting for RC to be modified 03/13/23 19:57:06.995
STEP: patching ReplicationController status 03/13/23 19:57:06.996
STEP: waiting for RC to be modified 03/13/23 19:57:07.007
STEP: waiting for available Replicas 03/13/23 19:57:07.008
STEP: fetching ReplicationController status 03/13/23 19:57:07.023
STEP: patching ReplicationController scale 03/13/23 19:57:07.037
STEP: waiting for RC to be modified 03/13/23 19:57:07.048
STEP: waiting for ReplicationController's scale to be the max amount 03/13/23 19:57:07.048
STEP: fetching ReplicationController; ensuring that it's patched 03/13/23 19:57:08.073
STEP: updating ReplicationController status 03/13/23 19:57:08.078
STEP: waiting for RC to be modified 03/13/23 19:57:08.087
STEP: listing all ReplicationControllers 03/13/23 19:57:08.088
STEP: checking that ReplicationController has expected values 03/13/23 19:57:08.098
STEP: deleting ReplicationControllers by collection 03/13/23 19:57:08.099
STEP: waiting for ReplicationController to have a DELETED watchEvent 03/13/23 19:57:08.116
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Mar 13 19:57:08.215: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-8318" for this suite. 03/13/23 19:57:08.22
------------------------------
â€¢ [2.752 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:57:05.476
    Mar 13 19:57:05.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename replication-controller 03/13/23 19:57:05.477
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:05.51
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:05.515
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should test the lifecycle of a ReplicationController [Conformance]
      test/e2e/apps/rc.go:110
    STEP: creating a ReplicationController 03/13/23 19:57:05.532
    STEP: waiting for RC to be added 03/13/23 19:57:05.562
    STEP: waiting for available Replicas 03/13/23 19:57:05.562
    STEP: patching ReplicationController 03/13/23 19:57:06.979
    STEP: waiting for RC to be modified 03/13/23 19:57:06.995
    STEP: patching ReplicationController status 03/13/23 19:57:06.996
    STEP: waiting for RC to be modified 03/13/23 19:57:07.007
    STEP: waiting for available Replicas 03/13/23 19:57:07.008
    STEP: fetching ReplicationController status 03/13/23 19:57:07.023
    STEP: patching ReplicationController scale 03/13/23 19:57:07.037
    STEP: waiting for RC to be modified 03/13/23 19:57:07.048
    STEP: waiting for ReplicationController's scale to be the max amount 03/13/23 19:57:07.048
    STEP: fetching ReplicationController; ensuring that it's patched 03/13/23 19:57:08.073
    STEP: updating ReplicationController status 03/13/23 19:57:08.078
    STEP: waiting for RC to be modified 03/13/23 19:57:08.087
    STEP: listing all ReplicationControllers 03/13/23 19:57:08.088
    STEP: checking that ReplicationController has expected values 03/13/23 19:57:08.098
    STEP: deleting ReplicationControllers by collection 03/13/23 19:57:08.099
    STEP: waiting for ReplicationController to have a DELETED watchEvent 03/13/23 19:57:08.116
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:57:08.215: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-8318" for this suite. 03/13/23 19:57:08.22
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:57:08.242
Mar 13 19:57:08.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename containers 03/13/23 19:57:08.243
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:08.271
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:08.276
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87
STEP: Creating a pod to test override all 03/13/23 19:57:08.28
Mar 13 19:57:08.301: INFO: Waiting up to 5m0s for pod "client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf" in namespace "containers-6136" to be "Succeeded or Failed"
Mar 13 19:57:08.322: INFO: Pod "client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf": Phase="Pending", Reason="", readiness=false. Elapsed: 21.745323ms
Mar 13 19:57:10.326: INFO: Pod "client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025592341s
Mar 13 19:57:12.329: INFO: Pod "client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028610923s
STEP: Saw pod success 03/13/23 19:57:12.329
Mar 13 19:57:12.329: INFO: Pod "client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf" satisfied condition "Succeeded or Failed"
Mar 13 19:57:12.337: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf container agnhost-container: <nil>
STEP: delete the pod 03/13/23 19:57:12.36
Mar 13 19:57:12.379: INFO: Waiting for pod client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf to disappear
Mar 13 19:57:12.383: INFO: Pod client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Mar 13 19:57:12.383: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-6136" for this suite. 03/13/23 19:57:12.392
------------------------------
â€¢ [4.158 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:57:08.242
    Mar 13 19:57:08.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename containers 03/13/23 19:57:08.243
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:08.271
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:08.276
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:87
    STEP: Creating a pod to test override all 03/13/23 19:57:08.28
    Mar 13 19:57:08.301: INFO: Waiting up to 5m0s for pod "client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf" in namespace "containers-6136" to be "Succeeded or Failed"
    Mar 13 19:57:08.322: INFO: Pod "client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf": Phase="Pending", Reason="", readiness=false. Elapsed: 21.745323ms
    Mar 13 19:57:10.326: INFO: Pod "client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025592341s
    Mar 13 19:57:12.329: INFO: Pod "client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028610923s
    STEP: Saw pod success 03/13/23 19:57:12.329
    Mar 13 19:57:12.329: INFO: Pod "client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf" satisfied condition "Succeeded or Failed"
    Mar 13 19:57:12.337: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 19:57:12.36
    Mar 13 19:57:12.379: INFO: Waiting for pod client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf to disappear
    Mar 13 19:57:12.383: INFO: Pod client-containers-dfd2d5c3-46e9-4365-833a-ee0d744e7eaf no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:57:12.383: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-6136" for this suite. 03/13/23 19:57:12.392
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:57:12.402
Mar 13 19:57:12.402: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename secrets 03/13/23 19:57:12.403
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:12.439
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:12.444
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57
STEP: Creating secret with name secret-test-7011a4df-b2bf-4134-966b-40bc9389c80e 03/13/23 19:57:12.45
STEP: Creating a pod to test consume secrets 03/13/23 19:57:12.458
Mar 13 19:57:12.471: INFO: Waiting up to 5m0s for pod "pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315" in namespace "secrets-4262" to be "Succeeded or Failed"
Mar 13 19:57:12.484: INFO: Pod "pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315": Phase="Pending", Reason="", readiness=false. Elapsed: 12.914172ms
Mar 13 19:57:14.489: INFO: Pod "pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017601527s
Mar 13 19:57:16.488: INFO: Pod "pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016814209s
STEP: Saw pod success 03/13/23 19:57:16.488
Mar 13 19:57:16.488: INFO: Pod "pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315" satisfied condition "Succeeded or Failed"
Mar 13 19:57:16.491: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315 container secret-volume-test: <nil>
STEP: delete the pod 03/13/23 19:57:16.499
Mar 13 19:57:16.508: INFO: Waiting for pod pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315 to disappear
Mar 13 19:57:16.513: INFO: Pod pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar 13 19:57:16.513: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4262" for this suite. 03/13/23 19:57:16.517
------------------------------
â€¢ [4.121 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:57:12.402
    Mar 13 19:57:12.402: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename secrets 03/13/23 19:57:12.403
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:12.439
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:12.444
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:57
    STEP: Creating secret with name secret-test-7011a4df-b2bf-4134-966b-40bc9389c80e 03/13/23 19:57:12.45
    STEP: Creating a pod to test consume secrets 03/13/23 19:57:12.458
    Mar 13 19:57:12.471: INFO: Waiting up to 5m0s for pod "pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315" in namespace "secrets-4262" to be "Succeeded or Failed"
    Mar 13 19:57:12.484: INFO: Pod "pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315": Phase="Pending", Reason="", readiness=false. Elapsed: 12.914172ms
    Mar 13 19:57:14.489: INFO: Pod "pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017601527s
    Mar 13 19:57:16.488: INFO: Pod "pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016814209s
    STEP: Saw pod success 03/13/23 19:57:16.488
    Mar 13 19:57:16.488: INFO: Pod "pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315" satisfied condition "Succeeded or Failed"
    Mar 13 19:57:16.491: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315 container secret-volume-test: <nil>
    STEP: delete the pod 03/13/23 19:57:16.499
    Mar 13 19:57:16.508: INFO: Waiting for pod pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315 to disappear
    Mar 13 19:57:16.513: INFO: Pod pod-secrets-02ef9c62-3281-44be-827d-e7cb597ad315 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:57:16.513: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4262" for this suite. 03/13/23 19:57:16.517
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/network/proxy.go:380
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:57:16.526
Mar 13 19:57:16.526: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename proxy 03/13/23 19:57:16.527
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:16.536
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:16.539
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/network/proxy.go:380
Mar 13 19:57:16.543: INFO: Creating pod...
Mar 13 19:57:16.549: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-2527" to be "running"
Mar 13 19:57:16.551: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 2.314385ms
Mar 13 19:57:18.556: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.007096925s
Mar 13 19:57:18.556: INFO: Pod "agnhost" satisfied condition "running"
Mar 13 19:57:18.556: INFO: Creating service...
Mar 13 19:57:18.566: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=DELETE
Mar 13 19:57:18.583: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Mar 13 19:57:18.583: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=OPTIONS
Mar 13 19:57:18.588: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Mar 13 19:57:18.588: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=PATCH
Mar 13 19:57:18.593: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Mar 13 19:57:18.593: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=POST
Mar 13 19:57:18.598: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Mar 13 19:57:18.598: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=PUT
Mar 13 19:57:18.603: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Mar 13 19:57:18.603: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=DELETE
Mar 13 19:57:18.608: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Mar 13 19:57:18.608: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=OPTIONS
Mar 13 19:57:18.615: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Mar 13 19:57:18.615: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=PATCH
Mar 13 19:57:18.622: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Mar 13 19:57:18.622: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=POST
Mar 13 19:57:18.627: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Mar 13 19:57:18.628: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=PUT
Mar 13 19:57:18.633: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Mar 13 19:57:18.633: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=GET
Mar 13 19:57:18.636: INFO: http.Client request:GET StatusCode:301
Mar 13 19:57:18.636: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=GET
Mar 13 19:57:18.639: INFO: http.Client request:GET StatusCode:301
Mar 13 19:57:18.639: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=HEAD
Mar 13 19:57:18.642: INFO: http.Client request:HEAD StatusCode:301
Mar 13 19:57:18.642: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=HEAD
Mar 13 19:57:18.645: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Mar 13 19:57:18.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-2527" for this suite. 03/13/23 19:57:18.649
------------------------------
â€¢ [2.128 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    A set of valid responses are returned for both pod and service Proxy [Conformance]
    test/e2e/network/proxy.go:380

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:57:16.526
    Mar 13 19:57:16.526: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename proxy 03/13/23 19:57:16.527
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:16.536
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:16.539
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] A set of valid responses are returned for both pod and service Proxy [Conformance]
      test/e2e/network/proxy.go:380
    Mar 13 19:57:16.543: INFO: Creating pod...
    Mar 13 19:57:16.549: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-2527" to be "running"
    Mar 13 19:57:16.551: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 2.314385ms
    Mar 13 19:57:18.556: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.007096925s
    Mar 13 19:57:18.556: INFO: Pod "agnhost" satisfied condition "running"
    Mar 13 19:57:18.556: INFO: Creating service...
    Mar 13 19:57:18.566: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=DELETE
    Mar 13 19:57:18.583: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Mar 13 19:57:18.583: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=OPTIONS
    Mar 13 19:57:18.588: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Mar 13 19:57:18.588: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=PATCH
    Mar 13 19:57:18.593: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Mar 13 19:57:18.593: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=POST
    Mar 13 19:57:18.598: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Mar 13 19:57:18.598: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=PUT
    Mar 13 19:57:18.603: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Mar 13 19:57:18.603: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=DELETE
    Mar 13 19:57:18.608: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Mar 13 19:57:18.608: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=OPTIONS
    Mar 13 19:57:18.615: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Mar 13 19:57:18.615: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=PATCH
    Mar 13 19:57:18.622: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Mar 13 19:57:18.622: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=POST
    Mar 13 19:57:18.627: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Mar 13 19:57:18.628: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=PUT
    Mar 13 19:57:18.633: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Mar 13 19:57:18.633: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=GET
    Mar 13 19:57:18.636: INFO: http.Client request:GET StatusCode:301
    Mar 13 19:57:18.636: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=GET
    Mar 13 19:57:18.639: INFO: http.Client request:GET StatusCode:301
    Mar 13 19:57:18.639: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy?method=HEAD
    Mar 13 19:57:18.642: INFO: http.Client request:HEAD StatusCode:301
    Mar 13 19:57:18.642: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2527/services/e2e-proxy-test-service/proxy?method=HEAD
    Mar 13 19:57:18.645: INFO: http.Client request:HEAD StatusCode:301
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:57:18.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-2527" for this suite. 03/13/23 19:57:18.649
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:57:18.659
Mar 13 19:57:18.660: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename endpointslice 03/13/23 19:57:18.66
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:18.672
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:18.675
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205
STEP: referencing a single matching pod 03/13/23 19:57:23.786
STEP: referencing matching pods with named port 03/13/23 19:57:28.82
STEP: creating empty Endpoints and EndpointSlices for no matching Pods 03/13/23 19:57:33.827
STEP: recreating EndpointSlices after they've been deleted 03/13/23 19:57:38.835
Mar 13 19:57:38.849: INFO: EndpointSlice for Service endpointslice-9715/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Mar 13 19:57:48.857: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-9715" for this suite. 03/13/23 19:57:48.86
------------------------------
â€¢ [SLOW TEST] [30.206 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:57:18.659
    Mar 13 19:57:18.660: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename endpointslice 03/13/23 19:57:18.66
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:18.672
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:18.675
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
      test/e2e/network/endpointslice.go:205
    STEP: referencing a single matching pod 03/13/23 19:57:23.786
    STEP: referencing matching pods with named port 03/13/23 19:57:28.82
    STEP: creating empty Endpoints and EndpointSlices for no matching Pods 03/13/23 19:57:33.827
    STEP: recreating EndpointSlices after they've been deleted 03/13/23 19:57:38.835
    Mar 13 19:57:38.849: INFO: EndpointSlice for Service endpointslice-9715/example-named-port not found
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:57:48.857: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-9715" for this suite. 03/13/23 19:57:48.86
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:57:48.867
Mar 13 19:57:48.867: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 19:57:48.869
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:48.88
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:48.886
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 19:57:48.902
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:57:49.425
STEP: Deploying the webhook pod 03/13/23 19:57:49.432
STEP: Wait for the deployment to be ready 03/13/23 19:57:49.451
Mar 13 19:57:49.462: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Mar 13 19:57:51.472: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 57, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 57, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 57, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 57, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 03/13/23 19:57:53.477
STEP: Verifying the service has paired with the endpoint 03/13/23 19:57:53.489
Mar 13 19:57:54.489: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 03/13/23 19:57:54.495
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 03/13/23 19:57:54.536
STEP: Creating a dummy validating-webhook-configuration object 03/13/23 19:57:54.601
STEP: Deleting the validating-webhook-configuration, which should be possible to remove 03/13/23 19:57:54.628
STEP: Creating a dummy mutating-webhook-configuration object 03/13/23 19:57:54.64
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove 03/13/23 19:57:54.661
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 19:57:54.693: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-9440" for this suite. 03/13/23 19:57:54.735
STEP: Destroying namespace "webhook-9440-markers" for this suite. 03/13/23 19:57:54.741
------------------------------
â€¢ [SLOW TEST] [5.889 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:57:48.867
    Mar 13 19:57:48.867: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 19:57:48.869
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:48.88
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:48.886
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 19:57:48.902
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 19:57:49.425
    STEP: Deploying the webhook pod 03/13/23 19:57:49.432
    STEP: Wait for the deployment to be ready 03/13/23 19:57:49.451
    Mar 13 19:57:49.462: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Mar 13 19:57:51.472: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 19, 57, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 57, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 19, 57, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 19, 57, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 03/13/23 19:57:53.477
    STEP: Verifying the service has paired with the endpoint 03/13/23 19:57:53.489
    Mar 13 19:57:54.489: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
      test/e2e/apimachinery/webhook.go:277
    STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 03/13/23 19:57:54.495
    STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 03/13/23 19:57:54.536
    STEP: Creating a dummy validating-webhook-configuration object 03/13/23 19:57:54.601
    STEP: Deleting the validating-webhook-configuration, which should be possible to remove 03/13/23 19:57:54.628
    STEP: Creating a dummy mutating-webhook-configuration object 03/13/23 19:57:54.64
    STEP: Deleting the mutating-webhook-configuration, which should be possible to remove 03/13/23 19:57:54.661
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:57:54.693: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-9440" for this suite. 03/13/23 19:57:54.735
    STEP: Destroying namespace "webhook-9440-markers" for this suite. 03/13/23 19:57:54.741
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:57:54.761
Mar 13 19:57:54.762: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 19:57:54.763
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:54.786
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:54.796
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99
STEP: Creating configMap with name configmap-test-volume-map-1088669c-848a-4634-9206-55ead42668dc 03/13/23 19:57:54.814
STEP: Creating a pod to test consume configMaps 03/13/23 19:57:54.819
Mar 13 19:57:54.827: INFO: Waiting up to 5m0s for pod "pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e" in namespace "configmap-3347" to be "Succeeded or Failed"
Mar 13 19:57:54.840: INFO: Pod "pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e": Phase="Pending", Reason="", readiness=false. Elapsed: 12.410985ms
Mar 13 19:57:56.844: INFO: Pod "pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016903176s
Mar 13 19:57:58.843: INFO: Pod "pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016153835s
STEP: Saw pod success 03/13/23 19:57:58.844
Mar 13 19:57:58.844: INFO: Pod "pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e" satisfied condition "Succeeded or Failed"
Mar 13 19:57:58.847: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e container agnhost-container: <nil>
STEP: delete the pod 03/13/23 19:57:58.854
Mar 13 19:57:58.862: INFO: Waiting for pod pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e to disappear
Mar 13 19:57:58.864: INFO: Pod pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 19:57:58.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-3347" for this suite. 03/13/23 19:57:58.868
------------------------------
â€¢ [4.112 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:57:54.761
    Mar 13 19:57:54.762: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 19:57:54.763
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:54.786
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:54.796
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:99
    STEP: Creating configMap with name configmap-test-volume-map-1088669c-848a-4634-9206-55ead42668dc 03/13/23 19:57:54.814
    STEP: Creating a pod to test consume configMaps 03/13/23 19:57:54.819
    Mar 13 19:57:54.827: INFO: Waiting up to 5m0s for pod "pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e" in namespace "configmap-3347" to be "Succeeded or Failed"
    Mar 13 19:57:54.840: INFO: Pod "pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e": Phase="Pending", Reason="", readiness=false. Elapsed: 12.410985ms
    Mar 13 19:57:56.844: INFO: Pod "pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016903176s
    Mar 13 19:57:58.843: INFO: Pod "pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016153835s
    STEP: Saw pod success 03/13/23 19:57:58.844
    Mar 13 19:57:58.844: INFO: Pod "pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e" satisfied condition "Succeeded or Failed"
    Mar 13 19:57:58.847: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 19:57:58.854
    Mar 13 19:57:58.862: INFO: Waiting for pod pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e to disappear
    Mar 13 19:57:58.864: INFO: Pod pod-configmaps-5662c432-7a09-40d9-9265-1e813b39fb3e no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:57:58.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-3347" for this suite. 03/13/23 19:57:58.868
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:57:58.882
Mar 13 19:57:58.883: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 19:57:58.884
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:58.893
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:58.896
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84
STEP: Creating a pod to test downward API volume plugin 03/13/23 19:57:58.9
Mar 13 19:57:58.907: INFO: Waiting up to 5m0s for pod "downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5" in namespace "downward-api-9495" to be "Succeeded or Failed"
Mar 13 19:57:58.910: INFO: Pod "downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.935795ms
Mar 13 19:58:00.914: INFO: Pod "downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007337866s
Mar 13 19:58:02.916: INFO: Pod "downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008851474s
STEP: Saw pod success 03/13/23 19:58:02.916
Mar 13 19:58:02.916: INFO: Pod "downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5" satisfied condition "Succeeded or Failed"
Mar 13 19:58:02.920: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5 container client-container: <nil>
STEP: delete the pod 03/13/23 19:58:02.933
Mar 13 19:58:02.968: INFO: Waiting for pod downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5 to disappear
Mar 13 19:58:02.972: INFO: Pod downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar 13 19:58:02.972: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-9495" for this suite. 03/13/23 19:58:02.979
------------------------------
â€¢ [4.108 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:57:58.882
    Mar 13 19:57:58.883: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 19:57:58.884
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:57:58.893
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:57:58.896
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:84
    STEP: Creating a pod to test downward API volume plugin 03/13/23 19:57:58.9
    Mar 13 19:57:58.907: INFO: Waiting up to 5m0s for pod "downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5" in namespace "downward-api-9495" to be "Succeeded or Failed"
    Mar 13 19:57:58.910: INFO: Pod "downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.935795ms
    Mar 13 19:58:00.914: INFO: Pod "downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007337866s
    Mar 13 19:58:02.916: INFO: Pod "downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008851474s
    STEP: Saw pod success 03/13/23 19:58:02.916
    Mar 13 19:58:02.916: INFO: Pod "downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5" satisfied condition "Succeeded or Failed"
    Mar 13 19:58:02.920: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5 container client-container: <nil>
    STEP: delete the pod 03/13/23 19:58:02.933
    Mar 13 19:58:02.968: INFO: Waiting for pod downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5 to disappear
    Mar 13 19:58:02.972: INFO: Pod downwardapi-volume-20c31fc0-ec90-4bde-9aa3-904bfc7255c5 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:58:02.972: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-9495" for this suite. 03/13/23 19:58:02.979
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Probing container
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:58:02.992
Mar 13 19:58:02.992: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-probe 03/13/23 19:58:02.993
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:58:03.057
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:58:03.061
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135
STEP: Creating pod busybox-b28d9807-42ad-44b7-8326-010bc2daae8d in namespace container-probe-3472 03/13/23 19:58:03.072
Mar 13 19:58:03.101: INFO: Waiting up to 5m0s for pod "busybox-b28d9807-42ad-44b7-8326-010bc2daae8d" in namespace "container-probe-3472" to be "not pending"
Mar 13 19:58:03.116: INFO: Pod "busybox-b28d9807-42ad-44b7-8326-010bc2daae8d": Phase="Pending", Reason="", readiness=false. Elapsed: 14.25971ms
Mar 13 19:58:05.121: INFO: Pod "busybox-b28d9807-42ad-44b7-8326-010bc2daae8d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0192889s
Mar 13 19:58:07.120: INFO: Pod "busybox-b28d9807-42ad-44b7-8326-010bc2daae8d": Phase="Running", Reason="", readiness=true. Elapsed: 4.018600924s
Mar 13 19:58:07.120: INFO: Pod "busybox-b28d9807-42ad-44b7-8326-010bc2daae8d" satisfied condition "not pending"
Mar 13 19:58:07.120: INFO: Started pod busybox-b28d9807-42ad-44b7-8326-010bc2daae8d in namespace container-probe-3472
STEP: checking the pod's current state and verifying that restartCount is present 03/13/23 19:58:07.12
Mar 13 19:58:07.125: INFO: Initial restart count of pod busybox-b28d9807-42ad-44b7-8326-010bc2daae8d is 0
Mar 13 19:58:55.232: INFO: Restart count of pod container-probe-3472/busybox-b28d9807-42ad-44b7-8326-010bc2daae8d is now 1 (48.107181923s elapsed)
STEP: deleting the pod 03/13/23 19:58:55.232
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar 13 19:58:55.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-3472" for this suite. 03/13/23 19:58:55.244
------------------------------
â€¢ [SLOW TEST] [52.260 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:58:02.992
    Mar 13 19:58:02.992: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-probe 03/13/23 19:58:02.993
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:58:03.057
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:58:03.061
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:135
    STEP: Creating pod busybox-b28d9807-42ad-44b7-8326-010bc2daae8d in namespace container-probe-3472 03/13/23 19:58:03.072
    Mar 13 19:58:03.101: INFO: Waiting up to 5m0s for pod "busybox-b28d9807-42ad-44b7-8326-010bc2daae8d" in namespace "container-probe-3472" to be "not pending"
    Mar 13 19:58:03.116: INFO: Pod "busybox-b28d9807-42ad-44b7-8326-010bc2daae8d": Phase="Pending", Reason="", readiness=false. Elapsed: 14.25971ms
    Mar 13 19:58:05.121: INFO: Pod "busybox-b28d9807-42ad-44b7-8326-010bc2daae8d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0192889s
    Mar 13 19:58:07.120: INFO: Pod "busybox-b28d9807-42ad-44b7-8326-010bc2daae8d": Phase="Running", Reason="", readiness=true. Elapsed: 4.018600924s
    Mar 13 19:58:07.120: INFO: Pod "busybox-b28d9807-42ad-44b7-8326-010bc2daae8d" satisfied condition "not pending"
    Mar 13 19:58:07.120: INFO: Started pod busybox-b28d9807-42ad-44b7-8326-010bc2daae8d in namespace container-probe-3472
    STEP: checking the pod's current state and verifying that restartCount is present 03/13/23 19:58:07.12
    Mar 13 19:58:07.125: INFO: Initial restart count of pod busybox-b28d9807-42ad-44b7-8326-010bc2daae8d is 0
    Mar 13 19:58:55.232: INFO: Restart count of pod container-probe-3472/busybox-b28d9807-42ad-44b7-8326-010bc2daae8d is now 1 (48.107181923s elapsed)
    STEP: deleting the pod 03/13/23 19:58:55.232
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:58:55.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-3472" for this suite. 03/13/23 19:58:55.244
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/kubectl/kubectl.go:1713
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:58:55.253
Mar 13 19:58:55.253: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 19:58:55.254
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:58:55.266
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:58:55.27
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1700
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/kubectl/kubectl.go:1713
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/13/23 19:58:55.275
Mar 13 19:58:55.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8819 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
Mar 13 19:58:55.420: INFO: stderr: ""
Mar 13 19:58:55.420: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created 03/13/23 19:58:55.42
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1704
Mar 13 19:58:55.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8819 delete pods e2e-test-httpd-pod'
Mar 13 19:58:58.262: INFO: stderr: ""
Mar 13 19:58:58.262: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 19:58:58.262: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8819" for this suite. 03/13/23 19:58:58.266
------------------------------
â€¢ [3.018 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl run pod
  test/e2e/kubectl/kubectl.go:1697
    should create a pod from an image when restart is Never  [Conformance]
    test/e2e/kubectl/kubectl.go:1713

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:58:55.253
    Mar 13 19:58:55.253: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 19:58:55.254
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:58:55.266
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:58:55.27
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl run pod
      test/e2e/kubectl/kubectl.go:1700
    [It] should create a pod from an image when restart is Never  [Conformance]
      test/e2e/kubectl/kubectl.go:1713
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/13/23 19:58:55.275
    Mar 13 19:58:55.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8819 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
    Mar 13 19:58:55.420: INFO: stderr: ""
    Mar 13 19:58:55.420: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: verifying the pod e2e-test-httpd-pod was created 03/13/23 19:58:55.42
    [AfterEach] Kubectl run pod
      test/e2e/kubectl/kubectl.go:1704
    Mar 13 19:58:55.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8819 delete pods e2e-test-httpd-pod'
    Mar 13 19:58:58.262: INFO: stderr: ""
    Mar 13 19:58:58.262: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:58:58.262: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8819" for this suite. 03/13/23 19:58:58.266
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:151
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:58:58.273
Mar 13 19:58:58.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-lifecycle-hook 03/13/23 19:58:58.274
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:58:58.283
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:58:58.286
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 03/13/23 19:58:58.291
Mar 13 19:58:58.297: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-6050" to be "running and ready"
Mar 13 19:58:58.299: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.079648ms
Mar 13 19:58:58.299: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:59:00.303: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.005461552s
Mar 13 19:59:00.303: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Mar 13 19:59:00.303: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:151
STEP: create the pod with lifecycle hook 03/13/23 19:59:00.305
Mar 13 19:59:00.310: INFO: Waiting up to 5m0s for pod "pod-with-prestop-exec-hook" in namespace "container-lifecycle-hook-6050" to be "running and ready"
Mar 13 19:59:00.314: INFO: Pod "pod-with-prestop-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 4.055222ms
Mar 13 19:59:00.314: INFO: The phase of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:59:02.322: INFO: Pod "pod-with-prestop-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.012334436s
Mar 13 19:59:02.323: INFO: The phase of Pod pod-with-prestop-exec-hook is Running (Ready = true)
Mar 13 19:59:02.323: INFO: Pod "pod-with-prestop-exec-hook" satisfied condition "running and ready"
STEP: delete the pod with lifecycle hook 03/13/23 19:59:02.328
Mar 13 19:59:02.346: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Mar 13 19:59:02.364: INFO: Pod pod-with-prestop-exec-hook still exists
Mar 13 19:59:04.365: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Mar 13 19:59:04.374: INFO: Pod pod-with-prestop-exec-hook still exists
Mar 13 19:59:06.365: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Mar 13 19:59:06.372: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook 03/13/23 19:59:06.372
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Mar 13 19:59:06.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-6050" for this suite. 03/13/23 19:59:06.413
------------------------------
â€¢ [SLOW TEST] [8.168 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:151

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:58:58.273
    Mar 13 19:58:58.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-lifecycle-hook 03/13/23 19:58:58.274
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:58:58.283
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:58:58.286
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 03/13/23 19:58:58.291
    Mar 13 19:58:58.297: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-6050" to be "running and ready"
    Mar 13 19:58:58.299: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.079648ms
    Mar 13 19:58:58.299: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:59:00.303: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.005461552s
    Mar 13 19:59:00.303: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Mar 13 19:59:00.303: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute prestop exec hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:151
    STEP: create the pod with lifecycle hook 03/13/23 19:59:00.305
    Mar 13 19:59:00.310: INFO: Waiting up to 5m0s for pod "pod-with-prestop-exec-hook" in namespace "container-lifecycle-hook-6050" to be "running and ready"
    Mar 13 19:59:00.314: INFO: Pod "pod-with-prestop-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 4.055222ms
    Mar 13 19:59:00.314: INFO: The phase of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:59:02.322: INFO: Pod "pod-with-prestop-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.012334436s
    Mar 13 19:59:02.323: INFO: The phase of Pod pod-with-prestop-exec-hook is Running (Ready = true)
    Mar 13 19:59:02.323: INFO: Pod "pod-with-prestop-exec-hook" satisfied condition "running and ready"
    STEP: delete the pod with lifecycle hook 03/13/23 19:59:02.328
    Mar 13 19:59:02.346: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Mar 13 19:59:02.364: INFO: Pod pod-with-prestop-exec-hook still exists
    Mar 13 19:59:04.365: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Mar 13 19:59:04.374: INFO: Pod pod-with-prestop-exec-hook still exists
    Mar 13 19:59:06.365: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Mar 13 19:59:06.372: INFO: Pod pod-with-prestop-exec-hook no longer exists
    STEP: check prestop hook 03/13/23 19:59:06.372
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:59:06.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-6050" for this suite. 03/13/23 19:59:06.413
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:59:06.441
Mar 13 19:59:06.441: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename dns 03/13/23 19:59:06.442
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:59:06.489
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:59:06.499
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137
STEP: Creating a test headless service 03/13/23 19:59:06.511
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4686.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4686.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4686.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4686.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 125.169.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.169.125_udp@PTR;check="$$(dig +tcp +noall +answer +search 125.169.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.169.125_tcp@PTR;sleep 1; done
 03/13/23 19:59:06.6
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4686.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4686.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4686.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4686.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 125.169.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.169.125_udp@PTR;check="$$(dig +tcp +noall +answer +search 125.169.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.169.125_tcp@PTR;sleep 1; done
 03/13/23 19:59:06.6
STEP: creating a pod to probe DNS 03/13/23 19:59:06.6
STEP: submitting the pod to kubernetes 03/13/23 19:59:06.6
Mar 13 19:59:06.639: INFO: Waiting up to 15m0s for pod "dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c" in namespace "dns-4686" to be "running"
Mar 13 19:59:06.657: INFO: Pod "dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c": Phase="Pending", Reason="", readiness=false. Elapsed: 10.935493ms
Mar 13 19:59:08.673: INFO: Pod "dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c": Phase="Running", Reason="", readiness=true. Elapsed: 2.026935792s
Mar 13 19:59:08.674: INFO: Pod "dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c" satisfied condition "running"
STEP: retrieving the pod 03/13/23 19:59:08.674
STEP: looking for the results for each expected name from probers 03/13/23 19:59:08.679
Mar 13 19:59:08.704: INFO: Unable to read wheezy_udp@dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
Mar 13 19:59:08.717: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
Mar 13 19:59:08.728: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
Mar 13 19:59:08.739: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
Mar 13 19:59:08.777: INFO: Unable to read jessie_udp@dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
Mar 13 19:59:08.786: INFO: Unable to read jessie_tcp@dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
Mar 13 19:59:08.794: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
Mar 13 19:59:08.804: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
Mar 13 19:59:08.836: INFO: Lookups using dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c failed for: [wheezy_udp@dns-test-service.dns-4686.svc.cluster.local wheezy_tcp@dns-test-service.dns-4686.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local jessie_udp@dns-test-service.dns-4686.svc.cluster.local jessie_tcp@dns-test-service.dns-4686.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local]

Mar 13 19:59:13.990: INFO: DNS probes using dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c succeeded

STEP: deleting the pod 03/13/23 19:59:13.99
STEP: deleting the test service 03/13/23 19:59:14.024
STEP: deleting the test headless service 03/13/23 19:59:14.062
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar 13 19:59:14.076: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-4686" for this suite. 03/13/23 19:59:14.087
------------------------------
â€¢ [SLOW TEST] [7.663 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:59:06.441
    Mar 13 19:59:06.441: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename dns 03/13/23 19:59:06.442
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:59:06.489
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:59:06.499
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for services  [Conformance]
      test/e2e/network/dns.go:137
    STEP: Creating a test headless service 03/13/23 19:59:06.511
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4686.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4686.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4686.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4686.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 125.169.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.169.125_udp@PTR;check="$$(dig +tcp +noall +answer +search 125.169.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.169.125_tcp@PTR;sleep 1; done
     03/13/23 19:59:06.6
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4686.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4686.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4686.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4686.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4686.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 125.169.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.169.125_udp@PTR;check="$$(dig +tcp +noall +answer +search 125.169.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.169.125_tcp@PTR;sleep 1; done
     03/13/23 19:59:06.6
    STEP: creating a pod to probe DNS 03/13/23 19:59:06.6
    STEP: submitting the pod to kubernetes 03/13/23 19:59:06.6
    Mar 13 19:59:06.639: INFO: Waiting up to 15m0s for pod "dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c" in namespace "dns-4686" to be "running"
    Mar 13 19:59:06.657: INFO: Pod "dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c": Phase="Pending", Reason="", readiness=false. Elapsed: 10.935493ms
    Mar 13 19:59:08.673: INFO: Pod "dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c": Phase="Running", Reason="", readiness=true. Elapsed: 2.026935792s
    Mar 13 19:59:08.674: INFO: Pod "dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c" satisfied condition "running"
    STEP: retrieving the pod 03/13/23 19:59:08.674
    STEP: looking for the results for each expected name from probers 03/13/23 19:59:08.679
    Mar 13 19:59:08.704: INFO: Unable to read wheezy_udp@dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
    Mar 13 19:59:08.717: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
    Mar 13 19:59:08.728: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
    Mar 13 19:59:08.739: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
    Mar 13 19:59:08.777: INFO: Unable to read jessie_udp@dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
    Mar 13 19:59:08.786: INFO: Unable to read jessie_tcp@dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
    Mar 13 19:59:08.794: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
    Mar 13 19:59:08.804: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local from pod dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c: the server could not find the requested resource (get pods dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c)
    Mar 13 19:59:08.836: INFO: Lookups using dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c failed for: [wheezy_udp@dns-test-service.dns-4686.svc.cluster.local wheezy_tcp@dns-test-service.dns-4686.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local jessie_udp@dns-test-service.dns-4686.svc.cluster.local jessie_tcp@dns-test-service.dns-4686.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4686.svc.cluster.local]

    Mar 13 19:59:13.990: INFO: DNS probes using dns-4686/dns-test-61e38c3a-6500-443b-b4e3-f786314cb02c succeeded

    STEP: deleting the pod 03/13/23 19:59:13.99
    STEP: deleting the test service 03/13/23 19:59:14.024
    STEP: deleting the test headless service 03/13/23 19:59:14.062
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar 13 19:59:14.076: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-4686" for this suite. 03/13/23 19:59:14.087
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Secrets
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 19:59:14.118
Mar 13 19:59:14.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename secrets 03/13/23 19:59:14.136
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:59:14.193
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:59:14.214
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205
STEP: Creating secret with name s-test-opt-del-cdf2e49d-8069-4372-b997-c7df93112af8 03/13/23 19:59:14.225
STEP: Creating secret with name s-test-opt-upd-1cb72074-88c2-4403-835c-47cff6aa9221 03/13/23 19:59:14.238
STEP: Creating the pod 03/13/23 19:59:14.244
Mar 13 19:59:14.261: INFO: Waiting up to 5m0s for pod "pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec" in namespace "secrets-8934" to be "running and ready"
Mar 13 19:59:14.265: INFO: Pod "pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec": Phase="Pending", Reason="", readiness=false. Elapsed: 3.903278ms
Mar 13 19:59:14.265: INFO: The phase of Pod pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:59:16.270: INFO: Pod "pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008246585s
Mar 13 19:59:16.270: INFO: The phase of Pod pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec is Pending, waiting for it to be Running (with Ready = true)
Mar 13 19:59:18.270: INFO: Pod "pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec": Phase="Running", Reason="", readiness=true. Elapsed: 4.008574415s
Mar 13 19:59:18.270: INFO: The phase of Pod pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec is Running (Ready = true)
Mar 13 19:59:18.270: INFO: Pod "pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec" satisfied condition "running and ready"
STEP: Deleting secret s-test-opt-del-cdf2e49d-8069-4372-b997-c7df93112af8 03/13/23 19:59:18.294
STEP: Updating secret s-test-opt-upd-1cb72074-88c2-4403-835c-47cff6aa9221 03/13/23 19:59:18.299
STEP: Creating secret with name s-test-opt-create-80dcdedd-1bff-4a6d-870a-038469495e81 03/13/23 19:59:18.303
STEP: waiting to observe update in volume 03/13/23 19:59:18.306
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar 13 20:00:28.743: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-8934" for this suite. 03/13/23 20:00:28.747
------------------------------
â€¢ [SLOW TEST] [74.645 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 19:59:14.118
    Mar 13 19:59:14.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename secrets 03/13/23 19:59:14.136
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 19:59:14.193
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 19:59:14.214
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:205
    STEP: Creating secret with name s-test-opt-del-cdf2e49d-8069-4372-b997-c7df93112af8 03/13/23 19:59:14.225
    STEP: Creating secret with name s-test-opt-upd-1cb72074-88c2-4403-835c-47cff6aa9221 03/13/23 19:59:14.238
    STEP: Creating the pod 03/13/23 19:59:14.244
    Mar 13 19:59:14.261: INFO: Waiting up to 5m0s for pod "pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec" in namespace "secrets-8934" to be "running and ready"
    Mar 13 19:59:14.265: INFO: Pod "pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec": Phase="Pending", Reason="", readiness=false. Elapsed: 3.903278ms
    Mar 13 19:59:14.265: INFO: The phase of Pod pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:59:16.270: INFO: Pod "pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008246585s
    Mar 13 19:59:16.270: INFO: The phase of Pod pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 19:59:18.270: INFO: Pod "pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec": Phase="Running", Reason="", readiness=true. Elapsed: 4.008574415s
    Mar 13 19:59:18.270: INFO: The phase of Pod pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec is Running (Ready = true)
    Mar 13 19:59:18.270: INFO: Pod "pod-secrets-57342d73-40e7-49fc-8310-bc28a93e30ec" satisfied condition "running and ready"
    STEP: Deleting secret s-test-opt-del-cdf2e49d-8069-4372-b997-c7df93112af8 03/13/23 19:59:18.294
    STEP: Updating secret s-test-opt-upd-1cb72074-88c2-4403-835c-47cff6aa9221 03/13/23 19:59:18.299
    STEP: Creating secret with name s-test-opt-create-80dcdedd-1bff-4a6d-870a-038469495e81 03/13/23 19:59:18.303
    STEP: waiting to observe update in volume 03/13/23 19:59:18.306
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:00:28.743: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-8934" for this suite. 03/13/23 20:00:28.747
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:00:28.759
Mar 13 20:00:28.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 20:00:28.761
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:28.77
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:28.774
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654
STEP: creating a collection of services 03/13/23 20:00:28.777
Mar 13 20:00:28.778: INFO: Creating e2e-svc-a-zmm8q
Mar 13 20:00:28.786: INFO: Creating e2e-svc-b-bnfbj
Mar 13 20:00:28.795: INFO: Creating e2e-svc-c-t6bt7
STEP: deleting service collection 03/13/23 20:00:28.806
Mar 13 20:00:28.830: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 20:00:28.830: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6864" for this suite. 03/13/23 20:00:28.834
------------------------------
â€¢ [0.080 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:00:28.759
    Mar 13 20:00:28.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 20:00:28.761
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:28.77
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:28.774
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should delete a collection of services [Conformance]
      test/e2e/network/service.go:3654
    STEP: creating a collection of services 03/13/23 20:00:28.777
    Mar 13 20:00:28.778: INFO: Creating e2e-svc-a-zmm8q
    Mar 13 20:00:28.786: INFO: Creating e2e-svc-b-bnfbj
    Mar 13 20:00:28.795: INFO: Creating e2e-svc-c-t6bt7
    STEP: deleting service collection 03/13/23 20:00:28.806
    Mar 13 20:00:28.830: INFO: Collection of services has been deleted
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:00:28.830: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6864" for this suite. 03/13/23 20:00:28.834
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:00:28.848
Mar 13 20:00:28.848: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename containers 03/13/23 20:00:28.849
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:28.873
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:28.876
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39
Mar 13 20:00:28.885: INFO: Waiting up to 5m0s for pod "client-containers-2b1b15a6-255c-4b5c-af82-926e8beea21a" in namespace "containers-2383" to be "running"
Mar 13 20:00:28.891: INFO: Pod "client-containers-2b1b15a6-255c-4b5c-af82-926e8beea21a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.966559ms
Mar 13 20:00:30.895: INFO: Pod "client-containers-2b1b15a6-255c-4b5c-af82-926e8beea21a": Phase="Running", Reason="", readiness=true. Elapsed: 2.009769145s
Mar 13 20:00:30.895: INFO: Pod "client-containers-2b1b15a6-255c-4b5c-af82-926e8beea21a" satisfied condition "running"
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Mar 13 20:00:30.903: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-2383" for this suite. 03/13/23 20:00:30.906
------------------------------
â€¢ [2.064 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:00:28.848
    Mar 13 20:00:28.848: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename containers 03/13/23 20:00:28.849
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:28.873
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:28.876
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:39
    Mar 13 20:00:28.885: INFO: Waiting up to 5m0s for pod "client-containers-2b1b15a6-255c-4b5c-af82-926e8beea21a" in namespace "containers-2383" to be "running"
    Mar 13 20:00:28.891: INFO: Pod "client-containers-2b1b15a6-255c-4b5c-af82-926e8beea21a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.966559ms
    Mar 13 20:00:30.895: INFO: Pod "client-containers-2b1b15a6-255c-4b5c-af82-926e8beea21a": Phase="Running", Reason="", readiness=true. Elapsed: 2.009769145s
    Mar 13 20:00:30.895: INFO: Pod "client-containers-2b1b15a6-255c-4b5c-af82-926e8beea21a" satisfied condition "running"
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:00:30.903: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-2383" for this suite. 03/13/23 20:00:30.906
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:00:30.915
Mar 13 20:00:30.915: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename disruption 03/13/23 20:00:30.917
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:30.926
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:30.929
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141
STEP: Waiting for the pdb to be processed 03/13/23 20:00:30.936
STEP: Waiting for all pods to be running 03/13/23 20:00:32.955
Mar 13 20:00:32.960: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Mar 13 20:00:34.967: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-556" for this suite. 03/13/23 20:00:34.97
------------------------------
â€¢ [4.059 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:00:30.915
    Mar 13 20:00:30.915: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename disruption 03/13/23 20:00:30.917
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:30.926
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:30.929
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should observe PodDisruptionBudget status updated [Conformance]
      test/e2e/apps/disruption.go:141
    STEP: Waiting for the pdb to be processed 03/13/23 20:00:30.936
    STEP: Waiting for all pods to be running 03/13/23 20:00:32.955
    Mar 13 20:00:32.960: INFO: running pods: 0 < 3
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:00:34.967: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-556" for this suite. 03/13/23 20:00:34.97
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo
  should create and stop a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:339
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:00:34.984
Mar 13 20:00:34.984: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 20:00:34.985
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:34.994
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:34.998
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:326
[It] should create and stop a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:339
STEP: creating a replication controller 03/13/23 20:00:35.001
Mar 13 20:00:35.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 create -f -'
Mar 13 20:00:35.269: INFO: stderr: ""
Mar 13 20:00:35.269: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up. 03/13/23 20:00:35.269
Mar 13 20:00:35.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar 13 20:00:35.416: INFO: stderr: ""
Mar 13 20:00:35.416: INFO: stdout: "update-demo-nautilus-c8mzm update-demo-nautilus-pdsm6 "
Mar 13 20:00:35.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods update-demo-nautilus-c8mzm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar 13 20:00:35.499: INFO: stderr: ""
Mar 13 20:00:35.499: INFO: stdout: ""
Mar 13 20:00:35.499: INFO: update-demo-nautilus-c8mzm is created but not running
Mar 13 20:00:40.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar 13 20:00:40.601: INFO: stderr: ""
Mar 13 20:00:40.601: INFO: stdout: "update-demo-nautilus-c8mzm update-demo-nautilus-pdsm6 "
Mar 13 20:00:40.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods update-demo-nautilus-c8mzm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar 13 20:00:40.681: INFO: stderr: ""
Mar 13 20:00:40.681: INFO: stdout: "true"
Mar 13 20:00:40.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods update-demo-nautilus-c8mzm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar 13 20:00:40.767: INFO: stderr: ""
Mar 13 20:00:40.768: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar 13 20:00:40.768: INFO: validating pod update-demo-nautilus-c8mzm
Mar 13 20:00:40.777: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar 13 20:00:40.777: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar 13 20:00:40.778: INFO: update-demo-nautilus-c8mzm is verified up and running
Mar 13 20:00:40.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods update-demo-nautilus-pdsm6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar 13 20:00:40.859: INFO: stderr: ""
Mar 13 20:00:40.859: INFO: stdout: "true"
Mar 13 20:00:40.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods update-demo-nautilus-pdsm6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar 13 20:00:40.943: INFO: stderr: ""
Mar 13 20:00:40.943: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar 13 20:00:40.943: INFO: validating pod update-demo-nautilus-pdsm6
Mar 13 20:00:40.953: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar 13 20:00:40.953: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar 13 20:00:40.953: INFO: update-demo-nautilus-pdsm6 is verified up and running
STEP: using delete to clean up resources 03/13/23 20:00:40.953
Mar 13 20:00:40.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 delete --grace-period=0 --force -f -'
Mar 13 20:00:41.034: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar 13 20:00:41.034: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Mar 13 20:00:41.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get rc,svc -l name=update-demo --no-headers'
Mar 13 20:00:41.190: INFO: stderr: "No resources found in kubectl-6280 namespace.\n"
Mar 13 20:00:41.190: INFO: stdout: ""
Mar 13 20:00:41.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Mar 13 20:00:41.318: INFO: stderr: ""
Mar 13 20:00:41.318: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 20:00:41.318: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-6280" for this suite. 03/13/23 20:00:41.325
------------------------------
â€¢ [SLOW TEST] [6.348 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:324
    should create and stop a replication controller  [Conformance]
    test/e2e/kubectl/kubectl.go:339

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:00:34.984
    Mar 13 20:00:34.984: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 20:00:34.985
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:34.994
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:34.998
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Update Demo
      test/e2e/kubectl/kubectl.go:326
    [It] should create and stop a replication controller  [Conformance]
      test/e2e/kubectl/kubectl.go:339
    STEP: creating a replication controller 03/13/23 20:00:35.001
    Mar 13 20:00:35.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 create -f -'
    Mar 13 20:00:35.269: INFO: stderr: ""
    Mar 13 20:00:35.269: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 03/13/23 20:00:35.269
    Mar 13 20:00:35.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar 13 20:00:35.416: INFO: stderr: ""
    Mar 13 20:00:35.416: INFO: stdout: "update-demo-nautilus-c8mzm update-demo-nautilus-pdsm6 "
    Mar 13 20:00:35.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods update-demo-nautilus-c8mzm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar 13 20:00:35.499: INFO: stderr: ""
    Mar 13 20:00:35.499: INFO: stdout: ""
    Mar 13 20:00:35.499: INFO: update-demo-nautilus-c8mzm is created but not running
    Mar 13 20:00:40.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar 13 20:00:40.601: INFO: stderr: ""
    Mar 13 20:00:40.601: INFO: stdout: "update-demo-nautilus-c8mzm update-demo-nautilus-pdsm6 "
    Mar 13 20:00:40.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods update-demo-nautilus-c8mzm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar 13 20:00:40.681: INFO: stderr: ""
    Mar 13 20:00:40.681: INFO: stdout: "true"
    Mar 13 20:00:40.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods update-demo-nautilus-c8mzm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar 13 20:00:40.767: INFO: stderr: ""
    Mar 13 20:00:40.768: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar 13 20:00:40.768: INFO: validating pod update-demo-nautilus-c8mzm
    Mar 13 20:00:40.777: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar 13 20:00:40.777: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar 13 20:00:40.778: INFO: update-demo-nautilus-c8mzm is verified up and running
    Mar 13 20:00:40.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods update-demo-nautilus-pdsm6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar 13 20:00:40.859: INFO: stderr: ""
    Mar 13 20:00:40.859: INFO: stdout: "true"
    Mar 13 20:00:40.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods update-demo-nautilus-pdsm6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar 13 20:00:40.943: INFO: stderr: ""
    Mar 13 20:00:40.943: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar 13 20:00:40.943: INFO: validating pod update-demo-nautilus-pdsm6
    Mar 13 20:00:40.953: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar 13 20:00:40.953: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar 13 20:00:40.953: INFO: update-demo-nautilus-pdsm6 is verified up and running
    STEP: using delete to clean up resources 03/13/23 20:00:40.953
    Mar 13 20:00:40.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 delete --grace-period=0 --force -f -'
    Mar 13 20:00:41.034: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar 13 20:00:41.034: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
    Mar 13 20:00:41.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get rc,svc -l name=update-demo --no-headers'
    Mar 13 20:00:41.190: INFO: stderr: "No resources found in kubectl-6280 namespace.\n"
    Mar 13 20:00:41.190: INFO: stdout: ""
    Mar 13 20:00:41.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-6280 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Mar 13 20:00:41.318: INFO: stderr: ""
    Mar 13 20:00:41.318: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:00:41.318: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-6280" for this suite. 03/13/23 20:00:41.325
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:00:41.333
Mar 13 20:00:41.333: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename resourcequota 03/13/23 20:00:41.334
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:41.363
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:41.37
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75
STEP: Counting existing ResourceQuota 03/13/23 20:00:41.374
STEP: Creating a ResourceQuota 03/13/23 20:00:46.377
STEP: Ensuring resource quota status is calculated 03/13/23 20:00:46.381
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar 13 20:00:48.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-4169" for this suite. 03/13/23 20:00:48.395
------------------------------
â€¢ [SLOW TEST] [7.077 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:00:41.333
    Mar 13 20:00:41.333: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename resourcequota 03/13/23 20:00:41.334
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:41.363
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:41.37
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
      test/e2e/apimachinery/resource_quota.go:75
    STEP: Counting existing ResourceQuota 03/13/23 20:00:41.374
    STEP: Creating a ResourceQuota 03/13/23 20:00:46.377
    STEP: Ensuring resource quota status is calculated 03/13/23 20:00:46.381
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:00:48.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-4169" for this suite. 03/13/23 20:00:48.395
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:00:48.428
Mar 13 20:00:48.429: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 20:00:48.431
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:48.44
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:48.443
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391
STEP: set up a multi version CRD 03/13/23 20:00:48.446
Mar 13 20:00:48.447: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: rename a version 03/13/23 20:00:52.479
STEP: check the new version name is served 03/13/23 20:00:52.494
STEP: check the old version name is removed 03/13/23 20:00:53.609
STEP: check the other version is not changed 03/13/23 20:00:54.378
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:00:57.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-3854" for this suite. 03/13/23 20:00:57.576
------------------------------
â€¢ [SLOW TEST] [9.153 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:00:48.428
    Mar 13 20:00:48.429: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 20:00:48.431
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:48.44
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:48.443
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] updates the published spec when one version gets renamed [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:391
    STEP: set up a multi version CRD 03/13/23 20:00:48.446
    Mar 13 20:00:48.447: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: rename a version 03/13/23 20:00:52.479
    STEP: check the new version name is served 03/13/23 20:00:52.494
    STEP: check the old version name is removed 03/13/23 20:00:53.609
    STEP: check the other version is not changed 03/13/23 20:00:54.378
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:00:57.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-3854" for this suite. 03/13/23 20:00:57.576
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:00:57.582
Mar 13 20:00:57.582: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 20:00:57.583
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:57.592
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:57.595
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 20:00:57.605
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 20:00:58.369
STEP: Deploying the webhook pod 03/13/23 20:00:58.376
STEP: Wait for the deployment to be ready 03/13/23 20:00:58.385
Mar 13 20:00:58.390: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/13/23 20:01:00.399
STEP: Verifying the service has paired with the endpoint 03/13/23 20:01:00.409
Mar 13 20:01:01.409: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291
Mar 13 20:01:01.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3953-crds.webhook.example.com via the AdmissionRegistration API 03/13/23 20:01:01.928
STEP: Creating a custom resource that should be mutated by the webhook 03/13/23 20:01:01.978
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:01:04.703: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-3415" for this suite. 03/13/23 20:01:04.866
STEP: Destroying namespace "webhook-3415-markers" for this suite. 03/13/23 20:01:04.895
------------------------------
â€¢ [SLOW TEST] [7.333 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:00:57.582
    Mar 13 20:00:57.582: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 20:00:57.583
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:00:57.592
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:00:57.595
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 20:00:57.605
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 20:00:58.369
    STEP: Deploying the webhook pod 03/13/23 20:00:58.376
    STEP: Wait for the deployment to be ready 03/13/23 20:00:58.385
    Mar 13 20:00:58.390: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/13/23 20:01:00.399
    STEP: Verifying the service has paired with the endpoint 03/13/23 20:01:00.409
    Mar 13 20:01:01.409: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource [Conformance]
      test/e2e/apimachinery/webhook.go:291
    Mar 13 20:01:01.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3953-crds.webhook.example.com via the AdmissionRegistration API 03/13/23 20:01:01.928
    STEP: Creating a custom resource that should be mutated by the webhook 03/13/23 20:01:01.978
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:01:04.703: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-3415" for this suite. 03/13/23 20:01:04.866
    STEP: Destroying namespace "webhook-3415-markers" for this suite. 03/13/23 20:01:04.895
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:248
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:01:05.03
Mar 13 20:01:05.031: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-runtime 03/13/23 20:01:05.033
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:01:05.104
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:01:05.115
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:248
STEP: create the container 03/13/23 20:01:05.138
STEP: wait for the container to reach Succeeded 03/13/23 20:01:05.166
STEP: get the container status 03/13/23 20:01:09.208
STEP: the container should be terminated 03/13/23 20:01:09.213
STEP: the termination message should be set 03/13/23 20:01:09.213
Mar 13 20:01:09.213: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container 03/13/23 20:01:09.213
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Mar 13 20:01:09.263: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-1231" for this suite. 03/13/23 20:01:09.268
------------------------------
â€¢ [4.253 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:248

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:01:05.03
    Mar 13 20:01:05.031: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-runtime 03/13/23 20:01:05.033
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:01:05.104
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:01:05.115
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:248
    STEP: create the container 03/13/23 20:01:05.138
    STEP: wait for the container to reach Succeeded 03/13/23 20:01:05.166
    STEP: get the container status 03/13/23 20:01:09.208
    STEP: the container should be terminated 03/13/23 20:01:09.213
    STEP: the termination message should be set 03/13/23 20:01:09.213
    Mar 13 20:01:09.213: INFO: Expected: &{OK} to match Container's Termination Message: OK --
    STEP: delete the container 03/13/23 20:01:09.213
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:01:09.263: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-1231" for this suite. 03/13/23 20:01:09.268
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:167
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:01:09.293
Mar 13 20:01:09.293: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-lifecycle-hook 03/13/23 20:01:09.295
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:01:09.316
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:01:09.324
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 03/13/23 20:01:09.334
Mar 13 20:01:09.350: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-1458" to be "running and ready"
Mar 13 20:01:09.354: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 3.88095ms
Mar 13 20:01:09.354: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Mar 13 20:01:11.367: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.016451392s
Mar 13 20:01:11.367: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Mar 13 20:01:11.367: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:167
STEP: create the pod with lifecycle hook 03/13/23 20:01:11.371
Mar 13 20:01:11.379: INFO: Waiting up to 5m0s for pod "pod-with-poststart-http-hook" in namespace "container-lifecycle-hook-1458" to be "running and ready"
Mar 13 20:01:11.383: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 3.844367ms
Mar 13 20:01:11.383: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Mar 13 20:01:13.389: INFO: Pod "pod-with-poststart-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.009923024s
Mar 13 20:01:13.389: INFO: The phase of Pod pod-with-poststart-http-hook is Running (Ready = true)
Mar 13 20:01:13.389: INFO: Pod "pod-with-poststart-http-hook" satisfied condition "running and ready"
STEP: check poststart hook 03/13/23 20:01:13.394
STEP: delete the pod with lifecycle hook 03/13/23 20:01:13.429
Mar 13 20:01:13.445: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Mar 13 20:01:13.454: INFO: Pod pod-with-poststart-http-hook still exists
Mar 13 20:01:15.454: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Mar 13 20:01:15.459: INFO: Pod pod-with-poststart-http-hook still exists
Mar 13 20:01:17.456: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Mar 13 20:01:17.459: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Mar 13 20:01:17.459: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-1458" for this suite. 03/13/23 20:01:17.463
------------------------------
â€¢ [SLOW TEST] [8.173 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:167

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:01:09.293
    Mar 13 20:01:09.293: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-lifecycle-hook 03/13/23 20:01:09.295
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:01:09.316
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:01:09.324
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 03/13/23 20:01:09.334
    Mar 13 20:01:09.350: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-1458" to be "running and ready"
    Mar 13 20:01:09.354: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 3.88095ms
    Mar 13 20:01:09.354: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 20:01:11.367: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.016451392s
    Mar 13 20:01:11.367: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Mar 13 20:01:11.367: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute poststart http hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:167
    STEP: create the pod with lifecycle hook 03/13/23 20:01:11.371
    Mar 13 20:01:11.379: INFO: Waiting up to 5m0s for pod "pod-with-poststart-http-hook" in namespace "container-lifecycle-hook-1458" to be "running and ready"
    Mar 13 20:01:11.383: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 3.844367ms
    Mar 13 20:01:11.383: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 20:01:13.389: INFO: Pod "pod-with-poststart-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.009923024s
    Mar 13 20:01:13.389: INFO: The phase of Pod pod-with-poststart-http-hook is Running (Ready = true)
    Mar 13 20:01:13.389: INFO: Pod "pod-with-poststart-http-hook" satisfied condition "running and ready"
    STEP: check poststart hook 03/13/23 20:01:13.394
    STEP: delete the pod with lifecycle hook 03/13/23 20:01:13.429
    Mar 13 20:01:13.445: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Mar 13 20:01:13.454: INFO: Pod pod-with-poststart-http-hook still exists
    Mar 13 20:01:15.454: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Mar 13 20:01:15.459: INFO: Pod pod-with-poststart-http-hook still exists
    Mar 13 20:01:17.456: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Mar 13 20:01:17.459: INFO: Pod pod-with-poststart-http-hook no longer exists
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:01:17.459: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-1458" for this suite. 03/13/23 20:01:17.463
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Security Context When creating a pod with privileged
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:528
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:01:17.469
Mar 13 20:01:17.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename security-context-test 03/13/23 20:01:17.47
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:01:17.48
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:01:17.483
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:528
Mar 13 20:01:17.493: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-31bfb595-acf3-4dc5-b30b-03299871bd6e" in namespace "security-context-test-325" to be "Succeeded or Failed"
Mar 13 20:01:17.496: INFO: Pod "busybox-privileged-false-31bfb595-acf3-4dc5-b30b-03299871bd6e": Phase="Pending", Reason="", readiness=false. Elapsed: 3.009134ms
Mar 13 20:01:19.500: INFO: Pod "busybox-privileged-false-31bfb595-acf3-4dc5-b30b-03299871bd6e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006696965s
Mar 13 20:01:21.499: INFO: Pod "busybox-privileged-false-31bfb595-acf3-4dc5-b30b-03299871bd6e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005823829s
Mar 13 20:01:21.499: INFO: Pod "busybox-privileged-false-31bfb595-acf3-4dc5-b30b-03299871bd6e" satisfied condition "Succeeded or Failed"
Mar 13 20:01:21.507: INFO: Got logs for pod "busybox-privileged-false-31bfb595-acf3-4dc5-b30b-03299871bd6e": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Mar 13 20:01:21.507: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-325" for this suite. 03/13/23 20:01:21.511
------------------------------
â€¢ [4.046 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with privileged
  test/e2e/common/node/security_context.go:491
    should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:528

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:01:17.469
    Mar 13 20:01:17.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename security-context-test 03/13/23 20:01:17.47
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:01:17.48
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:01:17.483
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:528
    Mar 13 20:01:17.493: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-31bfb595-acf3-4dc5-b30b-03299871bd6e" in namespace "security-context-test-325" to be "Succeeded or Failed"
    Mar 13 20:01:17.496: INFO: Pod "busybox-privileged-false-31bfb595-acf3-4dc5-b30b-03299871bd6e": Phase="Pending", Reason="", readiness=false. Elapsed: 3.009134ms
    Mar 13 20:01:19.500: INFO: Pod "busybox-privileged-false-31bfb595-acf3-4dc5-b30b-03299871bd6e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006696965s
    Mar 13 20:01:21.499: INFO: Pod "busybox-privileged-false-31bfb595-acf3-4dc5-b30b-03299871bd6e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005823829s
    Mar 13 20:01:21.499: INFO: Pod "busybox-privileged-false-31bfb595-acf3-4dc5-b30b-03299871bd6e" satisfied condition "Succeeded or Failed"
    Mar 13 20:01:21.507: INFO: Got logs for pod "busybox-privileged-false-31bfb595-acf3-4dc5-b30b-03299871bd6e": "ip: RTNETLINK answers: Operation not permitted\n"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:01:21.507: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-325" for this suite. 03/13/23 20:01:21.511
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:01:21.515
Mar 13 20:01:21.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename deployment 03/13/23 20:01:21.516
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:01:21.525
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:01:21.528
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113
Mar 13 20:01:21.531: INFO: Creating deployment "test-recreate-deployment"
Mar 13 20:01:21.535: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Mar 13 20:01:21.542: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Mar 13 20:01:23.547: INFO: Waiting deployment "test-recreate-deployment" to complete
Mar 13 20:01:23.550: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Mar 13 20:01:23.557: INFO: Updating deployment test-recreate-deployment
Mar 13 20:01:23.557: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar 13 20:01:23.601: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-4230  8b3cbe58-d66a-4d94-a92a-4568c035bf85 37012 2 2023-03-13 20:01:21 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0066e5d08 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-03-13 20:01:23 +0000 UTC,LastTransitionTime:2023-03-13 20:01:23 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cff6dc657" is progressing.,LastUpdateTime:2023-03-13 20:01:23 +0000 UTC,LastTransitionTime:2023-03-13 20:01:21 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Mar 13 20:01:23.606: INFO: New ReplicaSet "test-recreate-deployment-cff6dc657" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cff6dc657  deployment-4230  06c5af53-9501-4277-8584-90e935542ec0 37010 1 2023-03-13 20:01:23 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 8b3cbe58-d66a-4d94-a92a-4568c035bf85 0xc001df01c0 0xc001df01c1}] [] [{kube-controller-manager Update apps/v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8b3cbe58-d66a-4d94-a92a-4568c035bf85\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cff6dc657,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001df0328 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Mar 13 20:01:23.606: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Mar 13 20:01:23.607: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-795566c5cb  deployment-4230  3b912743-c055-4a8b-83f0-d05914d0a031 37001 2 2023-03-13 20:01:21 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 8b3cbe58-d66a-4d94-a92a-4568c035bf85 0xc001df0087 0xc001df0088}] [] [{kube-controller-manager Update apps/v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8b3cbe58-d66a-4d94-a92a-4568c035bf85\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 795566c5cb,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001df0158 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Mar 13 20:01:23.610: INFO: Pod "test-recreate-deployment-cff6dc657-hlhwn" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cff6dc657-hlhwn test-recreate-deployment-cff6dc657- deployment-4230  9ff5a111-8479-4cbd-9996-f92ccb3d5089 37013 0 2023-03-13 20:01:23 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [{apps/v1 ReplicaSet test-recreate-deployment-cff6dc657 06c5af53-9501-4277-8584-90e935542ec0 0xc002ef47b0 0xc002ef47b1}] [] [{kube-controller-manager Update v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"06c5af53-9501-4277-8584-90e935542ec0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h5685,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h5685,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 20:01:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 20:01:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 20:01:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 20:01:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:,StartTime:2023-03-13 20:01:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar 13 20:01:23.610: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-4230" for this suite. 03/13/23 20:01:23.615
------------------------------
â€¢ [2.106 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:01:21.515
    Mar 13 20:01:21.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename deployment 03/13/23 20:01:21.516
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:01:21.525
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:01:21.528
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] RecreateDeployment should delete old pods and create new ones [Conformance]
      test/e2e/apps/deployment.go:113
    Mar 13 20:01:21.531: INFO: Creating deployment "test-recreate-deployment"
    Mar 13 20:01:21.535: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
    Mar 13 20:01:21.542: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
    Mar 13 20:01:23.547: INFO: Waiting deployment "test-recreate-deployment" to complete
    Mar 13 20:01:23.550: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
    Mar 13 20:01:23.557: INFO: Updating deployment test-recreate-deployment
    Mar 13 20:01:23.557: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar 13 20:01:23.601: INFO: Deployment "test-recreate-deployment":
    &Deployment{ObjectMeta:{test-recreate-deployment  deployment-4230  8b3cbe58-d66a-4d94-a92a-4568c035bf85 37012 2 2023-03-13 20:01:21 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0066e5d08 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-03-13 20:01:23 +0000 UTC,LastTransitionTime:2023-03-13 20:01:23 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cff6dc657" is progressing.,LastUpdateTime:2023-03-13 20:01:23 +0000 UTC,LastTransitionTime:2023-03-13 20:01:21 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

    Mar 13 20:01:23.606: INFO: New ReplicaSet "test-recreate-deployment-cff6dc657" of Deployment "test-recreate-deployment":
    &ReplicaSet{ObjectMeta:{test-recreate-deployment-cff6dc657  deployment-4230  06c5af53-9501-4277-8584-90e935542ec0 37010 1 2023-03-13 20:01:23 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 8b3cbe58-d66a-4d94-a92a-4568c035bf85 0xc001df01c0 0xc001df01c1}] [] [{kube-controller-manager Update apps/v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8b3cbe58-d66a-4d94-a92a-4568c035bf85\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cff6dc657,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001df0328 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Mar 13 20:01:23.606: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
    Mar 13 20:01:23.607: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-795566c5cb  deployment-4230  3b912743-c055-4a8b-83f0-d05914d0a031 37001 2 2023-03-13 20:01:21 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 8b3cbe58-d66a-4d94-a92a-4568c035bf85 0xc001df0087 0xc001df0088}] [] [{kube-controller-manager Update apps/v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8b3cbe58-d66a-4d94-a92a-4568c035bf85\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 795566c5cb,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001df0158 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Mar 13 20:01:23.610: INFO: Pod "test-recreate-deployment-cff6dc657-hlhwn" is not available:
    &Pod{ObjectMeta:{test-recreate-deployment-cff6dc657-hlhwn test-recreate-deployment-cff6dc657- deployment-4230  9ff5a111-8479-4cbd-9996-f92ccb3d5089 37013 0 2023-03-13 20:01:23 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [{apps/v1 ReplicaSet test-recreate-deployment-cff6dc657 06c5af53-9501-4277-8584-90e935542ec0 0xc002ef47b0 0xc002ef47b1}] [] [{kube-controller-manager Update v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"06c5af53-9501-4277-8584-90e935542ec0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-13 20:01:23 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h5685,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h5685,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:vke-automated-test-51df1d4fb06e,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 20:01:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 20:01:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 20:01:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-13 20:01:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.1.96.5,PodIP:,StartTime:2023-03-13 20:01:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:01:23.610: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-4230" for this suite. 03/13/23 20:01:23.615
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/scheduling/preemption.go:624
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:01:23.636
Mar 13 20:01:23.637: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename sched-preemption 03/13/23 20:01:23.638
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:01:23.647
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:01:23.656
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:97
Mar 13 20:01:23.678: INFO: Waiting up to 1m0s for all nodes to be ready
Mar 13 20:02:23.736: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:02:23.745
Mar 13 20:02:23.745: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename sched-preemption-path 03/13/23 20:02:23.747
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:23.758
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:23.764
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:576
STEP: Finding an available node 03/13/23 20:02:23.767
STEP: Trying to launch a pod without a label to get a node which can launch it. 03/13/23 20:02:23.767
Mar 13 20:02:23.773: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-preemption-path-1109" to be "running"
Mar 13 20:02:23.775: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 2.299152ms
Mar 13 20:02:25.780: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.006881113s
Mar 13 20:02:25.780: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 03/13/23 20:02:25.783
Mar 13 20:02:25.793: INFO: found a healthy node: vke-automated-test-51df1d4fb06e
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/scheduling/preemption.go:624
Mar 13 20:02:31.881: INFO: pods created so far: [1 1 1]
Mar 13 20:02:31.882: INFO: length of pods created so far: 3
Mar 13 20:02:33.890: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/node/init/init.go:32
Mar 13 20:02:40.892: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:549
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:02:40.917: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] PreemptionExecutionPath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] PreemptionExecutionPath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] PreemptionExecutionPath
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-path-1109" for this suite. 03/13/23 20:02:40.942
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-2325" for this suite. 03/13/23 20:02:40.946
------------------------------
â€¢ [SLOW TEST] [77.314 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:537
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/scheduling/preemption.go:624

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:01:23.636
    Mar 13 20:01:23.637: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename sched-preemption 03/13/23 20:01:23.638
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:01:23.647
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:01:23.656
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:97
    Mar 13 20:01:23.678: INFO: Waiting up to 1m0s for all nodes to be ready
    Mar 13 20:02:23.736: INFO: Waiting for terminating namespaces to be deleted...
    [BeforeEach] PreemptionExecutionPath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:02:23.745
    Mar 13 20:02:23.745: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename sched-preemption-path 03/13/23 20:02:23.747
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:23.758
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:23.764
    [BeforeEach] PreemptionExecutionPath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] PreemptionExecutionPath
      test/e2e/scheduling/preemption.go:576
    STEP: Finding an available node 03/13/23 20:02:23.767
    STEP: Trying to launch a pod without a label to get a node which can launch it. 03/13/23 20:02:23.767
    Mar 13 20:02:23.773: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-preemption-path-1109" to be "running"
    Mar 13 20:02:23.775: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 2.299152ms
    Mar 13 20:02:25.780: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.006881113s
    Mar 13 20:02:25.780: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 03/13/23 20:02:25.783
    Mar 13 20:02:25.793: INFO: found a healthy node: vke-automated-test-51df1d4fb06e
    [It] runs ReplicaSets to verify preemption running path [Conformance]
      test/e2e/scheduling/preemption.go:624
    Mar 13 20:02:31.881: INFO: pods created so far: [1 1 1]
    Mar 13 20:02:31.882: INFO: length of pods created so far: 3
    Mar 13 20:02:33.890: INFO: pods created so far: [2 2 1]
    [AfterEach] PreemptionExecutionPath
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:02:40.892: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] PreemptionExecutionPath
      test/e2e/scheduling/preemption.go:549
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:02:40.917: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] PreemptionExecutionPath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] PreemptionExecutionPath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] PreemptionExecutionPath
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-path-1109" for this suite. 03/13/23 20:02:40.942
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-2325" for this suite. 03/13/23 20:02:40.946
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] Watchers
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:02:40.952
Mar 13 20:02:40.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename watch 03/13/23 20:02:40.954
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:40.964
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:40.967
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142
STEP: creating a new configmap 03/13/23 20:02:40.97
STEP: modifying the configmap once 03/13/23 20:02:40.974
STEP: modifying the configmap a second time 03/13/23 20:02:40.98
STEP: deleting the configmap 03/13/23 20:02:40.985
STEP: creating a watch on configmaps from the resource version returned by the first update 03/13/23 20:02:40.988
STEP: Expecting to observe notifications for all changes to the configmap after the first update 03/13/23 20:02:40.99
Mar 13 20:02:40.990: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9538  bfc853b6-e223-4834-9bbd-0cf20dd280fc 37393 0 2023-03-13 20:02:40 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-03-13 20:02:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar 13 20:02:40.991: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9538  bfc853b6-e223-4834-9bbd-0cf20dd280fc 37394 0 2023-03-13 20:02:40 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-03-13 20:02:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Mar 13 20:02:40.991: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-9538" for this suite. 03/13/23 20:02:40.994
------------------------------
â€¢ [0.046 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:02:40.952
    Mar 13 20:02:40.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename watch 03/13/23 20:02:40.954
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:40.964
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:40.967
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to start watching from a specific resource version [Conformance]
      test/e2e/apimachinery/watch.go:142
    STEP: creating a new configmap 03/13/23 20:02:40.97
    STEP: modifying the configmap once 03/13/23 20:02:40.974
    STEP: modifying the configmap a second time 03/13/23 20:02:40.98
    STEP: deleting the configmap 03/13/23 20:02:40.985
    STEP: creating a watch on configmaps from the resource version returned by the first update 03/13/23 20:02:40.988
    STEP: Expecting to observe notifications for all changes to the configmap after the first update 03/13/23 20:02:40.99
    Mar 13 20:02:40.990: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9538  bfc853b6-e223-4834-9bbd-0cf20dd280fc 37393 0 2023-03-13 20:02:40 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-03-13 20:02:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar 13 20:02:40.991: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9538  bfc853b6-e223-4834-9bbd-0cf20dd280fc 37394 0 2023-03-13 20:02:40 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-03-13 20:02:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:02:40.991: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-9538" for this suite. 03/13/23 20:02:40.994
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:609
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:02:41.001
Mar 13 20:02:41.001: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename security-context-test 03/13/23 20:02:41.002
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:41.01
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:41.013
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:609
Mar 13 20:02:41.023: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-f7d81bcd-7c7e-4492-b515-34493711e96c" in namespace "security-context-test-1167" to be "Succeeded or Failed"
Mar 13 20:02:41.026: INFO: Pod "alpine-nnp-false-f7d81bcd-7c7e-4492-b515-34493711e96c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.403822ms
Mar 13 20:02:43.030: INFO: Pod "alpine-nnp-false-f7d81bcd-7c7e-4492-b515-34493711e96c": Phase="Running", Reason="", readiness=true. Elapsed: 2.006568738s
Mar 13 20:02:45.030: INFO: Pod "alpine-nnp-false-f7d81bcd-7c7e-4492-b515-34493711e96c": Phase="Running", Reason="", readiness=false. Elapsed: 4.006625666s
Mar 13 20:02:47.031: INFO: Pod "alpine-nnp-false-f7d81bcd-7c7e-4492-b515-34493711e96c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.007481236s
Mar 13 20:02:47.031: INFO: Pod "alpine-nnp-false-f7d81bcd-7c7e-4492-b515-34493711e96c" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Mar 13 20:02:47.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-1167" for this suite. 03/13/23 20:02:47.043
------------------------------
â€¢ [SLOW TEST] [6.047 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:555
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:609

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:02:41.001
    Mar 13 20:02:41.001: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename security-context-test 03/13/23 20:02:41.002
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:41.01
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:41.013
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:609
    Mar 13 20:02:41.023: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-f7d81bcd-7c7e-4492-b515-34493711e96c" in namespace "security-context-test-1167" to be "Succeeded or Failed"
    Mar 13 20:02:41.026: INFO: Pod "alpine-nnp-false-f7d81bcd-7c7e-4492-b515-34493711e96c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.403822ms
    Mar 13 20:02:43.030: INFO: Pod "alpine-nnp-false-f7d81bcd-7c7e-4492-b515-34493711e96c": Phase="Running", Reason="", readiness=true. Elapsed: 2.006568738s
    Mar 13 20:02:45.030: INFO: Pod "alpine-nnp-false-f7d81bcd-7c7e-4492-b515-34493711e96c": Phase="Running", Reason="", readiness=false. Elapsed: 4.006625666s
    Mar 13 20:02:47.031: INFO: Pod "alpine-nnp-false-f7d81bcd-7c7e-4492-b515-34493711e96c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.007481236s
    Mar 13 20:02:47.031: INFO: Pod "alpine-nnp-false-f7d81bcd-7c7e-4492-b515-34493711e96c" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:02:47.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-1167" for this suite. 03/13/23 20:02:47.043
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:02:47.05
Mar 13 20:02:47.050: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 20:02:47.052
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:47.062
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:47.069
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45
STEP: Creating configMap configmap-6034/configmap-test-58f8f3c9-840a-471f-9f64-3fe8ae16d63e 03/13/23 20:02:47.072
STEP: Creating a pod to test consume configMaps 03/13/23 20:02:47.076
Mar 13 20:02:47.092: INFO: Waiting up to 5m0s for pod "pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506" in namespace "configmap-6034" to be "Succeeded or Failed"
Mar 13 20:02:47.095: INFO: Pod "pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506": Phase="Pending", Reason="", readiness=false. Elapsed: 2.74308ms
Mar 13 20:02:49.099: INFO: Pod "pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00713658s
Mar 13 20:02:51.099: INFO: Pod "pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006727874s
STEP: Saw pod success 03/13/23 20:02:51.099
Mar 13 20:02:51.099: INFO: Pod "pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506" satisfied condition "Succeeded or Failed"
Mar 13 20:02:51.102: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506 container env-test: <nil>
STEP: delete the pod 03/13/23 20:02:51.111
Mar 13 20:02:51.119: INFO: Waiting for pod pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506 to disappear
Mar 13 20:02:51.121: INFO: Pod pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 20:02:51.121: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-6034" for this suite. 03/13/23 20:02:51.125
------------------------------
â€¢ [4.079 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:02:47.05
    Mar 13 20:02:47.050: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 20:02:47.052
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:47.062
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:47.069
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via environment variable [NodeConformance] [Conformance]
      test/e2e/common/node/configmap.go:45
    STEP: Creating configMap configmap-6034/configmap-test-58f8f3c9-840a-471f-9f64-3fe8ae16d63e 03/13/23 20:02:47.072
    STEP: Creating a pod to test consume configMaps 03/13/23 20:02:47.076
    Mar 13 20:02:47.092: INFO: Waiting up to 5m0s for pod "pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506" in namespace "configmap-6034" to be "Succeeded or Failed"
    Mar 13 20:02:47.095: INFO: Pod "pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506": Phase="Pending", Reason="", readiness=false. Elapsed: 2.74308ms
    Mar 13 20:02:49.099: INFO: Pod "pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00713658s
    Mar 13 20:02:51.099: INFO: Pod "pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006727874s
    STEP: Saw pod success 03/13/23 20:02:51.099
    Mar 13 20:02:51.099: INFO: Pod "pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506" satisfied condition "Succeeded or Failed"
    Mar 13 20:02:51.102: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506 container env-test: <nil>
    STEP: delete the pod 03/13/23 20:02:51.111
    Mar 13 20:02:51.119: INFO: Waiting for pod pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506 to disappear
    Mar 13 20:02:51.121: INFO: Pod pod-configmaps-317c700a-24f6-4488-98cf-163ed97d5506 no longer exists
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:02:51.121: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-6034" for this suite. 03/13/23 20:02:51.125
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:02:51.159
Mar 13 20:02:51.159: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename init-container 03/13/23 20:02:51.16
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:51.174
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:51.176
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177
STEP: creating the pod 03/13/23 20:02:51.182
Mar 13 20:02:51.183: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:02:56.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-8179" for this suite. 03/13/23 20:02:56.959
------------------------------
â€¢ [SLOW TEST] [5.804 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:02:51.159
    Mar 13 20:02:51.159: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename init-container 03/13/23 20:02:51.16
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:51.174
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:51.176
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should invoke init containers on a RestartNever pod [Conformance]
      test/e2e/common/node/init_container.go:177
    STEP: creating the pod 03/13/23 20:02:51.182
    Mar 13 20:02:51.183: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:02:56.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-8179" for this suite. 03/13/23 20:02:56.959
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/kubectl/kubectl.go:1250
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:02:56.963
Mar 13 20:02:56.963: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 20:02:56.964
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:56.977
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:56.995
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/kubectl/kubectl.go:1250
STEP: validating cluster-info 03/13/23 20:02:57.003
Mar 13 20:02:57.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-629 cluster-info'
Mar 13 20:02:57.089: INFO: stderr: ""
Mar 13 20:02:57.089: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 20:02:57.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-629" for this suite. 03/13/23 20:02:57.093
------------------------------
â€¢ [0.133 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl cluster-info
  test/e2e/kubectl/kubectl.go:1244
    should check if Kubernetes control plane services is included in cluster-info  [Conformance]
    test/e2e/kubectl/kubectl.go:1250

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:02:56.963
    Mar 13 20:02:56.963: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 20:02:56.964
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:56.977
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:56.995
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
      test/e2e/kubectl/kubectl.go:1250
    STEP: validating cluster-info 03/13/23 20:02:57.003
    Mar 13 20:02:57.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-629 cluster-info'
    Mar 13 20:02:57.089: INFO: stderr: ""
    Mar 13 20:02:57.089: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:02:57.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-629" for this suite. 03/13/23 20:02:57.093
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:02:57.097
Mar 13 20:02:57.097: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename custom-resource-definition 03/13/23 20:02:57.098
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:57.105
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:57.107
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269
Mar 13 20:02:57.110: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:03:00.232: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-6408" for this suite. 03/13/23 20:03:00.236
------------------------------
â€¢ [3.144 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:02:57.097
    Mar 13 20:02:57.097: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename custom-resource-definition 03/13/23 20:02:57.098
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:02:57.105
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:02:57.107
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] custom resource defaulting for requests and from storage works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:269
    Mar 13 20:02:57.110: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:03:00.232: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-6408" for this suite. 03/13/23 20:03:00.236
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes
  should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46
[BeforeEach] [sig-storage] CSIInlineVolumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:03:00.242
Mar 13 20:03:00.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename csiinlinevolumes 03/13/23 20:03:00.243
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:03:00.251
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:03:00.254
[BeforeEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46
STEP: creating 03/13/23 20:03:00.257
STEP: getting 03/13/23 20:03:00.267
STEP: listing 03/13/23 20:03:00.271
STEP: deleting 03/13/23 20:03:00.274
[AfterEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/node/init/init.go:32
Mar 13 20:03:00.284: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  tear down framework | framework.go:193
STEP: Destroying namespace "csiinlinevolumes-2303" for this suite. 03/13/23 20:03:00.288
------------------------------
â€¢ [0.050 seconds]
[sig-storage] CSIInlineVolumes
test/e2e/storage/utils/framework.go:23
  should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIInlineVolumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:03:00.242
    Mar 13 20:03:00.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename csiinlinevolumes 03/13/23 20:03:00.243
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:03:00.251
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:03:00.254
    [BeforeEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
      test/e2e/storage/csi_inline.go:46
    STEP: creating 03/13/23 20:03:00.257
    STEP: getting 03/13/23 20:03:00.267
    STEP: listing 03/13/23 20:03:00.271
    STEP: deleting 03/13/23 20:03:00.274
    [AfterEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:03:00.284: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "csiinlinevolumes-2303" for this suite. 03/13/23 20:03:00.288
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates
  should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:03:00.298
Mar 13 20:03:00.298: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename podtemplate 03/13/23 20:03:00.299
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:03:00.308
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:03:00.311
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176
STEP: Create a pod template 03/13/23 20:03:00.313
STEP: Replace a pod template 03/13/23 20:03:00.317
Mar 13 20:03:00.324: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Mar 13 20:03:00.324: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-4149" for this suite. 03/13/23 20:03:00.328
------------------------------
â€¢ [0.034 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:03:00.298
    Mar 13 20:03:00.298: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename podtemplate 03/13/23 20:03:00.299
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:03:00.308
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:03:00.311
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should replace a pod template [Conformance]
      test/e2e/common/node/podtemplates.go:176
    STEP: Create a pod template 03/13/23 20:03:00.313
    STEP: Replace a pod template 03/13/23 20:03:00.317
    Mar 13 20:03:00.324: INFO: Found updated podtemplate annotation: "true"

    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:03:00.324: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-4149" for this suite. 03/13/23 20:03:00.328
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/storage/subpath.go:80
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:03:00.334
Mar 13 20:03:00.334: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename subpath 03/13/23 20:03:00.335
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:03:00.344
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:03:00.353
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 03/13/23 20:03:00.356
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/storage/subpath.go:80
STEP: Creating pod pod-subpath-test-configmap-6nvc 03/13/23 20:03:00.362
STEP: Creating a pod to test atomic-volume-subpath 03/13/23 20:03:00.362
Mar 13 20:03:00.367: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-6nvc" in namespace "subpath-7892" to be "Succeeded or Failed"
Mar 13 20:03:00.370: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.333516ms
Mar 13 20:03:02.379: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 2.01150457s
Mar 13 20:03:04.374: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 4.006859306s
Mar 13 20:03:06.377: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 6.009553194s
Mar 13 20:03:08.382: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 8.014546903s
Mar 13 20:03:10.380: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 10.012609167s
Mar 13 20:03:12.374: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 12.007111773s
Mar 13 20:03:14.375: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 14.00817241s
Mar 13 20:03:16.377: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 16.009556802s
Mar 13 20:03:18.374: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 18.007055112s
Mar 13 20:03:20.375: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 20.007802917s
Mar 13 20:03:22.374: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=false. Elapsed: 22.006997713s
Mar 13 20:03:24.375: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.008139063s
STEP: Saw pod success 03/13/23 20:03:24.375
Mar 13 20:03:24.376: INFO: Pod "pod-subpath-test-configmap-6nvc" satisfied condition "Succeeded or Failed"
Mar 13 20:03:24.379: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-subpath-test-configmap-6nvc container test-container-subpath-configmap-6nvc: <nil>
STEP: delete the pod 03/13/23 20:03:24.388
Mar 13 20:03:24.395: INFO: Waiting for pod pod-subpath-test-configmap-6nvc to disappear
Mar 13 20:03:24.398: INFO: Pod pod-subpath-test-configmap-6nvc no longer exists
STEP: Deleting pod pod-subpath-test-configmap-6nvc 03/13/23 20:03:24.398
Mar 13 20:03:24.399: INFO: Deleting pod "pod-subpath-test-configmap-6nvc" in namespace "subpath-7892"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Mar 13 20:03:24.403: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-7892" for this suite. 03/13/23 20:03:24.407
------------------------------
â€¢ [SLOW TEST] [24.078 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/storage/subpath.go:80

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:03:00.334
    Mar 13 20:03:00.334: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename subpath 03/13/23 20:03:00.335
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:03:00.344
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:03:00.353
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 03/13/23 20:03:00.356
    [It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
      test/e2e/storage/subpath.go:80
    STEP: Creating pod pod-subpath-test-configmap-6nvc 03/13/23 20:03:00.362
    STEP: Creating a pod to test atomic-volume-subpath 03/13/23 20:03:00.362
    Mar 13 20:03:00.367: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-6nvc" in namespace "subpath-7892" to be "Succeeded or Failed"
    Mar 13 20:03:00.370: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.333516ms
    Mar 13 20:03:02.379: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 2.01150457s
    Mar 13 20:03:04.374: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 4.006859306s
    Mar 13 20:03:06.377: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 6.009553194s
    Mar 13 20:03:08.382: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 8.014546903s
    Mar 13 20:03:10.380: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 10.012609167s
    Mar 13 20:03:12.374: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 12.007111773s
    Mar 13 20:03:14.375: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 14.00817241s
    Mar 13 20:03:16.377: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 16.009556802s
    Mar 13 20:03:18.374: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 18.007055112s
    Mar 13 20:03:20.375: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=true. Elapsed: 20.007802917s
    Mar 13 20:03:22.374: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Running", Reason="", readiness=false. Elapsed: 22.006997713s
    Mar 13 20:03:24.375: INFO: Pod "pod-subpath-test-configmap-6nvc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.008139063s
    STEP: Saw pod success 03/13/23 20:03:24.375
    Mar 13 20:03:24.376: INFO: Pod "pod-subpath-test-configmap-6nvc" satisfied condition "Succeeded or Failed"
    Mar 13 20:03:24.379: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-subpath-test-configmap-6nvc container test-container-subpath-configmap-6nvc: <nil>
    STEP: delete the pod 03/13/23 20:03:24.388
    Mar 13 20:03:24.395: INFO: Waiting for pod pod-subpath-test-configmap-6nvc to disappear
    Mar 13 20:03:24.398: INFO: Pod pod-subpath-test-configmap-6nvc no longer exists
    STEP: Deleting pod pod-subpath-test-configmap-6nvc 03/13/23 20:03:24.398
    Mar 13 20:03:24.399: INFO: Deleting pod "pod-subpath-test-configmap-6nvc" in namespace "subpath-7892"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:03:24.403: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-7892" for this suite. 03/13/23 20:03:24.407
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] Job
  should delete a job [Conformance]
  test/e2e/apps/job.go:481
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:03:24.412
Mar 13 20:03:24.412: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename job 03/13/23 20:03:24.415
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:03:24.426
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:03:24.429
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a job [Conformance]
  test/e2e/apps/job.go:481
STEP: Creating a job 03/13/23 20:03:24.433
STEP: Ensuring active pods == parallelism 03/13/23 20:03:24.438
STEP: delete a job 03/13/23 20:03:26.442
STEP: deleting Job.batch foo in namespace job-5854, will wait for the garbage collector to delete the pods 03/13/23 20:03:26.442
Mar 13 20:03:26.502: INFO: Deleting Job.batch foo took: 5.737275ms
Mar 13 20:03:26.603: INFO: Terminating Job.batch foo pods took: 100.809431ms
STEP: Ensuring job was deleted 03/13/23 20:03:59.204
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Mar 13 20:03:59.207: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-5854" for this suite. 03/13/23 20:03:59.211
------------------------------
â€¢ [SLOW TEST] [34.807 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/apps/job.go:481

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:03:24.412
    Mar 13 20:03:24.412: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename job 03/13/23 20:03:24.415
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:03:24.426
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:03:24.429
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a job [Conformance]
      test/e2e/apps/job.go:481
    STEP: Creating a job 03/13/23 20:03:24.433
    STEP: Ensuring active pods == parallelism 03/13/23 20:03:24.438
    STEP: delete a job 03/13/23 20:03:26.442
    STEP: deleting Job.batch foo in namespace job-5854, will wait for the garbage collector to delete the pods 03/13/23 20:03:26.442
    Mar 13 20:03:26.502: INFO: Deleting Job.batch foo took: 5.737275ms
    Mar 13 20:03:26.603: INFO: Terminating Job.batch foo pods took: 100.809431ms
    STEP: Ensuring job was deleted 03/13/23 20:03:59.204
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:03:59.207: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-5854" for this suite. 03/13/23 20:03:59.211
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:03:59.22
Mar 13 20:03:59.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename crd-webhook 03/13/23 20:03:59.222
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:03:59.244
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:03:59.248
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert 03/13/23 20:03:59.253
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 03/13/23 20:03:59.823
STEP: Deploying the custom resource conversion webhook pod 03/13/23 20:03:59.829
STEP: Wait for the deployment to be ready 03/13/23 20:03:59.847
Mar 13 20:03:59.857: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/13/23 20:04:01.879
STEP: Verifying the service has paired with the endpoint 03/13/23 20:04:01.92
Mar 13 20:04:02.921: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184
Mar 13 20:04:02.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Creating a v1 custom resource 03/13/23 20:04:05.733
STEP: Create a v2 custom resource 03/13/23 20:04:05.804
STEP: List CRs in v1 03/13/23 20:04:05.936
STEP: List CRs in v2 03/13/23 20:04:05.949
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:04:06.500: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-webhook-9149" for this suite. 03/13/23 20:04:06.662
------------------------------
â€¢ [SLOW TEST] [7.465 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:03:59.22
    Mar 13 20:03:59.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename crd-webhook 03/13/23 20:03:59.222
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:03:59.244
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:03:59.248
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:128
    STEP: Setting up server cert 03/13/23 20:03:59.253
    STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 03/13/23 20:03:59.823
    STEP: Deploying the custom resource conversion webhook pod 03/13/23 20:03:59.829
    STEP: Wait for the deployment to be ready 03/13/23 20:03:59.847
    Mar 13 20:03:59.857: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/13/23 20:04:01.879
    STEP: Verifying the service has paired with the endpoint 03/13/23 20:04:01.92
    Mar 13 20:04:02.921: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
    [It] should be able to convert a non homogeneous list of CRs [Conformance]
      test/e2e/apimachinery/crd_conversion_webhook.go:184
    Mar 13 20:04:02.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Creating a v1 custom resource 03/13/23 20:04:05.733
    STEP: Create a v2 custom resource 03/13/23 20:04:05.804
    STEP: List CRs in v1 03/13/23 20:04:05.936
    STEP: List CRs in v2 03/13/23 20:04:05.949
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:04:06.500: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:139
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-webhook-9149" for this suite. 03/13/23 20:04:06.662
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:04:06.686
Mar 13 20:04:06.686: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 20:04:06.704
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:06.743
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:06.757
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207
STEP: Creating a pod to test emptydir 0666 on node default medium 03/13/23 20:04:06.776
Mar 13 20:04:06.798: INFO: Waiting up to 5m0s for pod "pod-781d3e75-3221-4567-91b0-7929a57d913e" in namespace "emptydir-5192" to be "Succeeded or Failed"
Mar 13 20:04:06.815: INFO: Pod "pod-781d3e75-3221-4567-91b0-7929a57d913e": Phase="Pending", Reason="", readiness=false. Elapsed: 17.717977ms
Mar 13 20:04:08.836: INFO: Pod "pod-781d3e75-3221-4567-91b0-7929a57d913e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.038566018s
Mar 13 20:04:10.820: INFO: Pod "pod-781d3e75-3221-4567-91b0-7929a57d913e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022935719s
STEP: Saw pod success 03/13/23 20:04:10.821
Mar 13 20:04:10.821: INFO: Pod "pod-781d3e75-3221-4567-91b0-7929a57d913e" satisfied condition "Succeeded or Failed"
Mar 13 20:04:10.828: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-781d3e75-3221-4567-91b0-7929a57d913e container test-container: <nil>
STEP: delete the pod 03/13/23 20:04:10.841
Mar 13 20:04:10.864: INFO: Waiting for pod pod-781d3e75-3221-4567-91b0-7929a57d913e to disappear
Mar 13 20:04:10.872: INFO: Pod pod-781d3e75-3221-4567-91b0-7929a57d913e no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 20:04:10.873: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-5192" for this suite. 03/13/23 20:04:10.882
------------------------------
â€¢ [4.204 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:04:06.686
    Mar 13 20:04:06.686: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 20:04:06.704
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:06.743
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:06.757
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:207
    STEP: Creating a pod to test emptydir 0666 on node default medium 03/13/23 20:04:06.776
    Mar 13 20:04:06.798: INFO: Waiting up to 5m0s for pod "pod-781d3e75-3221-4567-91b0-7929a57d913e" in namespace "emptydir-5192" to be "Succeeded or Failed"
    Mar 13 20:04:06.815: INFO: Pod "pod-781d3e75-3221-4567-91b0-7929a57d913e": Phase="Pending", Reason="", readiness=false. Elapsed: 17.717977ms
    Mar 13 20:04:08.836: INFO: Pod "pod-781d3e75-3221-4567-91b0-7929a57d913e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.038566018s
    Mar 13 20:04:10.820: INFO: Pod "pod-781d3e75-3221-4567-91b0-7929a57d913e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022935719s
    STEP: Saw pod success 03/13/23 20:04:10.821
    Mar 13 20:04:10.821: INFO: Pod "pod-781d3e75-3221-4567-91b0-7929a57d913e" satisfied condition "Succeeded or Failed"
    Mar 13 20:04:10.828: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-781d3e75-3221-4567-91b0-7929a57d913e container test-container: <nil>
    STEP: delete the pod 03/13/23 20:04:10.841
    Mar 13 20:04:10.864: INFO: Waiting for pod pod-781d3e75-3221-4567-91b0-7929a57d913e to disappear
    Mar 13 20:04:10.872: INFO: Pod pod-781d3e75-3221-4567-91b0-7929a57d913e no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:04:10.873: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-5192" for this suite. 03/13/23 20:04:10.882
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:04:10.896
Mar 13 20:04:10.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 20:04:10.898
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:10.932
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:10.946
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191
STEP: creating service in namespace services-4139 03/13/23 20:04:10.958
STEP: creating service affinity-clusterip in namespace services-4139 03/13/23 20:04:10.958
STEP: creating replication controller affinity-clusterip in namespace services-4139 03/13/23 20:04:10.981
I0313 20:04:11.002232      21 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-4139, replica count: 3
I0313 20:04:14.056335      21 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar 13 20:04:14.069: INFO: Creating new exec pod
Mar 13 20:04:14.082: INFO: Waiting up to 5m0s for pod "execpod-affinitykp6xk" in namespace "services-4139" to be "running"
Mar 13 20:04:14.090: INFO: Pod "execpod-affinitykp6xk": Phase="Pending", Reason="", readiness=false. Elapsed: 7.780777ms
Mar 13 20:04:16.094: INFO: Pod "execpod-affinitykp6xk": Phase="Running", Reason="", readiness=true. Elapsed: 2.011867084s
Mar 13 20:04:16.094: INFO: Pod "execpod-affinitykp6xk" satisfied condition "running"
Mar 13 20:04:17.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4139 exec execpod-affinitykp6xk -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip 80'
Mar 13 20:04:17.279: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Mar 13 20:04:17.279: INFO: stdout: ""
Mar 13 20:04:17.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4139 exec execpod-affinitykp6xk -- /bin/sh -x -c nc -v -z -w 2 10.100.250.134 80'
Mar 13 20:04:17.444: INFO: stderr: "+ nc -v -z -w 2 10.100.250.134 80\nConnection to 10.100.250.134 80 port [tcp/http] succeeded!\n"
Mar 13 20:04:17.444: INFO: stdout: ""
Mar 13 20:04:17.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4139 exec execpod-affinitykp6xk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.100.250.134:80/ ; done'
Mar 13 20:04:17.710: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n"
Mar 13 20:04:17.710: INFO: stdout: "\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb"
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.711: INFO: Received response from host: affinity-clusterip-2wmfb
Mar 13 20:04:17.711: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-4139, will wait for the garbage collector to delete the pods 03/13/23 20:04:17.722
Mar 13 20:04:17.785: INFO: Deleting ReplicationController affinity-clusterip took: 6.242561ms
Mar 13 20:04:17.886: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.740815ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 20:04:20.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-4139" for this suite. 03/13/23 20:04:20.301
------------------------------
â€¢ [SLOW TEST] [9.409 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:04:10.896
    Mar 13 20:04:10.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 20:04:10.898
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:10.932
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:10.946
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2191
    STEP: creating service in namespace services-4139 03/13/23 20:04:10.958
    STEP: creating service affinity-clusterip in namespace services-4139 03/13/23 20:04:10.958
    STEP: creating replication controller affinity-clusterip in namespace services-4139 03/13/23 20:04:10.981
    I0313 20:04:11.002232      21 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-4139, replica count: 3
    I0313 20:04:14.056335      21 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar 13 20:04:14.069: INFO: Creating new exec pod
    Mar 13 20:04:14.082: INFO: Waiting up to 5m0s for pod "execpod-affinitykp6xk" in namespace "services-4139" to be "running"
    Mar 13 20:04:14.090: INFO: Pod "execpod-affinitykp6xk": Phase="Pending", Reason="", readiness=false. Elapsed: 7.780777ms
    Mar 13 20:04:16.094: INFO: Pod "execpod-affinitykp6xk": Phase="Running", Reason="", readiness=true. Elapsed: 2.011867084s
    Mar 13 20:04:16.094: INFO: Pod "execpod-affinitykp6xk" satisfied condition "running"
    Mar 13 20:04:17.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4139 exec execpod-affinitykp6xk -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip 80'
    Mar 13 20:04:17.279: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
    Mar 13 20:04:17.279: INFO: stdout: ""
    Mar 13 20:04:17.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4139 exec execpod-affinitykp6xk -- /bin/sh -x -c nc -v -z -w 2 10.100.250.134 80'
    Mar 13 20:04:17.444: INFO: stderr: "+ nc -v -z -w 2 10.100.250.134 80\nConnection to 10.100.250.134 80 port [tcp/http] succeeded!\n"
    Mar 13 20:04:17.444: INFO: stdout: ""
    Mar 13 20:04:17.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-4139 exec execpod-affinitykp6xk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.100.250.134:80/ ; done'
    Mar 13 20:04:17.710: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.250.134:80/\n"
    Mar 13 20:04:17.710: INFO: stdout: "\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb\naffinity-clusterip-2wmfb"
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.710: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.711: INFO: Received response from host: affinity-clusterip-2wmfb
    Mar 13 20:04:17.711: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-clusterip in namespace services-4139, will wait for the garbage collector to delete the pods 03/13/23 20:04:17.722
    Mar 13 20:04:17.785: INFO: Deleting ReplicationController affinity-clusterip took: 6.242561ms
    Mar 13 20:04:17.886: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.740815ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:04:20.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-4139" for this suite. 03/13/23 20:04:20.301
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:04:20.309
Mar 13 20:04:20.310: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 20:04:20.311
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:20.322
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:20.324
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235
STEP: Creating a pod to test downward API volume plugin 03/13/23 20:04:20.327
Mar 13 20:04:20.334: INFO: Waiting up to 5m0s for pod "downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b" in namespace "projected-8527" to be "Succeeded or Failed"
Mar 13 20:04:20.336: INFO: Pod "downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.126752ms
Mar 13 20:04:22.340: INFO: Pod "downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b": Phase="Running", Reason="", readiness=false. Elapsed: 2.006289126s
Mar 13 20:04:24.343: INFO: Pod "downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00912636s
STEP: Saw pod success 03/13/23 20:04:24.343
Mar 13 20:04:24.343: INFO: Pod "downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b" satisfied condition "Succeeded or Failed"
Mar 13 20:04:24.348: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b container client-container: <nil>
STEP: delete the pod 03/13/23 20:04:24.366
Mar 13 20:04:24.391: INFO: Waiting for pod downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b to disappear
Mar 13 20:04:24.396: INFO: Pod downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar 13 20:04:24.396: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8527" for this suite. 03/13/23 20:04:24.404
------------------------------
â€¢ [4.107 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:04:20.309
    Mar 13 20:04:20.310: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 20:04:20.311
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:20.322
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:20.324
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's memory request [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:235
    STEP: Creating a pod to test downward API volume plugin 03/13/23 20:04:20.327
    Mar 13 20:04:20.334: INFO: Waiting up to 5m0s for pod "downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b" in namespace "projected-8527" to be "Succeeded or Failed"
    Mar 13 20:04:20.336: INFO: Pod "downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.126752ms
    Mar 13 20:04:22.340: INFO: Pod "downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b": Phase="Running", Reason="", readiness=false. Elapsed: 2.006289126s
    Mar 13 20:04:24.343: INFO: Pod "downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00912636s
    STEP: Saw pod success 03/13/23 20:04:24.343
    Mar 13 20:04:24.343: INFO: Pod "downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b" satisfied condition "Succeeded or Failed"
    Mar 13 20:04:24.348: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b container client-container: <nil>
    STEP: delete the pod 03/13/23 20:04:24.366
    Mar 13 20:04:24.391: INFO: Waiting for pod downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b to disappear
    Mar 13 20:04:24.396: INFO: Pod downwardapi-volume-4dfb18ed-f8ff-4c8b-8270-760bf700849b no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:04:24.396: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8527" for this suite. 03/13/23 20:04:24.404
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:04:24.416
Mar 13 20:04:24.416: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 20:04:24.417
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:24.433
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:24.437
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99
STEP: Creating configMap with name projected-configmap-test-volume-map-6c32632f-112a-4a09-8d1b-9313401519ac 03/13/23 20:04:24.44
STEP: Creating a pod to test consume configMaps 03/13/23 20:04:24.444
Mar 13 20:04:24.450: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f" in namespace "projected-2849" to be "Succeeded or Failed"
Mar 13 20:04:24.452: INFO: Pod "pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.314828ms
Mar 13 20:04:26.456: INFO: Pod "pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006668147s
Mar 13 20:04:28.457: INFO: Pod "pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007339217s
STEP: Saw pod success 03/13/23 20:04:28.457
Mar 13 20:04:28.457: INFO: Pod "pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f" satisfied condition "Succeeded or Failed"
Mar 13 20:04:28.460: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f container agnhost-container: <nil>
STEP: delete the pod 03/13/23 20:04:28.466
Mar 13 20:04:28.474: INFO: Waiting for pod pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f to disappear
Mar 13 20:04:28.476: INFO: Pod pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar 13 20:04:28.477: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-2849" for this suite. 03/13/23 20:04:28.48
------------------------------
â€¢ [4.069 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:04:24.416
    Mar 13 20:04:24.416: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 20:04:24.417
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:24.433
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:24.437
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:99
    STEP: Creating configMap with name projected-configmap-test-volume-map-6c32632f-112a-4a09-8d1b-9313401519ac 03/13/23 20:04:24.44
    STEP: Creating a pod to test consume configMaps 03/13/23 20:04:24.444
    Mar 13 20:04:24.450: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f" in namespace "projected-2849" to be "Succeeded or Failed"
    Mar 13 20:04:24.452: INFO: Pod "pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.314828ms
    Mar 13 20:04:26.456: INFO: Pod "pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006668147s
    Mar 13 20:04:28.457: INFO: Pod "pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007339217s
    STEP: Saw pod success 03/13/23 20:04:28.457
    Mar 13 20:04:28.457: INFO: Pod "pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f" satisfied condition "Succeeded or Failed"
    Mar 13 20:04:28.460: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 20:04:28.466
    Mar 13 20:04:28.474: INFO: Waiting for pod pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f to disappear
    Mar 13 20:04:28.476: INFO: Pod pod-projected-configmaps-f3e6cbe3-56d8-45e8-ad10-1402acd2916f no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:04:28.477: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-2849" for this suite. 03/13/23 20:04:28.48
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:04:28.489
Mar 13 20:04:28.489: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 20:04:28.49
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:28.502
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:28.504
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169
STEP: creating a ConfigMap 03/13/23 20:04:28.507
STEP: fetching the ConfigMap 03/13/23 20:04:28.51
STEP: patching the ConfigMap 03/13/23 20:04:28.513
STEP: listing all ConfigMaps in all namespaces with a label selector 03/13/23 20:04:28.516
STEP: deleting the ConfigMap by collection with a label selector 03/13/23 20:04:28.519
STEP: listing all ConfigMaps in test namespace 03/13/23 20:04:28.523
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 20:04:28.526: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-6959" for this suite. 03/13/23 20:04:28.528
------------------------------
â€¢ [0.043 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:04:28.489
    Mar 13 20:04:28.489: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 20:04:28.49
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:28.502
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:28.504
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should run through a ConfigMap lifecycle [Conformance]
      test/e2e/common/node/configmap.go:169
    STEP: creating a ConfigMap 03/13/23 20:04:28.507
    STEP: fetching the ConfigMap 03/13/23 20:04:28.51
    STEP: patching the ConfigMap 03/13/23 20:04:28.513
    STEP: listing all ConfigMaps in all namespaces with a label selector 03/13/23 20:04:28.516
    STEP: deleting the ConfigMap by collection with a label selector 03/13/23 20:04:28.519
    STEP: listing all ConfigMaps in test namespace 03/13/23 20:04:28.523
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:04:28.526: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-6959" for this suite. 03/13/23 20:04:28.528
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:04:28.537
Mar 13 20:04:28.537: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename gc 03/13/23 20:04:28.538
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:28.545
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:28.548
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735
STEP: create the rc1 03/13/23 20:04:28.557
STEP: create the rc2 03/13/23 20:04:28.561
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well 03/13/23 20:04:33.569
STEP: delete the rc simpletest-rc-to-be-deleted 03/13/23 20:04:34.316
STEP: wait for the rc to be deleted 03/13/23 20:04:34.366
Mar 13 20:04:39.394: INFO: 71 pods remaining
Mar 13 20:04:39.394: INFO: 71 pods has nil DeletionTimestamp
Mar 13 20:04:39.394: INFO: 
STEP: Gathering metrics 03/13/23 20:04:44.459
W0313 20:04:44.499640      21 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Mar 13 20:04:44.499: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Mar 13 20:04:44.499: INFO: Deleting pod "simpletest-rc-to-be-deleted-2msh9" in namespace "gc-6126"
Mar 13 20:04:44.544: INFO: Deleting pod "simpletest-rc-to-be-deleted-2prg4" in namespace "gc-6126"
Mar 13 20:04:44.552: INFO: Deleting pod "simpletest-rc-to-be-deleted-2q8gr" in namespace "gc-6126"
Mar 13 20:04:44.619: INFO: Deleting pod "simpletest-rc-to-be-deleted-2tjcr" in namespace "gc-6126"
Mar 13 20:04:44.673: INFO: Deleting pod "simpletest-rc-to-be-deleted-2ztq6" in namespace "gc-6126"
Mar 13 20:04:44.762: INFO: Deleting pod "simpletest-rc-to-be-deleted-44cvz" in namespace "gc-6126"
Mar 13 20:04:44.840: INFO: Deleting pod "simpletest-rc-to-be-deleted-452fz" in namespace "gc-6126"
Mar 13 20:04:44.886: INFO: Deleting pod "simpletest-rc-to-be-deleted-455cr" in namespace "gc-6126"
Mar 13 20:04:44.922: INFO: Deleting pod "simpletest-rc-to-be-deleted-4pckc" in namespace "gc-6126"
Mar 13 20:04:44.945: INFO: Deleting pod "simpletest-rc-to-be-deleted-4tvt2" in namespace "gc-6126"
Mar 13 20:04:44.962: INFO: Deleting pod "simpletest-rc-to-be-deleted-5d2p9" in namespace "gc-6126"
Mar 13 20:04:44.977: INFO: Deleting pod "simpletest-rc-to-be-deleted-5g8kv" in namespace "gc-6126"
Mar 13 20:04:45.005: INFO: Deleting pod "simpletest-rc-to-be-deleted-5lsrt" in namespace "gc-6126"
Mar 13 20:04:45.020: INFO: Deleting pod "simpletest-rc-to-be-deleted-5p84g" in namespace "gc-6126"
Mar 13 20:04:45.038: INFO: Deleting pod "simpletest-rc-to-be-deleted-5svz7" in namespace "gc-6126"
Mar 13 20:04:45.048: INFO: Deleting pod "simpletest-rc-to-be-deleted-68dkb" in namespace "gc-6126"
Mar 13 20:04:45.075: INFO: Deleting pod "simpletest-rc-to-be-deleted-6dcxx" in namespace "gc-6126"
Mar 13 20:04:45.093: INFO: Deleting pod "simpletest-rc-to-be-deleted-6ftjt" in namespace "gc-6126"
Mar 13 20:04:45.106: INFO: Deleting pod "simpletest-rc-to-be-deleted-6hqb7" in namespace "gc-6126"
Mar 13 20:04:45.116: INFO: Deleting pod "simpletest-rc-to-be-deleted-6lx2x" in namespace "gc-6126"
Mar 13 20:04:45.124: INFO: Deleting pod "simpletest-rc-to-be-deleted-6xxr9" in namespace "gc-6126"
Mar 13 20:04:45.130: INFO: Deleting pod "simpletest-rc-to-be-deleted-79lw9" in namespace "gc-6126"
Mar 13 20:04:45.140: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ctsw" in namespace "gc-6126"
Mar 13 20:04:45.152: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bphn" in namespace "gc-6126"
Mar 13 20:04:45.160: INFO: Deleting pod "simpletest-rc-to-be-deleted-8h7xl" in namespace "gc-6126"
Mar 13 20:04:45.177: INFO: Deleting pod "simpletest-rc-to-be-deleted-8kzxc" in namespace "gc-6126"
Mar 13 20:04:45.213: INFO: Deleting pod "simpletest-rc-to-be-deleted-95c4v" in namespace "gc-6126"
Mar 13 20:04:45.247: INFO: Deleting pod "simpletest-rc-to-be-deleted-9fjct" in namespace "gc-6126"
Mar 13 20:04:45.284: INFO: Deleting pod "simpletest-rc-to-be-deleted-9pgnw" in namespace "gc-6126"
Mar 13 20:04:45.311: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rg9b" in namespace "gc-6126"
Mar 13 20:04:45.353: INFO: Deleting pod "simpletest-rc-to-be-deleted-9t85l" in namespace "gc-6126"
Mar 13 20:04:45.358: INFO: Deleting pod "simpletest-rc-to-be-deleted-bhfbl" in namespace "gc-6126"
Mar 13 20:04:45.364: INFO: Deleting pod "simpletest-rc-to-be-deleted-brhmn" in namespace "gc-6126"
Mar 13 20:04:45.375: INFO: Deleting pod "simpletest-rc-to-be-deleted-c6ndp" in namespace "gc-6126"
Mar 13 20:04:45.426: INFO: Deleting pod "simpletest-rc-to-be-deleted-cjgtp" in namespace "gc-6126"
Mar 13 20:04:45.447: INFO: Deleting pod "simpletest-rc-to-be-deleted-cnklm" in namespace "gc-6126"
Mar 13 20:04:45.496: INFO: Deleting pod "simpletest-rc-to-be-deleted-ctswd" in namespace "gc-6126"
Mar 13 20:04:45.543: INFO: Deleting pod "simpletest-rc-to-be-deleted-d27d2" in namespace "gc-6126"
Mar 13 20:04:45.562: INFO: Deleting pod "simpletest-rc-to-be-deleted-d7q4m" in namespace "gc-6126"
Mar 13 20:04:45.617: INFO: Deleting pod "simpletest-rc-to-be-deleted-drqwj" in namespace "gc-6126"
Mar 13 20:04:45.796: INFO: Deleting pod "simpletest-rc-to-be-deleted-f2c95" in namespace "gc-6126"
Mar 13 20:04:45.809: INFO: Deleting pod "simpletest-rc-to-be-deleted-ffh44" in namespace "gc-6126"
Mar 13 20:04:45.848: INFO: Deleting pod "simpletest-rc-to-be-deleted-fjgww" in namespace "gc-6126"
Mar 13 20:04:45.860: INFO: Deleting pod "simpletest-rc-to-be-deleted-frhph" in namespace "gc-6126"
Mar 13 20:04:45.882: INFO: Deleting pod "simpletest-rc-to-be-deleted-gzngw" in namespace "gc-6126"
Mar 13 20:04:45.914: INFO: Deleting pod "simpletest-rc-to-be-deleted-hb8dv" in namespace "gc-6126"
Mar 13 20:04:45.927: INFO: Deleting pod "simpletest-rc-to-be-deleted-hkqgs" in namespace "gc-6126"
Mar 13 20:04:45.937: INFO: Deleting pod "simpletest-rc-to-be-deleted-hn6v4" in namespace "gc-6126"
Mar 13 20:04:45.960: INFO: Deleting pod "simpletest-rc-to-be-deleted-jnwbr" in namespace "gc-6126"
Mar 13 20:04:46.001: INFO: Deleting pod "simpletest-rc-to-be-deleted-kgt7w" in namespace "gc-6126"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar 13 20:04:46.021: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-6126" for this suite. 03/13/23 20:04:46.046
------------------------------
â€¢ [SLOW TEST] [17.520 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:04:28.537
    Mar 13 20:04:28.537: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename gc 03/13/23 20:04:28.538
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:28.545
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:28.548
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
      test/e2e/apimachinery/garbage_collector.go:735
    STEP: create the rc1 03/13/23 20:04:28.557
    STEP: create the rc2 03/13/23 20:04:28.561
    STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well 03/13/23 20:04:33.569
    STEP: delete the rc simpletest-rc-to-be-deleted 03/13/23 20:04:34.316
    STEP: wait for the rc to be deleted 03/13/23 20:04:34.366
    Mar 13 20:04:39.394: INFO: 71 pods remaining
    Mar 13 20:04:39.394: INFO: 71 pods has nil DeletionTimestamp
    Mar 13 20:04:39.394: INFO: 
    STEP: Gathering metrics 03/13/23 20:04:44.459
    W0313 20:04:44.499640      21 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Mar 13 20:04:44.499: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    Mar 13 20:04:44.499: INFO: Deleting pod "simpletest-rc-to-be-deleted-2msh9" in namespace "gc-6126"
    Mar 13 20:04:44.544: INFO: Deleting pod "simpletest-rc-to-be-deleted-2prg4" in namespace "gc-6126"
    Mar 13 20:04:44.552: INFO: Deleting pod "simpletest-rc-to-be-deleted-2q8gr" in namespace "gc-6126"
    Mar 13 20:04:44.619: INFO: Deleting pod "simpletest-rc-to-be-deleted-2tjcr" in namespace "gc-6126"
    Mar 13 20:04:44.673: INFO: Deleting pod "simpletest-rc-to-be-deleted-2ztq6" in namespace "gc-6126"
    Mar 13 20:04:44.762: INFO: Deleting pod "simpletest-rc-to-be-deleted-44cvz" in namespace "gc-6126"
    Mar 13 20:04:44.840: INFO: Deleting pod "simpletest-rc-to-be-deleted-452fz" in namespace "gc-6126"
    Mar 13 20:04:44.886: INFO: Deleting pod "simpletest-rc-to-be-deleted-455cr" in namespace "gc-6126"
    Mar 13 20:04:44.922: INFO: Deleting pod "simpletest-rc-to-be-deleted-4pckc" in namespace "gc-6126"
    Mar 13 20:04:44.945: INFO: Deleting pod "simpletest-rc-to-be-deleted-4tvt2" in namespace "gc-6126"
    Mar 13 20:04:44.962: INFO: Deleting pod "simpletest-rc-to-be-deleted-5d2p9" in namespace "gc-6126"
    Mar 13 20:04:44.977: INFO: Deleting pod "simpletest-rc-to-be-deleted-5g8kv" in namespace "gc-6126"
    Mar 13 20:04:45.005: INFO: Deleting pod "simpletest-rc-to-be-deleted-5lsrt" in namespace "gc-6126"
    Mar 13 20:04:45.020: INFO: Deleting pod "simpletest-rc-to-be-deleted-5p84g" in namespace "gc-6126"
    Mar 13 20:04:45.038: INFO: Deleting pod "simpletest-rc-to-be-deleted-5svz7" in namespace "gc-6126"
    Mar 13 20:04:45.048: INFO: Deleting pod "simpletest-rc-to-be-deleted-68dkb" in namespace "gc-6126"
    Mar 13 20:04:45.075: INFO: Deleting pod "simpletest-rc-to-be-deleted-6dcxx" in namespace "gc-6126"
    Mar 13 20:04:45.093: INFO: Deleting pod "simpletest-rc-to-be-deleted-6ftjt" in namespace "gc-6126"
    Mar 13 20:04:45.106: INFO: Deleting pod "simpletest-rc-to-be-deleted-6hqb7" in namespace "gc-6126"
    Mar 13 20:04:45.116: INFO: Deleting pod "simpletest-rc-to-be-deleted-6lx2x" in namespace "gc-6126"
    Mar 13 20:04:45.124: INFO: Deleting pod "simpletest-rc-to-be-deleted-6xxr9" in namespace "gc-6126"
    Mar 13 20:04:45.130: INFO: Deleting pod "simpletest-rc-to-be-deleted-79lw9" in namespace "gc-6126"
    Mar 13 20:04:45.140: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ctsw" in namespace "gc-6126"
    Mar 13 20:04:45.152: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bphn" in namespace "gc-6126"
    Mar 13 20:04:45.160: INFO: Deleting pod "simpletest-rc-to-be-deleted-8h7xl" in namespace "gc-6126"
    Mar 13 20:04:45.177: INFO: Deleting pod "simpletest-rc-to-be-deleted-8kzxc" in namespace "gc-6126"
    Mar 13 20:04:45.213: INFO: Deleting pod "simpletest-rc-to-be-deleted-95c4v" in namespace "gc-6126"
    Mar 13 20:04:45.247: INFO: Deleting pod "simpletest-rc-to-be-deleted-9fjct" in namespace "gc-6126"
    Mar 13 20:04:45.284: INFO: Deleting pod "simpletest-rc-to-be-deleted-9pgnw" in namespace "gc-6126"
    Mar 13 20:04:45.311: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rg9b" in namespace "gc-6126"
    Mar 13 20:04:45.353: INFO: Deleting pod "simpletest-rc-to-be-deleted-9t85l" in namespace "gc-6126"
    Mar 13 20:04:45.358: INFO: Deleting pod "simpletest-rc-to-be-deleted-bhfbl" in namespace "gc-6126"
    Mar 13 20:04:45.364: INFO: Deleting pod "simpletest-rc-to-be-deleted-brhmn" in namespace "gc-6126"
    Mar 13 20:04:45.375: INFO: Deleting pod "simpletest-rc-to-be-deleted-c6ndp" in namespace "gc-6126"
    Mar 13 20:04:45.426: INFO: Deleting pod "simpletest-rc-to-be-deleted-cjgtp" in namespace "gc-6126"
    Mar 13 20:04:45.447: INFO: Deleting pod "simpletest-rc-to-be-deleted-cnklm" in namespace "gc-6126"
    Mar 13 20:04:45.496: INFO: Deleting pod "simpletest-rc-to-be-deleted-ctswd" in namespace "gc-6126"
    Mar 13 20:04:45.543: INFO: Deleting pod "simpletest-rc-to-be-deleted-d27d2" in namespace "gc-6126"
    Mar 13 20:04:45.562: INFO: Deleting pod "simpletest-rc-to-be-deleted-d7q4m" in namespace "gc-6126"
    Mar 13 20:04:45.617: INFO: Deleting pod "simpletest-rc-to-be-deleted-drqwj" in namespace "gc-6126"
    Mar 13 20:04:45.796: INFO: Deleting pod "simpletest-rc-to-be-deleted-f2c95" in namespace "gc-6126"
    Mar 13 20:04:45.809: INFO: Deleting pod "simpletest-rc-to-be-deleted-ffh44" in namespace "gc-6126"
    Mar 13 20:04:45.848: INFO: Deleting pod "simpletest-rc-to-be-deleted-fjgww" in namespace "gc-6126"
    Mar 13 20:04:45.860: INFO: Deleting pod "simpletest-rc-to-be-deleted-frhph" in namespace "gc-6126"
    Mar 13 20:04:45.882: INFO: Deleting pod "simpletest-rc-to-be-deleted-gzngw" in namespace "gc-6126"
    Mar 13 20:04:45.914: INFO: Deleting pod "simpletest-rc-to-be-deleted-hb8dv" in namespace "gc-6126"
    Mar 13 20:04:45.927: INFO: Deleting pod "simpletest-rc-to-be-deleted-hkqgs" in namespace "gc-6126"
    Mar 13 20:04:45.937: INFO: Deleting pod "simpletest-rc-to-be-deleted-hn6v4" in namespace "gc-6126"
    Mar 13 20:04:45.960: INFO: Deleting pod "simpletest-rc-to-be-deleted-jnwbr" in namespace "gc-6126"
    Mar 13 20:04:46.001: INFO: Deleting pod "simpletest-rc-to-be-deleted-kgt7w" in namespace "gc-6126"
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:04:46.021: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-6126" for this suite. 03/13/23 20:04:46.046
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:04:46.057
Mar 13 20:04:46.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename resourcequota 03/13/23 20:04:46.058
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:46.077
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:46.082
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160
STEP: Discovering how many secrets are in namespace by default 03/13/23 20:04:46.105
STEP: Counting existing ResourceQuota 03/13/23 20:04:51.109
STEP: Creating a ResourceQuota 03/13/23 20:04:56.113
STEP: Ensuring resource quota status is calculated 03/13/23 20:04:56.118
STEP: Creating a Secret 03/13/23 20:04:58.123
STEP: Ensuring resource quota status captures secret creation 03/13/23 20:04:58.135
STEP: Deleting a secret 03/13/23 20:05:00.14
STEP: Ensuring resource quota status released usage 03/13/23 20:05:00.144
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar 13 20:05:02.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-2895" for this suite. 03/13/23 20:05:02.174
------------------------------
â€¢ [SLOW TEST] [16.144 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:04:46.057
    Mar 13 20:04:46.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename resourcequota 03/13/23 20:04:46.058
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:04:46.077
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:04:46.082
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a secret. [Conformance]
      test/e2e/apimachinery/resource_quota.go:160
    STEP: Discovering how many secrets are in namespace by default 03/13/23 20:04:46.105
    STEP: Counting existing ResourceQuota 03/13/23 20:04:51.109
    STEP: Creating a ResourceQuota 03/13/23 20:04:56.113
    STEP: Ensuring resource quota status is calculated 03/13/23 20:04:56.118
    STEP: Creating a Secret 03/13/23 20:04:58.123
    STEP: Ensuring resource quota status captures secret creation 03/13/23 20:04:58.135
    STEP: Deleting a secret 03/13/23 20:05:00.14
    STEP: Ensuring resource quota status released usage 03/13/23 20:05:00.144
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:05:02.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-2895" for this suite. 03/13/23 20:05:02.174
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:05:02.21
Mar 13 20:05:02.210: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 20:05:02.213
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:02.28
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:02.308
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69
Mar 13 20:05:02.320: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties 03/13/23 20:05:04.475
Mar 13 20:05:04.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 create -f -'
Mar 13 20:05:05.706: INFO: stderr: ""
Mar 13 20:05:05.706: INFO: stdout: "e2e-test-crd-publish-openapi-3937-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Mar 13 20:05:05.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 delete e2e-test-crd-publish-openapi-3937-crds test-foo'
Mar 13 20:05:05.824: INFO: stderr: ""
Mar 13 20:05:05.824: INFO: stdout: "e2e-test-crd-publish-openapi-3937-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Mar 13 20:05:05.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 apply -f -'
Mar 13 20:05:06.072: INFO: stderr: ""
Mar 13 20:05:06.072: INFO: stdout: "e2e-test-crd-publish-openapi-3937-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Mar 13 20:05:06.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 delete e2e-test-crd-publish-openapi-3937-crds test-foo'
Mar 13 20:05:06.166: INFO: stderr: ""
Mar 13 20:05:06.166: INFO: stdout: "e2e-test-crd-publish-openapi-3937-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values 03/13/23 20:05:06.166
Mar 13 20:05:06.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 create -f -'
Mar 13 20:05:06.395: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema 03/13/23 20:05:06.395
Mar 13 20:05:06.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 create -f -'
Mar 13 20:05:06.621: INFO: rc: 1
Mar 13 20:05:06.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 apply -f -'
Mar 13 20:05:06.913: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties 03/13/23 20:05:06.913
Mar 13 20:05:06.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 create -f -'
Mar 13 20:05:07.138: INFO: rc: 1
Mar 13 20:05:07.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 apply -f -'
Mar 13 20:05:07.376: INFO: rc: 1
STEP: kubectl explain works to explain CR properties 03/13/23 20:05:07.376
Mar 13 20:05:07.376: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 explain e2e-test-crd-publish-openapi-3937-crds'
Mar 13 20:05:07.619: INFO: stderr: ""
Mar 13 20:05:07.619: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3937-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively 03/13/23 20:05:07.619
Mar 13 20:05:07.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 explain e2e-test-crd-publish-openapi-3937-crds.metadata'
Mar 13 20:05:07.878: INFO: stderr: ""
Mar 13 20:05:07.878: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3937-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Mar 13 20:05:07.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 explain e2e-test-crd-publish-openapi-3937-crds.spec'
Mar 13 20:05:08.123: INFO: stderr: ""
Mar 13 20:05:08.123: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3937-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Mar 13 20:05:08.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 explain e2e-test-crd-publish-openapi-3937-crds.spec.bars'
Mar 13 20:05:08.363: INFO: stderr: ""
Mar 13 20:05:08.364: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3937-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist 03/13/23 20:05:08.364
Mar 13 20:05:08.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 explain e2e-test-crd-publish-openapi-3937-crds.spec.bars2'
Mar 13 20:05:08.611: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:05:10.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-4614" for this suite. 03/13/23 20:05:10.461
------------------------------
â€¢ [SLOW TEST] [8.262 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:05:02.21
    Mar 13 20:05:02.210: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 20:05:02.213
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:02.28
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:02.308
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD with validation schema [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:69
    Mar 13 20:05:02.320: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: kubectl validation (kubectl create and apply) allows request with known and required properties 03/13/23 20:05:04.475
    Mar 13 20:05:04.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 create -f -'
    Mar 13 20:05:05.706: INFO: stderr: ""
    Mar 13 20:05:05.706: INFO: stdout: "e2e-test-crd-publish-openapi-3937-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
    Mar 13 20:05:05.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 delete e2e-test-crd-publish-openapi-3937-crds test-foo'
    Mar 13 20:05:05.824: INFO: stderr: ""
    Mar 13 20:05:05.824: INFO: stdout: "e2e-test-crd-publish-openapi-3937-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
    Mar 13 20:05:05.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 apply -f -'
    Mar 13 20:05:06.072: INFO: stderr: ""
    Mar 13 20:05:06.072: INFO: stdout: "e2e-test-crd-publish-openapi-3937-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
    Mar 13 20:05:06.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 delete e2e-test-crd-publish-openapi-3937-crds test-foo'
    Mar 13 20:05:06.166: INFO: stderr: ""
    Mar 13 20:05:06.166: INFO: stdout: "e2e-test-crd-publish-openapi-3937-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
    STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values 03/13/23 20:05:06.166
    Mar 13 20:05:06.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 create -f -'
    Mar 13 20:05:06.395: INFO: rc: 1
    STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema 03/13/23 20:05:06.395
    Mar 13 20:05:06.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 create -f -'
    Mar 13 20:05:06.621: INFO: rc: 1
    Mar 13 20:05:06.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 apply -f -'
    Mar 13 20:05:06.913: INFO: rc: 1
    STEP: kubectl validation (kubectl create and apply) rejects request without required properties 03/13/23 20:05:06.913
    Mar 13 20:05:06.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 create -f -'
    Mar 13 20:05:07.138: INFO: rc: 1
    Mar 13 20:05:07.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 --namespace=crd-publish-openapi-4614 apply -f -'
    Mar 13 20:05:07.376: INFO: rc: 1
    STEP: kubectl explain works to explain CR properties 03/13/23 20:05:07.376
    Mar 13 20:05:07.376: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 explain e2e-test-crd-publish-openapi-3937-crds'
    Mar 13 20:05:07.619: INFO: stderr: ""
    Mar 13 20:05:07.619: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3937-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
    STEP: kubectl explain works to explain CR properties recursively 03/13/23 20:05:07.619
    Mar 13 20:05:07.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 explain e2e-test-crd-publish-openapi-3937-crds.metadata'
    Mar 13 20:05:07.878: INFO: stderr: ""
    Mar 13 20:05:07.878: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3937-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
    Mar 13 20:05:07.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 explain e2e-test-crd-publish-openapi-3937-crds.spec'
    Mar 13 20:05:08.123: INFO: stderr: ""
    Mar 13 20:05:08.123: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3937-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
    Mar 13 20:05:08.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 explain e2e-test-crd-publish-openapi-3937-crds.spec.bars'
    Mar 13 20:05:08.363: INFO: stderr: ""
    Mar 13 20:05:08.364: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3937-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
    STEP: kubectl explain works to return error when explain is called on property that doesn't exist 03/13/23 20:05:08.364
    Mar 13 20:05:08.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=crd-publish-openapi-4614 explain e2e-test-crd-publish-openapi-3937-crds.spec.bars2'
    Mar 13 20:05:08.611: INFO: rc: 1
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:05:10.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-4614" for this suite. 03/13/23 20:05:10.461
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:05:10.475
Mar 13 20:05:10.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename job 03/13/23 20:05:10.476
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:10.504
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:10.508
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426
STEP: Creating a job 03/13/23 20:05:10.512
STEP: Ensuring job reaches completions 03/13/23 20:05:10.523
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Mar 13 20:05:24.528: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-9137" for this suite. 03/13/23 20:05:24.533
------------------------------
â€¢ [SLOW TEST] [14.062 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:05:10.475
    Mar 13 20:05:10.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename job 03/13/23 20:05:10.476
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:10.504
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:10.508
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
      test/e2e/apps/job.go:426
    STEP: Creating a job 03/13/23 20:05:10.512
    STEP: Ensuring job reaches completions 03/13/23 20:05:10.523
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:05:24.528: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-9137" for this suite. 03/13/23 20:05:24.533
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:135
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:05:24.539
Mar 13 20:05:24.540: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubelet-test 03/13/23 20:05:24.541
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:24.555
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:24.56
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:85
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:135
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Mar 13 20:05:24.587: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-9258" for this suite. 03/13/23 20:05:24.59
------------------------------
â€¢ [0.057 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:82
    should be possible to delete [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:135

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:05:24.539
    Mar 13 20:05:24.540: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubelet-test 03/13/23 20:05:24.541
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:24.555
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:24.56
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [BeforeEach] when scheduling a busybox command that always fails in a pod
      test/e2e/common/node/kubelet.go:85
    [It] should be possible to delete [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:135
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:05:24.587: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-9258" for this suite. 03/13/23 20:05:24.59
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:05:24.598
Mar 13 20:05:24.598: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 20:05:24.6
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:24.615
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:24.624
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 20:05:24.64
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 20:05:25.132
STEP: Deploying the webhook pod 03/13/23 20:05:25.138
STEP: Wait for the deployment to be ready 03/13/23 20:05:25.147
Mar 13 20:05:25.153: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/13/23 20:05:27.162
STEP: Verifying the service has paired with the endpoint 03/13/23 20:05:27.173
Mar 13 20:05:28.173: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API 03/13/23 20:05:28.179
STEP: create a namespace for the webhook 03/13/23 20:05:28.225
STEP: create a configmap should be unconditionally rejected by the webhook 03/13/23 20:05:28.231
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:05:28.254: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-1461" for this suite. 03/13/23 20:05:28.281
STEP: Destroying namespace "webhook-1461-markers" for this suite. 03/13/23 20:05:28.29
------------------------------
â€¢ [3.698 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:05:24.598
    Mar 13 20:05:24.598: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 20:05:24.6
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:24.615
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:24.624
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 20:05:24.64
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 20:05:25.132
    STEP: Deploying the webhook pod 03/13/23 20:05:25.138
    STEP: Wait for the deployment to be ready 03/13/23 20:05:25.147
    Mar 13 20:05:25.153: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/13/23 20:05:27.162
    STEP: Verifying the service has paired with the endpoint 03/13/23 20:05:27.173
    Mar 13 20:05:28.173: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should unconditionally reject operations on fail closed webhook [Conformance]
      test/e2e/apimachinery/webhook.go:239
    STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API 03/13/23 20:05:28.179
    STEP: create a namespace for the webhook 03/13/23 20:05:28.225
    STEP: create a configmap should be unconditionally rejected by the webhook 03/13/23 20:05:28.231
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:05:28.254: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-1461" for this suite. 03/13/23 20:05:28.281
    STEP: Destroying namespace "webhook-1461-markers" for this suite. 03/13/23 20:05:28.29
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:05:28.297
Mar 13 20:05:28.297: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename gc 03/13/23 20:05:28.298
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:28.328
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:28.355
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550
STEP: create the deployment 03/13/23 20:05:28.363
STEP: Wait for the Deployment to create new ReplicaSet 03/13/23 20:05:28.368
STEP: delete the deployment 03/13/23 20:05:28.884
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs 03/13/23 20:05:28.89
STEP: Gathering metrics 03/13/23 20:05:29.407
W0313 20:05:29.413769      21 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Mar 13 20:05:29.413: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar 13 20:05:29.414: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-4111" for this suite. 03/13/23 20:05:29.418
------------------------------
â€¢ [1.126 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:05:28.297
    Mar 13 20:05:28.297: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename gc 03/13/23 20:05:28.298
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:28.328
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:28.355
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
      test/e2e/apimachinery/garbage_collector.go:550
    STEP: create the deployment 03/13/23 20:05:28.363
    STEP: Wait for the Deployment to create new ReplicaSet 03/13/23 20:05:28.368
    STEP: delete the deployment 03/13/23 20:05:28.884
    STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs 03/13/23 20:05:28.89
    STEP: Gathering metrics 03/13/23 20:05:29.407
    W0313 20:05:29.413769      21 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Mar 13 20:05:29.413: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:05:29.414: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-4111" for this suite. 03/13/23 20:05:29.418
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:05:29.425
Mar 13 20:05:29.425: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 20:05:29.426
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:29.434
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:29.438
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57
STEP: Creating configMap with name configmap-test-volume-b1fbb2c9-4da3-4f81-8d11-c92a47e19ce8 03/13/23 20:05:29.44
STEP: Creating a pod to test consume configMaps 03/13/23 20:05:29.443
Mar 13 20:05:29.450: INFO: Waiting up to 5m0s for pod "pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5" in namespace "configmap-6096" to be "Succeeded or Failed"
Mar 13 20:05:29.452: INFO: Pod "pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.547388ms
Mar 13 20:05:31.458: INFO: Pod "pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007622534s
Mar 13 20:05:33.457: INFO: Pod "pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006696059s
STEP: Saw pod success 03/13/23 20:05:33.457
Mar 13 20:05:33.457: INFO: Pod "pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5" satisfied condition "Succeeded or Failed"
Mar 13 20:05:33.459: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5 container agnhost-container: <nil>
STEP: delete the pod 03/13/23 20:05:33.469
Mar 13 20:05:33.477: INFO: Waiting for pod pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5 to disappear
Mar 13 20:05:33.480: INFO: Pod pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 20:05:33.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-6096" for this suite. 03/13/23 20:05:33.484
------------------------------
â€¢ [4.063 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:05:29.425
    Mar 13 20:05:29.425: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 20:05:29.426
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:29.434
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:29.438
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:57
    STEP: Creating configMap with name configmap-test-volume-b1fbb2c9-4da3-4f81-8d11-c92a47e19ce8 03/13/23 20:05:29.44
    STEP: Creating a pod to test consume configMaps 03/13/23 20:05:29.443
    Mar 13 20:05:29.450: INFO: Waiting up to 5m0s for pod "pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5" in namespace "configmap-6096" to be "Succeeded or Failed"
    Mar 13 20:05:29.452: INFO: Pod "pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.547388ms
    Mar 13 20:05:31.458: INFO: Pod "pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007622534s
    Mar 13 20:05:33.457: INFO: Pod "pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006696059s
    STEP: Saw pod success 03/13/23 20:05:33.457
    Mar 13 20:05:33.457: INFO: Pod "pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5" satisfied condition "Succeeded or Failed"
    Mar 13 20:05:33.459: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5 container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 20:05:33.469
    Mar 13 20:05:33.477: INFO: Waiting for pod pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5 to disappear
    Mar 13 20:05:33.480: INFO: Pod pod-configmaps-f8723402-fbd3-49a3-956d-d2613cb3d0f5 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:05:33.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-6096" for this suite. 03/13/23 20:05:33.484
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl version
  should check is all data is printed  [Conformance]
  test/e2e/kubectl/kubectl.go:1685
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:05:33.49
Mar 13 20:05:33.490: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 20:05:33.492
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:33.502
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:33.505
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check is all data is printed  [Conformance]
  test/e2e/kubectl/kubectl.go:1685
Mar 13 20:05:33.508: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8177 version'
Mar 13 20:05:33.582: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Mar 13 20:05:33.582: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.2\", GitCommit:\"fc04e732bb3e7198d2fa44efa5457c7c6f8c0f5b\", GitTreeState:\"clean\", BuildDate:\"2023-02-22T13:39:03Z\", GoVersion:\"go1.19.6\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.7\nServer Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.2\", GitCommit:\"fc04e732bb3e7198d2fa44efa5457c7c6f8c0f5b\", GitTreeState:\"clean\", BuildDate:\"2023-02-22T13:32:22Z\", GoVersion:\"go1.19.6\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 20:05:33.582: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8177" for this suite. 03/13/23 20:05:33.586
------------------------------
â€¢ [0.099 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl version
  test/e2e/kubectl/kubectl.go:1679
    should check is all data is printed  [Conformance]
    test/e2e/kubectl/kubectl.go:1685

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:05:33.49
    Mar 13 20:05:33.490: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 20:05:33.492
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:33.502
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:33.505
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check is all data is printed  [Conformance]
      test/e2e/kubectl/kubectl.go:1685
    Mar 13 20:05:33.508: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-8177 version'
    Mar 13 20:05:33.582: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
    Mar 13 20:05:33.582: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.2\", GitCommit:\"fc04e732bb3e7198d2fa44efa5457c7c6f8c0f5b\", GitTreeState:\"clean\", BuildDate:\"2023-02-22T13:39:03Z\", GoVersion:\"go1.19.6\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.7\nServer Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.2\", GitCommit:\"fc04e732bb3e7198d2fa44efa5457c7c6f8c0f5b\", GitTreeState:\"clean\", BuildDate:\"2023-02-22T13:32:22Z\", GoVersion:\"go1.19.6\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:05:33.582: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8177" for this suite. 03/13/23 20:05:33.586
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:05:33.591
Mar 13 20:05:33.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename replication-controller 03/13/23 20:05:33.592
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:33.601
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:33.604
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402
STEP: Creating ReplicationController "e2e-rc-9v5wz" 03/13/23 20:05:33.607
Mar 13 20:05:33.612: INFO: Get Replication Controller "e2e-rc-9v5wz" to confirm replicas
Mar 13 20:05:34.616: INFO: Get Replication Controller "e2e-rc-9v5wz" to confirm replicas
Mar 13 20:05:34.619: INFO: Found 1 replicas for "e2e-rc-9v5wz" replication controller
STEP: Getting scale subresource for ReplicationController "e2e-rc-9v5wz" 03/13/23 20:05:34.619
STEP: Updating a scale subresource 03/13/23 20:05:34.621
STEP: Verifying replicas where modified for replication controller "e2e-rc-9v5wz" 03/13/23 20:05:34.625
Mar 13 20:05:34.625: INFO: Get Replication Controller "e2e-rc-9v5wz" to confirm replicas
Mar 13 20:05:35.632: INFO: Get Replication Controller "e2e-rc-9v5wz" to confirm replicas
Mar 13 20:05:35.635: INFO: Found 2 replicas for "e2e-rc-9v5wz" replication controller
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Mar 13 20:05:35.635: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-6518" for this suite. 03/13/23 20:05:35.646
------------------------------
â€¢ [2.059 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:05:33.591
    Mar 13 20:05:33.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename replication-controller 03/13/23 20:05:33.592
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:33.601
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:33.604
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should get and update a ReplicationController scale [Conformance]
      test/e2e/apps/rc.go:402
    STEP: Creating ReplicationController "e2e-rc-9v5wz" 03/13/23 20:05:33.607
    Mar 13 20:05:33.612: INFO: Get Replication Controller "e2e-rc-9v5wz" to confirm replicas
    Mar 13 20:05:34.616: INFO: Get Replication Controller "e2e-rc-9v5wz" to confirm replicas
    Mar 13 20:05:34.619: INFO: Found 1 replicas for "e2e-rc-9v5wz" replication controller
    STEP: Getting scale subresource for ReplicationController "e2e-rc-9v5wz" 03/13/23 20:05:34.619
    STEP: Updating a scale subresource 03/13/23 20:05:34.621
    STEP: Verifying replicas where modified for replication controller "e2e-rc-9v5wz" 03/13/23 20:05:34.625
    Mar 13 20:05:34.625: INFO: Get Replication Controller "e2e-rc-9v5wz" to confirm replicas
    Mar 13 20:05:35.632: INFO: Get Replication Controller "e2e-rc-9v5wz" to confirm replicas
    Mar 13 20:05:35.635: INFO: Found 2 replicas for "e2e-rc-9v5wz" replication controller
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:05:35.635: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-6518" for this suite. 03/13/23 20:05:35.646
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-network] Services
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:05:35.651
Mar 13 20:05:35.651: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 20:05:35.654
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:35.663
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:35.666
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213
STEP: creating service in namespace services-5424 03/13/23 20:05:35.669
STEP: creating service affinity-clusterip-transition in namespace services-5424 03/13/23 20:05:35.67
STEP: creating replication controller affinity-clusterip-transition in namespace services-5424 03/13/23 20:05:35.68
I0313 20:05:35.684901      21 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-5424, replica count: 3
I0313 20:05:38.735497      21 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar 13 20:05:38.740: INFO: Creating new exec pod
Mar 13 20:05:38.744: INFO: Waiting up to 5m0s for pod "execpod-affinitynpldm" in namespace "services-5424" to be "running"
Mar 13 20:05:38.747: INFO: Pod "execpod-affinitynpldm": Phase="Pending", Reason="", readiness=false. Elapsed: 2.380753ms
Mar 13 20:05:40.750: INFO: Pod "execpod-affinitynpldm": Phase="Running", Reason="", readiness=true. Elapsed: 2.006027421s
Mar 13 20:05:40.750: INFO: Pod "execpod-affinitynpldm" satisfied condition "running"
Mar 13 20:05:41.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5424 exec execpod-affinitynpldm -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip-transition 80'
Mar 13 20:05:41.955: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Mar 13 20:05:41.955: INFO: stdout: ""
Mar 13 20:05:41.955: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5424 exec execpod-affinitynpldm -- /bin/sh -x -c nc -v -z -w 2 10.109.66.76 80'
Mar 13 20:05:42.124: INFO: stderr: "+ nc -v -z -w 2 10.109.66.76 80\nConnection to 10.109.66.76 80 port [tcp/http] succeeded!\n"
Mar 13 20:05:42.124: INFO: stdout: ""
Mar 13 20:05:42.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5424 exec execpod-affinitynpldm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.109.66.76:80/ ; done'
Mar 13 20:05:42.426: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n"
Mar 13 20:05:42.427: INFO: stdout: "\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-hgptv\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-hgptv\naffinity-clusterip-transition-hgptv\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h"
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-hgptv
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-hgptv
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-hgptv
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5424 exec execpod-affinitynpldm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.109.66.76:80/ ; done'
Mar 13 20:05:42.772: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n"
Mar 13 20:05:42.773: INFO: stdout: "\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h"
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
Mar 13 20:05:42.773: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5424, will wait for the garbage collector to delete the pods 03/13/23 20:05:42.781
Mar 13 20:05:42.847: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.641424ms
Mar 13 20:05:42.951: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 103.365683ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 20:05:45.065: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-5424" for this suite. 03/13/23 20:05:45.068
------------------------------
â€¢ [SLOW TEST] [9.422 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:05:35.651
    Mar 13 20:05:35.651: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 20:05:35.654
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:35.663
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:35.666
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2213
    STEP: creating service in namespace services-5424 03/13/23 20:05:35.669
    STEP: creating service affinity-clusterip-transition in namespace services-5424 03/13/23 20:05:35.67
    STEP: creating replication controller affinity-clusterip-transition in namespace services-5424 03/13/23 20:05:35.68
    I0313 20:05:35.684901      21 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-5424, replica count: 3
    I0313 20:05:38.735497      21 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar 13 20:05:38.740: INFO: Creating new exec pod
    Mar 13 20:05:38.744: INFO: Waiting up to 5m0s for pod "execpod-affinitynpldm" in namespace "services-5424" to be "running"
    Mar 13 20:05:38.747: INFO: Pod "execpod-affinitynpldm": Phase="Pending", Reason="", readiness=false. Elapsed: 2.380753ms
    Mar 13 20:05:40.750: INFO: Pod "execpod-affinitynpldm": Phase="Running", Reason="", readiness=true. Elapsed: 2.006027421s
    Mar 13 20:05:40.750: INFO: Pod "execpod-affinitynpldm" satisfied condition "running"
    Mar 13 20:05:41.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5424 exec execpod-affinitynpldm -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip-transition 80'
    Mar 13 20:05:41.955: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
    Mar 13 20:05:41.955: INFO: stdout: ""
    Mar 13 20:05:41.955: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5424 exec execpod-affinitynpldm -- /bin/sh -x -c nc -v -z -w 2 10.109.66.76 80'
    Mar 13 20:05:42.124: INFO: stderr: "+ nc -v -z -w 2 10.109.66.76 80\nConnection to 10.109.66.76 80 port [tcp/http] succeeded!\n"
    Mar 13 20:05:42.124: INFO: stdout: ""
    Mar 13 20:05:42.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5424 exec execpod-affinitynpldm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.109.66.76:80/ ; done'
    Mar 13 20:05:42.426: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n"
    Mar 13 20:05:42.427: INFO: stdout: "\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-hgptv\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-vp49b\naffinity-clusterip-transition-hgptv\naffinity-clusterip-transition-hgptv\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h"
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-hgptv
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-vp49b
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-hgptv
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-hgptv
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.427: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=services-5424 exec execpod-affinitynpldm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.109.66.76:80/ ; done'
    Mar 13 20:05:42.772: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.66.76:80/\n"
    Mar 13 20:05:42.773: INFO: stdout: "\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h\naffinity-clusterip-transition-mpj5h"
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Received response from host: affinity-clusterip-transition-mpj5h
    Mar 13 20:05:42.773: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5424, will wait for the garbage collector to delete the pods 03/13/23 20:05:42.781
    Mar 13 20:05:42.847: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.641424ms
    Mar 13 20:05:42.951: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 103.365683ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:05:45.065: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-5424" for this suite. 03/13/23 20:05:45.068
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:05:45.075
Mar 13 20:05:45.076: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename daemonsets 03/13/23 20:05:45.077
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:45.088
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:45.092
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432
Mar 13 20:05:45.115: INFO: Create a RollingUpdate DaemonSet
Mar 13 20:05:45.119: INFO: Check that daemon pods launch on every node of the cluster
Mar 13 20:05:45.125: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 20:05:45.125: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 20:05:46.134: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 20:05:46.134: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
Mar 13 20:05:47.134: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar 13 20:05:47.135: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
Mar 13 20:05:47.135: INFO: Update the DaemonSet to trigger a rollout
Mar 13 20:05:47.144: INFO: Updating DaemonSet daemon-set
Mar 13 20:05:50.158: INFO: Roll back the DaemonSet before rollout is complete
Mar 13 20:05:50.168: INFO: Updating DaemonSet daemon-set
Mar 13 20:05:50.168: INFO: Make sure DaemonSet rollback is complete
Mar 13 20:05:50.171: INFO: Wrong image for pod: daemon-set-pfxzl. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
Mar 13 20:05:50.172: INFO: Pod daemon-set-pfxzl is not available
Mar 13 20:05:52.181: INFO: Pod daemon-set-wb2ff is not available
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 03/13/23 20:05:52.19
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5865, will wait for the garbage collector to delete the pods 03/13/23 20:05:52.191
Mar 13 20:05:52.253: INFO: Deleting DaemonSet.extensions daemon-set took: 7.492593ms
Mar 13 20:05:52.353: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.736591ms
Mar 13 20:05:54.058: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 20:05:54.058: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Mar 13 20:05:54.060: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41344"},"items":null}

Mar 13 20:05:54.064: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41344"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:05:54.074: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-5865" for this suite. 03/13/23 20:05:54.078
------------------------------
â€¢ [SLOW TEST] [9.008 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:05:45.075
    Mar 13 20:05:45.076: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename daemonsets 03/13/23 20:05:45.077
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:45.088
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:45.092
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should rollback without unnecessary restarts [Conformance]
      test/e2e/apps/daemon_set.go:432
    Mar 13 20:05:45.115: INFO: Create a RollingUpdate DaemonSet
    Mar 13 20:05:45.119: INFO: Check that daemon pods launch on every node of the cluster
    Mar 13 20:05:45.125: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 20:05:45.125: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 20:05:46.134: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 20:05:46.134: INFO: Node vke-automated-test-51df1d4fb06e is running 0 daemon pod, expected 1
    Mar 13 20:05:47.134: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar 13 20:05:47.135: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    Mar 13 20:05:47.135: INFO: Update the DaemonSet to trigger a rollout
    Mar 13 20:05:47.144: INFO: Updating DaemonSet daemon-set
    Mar 13 20:05:50.158: INFO: Roll back the DaemonSet before rollout is complete
    Mar 13 20:05:50.168: INFO: Updating DaemonSet daemon-set
    Mar 13 20:05:50.168: INFO: Make sure DaemonSet rollback is complete
    Mar 13 20:05:50.171: INFO: Wrong image for pod: daemon-set-pfxzl. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
    Mar 13 20:05:50.172: INFO: Pod daemon-set-pfxzl is not available
    Mar 13 20:05:52.181: INFO: Pod daemon-set-wb2ff is not available
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 03/13/23 20:05:52.19
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5865, will wait for the garbage collector to delete the pods 03/13/23 20:05:52.191
    Mar 13 20:05:52.253: INFO: Deleting DaemonSet.extensions daemon-set took: 7.492593ms
    Mar 13 20:05:52.353: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.736591ms
    Mar 13 20:05:54.058: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 20:05:54.058: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Mar 13 20:05:54.060: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41344"},"items":null}

    Mar 13 20:05:54.064: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41344"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:05:54.074: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-5865" for this suite. 03/13/23 20:05:54.078
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-network] Services
  should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:05:54.084
Mar 13 20:05:54.084: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 20:05:54.085
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:54.096
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:54.1
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219
STEP: fetching services 03/13/23 20:05:54.103
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 20:05:54.106: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6541" for this suite. 03/13/23 20:05:54.111
------------------------------
â€¢ [0.032 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:05:54.084
    Mar 13 20:05:54.084: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 20:05:54.085
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:54.096
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:54.1
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should find a service from listing all namespaces [Conformance]
      test/e2e/network/service.go:3219
    STEP: fetching services 03/13/23 20:05:54.103
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:05:54.106: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6541" for this suite. 03/13/23 20:05:54.111
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:05:54.121
Mar 13 20:05:54.121: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 20:05:54.122
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:54.133
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:54.136
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267
STEP: Creating a pod to test downward api env vars 03/13/23 20:05:54.139
Mar 13 20:05:54.146: INFO: Waiting up to 5m0s for pod "downward-api-508b909c-1c72-496a-8834-752b3d4ffcba" in namespace "downward-api-8134" to be "Succeeded or Failed"
Mar 13 20:05:54.150: INFO: Pod "downward-api-508b909c-1c72-496a-8834-752b3d4ffcba": Phase="Pending", Reason="", readiness=false. Elapsed: 2.948626ms
Mar 13 20:05:56.153: INFO: Pod "downward-api-508b909c-1c72-496a-8834-752b3d4ffcba": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006779929s
Mar 13 20:05:58.153: INFO: Pod "downward-api-508b909c-1c72-496a-8834-752b3d4ffcba": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006533992s
STEP: Saw pod success 03/13/23 20:05:58.153
Mar 13 20:05:58.153: INFO: Pod "downward-api-508b909c-1c72-496a-8834-752b3d4ffcba" satisfied condition "Succeeded or Failed"
Mar 13 20:05:58.156: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downward-api-508b909c-1c72-496a-8834-752b3d4ffcba container dapi-container: <nil>
STEP: delete the pod 03/13/23 20:05:58.165
Mar 13 20:05:58.174: INFO: Waiting for pod downward-api-508b909c-1c72-496a-8834-752b3d4ffcba to disappear
Mar 13 20:05:58.177: INFO: Pod downward-api-508b909c-1c72-496a-8834-752b3d4ffcba no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Mar 13 20:05:58.177: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-8134" for this suite. 03/13/23 20:05:58.18
------------------------------
â€¢ [4.065 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:05:54.121
    Mar 13 20:05:54.121: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 20:05:54.122
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:54.133
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:54.136
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide pod UID as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:267
    STEP: Creating a pod to test downward api env vars 03/13/23 20:05:54.139
    Mar 13 20:05:54.146: INFO: Waiting up to 5m0s for pod "downward-api-508b909c-1c72-496a-8834-752b3d4ffcba" in namespace "downward-api-8134" to be "Succeeded or Failed"
    Mar 13 20:05:54.150: INFO: Pod "downward-api-508b909c-1c72-496a-8834-752b3d4ffcba": Phase="Pending", Reason="", readiness=false. Elapsed: 2.948626ms
    Mar 13 20:05:56.153: INFO: Pod "downward-api-508b909c-1c72-496a-8834-752b3d4ffcba": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006779929s
    Mar 13 20:05:58.153: INFO: Pod "downward-api-508b909c-1c72-496a-8834-752b3d4ffcba": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006533992s
    STEP: Saw pod success 03/13/23 20:05:58.153
    Mar 13 20:05:58.153: INFO: Pod "downward-api-508b909c-1c72-496a-8834-752b3d4ffcba" satisfied condition "Succeeded or Failed"
    Mar 13 20:05:58.156: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downward-api-508b909c-1c72-496a-8834-752b3d4ffcba container dapi-container: <nil>
    STEP: delete the pod 03/13/23 20:05:58.165
    Mar 13 20:05:58.174: INFO: Waiting for pod downward-api-508b909c-1c72-496a-8834-752b3d4ffcba to disappear
    Mar 13 20:05:58.177: INFO: Pod downward-api-508b909c-1c72-496a-8834-752b3d4ffcba no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:05:58.177: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-8134" for this suite. 03/13/23 20:05:58.18
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:05:58.189
Mar 13 20:05:58.189: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 20:05:58.19
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:58.201
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:58.204
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166
STEP: Creating a pod to test downward api env vars 03/13/23 20:05:58.207
Mar 13 20:05:58.226: INFO: Waiting up to 5m0s for pod "downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1" in namespace "downward-api-4144" to be "Succeeded or Failed"
Mar 13 20:05:58.234: INFO: Pod "downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1": Phase="Pending", Reason="", readiness=false. Elapsed: 6.965703ms
Mar 13 20:06:00.238: INFO: Pod "downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01148969s
Mar 13 20:06:02.255: INFO: Pod "downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028067875s
STEP: Saw pod success 03/13/23 20:06:02.255
Mar 13 20:06:02.255: INFO: Pod "downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1" satisfied condition "Succeeded or Failed"
Mar 13 20:06:02.279: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1 container dapi-container: <nil>
STEP: delete the pod 03/13/23 20:06:02.32
Mar 13 20:06:02.438: INFO: Waiting for pod downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1 to disappear
Mar 13 20:06:02.448: INFO: Pod downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Mar 13 20:06:02.448: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-4144" for this suite. 03/13/23 20:06:02.468
------------------------------
â€¢ [4.291 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:05:58.189
    Mar 13 20:05:58.189: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 20:05:58.19
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:05:58.201
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:05:58.204
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:166
    STEP: Creating a pod to test downward api env vars 03/13/23 20:05:58.207
    Mar 13 20:05:58.226: INFO: Waiting up to 5m0s for pod "downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1" in namespace "downward-api-4144" to be "Succeeded or Failed"
    Mar 13 20:05:58.234: INFO: Pod "downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1": Phase="Pending", Reason="", readiness=false. Elapsed: 6.965703ms
    Mar 13 20:06:00.238: INFO: Pod "downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01148969s
    Mar 13 20:06:02.255: INFO: Pod "downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028067875s
    STEP: Saw pod success 03/13/23 20:06:02.255
    Mar 13 20:06:02.255: INFO: Pod "downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1" satisfied condition "Succeeded or Failed"
    Mar 13 20:06:02.279: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1 container dapi-container: <nil>
    STEP: delete the pod 03/13/23 20:06:02.32
    Mar 13 20:06:02.438: INFO: Waiting for pod downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1 to disappear
    Mar 13 20:06:02.448: INFO: Pod downward-api-b7631af4-8ce4-45e2-b42a-4c15d087f8c1 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:06:02.448: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-4144" for this suite. 03/13/23 20:06:02.468
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:06:02.502
Mar 13 20:06:02.503: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename watch 03/13/23 20:06:02.504
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:02.564
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:02.582
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257
STEP: creating a watch on configmaps with a certain label 03/13/23 20:06:02.6
STEP: creating a new configmap 03/13/23 20:06:02.61
STEP: modifying the configmap once 03/13/23 20:06:02.646
STEP: changing the label value of the configmap 03/13/23 20:06:02.672
STEP: Expecting to observe a delete notification for the watched object 03/13/23 20:06:02.692
Mar 13 20:06:02.692: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4233  d84d6e24-ace1-44bd-8c01-f04ad1a03249 41459 0 2023-03-13 20:06:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-13 20:06:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Mar 13 20:06:02.693: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4233  d84d6e24-ace1-44bd-8c01-f04ad1a03249 41460 0 2023-03-13 20:06:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-13 20:06:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar 13 20:06:02.693: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4233  d84d6e24-ace1-44bd-8c01-f04ad1a03249 41461 0 2023-03-13 20:06:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-13 20:06:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time 03/13/23 20:06:02.693
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements 03/13/23 20:06:02.739
STEP: changing the label value of the configmap back 03/13/23 20:06:12.74
STEP: modifying the configmap a third time 03/13/23 20:06:12.753
STEP: deleting the configmap 03/13/23 20:06:12.764
STEP: Expecting to observe an add notification for the watched object when the label value was restored 03/13/23 20:06:12.775
Mar 13 20:06:12.776: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4233  d84d6e24-ace1-44bd-8c01-f04ad1a03249 41504 0 2023-03-13 20:06:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-13 20:06:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar 13 20:06:12.776: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4233  d84d6e24-ace1-44bd-8c01-f04ad1a03249 41505 0 2023-03-13 20:06:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-13 20:06:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar 13 20:06:12.776: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4233  d84d6e24-ace1-44bd-8c01-f04ad1a03249 41506 0 2023-03-13 20:06:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-13 20:06:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Mar 13 20:06:12.777: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-4233" for this suite. 03/13/23 20:06:12.783
------------------------------
â€¢ [SLOW TEST] [10.286 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:06:02.502
    Mar 13 20:06:02.503: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename watch 03/13/23 20:06:02.504
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:02.564
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:02.582
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
      test/e2e/apimachinery/watch.go:257
    STEP: creating a watch on configmaps with a certain label 03/13/23 20:06:02.6
    STEP: creating a new configmap 03/13/23 20:06:02.61
    STEP: modifying the configmap once 03/13/23 20:06:02.646
    STEP: changing the label value of the configmap 03/13/23 20:06:02.672
    STEP: Expecting to observe a delete notification for the watched object 03/13/23 20:06:02.692
    Mar 13 20:06:02.692: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4233  d84d6e24-ace1-44bd-8c01-f04ad1a03249 41459 0 2023-03-13 20:06:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-13 20:06:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar 13 20:06:02.693: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4233  d84d6e24-ace1-44bd-8c01-f04ad1a03249 41460 0 2023-03-13 20:06:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-13 20:06:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar 13 20:06:02.693: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4233  d84d6e24-ace1-44bd-8c01-f04ad1a03249 41461 0 2023-03-13 20:06:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-13 20:06:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying the configmap a second time 03/13/23 20:06:02.693
    STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements 03/13/23 20:06:02.739
    STEP: changing the label value of the configmap back 03/13/23 20:06:12.74
    STEP: modifying the configmap a third time 03/13/23 20:06:12.753
    STEP: deleting the configmap 03/13/23 20:06:12.764
    STEP: Expecting to observe an add notification for the watched object when the label value was restored 03/13/23 20:06:12.775
    Mar 13 20:06:12.776: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4233  d84d6e24-ace1-44bd-8c01-f04ad1a03249 41504 0 2023-03-13 20:06:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-13 20:06:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar 13 20:06:12.776: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4233  d84d6e24-ace1-44bd-8c01-f04ad1a03249 41505 0 2023-03-13 20:06:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-13 20:06:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar 13 20:06:12.776: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4233  d84d6e24-ace1-44bd-8c01-f04ad1a03249 41506 0 2023-03-13 20:06:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-13 20:06:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:06:12.777: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-4233" for this suite. 03/13/23 20:06:12.783
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:06:12.795
Mar 13 20:06:12.795: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 20:06:12.797
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:12.822
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:12.826
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation 03/13/23 20:06:12.83
Mar 13 20:06:12.831: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 20:06:14.551: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:06:20.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-9944" for this suite. 03/13/23 20:06:20.867
------------------------------
â€¢ [SLOW TEST] [8.075 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:06:12.795
    Mar 13 20:06:12.795: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename crd-publish-openapi 03/13/23 20:06:12.797
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:12.822
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:12.826
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of same group and version but different kinds [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:357
    STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation 03/13/23 20:06:12.83
    Mar 13 20:06:12.831: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 20:06:14.551: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:06:20.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-9944" for this suite. 03/13/23 20:06:20.867
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:06:20.876
Mar 13 20:06:20.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename namespaces 03/13/23 20:06:20.877
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:20.887
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:20.89
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366
STEP: Updating Namespace "namespaces-9053" 03/13/23 20:06:20.892
Mar 13 20:06:20.898: INFO: Namespace "namespaces-9053" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"fc5c0549-5916-43cc-b1a7-d8d6fc91ff6c", "kubernetes.io/metadata.name":"namespaces-9053", "namespaces-9053":"updated", "pod-security.kubernetes.io/enforce":"baseline"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:06:20.898: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-9053" for this suite. 03/13/23 20:06:20.901
------------------------------
â€¢ [0.028 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:06:20.876
    Mar 13 20:06:20.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename namespaces 03/13/23 20:06:20.877
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:20.887
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:20.89
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply an update to a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:366
    STEP: Updating Namespace "namespaces-9053" 03/13/23 20:06:20.892
    Mar 13 20:06:20.898: INFO: Namespace "namespaces-9053" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"fc5c0549-5916-43cc-b1a7-d8d6fc91ff6c", "kubernetes.io/metadata.name":"namespaces-9053", "namespaces-9053":"updated", "pod-security.kubernetes.io/enforce":"baseline"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:06:20.898: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-9053" for this suite. 03/13/23 20:06:20.901
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController
  should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:06:20.907
Mar 13 20:06:20.907: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename replication-controller 03/13/23 20:06:20.908
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:20.92
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:20.923
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101
STEP: Given a ReplicationController is created 03/13/23 20:06:20.927
STEP: When the matched label of one of its pods change 03/13/23 20:06:20.931
Mar 13 20:06:20.933: INFO: Pod name pod-release: Found 0 pods out of 1
Mar 13 20:06:25.938: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released 03/13/23 20:06:25.948
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Mar 13 20:06:25.952: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-4110" for this suite. 03/13/23 20:06:25.96
------------------------------
â€¢ [SLOW TEST] [5.069 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:06:20.907
    Mar 13 20:06:20.907: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename replication-controller 03/13/23 20:06:20.908
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:20.92
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:20.923
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should release no longer matching pods [Conformance]
      test/e2e/apps/rc.go:101
    STEP: Given a ReplicationController is created 03/13/23 20:06:20.927
    STEP: When the matched label of one of its pods change 03/13/23 20:06:20.931
    Mar 13 20:06:20.933: INFO: Pod name pod-release: Found 0 pods out of 1
    Mar 13 20:06:25.938: INFO: Pod name pod-release: Found 1 pods out of 1
    STEP: Then the pod is released 03/13/23 20:06:25.948
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:06:25.952: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-4110" for this suite. 03/13/23 20:06:25.96
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:195
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:06:26.034
Mar 13 20:06:26.034: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename container-runtime 03/13/23 20:06:26.035
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:26.095
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:26.098
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:195
STEP: create the container 03/13/23 20:06:26.101
STEP: wait for the container to reach Succeeded 03/13/23 20:06:26.106
STEP: get the container status 03/13/23 20:06:30.124
STEP: the container should be terminated 03/13/23 20:06:30.127
STEP: the termination message should be set 03/13/23 20:06:30.127
Mar 13 20:06:30.127: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container 03/13/23 20:06:30.127
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Mar 13 20:06:30.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-813" for this suite. 03/13/23 20:06:30.143
------------------------------
â€¢ [4.113 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:195

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:06:26.034
    Mar 13 20:06:26.034: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename container-runtime 03/13/23 20:06:26.035
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:26.095
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:26.098
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:195
    STEP: create the container 03/13/23 20:06:26.101
    STEP: wait for the container to reach Succeeded 03/13/23 20:06:26.106
    STEP: get the container status 03/13/23 20:06:30.124
    STEP: the container should be terminated 03/13/23 20:06:30.127
    STEP: the termination message should be set 03/13/23 20:06:30.127
    Mar 13 20:06:30.127: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
    STEP: delete the container 03/13/23 20:06:30.127
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:06:30.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-813" for this suite. 03/13/23 20:06:30.143
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:06:30.151
Mar 13 20:06:30.151: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename namespaces 03/13/23 20:06:30.154
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:30.162
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:30.165
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268
STEP: creating a Namespace 03/13/23 20:06:30.167
STEP: patching the Namespace 03/13/23 20:06:30.174
STEP: get the Namespace and ensuring it has the label 03/13/23 20:06:30.178
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:06:30.179: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-6386" for this suite. 03/13/23 20:06:30.182
STEP: Destroying namespace "nspatchtest-051064e9-62f3-462c-9043-90d8b5fa67c9-3081" for this suite. 03/13/23 20:06:30.186
------------------------------
â€¢ [0.038 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:06:30.151
    Mar 13 20:06:30.151: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename namespaces 03/13/23 20:06:30.154
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:30.162
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:30.165
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should patch a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:268
    STEP: creating a Namespace 03/13/23 20:06:30.167
    STEP: patching the Namespace 03/13/23 20:06:30.174
    STEP: get the Namespace and ensuring it has the label 03/13/23 20:06:30.178
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:06:30.179: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-6386" for this suite. 03/13/23 20:06:30.182
    STEP: Destroying namespace "nspatchtest-051064e9-62f3-462c-9043-90d8b5fa67c9-3081" for this suite. 03/13/23 20:06:30.186
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Proxy server
  should support proxy with --port 0  [Conformance]
  test/e2e/kubectl/kubectl.go:1787
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:06:30.192
Mar 13 20:06:30.192: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename kubectl 03/13/23 20:06:30.193
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:30.201
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:30.203
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should support proxy with --port 0  [Conformance]
  test/e2e/kubectl/kubectl.go:1787
STEP: starting the proxy server 03/13/23 20:06:30.206
Mar 13 20:06:30.206: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7334 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output 03/13/23 20:06:30.274
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar 13 20:06:30.285: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-7334" for this suite. 03/13/23 20:06:30.288
------------------------------
â€¢ [0.100 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Proxy server
  test/e2e/kubectl/kubectl.go:1780
    should support proxy with --port 0  [Conformance]
    test/e2e/kubectl/kubectl.go:1787

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:06:30.192
    Mar 13 20:06:30.192: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename kubectl 03/13/23 20:06:30.193
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:30.201
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:30.203
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should support proxy with --port 0  [Conformance]
      test/e2e/kubectl/kubectl.go:1787
    STEP: starting the proxy server 03/13/23 20:06:30.206
    Mar 13 20:06:30.206: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=kubectl-7334 proxy -p 0 --disable-filter'
    STEP: curling proxy /api/ output 03/13/23 20:06:30.274
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:06:30.285: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-7334" for this suite. 03/13/23 20:06:30.288
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:06:30.294
Mar 13 20:06:30.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename emptydir 03/13/23 20:06:30.296
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:30.303
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:30.306
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177
STEP: Creating a pod to test emptydir 0666 on node default medium 03/13/23 20:06:30.308
Mar 13 20:06:30.313: INFO: Waiting up to 5m0s for pod "pod-44dec831-be51-4998-b634-cf1e11d35b89" in namespace "emptydir-7294" to be "Succeeded or Failed"
Mar 13 20:06:30.316: INFO: Pod "pod-44dec831-be51-4998-b634-cf1e11d35b89": Phase="Pending", Reason="", readiness=false. Elapsed: 2.109859ms
Mar 13 20:06:32.324: INFO: Pod "pod-44dec831-be51-4998-b634-cf1e11d35b89": Phase="Running", Reason="", readiness=false. Elapsed: 2.010404934s
Mar 13 20:06:34.323: INFO: Pod "pod-44dec831-be51-4998-b634-cf1e11d35b89": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009874443s
STEP: Saw pod success 03/13/23 20:06:34.323
Mar 13 20:06:34.324: INFO: Pod "pod-44dec831-be51-4998-b634-cf1e11d35b89" satisfied condition "Succeeded or Failed"
Mar 13 20:06:34.326: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-44dec831-be51-4998-b634-cf1e11d35b89 container test-container: <nil>
STEP: delete the pod 03/13/23 20:06:34.334
Mar 13 20:06:34.342: INFO: Waiting for pod pod-44dec831-be51-4998-b634-cf1e11d35b89 to disappear
Mar 13 20:06:34.344: INFO: Pod pod-44dec831-be51-4998-b634-cf1e11d35b89 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar 13 20:06:34.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-7294" for this suite. 03/13/23 20:06:34.348
------------------------------
â€¢ [4.060 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:06:30.294
    Mar 13 20:06:30.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename emptydir 03/13/23 20:06:30.296
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:30.303
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:30.306
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:177
    STEP: Creating a pod to test emptydir 0666 on node default medium 03/13/23 20:06:30.308
    Mar 13 20:06:30.313: INFO: Waiting up to 5m0s for pod "pod-44dec831-be51-4998-b634-cf1e11d35b89" in namespace "emptydir-7294" to be "Succeeded or Failed"
    Mar 13 20:06:30.316: INFO: Pod "pod-44dec831-be51-4998-b634-cf1e11d35b89": Phase="Pending", Reason="", readiness=false. Elapsed: 2.109859ms
    Mar 13 20:06:32.324: INFO: Pod "pod-44dec831-be51-4998-b634-cf1e11d35b89": Phase="Running", Reason="", readiness=false. Elapsed: 2.010404934s
    Mar 13 20:06:34.323: INFO: Pod "pod-44dec831-be51-4998-b634-cf1e11d35b89": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009874443s
    STEP: Saw pod success 03/13/23 20:06:34.323
    Mar 13 20:06:34.324: INFO: Pod "pod-44dec831-be51-4998-b634-cf1e11d35b89" satisfied condition "Succeeded or Failed"
    Mar 13 20:06:34.326: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-44dec831-be51-4998-b634-cf1e11d35b89 container test-container: <nil>
    STEP: delete the pod 03/13/23 20:06:34.334
    Mar 13 20:06:34.342: INFO: Waiting for pod pod-44dec831-be51-4998-b634-cf1e11d35b89 to disappear
    Mar 13 20:06:34.344: INFO: Pod pod-44dec831-be51-4998-b634-cf1e11d35b89 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:06:34.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-7294" for this suite. 03/13/23 20:06:34.348
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63
[BeforeEach] [sig-network] HostPort
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:06:34.369
Mar 13 20:06:34.369: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename hostport 03/13/23 20:06:34.37
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:34.38
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:34.382
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled 03/13/23 20:06:34.388
Mar 13 20:06:34.394: INFO: Waiting up to 5m0s for pod "pod1" in namespace "hostport-9972" to be "running and ready"
Mar 13 20:06:34.396: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.499152ms
Mar 13 20:06:34.397: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 20:06:36.400: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.00621198s
Mar 13 20:06:36.400: INFO: The phase of Pod pod1 is Running (Ready = true)
Mar 13 20:06:36.400: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.1.96.5 on the node which pod1 resides and expect scheduled 03/13/23 20:06:36.4
Mar 13 20:06:36.404: INFO: Waiting up to 5m0s for pod "pod2" in namespace "hostport-9972" to be "running and ready"
Mar 13 20:06:36.407: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.436733ms
Mar 13 20:06:36.407: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 20:06:38.412: INFO: Pod "pod2": Phase="Running", Reason="", readiness=false. Elapsed: 2.007308463s
Mar 13 20:06:38.412: INFO: The phase of Pod pod2 is Running (Ready = false)
Mar 13 20:06:40.411: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.006249266s
Mar 13 20:06:40.411: INFO: The phase of Pod pod2 is Running (Ready = true)
Mar 13 20:06:40.411: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.1.96.5 but use UDP protocol on the node which pod2 resides 03/13/23 20:06:40.411
Mar 13 20:06:40.415: INFO: Waiting up to 5m0s for pod "pod3" in namespace "hostport-9972" to be "running and ready"
Mar 13 20:06:40.417: INFO: Pod "pod3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.14738ms
Mar 13 20:06:40.417: INFO: The phase of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 20:06:42.422: INFO: Pod "pod3": Phase="Running", Reason="", readiness=true. Elapsed: 2.007482078s
Mar 13 20:06:42.422: INFO: The phase of Pod pod3 is Running (Ready = true)
Mar 13 20:06:42.422: INFO: Pod "pod3" satisfied condition "running and ready"
Mar 13 20:06:42.429: INFO: Waiting up to 5m0s for pod "e2e-host-exec" in namespace "hostport-9972" to be "running and ready"
Mar 13 20:06:42.432: INFO: Pod "e2e-host-exec": Phase="Pending", Reason="", readiness=false. Elapsed: 2.704125ms
Mar 13 20:06:42.432: INFO: The phase of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Mar 13 20:06:44.436: INFO: Pod "e2e-host-exec": Phase="Running", Reason="", readiness=true. Elapsed: 2.006425007s
Mar 13 20:06:44.436: INFO: The phase of Pod e2e-host-exec is Running (Ready = true)
Mar 13 20:06:44.436: INFO: Pod "e2e-host-exec" satisfied condition "running and ready"
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 03/13/23 20:06:44.438
Mar 13 20:06:44.439: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.1.96.5 http://127.0.0.1:54323/hostname] Namespace:hostport-9972 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 20:06:44.439: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 20:06:44.440: INFO: ExecWithOptions: Clientset creation
Mar 13 20:06:44.440: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9972/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.1.96.5+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.1.96.5, port: 54323 03/13/23 20:06:44.531
Mar 13 20:06:44.531: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.1.96.5:54323/hostname] Namespace:hostport-9972 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 20:06:44.531: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 20:06:44.532: INFO: ExecWithOptions: Clientset creation
Mar 13 20:06:44.532: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9972/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.1.96.5%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.1.96.5, port: 54323 UDP 03/13/23 20:06:44.611
Mar 13 20:06:44.611: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.1.96.5 54323] Namespace:hostport-9972 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar 13 20:06:44.611: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
Mar 13 20:06:44.612: INFO: ExecWithOptions: Clientset creation
Mar 13 20:06:44.612: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9972/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.1.96.5+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/node/init/init.go:32
Mar 13 20:06:49.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] HostPort
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] HostPort
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] HostPort
  tear down framework | framework.go:193
STEP: Destroying namespace "hostport-9972" for this suite. 03/13/23 20:06:49.687
------------------------------
â€¢ [SLOW TEST] [15.324 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] HostPort
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:06:34.369
    Mar 13 20:06:34.369: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename hostport 03/13/23 20:06:34.37
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:34.38
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:34.382
    [BeforeEach] [sig-network] HostPort
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] HostPort
      test/e2e/network/hostport.go:49
    [It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
      test/e2e/network/hostport.go:63
    STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled 03/13/23 20:06:34.388
    Mar 13 20:06:34.394: INFO: Waiting up to 5m0s for pod "pod1" in namespace "hostport-9972" to be "running and ready"
    Mar 13 20:06:34.396: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.499152ms
    Mar 13 20:06:34.397: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 20:06:36.400: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.00621198s
    Mar 13 20:06:36.400: INFO: The phase of Pod pod1 is Running (Ready = true)
    Mar 13 20:06:36.400: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.1.96.5 on the node which pod1 resides and expect scheduled 03/13/23 20:06:36.4
    Mar 13 20:06:36.404: INFO: Waiting up to 5m0s for pod "pod2" in namespace "hostport-9972" to be "running and ready"
    Mar 13 20:06:36.407: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.436733ms
    Mar 13 20:06:36.407: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 20:06:38.412: INFO: Pod "pod2": Phase="Running", Reason="", readiness=false. Elapsed: 2.007308463s
    Mar 13 20:06:38.412: INFO: The phase of Pod pod2 is Running (Ready = false)
    Mar 13 20:06:40.411: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.006249266s
    Mar 13 20:06:40.411: INFO: The phase of Pod pod2 is Running (Ready = true)
    Mar 13 20:06:40.411: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.1.96.5 but use UDP protocol on the node which pod2 resides 03/13/23 20:06:40.411
    Mar 13 20:06:40.415: INFO: Waiting up to 5m0s for pod "pod3" in namespace "hostport-9972" to be "running and ready"
    Mar 13 20:06:40.417: INFO: Pod "pod3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.14738ms
    Mar 13 20:06:40.417: INFO: The phase of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 20:06:42.422: INFO: Pod "pod3": Phase="Running", Reason="", readiness=true. Elapsed: 2.007482078s
    Mar 13 20:06:42.422: INFO: The phase of Pod pod3 is Running (Ready = true)
    Mar 13 20:06:42.422: INFO: Pod "pod3" satisfied condition "running and ready"
    Mar 13 20:06:42.429: INFO: Waiting up to 5m0s for pod "e2e-host-exec" in namespace "hostport-9972" to be "running and ready"
    Mar 13 20:06:42.432: INFO: Pod "e2e-host-exec": Phase="Pending", Reason="", readiness=false. Elapsed: 2.704125ms
    Mar 13 20:06:42.432: INFO: The phase of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 20:06:44.436: INFO: Pod "e2e-host-exec": Phase="Running", Reason="", readiness=true. Elapsed: 2.006425007s
    Mar 13 20:06:44.436: INFO: The phase of Pod e2e-host-exec is Running (Ready = true)
    Mar 13 20:06:44.436: INFO: Pod "e2e-host-exec" satisfied condition "running and ready"
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 03/13/23 20:06:44.438
    Mar 13 20:06:44.439: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.1.96.5 http://127.0.0.1:54323/hostname] Namespace:hostport-9972 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 20:06:44.439: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 20:06:44.440: INFO: ExecWithOptions: Clientset creation
    Mar 13 20:06:44.440: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9972/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.1.96.5+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.1.96.5, port: 54323 03/13/23 20:06:44.531
    Mar 13 20:06:44.531: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.1.96.5:54323/hostname] Namespace:hostport-9972 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 20:06:44.531: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 20:06:44.532: INFO: ExecWithOptions: Clientset creation
    Mar 13 20:06:44.532: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9972/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.1.96.5%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.1.96.5, port: 54323 UDP 03/13/23 20:06:44.611
    Mar 13 20:06:44.611: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.1.96.5 54323] Namespace:hostport-9972 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar 13 20:06:44.611: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    Mar 13 20:06:44.612: INFO: ExecWithOptions: Clientset creation
    Mar 13 20:06:44.612: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9972/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.1.96.5+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    [AfterEach] [sig-network] HostPort
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:06:49.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] HostPort
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] HostPort
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] HostPort
      tear down framework | framework.go:193
    STEP: Destroying namespace "hostport-9972" for this suite. 03/13/23 20:06:49.687
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] Job
  should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:06:49.7
Mar 13 20:06:49.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename job 03/13/23 20:06:49.702
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:49.731
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:49.734
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636
STEP: Creating a job 03/13/23 20:06:49.737
STEP: Ensure pods equal to parallelism count is attached to the job 03/13/23 20:06:49.743
STEP: patching /status 03/13/23 20:06:51.747
STEP: updating /status 03/13/23 20:06:51.752
STEP: get /status 03/13/23 20:06:51.778
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Mar 13 20:06:51.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-1293" for this suite. 03/13/23 20:06:51.784
------------------------------
â€¢ [2.088 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:06:49.7
    Mar 13 20:06:49.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename job 03/13/23 20:06:49.702
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:49.731
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:49.734
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a job status [Conformance]
      test/e2e/apps/job.go:636
    STEP: Creating a job 03/13/23 20:06:49.737
    STEP: Ensure pods equal to parallelism count is attached to the job 03/13/23 20:06:49.743
    STEP: patching /status 03/13/23 20:06:51.747
    STEP: updating /status 03/13/23 20:06:51.752
    STEP: get /status 03/13/23 20:06:51.778
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:06:51.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-1293" for this suite. 03/13/23 20:06:51.784
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version
  should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39
[BeforeEach] [sig-api-machinery] server version
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:06:51.793
Mar 13 20:06:51.793: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename server-version 03/13/23 20:06:51.794
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:51.803
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:51.806
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/metrics/init/init.go:31
[It] should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39
STEP: Request ServerVersion 03/13/23 20:06:51.809
STEP: Confirm major version 03/13/23 20:06:51.81
Mar 13 20:06:51.810: INFO: Major version: 1
STEP: Confirm minor version 03/13/23 20:06:51.81
Mar 13 20:06:51.810: INFO: cleanMinorVersion: 26
Mar 13 20:06:51.810: INFO: Minor version: 26
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/node/init/init.go:32
Mar 13 20:06:51.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] server version
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] server version
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] server version
  tear down framework | framework.go:193
STEP: Destroying namespace "server-version-9903" for this suite. 03/13/23 20:06:51.814
------------------------------
â€¢ [0.024 seconds]
[sig-api-machinery] server version
test/e2e/apimachinery/framework.go:23
  should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] server version
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:06:51.793
    Mar 13 20:06:51.793: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename server-version 03/13/23 20:06:51.794
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:51.803
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:51.806
    [BeforeEach] [sig-api-machinery] server version
      test/e2e/framework/metrics/init/init.go:31
    [It] should find the server version [Conformance]
      test/e2e/apimachinery/server_version.go:39
    STEP: Request ServerVersion 03/13/23 20:06:51.809
    STEP: Confirm major version 03/13/23 20:06:51.81
    Mar 13 20:06:51.810: INFO: Major version: 1
    STEP: Confirm minor version 03/13/23 20:06:51.81
    Mar 13 20:06:51.810: INFO: cleanMinorVersion: 26
    Mar 13 20:06:51.810: INFO: Minor version: 26
    [AfterEach] [sig-api-machinery] server version
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:06:51.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] server version
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] server version
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] server version
      tear down framework | framework.go:193
    STEP: Destroying namespace "server-version-9903" for this suite. 03/13/23 20:06:51.814
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial]
  should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:06:51.82
Mar 13 20:06:51.820: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename daemonsets 03/13/23 20:06:51.821
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:51.828
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:51.831
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194
Mar 13 20:06:51.843: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes. 03/13/23 20:06:51.847
Mar 13 20:06:51.849: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 20:06:51.849: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched. 03/13/23 20:06:51.849
Mar 13 20:06:51.859: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 20:06:51.859: INFO: Node vke-automated-test-f5b1d7d2d722 is running 0 daemon pod, expected 1
Mar 13 20:06:52.863: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 20:06:52.863: INFO: Node vke-automated-test-f5b1d7d2d722 is running 0 daemon pod, expected 1
Mar 13 20:06:53.864: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar 13 20:06:53.864: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled 03/13/23 20:06:53.867
Mar 13 20:06:53.878: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar 13 20:06:53.878: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Mar 13 20:06:54.888: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 20:06:54.894: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate 03/13/23 20:06:54.894
Mar 13 20:06:54.912: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 20:06:54.912: INFO: Node vke-automated-test-f5b1d7d2d722 is running 0 daemon pod, expected 1
Mar 13 20:06:55.916: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 20:06:55.916: INFO: Node vke-automated-test-f5b1d7d2d722 is running 0 daemon pod, expected 1
Mar 13 20:06:56.917: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 20:06:56.917: INFO: Node vke-automated-test-f5b1d7d2d722 is running 0 daemon pod, expected 1
Mar 13 20:06:57.916: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar 13 20:06:57.916: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 03/13/23 20:06:57.922
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6239, will wait for the garbage collector to delete the pods 03/13/23 20:06:57.924
Mar 13 20:06:57.982: INFO: Deleting DaemonSet.extensions daemon-set took: 4.209397ms
Mar 13 20:06:58.083: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.957179ms
Mar 13 20:07:00.186: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar 13 20:07:00.186: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Mar 13 20:07:00.188: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42042"},"items":null}

Mar 13 20:07:00.190: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42042"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:07:00.203: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-6239" for this suite. 03/13/23 20:07:00.208
------------------------------
â€¢ [SLOW TEST] [8.393 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:06:51.82
    Mar 13 20:06:51.820: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename daemonsets 03/13/23 20:06:51.821
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:06:51.828
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:06:51.831
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should run and stop complex daemon [Conformance]
      test/e2e/apps/daemon_set.go:194
    Mar 13 20:06:51.843: INFO: Creating daemon "daemon-set" with a node selector
    STEP: Initially, daemon pods should not be running on any nodes. 03/13/23 20:06:51.847
    Mar 13 20:06:51.849: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 20:06:51.849: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    STEP: Change node label to blue, check that daemon pod is launched. 03/13/23 20:06:51.849
    Mar 13 20:06:51.859: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 20:06:51.859: INFO: Node vke-automated-test-f5b1d7d2d722 is running 0 daemon pod, expected 1
    Mar 13 20:06:52.863: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 20:06:52.863: INFO: Node vke-automated-test-f5b1d7d2d722 is running 0 daemon pod, expected 1
    Mar 13 20:06:53.864: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar 13 20:06:53.864: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
    STEP: Update the node label to green, and wait for daemons to be unscheduled 03/13/23 20:06:53.867
    Mar 13 20:06:53.878: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar 13 20:06:53.878: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
    Mar 13 20:06:54.888: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 20:06:54.894: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate 03/13/23 20:06:54.894
    Mar 13 20:06:54.912: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 20:06:54.912: INFO: Node vke-automated-test-f5b1d7d2d722 is running 0 daemon pod, expected 1
    Mar 13 20:06:55.916: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 20:06:55.916: INFO: Node vke-automated-test-f5b1d7d2d722 is running 0 daemon pod, expected 1
    Mar 13 20:06:56.917: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 20:06:56.917: INFO: Node vke-automated-test-f5b1d7d2d722 is running 0 daemon pod, expected 1
    Mar 13 20:06:57.916: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar 13 20:06:57.916: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 03/13/23 20:06:57.922
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6239, will wait for the garbage collector to delete the pods 03/13/23 20:06:57.924
    Mar 13 20:06:57.982: INFO: Deleting DaemonSet.extensions daemon-set took: 4.209397ms
    Mar 13 20:06:58.083: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.957179ms
    Mar 13 20:07:00.186: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar 13 20:07:00.186: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Mar 13 20:07:00.188: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42042"},"items":null}

    Mar 13 20:07:00.190: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42042"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:07:00.203: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-6239" for this suite. 03/13/23 20:07:00.208
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:07:00.22
Mar 13 20:07:00.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename pods 03/13/23 20:07:00.221
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:07:00.229
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:07:00.232
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444
Mar 13 20:07:00.240: INFO: Waiting up to 5m0s for pod "server-envvars-eaf36165-06c4-46eb-ab0d-2a5106f2ec84" in namespace "pods-1574" to be "running and ready"
Mar 13 20:07:00.243: INFO: Pod "server-envvars-eaf36165-06c4-46eb-ab0d-2a5106f2ec84": Phase="Pending", Reason="", readiness=false. Elapsed: 2.687194ms
Mar 13 20:07:00.243: INFO: The phase of Pod server-envvars-eaf36165-06c4-46eb-ab0d-2a5106f2ec84 is Pending, waiting for it to be Running (with Ready = true)
Mar 13 20:07:02.253: INFO: Pod "server-envvars-eaf36165-06c4-46eb-ab0d-2a5106f2ec84": Phase="Running", Reason="", readiness=true. Elapsed: 2.012512362s
Mar 13 20:07:02.253: INFO: The phase of Pod server-envvars-eaf36165-06c4-46eb-ab0d-2a5106f2ec84 is Running (Ready = true)
Mar 13 20:07:02.253: INFO: Pod "server-envvars-eaf36165-06c4-46eb-ab0d-2a5106f2ec84" satisfied condition "running and ready"
Mar 13 20:07:02.305: INFO: Waiting up to 5m0s for pod "client-envvars-8f396e4b-57d4-4327-a621-784af379fb62" in namespace "pods-1574" to be "Succeeded or Failed"
Mar 13 20:07:02.316: INFO: Pod "client-envvars-8f396e4b-57d4-4327-a621-784af379fb62": Phase="Pending", Reason="", readiness=false. Elapsed: 10.378524ms
Mar 13 20:07:04.322: INFO: Pod "client-envvars-8f396e4b-57d4-4327-a621-784af379fb62": Phase="Running", Reason="", readiness=true. Elapsed: 2.01677113s
Mar 13 20:07:06.320: INFO: Pod "client-envvars-8f396e4b-57d4-4327-a621-784af379fb62": Phase="Running", Reason="", readiness=false. Elapsed: 4.014909773s
Mar 13 20:07:08.320: INFO: Pod "client-envvars-8f396e4b-57d4-4327-a621-784af379fb62": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.014966259s
STEP: Saw pod success 03/13/23 20:07:08.32
Mar 13 20:07:08.321: INFO: Pod "client-envvars-8f396e4b-57d4-4327-a621-784af379fb62" satisfied condition "Succeeded or Failed"
Mar 13 20:07:08.331: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod client-envvars-8f396e4b-57d4-4327-a621-784af379fb62 container env3cont: <nil>
STEP: delete the pod 03/13/23 20:07:08.342
Mar 13 20:07:08.357: INFO: Waiting for pod client-envvars-8f396e4b-57d4-4327-a621-784af379fb62 to disappear
Mar 13 20:07:08.363: INFO: Pod client-envvars-8f396e4b-57d4-4327-a621-784af379fb62 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar 13 20:07:08.364: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-1574" for this suite. 03/13/23 20:07:08.369
------------------------------
â€¢ [SLOW TEST] [8.158 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:07:00.22
    Mar 13 20:07:00.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename pods 03/13/23 20:07:00.221
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:07:00.229
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:07:00.232
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should contain environment variables for services [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:444
    Mar 13 20:07:00.240: INFO: Waiting up to 5m0s for pod "server-envvars-eaf36165-06c4-46eb-ab0d-2a5106f2ec84" in namespace "pods-1574" to be "running and ready"
    Mar 13 20:07:00.243: INFO: Pod "server-envvars-eaf36165-06c4-46eb-ab0d-2a5106f2ec84": Phase="Pending", Reason="", readiness=false. Elapsed: 2.687194ms
    Mar 13 20:07:00.243: INFO: The phase of Pod server-envvars-eaf36165-06c4-46eb-ab0d-2a5106f2ec84 is Pending, waiting for it to be Running (with Ready = true)
    Mar 13 20:07:02.253: INFO: Pod "server-envvars-eaf36165-06c4-46eb-ab0d-2a5106f2ec84": Phase="Running", Reason="", readiness=true. Elapsed: 2.012512362s
    Mar 13 20:07:02.253: INFO: The phase of Pod server-envvars-eaf36165-06c4-46eb-ab0d-2a5106f2ec84 is Running (Ready = true)
    Mar 13 20:07:02.253: INFO: Pod "server-envvars-eaf36165-06c4-46eb-ab0d-2a5106f2ec84" satisfied condition "running and ready"
    Mar 13 20:07:02.305: INFO: Waiting up to 5m0s for pod "client-envvars-8f396e4b-57d4-4327-a621-784af379fb62" in namespace "pods-1574" to be "Succeeded or Failed"
    Mar 13 20:07:02.316: INFO: Pod "client-envvars-8f396e4b-57d4-4327-a621-784af379fb62": Phase="Pending", Reason="", readiness=false. Elapsed: 10.378524ms
    Mar 13 20:07:04.322: INFO: Pod "client-envvars-8f396e4b-57d4-4327-a621-784af379fb62": Phase="Running", Reason="", readiness=true. Elapsed: 2.01677113s
    Mar 13 20:07:06.320: INFO: Pod "client-envvars-8f396e4b-57d4-4327-a621-784af379fb62": Phase="Running", Reason="", readiness=false. Elapsed: 4.014909773s
    Mar 13 20:07:08.320: INFO: Pod "client-envvars-8f396e4b-57d4-4327-a621-784af379fb62": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.014966259s
    STEP: Saw pod success 03/13/23 20:07:08.32
    Mar 13 20:07:08.321: INFO: Pod "client-envvars-8f396e4b-57d4-4327-a621-784af379fb62" satisfied condition "Succeeded or Failed"
    Mar 13 20:07:08.331: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod client-envvars-8f396e4b-57d4-4327-a621-784af379fb62 container env3cont: <nil>
    STEP: delete the pod 03/13/23 20:07:08.342
    Mar 13 20:07:08.357: INFO: Waiting for pod client-envvars-8f396e4b-57d4-4327-a621-784af379fb62 to disappear
    Mar 13 20:07:08.363: INFO: Pod client-envvars-8f396e4b-57d4-4327-a621-784af379fb62 no longer exists
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:07:08.364: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-1574" for this suite. 03/13/23 20:07:08.369
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange
  should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239
[BeforeEach] [sig-scheduling] LimitRange
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:07:08.383
Mar 13 20:07:08.383: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename limitrange 03/13/23 20:07:08.385
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:07:08.412
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:07:08.417
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:31
[It] should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239
STEP: Creating LimitRange "e2e-limitrange-d9s2l" in namespace "limitrange-1000" 03/13/23 20:07:08.424
STEP: Creating another limitRange in another namespace 03/13/23 20:07:08.433
Mar 13 20:07:08.460: INFO: Namespace "e2e-limitrange-d9s2l-1098" created
Mar 13 20:07:08.460: INFO: Creating LimitRange "e2e-limitrange-d9s2l" in namespace "e2e-limitrange-d9s2l-1098"
STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-d9s2l" 03/13/23 20:07:08.467
Mar 13 20:07:08.477: INFO: Found 2 limitRanges
STEP: Patching LimitRange "e2e-limitrange-d9s2l" in "limitrange-1000" namespace 03/13/23 20:07:08.477
Mar 13 20:07:08.493: INFO: LimitRange "e2e-limitrange-d9s2l" has been patched
STEP: Delete LimitRange "e2e-limitrange-d9s2l" by Collection with labelSelector: "e2e-limitrange-d9s2l=patched" 03/13/23 20:07:08.494
STEP: Confirm that the limitRange "e2e-limitrange-d9s2l" has been deleted 03/13/23 20:07:08.526
Mar 13 20:07:08.526: INFO: Requesting list of LimitRange to confirm quantity
Mar 13 20:07:08.548: INFO: Found 0 LimitRange with label "e2e-limitrange-d9s2l=patched"
Mar 13 20:07:08.548: INFO: LimitRange "e2e-limitrange-d9s2l" has been deleted.
STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-d9s2l" 03/13/23 20:07:08.549
Mar 13 20:07:08.561: INFO: Found 1 limitRange
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/node/init/init.go:32
Mar 13 20:07:08.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  tear down framework | framework.go:193
STEP: Destroying namespace "limitrange-1000" for this suite. 03/13/23 20:07:08.593
STEP: Destroying namespace "e2e-limitrange-d9s2l-1098" for this suite. 03/13/23 20:07:08.634
------------------------------
â€¢ [0.277 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] LimitRange
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:07:08.383
    Mar 13 20:07:08.383: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename limitrange 03/13/23 20:07:08.385
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:07:08.412
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:07:08.417
    [BeforeEach] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:31
    [It] should list, patch and delete a LimitRange by collection [Conformance]
      test/e2e/scheduling/limit_range.go:239
    STEP: Creating LimitRange "e2e-limitrange-d9s2l" in namespace "limitrange-1000" 03/13/23 20:07:08.424
    STEP: Creating another limitRange in another namespace 03/13/23 20:07:08.433
    Mar 13 20:07:08.460: INFO: Namespace "e2e-limitrange-d9s2l-1098" created
    Mar 13 20:07:08.460: INFO: Creating LimitRange "e2e-limitrange-d9s2l" in namespace "e2e-limitrange-d9s2l-1098"
    STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-d9s2l" 03/13/23 20:07:08.467
    Mar 13 20:07:08.477: INFO: Found 2 limitRanges
    STEP: Patching LimitRange "e2e-limitrange-d9s2l" in "limitrange-1000" namespace 03/13/23 20:07:08.477
    Mar 13 20:07:08.493: INFO: LimitRange "e2e-limitrange-d9s2l" has been patched
    STEP: Delete LimitRange "e2e-limitrange-d9s2l" by Collection with labelSelector: "e2e-limitrange-d9s2l=patched" 03/13/23 20:07:08.494
    STEP: Confirm that the limitRange "e2e-limitrange-d9s2l" has been deleted 03/13/23 20:07:08.526
    Mar 13 20:07:08.526: INFO: Requesting list of LimitRange to confirm quantity
    Mar 13 20:07:08.548: INFO: Found 0 LimitRange with label "e2e-limitrange-d9s2l=patched"
    Mar 13 20:07:08.548: INFO: LimitRange "e2e-limitrange-d9s2l" has been deleted.
    STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-d9s2l" 03/13/23 20:07:08.549
    Mar 13 20:07:08.561: INFO: Found 1 limitRange
    [AfterEach] [sig-scheduling] LimitRange
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:07:08.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      tear down framework | framework.go:193
    STEP: Destroying namespace "limitrange-1000" for this suite. 03/13/23 20:07:08.593
    STEP: Destroying namespace "e2e-limitrange-d9s2l-1098" for this suite. 03/13/23 20:07:08.634
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/apps/statefulset.go:697
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:07:08.667
Mar 13 20:07:08.667: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename statefulset 03/13/23 20:07:08.668
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:07:08.722
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:07:08.726
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-5029 03/13/23 20:07:08.733
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/apps/statefulset.go:697
STEP: Creating stateful set ss in namespace statefulset-5029 03/13/23 20:07:08.741
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5029 03/13/23 20:07:08.759
Mar 13 20:07:08.764: INFO: Found 0 stateful pods, waiting for 1
Mar 13 20:07:18.768: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod 03/13/23 20:07:18.768
Mar 13 20:07:18.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar 13 20:07:19.011: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar 13 20:07:19.011: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar 13 20:07:19.011: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar 13 20:07:19.014: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Mar 13 20:07:29.021: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Mar 13 20:07:29.021: INFO: Waiting for statefulset status.replicas updated to 0
Mar 13 20:07:29.054: INFO: POD   NODE                             PHASE    GRACE  CONDITIONS
Mar 13 20:07:29.054: INFO: ss-0  vke-automated-test-51df1d4fb06e  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:08 +0000 UTC  }]
Mar 13 20:07:29.054: INFO: 
Mar 13 20:07:29.054: INFO: StatefulSet ss has not reached scale 3, at 1
Mar 13 20:07:30.059: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.993801041s
Mar 13 20:07:31.063: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.989223729s
Mar 13 20:07:32.069: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.984454522s
Mar 13 20:07:33.073: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.979071433s
Mar 13 20:07:34.078: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.974730471s
Mar 13 20:07:35.083: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.969968604s
Mar 13 20:07:36.088: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.964715122s
Mar 13 20:07:37.092: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.960332008s
Mar 13 20:07:38.097: INFO: Verifying statefulset ss doesn't scale past 3 for another 955.609531ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5029 03/13/23 20:07:39.097
Mar 13 20:07:39.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar 13 20:07:39.269: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar 13 20:07:39.269: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar 13 20:07:39.269: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar 13 20:07:39.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar 13 20:07:39.466: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Mar 13 20:07:39.466: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar 13 20:07:39.466: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar 13 20:07:39.466: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar 13 20:07:39.634: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Mar 13 20:07:39.634: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar 13 20:07:39.634: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar 13 20:07:39.637: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
Mar 13 20:07:49.648: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Mar 13 20:07:49.648: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Mar 13 20:07:49.648: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod 03/13/23 20:07:49.648
Mar 13 20:07:49.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar 13 20:07:49.829: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar 13 20:07:49.829: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar 13 20:07:49.829: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar 13 20:07:49.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar 13 20:07:49.995: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar 13 20:07:49.995: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar 13 20:07:49.995: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar 13 20:07:49.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar 13 20:07:50.187: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar 13 20:07:50.187: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar 13 20:07:50.187: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar 13 20:07:50.187: INFO: Waiting for statefulset status.replicas updated to 0
Mar 13 20:07:50.191: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
Mar 13 20:08:00.201: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Mar 13 20:08:00.201: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Mar 13 20:08:00.201: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Mar 13 20:08:00.214: INFO: POD   NODE                             PHASE    GRACE  CONDITIONS
Mar 13 20:08:00.214: INFO: ss-0  vke-automated-test-51df1d4fb06e  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:08 +0000 UTC  }]
Mar 13 20:08:00.214: INFO: ss-1  vke-automated-test-f5b1d7d2d722  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  }]
Mar 13 20:08:00.214: INFO: ss-2  vke-automated-test-51df1d4fb06e  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  }]
Mar 13 20:08:00.215: INFO: 
Mar 13 20:08:00.215: INFO: StatefulSet ss has not reached scale 0, at 3
Mar 13 20:08:01.219: INFO: POD   NODE                             PHASE    GRACE  CONDITIONS
Mar 13 20:08:01.219: INFO: ss-0  vke-automated-test-51df1d4fb06e  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:08 +0000 UTC  }]
Mar 13 20:08:01.219: INFO: ss-1  vke-automated-test-f5b1d7d2d722  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  }]
Mar 13 20:08:01.219: INFO: ss-2  vke-automated-test-51df1d4fb06e  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  }]
Mar 13 20:08:01.219: INFO: 
Mar 13 20:08:01.219: INFO: StatefulSet ss has not reached scale 0, at 3
Mar 13 20:08:02.223: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.991154796s
Mar 13 20:08:03.233: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.986564208s
Mar 13 20:08:04.244: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.976233171s
Mar 13 20:08:05.250: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.965694321s
Mar 13 20:08:06.253: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.960154367s
Mar 13 20:08:07.259: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.956280324s
Mar 13 20:08:08.263: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.950972991s
Mar 13 20:08:09.268: INFO: Verifying statefulset ss doesn't scale past 0 for another 946.701421ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5029 03/13/23 20:08:10.268
Mar 13 20:08:10.281: INFO: Scaling statefulset ss to 0
Mar 13 20:08:10.302: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar 13 20:08:10.306: INFO: Deleting all statefulset in ns statefulset-5029
Mar 13 20:08:10.310: INFO: Scaling statefulset ss to 0
Mar 13 20:08:10.325: INFO: Waiting for statefulset status.replicas updated to 0
Mar 13 20:08:10.328: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar 13 20:08:10.348: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-5029" for this suite. 03/13/23 20:08:10.357
------------------------------
â€¢ [SLOW TEST] [61.714 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/apps/statefulset.go:697

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:07:08.667
    Mar 13 20:07:08.667: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename statefulset 03/13/23 20:07:08.668
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:07:08.722
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:07:08.726
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-5029 03/13/23 20:07:08.733
    [It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
      test/e2e/apps/statefulset.go:697
    STEP: Creating stateful set ss in namespace statefulset-5029 03/13/23 20:07:08.741
    STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5029 03/13/23 20:07:08.759
    Mar 13 20:07:08.764: INFO: Found 0 stateful pods, waiting for 1
    Mar 13 20:07:18.768: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod 03/13/23 20:07:18.768
    Mar 13 20:07:18.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar 13 20:07:19.011: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar 13 20:07:19.011: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar 13 20:07:19.011: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar 13 20:07:19.014: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
    Mar 13 20:07:29.021: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Mar 13 20:07:29.021: INFO: Waiting for statefulset status.replicas updated to 0
    Mar 13 20:07:29.054: INFO: POD   NODE                             PHASE    GRACE  CONDITIONS
    Mar 13 20:07:29.054: INFO: ss-0  vke-automated-test-51df1d4fb06e  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:08 +0000 UTC  }]
    Mar 13 20:07:29.054: INFO: 
    Mar 13 20:07:29.054: INFO: StatefulSet ss has not reached scale 3, at 1
    Mar 13 20:07:30.059: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.993801041s
    Mar 13 20:07:31.063: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.989223729s
    Mar 13 20:07:32.069: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.984454522s
    Mar 13 20:07:33.073: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.979071433s
    Mar 13 20:07:34.078: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.974730471s
    Mar 13 20:07:35.083: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.969968604s
    Mar 13 20:07:36.088: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.964715122s
    Mar 13 20:07:37.092: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.960332008s
    Mar 13 20:07:38.097: INFO: Verifying statefulset ss doesn't scale past 3 for another 955.609531ms
    STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5029 03/13/23 20:07:39.097
    Mar 13 20:07:39.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar 13 20:07:39.269: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar 13 20:07:39.269: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar 13 20:07:39.269: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar 13 20:07:39.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar 13 20:07:39.466: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
    Mar 13 20:07:39.466: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar 13 20:07:39.466: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar 13 20:07:39.466: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar 13 20:07:39.634: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
    Mar 13 20:07:39.634: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar 13 20:07:39.634: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar 13 20:07:39.637: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
    Mar 13 20:07:49.648: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Mar 13 20:07:49.648: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Mar 13 20:07:49.648: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Scale down will not halt with unhealthy stateful pod 03/13/23 20:07:49.648
    Mar 13 20:07:49.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar 13 20:07:49.829: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar 13 20:07:49.829: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar 13 20:07:49.829: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar 13 20:07:49.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar 13 20:07:49.995: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar 13 20:07:49.995: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar 13 20:07:49.995: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar 13 20:07:49.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671153298 --namespace=statefulset-5029 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar 13 20:07:50.187: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar 13 20:07:50.187: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar 13 20:07:50.187: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar 13 20:07:50.187: INFO: Waiting for statefulset status.replicas updated to 0
    Mar 13 20:07:50.191: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
    Mar 13 20:08:00.201: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Mar 13 20:08:00.201: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
    Mar 13 20:08:00.201: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
    Mar 13 20:08:00.214: INFO: POD   NODE                             PHASE    GRACE  CONDITIONS
    Mar 13 20:08:00.214: INFO: ss-0  vke-automated-test-51df1d4fb06e  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:08 +0000 UTC  }]
    Mar 13 20:08:00.214: INFO: ss-1  vke-automated-test-f5b1d7d2d722  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  }]
    Mar 13 20:08:00.214: INFO: ss-2  vke-automated-test-51df1d4fb06e  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  }]
    Mar 13 20:08:00.215: INFO: 
    Mar 13 20:08:00.215: INFO: StatefulSet ss has not reached scale 0, at 3
    Mar 13 20:08:01.219: INFO: POD   NODE                             PHASE    GRACE  CONDITIONS
    Mar 13 20:08:01.219: INFO: ss-0  vke-automated-test-51df1d4fb06e  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:08 +0000 UTC  }]
    Mar 13 20:08:01.219: INFO: ss-1  vke-automated-test-f5b1d7d2d722  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  }]
    Mar 13 20:08:01.219: INFO: ss-2  vke-automated-test-51df1d4fb06e  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-13 20:07:29 +0000 UTC  }]
    Mar 13 20:08:01.219: INFO: 
    Mar 13 20:08:01.219: INFO: StatefulSet ss has not reached scale 0, at 3
    Mar 13 20:08:02.223: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.991154796s
    Mar 13 20:08:03.233: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.986564208s
    Mar 13 20:08:04.244: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.976233171s
    Mar 13 20:08:05.250: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.965694321s
    Mar 13 20:08:06.253: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.960154367s
    Mar 13 20:08:07.259: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.956280324s
    Mar 13 20:08:08.263: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.950972991s
    Mar 13 20:08:09.268: INFO: Verifying statefulset ss doesn't scale past 0 for another 946.701421ms
    STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5029 03/13/23 20:08:10.268
    Mar 13 20:08:10.281: INFO: Scaling statefulset ss to 0
    Mar 13 20:08:10.302: INFO: Waiting for statefulset status.replicas updated to 0
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar 13 20:08:10.306: INFO: Deleting all statefulset in ns statefulset-5029
    Mar 13 20:08:10.310: INFO: Scaling statefulset ss to 0
    Mar 13 20:08:10.325: INFO: Waiting for statefulset status.replicas updated to 0
    Mar 13 20:08:10.328: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:08:10.348: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-5029" for this suite. 03/13/23 20:08:10.357
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:08:10.382
Mar 13 20:08:10.384: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 20:08:10.385
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:08:10.4
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:08:10.403
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249
STEP: Creating a pod to test downward API volume plugin 03/13/23 20:08:10.408
Mar 13 20:08:10.419: INFO: Waiting up to 5m0s for pod "downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1" in namespace "downward-api-9266" to be "Succeeded or Failed"
Mar 13 20:08:10.424: INFO: Pod "downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.644544ms
Mar 13 20:08:12.436: INFO: Pod "downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016699164s
Mar 13 20:08:14.427: INFO: Pod "downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008210343s
STEP: Saw pod success 03/13/23 20:08:14.427
Mar 13 20:08:14.427: INFO: Pod "downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1" satisfied condition "Succeeded or Failed"
Mar 13 20:08:14.430: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1 container client-container: <nil>
STEP: delete the pod 03/13/23 20:08:14.438
Mar 13 20:08:14.445: INFO: Waiting for pod downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1 to disappear
Mar 13 20:08:14.447: INFO: Pod downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar 13 20:08:14.447: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-9266" for this suite. 03/13/23 20:08:14.45
------------------------------
â€¢ [4.072 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:08:10.382
    Mar 13 20:08:10.384: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 20:08:10.385
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:08:10.4
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:08:10.403
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:249
    STEP: Creating a pod to test downward API volume plugin 03/13/23 20:08:10.408
    Mar 13 20:08:10.419: INFO: Waiting up to 5m0s for pod "downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1" in namespace "downward-api-9266" to be "Succeeded or Failed"
    Mar 13 20:08:10.424: INFO: Pod "downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.644544ms
    Mar 13 20:08:12.436: INFO: Pod "downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016699164s
    Mar 13 20:08:14.427: INFO: Pod "downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008210343s
    STEP: Saw pod success 03/13/23 20:08:14.427
    Mar 13 20:08:14.427: INFO: Pod "downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1" satisfied condition "Succeeded or Failed"
    Mar 13 20:08:14.430: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1 container client-container: <nil>
    STEP: delete the pod 03/13/23 20:08:14.438
    Mar 13 20:08:14.445: INFO: Waiting for pod downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1 to disappear
    Mar 13 20:08:14.447: INFO: Pod downwardapi-volume-fcbac8d0-1b3f-472a-af6e-e6eb3e6b26b1 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:08:14.447: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-9266" for this suite. 03/13/23 20:08:14.45
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-network] Services
  should provide secure master service  [Conformance]
  test/e2e/network/service.go:777
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:08:14.458
Mar 13 20:08:14.458: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename services 03/13/23 20:08:14.459
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:08:14.468
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:08:14.471
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should provide secure master service  [Conformance]
  test/e2e/network/service.go:777
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar 13 20:08:14.476: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-8476" for this suite. 03/13/23 20:08:14.48
------------------------------
â€¢ [0.026 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should provide secure master service  [Conformance]
  test/e2e/network/service.go:777

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:08:14.458
    Mar 13 20:08:14.458: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename services 03/13/23 20:08:14.459
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:08:14.468
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:08:14.471
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should provide secure master service  [Conformance]
      test/e2e/network/service.go:777
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:08:14.476: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-8476" for this suite. 03/13/23 20:08:14.48
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:08:14.488
Mar 13 20:08:14.488: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename downward-api 03/13/23 20:08:14.489
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:08:14.497
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:08:14.501
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68
STEP: Creating a pod to test downward API volume plugin 03/13/23 20:08:14.505
Mar 13 20:08:14.511: INFO: Waiting up to 5m0s for pod "downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36" in namespace "downward-api-1327" to be "Succeeded or Failed"
Mar 13 20:08:14.514: INFO: Pod "downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36": Phase="Pending", Reason="", readiness=false. Elapsed: 2.762884ms
Mar 13 20:08:16.518: INFO: Pod "downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00685304s
Mar 13 20:08:18.518: INFO: Pod "downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006291006s
STEP: Saw pod success 03/13/23 20:08:18.518
Mar 13 20:08:18.518: INFO: Pod "downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36" satisfied condition "Succeeded or Failed"
Mar 13 20:08:18.520: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36 container client-container: <nil>
STEP: delete the pod 03/13/23 20:08:18.527
Mar 13 20:08:18.534: INFO: Waiting for pod downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36 to disappear
Mar 13 20:08:18.537: INFO: Pod downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar 13 20:08:18.537: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-1327" for this suite. 03/13/23 20:08:18.541
------------------------------
â€¢ [4.056 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:08:14.488
    Mar 13 20:08:14.488: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename downward-api 03/13/23 20:08:14.489
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:08:14.497
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:08:14.501
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:68
    STEP: Creating a pod to test downward API volume plugin 03/13/23 20:08:14.505
    Mar 13 20:08:14.511: INFO: Waiting up to 5m0s for pod "downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36" in namespace "downward-api-1327" to be "Succeeded or Failed"
    Mar 13 20:08:14.514: INFO: Pod "downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36": Phase="Pending", Reason="", readiness=false. Elapsed: 2.762884ms
    Mar 13 20:08:16.518: INFO: Pod "downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00685304s
    Mar 13 20:08:18.518: INFO: Pod "downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006291006s
    STEP: Saw pod success 03/13/23 20:08:18.518
    Mar 13 20:08:18.518: INFO: Pod "downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36" satisfied condition "Succeeded or Failed"
    Mar 13 20:08:18.520: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36 container client-container: <nil>
    STEP: delete the pod 03/13/23 20:08:18.527
    Mar 13 20:08:18.534: INFO: Waiting for pod downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36 to disappear
    Mar 13 20:08:18.537: INFO: Pod downwardapi-volume-01b9ffe1-6cac-46d6-a597-5c8012f69d36 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:08:18.537: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-1327" for this suite. 03/13/23 20:08:18.541
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:08:18.552
Mar 13 20:08:18.560: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename configmap 03/13/23 20:08:18.561
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:08:18.57
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:08:18.572
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47
STEP: Creating configMap with name configmap-test-volume-3e31d315-3482-4f1b-b0ed-98c3a48ebb3b 03/13/23 20:08:18.576
STEP: Creating a pod to test consume configMaps 03/13/23 20:08:18.58
Mar 13 20:08:18.587: INFO: Waiting up to 5m0s for pod "pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859" in namespace "configmap-1056" to be "Succeeded or Failed"
Mar 13 20:08:18.590: INFO: Pod "pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859": Phase="Pending", Reason="", readiness=false. Elapsed: 3.241546ms
Mar 13 20:08:20.613: INFO: Pod "pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026398518s
Mar 13 20:08:22.596: INFO: Pod "pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009298147s
STEP: Saw pod success 03/13/23 20:08:22.596
Mar 13 20:08:22.597: INFO: Pod "pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859" satisfied condition "Succeeded or Failed"
Mar 13 20:08:22.600: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859 container agnhost-container: <nil>
STEP: delete the pod 03/13/23 20:08:22.61
Mar 13 20:08:22.618: INFO: Waiting for pod pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859 to disappear
Mar 13 20:08:22.624: INFO: Pod pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar 13 20:08:22.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-1056" for this suite. 03/13/23 20:08:22.63
------------------------------
â€¢ [4.084 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:08:18.552
    Mar 13 20:08:18.560: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename configmap 03/13/23 20:08:18.561
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:08:18.57
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:08:18.572
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:47
    STEP: Creating configMap with name configmap-test-volume-3e31d315-3482-4f1b-b0ed-98c3a48ebb3b 03/13/23 20:08:18.576
    STEP: Creating a pod to test consume configMaps 03/13/23 20:08:18.58
    Mar 13 20:08:18.587: INFO: Waiting up to 5m0s for pod "pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859" in namespace "configmap-1056" to be "Succeeded or Failed"
    Mar 13 20:08:18.590: INFO: Pod "pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859": Phase="Pending", Reason="", readiness=false. Elapsed: 3.241546ms
    Mar 13 20:08:20.613: INFO: Pod "pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026398518s
    Mar 13 20:08:22.596: INFO: Pod "pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009298147s
    STEP: Saw pod success 03/13/23 20:08:22.596
    Mar 13 20:08:22.597: INFO: Pod "pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859" satisfied condition "Succeeded or Failed"
    Mar 13 20:08:22.600: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859 container agnhost-container: <nil>
    STEP: delete the pod 03/13/23 20:08:22.61
    Mar 13 20:08:22.618: INFO: Waiting for pod pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859 to disappear
    Mar 13 20:08:22.624: INFO: Pod pod-configmaps-c2ba81be-66bb-404d-bb1c-0a3b41a84859 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:08:22.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-1056" for this suite. 03/13/23 20:08:22.63
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:08:22.637
Mar 13 20:08:22.637: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename var-expansion 03/13/23 20:08:22.639
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:08:22.649
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:08:22.652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225
STEP: creating the pod with failed condition 03/13/23 20:08:22.655
Mar 13 20:08:22.661: INFO: Waiting up to 2m0s for pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53" in namespace "var-expansion-3499" to be "running"
Mar 13 20:08:22.663: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 2.182425ms
Mar 13 20:08:24.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006347032s
Mar 13 20:08:26.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 4.005783747s
Mar 13 20:08:28.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 6.006279845s
Mar 13 20:08:30.671: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 8.009991832s
Mar 13 20:08:32.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 10.006628425s
Mar 13 20:08:34.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 12.006213803s
Mar 13 20:08:36.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 14.0069511s
Mar 13 20:08:38.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 16.006266286s
Mar 13 20:08:40.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 18.005645377s
Mar 13 20:08:42.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 20.006999658s
Mar 13 20:08:44.666: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 22.005472726s
Mar 13 20:08:46.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 24.005722447s
Mar 13 20:08:48.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 26.006422444s
Mar 13 20:08:50.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 28.006735362s
Mar 13 20:08:52.670: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 30.009069822s
Mar 13 20:08:54.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 32.007773636s
Mar 13 20:08:56.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 34.006128131s
Mar 13 20:08:58.666: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 36.005297579s
Mar 13 20:09:00.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 38.007911866s
Mar 13 20:09:02.672: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 40.010637763s
Mar 13 20:09:04.677: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 42.016132541s
Mar 13 20:09:06.677: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 44.016004411s
Mar 13 20:09:08.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 46.008151615s
Mar 13 20:09:10.670: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 48.008837691s
Mar 13 20:09:12.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 50.008204855s
Mar 13 20:09:14.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 52.007106591s
Mar 13 20:09:16.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 54.007833572s
Mar 13 20:09:18.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 56.00606979s
Mar 13 20:09:20.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 58.007497128s
Mar 13 20:09:22.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.006102183s
Mar 13 20:09:24.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.006680913s
Mar 13 20:09:26.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.006660229s
Mar 13 20:09:28.666: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.005614702s
Mar 13 20:09:30.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.006912737s
Mar 13 20:09:32.666: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.005215456s
Mar 13 20:09:34.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.005910093s
Mar 13 20:09:36.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.007257724s
Mar 13 20:09:38.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.006890261s
Mar 13 20:09:40.671: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.009841121s
Mar 13 20:09:42.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.007610304s
Mar 13 20:09:44.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.007341908s
Mar 13 20:09:46.671: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.010449439s
Mar 13 20:09:48.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.007065872s
Mar 13 20:09:50.673: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.012051059s
Mar 13 20:09:52.670: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.009022982s
Mar 13 20:09:54.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.008157173s
Mar 13 20:09:56.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.00601387s
Mar 13 20:09:58.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.007416429s
Mar 13 20:10:00.671: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.009771579s
Mar 13 20:10:02.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.008589436s
Mar 13 20:10:04.672: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.011145578s
Mar 13 20:10:06.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.008438s
Mar 13 20:10:08.671: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.010380831s
Mar 13 20:10:10.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.006767058s
Mar 13 20:10:12.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.007200948s
Mar 13 20:10:14.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.006116528s
Mar 13 20:10:16.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.006519487s
Mar 13 20:10:18.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.006987061s
Mar 13 20:10:20.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.007460072s
Mar 13 20:10:22.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.007710991s
Mar 13 20:10:22.673: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.011968s
STEP: updating the pod 03/13/23 20:10:22.673
Mar 13 20:10:23.184: INFO: Successfully updated pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53"
STEP: waiting for pod running 03/13/23 20:10:23.184
Mar 13 20:10:23.185: INFO: Waiting up to 2m0s for pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53" in namespace "var-expansion-3499" to be "running"
Mar 13 20:10:23.202: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 16.786898ms
Mar 13 20:10:25.206: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Running", Reason="", readiness=true. Elapsed: 2.021310685s
Mar 13 20:10:25.206: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53" satisfied condition "running"
STEP: deleting the pod gracefully 03/13/23 20:10:25.206
Mar 13 20:10:25.206: INFO: Deleting pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53" in namespace "var-expansion-3499"
Mar 13 20:10:25.219: INFO: Wait up to 5m0s for pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar 13 20:10:57.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-3499" for this suite. 03/13/23 20:10:57.246
------------------------------
â€¢ [SLOW TEST] [154.613 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:08:22.637
    Mar 13 20:08:22.637: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename var-expansion 03/13/23 20:08:22.639
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:08:22.649
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:08:22.652
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
      test/e2e/common/node/expansion.go:225
    STEP: creating the pod with failed condition 03/13/23 20:08:22.655
    Mar 13 20:08:22.661: INFO: Waiting up to 2m0s for pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53" in namespace "var-expansion-3499" to be "running"
    Mar 13 20:08:22.663: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 2.182425ms
    Mar 13 20:08:24.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006347032s
    Mar 13 20:08:26.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 4.005783747s
    Mar 13 20:08:28.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 6.006279845s
    Mar 13 20:08:30.671: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 8.009991832s
    Mar 13 20:08:32.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 10.006628425s
    Mar 13 20:08:34.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 12.006213803s
    Mar 13 20:08:36.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 14.0069511s
    Mar 13 20:08:38.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 16.006266286s
    Mar 13 20:08:40.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 18.005645377s
    Mar 13 20:08:42.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 20.006999658s
    Mar 13 20:08:44.666: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 22.005472726s
    Mar 13 20:08:46.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 24.005722447s
    Mar 13 20:08:48.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 26.006422444s
    Mar 13 20:08:50.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 28.006735362s
    Mar 13 20:08:52.670: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 30.009069822s
    Mar 13 20:08:54.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 32.007773636s
    Mar 13 20:08:56.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 34.006128131s
    Mar 13 20:08:58.666: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 36.005297579s
    Mar 13 20:09:00.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 38.007911866s
    Mar 13 20:09:02.672: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 40.010637763s
    Mar 13 20:09:04.677: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 42.016132541s
    Mar 13 20:09:06.677: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 44.016004411s
    Mar 13 20:09:08.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 46.008151615s
    Mar 13 20:09:10.670: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 48.008837691s
    Mar 13 20:09:12.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 50.008204855s
    Mar 13 20:09:14.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 52.007106591s
    Mar 13 20:09:16.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 54.007833572s
    Mar 13 20:09:18.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 56.00606979s
    Mar 13 20:09:20.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 58.007497128s
    Mar 13 20:09:22.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.006102183s
    Mar 13 20:09:24.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.006680913s
    Mar 13 20:09:26.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.006660229s
    Mar 13 20:09:28.666: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.005614702s
    Mar 13 20:09:30.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.006912737s
    Mar 13 20:09:32.666: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.005215456s
    Mar 13 20:09:34.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.005910093s
    Mar 13 20:09:36.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.007257724s
    Mar 13 20:09:38.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.006890261s
    Mar 13 20:09:40.671: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.009841121s
    Mar 13 20:09:42.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.007610304s
    Mar 13 20:09:44.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.007341908s
    Mar 13 20:09:46.671: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.010449439s
    Mar 13 20:09:48.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.007065872s
    Mar 13 20:09:50.673: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.012051059s
    Mar 13 20:09:52.670: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.009022982s
    Mar 13 20:09:54.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.008157173s
    Mar 13 20:09:56.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.00601387s
    Mar 13 20:09:58.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.007416429s
    Mar 13 20:10:00.671: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.009771579s
    Mar 13 20:10:02.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.008589436s
    Mar 13 20:10:04.672: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.011145578s
    Mar 13 20:10:06.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.008438s
    Mar 13 20:10:08.671: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.010380831s
    Mar 13 20:10:10.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.006767058s
    Mar 13 20:10:12.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.007200948s
    Mar 13 20:10:14.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.006116528s
    Mar 13 20:10:16.667: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.006519487s
    Mar 13 20:10:18.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.006987061s
    Mar 13 20:10:20.668: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.007460072s
    Mar 13 20:10:22.669: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.007710991s
    Mar 13 20:10:22.673: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.011968s
    STEP: updating the pod 03/13/23 20:10:22.673
    Mar 13 20:10:23.184: INFO: Successfully updated pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53"
    STEP: waiting for pod running 03/13/23 20:10:23.184
    Mar 13 20:10:23.185: INFO: Waiting up to 2m0s for pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53" in namespace "var-expansion-3499" to be "running"
    Mar 13 20:10:23.202: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Pending", Reason="", readiness=false. Elapsed: 16.786898ms
    Mar 13 20:10:25.206: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53": Phase="Running", Reason="", readiness=true. Elapsed: 2.021310685s
    Mar 13 20:10:25.206: INFO: Pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53" satisfied condition "running"
    STEP: deleting the pod gracefully 03/13/23 20:10:25.206
    Mar 13 20:10:25.206: INFO: Deleting pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53" in namespace "var-expansion-3499"
    Mar 13 20:10:25.219: INFO: Wait up to 5m0s for pod "var-expansion-18ed4cdc-7065-46e2-a85c-b1a3bf33ec53" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:10:57.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-3499" for this suite. 03/13/23 20:10:57.246
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job
  should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:10:57.256
Mar 13 20:10:57.256: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename job 03/13/23 20:10:57.258
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:10:57.268
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:10:57.271
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703
STEP: Creating a suspended job 03/13/23 20:10:57.276
STEP: Patching the Job 03/13/23 20:10:57.281
STEP: Watching for Job to be patched 03/13/23 20:10:57.3
Mar 13 20:10:57.302: INFO: Event ADDED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch] and annotations: map[batch.kubernetes.io/job-tracking:]
Mar 13 20:10:57.302: INFO: Event MODIFIED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch] and annotations: map[batch.kubernetes.io/job-tracking:]
Mar 13 20:10:57.302: INFO: Event MODIFIED found for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking:]
STEP: Updating the job 03/13/23 20:10:57.302
STEP: Watching for Job to be updated 03/13/23 20:10:57.309
Mar 13 20:10:57.311: INFO: Event MODIFIED found for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar 13 20:10:57.311: INFO: Found Job annotations: map[string]string{"batch.kubernetes.io/job-tracking":"", "updated":"true"}
STEP: Listing all Jobs with LabelSelector 03/13/23 20:10:57.311
Mar 13 20:10:57.313: INFO: Job: e2e-wvcch as labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched]
STEP: Waiting for job to complete 03/13/23 20:10:57.313
STEP: Delete a job collection with a labelselector 03/13/23 20:11:05.317
STEP: Watching for Job to be deleted 03/13/23 20:11:05.325
Mar 13 20:11:05.347: INFO: Event MODIFIED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar 13 20:11:05.348: INFO: Event MODIFIED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar 13 20:11:05.348: INFO: Event MODIFIED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar 13 20:11:05.348: INFO: Event MODIFIED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar 13 20:11:05.348: INFO: Event MODIFIED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar 13 20:11:05.348: INFO: Event DELETED found for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
STEP: Relist jobs to confirm deletion 03/13/23 20:11:05.348
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Mar 13 20:11:05.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-8054" for this suite. 03/13/23 20:11:05.377
------------------------------
â€¢ [SLOW TEST] [8.146 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:10:57.256
    Mar 13 20:10:57.256: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename job 03/13/23 20:10:57.258
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:10:57.268
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:10:57.271
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of a job [Conformance]
      test/e2e/apps/job.go:703
    STEP: Creating a suspended job 03/13/23 20:10:57.276
    STEP: Patching the Job 03/13/23 20:10:57.281
    STEP: Watching for Job to be patched 03/13/23 20:10:57.3
    Mar 13 20:10:57.302: INFO: Event ADDED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch] and annotations: map[batch.kubernetes.io/job-tracking:]
    Mar 13 20:10:57.302: INFO: Event MODIFIED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch] and annotations: map[batch.kubernetes.io/job-tracking:]
    Mar 13 20:10:57.302: INFO: Event MODIFIED found for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking:]
    STEP: Updating the job 03/13/23 20:10:57.302
    STEP: Watching for Job to be updated 03/13/23 20:10:57.309
    Mar 13 20:10:57.311: INFO: Event MODIFIED found for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar 13 20:10:57.311: INFO: Found Job annotations: map[string]string{"batch.kubernetes.io/job-tracking":"", "updated":"true"}
    STEP: Listing all Jobs with LabelSelector 03/13/23 20:10:57.311
    Mar 13 20:10:57.313: INFO: Job: e2e-wvcch as labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched]
    STEP: Waiting for job to complete 03/13/23 20:10:57.313
    STEP: Delete a job collection with a labelselector 03/13/23 20:11:05.317
    STEP: Watching for Job to be deleted 03/13/23 20:11:05.325
    Mar 13 20:11:05.347: INFO: Event MODIFIED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar 13 20:11:05.348: INFO: Event MODIFIED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar 13 20:11:05.348: INFO: Event MODIFIED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar 13 20:11:05.348: INFO: Event MODIFIED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar 13 20:11:05.348: INFO: Event MODIFIED observed for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar 13 20:11:05.348: INFO: Event DELETED found for Job e2e-wvcch in namespace job-8054 with labels: map[e2e-job-label:e2e-wvcch e2e-wvcch:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    STEP: Relist jobs to confirm deletion 03/13/23 20:11:05.348
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:11:05.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-8054" for this suite. 03/13/23 20:11:05.377
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:11:05.423
Mar 13 20:11:05.423: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename webhook 03/13/23 20:11:05.424
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:11:05.455
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:11:05.465
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/13/23 20:11:05.507
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 20:11:05.969
STEP: Deploying the webhook pod 03/13/23 20:11:05.983
STEP: Wait for the deployment to be ready 03/13/23 20:11:06.008
Mar 13 20:11:06.040: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Mar 13 20:11:08.079: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 20, 11, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 20, 11, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 20, 11, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 20, 11, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 03/13/23 20:11:10.083
STEP: Verifying the service has paired with the endpoint 03/13/23 20:11:10.099
Mar 13 20:11:11.099: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264
STEP: Registering the mutating pod webhook via the AdmissionRegistration API 03/13/23 20:11:11.112
STEP: create a pod that should be updated by the webhook 03/13/23 20:11:11.169
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar 13 20:11:11.218: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-247" for this suite. 03/13/23 20:11:11.298
STEP: Destroying namespace "webhook-247-markers" for this suite. 03/13/23 20:11:11.309
------------------------------
â€¢ [SLOW TEST] [5.900 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:11:05.423
    Mar 13 20:11:05.423: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename webhook 03/13/23 20:11:05.424
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:11:05.455
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:11:05.465
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/13/23 20:11:05.507
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/13/23 20:11:05.969
    STEP: Deploying the webhook pod 03/13/23 20:11:05.983
    STEP: Wait for the deployment to be ready 03/13/23 20:11:06.008
    Mar 13 20:11:06.040: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Mar 13 20:11:08.079: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 13, 20, 11, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 20, 11, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 13, 20, 11, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 13, 20, 11, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 03/13/23 20:11:10.083
    STEP: Verifying the service has paired with the endpoint 03/13/23 20:11:10.099
    Mar 13 20:11:11.099: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate pod and apply defaults after mutation [Conformance]
      test/e2e/apimachinery/webhook.go:264
    STEP: Registering the mutating pod webhook via the AdmissionRegistration API 03/13/23 20:11:11.112
    STEP: create a pod that should be updated by the webhook 03/13/23 20:11:11.169
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:11:11.218: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-247" for this suite. 03/13/23 20:11:11.298
    STEP: Destroying namespace "webhook-247-markers" for this suite. 03/13/23 20:11:11.309
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/13/23 20:11:11.323
Mar 13 20:11:11.323: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
STEP: Building a namespace api object, basename projected 03/13/23 20:11:11.324
STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:11:11.345
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:11:11.357
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193
STEP: Creating a pod to test downward API volume plugin 03/13/23 20:11:11.371
Mar 13 20:11:11.419: INFO: Waiting up to 5m0s for pod "downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d" in namespace "projected-2653" to be "Succeeded or Failed"
Mar 13 20:11:11.451: INFO: Pod "downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d": Phase="Pending", Reason="", readiness=false. Elapsed: 27.17433ms
Mar 13 20:11:13.463: INFO: Pod "downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.039034612s
Mar 13 20:11:15.461: INFO: Pod "downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03695462s
STEP: Saw pod success 03/13/23 20:11:15.461
Mar 13 20:11:15.461: INFO: Pod "downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d" satisfied condition "Succeeded or Failed"
Mar 13 20:11:15.464: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d container client-container: <nil>
STEP: delete the pod 03/13/23 20:11:15.493
Mar 13 20:11:15.504: INFO: Waiting for pod downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d to disappear
Mar 13 20:11:15.507: INFO: Pod downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar 13 20:11:15.507: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-2653" for this suite. 03/13/23 20:11:15.51
------------------------------
â€¢ [4.193 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/13/23 20:11:11.323
    Mar 13 20:11:11.323: INFO: >>> kubeConfig: /tmp/kubeconfig-3671153298
    STEP: Building a namespace api object, basename projected 03/13/23 20:11:11.324
    STEP: Waiting for a default service account to be provisioned in namespace 03/13/23 20:11:11.345
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/13/23 20:11:11.357
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's cpu limit [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:193
    STEP: Creating a pod to test downward API volume plugin 03/13/23 20:11:11.371
    Mar 13 20:11:11.419: INFO: Waiting up to 5m0s for pod "downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d" in namespace "projected-2653" to be "Succeeded or Failed"
    Mar 13 20:11:11.451: INFO: Pod "downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d": Phase="Pending", Reason="", readiness=false. Elapsed: 27.17433ms
    Mar 13 20:11:13.463: INFO: Pod "downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.039034612s
    Mar 13 20:11:15.461: INFO: Pod "downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03695462s
    STEP: Saw pod success 03/13/23 20:11:15.461
    Mar 13 20:11:15.461: INFO: Pod "downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d" satisfied condition "Succeeded or Failed"
    Mar 13 20:11:15.464: INFO: Trying to get logs from node vke-automated-test-51df1d4fb06e pod downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d container client-container: <nil>
    STEP: delete the pod 03/13/23 20:11:15.493
    Mar 13 20:11:15.504: INFO: Waiting for pod downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d to disappear
    Mar 13 20:11:15.507: INFO: Pod downwardapi-volume-295d9b4f-c1d3-476f-8186-df0f5e4e531d no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar 13 20:11:15.507: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-2653" for this suite. 03/13/23 20:11:15.51
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
[SynchronizedAfterSuite] TOP-LEVEL
  test/e2e/e2e.go:88
[SynchronizedAfterSuite] TOP-LEVEL
  test/e2e/e2e.go:88
Mar 13 20:11:15.519: INFO: Running AfterSuite actions on node 1
Mar 13 20:11:15.519: INFO: Skipping dumping logs from cluster
------------------------------
[SynchronizedAfterSuite] PASSED [0.000 seconds]
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88

  Begin Captured GinkgoWriter Output >>
    [SynchronizedAfterSuite] TOP-LEVEL
      test/e2e/e2e.go:88
    [SynchronizedAfterSuite] TOP-LEVEL
      test/e2e/e2e.go:88
    Mar 13 20:11:15.519: INFO: Running AfterSuite actions on node 1
    Mar 13 20:11:15.519: INFO: Skipping dumping logs from cluster
  << End Captured GinkgoWriter Output
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:153
[ReportAfterSuite] TOP-LEVEL
  test/e2e/e2e_test.go:153
------------------------------
[ReportAfterSuite] PASSED [0.000 seconds]
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:153

  Begin Captured GinkgoWriter Output >>
    [ReportAfterSuite] TOP-LEVEL
      test/e2e/e2e_test.go:153
  << End Captured GinkgoWriter Output
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:529
[ReportAfterSuite] TOP-LEVEL
  test/e2e/framework/test_context.go:529
------------------------------
[ReportAfterSuite] PASSED [0.168 seconds]
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:529

  Begin Captured GinkgoWriter Output >>
    [ReportAfterSuite] TOP-LEVEL
      test/e2e/framework/test_context.go:529
  << End Captured GinkgoWriter Output
------------------------------

Ran 368 of 7069 Specs in 5467.661 seconds
SUCCESS! -- 368 Passed | 0 Failed | 0 Pending | 6701 Skipped
PASS

Ginkgo ran 1 suite in 1h31m8.185152526s
Test Suite Passed
[38;5;228mYou're using deprecated Ginkgo functionality:[0m
[38;5;228m=============================================[0m
  [38;5;11m--noColor is deprecated, use --no-color instead[0m
  [1mLearn more at:[0m [38;5;14m[4mhttps://onsi.github.io/ginkgo/MIGRATING_TO_V2#changed-command-line-flags[0m

[38;5;243mTo silence deprecations that can be silenced set the following environment variable:[0m
  [38;5;243mACK_GINKGO_DEPRECATIONS=2.4.0[0m

