I0209 00:26:59.639692      20 e2e.go:126] Starting e2e run "a104d546-0228-4a05-90e1-297ab7feb3d9" on Ginkgo node 1
Feb  9 00:26:59.652: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1675902419 - will randomize all specs

Will run 368 of 7069 specs
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
[SynchronizedBeforeSuite] TOP-LEVEL
  test/e2e/e2e.go:77
Feb  9 00:26:59.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 00:26:59.766: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Feb  9 00:26:59.792: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Feb  9 00:26:59.829: INFO: 22 / 22 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Feb  9 00:26:59.829: INFO: expected 7 pod replicas in namespace 'kube-system', 7 are Running and Ready.
Feb  9 00:26:59.829: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Feb  9 00:26:59.843: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'azure-ip-masq-agent' (0 seconds elapsed)
Feb  9 00:26:59.843: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'cloud-node-manager' (0 seconds elapsed)
Feb  9 00:26:59.843: INFO: 0 / 0 pods ready in namespace 'kube-system' in daemonset 'cloud-node-manager-windows' (0 seconds elapsed)
Feb  9 00:26:59.843: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'csi-azuredisk-node' (0 seconds elapsed)
Feb  9 00:26:59.843: INFO: 0 / 0 pods ready in namespace 'kube-system' in daemonset 'csi-azuredisk-node-win' (0 seconds elapsed)
Feb  9 00:26:59.843: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'csi-azurefile-node' (0 seconds elapsed)
Feb  9 00:26:59.843: INFO: 0 / 0 pods ready in namespace 'kube-system' in daemonset 'csi-azurefile-node-win' (0 seconds elapsed)
Feb  9 00:26:59.843: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
Feb  9 00:26:59.843: INFO: e2e test version: v1.26.0
Feb  9 00:26:59.845: INFO: kube-apiserver version: v1.26.0
[SynchronizedBeforeSuite] TOP-LEVEL
  test/e2e/e2e.go:77
Feb  9 00:26:59.845: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 00:26:59.852: INFO: Cluster IP family: ipv4
------------------------------
[SynchronizedBeforeSuite] PASSED [0.088 seconds]
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77

  Begin Captured GinkgoWriter Output >>
    [SynchronizedBeforeSuite] TOP-LEVEL
      test/e2e/e2e.go:77
    Feb  9 00:26:59.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 00:26:59.766: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
    Feb  9 00:26:59.792: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
    Feb  9 00:26:59.829: INFO: 22 / 22 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
    Feb  9 00:26:59.829: INFO: expected 7 pod replicas in namespace 'kube-system', 7 are Running and Ready.
    Feb  9 00:26:59.829: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
    Feb  9 00:26:59.843: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'azure-ip-masq-agent' (0 seconds elapsed)
    Feb  9 00:26:59.843: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'cloud-node-manager' (0 seconds elapsed)
    Feb  9 00:26:59.843: INFO: 0 / 0 pods ready in namespace 'kube-system' in daemonset 'cloud-node-manager-windows' (0 seconds elapsed)
    Feb  9 00:26:59.843: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'csi-azuredisk-node' (0 seconds elapsed)
    Feb  9 00:26:59.843: INFO: 0 / 0 pods ready in namespace 'kube-system' in daemonset 'csi-azuredisk-node-win' (0 seconds elapsed)
    Feb  9 00:26:59.843: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'csi-azurefile-node' (0 seconds elapsed)
    Feb  9 00:26:59.843: INFO: 0 / 0 pods ready in namespace 'kube-system' in daemonset 'csi-azurefile-node-win' (0 seconds elapsed)
    Feb  9 00:26:59.843: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
    Feb  9 00:26:59.843: INFO: e2e test version: v1.26.0
    Feb  9 00:26:59.845: INFO: kube-apiserver version: v1.26.0
    [SynchronizedBeforeSuite] TOP-LEVEL
      test/e2e/e2e.go:77
    Feb  9 00:26:59.845: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 00:26:59.852: INFO: Cluster IP family: ipv4
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:26:59.872
Feb  9 00:26:59.872: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename resourcequota 02/09/23 00:26:59.873
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:26:59.894
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:26:59.898
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230
STEP: Counting existing ResourceQuota 02/09/23 00:26:59.906
STEP: Creating a ResourceQuota 02/09/23 00:27:04.914
STEP: Ensuring resource quota status is calculated 02/09/23 00:27:04.924
STEP: Creating a Pod that fits quota 02/09/23 00:27:06.931
STEP: Ensuring ResourceQuota status captures the pod usage 02/09/23 00:27:06.962
STEP: Not allowing a pod to be created that exceeds remaining quota 02/09/23 00:27:08.969
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) 02/09/23 00:27:08.973
STEP: Ensuring a pod cannot update its resource requirements 02/09/23 00:27:08.977
STEP: Ensuring attempts to update pod resource requirements did not change quota usage 02/09/23 00:27:08.983
STEP: Deleting the pod 02/09/23 00:27:10.99
STEP: Ensuring resource quota status released the pod usage 02/09/23 00:27:11.003
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Feb  9 00:27:13.009: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-6676" for this suite. 02/09/23 00:27:13.018
------------------------------
â€¢ [SLOW TEST] [13.156 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:26:59.872
    Feb  9 00:26:59.872: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename resourcequota 02/09/23 00:26:59.873
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:26:59.894
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:26:59.898
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a pod. [Conformance]
      test/e2e/apimachinery/resource_quota.go:230
    STEP: Counting existing ResourceQuota 02/09/23 00:26:59.906
    STEP: Creating a ResourceQuota 02/09/23 00:27:04.914
    STEP: Ensuring resource quota status is calculated 02/09/23 00:27:04.924
    STEP: Creating a Pod that fits quota 02/09/23 00:27:06.931
    STEP: Ensuring ResourceQuota status captures the pod usage 02/09/23 00:27:06.962
    STEP: Not allowing a pod to be created that exceeds remaining quota 02/09/23 00:27:08.969
    STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) 02/09/23 00:27:08.973
    STEP: Ensuring a pod cannot update its resource requirements 02/09/23 00:27:08.977
    STEP: Ensuring attempts to update pod resource requirements did not change quota usage 02/09/23 00:27:08.983
    STEP: Deleting the pod 02/09/23 00:27:10.99
    STEP: Ensuring resource quota status released the pod usage 02/09/23 00:27:11.003
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:27:13.009: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-6676" for this suite. 02/09/23 00:27:13.018
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:27:13.032
Feb  9 00:27:13.032: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 00:27:13.033
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:27:13.051
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:27:13.054
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 00:27:13.075
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 00:27:13.499
STEP: Deploying the webhook pod 02/09/23 00:27:13.507
STEP: Wait for the deployment to be ready 02/09/23 00:27:13.52
Feb  9 00:27:13.532: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Feb  9 00:27:15.549: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 0, 27, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 0, 27, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 0, 27, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 0, 27, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 02/09/23 00:27:17.556
STEP: Verifying the service has paired with the endpoint 02/09/23 00:27:17.57
Feb  9 00:27:18.570: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323
Feb  9 00:27:18.576: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7700-crds.webhook.example.com via the AdmissionRegistration API 02/09/23 00:27:19.1
STEP: Creating a custom resource while v1 is storage version 02/09/23 00:27:19.124
STEP: Patching Custom Resource Definition to set v2 as storage 02/09/23 00:27:21.205
STEP: Patching the custom resource while v2 is storage version 02/09/23 00:27:21.213
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:27:21.823: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-1933" for this suite. 02/09/23 00:27:21.879
STEP: Destroying namespace "webhook-1933-markers" for this suite. 02/09/23 00:27:21.888
------------------------------
â€¢ [SLOW TEST] [8.864 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:27:13.032
    Feb  9 00:27:13.032: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 00:27:13.033
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:27:13.051
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:27:13.054
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 00:27:13.075
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 00:27:13.499
    STEP: Deploying the webhook pod 02/09/23 00:27:13.507
    STEP: Wait for the deployment to be ready 02/09/23 00:27:13.52
    Feb  9 00:27:13.532: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Feb  9 00:27:15.549: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 0, 27, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 0, 27, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 0, 27, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 0, 27, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 02/09/23 00:27:17.556
    STEP: Verifying the service has paired with the endpoint 02/09/23 00:27:17.57
    Feb  9 00:27:18.570: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource with different stored version [Conformance]
      test/e2e/apimachinery/webhook.go:323
    Feb  9 00:27:18.576: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7700-crds.webhook.example.com via the AdmissionRegistration API 02/09/23 00:27:19.1
    STEP: Creating a custom resource while v1 is storage version 02/09/23 00:27:19.124
    STEP: Patching Custom Resource Definition to set v2 as storage 02/09/23 00:27:21.205
    STEP: Patching the custom resource while v2 is storage version 02/09/23 00:27:21.213
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:27:21.823: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-1933" for this suite. 02/09/23 00:27:21.879
    STEP: Destroying namespace "webhook-1933-markers" for this suite. 02/09/23 00:27:21.888
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-network] Service endpoints latency
  should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59
[BeforeEach] [sig-network] Service endpoints latency
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:27:21.899
Feb  9 00:27:21.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename svc-latency 02/09/23 00:27:21.899
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:27:21.917
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:27:21.92
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/metrics/init/init.go:31
[It] should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59
Feb  9 00:27:21.925: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: creating replication controller svc-latency-rc in namespace svc-latency-4943 02/09/23 00:27:21.926
I0209 00:27:21.935535      20 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-4943, replica count: 1
I0209 00:27:22.986594      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0209 00:27:23.986910      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Feb  9 00:27:24.102: INFO: Created: latency-svc-ggcth
Feb  9 00:27:24.108: INFO: Got endpoints: latency-svc-ggcth [20.367905ms]
Feb  9 00:27:24.129: INFO: Created: latency-svc-d72sq
Feb  9 00:27:24.134: INFO: Got endpoints: latency-svc-d72sq [25.676236ms]
Feb  9 00:27:24.137: INFO: Created: latency-svc-2gr2k
Feb  9 00:27:24.141: INFO: Got endpoints: latency-svc-2gr2k [33.08792ms]
Feb  9 00:27:24.145: INFO: Created: latency-svc-klnfq
Feb  9 00:27:24.153: INFO: Got endpoints: latency-svc-klnfq [44.327398ms]
Feb  9 00:27:24.153: INFO: Created: latency-svc-bml4v
Feb  9 00:27:24.159: INFO: Got endpoints: latency-svc-bml4v [50.709357ms]
Feb  9 00:27:24.161: INFO: Created: latency-svc-cjd9l
Feb  9 00:27:24.168: INFO: Got endpoints: latency-svc-cjd9l [59.178566ms]
Feb  9 00:27:24.169: INFO: Created: latency-svc-qqg9p
Feb  9 00:27:24.175: INFO: Got endpoints: latency-svc-qqg9p [67.569874ms]
Feb  9 00:27:24.176: INFO: Created: latency-svc-t9z8t
Feb  9 00:27:24.182: INFO: Got endpoints: latency-svc-t9z8t [73.403519ms]
Feb  9 00:27:24.183: INFO: Created: latency-svc-96z99
Feb  9 00:27:24.188: INFO: Got endpoints: latency-svc-96z99 [79.038258ms]
Feb  9 00:27:24.190: INFO: Created: latency-svc-nwdjh
Feb  9 00:27:24.198: INFO: Got endpoints: latency-svc-nwdjh [89.103408ms]
Feb  9 00:27:24.198: INFO: Created: latency-svc-6jskf
Feb  9 00:27:24.206: INFO: Got endpoints: latency-svc-6jskf [97.220609ms]
Feb  9 00:27:24.208: INFO: Created: latency-svc-dg4qc
Feb  9 00:27:24.212: INFO: Got endpoints: latency-svc-dg4qc [103.552565ms]
Feb  9 00:27:24.214: INFO: Created: latency-svc-nwmpg
Feb  9 00:27:24.219: INFO: Got endpoints: latency-svc-nwmpg [109.962524ms]
Feb  9 00:27:24.222: INFO: Created: latency-svc-pksdt
Feb  9 00:27:24.227: INFO: Got endpoints: latency-svc-pksdt [118.537336ms]
Feb  9 00:27:24.231: INFO: Created: latency-svc-6t6zr
Feb  9 00:27:24.236: INFO: Got endpoints: latency-svc-6t6zr [126.917945ms]
Feb  9 00:27:24.238: INFO: Created: latency-svc-4pxhh
Feb  9 00:27:24.242: INFO: Got endpoints: latency-svc-4pxhh [132.597685ms]
Feb  9 00:27:24.245: INFO: Created: latency-svc-pjd6x
Feb  9 00:27:24.249: INFO: Got endpoints: latency-svc-pjd6x [115.385959ms]
Feb  9 00:27:24.253: INFO: Created: latency-svc-qbzpm
Feb  9 00:27:24.257: INFO: Got endpoints: latency-svc-qbzpm [115.749267ms]
Feb  9 00:27:24.259: INFO: Created: latency-svc-hznqk
Feb  9 00:27:24.264: INFO: Got endpoints: latency-svc-hznqk [111.79937ms]
Feb  9 00:27:24.268: INFO: Created: latency-svc-xwlsl
Feb  9 00:27:24.273: INFO: Got endpoints: latency-svc-xwlsl [113.866921ms]
Feb  9 00:27:24.274: INFO: Created: latency-svc-h98wz
Feb  9 00:27:24.279: INFO: Got endpoints: latency-svc-h98wz [111.116253ms]
Feb  9 00:27:24.282: INFO: Created: latency-svc-rmcf8
Feb  9 00:27:24.287: INFO: Got endpoints: latency-svc-rmcf8 [111.00085ms]
Feb  9 00:27:24.289: INFO: Created: latency-svc-lq4vg
Feb  9 00:27:24.295: INFO: Got endpoints: latency-svc-lq4vg [112.511587ms]
Feb  9 00:27:24.295: INFO: Created: latency-svc-8f4f4
Feb  9 00:27:24.303: INFO: Got endpoints: latency-svc-8f4f4 [115.146153ms]
Feb  9 00:27:24.307: INFO: Created: latency-svc-mdjmn
Feb  9 00:27:24.312: INFO: Got endpoints: latency-svc-mdjmn [113.675016ms]
Feb  9 00:27:24.315: INFO: Created: latency-svc-bhpcs
Feb  9 00:27:24.320: INFO: Got endpoints: latency-svc-bhpcs [114.582139ms]
Feb  9 00:27:24.321: INFO: Created: latency-svc-7l9s8
Feb  9 00:27:24.327: INFO: Got endpoints: latency-svc-7l9s8 [114.884947ms]
Feb  9 00:27:24.329: INFO: Created: latency-svc-2n7xg
Feb  9 00:27:24.334: INFO: Got endpoints: latency-svc-2n7xg [114.889347ms]
Feb  9 00:27:24.335: INFO: Created: latency-svc-z2zr7
Feb  9 00:27:24.340: INFO: Got endpoints: latency-svc-z2zr7 [112.798295ms]
Feb  9 00:27:24.342: INFO: Created: latency-svc-wsb4w
Feb  9 00:27:24.347: INFO: Got endpoints: latency-svc-wsb4w [110.736644ms]
Feb  9 00:27:24.349: INFO: Created: latency-svc-dxkt5
Feb  9 00:27:24.354: INFO: Got endpoints: latency-svc-dxkt5 [111.566064ms]
Feb  9 00:27:24.356: INFO: Created: latency-svc-l5xtf
Feb  9 00:27:24.361: INFO: Got endpoints: latency-svc-l5xtf [111.42356ms]
Feb  9 00:27:24.363: INFO: Created: latency-svc-4sjlq
Feb  9 00:27:24.369: INFO: Got endpoints: latency-svc-4sjlq [111.482162ms]
Feb  9 00:27:24.371: INFO: Created: latency-svc-sfh2r
Feb  9 00:27:24.375: INFO: Got endpoints: latency-svc-sfh2r [110.879747ms]
Feb  9 00:27:24.378: INFO: Created: latency-svc-n4fmt
Feb  9 00:27:24.382: INFO: Got endpoints: latency-svc-n4fmt [108.738294ms]
Feb  9 00:27:24.384: INFO: Created: latency-svc-brxn4
Feb  9 00:27:24.391: INFO: Created: latency-svc-fdtdr
Feb  9 00:27:24.398: INFO: Created: latency-svc-fxz89
Feb  9 00:27:24.405: INFO: Created: latency-svc-mwn4d
Feb  9 00:27:24.409: INFO: Got endpoints: latency-svc-brxn4 [129.96972ms]
Feb  9 00:27:24.413: INFO: Created: latency-svc-ksd8j
Feb  9 00:27:24.420: INFO: Created: latency-svc-z4whv
Feb  9 00:27:24.427: INFO: Created: latency-svc-h4lw9
Feb  9 00:27:24.434: INFO: Created: latency-svc-gg4nk
Feb  9 00:27:24.440: INFO: Created: latency-svc-24pcl
Feb  9 00:27:24.447: INFO: Created: latency-svc-8zmqg
Feb  9 00:27:24.455: INFO: Created: latency-svc-gfl79
Feb  9 00:27:24.459: INFO: Got endpoints: latency-svc-fdtdr [172.003061ms]
Feb  9 00:27:24.461: INFO: Created: latency-svc-xqbxj
Feb  9 00:27:24.468: INFO: Created: latency-svc-hxqqp
Feb  9 00:27:24.475: INFO: Created: latency-svc-jcb9v
Feb  9 00:27:24.482: INFO: Created: latency-svc-pcvq7
Feb  9 00:27:24.489: INFO: Created: latency-svc-szfqb
Feb  9 00:27:24.496: INFO: Created: latency-svc-h4ghb
Feb  9 00:27:24.510: INFO: Got endpoints: latency-svc-fxz89 [215.006826ms]
Feb  9 00:27:24.525: INFO: Created: latency-svc-b27pt
Feb  9 00:27:24.558: INFO: Got endpoints: latency-svc-mwn4d [254.769312ms]
Feb  9 00:27:24.571: INFO: Created: latency-svc-94hnw
Feb  9 00:27:24.609: INFO: Got endpoints: latency-svc-ksd8j [296.784253ms]
Feb  9 00:27:24.621: INFO: Created: latency-svc-qp2hc
Feb  9 00:27:24.669: INFO: Got endpoints: latency-svc-z4whv [348.819741ms]
Feb  9 00:27:24.683: INFO: Created: latency-svc-c2z9b
Feb  9 00:27:24.708: INFO: Got endpoints: latency-svc-h4lw9 [381.233645ms]
Feb  9 00:27:24.722: INFO: Created: latency-svc-ntj4t
Feb  9 00:27:24.760: INFO: Got endpoints: latency-svc-gg4nk [426.612469ms]
Feb  9 00:27:24.778: INFO: Created: latency-svc-2rj5l
Feb  9 00:27:24.808: INFO: Got endpoints: latency-svc-24pcl [468.318502ms]
Feb  9 00:27:24.823: INFO: Created: latency-svc-bk4ml
Feb  9 00:27:24.876: INFO: Got endpoints: latency-svc-8zmqg [528.7534ms]
Feb  9 00:27:24.890: INFO: Created: latency-svc-vvpjv
Feb  9 00:27:24.911: INFO: Got endpoints: latency-svc-gfl79 [557.610915ms]
Feb  9 00:27:24.926: INFO: Created: latency-svc-5d6pq
Feb  9 00:27:24.957: INFO: Got endpoints: latency-svc-xqbxj [596.511478ms]
Feb  9 00:27:24.971: INFO: Created: latency-svc-m6rtv
Feb  9 00:27:25.010: INFO: Got endpoints: latency-svc-hxqqp [640.934679ms]
Feb  9 00:27:25.029: INFO: Created: latency-svc-k42m9
Feb  9 00:27:25.058: INFO: Got endpoints: latency-svc-jcb9v [683.069523ms]
Feb  9 00:27:25.075: INFO: Created: latency-svc-wt55v
Feb  9 00:27:25.109: INFO: Got endpoints: latency-svc-pcvq7 [726.842407ms]
Feb  9 00:27:25.126: INFO: Created: latency-svc-jch85
Feb  9 00:27:25.158: INFO: Got endpoints: latency-svc-szfqb [748.783051ms]
Feb  9 00:27:25.172: INFO: Created: latency-svc-h8zg2
Feb  9 00:27:25.209: INFO: Got endpoints: latency-svc-h4ghb [750.312189ms]
Feb  9 00:27:25.222: INFO: Created: latency-svc-2twsl
Feb  9 00:27:25.258: INFO: Got endpoints: latency-svc-b27pt [748.76505ms]
Feb  9 00:27:25.272: INFO: Created: latency-svc-slk5h
Feb  9 00:27:25.309: INFO: Got endpoints: latency-svc-94hnw [750.858702ms]
Feb  9 00:27:25.322: INFO: Created: latency-svc-6bhl2
Feb  9 00:27:25.359: INFO: Got endpoints: latency-svc-qp2hc [749.896078ms]
Feb  9 00:27:25.372: INFO: Created: latency-svc-nc6fj
Feb  9 00:27:25.411: INFO: Got endpoints: latency-svc-c2z9b [742.154187ms]
Feb  9 00:27:25.425: INFO: Created: latency-svc-7x5vf
Feb  9 00:27:25.460: INFO: Got endpoints: latency-svc-ntj4t [752.004931ms]
Feb  9 00:27:25.477: INFO: Created: latency-svc-mjc8m
Feb  9 00:27:25.512: INFO: Got endpoints: latency-svc-2rj5l [752.025231ms]
Feb  9 00:27:25.526: INFO: Created: latency-svc-csbcx
Feb  9 00:27:25.562: INFO: Got endpoints: latency-svc-bk4ml [753.160459ms]
Feb  9 00:27:25.580: INFO: Created: latency-svc-w45kh
Feb  9 00:27:25.609: INFO: Got endpoints: latency-svc-vvpjv [733.495072ms]
Feb  9 00:27:25.624: INFO: Created: latency-svc-h65pf
Feb  9 00:27:25.659: INFO: Got endpoints: latency-svc-5d6pq [747.195511ms]
Feb  9 00:27:25.672: INFO: Created: latency-svc-7x5cl
Feb  9 00:27:25.710: INFO: Got endpoints: latency-svc-m6rtv [752.127433ms]
Feb  9 00:27:25.723: INFO: Created: latency-svc-lb678
Feb  9 00:27:25.757: INFO: Got endpoints: latency-svc-k42m9 [747.854527ms]
Feb  9 00:27:25.770: INFO: Created: latency-svc-mjk8m
Feb  9 00:27:25.808: INFO: Got endpoints: latency-svc-wt55v [749.726074ms]
Feb  9 00:27:25.821: INFO: Created: latency-svc-bjxqv
Feb  9 00:27:25.859: INFO: Got endpoints: latency-svc-jch85 [749.884878ms]
Feb  9 00:27:25.873: INFO: Created: latency-svc-gxlcr
Feb  9 00:27:25.908: INFO: Got endpoints: latency-svc-h8zg2 [749.802176ms]
Feb  9 00:27:25.922: INFO: Created: latency-svc-q7grs
Feb  9 00:27:25.959: INFO: Got endpoints: latency-svc-2twsl [749.345964ms]
Feb  9 00:27:25.972: INFO: Created: latency-svc-5496s
Feb  9 00:27:26.009: INFO: Got endpoints: latency-svc-slk5h [750.473993ms]
Feb  9 00:27:26.023: INFO: Created: latency-svc-l4zzs
Feb  9 00:27:26.059: INFO: Got endpoints: latency-svc-6bhl2 [750.120884ms]
Feb  9 00:27:26.072: INFO: Created: latency-svc-v6jr6
Feb  9 00:27:26.108: INFO: Got endpoints: latency-svc-nc6fj [749.511469ms]
Feb  9 00:27:26.123: INFO: Created: latency-svc-fjj2t
Feb  9 00:27:26.159: INFO: Got endpoints: latency-svc-7x5vf [747.314614ms]
Feb  9 00:27:26.173: INFO: Created: latency-svc-7jrzp
Feb  9 00:27:26.209: INFO: Got endpoints: latency-svc-mjc8m [748.268038ms]
Feb  9 00:27:26.222: INFO: Created: latency-svc-d456s
Feb  9 00:27:26.261: INFO: Got endpoints: latency-svc-csbcx [748.868353ms]
Feb  9 00:27:26.274: INFO: Created: latency-svc-q4s7m
Feb  9 00:27:26.309: INFO: Got endpoints: latency-svc-w45kh [746.919404ms]
Feb  9 00:27:26.323: INFO: Created: latency-svc-7plt2
Feb  9 00:27:26.359: INFO: Got endpoints: latency-svc-h65pf [749.265062ms]
Feb  9 00:27:26.373: INFO: Created: latency-svc-jvhkg
Feb  9 00:27:26.409: INFO: Got endpoints: latency-svc-7x5cl [749.97168ms]
Feb  9 00:27:26.424: INFO: Created: latency-svc-pqtct
Feb  9 00:27:26.458: INFO: Got endpoints: latency-svc-lb678 [748.842453ms]
Feb  9 00:27:26.472: INFO: Created: latency-svc-mxt9g
Feb  9 00:27:26.509: INFO: Got endpoints: latency-svc-mjk8m [751.110708ms]
Feb  9 00:27:26.522: INFO: Created: latency-svc-xj6h5
Feb  9 00:27:26.558: INFO: Got endpoints: latency-svc-bjxqv [749.918578ms]
Feb  9 00:27:26.573: INFO: Created: latency-svc-r8dwd
Feb  9 00:27:26.609: INFO: Got endpoints: latency-svc-gxlcr [750.108584ms]
Feb  9 00:27:26.623: INFO: Created: latency-svc-g4c9c
Feb  9 00:27:26.657: INFO: Got endpoints: latency-svc-q7grs [749.15346ms]
Feb  9 00:27:26.671: INFO: Created: latency-svc-54jwg
Feb  9 00:27:26.708: INFO: Got endpoints: latency-svc-5496s [749.056758ms]
Feb  9 00:27:26.722: INFO: Created: latency-svc-hzn5m
Feb  9 00:27:26.758: INFO: Got endpoints: latency-svc-l4zzs [748.908554ms]
Feb  9 00:27:26.773: INFO: Created: latency-svc-mz8rt
Feb  9 00:27:26.817: INFO: Got endpoints: latency-svc-v6jr6 [758.524092ms]
Feb  9 00:27:26.832: INFO: Created: latency-svc-qltcx
Feb  9 00:27:26.858: INFO: Got endpoints: latency-svc-fjj2t [749.736275ms]
Feb  9 00:27:26.880: INFO: Created: latency-svc-2wgb4
Feb  9 00:27:26.909: INFO: Got endpoints: latency-svc-7jrzp [749.94978ms]
Feb  9 00:27:26.923: INFO: Created: latency-svc-qt5bs
Feb  9 00:27:26.958: INFO: Got endpoints: latency-svc-d456s [749.16056ms]
Feb  9 00:27:26.980: INFO: Created: latency-svc-6gk56
Feb  9 00:27:27.008: INFO: Got endpoints: latency-svc-q4s7m [746.717499ms]
Feb  9 00:27:27.022: INFO: Created: latency-svc-w9m56
Feb  9 00:27:27.057: INFO: Got endpoints: latency-svc-7plt2 [748.182436ms]
Feb  9 00:27:27.071: INFO: Created: latency-svc-mkwpj
Feb  9 00:27:27.107: INFO: Got endpoints: latency-svc-jvhkg [748.374441ms]
Feb  9 00:27:27.121: INFO: Created: latency-svc-qjpvb
Feb  9 00:27:27.158: INFO: Got endpoints: latency-svc-pqtct [749.16136ms]
Feb  9 00:27:27.172: INFO: Created: latency-svc-7vzgk
Feb  9 00:27:27.210: INFO: Got endpoints: latency-svc-mxt9g [751.19761ms]
Feb  9 00:27:27.223: INFO: Created: latency-svc-4gntt
Feb  9 00:27:27.258: INFO: Got endpoints: latency-svc-xj6h5 [749.117659ms]
Feb  9 00:27:27.271: INFO: Created: latency-svc-hgdg9
Feb  9 00:27:27.310: INFO: Got endpoints: latency-svc-r8dwd [751.615621ms]
Feb  9 00:27:27.324: INFO: Created: latency-svc-n5ld4
Feb  9 00:27:27.358: INFO: Got endpoints: latency-svc-g4c9c [749.210661ms]
Feb  9 00:27:27.372: INFO: Created: latency-svc-lxs4p
Feb  9 00:27:27.409: INFO: Got endpoints: latency-svc-54jwg [751.772925ms]
Feb  9 00:27:27.423: INFO: Created: latency-svc-s8dt6
Feb  9 00:27:27.457: INFO: Got endpoints: latency-svc-hzn5m [749.18126ms]
Feb  9 00:27:27.471: INFO: Created: latency-svc-pkgcz
Feb  9 00:27:27.509: INFO: Got endpoints: latency-svc-mz8rt [751.302713ms]
Feb  9 00:27:27.524: INFO: Created: latency-svc-qfgkh
Feb  9 00:27:27.559: INFO: Got endpoints: latency-svc-qltcx [741.409068ms]
Feb  9 00:27:27.572: INFO: Created: latency-svc-nwbj2
Feb  9 00:27:27.609: INFO: Got endpoints: latency-svc-2wgb4 [749.995981ms]
Feb  9 00:27:27.622: INFO: Created: latency-svc-d9fp9
Feb  9 00:27:27.658: INFO: Got endpoints: latency-svc-qt5bs [748.886154ms]
Feb  9 00:27:27.674: INFO: Created: latency-svc-26bp8
Feb  9 00:27:27.708: INFO: Got endpoints: latency-svc-6gk56 [750.060982ms]
Feb  9 00:27:27.722: INFO: Created: latency-svc-9bqvw
Feb  9 00:27:27.758: INFO: Got endpoints: latency-svc-w9m56 [749.688374ms]
Feb  9 00:27:27.773: INFO: Created: latency-svc-8ht4k
Feb  9 00:27:27.809: INFO: Got endpoints: latency-svc-mkwpj [751.870227ms]
Feb  9 00:27:27.822: INFO: Created: latency-svc-vp2vw
Feb  9 00:27:27.858: INFO: Got endpoints: latency-svc-qjpvb [750.609796ms]
Feb  9 00:27:27.871: INFO: Created: latency-svc-wg5sx
Feb  9 00:27:27.909: INFO: Got endpoints: latency-svc-7vzgk [750.618796ms]
Feb  9 00:27:27.922: INFO: Created: latency-svc-rqzss
Feb  9 00:27:27.958: INFO: Got endpoints: latency-svc-4gntt [748.018432ms]
Feb  9 00:27:27.971: INFO: Created: latency-svc-ch6sd
Feb  9 00:27:28.009: INFO: Got endpoints: latency-svc-hgdg9 [751.307613ms]
Feb  9 00:27:28.025: INFO: Created: latency-svc-68kqz
Feb  9 00:27:28.058: INFO: Got endpoints: latency-svc-n5ld4 [748.035532ms]
Feb  9 00:27:28.072: INFO: Created: latency-svc-wjsrs
Feb  9 00:27:28.109: INFO: Got endpoints: latency-svc-lxs4p [750.866602ms]
Feb  9 00:27:28.123: INFO: Created: latency-svc-9ld69
Feb  9 00:27:28.157: INFO: Got endpoints: latency-svc-s8dt6 [748.220637ms]
Feb  9 00:27:28.177: INFO: Created: latency-svc-4qgw9
Feb  9 00:27:28.208: INFO: Got endpoints: latency-svc-pkgcz [751.020806ms]
Feb  9 00:27:28.222: INFO: Created: latency-svc-w5vqr
Feb  9 00:27:28.259: INFO: Got endpoints: latency-svc-qfgkh [748.930554ms]
Feb  9 00:27:28.273: INFO: Created: latency-svc-tr9p7
Feb  9 00:27:28.310: INFO: Got endpoints: latency-svc-nwbj2 [751.293613ms]
Feb  9 00:27:28.323: INFO: Created: latency-svc-cbx5p
Feb  9 00:27:28.360: INFO: Got endpoints: latency-svc-d9fp9 [751.018606ms]
Feb  9 00:27:28.373: INFO: Created: latency-svc-jtt5v
Feb  9 00:27:28.408: INFO: Got endpoints: latency-svc-26bp8 [749.734174ms]
Feb  9 00:27:28.423: INFO: Created: latency-svc-hvmpr
Feb  9 00:27:28.459: INFO: Got endpoints: latency-svc-9bqvw [750.413891ms]
Feb  9 00:27:28.473: INFO: Created: latency-svc-4xrx7
Feb  9 00:27:28.508: INFO: Got endpoints: latency-svc-8ht4k [750.445492ms]
Feb  9 00:27:28.522: INFO: Created: latency-svc-lmmm7
Feb  9 00:27:28.559: INFO: Got endpoints: latency-svc-vp2vw [750.162585ms]
Feb  9 00:27:28.573: INFO: Created: latency-svc-7s5w2
Feb  9 00:27:28.608: INFO: Got endpoints: latency-svc-wg5sx [749.94288ms]
Feb  9 00:27:28.623: INFO: Created: latency-svc-gj4d4
Feb  9 00:27:28.657: INFO: Got endpoints: latency-svc-rqzss [748.32684ms]
Feb  9 00:27:28.671: INFO: Created: latency-svc-fchhc
Feb  9 00:27:28.708: INFO: Got endpoints: latency-svc-ch6sd [750.510394ms]
Feb  9 00:27:28.722: INFO: Created: latency-svc-mmcv9
Feb  9 00:27:28.758: INFO: Got endpoints: latency-svc-68kqz [749.013756ms]
Feb  9 00:27:28.772: INFO: Created: latency-svc-q8gdc
Feb  9 00:27:28.807: INFO: Got endpoints: latency-svc-wjsrs [748.985856ms]
Feb  9 00:27:28.822: INFO: Created: latency-svc-878gc
Feb  9 00:27:28.858: INFO: Got endpoints: latency-svc-9ld69 [748.869353ms]
Feb  9 00:27:28.873: INFO: Created: latency-svc-fjhnd
Feb  9 00:27:28.909: INFO: Got endpoints: latency-svc-4qgw9 [751.617221ms]
Feb  9 00:27:28.922: INFO: Created: latency-svc-znc8l
Feb  9 00:27:28.959: INFO: Got endpoints: latency-svc-w5vqr [750.279688ms]
Feb  9 00:27:28.972: INFO: Created: latency-svc-hlb6l
Feb  9 00:27:29.009: INFO: Got endpoints: latency-svc-tr9p7 [750.081883ms]
Feb  9 00:27:29.022: INFO: Created: latency-svc-q7f5k
Feb  9 00:27:29.058: INFO: Got endpoints: latency-svc-cbx5p [747.809627ms]
Feb  9 00:27:29.071: INFO: Created: latency-svc-6d9vz
Feb  9 00:27:29.108: INFO: Got endpoints: latency-svc-jtt5v [748.446843ms]
Feb  9 00:27:29.123: INFO: Created: latency-svc-424x7
Feb  9 00:27:29.159: INFO: Got endpoints: latency-svc-hvmpr [750.711699ms]
Feb  9 00:27:29.173: INFO: Created: latency-svc-d7kbd
Feb  9 00:27:29.209: INFO: Got endpoints: latency-svc-4xrx7 [749.717674ms]
Feb  9 00:27:29.222: INFO: Created: latency-svc-nrgk2
Feb  9 00:27:29.258: INFO: Got endpoints: latency-svc-lmmm7 [749.392966ms]
Feb  9 00:27:29.271: INFO: Created: latency-svc-wrgmw
Feb  9 00:27:29.308: INFO: Got endpoints: latency-svc-7s5w2 [748.952355ms]
Feb  9 00:27:29.322: INFO: Created: latency-svc-4n85p
Feb  9 00:27:29.360: INFO: Got endpoints: latency-svc-gj4d4 [751.97863ms]
Feb  9 00:27:29.376: INFO: Created: latency-svc-cf9gn
Feb  9 00:27:29.409: INFO: Got endpoints: latency-svc-fchhc [752.109733ms]
Feb  9 00:27:29.423: INFO: Created: latency-svc-mkqhf
Feb  9 00:27:29.458: INFO: Got endpoints: latency-svc-mmcv9 [749.822376ms]
Feb  9 00:27:29.473: INFO: Created: latency-svc-l9tjr
Feb  9 00:27:29.509: INFO: Got endpoints: latency-svc-q8gdc [750.216186ms]
Feb  9 00:27:29.526: INFO: Created: latency-svc-t9t2n
Feb  9 00:27:29.559: INFO: Got endpoints: latency-svc-878gc [751.920129ms]
Feb  9 00:27:29.579: INFO: Created: latency-svc-6rnb6
Feb  9 00:27:29.608: INFO: Got endpoints: latency-svc-fjhnd [749.782575ms]
Feb  9 00:27:29.621: INFO: Created: latency-svc-n9c69
Feb  9 00:27:29.658: INFO: Got endpoints: latency-svc-znc8l [748.74825ms]
Feb  9 00:27:29.671: INFO: Created: latency-svc-g2mvl
Feb  9 00:27:29.709: INFO: Got endpoints: latency-svc-hlb6l [750.105783ms]
Feb  9 00:27:29.722: INFO: Created: latency-svc-qcxnv
Feb  9 00:27:29.757: INFO: Got endpoints: latency-svc-q7f5k [748.574646ms]
Feb  9 00:27:29.774: INFO: Created: latency-svc-98pfr
Feb  9 00:27:29.808: INFO: Got endpoints: latency-svc-6d9vz [749.732074ms]
Feb  9 00:27:29.821: INFO: Created: latency-svc-x4kft
Feb  9 00:27:29.858: INFO: Got endpoints: latency-svc-424x7 [749.17576ms]
Feb  9 00:27:29.871: INFO: Created: latency-svc-hqlrp
Feb  9 00:27:29.908: INFO: Got endpoints: latency-svc-d7kbd [749.215762ms]
Feb  9 00:27:29.924: INFO: Created: latency-svc-rpq84
Feb  9 00:27:29.960: INFO: Got endpoints: latency-svc-nrgk2 [751.299813ms]
Feb  9 00:27:29.974: INFO: Created: latency-svc-2n4bm
Feb  9 00:27:30.010: INFO: Got endpoints: latency-svc-wrgmw [752.145734ms]
Feb  9 00:27:30.023: INFO: Created: latency-svc-998vb
Feb  9 00:27:30.066: INFO: Got endpoints: latency-svc-4n85p [758.080881ms]
Feb  9 00:27:30.089: INFO: Created: latency-svc-thrs7
Feb  9 00:27:30.108: INFO: Got endpoints: latency-svc-cf9gn [748.066533ms]
Feb  9 00:27:30.125: INFO: Created: latency-svc-gnzh9
Feb  9 00:27:30.157: INFO: Got endpoints: latency-svc-mkqhf [747.94293ms]
Feb  9 00:27:30.171: INFO: Created: latency-svc-qmk6r
Feb  9 00:27:30.208: INFO: Got endpoints: latency-svc-l9tjr [749.596171ms]
Feb  9 00:27:30.221: INFO: Created: latency-svc-knh75
Feb  9 00:27:30.259: INFO: Got endpoints: latency-svc-t9t2n [750.128684ms]
Feb  9 00:27:30.273: INFO: Created: latency-svc-hlr4x
Feb  9 00:27:30.308: INFO: Got endpoints: latency-svc-6rnb6 [749.052857ms]
Feb  9 00:27:30.323: INFO: Created: latency-svc-mj5j6
Feb  9 00:27:30.361: INFO: Got endpoints: latency-svc-n9c69 [752.831351ms]
Feb  9 00:27:30.385: INFO: Created: latency-svc-7tbvs
Feb  9 00:27:30.409: INFO: Got endpoints: latency-svc-g2mvl [750.902803ms]
Feb  9 00:27:30.422: INFO: Created: latency-svc-b2m75
Feb  9 00:27:30.459: INFO: Got endpoints: latency-svc-qcxnv [749.666072ms]
Feb  9 00:27:30.474: INFO: Created: latency-svc-j7t98
Feb  9 00:27:30.509: INFO: Got endpoints: latency-svc-98pfr [752.118233ms]
Feb  9 00:27:30.523: INFO: Created: latency-svc-fqx22
Feb  9 00:27:30.560: INFO: Got endpoints: latency-svc-x4kft [752.42144ms]
Feb  9 00:27:30.573: INFO: Created: latency-svc-ckbtt
Feb  9 00:27:30.609: INFO: Got endpoints: latency-svc-hqlrp [750.937904ms]
Feb  9 00:27:30.622: INFO: Created: latency-svc-dvlhj
Feb  9 00:27:30.659: INFO: Got endpoints: latency-svc-rpq84 [750.297888ms]
Feb  9 00:27:30.673: INFO: Created: latency-svc-cjmtw
Feb  9 00:27:30.708: INFO: Got endpoints: latency-svc-2n4bm [747.628522ms]
Feb  9 00:27:30.722: INFO: Created: latency-svc-hjgsr
Feb  9 00:27:30.759: INFO: Got endpoints: latency-svc-998vb [748.712249ms]
Feb  9 00:27:30.775: INFO: Created: latency-svc-frk28
Feb  9 00:27:30.809: INFO: Got endpoints: latency-svc-thrs7 [742.893905ms]
Feb  9 00:27:30.823: INFO: Created: latency-svc-kkdrs
Feb  9 00:27:30.859: INFO: Got endpoints: latency-svc-gnzh9 [750.271688ms]
Feb  9 00:27:30.873: INFO: Created: latency-svc-vzzpc
Feb  9 00:27:30.908: INFO: Got endpoints: latency-svc-qmk6r [750.942104ms]
Feb  9 00:27:30.922: INFO: Created: latency-svc-7z8hm
Feb  9 00:27:30.958: INFO: Got endpoints: latency-svc-knh75 [750.134968ms]
Feb  9 00:27:30.971: INFO: Created: latency-svc-96zhk
Feb  9 00:27:31.009: INFO: Got endpoints: latency-svc-hlr4x [749.947002ms]
Feb  9 00:27:31.022: INFO: Created: latency-svc-gl4ww
Feb  9 00:27:31.058: INFO: Got endpoints: latency-svc-mj5j6 [749.713736ms]
Feb  9 00:27:31.072: INFO: Created: latency-svc-9q97n
Feb  9 00:27:31.110: INFO: Got endpoints: latency-svc-7tbvs [748.636746ms]
Feb  9 00:27:31.124: INFO: Created: latency-svc-pgjhb
Feb  9 00:27:31.158: INFO: Got endpoints: latency-svc-b2m75 [748.886394ms]
Feb  9 00:27:31.172: INFO: Created: latency-svc-bfdrb
Feb  9 00:27:31.209: INFO: Got endpoints: latency-svc-j7t98 [749.824356ms]
Feb  9 00:27:31.223: INFO: Created: latency-svc-dmfs2
Feb  9 00:27:31.261: INFO: Got endpoints: latency-svc-fqx22 [751.34813ms]
Feb  9 00:27:31.274: INFO: Created: latency-svc-zxsrg
Feb  9 00:27:31.309: INFO: Got endpoints: latency-svc-ckbtt [748.358298ms]
Feb  9 00:27:31.322: INFO: Created: latency-svc-zvjk9
Feb  9 00:27:31.358: INFO: Got endpoints: latency-svc-dvlhj [749.029455ms]
Feb  9 00:27:31.374: INFO: Created: latency-svc-hrpdp
Feb  9 00:27:31.410: INFO: Got endpoints: latency-svc-cjmtw [750.942839ms]
Feb  9 00:27:31.424: INFO: Created: latency-svc-zq6kl
Feb  9 00:27:31.459: INFO: Got endpoints: latency-svc-hjgsr [751.125284ms]
Feb  9 00:27:31.475: INFO: Created: latency-svc-5z2kh
Feb  9 00:27:31.510: INFO: Got endpoints: latency-svc-frk28 [750.933918ms]
Feb  9 00:27:31.524: INFO: Created: latency-svc-rz8x2
Feb  9 00:27:31.558: INFO: Got endpoints: latency-svc-kkdrs [749.018011ms]
Feb  9 00:27:31.572: INFO: Created: latency-svc-xmvbt
Feb  9 00:27:31.609: INFO: Got endpoints: latency-svc-vzzpc [749.984172ms]
Feb  9 00:27:31.626: INFO: Created: latency-svc-sjvn7
Feb  9 00:27:31.658: INFO: Got endpoints: latency-svc-7z8hm [749.912011ms]
Feb  9 00:27:31.672: INFO: Created: latency-svc-jv8nh
Feb  9 00:27:31.709: INFO: Got endpoints: latency-svc-96zhk [750.551282ms]
Feb  9 00:27:31.726: INFO: Created: latency-svc-vcrl6
Feb  9 00:27:31.758: INFO: Got endpoints: latency-svc-gl4ww [749.327053ms]
Feb  9 00:27:31.775: INFO: Created: latency-svc-8mgxf
Feb  9 00:27:31.809: INFO: Got endpoints: latency-svc-9q97n [750.949491ms]
Feb  9 00:27:31.822: INFO: Created: latency-svc-pbjjp
Feb  9 00:27:31.859: INFO: Got endpoints: latency-svc-pgjhb [748.088223ms]
Feb  9 00:27:31.872: INFO: Created: latency-svc-k82r8
Feb  9 00:27:31.912: INFO: Got endpoints: latency-svc-bfdrb [753.194144ms]
Feb  9 00:27:31.925: INFO: Created: latency-svc-tgbkt
Feb  9 00:27:31.971: INFO: Got endpoints: latency-svc-dmfs2 [761.93595ms]
Feb  9 00:27:32.009: INFO: Got endpoints: latency-svc-zxsrg [748.549935ms]
Feb  9 00:27:32.060: INFO: Got endpoints: latency-svc-zvjk9 [751.438502ms]
Feb  9 00:27:32.110: INFO: Got endpoints: latency-svc-hrpdp [752.15512ms]
Feb  9 00:27:32.159: INFO: Got endpoints: latency-svc-zq6kl [749.223751ms]
Feb  9 00:27:32.208: INFO: Got endpoints: latency-svc-5z2kh [749.492457ms]
Feb  9 00:27:32.260: INFO: Got endpoints: latency-svc-rz8x2 [750.017869ms]
Feb  9 00:27:32.309: INFO: Got endpoints: latency-svc-xmvbt [750.267275ms]
Feb  9 00:27:32.359: INFO: Got endpoints: latency-svc-sjvn7 [749.784064ms]
Feb  9 00:27:32.409: INFO: Got endpoints: latency-svc-jv8nh [750.92449ms]
Feb  9 00:27:32.459: INFO: Got endpoints: latency-svc-vcrl6 [749.442055ms]
Feb  9 00:27:32.509: INFO: Got endpoints: latency-svc-8mgxf [750.846489ms]
Feb  9 00:27:32.560: INFO: Got endpoints: latency-svc-pbjjp [750.389978ms]
Feb  9 00:27:32.609: INFO: Got endpoints: latency-svc-k82r8 [749.917067ms]
Feb  9 00:27:32.659: INFO: Got endpoints: latency-svc-tgbkt [746.698491ms]
Feb  9 00:27:32.659: INFO: Latencies: [25.676236ms 33.08792ms 44.327398ms 50.709357ms 59.178566ms 67.569874ms 73.403519ms 79.038258ms 89.103408ms 97.220609ms 103.552565ms 108.738294ms 109.962524ms 110.736644ms 110.879747ms 111.00085ms 111.116253ms 111.42356ms 111.482162ms 111.566064ms 111.79937ms 112.511587ms 112.798295ms 113.675016ms 113.866921ms 114.582139ms 114.884947ms 114.889347ms 115.146153ms 115.385959ms 115.749267ms 118.537336ms 126.917945ms 129.96972ms 132.597685ms 172.003061ms 215.006826ms 254.769312ms 296.784253ms 348.819741ms 381.233645ms 426.612469ms 468.318502ms 528.7534ms 557.610915ms 596.511478ms 640.934679ms 683.069523ms 726.842407ms 733.495072ms 741.409068ms 742.154187ms 742.893905ms 746.698491ms 746.717499ms 746.919404ms 747.195511ms 747.314614ms 747.628522ms 747.809627ms 747.854527ms 747.94293ms 748.018432ms 748.035532ms 748.066533ms 748.088223ms 748.182436ms 748.220637ms 748.268038ms 748.32684ms 748.358298ms 748.374441ms 748.446843ms 748.549935ms 748.574646ms 748.636746ms 748.712249ms 748.74825ms 748.76505ms 748.783051ms 748.842453ms 748.868353ms 748.869353ms 748.886154ms 748.886394ms 748.908554ms 748.930554ms 748.952355ms 748.985856ms 749.013756ms 749.018011ms 749.029455ms 749.052857ms 749.056758ms 749.117659ms 749.15346ms 749.16056ms 749.16136ms 749.17576ms 749.18126ms 749.210661ms 749.215762ms 749.223751ms 749.265062ms 749.327053ms 749.345964ms 749.392966ms 749.442055ms 749.492457ms 749.511469ms 749.596171ms 749.666072ms 749.688374ms 749.713736ms 749.717674ms 749.726074ms 749.732074ms 749.734174ms 749.736275ms 749.782575ms 749.784064ms 749.802176ms 749.822376ms 749.824356ms 749.884878ms 749.896078ms 749.912011ms 749.917067ms 749.918578ms 749.94288ms 749.947002ms 749.94978ms 749.97168ms 749.984172ms 749.995981ms 750.017869ms 750.060982ms 750.081883ms 750.105783ms 750.108584ms 750.120884ms 750.128684ms 750.134968ms 750.162585ms 750.216186ms 750.267275ms 750.271688ms 750.279688ms 750.297888ms 750.312189ms 750.389978ms 750.413891ms 750.445492ms 750.473993ms 750.510394ms 750.551282ms 750.609796ms 750.618796ms 750.711699ms 750.846489ms 750.858702ms 750.866602ms 750.902803ms 750.92449ms 750.933918ms 750.937904ms 750.942104ms 750.942839ms 750.949491ms 751.018606ms 751.020806ms 751.110708ms 751.125284ms 751.19761ms 751.293613ms 751.299813ms 751.302713ms 751.307613ms 751.34813ms 751.438502ms 751.615621ms 751.617221ms 751.772925ms 751.870227ms 751.920129ms 751.97863ms 752.004931ms 752.025231ms 752.109733ms 752.118233ms 752.127433ms 752.145734ms 752.15512ms 752.42144ms 752.831351ms 753.160459ms 753.194144ms 758.080881ms 758.524092ms 761.93595ms]
Feb  9 00:27:32.659: INFO: 50 %ile: 749.210661ms
Feb  9 00:27:32.660: INFO: 90 %ile: 751.615621ms
Feb  9 00:27:32.660: INFO: 99 %ile: 758.524092ms
Feb  9 00:27:32.660: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/node/init/init.go:32
Feb  9 00:27:32.660: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  tear down framework | framework.go:193
STEP: Destroying namespace "svc-latency-4943" for this suite. 02/09/23 00:27:32.669
------------------------------
â€¢ [SLOW TEST] [10.781 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Service endpoints latency
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:27:21.899
    Feb  9 00:27:21.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename svc-latency 02/09/23 00:27:21.899
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:27:21.917
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:27:21.92
    [BeforeEach] [sig-network] Service endpoints latency
      test/e2e/framework/metrics/init/init.go:31
    [It] should not be very high  [Conformance]
      test/e2e/network/service_latency.go:59
    Feb  9 00:27:21.925: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: creating replication controller svc-latency-rc in namespace svc-latency-4943 02/09/23 00:27:21.926
    I0209 00:27:21.935535      20 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-4943, replica count: 1
    I0209 00:27:22.986594      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0209 00:27:23.986910      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Feb  9 00:27:24.102: INFO: Created: latency-svc-ggcth
    Feb  9 00:27:24.108: INFO: Got endpoints: latency-svc-ggcth [20.367905ms]
    Feb  9 00:27:24.129: INFO: Created: latency-svc-d72sq
    Feb  9 00:27:24.134: INFO: Got endpoints: latency-svc-d72sq [25.676236ms]
    Feb  9 00:27:24.137: INFO: Created: latency-svc-2gr2k
    Feb  9 00:27:24.141: INFO: Got endpoints: latency-svc-2gr2k [33.08792ms]
    Feb  9 00:27:24.145: INFO: Created: latency-svc-klnfq
    Feb  9 00:27:24.153: INFO: Got endpoints: latency-svc-klnfq [44.327398ms]
    Feb  9 00:27:24.153: INFO: Created: latency-svc-bml4v
    Feb  9 00:27:24.159: INFO: Got endpoints: latency-svc-bml4v [50.709357ms]
    Feb  9 00:27:24.161: INFO: Created: latency-svc-cjd9l
    Feb  9 00:27:24.168: INFO: Got endpoints: latency-svc-cjd9l [59.178566ms]
    Feb  9 00:27:24.169: INFO: Created: latency-svc-qqg9p
    Feb  9 00:27:24.175: INFO: Got endpoints: latency-svc-qqg9p [67.569874ms]
    Feb  9 00:27:24.176: INFO: Created: latency-svc-t9z8t
    Feb  9 00:27:24.182: INFO: Got endpoints: latency-svc-t9z8t [73.403519ms]
    Feb  9 00:27:24.183: INFO: Created: latency-svc-96z99
    Feb  9 00:27:24.188: INFO: Got endpoints: latency-svc-96z99 [79.038258ms]
    Feb  9 00:27:24.190: INFO: Created: latency-svc-nwdjh
    Feb  9 00:27:24.198: INFO: Got endpoints: latency-svc-nwdjh [89.103408ms]
    Feb  9 00:27:24.198: INFO: Created: latency-svc-6jskf
    Feb  9 00:27:24.206: INFO: Got endpoints: latency-svc-6jskf [97.220609ms]
    Feb  9 00:27:24.208: INFO: Created: latency-svc-dg4qc
    Feb  9 00:27:24.212: INFO: Got endpoints: latency-svc-dg4qc [103.552565ms]
    Feb  9 00:27:24.214: INFO: Created: latency-svc-nwmpg
    Feb  9 00:27:24.219: INFO: Got endpoints: latency-svc-nwmpg [109.962524ms]
    Feb  9 00:27:24.222: INFO: Created: latency-svc-pksdt
    Feb  9 00:27:24.227: INFO: Got endpoints: latency-svc-pksdt [118.537336ms]
    Feb  9 00:27:24.231: INFO: Created: latency-svc-6t6zr
    Feb  9 00:27:24.236: INFO: Got endpoints: latency-svc-6t6zr [126.917945ms]
    Feb  9 00:27:24.238: INFO: Created: latency-svc-4pxhh
    Feb  9 00:27:24.242: INFO: Got endpoints: latency-svc-4pxhh [132.597685ms]
    Feb  9 00:27:24.245: INFO: Created: latency-svc-pjd6x
    Feb  9 00:27:24.249: INFO: Got endpoints: latency-svc-pjd6x [115.385959ms]
    Feb  9 00:27:24.253: INFO: Created: latency-svc-qbzpm
    Feb  9 00:27:24.257: INFO: Got endpoints: latency-svc-qbzpm [115.749267ms]
    Feb  9 00:27:24.259: INFO: Created: latency-svc-hznqk
    Feb  9 00:27:24.264: INFO: Got endpoints: latency-svc-hznqk [111.79937ms]
    Feb  9 00:27:24.268: INFO: Created: latency-svc-xwlsl
    Feb  9 00:27:24.273: INFO: Got endpoints: latency-svc-xwlsl [113.866921ms]
    Feb  9 00:27:24.274: INFO: Created: latency-svc-h98wz
    Feb  9 00:27:24.279: INFO: Got endpoints: latency-svc-h98wz [111.116253ms]
    Feb  9 00:27:24.282: INFO: Created: latency-svc-rmcf8
    Feb  9 00:27:24.287: INFO: Got endpoints: latency-svc-rmcf8 [111.00085ms]
    Feb  9 00:27:24.289: INFO: Created: latency-svc-lq4vg
    Feb  9 00:27:24.295: INFO: Got endpoints: latency-svc-lq4vg [112.511587ms]
    Feb  9 00:27:24.295: INFO: Created: latency-svc-8f4f4
    Feb  9 00:27:24.303: INFO: Got endpoints: latency-svc-8f4f4 [115.146153ms]
    Feb  9 00:27:24.307: INFO: Created: latency-svc-mdjmn
    Feb  9 00:27:24.312: INFO: Got endpoints: latency-svc-mdjmn [113.675016ms]
    Feb  9 00:27:24.315: INFO: Created: latency-svc-bhpcs
    Feb  9 00:27:24.320: INFO: Got endpoints: latency-svc-bhpcs [114.582139ms]
    Feb  9 00:27:24.321: INFO: Created: latency-svc-7l9s8
    Feb  9 00:27:24.327: INFO: Got endpoints: latency-svc-7l9s8 [114.884947ms]
    Feb  9 00:27:24.329: INFO: Created: latency-svc-2n7xg
    Feb  9 00:27:24.334: INFO: Got endpoints: latency-svc-2n7xg [114.889347ms]
    Feb  9 00:27:24.335: INFO: Created: latency-svc-z2zr7
    Feb  9 00:27:24.340: INFO: Got endpoints: latency-svc-z2zr7 [112.798295ms]
    Feb  9 00:27:24.342: INFO: Created: latency-svc-wsb4w
    Feb  9 00:27:24.347: INFO: Got endpoints: latency-svc-wsb4w [110.736644ms]
    Feb  9 00:27:24.349: INFO: Created: latency-svc-dxkt5
    Feb  9 00:27:24.354: INFO: Got endpoints: latency-svc-dxkt5 [111.566064ms]
    Feb  9 00:27:24.356: INFO: Created: latency-svc-l5xtf
    Feb  9 00:27:24.361: INFO: Got endpoints: latency-svc-l5xtf [111.42356ms]
    Feb  9 00:27:24.363: INFO: Created: latency-svc-4sjlq
    Feb  9 00:27:24.369: INFO: Got endpoints: latency-svc-4sjlq [111.482162ms]
    Feb  9 00:27:24.371: INFO: Created: latency-svc-sfh2r
    Feb  9 00:27:24.375: INFO: Got endpoints: latency-svc-sfh2r [110.879747ms]
    Feb  9 00:27:24.378: INFO: Created: latency-svc-n4fmt
    Feb  9 00:27:24.382: INFO: Got endpoints: latency-svc-n4fmt [108.738294ms]
    Feb  9 00:27:24.384: INFO: Created: latency-svc-brxn4
    Feb  9 00:27:24.391: INFO: Created: latency-svc-fdtdr
    Feb  9 00:27:24.398: INFO: Created: latency-svc-fxz89
    Feb  9 00:27:24.405: INFO: Created: latency-svc-mwn4d
    Feb  9 00:27:24.409: INFO: Got endpoints: latency-svc-brxn4 [129.96972ms]
    Feb  9 00:27:24.413: INFO: Created: latency-svc-ksd8j
    Feb  9 00:27:24.420: INFO: Created: latency-svc-z4whv
    Feb  9 00:27:24.427: INFO: Created: latency-svc-h4lw9
    Feb  9 00:27:24.434: INFO: Created: latency-svc-gg4nk
    Feb  9 00:27:24.440: INFO: Created: latency-svc-24pcl
    Feb  9 00:27:24.447: INFO: Created: latency-svc-8zmqg
    Feb  9 00:27:24.455: INFO: Created: latency-svc-gfl79
    Feb  9 00:27:24.459: INFO: Got endpoints: latency-svc-fdtdr [172.003061ms]
    Feb  9 00:27:24.461: INFO: Created: latency-svc-xqbxj
    Feb  9 00:27:24.468: INFO: Created: latency-svc-hxqqp
    Feb  9 00:27:24.475: INFO: Created: latency-svc-jcb9v
    Feb  9 00:27:24.482: INFO: Created: latency-svc-pcvq7
    Feb  9 00:27:24.489: INFO: Created: latency-svc-szfqb
    Feb  9 00:27:24.496: INFO: Created: latency-svc-h4ghb
    Feb  9 00:27:24.510: INFO: Got endpoints: latency-svc-fxz89 [215.006826ms]
    Feb  9 00:27:24.525: INFO: Created: latency-svc-b27pt
    Feb  9 00:27:24.558: INFO: Got endpoints: latency-svc-mwn4d [254.769312ms]
    Feb  9 00:27:24.571: INFO: Created: latency-svc-94hnw
    Feb  9 00:27:24.609: INFO: Got endpoints: latency-svc-ksd8j [296.784253ms]
    Feb  9 00:27:24.621: INFO: Created: latency-svc-qp2hc
    Feb  9 00:27:24.669: INFO: Got endpoints: latency-svc-z4whv [348.819741ms]
    Feb  9 00:27:24.683: INFO: Created: latency-svc-c2z9b
    Feb  9 00:27:24.708: INFO: Got endpoints: latency-svc-h4lw9 [381.233645ms]
    Feb  9 00:27:24.722: INFO: Created: latency-svc-ntj4t
    Feb  9 00:27:24.760: INFO: Got endpoints: latency-svc-gg4nk [426.612469ms]
    Feb  9 00:27:24.778: INFO: Created: latency-svc-2rj5l
    Feb  9 00:27:24.808: INFO: Got endpoints: latency-svc-24pcl [468.318502ms]
    Feb  9 00:27:24.823: INFO: Created: latency-svc-bk4ml
    Feb  9 00:27:24.876: INFO: Got endpoints: latency-svc-8zmqg [528.7534ms]
    Feb  9 00:27:24.890: INFO: Created: latency-svc-vvpjv
    Feb  9 00:27:24.911: INFO: Got endpoints: latency-svc-gfl79 [557.610915ms]
    Feb  9 00:27:24.926: INFO: Created: latency-svc-5d6pq
    Feb  9 00:27:24.957: INFO: Got endpoints: latency-svc-xqbxj [596.511478ms]
    Feb  9 00:27:24.971: INFO: Created: latency-svc-m6rtv
    Feb  9 00:27:25.010: INFO: Got endpoints: latency-svc-hxqqp [640.934679ms]
    Feb  9 00:27:25.029: INFO: Created: latency-svc-k42m9
    Feb  9 00:27:25.058: INFO: Got endpoints: latency-svc-jcb9v [683.069523ms]
    Feb  9 00:27:25.075: INFO: Created: latency-svc-wt55v
    Feb  9 00:27:25.109: INFO: Got endpoints: latency-svc-pcvq7 [726.842407ms]
    Feb  9 00:27:25.126: INFO: Created: latency-svc-jch85
    Feb  9 00:27:25.158: INFO: Got endpoints: latency-svc-szfqb [748.783051ms]
    Feb  9 00:27:25.172: INFO: Created: latency-svc-h8zg2
    Feb  9 00:27:25.209: INFO: Got endpoints: latency-svc-h4ghb [750.312189ms]
    Feb  9 00:27:25.222: INFO: Created: latency-svc-2twsl
    Feb  9 00:27:25.258: INFO: Got endpoints: latency-svc-b27pt [748.76505ms]
    Feb  9 00:27:25.272: INFO: Created: latency-svc-slk5h
    Feb  9 00:27:25.309: INFO: Got endpoints: latency-svc-94hnw [750.858702ms]
    Feb  9 00:27:25.322: INFO: Created: latency-svc-6bhl2
    Feb  9 00:27:25.359: INFO: Got endpoints: latency-svc-qp2hc [749.896078ms]
    Feb  9 00:27:25.372: INFO: Created: latency-svc-nc6fj
    Feb  9 00:27:25.411: INFO: Got endpoints: latency-svc-c2z9b [742.154187ms]
    Feb  9 00:27:25.425: INFO: Created: latency-svc-7x5vf
    Feb  9 00:27:25.460: INFO: Got endpoints: latency-svc-ntj4t [752.004931ms]
    Feb  9 00:27:25.477: INFO: Created: latency-svc-mjc8m
    Feb  9 00:27:25.512: INFO: Got endpoints: latency-svc-2rj5l [752.025231ms]
    Feb  9 00:27:25.526: INFO: Created: latency-svc-csbcx
    Feb  9 00:27:25.562: INFO: Got endpoints: latency-svc-bk4ml [753.160459ms]
    Feb  9 00:27:25.580: INFO: Created: latency-svc-w45kh
    Feb  9 00:27:25.609: INFO: Got endpoints: latency-svc-vvpjv [733.495072ms]
    Feb  9 00:27:25.624: INFO: Created: latency-svc-h65pf
    Feb  9 00:27:25.659: INFO: Got endpoints: latency-svc-5d6pq [747.195511ms]
    Feb  9 00:27:25.672: INFO: Created: latency-svc-7x5cl
    Feb  9 00:27:25.710: INFO: Got endpoints: latency-svc-m6rtv [752.127433ms]
    Feb  9 00:27:25.723: INFO: Created: latency-svc-lb678
    Feb  9 00:27:25.757: INFO: Got endpoints: latency-svc-k42m9 [747.854527ms]
    Feb  9 00:27:25.770: INFO: Created: latency-svc-mjk8m
    Feb  9 00:27:25.808: INFO: Got endpoints: latency-svc-wt55v [749.726074ms]
    Feb  9 00:27:25.821: INFO: Created: latency-svc-bjxqv
    Feb  9 00:27:25.859: INFO: Got endpoints: latency-svc-jch85 [749.884878ms]
    Feb  9 00:27:25.873: INFO: Created: latency-svc-gxlcr
    Feb  9 00:27:25.908: INFO: Got endpoints: latency-svc-h8zg2 [749.802176ms]
    Feb  9 00:27:25.922: INFO: Created: latency-svc-q7grs
    Feb  9 00:27:25.959: INFO: Got endpoints: latency-svc-2twsl [749.345964ms]
    Feb  9 00:27:25.972: INFO: Created: latency-svc-5496s
    Feb  9 00:27:26.009: INFO: Got endpoints: latency-svc-slk5h [750.473993ms]
    Feb  9 00:27:26.023: INFO: Created: latency-svc-l4zzs
    Feb  9 00:27:26.059: INFO: Got endpoints: latency-svc-6bhl2 [750.120884ms]
    Feb  9 00:27:26.072: INFO: Created: latency-svc-v6jr6
    Feb  9 00:27:26.108: INFO: Got endpoints: latency-svc-nc6fj [749.511469ms]
    Feb  9 00:27:26.123: INFO: Created: latency-svc-fjj2t
    Feb  9 00:27:26.159: INFO: Got endpoints: latency-svc-7x5vf [747.314614ms]
    Feb  9 00:27:26.173: INFO: Created: latency-svc-7jrzp
    Feb  9 00:27:26.209: INFO: Got endpoints: latency-svc-mjc8m [748.268038ms]
    Feb  9 00:27:26.222: INFO: Created: latency-svc-d456s
    Feb  9 00:27:26.261: INFO: Got endpoints: latency-svc-csbcx [748.868353ms]
    Feb  9 00:27:26.274: INFO: Created: latency-svc-q4s7m
    Feb  9 00:27:26.309: INFO: Got endpoints: latency-svc-w45kh [746.919404ms]
    Feb  9 00:27:26.323: INFO: Created: latency-svc-7plt2
    Feb  9 00:27:26.359: INFO: Got endpoints: latency-svc-h65pf [749.265062ms]
    Feb  9 00:27:26.373: INFO: Created: latency-svc-jvhkg
    Feb  9 00:27:26.409: INFO: Got endpoints: latency-svc-7x5cl [749.97168ms]
    Feb  9 00:27:26.424: INFO: Created: latency-svc-pqtct
    Feb  9 00:27:26.458: INFO: Got endpoints: latency-svc-lb678 [748.842453ms]
    Feb  9 00:27:26.472: INFO: Created: latency-svc-mxt9g
    Feb  9 00:27:26.509: INFO: Got endpoints: latency-svc-mjk8m [751.110708ms]
    Feb  9 00:27:26.522: INFO: Created: latency-svc-xj6h5
    Feb  9 00:27:26.558: INFO: Got endpoints: latency-svc-bjxqv [749.918578ms]
    Feb  9 00:27:26.573: INFO: Created: latency-svc-r8dwd
    Feb  9 00:27:26.609: INFO: Got endpoints: latency-svc-gxlcr [750.108584ms]
    Feb  9 00:27:26.623: INFO: Created: latency-svc-g4c9c
    Feb  9 00:27:26.657: INFO: Got endpoints: latency-svc-q7grs [749.15346ms]
    Feb  9 00:27:26.671: INFO: Created: latency-svc-54jwg
    Feb  9 00:27:26.708: INFO: Got endpoints: latency-svc-5496s [749.056758ms]
    Feb  9 00:27:26.722: INFO: Created: latency-svc-hzn5m
    Feb  9 00:27:26.758: INFO: Got endpoints: latency-svc-l4zzs [748.908554ms]
    Feb  9 00:27:26.773: INFO: Created: latency-svc-mz8rt
    Feb  9 00:27:26.817: INFO: Got endpoints: latency-svc-v6jr6 [758.524092ms]
    Feb  9 00:27:26.832: INFO: Created: latency-svc-qltcx
    Feb  9 00:27:26.858: INFO: Got endpoints: latency-svc-fjj2t [749.736275ms]
    Feb  9 00:27:26.880: INFO: Created: latency-svc-2wgb4
    Feb  9 00:27:26.909: INFO: Got endpoints: latency-svc-7jrzp [749.94978ms]
    Feb  9 00:27:26.923: INFO: Created: latency-svc-qt5bs
    Feb  9 00:27:26.958: INFO: Got endpoints: latency-svc-d456s [749.16056ms]
    Feb  9 00:27:26.980: INFO: Created: latency-svc-6gk56
    Feb  9 00:27:27.008: INFO: Got endpoints: latency-svc-q4s7m [746.717499ms]
    Feb  9 00:27:27.022: INFO: Created: latency-svc-w9m56
    Feb  9 00:27:27.057: INFO: Got endpoints: latency-svc-7plt2 [748.182436ms]
    Feb  9 00:27:27.071: INFO: Created: latency-svc-mkwpj
    Feb  9 00:27:27.107: INFO: Got endpoints: latency-svc-jvhkg [748.374441ms]
    Feb  9 00:27:27.121: INFO: Created: latency-svc-qjpvb
    Feb  9 00:27:27.158: INFO: Got endpoints: latency-svc-pqtct [749.16136ms]
    Feb  9 00:27:27.172: INFO: Created: latency-svc-7vzgk
    Feb  9 00:27:27.210: INFO: Got endpoints: latency-svc-mxt9g [751.19761ms]
    Feb  9 00:27:27.223: INFO: Created: latency-svc-4gntt
    Feb  9 00:27:27.258: INFO: Got endpoints: latency-svc-xj6h5 [749.117659ms]
    Feb  9 00:27:27.271: INFO: Created: latency-svc-hgdg9
    Feb  9 00:27:27.310: INFO: Got endpoints: latency-svc-r8dwd [751.615621ms]
    Feb  9 00:27:27.324: INFO: Created: latency-svc-n5ld4
    Feb  9 00:27:27.358: INFO: Got endpoints: latency-svc-g4c9c [749.210661ms]
    Feb  9 00:27:27.372: INFO: Created: latency-svc-lxs4p
    Feb  9 00:27:27.409: INFO: Got endpoints: latency-svc-54jwg [751.772925ms]
    Feb  9 00:27:27.423: INFO: Created: latency-svc-s8dt6
    Feb  9 00:27:27.457: INFO: Got endpoints: latency-svc-hzn5m [749.18126ms]
    Feb  9 00:27:27.471: INFO: Created: latency-svc-pkgcz
    Feb  9 00:27:27.509: INFO: Got endpoints: latency-svc-mz8rt [751.302713ms]
    Feb  9 00:27:27.524: INFO: Created: latency-svc-qfgkh
    Feb  9 00:27:27.559: INFO: Got endpoints: latency-svc-qltcx [741.409068ms]
    Feb  9 00:27:27.572: INFO: Created: latency-svc-nwbj2
    Feb  9 00:27:27.609: INFO: Got endpoints: latency-svc-2wgb4 [749.995981ms]
    Feb  9 00:27:27.622: INFO: Created: latency-svc-d9fp9
    Feb  9 00:27:27.658: INFO: Got endpoints: latency-svc-qt5bs [748.886154ms]
    Feb  9 00:27:27.674: INFO: Created: latency-svc-26bp8
    Feb  9 00:27:27.708: INFO: Got endpoints: latency-svc-6gk56 [750.060982ms]
    Feb  9 00:27:27.722: INFO: Created: latency-svc-9bqvw
    Feb  9 00:27:27.758: INFO: Got endpoints: latency-svc-w9m56 [749.688374ms]
    Feb  9 00:27:27.773: INFO: Created: latency-svc-8ht4k
    Feb  9 00:27:27.809: INFO: Got endpoints: latency-svc-mkwpj [751.870227ms]
    Feb  9 00:27:27.822: INFO: Created: latency-svc-vp2vw
    Feb  9 00:27:27.858: INFO: Got endpoints: latency-svc-qjpvb [750.609796ms]
    Feb  9 00:27:27.871: INFO: Created: latency-svc-wg5sx
    Feb  9 00:27:27.909: INFO: Got endpoints: latency-svc-7vzgk [750.618796ms]
    Feb  9 00:27:27.922: INFO: Created: latency-svc-rqzss
    Feb  9 00:27:27.958: INFO: Got endpoints: latency-svc-4gntt [748.018432ms]
    Feb  9 00:27:27.971: INFO: Created: latency-svc-ch6sd
    Feb  9 00:27:28.009: INFO: Got endpoints: latency-svc-hgdg9 [751.307613ms]
    Feb  9 00:27:28.025: INFO: Created: latency-svc-68kqz
    Feb  9 00:27:28.058: INFO: Got endpoints: latency-svc-n5ld4 [748.035532ms]
    Feb  9 00:27:28.072: INFO: Created: latency-svc-wjsrs
    Feb  9 00:27:28.109: INFO: Got endpoints: latency-svc-lxs4p [750.866602ms]
    Feb  9 00:27:28.123: INFO: Created: latency-svc-9ld69
    Feb  9 00:27:28.157: INFO: Got endpoints: latency-svc-s8dt6 [748.220637ms]
    Feb  9 00:27:28.177: INFO: Created: latency-svc-4qgw9
    Feb  9 00:27:28.208: INFO: Got endpoints: latency-svc-pkgcz [751.020806ms]
    Feb  9 00:27:28.222: INFO: Created: latency-svc-w5vqr
    Feb  9 00:27:28.259: INFO: Got endpoints: latency-svc-qfgkh [748.930554ms]
    Feb  9 00:27:28.273: INFO: Created: latency-svc-tr9p7
    Feb  9 00:27:28.310: INFO: Got endpoints: latency-svc-nwbj2 [751.293613ms]
    Feb  9 00:27:28.323: INFO: Created: latency-svc-cbx5p
    Feb  9 00:27:28.360: INFO: Got endpoints: latency-svc-d9fp9 [751.018606ms]
    Feb  9 00:27:28.373: INFO: Created: latency-svc-jtt5v
    Feb  9 00:27:28.408: INFO: Got endpoints: latency-svc-26bp8 [749.734174ms]
    Feb  9 00:27:28.423: INFO: Created: latency-svc-hvmpr
    Feb  9 00:27:28.459: INFO: Got endpoints: latency-svc-9bqvw [750.413891ms]
    Feb  9 00:27:28.473: INFO: Created: latency-svc-4xrx7
    Feb  9 00:27:28.508: INFO: Got endpoints: latency-svc-8ht4k [750.445492ms]
    Feb  9 00:27:28.522: INFO: Created: latency-svc-lmmm7
    Feb  9 00:27:28.559: INFO: Got endpoints: latency-svc-vp2vw [750.162585ms]
    Feb  9 00:27:28.573: INFO: Created: latency-svc-7s5w2
    Feb  9 00:27:28.608: INFO: Got endpoints: latency-svc-wg5sx [749.94288ms]
    Feb  9 00:27:28.623: INFO: Created: latency-svc-gj4d4
    Feb  9 00:27:28.657: INFO: Got endpoints: latency-svc-rqzss [748.32684ms]
    Feb  9 00:27:28.671: INFO: Created: latency-svc-fchhc
    Feb  9 00:27:28.708: INFO: Got endpoints: latency-svc-ch6sd [750.510394ms]
    Feb  9 00:27:28.722: INFO: Created: latency-svc-mmcv9
    Feb  9 00:27:28.758: INFO: Got endpoints: latency-svc-68kqz [749.013756ms]
    Feb  9 00:27:28.772: INFO: Created: latency-svc-q8gdc
    Feb  9 00:27:28.807: INFO: Got endpoints: latency-svc-wjsrs [748.985856ms]
    Feb  9 00:27:28.822: INFO: Created: latency-svc-878gc
    Feb  9 00:27:28.858: INFO: Got endpoints: latency-svc-9ld69 [748.869353ms]
    Feb  9 00:27:28.873: INFO: Created: latency-svc-fjhnd
    Feb  9 00:27:28.909: INFO: Got endpoints: latency-svc-4qgw9 [751.617221ms]
    Feb  9 00:27:28.922: INFO: Created: latency-svc-znc8l
    Feb  9 00:27:28.959: INFO: Got endpoints: latency-svc-w5vqr [750.279688ms]
    Feb  9 00:27:28.972: INFO: Created: latency-svc-hlb6l
    Feb  9 00:27:29.009: INFO: Got endpoints: latency-svc-tr9p7 [750.081883ms]
    Feb  9 00:27:29.022: INFO: Created: latency-svc-q7f5k
    Feb  9 00:27:29.058: INFO: Got endpoints: latency-svc-cbx5p [747.809627ms]
    Feb  9 00:27:29.071: INFO: Created: latency-svc-6d9vz
    Feb  9 00:27:29.108: INFO: Got endpoints: latency-svc-jtt5v [748.446843ms]
    Feb  9 00:27:29.123: INFO: Created: latency-svc-424x7
    Feb  9 00:27:29.159: INFO: Got endpoints: latency-svc-hvmpr [750.711699ms]
    Feb  9 00:27:29.173: INFO: Created: latency-svc-d7kbd
    Feb  9 00:27:29.209: INFO: Got endpoints: latency-svc-4xrx7 [749.717674ms]
    Feb  9 00:27:29.222: INFO: Created: latency-svc-nrgk2
    Feb  9 00:27:29.258: INFO: Got endpoints: latency-svc-lmmm7 [749.392966ms]
    Feb  9 00:27:29.271: INFO: Created: latency-svc-wrgmw
    Feb  9 00:27:29.308: INFO: Got endpoints: latency-svc-7s5w2 [748.952355ms]
    Feb  9 00:27:29.322: INFO: Created: latency-svc-4n85p
    Feb  9 00:27:29.360: INFO: Got endpoints: latency-svc-gj4d4 [751.97863ms]
    Feb  9 00:27:29.376: INFO: Created: latency-svc-cf9gn
    Feb  9 00:27:29.409: INFO: Got endpoints: latency-svc-fchhc [752.109733ms]
    Feb  9 00:27:29.423: INFO: Created: latency-svc-mkqhf
    Feb  9 00:27:29.458: INFO: Got endpoints: latency-svc-mmcv9 [749.822376ms]
    Feb  9 00:27:29.473: INFO: Created: latency-svc-l9tjr
    Feb  9 00:27:29.509: INFO: Got endpoints: latency-svc-q8gdc [750.216186ms]
    Feb  9 00:27:29.526: INFO: Created: latency-svc-t9t2n
    Feb  9 00:27:29.559: INFO: Got endpoints: latency-svc-878gc [751.920129ms]
    Feb  9 00:27:29.579: INFO: Created: latency-svc-6rnb6
    Feb  9 00:27:29.608: INFO: Got endpoints: latency-svc-fjhnd [749.782575ms]
    Feb  9 00:27:29.621: INFO: Created: latency-svc-n9c69
    Feb  9 00:27:29.658: INFO: Got endpoints: latency-svc-znc8l [748.74825ms]
    Feb  9 00:27:29.671: INFO: Created: latency-svc-g2mvl
    Feb  9 00:27:29.709: INFO: Got endpoints: latency-svc-hlb6l [750.105783ms]
    Feb  9 00:27:29.722: INFO: Created: latency-svc-qcxnv
    Feb  9 00:27:29.757: INFO: Got endpoints: latency-svc-q7f5k [748.574646ms]
    Feb  9 00:27:29.774: INFO: Created: latency-svc-98pfr
    Feb  9 00:27:29.808: INFO: Got endpoints: latency-svc-6d9vz [749.732074ms]
    Feb  9 00:27:29.821: INFO: Created: latency-svc-x4kft
    Feb  9 00:27:29.858: INFO: Got endpoints: latency-svc-424x7 [749.17576ms]
    Feb  9 00:27:29.871: INFO: Created: latency-svc-hqlrp
    Feb  9 00:27:29.908: INFO: Got endpoints: latency-svc-d7kbd [749.215762ms]
    Feb  9 00:27:29.924: INFO: Created: latency-svc-rpq84
    Feb  9 00:27:29.960: INFO: Got endpoints: latency-svc-nrgk2 [751.299813ms]
    Feb  9 00:27:29.974: INFO: Created: latency-svc-2n4bm
    Feb  9 00:27:30.010: INFO: Got endpoints: latency-svc-wrgmw [752.145734ms]
    Feb  9 00:27:30.023: INFO: Created: latency-svc-998vb
    Feb  9 00:27:30.066: INFO: Got endpoints: latency-svc-4n85p [758.080881ms]
    Feb  9 00:27:30.089: INFO: Created: latency-svc-thrs7
    Feb  9 00:27:30.108: INFO: Got endpoints: latency-svc-cf9gn [748.066533ms]
    Feb  9 00:27:30.125: INFO: Created: latency-svc-gnzh9
    Feb  9 00:27:30.157: INFO: Got endpoints: latency-svc-mkqhf [747.94293ms]
    Feb  9 00:27:30.171: INFO: Created: latency-svc-qmk6r
    Feb  9 00:27:30.208: INFO: Got endpoints: latency-svc-l9tjr [749.596171ms]
    Feb  9 00:27:30.221: INFO: Created: latency-svc-knh75
    Feb  9 00:27:30.259: INFO: Got endpoints: latency-svc-t9t2n [750.128684ms]
    Feb  9 00:27:30.273: INFO: Created: latency-svc-hlr4x
    Feb  9 00:27:30.308: INFO: Got endpoints: latency-svc-6rnb6 [749.052857ms]
    Feb  9 00:27:30.323: INFO: Created: latency-svc-mj5j6
    Feb  9 00:27:30.361: INFO: Got endpoints: latency-svc-n9c69 [752.831351ms]
    Feb  9 00:27:30.385: INFO: Created: latency-svc-7tbvs
    Feb  9 00:27:30.409: INFO: Got endpoints: latency-svc-g2mvl [750.902803ms]
    Feb  9 00:27:30.422: INFO: Created: latency-svc-b2m75
    Feb  9 00:27:30.459: INFO: Got endpoints: latency-svc-qcxnv [749.666072ms]
    Feb  9 00:27:30.474: INFO: Created: latency-svc-j7t98
    Feb  9 00:27:30.509: INFO: Got endpoints: latency-svc-98pfr [752.118233ms]
    Feb  9 00:27:30.523: INFO: Created: latency-svc-fqx22
    Feb  9 00:27:30.560: INFO: Got endpoints: latency-svc-x4kft [752.42144ms]
    Feb  9 00:27:30.573: INFO: Created: latency-svc-ckbtt
    Feb  9 00:27:30.609: INFO: Got endpoints: latency-svc-hqlrp [750.937904ms]
    Feb  9 00:27:30.622: INFO: Created: latency-svc-dvlhj
    Feb  9 00:27:30.659: INFO: Got endpoints: latency-svc-rpq84 [750.297888ms]
    Feb  9 00:27:30.673: INFO: Created: latency-svc-cjmtw
    Feb  9 00:27:30.708: INFO: Got endpoints: latency-svc-2n4bm [747.628522ms]
    Feb  9 00:27:30.722: INFO: Created: latency-svc-hjgsr
    Feb  9 00:27:30.759: INFO: Got endpoints: latency-svc-998vb [748.712249ms]
    Feb  9 00:27:30.775: INFO: Created: latency-svc-frk28
    Feb  9 00:27:30.809: INFO: Got endpoints: latency-svc-thrs7 [742.893905ms]
    Feb  9 00:27:30.823: INFO: Created: latency-svc-kkdrs
    Feb  9 00:27:30.859: INFO: Got endpoints: latency-svc-gnzh9 [750.271688ms]
    Feb  9 00:27:30.873: INFO: Created: latency-svc-vzzpc
    Feb  9 00:27:30.908: INFO: Got endpoints: latency-svc-qmk6r [750.942104ms]
    Feb  9 00:27:30.922: INFO: Created: latency-svc-7z8hm
    Feb  9 00:27:30.958: INFO: Got endpoints: latency-svc-knh75 [750.134968ms]
    Feb  9 00:27:30.971: INFO: Created: latency-svc-96zhk
    Feb  9 00:27:31.009: INFO: Got endpoints: latency-svc-hlr4x [749.947002ms]
    Feb  9 00:27:31.022: INFO: Created: latency-svc-gl4ww
    Feb  9 00:27:31.058: INFO: Got endpoints: latency-svc-mj5j6 [749.713736ms]
    Feb  9 00:27:31.072: INFO: Created: latency-svc-9q97n
    Feb  9 00:27:31.110: INFO: Got endpoints: latency-svc-7tbvs [748.636746ms]
    Feb  9 00:27:31.124: INFO: Created: latency-svc-pgjhb
    Feb  9 00:27:31.158: INFO: Got endpoints: latency-svc-b2m75 [748.886394ms]
    Feb  9 00:27:31.172: INFO: Created: latency-svc-bfdrb
    Feb  9 00:27:31.209: INFO: Got endpoints: latency-svc-j7t98 [749.824356ms]
    Feb  9 00:27:31.223: INFO: Created: latency-svc-dmfs2
    Feb  9 00:27:31.261: INFO: Got endpoints: latency-svc-fqx22 [751.34813ms]
    Feb  9 00:27:31.274: INFO: Created: latency-svc-zxsrg
    Feb  9 00:27:31.309: INFO: Got endpoints: latency-svc-ckbtt [748.358298ms]
    Feb  9 00:27:31.322: INFO: Created: latency-svc-zvjk9
    Feb  9 00:27:31.358: INFO: Got endpoints: latency-svc-dvlhj [749.029455ms]
    Feb  9 00:27:31.374: INFO: Created: latency-svc-hrpdp
    Feb  9 00:27:31.410: INFO: Got endpoints: latency-svc-cjmtw [750.942839ms]
    Feb  9 00:27:31.424: INFO: Created: latency-svc-zq6kl
    Feb  9 00:27:31.459: INFO: Got endpoints: latency-svc-hjgsr [751.125284ms]
    Feb  9 00:27:31.475: INFO: Created: latency-svc-5z2kh
    Feb  9 00:27:31.510: INFO: Got endpoints: latency-svc-frk28 [750.933918ms]
    Feb  9 00:27:31.524: INFO: Created: latency-svc-rz8x2
    Feb  9 00:27:31.558: INFO: Got endpoints: latency-svc-kkdrs [749.018011ms]
    Feb  9 00:27:31.572: INFO: Created: latency-svc-xmvbt
    Feb  9 00:27:31.609: INFO: Got endpoints: latency-svc-vzzpc [749.984172ms]
    Feb  9 00:27:31.626: INFO: Created: latency-svc-sjvn7
    Feb  9 00:27:31.658: INFO: Got endpoints: latency-svc-7z8hm [749.912011ms]
    Feb  9 00:27:31.672: INFO: Created: latency-svc-jv8nh
    Feb  9 00:27:31.709: INFO: Got endpoints: latency-svc-96zhk [750.551282ms]
    Feb  9 00:27:31.726: INFO: Created: latency-svc-vcrl6
    Feb  9 00:27:31.758: INFO: Got endpoints: latency-svc-gl4ww [749.327053ms]
    Feb  9 00:27:31.775: INFO: Created: latency-svc-8mgxf
    Feb  9 00:27:31.809: INFO: Got endpoints: latency-svc-9q97n [750.949491ms]
    Feb  9 00:27:31.822: INFO: Created: latency-svc-pbjjp
    Feb  9 00:27:31.859: INFO: Got endpoints: latency-svc-pgjhb [748.088223ms]
    Feb  9 00:27:31.872: INFO: Created: latency-svc-k82r8
    Feb  9 00:27:31.912: INFO: Got endpoints: latency-svc-bfdrb [753.194144ms]
    Feb  9 00:27:31.925: INFO: Created: latency-svc-tgbkt
    Feb  9 00:27:31.971: INFO: Got endpoints: latency-svc-dmfs2 [761.93595ms]
    Feb  9 00:27:32.009: INFO: Got endpoints: latency-svc-zxsrg [748.549935ms]
    Feb  9 00:27:32.060: INFO: Got endpoints: latency-svc-zvjk9 [751.438502ms]
    Feb  9 00:27:32.110: INFO: Got endpoints: latency-svc-hrpdp [752.15512ms]
    Feb  9 00:27:32.159: INFO: Got endpoints: latency-svc-zq6kl [749.223751ms]
    Feb  9 00:27:32.208: INFO: Got endpoints: latency-svc-5z2kh [749.492457ms]
    Feb  9 00:27:32.260: INFO: Got endpoints: latency-svc-rz8x2 [750.017869ms]
    Feb  9 00:27:32.309: INFO: Got endpoints: latency-svc-xmvbt [750.267275ms]
    Feb  9 00:27:32.359: INFO: Got endpoints: latency-svc-sjvn7 [749.784064ms]
    Feb  9 00:27:32.409: INFO: Got endpoints: latency-svc-jv8nh [750.92449ms]
    Feb  9 00:27:32.459: INFO: Got endpoints: latency-svc-vcrl6 [749.442055ms]
    Feb  9 00:27:32.509: INFO: Got endpoints: latency-svc-8mgxf [750.846489ms]
    Feb  9 00:27:32.560: INFO: Got endpoints: latency-svc-pbjjp [750.389978ms]
    Feb  9 00:27:32.609: INFO: Got endpoints: latency-svc-k82r8 [749.917067ms]
    Feb  9 00:27:32.659: INFO: Got endpoints: latency-svc-tgbkt [746.698491ms]
    Feb  9 00:27:32.659: INFO: Latencies: [25.676236ms 33.08792ms 44.327398ms 50.709357ms 59.178566ms 67.569874ms 73.403519ms 79.038258ms 89.103408ms 97.220609ms 103.552565ms 108.738294ms 109.962524ms 110.736644ms 110.879747ms 111.00085ms 111.116253ms 111.42356ms 111.482162ms 111.566064ms 111.79937ms 112.511587ms 112.798295ms 113.675016ms 113.866921ms 114.582139ms 114.884947ms 114.889347ms 115.146153ms 115.385959ms 115.749267ms 118.537336ms 126.917945ms 129.96972ms 132.597685ms 172.003061ms 215.006826ms 254.769312ms 296.784253ms 348.819741ms 381.233645ms 426.612469ms 468.318502ms 528.7534ms 557.610915ms 596.511478ms 640.934679ms 683.069523ms 726.842407ms 733.495072ms 741.409068ms 742.154187ms 742.893905ms 746.698491ms 746.717499ms 746.919404ms 747.195511ms 747.314614ms 747.628522ms 747.809627ms 747.854527ms 747.94293ms 748.018432ms 748.035532ms 748.066533ms 748.088223ms 748.182436ms 748.220637ms 748.268038ms 748.32684ms 748.358298ms 748.374441ms 748.446843ms 748.549935ms 748.574646ms 748.636746ms 748.712249ms 748.74825ms 748.76505ms 748.783051ms 748.842453ms 748.868353ms 748.869353ms 748.886154ms 748.886394ms 748.908554ms 748.930554ms 748.952355ms 748.985856ms 749.013756ms 749.018011ms 749.029455ms 749.052857ms 749.056758ms 749.117659ms 749.15346ms 749.16056ms 749.16136ms 749.17576ms 749.18126ms 749.210661ms 749.215762ms 749.223751ms 749.265062ms 749.327053ms 749.345964ms 749.392966ms 749.442055ms 749.492457ms 749.511469ms 749.596171ms 749.666072ms 749.688374ms 749.713736ms 749.717674ms 749.726074ms 749.732074ms 749.734174ms 749.736275ms 749.782575ms 749.784064ms 749.802176ms 749.822376ms 749.824356ms 749.884878ms 749.896078ms 749.912011ms 749.917067ms 749.918578ms 749.94288ms 749.947002ms 749.94978ms 749.97168ms 749.984172ms 749.995981ms 750.017869ms 750.060982ms 750.081883ms 750.105783ms 750.108584ms 750.120884ms 750.128684ms 750.134968ms 750.162585ms 750.216186ms 750.267275ms 750.271688ms 750.279688ms 750.297888ms 750.312189ms 750.389978ms 750.413891ms 750.445492ms 750.473993ms 750.510394ms 750.551282ms 750.609796ms 750.618796ms 750.711699ms 750.846489ms 750.858702ms 750.866602ms 750.902803ms 750.92449ms 750.933918ms 750.937904ms 750.942104ms 750.942839ms 750.949491ms 751.018606ms 751.020806ms 751.110708ms 751.125284ms 751.19761ms 751.293613ms 751.299813ms 751.302713ms 751.307613ms 751.34813ms 751.438502ms 751.615621ms 751.617221ms 751.772925ms 751.870227ms 751.920129ms 751.97863ms 752.004931ms 752.025231ms 752.109733ms 752.118233ms 752.127433ms 752.145734ms 752.15512ms 752.42144ms 752.831351ms 753.160459ms 753.194144ms 758.080881ms 758.524092ms 761.93595ms]
    Feb  9 00:27:32.659: INFO: 50 %ile: 749.210661ms
    Feb  9 00:27:32.660: INFO: 90 %ile: 751.615621ms
    Feb  9 00:27:32.660: INFO: 99 %ile: 758.524092ms
    Feb  9 00:27:32.660: INFO: Total sample count: 200
    [AfterEach] [sig-network] Service endpoints latency
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:27:32.660: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      tear down framework | framework.go:193
    STEP: Destroying namespace "svc-latency-4943" for this suite. 02/09/23 00:27:32.669
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with downward pod [Conformance]
  test/e2e/storage/subpath.go:92
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:27:32.68
Feb  9 00:27:32.680: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename subpath 02/09/23 00:27:32.681
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:27:32.697
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:27:32.701
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 02/09/23 00:27:32.704
[It] should support subpaths with downward pod [Conformance]
  test/e2e/storage/subpath.go:92
STEP: Creating pod pod-subpath-test-downwardapi-w9h9 02/09/23 00:27:32.719
STEP: Creating a pod to test atomic-volume-subpath 02/09/23 00:27:32.719
Feb  9 00:27:32.732: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-w9h9" in namespace "subpath-6255" to be "Succeeded or Failed"
Feb  9 00:27:32.738: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Pending", Reason="", readiness=false. Elapsed: 6.491753ms
Feb  9 00:27:34.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013452434s
Feb  9 00:27:36.746: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 4.014844684s
Feb  9 00:27:38.744: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 6.012584747s
Feb  9 00:27:40.746: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 8.014432018s
Feb  9 00:27:42.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 10.013255168s
Feb  9 00:27:44.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 12.013322433s
Feb  9 00:27:46.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 14.013378998s
Feb  9 00:27:48.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 16.013519271s
Feb  9 00:27:50.744: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 18.012831987s
Feb  9 00:27:52.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 20.013861441s
Feb  9 00:27:54.746: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 22.013886073s
Feb  9 00:27:56.749: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=false. Elapsed: 24.017432911s
Feb  9 00:27:58.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.013033961s
STEP: Saw pod success 02/09/23 00:27:58.745
Feb  9 00:27:58.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9" satisfied condition "Succeeded or Failed"
Feb  9 00:27:58.751: INFO: Trying to get logs from node aks-nodes-15799032-vmss000001 pod pod-subpath-test-downwardapi-w9h9 container test-container-subpath-downwardapi-w9h9: <nil>
STEP: delete the pod 02/09/23 00:27:58.764
Feb  9 00:27:58.781: INFO: Waiting for pod pod-subpath-test-downwardapi-w9h9 to disappear
Feb  9 00:27:58.787: INFO: Pod pod-subpath-test-downwardapi-w9h9 no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-w9h9 02/09/23 00:27:58.787
Feb  9 00:27:58.787: INFO: Deleting pod "pod-subpath-test-downwardapi-w9h9" in namespace "subpath-6255"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Feb  9 00:27:58.793: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-6255" for this suite. 02/09/23 00:27:58.801
------------------------------
â€¢ [SLOW TEST] [26.130 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/storage/subpath.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:27:32.68
    Feb  9 00:27:32.680: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename subpath 02/09/23 00:27:32.681
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:27:32.697
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:27:32.701
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 02/09/23 00:27:32.704
    [It] should support subpaths with downward pod [Conformance]
      test/e2e/storage/subpath.go:92
    STEP: Creating pod pod-subpath-test-downwardapi-w9h9 02/09/23 00:27:32.719
    STEP: Creating a pod to test atomic-volume-subpath 02/09/23 00:27:32.719
    Feb  9 00:27:32.732: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-w9h9" in namespace "subpath-6255" to be "Succeeded or Failed"
    Feb  9 00:27:32.738: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Pending", Reason="", readiness=false. Elapsed: 6.491753ms
    Feb  9 00:27:34.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013452434s
    Feb  9 00:27:36.746: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 4.014844684s
    Feb  9 00:27:38.744: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 6.012584747s
    Feb  9 00:27:40.746: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 8.014432018s
    Feb  9 00:27:42.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 10.013255168s
    Feb  9 00:27:44.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 12.013322433s
    Feb  9 00:27:46.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 14.013378998s
    Feb  9 00:27:48.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 16.013519271s
    Feb  9 00:27:50.744: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 18.012831987s
    Feb  9 00:27:52.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 20.013861441s
    Feb  9 00:27:54.746: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=true. Elapsed: 22.013886073s
    Feb  9 00:27:56.749: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Running", Reason="", readiness=false. Elapsed: 24.017432911s
    Feb  9 00:27:58.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.013033961s
    STEP: Saw pod success 02/09/23 00:27:58.745
    Feb  9 00:27:58.745: INFO: Pod "pod-subpath-test-downwardapi-w9h9" satisfied condition "Succeeded or Failed"
    Feb  9 00:27:58.751: INFO: Trying to get logs from node aks-nodes-15799032-vmss000001 pod pod-subpath-test-downwardapi-w9h9 container test-container-subpath-downwardapi-w9h9: <nil>
    STEP: delete the pod 02/09/23 00:27:58.764
    Feb  9 00:27:58.781: INFO: Waiting for pod pod-subpath-test-downwardapi-w9h9 to disappear
    Feb  9 00:27:58.787: INFO: Pod pod-subpath-test-downwardapi-w9h9 no longer exists
    STEP: Deleting pod pod-subpath-test-downwardapi-w9h9 02/09/23 00:27:58.787
    Feb  9 00:27:58.787: INFO: Deleting pod "pod-subpath-test-downwardapi-w9h9" in namespace "subpath-6255"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:27:58.793: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-6255" for this suite. 02/09/23 00:27:58.801
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:27:58.813
Feb  9 00:27:58.813: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-probe 02/09/23 00:27:58.813
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:27:58.829
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:27:58.833
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135
STEP: Creating pod busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1 in namespace container-probe-8122 02/09/23 00:27:58.837
Feb  9 00:27:58.851: INFO: Waiting up to 5m0s for pod "busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1" in namespace "container-probe-8122" to be "not pending"
Feb  9 00:27:58.860: INFO: Pod "busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1": Phase="Pending", Reason="", readiness=false. Elapsed: 8.278286ms
Feb  9 00:28:00.866: INFO: Pod "busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1": Phase="Running", Reason="", readiness=true. Elapsed: 2.014569976s
Feb  9 00:28:00.866: INFO: Pod "busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1" satisfied condition "not pending"
Feb  9 00:28:00.866: INFO: Started pod busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1 in namespace container-probe-8122
STEP: checking the pod's current state and verifying that restartCount is present 02/09/23 00:28:00.866
Feb  9 00:28:00.871: INFO: Initial restart count of pod busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1 is 0
Feb  9 00:28:51.047: INFO: Restart count of pod container-probe-8122/busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1 is now 1 (50.175529391s elapsed)
STEP: deleting the pod 02/09/23 00:28:51.047
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Feb  9 00:28:51.063: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-8122" for this suite. 02/09/23 00:28:51.071
------------------------------
â€¢ [SLOW TEST] [52.267 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:27:58.813
    Feb  9 00:27:58.813: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-probe 02/09/23 00:27:58.813
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:27:58.829
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:27:58.833
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:135
    STEP: Creating pod busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1 in namespace container-probe-8122 02/09/23 00:27:58.837
    Feb  9 00:27:58.851: INFO: Waiting up to 5m0s for pod "busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1" in namespace "container-probe-8122" to be "not pending"
    Feb  9 00:27:58.860: INFO: Pod "busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1": Phase="Pending", Reason="", readiness=false. Elapsed: 8.278286ms
    Feb  9 00:28:00.866: INFO: Pod "busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1": Phase="Running", Reason="", readiness=true. Elapsed: 2.014569976s
    Feb  9 00:28:00.866: INFO: Pod "busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1" satisfied condition "not pending"
    Feb  9 00:28:00.866: INFO: Started pod busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1 in namespace container-probe-8122
    STEP: checking the pod's current state and verifying that restartCount is present 02/09/23 00:28:00.866
    Feb  9 00:28:00.871: INFO: Initial restart count of pod busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1 is 0
    Feb  9 00:28:51.047: INFO: Restart count of pod container-probe-8122/busybox-30c4976c-7b64-4af1-a4ea-f4b365840ce1 is now 1 (50.175529391s elapsed)
    STEP: deleting the pod 02/09/23 00:28:51.047
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:28:51.063: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-8122" for this suite. 02/09/23 00:28:51.071
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:28:51.081
Feb  9 00:28:51.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename replication-controller 02/09/23 00:28:51.082
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:28:51.1
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:28:51.105
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110
STEP: creating a ReplicationController 02/09/23 00:28:51.114
STEP: waiting for RC to be added 02/09/23 00:28:51.121
STEP: waiting for available Replicas 02/09/23 00:28:51.121
STEP: patching ReplicationController 02/09/23 00:28:53.262
STEP: waiting for RC to be modified 02/09/23 00:28:53.271
STEP: patching ReplicationController status 02/09/23 00:28:53.272
STEP: waiting for RC to be modified 02/09/23 00:28:53.278
STEP: waiting for available Replicas 02/09/23 00:28:53.278
STEP: fetching ReplicationController status 02/09/23 00:28:53.284
STEP: patching ReplicationController scale 02/09/23 00:28:53.289
STEP: waiting for RC to be modified 02/09/23 00:28:53.297
STEP: waiting for ReplicationController's scale to be the max amount 02/09/23 00:28:53.297
STEP: fetching ReplicationController; ensuring that it's patched 02/09/23 00:28:55.289
STEP: updating ReplicationController status 02/09/23 00:28:55.294
STEP: waiting for RC to be modified 02/09/23 00:28:55.302
STEP: listing all ReplicationControllers 02/09/23 00:28:55.302
STEP: checking that ReplicationController has expected values 02/09/23 00:28:55.308
STEP: deleting ReplicationControllers by collection 02/09/23 00:28:55.308
STEP: waiting for ReplicationController to have a DELETED watchEvent 02/09/23 00:28:55.319
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Feb  9 00:28:55.382: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-4767" for this suite. 02/09/23 00:28:55.39
------------------------------
â€¢ [4.319 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:28:51.081
    Feb  9 00:28:51.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename replication-controller 02/09/23 00:28:51.082
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:28:51.1
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:28:51.105
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should test the lifecycle of a ReplicationController [Conformance]
      test/e2e/apps/rc.go:110
    STEP: creating a ReplicationController 02/09/23 00:28:51.114
    STEP: waiting for RC to be added 02/09/23 00:28:51.121
    STEP: waiting for available Replicas 02/09/23 00:28:51.121
    STEP: patching ReplicationController 02/09/23 00:28:53.262
    STEP: waiting for RC to be modified 02/09/23 00:28:53.271
    STEP: patching ReplicationController status 02/09/23 00:28:53.272
    STEP: waiting for RC to be modified 02/09/23 00:28:53.278
    STEP: waiting for available Replicas 02/09/23 00:28:53.278
    STEP: fetching ReplicationController status 02/09/23 00:28:53.284
    STEP: patching ReplicationController scale 02/09/23 00:28:53.289
    STEP: waiting for RC to be modified 02/09/23 00:28:53.297
    STEP: waiting for ReplicationController's scale to be the max amount 02/09/23 00:28:53.297
    STEP: fetching ReplicationController; ensuring that it's patched 02/09/23 00:28:55.289
    STEP: updating ReplicationController status 02/09/23 00:28:55.294
    STEP: waiting for RC to be modified 02/09/23 00:28:55.302
    STEP: listing all ReplicationControllers 02/09/23 00:28:55.302
    STEP: checking that ReplicationController has expected values 02/09/23 00:28:55.308
    STEP: deleting ReplicationControllers by collection 02/09/23 00:28:55.308
    STEP: waiting for ReplicationController to have a DELETED watchEvent 02/09/23 00:28:55.319
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:28:55.382: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-4767" for this suite. 02/09/23 00:28:55.39
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:28:55.403
Feb  9 00:28:55.403: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename replication-controller 02/09/23 00:28:55.405
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:28:55.422
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:28:55.426
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92
STEP: Given a Pod with a 'name' label pod-adoption is created 02/09/23 00:28:55.43
Feb  9 00:28:55.442: INFO: Waiting up to 5m0s for pod "pod-adoption" in namespace "replication-controller-4494" to be "running and ready"
Feb  9 00:28:55.448: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 5.259793ms
Feb  9 00:28:55.448: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:28:57.455: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012840584s
Feb  9 00:28:57.455: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:28:59.454: INFO: Pod "pod-adoption": Phase="Running", Reason="", readiness=true. Elapsed: 4.011844898s
Feb  9 00:28:59.454: INFO: The phase of Pod pod-adoption is Running (Ready = true)
Feb  9 00:28:59.454: INFO: Pod "pod-adoption" satisfied condition "running and ready"
STEP: When a replication controller with a matching selector is created 02/09/23 00:28:59.46
STEP: Then the orphan pod is adopted 02/09/23 00:28:59.467
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Feb  9 00:29:00.478: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-4494" for this suite. 02/09/23 00:29:00.488
------------------------------
â€¢ [SLOW TEST] [5.095 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:28:55.403
    Feb  9 00:28:55.403: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename replication-controller 02/09/23 00:28:55.405
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:28:55.422
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:28:55.426
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should adopt matching pods on creation [Conformance]
      test/e2e/apps/rc.go:92
    STEP: Given a Pod with a 'name' label pod-adoption is created 02/09/23 00:28:55.43
    Feb  9 00:28:55.442: INFO: Waiting up to 5m0s for pod "pod-adoption" in namespace "replication-controller-4494" to be "running and ready"
    Feb  9 00:28:55.448: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 5.259793ms
    Feb  9 00:28:55.448: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:28:57.455: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012840584s
    Feb  9 00:28:57.455: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:28:59.454: INFO: Pod "pod-adoption": Phase="Running", Reason="", readiness=true. Elapsed: 4.011844898s
    Feb  9 00:28:59.454: INFO: The phase of Pod pod-adoption is Running (Ready = true)
    Feb  9 00:28:59.454: INFO: Pod "pod-adoption" satisfied condition "running and ready"
    STEP: When a replication controller with a matching selector is created 02/09/23 00:28:59.46
    STEP: Then the orphan pod is adopted 02/09/23 00:28:59.467
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:29:00.478: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-4494" for this suite. 02/09/23 00:29:00.488
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:29:00.5
Feb  9 00:29:00.500: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 00:29:00.501
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:29:00.516
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:29:00.52
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130
STEP: Creating the pod 02/09/23 00:29:00.524
Feb  9 00:29:00.536: INFO: Waiting up to 5m0s for pod "labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16" in namespace "downward-api-7010" to be "running and ready"
Feb  9 00:29:00.543: INFO: Pod "labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16": Phase="Pending", Reason="", readiness=false. Elapsed: 7.434307ms
Feb  9 00:29:00.543: INFO: The phase of Pod labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:29:02.550: INFO: Pod "labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16": Phase="Running", Reason="", readiness=true. Elapsed: 2.014499807s
Feb  9 00:29:02.550: INFO: The phase of Pod labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16 is Running (Ready = true)
Feb  9 00:29:02.551: INFO: Pod "labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16" satisfied condition "running and ready"
Feb  9 00:29:03.084: INFO: Successfully updated pod "labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Feb  9 00:29:05.108: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-7010" for this suite. 02/09/23 00:29:05.118
------------------------------
â€¢ [4.627 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:29:00.5
    Feb  9 00:29:00.500: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 00:29:00.501
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:29:00.516
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:29:00.52
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should update labels on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:130
    STEP: Creating the pod 02/09/23 00:29:00.524
    Feb  9 00:29:00.536: INFO: Waiting up to 5m0s for pod "labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16" in namespace "downward-api-7010" to be "running and ready"
    Feb  9 00:29:00.543: INFO: Pod "labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16": Phase="Pending", Reason="", readiness=false. Elapsed: 7.434307ms
    Feb  9 00:29:00.543: INFO: The phase of Pod labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:29:02.550: INFO: Pod "labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16": Phase="Running", Reason="", readiness=true. Elapsed: 2.014499807s
    Feb  9 00:29:02.550: INFO: The phase of Pod labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16 is Running (Ready = true)
    Feb  9 00:29:02.551: INFO: Pod "labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16" satisfied condition "running and ready"
    Feb  9 00:29:03.084: INFO: Successfully updated pod "labelsupdatea6ebfa13-7a4d-4ba3-9277-4e3d1d975f16"
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:29:05.108: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-7010" for this suite. 02/09/23 00:29:05.118
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] CronJob
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:29:05.128
Feb  9 00:29:05.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename cronjob 02/09/23 00:29:05.129
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:29:05.143
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:29:05.147
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124
STEP: Creating a ForbidConcurrent cronjob 02/09/23 00:29:05.151
STEP: Ensuring a job is scheduled 02/09/23 00:29:05.158
STEP: Ensuring exactly one is scheduled 02/09/23 00:30:01.166
STEP: Ensuring exactly one running job exists by listing jobs explicitly 02/09/23 00:30:01.172
STEP: Ensuring no more jobs are scheduled 02/09/23 00:30:01.178
STEP: Removing cronjob 02/09/23 00:35:01.189
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Feb  9 00:35:01.199: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-3154" for this suite. 02/09/23 00:35:01.207
------------------------------
â€¢ [SLOW TEST] [356.089 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:29:05.128
    Feb  9 00:29:05.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename cronjob 02/09/23 00:29:05.129
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:29:05.143
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:29:05.147
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
      test/e2e/apps/cronjob.go:124
    STEP: Creating a ForbidConcurrent cronjob 02/09/23 00:29:05.151
    STEP: Ensuring a job is scheduled 02/09/23 00:29:05.158
    STEP: Ensuring exactly one is scheduled 02/09/23 00:30:01.166
    STEP: Ensuring exactly one running job exists by listing jobs explicitly 02/09/23 00:30:01.172
    STEP: Ensuring no more jobs are scheduled 02/09/23 00:30:01.178
    STEP: Removing cronjob 02/09/23 00:35:01.189
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:35:01.199: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-3154" for this suite. 02/09/23 00:35:01.207
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:35:01.219
Feb  9 00:35:01.219: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 00:35:01.219
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:35:01.239
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:35:01.243
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119
STEP: Creating secret with name projected-secret-test-e8d06309-0417-4043-b287-dbc960dee1b3 02/09/23 00:35:01.247
STEP: Creating a pod to test consume secrets 02/09/23 00:35:01.253
Feb  9 00:35:01.268: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279" in namespace "projected-572" to be "Succeeded or Failed"
Feb  9 00:35:01.276: INFO: Pod "pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279": Phase="Pending", Reason="", readiness=false. Elapsed: 7.372642ms
Feb  9 00:35:03.283: INFO: Pod "pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014769343s
Feb  9 00:35:05.283: INFO: Pod "pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014395301s
STEP: Saw pod success 02/09/23 00:35:05.283
Feb  9 00:35:05.283: INFO: Pod "pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279" satisfied condition "Succeeded or Failed"
Feb  9 00:35:05.290: INFO: Trying to get logs from node aks-nodes-15799032-vmss000001 pod pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279 container secret-volume-test: <nil>
STEP: delete the pod 02/09/23 00:35:05.305
Feb  9 00:35:05.336: INFO: Waiting for pod pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279 to disappear
Feb  9 00:35:05.341: INFO: Pod pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Feb  9 00:35:05.341: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-572" for this suite. 02/09/23 00:35:05.35
------------------------------
â€¢ [4.142 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:35:01.219
    Feb  9 00:35:01.219: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 00:35:01.219
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:35:01.239
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:35:01.243
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:119
    STEP: Creating secret with name projected-secret-test-e8d06309-0417-4043-b287-dbc960dee1b3 02/09/23 00:35:01.247
    STEP: Creating a pod to test consume secrets 02/09/23 00:35:01.253
    Feb  9 00:35:01.268: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279" in namespace "projected-572" to be "Succeeded or Failed"
    Feb  9 00:35:01.276: INFO: Pod "pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279": Phase="Pending", Reason="", readiness=false. Elapsed: 7.372642ms
    Feb  9 00:35:03.283: INFO: Pod "pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014769343s
    Feb  9 00:35:05.283: INFO: Pod "pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014395301s
    STEP: Saw pod success 02/09/23 00:35:05.283
    Feb  9 00:35:05.283: INFO: Pod "pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279" satisfied condition "Succeeded or Failed"
    Feb  9 00:35:05.290: INFO: Trying to get logs from node aks-nodes-15799032-vmss000001 pod pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279 container secret-volume-test: <nil>
    STEP: delete the pod 02/09/23 00:35:05.305
    Feb  9 00:35:05.336: INFO: Waiting for pod pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279 to disappear
    Feb  9 00:35:05.341: INFO: Pod pod-projected-secrets-90540402-f59f-419f-b911-20ce72b0e279 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:35:05.341: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-572" for this suite. 02/09/23 00:35:05.35
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:35:05.362
Feb  9 00:35:05.362: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename var-expansion 02/09/23 00:35:05.363
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:35:05.384
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:35:05.389
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297
STEP: creating the pod 02/09/23 00:35:05.393
STEP: waiting for pod running 02/09/23 00:35:05.406
Feb  9 00:35:05.407: INFO: Waiting up to 2m0s for pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a" in namespace "var-expansion-9984" to be "running"
Feb  9 00:35:05.413: INFO: Pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a": Phase="Pending", Reason="", readiness=false. Elapsed: 6.253135ms
Feb  9 00:35:07.420: INFO: Pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a": Phase="Running", Reason="", readiness=true. Elapsed: 2.013669137s
Feb  9 00:35:07.420: INFO: Pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a" satisfied condition "running"
STEP: creating a file in subpath 02/09/23 00:35:07.42
Feb  9 00:35:07.426: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9984 PodName:var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 00:35:07.426: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 00:35:07.426: INFO: ExecWithOptions: Clientset creation
Feb  9 00:35:07.426: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/var-expansion-9984/pods/var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path 02/09/23 00:35:07.513
Feb  9 00:35:07.520: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9984 PodName:var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 00:35:07.520: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 00:35:07.520: INFO: ExecWithOptions: Clientset creation
Feb  9 00:35:07.520: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/var-expansion-9984/pods/var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value 02/09/23 00:35:07.617
Feb  9 00:35:08.132: INFO: Successfully updated pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a"
STEP: waiting for annotated pod running 02/09/23 00:35:08.132
Feb  9 00:35:08.132: INFO: Waiting up to 2m0s for pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a" in namespace "var-expansion-9984" to be "running"
Feb  9 00:35:08.137: INFO: Pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a": Phase="Running", Reason="", readiness=true. Elapsed: 4.76333ms
Feb  9 00:35:08.137: INFO: Pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a" satisfied condition "running"
STEP: deleting the pod gracefully 02/09/23 00:35:08.137
Feb  9 00:35:08.137: INFO: Deleting pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a" in namespace "var-expansion-9984"
Feb  9 00:35:08.146: INFO: Wait up to 5m0s for pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Feb  9 00:35:40.159: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-9984" for this suite. 02/09/23 00:35:40.166
------------------------------
â€¢ [SLOW TEST] [34.815 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:35:05.362
    Feb  9 00:35:05.362: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename var-expansion 02/09/23 00:35:05.363
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:35:05.384
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:35:05.389
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should succeed in writing subpaths in container [Slow] [Conformance]
      test/e2e/common/node/expansion.go:297
    STEP: creating the pod 02/09/23 00:35:05.393
    STEP: waiting for pod running 02/09/23 00:35:05.406
    Feb  9 00:35:05.407: INFO: Waiting up to 2m0s for pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a" in namespace "var-expansion-9984" to be "running"
    Feb  9 00:35:05.413: INFO: Pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a": Phase="Pending", Reason="", readiness=false. Elapsed: 6.253135ms
    Feb  9 00:35:07.420: INFO: Pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a": Phase="Running", Reason="", readiness=true. Elapsed: 2.013669137s
    Feb  9 00:35:07.420: INFO: Pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a" satisfied condition "running"
    STEP: creating a file in subpath 02/09/23 00:35:07.42
    Feb  9 00:35:07.426: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9984 PodName:var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 00:35:07.426: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 00:35:07.426: INFO: ExecWithOptions: Clientset creation
    Feb  9 00:35:07.426: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/var-expansion-9984/pods/var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
    STEP: test for file in mounted path 02/09/23 00:35:07.513
    Feb  9 00:35:07.520: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9984 PodName:var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 00:35:07.520: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 00:35:07.520: INFO: ExecWithOptions: Clientset creation
    Feb  9 00:35:07.520: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/var-expansion-9984/pods/var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
    STEP: updating the annotation value 02/09/23 00:35:07.617
    Feb  9 00:35:08.132: INFO: Successfully updated pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a"
    STEP: waiting for annotated pod running 02/09/23 00:35:08.132
    Feb  9 00:35:08.132: INFO: Waiting up to 2m0s for pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a" in namespace "var-expansion-9984" to be "running"
    Feb  9 00:35:08.137: INFO: Pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a": Phase="Running", Reason="", readiness=true. Elapsed: 4.76333ms
    Feb  9 00:35:08.137: INFO: Pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a" satisfied condition "running"
    STEP: deleting the pod gracefully 02/09/23 00:35:08.137
    Feb  9 00:35:08.137: INFO: Deleting pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a" in namespace "var-expansion-9984"
    Feb  9 00:35:08.146: INFO: Wait up to 5m0s for pod "var-expansion-5d47f03e-7267-4fee-b208-66a65e6bfe7a" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:35:40.159: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-9984" for this suite. 02/09/23 00:35:40.166
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:35:40.177
Feb  9 00:35:40.177: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 00:35:40.178
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:35:40.194
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:35:40.198
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46
STEP: Creating projection with secret that has name projected-secret-test-e6b84f92-e58c-49a2-87e7-d587b1fc3175 02/09/23 00:35:40.202
STEP: Creating a pod to test consume secrets 02/09/23 00:35:40.208
Feb  9 00:35:40.221: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716" in namespace "projected-9079" to be "Succeeded or Failed"
Feb  9 00:35:40.226: INFO: Pod "pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716": Phase="Pending", Reason="", readiness=false. Elapsed: 4.89153ms
Feb  9 00:35:42.233: INFO: Pod "pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01197092s
Feb  9 00:35:44.232: INFO: Pod "pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01098886s
STEP: Saw pod success 02/09/23 00:35:44.232
Feb  9 00:35:44.232: INFO: Pod "pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716" satisfied condition "Succeeded or Failed"
Feb  9 00:35:44.238: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716 container projected-secret-volume-test: <nil>
STEP: delete the pod 02/09/23 00:35:44.251
Feb  9 00:35:44.269: INFO: Waiting for pod pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716 to disappear
Feb  9 00:35:44.275: INFO: Pod pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Feb  9 00:35:44.275: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-9079" for this suite. 02/09/23 00:35:44.283
------------------------------
â€¢ [4.115 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:35:40.177
    Feb  9 00:35:40.177: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 00:35:40.178
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:35:40.194
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:35:40.198
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:46
    STEP: Creating projection with secret that has name projected-secret-test-e6b84f92-e58c-49a2-87e7-d587b1fc3175 02/09/23 00:35:40.202
    STEP: Creating a pod to test consume secrets 02/09/23 00:35:40.208
    Feb  9 00:35:40.221: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716" in namespace "projected-9079" to be "Succeeded or Failed"
    Feb  9 00:35:40.226: INFO: Pod "pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716": Phase="Pending", Reason="", readiness=false. Elapsed: 4.89153ms
    Feb  9 00:35:42.233: INFO: Pod "pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01197092s
    Feb  9 00:35:44.232: INFO: Pod "pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01098886s
    STEP: Saw pod success 02/09/23 00:35:44.232
    Feb  9 00:35:44.232: INFO: Pod "pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716" satisfied condition "Succeeded or Failed"
    Feb  9 00:35:44.238: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716 container projected-secret-volume-test: <nil>
    STEP: delete the pod 02/09/23 00:35:44.251
    Feb  9 00:35:44.269: INFO: Waiting for pod pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716 to disappear
    Feb  9 00:35:44.275: INFO: Pod pod-projected-secrets-dffbe852-43b9-4704-83a4-4ee2db85e716 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:35:44.275: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-9079" for this suite. 02/09/23 00:35:44.283
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:35:44.294
Feb  9 00:35:44.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-probe 02/09/23 00:35:44.295
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:35:44.309
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:35:44.313
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152
STEP: Creating pod busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c in namespace container-probe-6327 02/09/23 00:35:44.317
Feb  9 00:35:44.329: INFO: Waiting up to 5m0s for pod "busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c" in namespace "container-probe-6327" to be "not pending"
Feb  9 00:35:44.335: INFO: Pod "busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c": Phase="Pending", Reason="", readiness=false. Elapsed: 5.482134ms
Feb  9 00:35:46.342: INFO: Pod "busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c": Phase="Running", Reason="", readiness=true. Elapsed: 2.012719526s
Feb  9 00:35:46.342: INFO: Pod "busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c" satisfied condition "not pending"
Feb  9 00:35:46.342: INFO: Started pod busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c in namespace container-probe-6327
STEP: checking the pod's current state and verifying that restartCount is present 02/09/23 00:35:46.342
Feb  9 00:35:46.347: INFO: Initial restart count of pod busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c is 0
STEP: deleting the pod 02/09/23 00:39:47.195
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Feb  9 00:39:47.210: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-6327" for this suite. 02/09/23 00:39:47.217
------------------------------
â€¢ [SLOW TEST] [242.932 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:35:44.294
    Feb  9 00:35:44.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-probe 02/09/23 00:35:44.295
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:35:44.309
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:35:44.313
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:152
    STEP: Creating pod busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c in namespace container-probe-6327 02/09/23 00:35:44.317
    Feb  9 00:35:44.329: INFO: Waiting up to 5m0s for pod "busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c" in namespace "container-probe-6327" to be "not pending"
    Feb  9 00:35:44.335: INFO: Pod "busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c": Phase="Pending", Reason="", readiness=false. Elapsed: 5.482134ms
    Feb  9 00:35:46.342: INFO: Pod "busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c": Phase="Running", Reason="", readiness=true. Elapsed: 2.012719526s
    Feb  9 00:35:46.342: INFO: Pod "busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c" satisfied condition "not pending"
    Feb  9 00:35:46.342: INFO: Started pod busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c in namespace container-probe-6327
    STEP: checking the pod's current state and verifying that restartCount is present 02/09/23 00:35:46.342
    Feb  9 00:35:46.347: INFO: Initial restart count of pod busybox-8739ba5a-44c6-46a4-91e9-f7bab012803c is 0
    STEP: deleting the pod 02/09/23 00:39:47.195
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:39:47.210: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-6327" for this suite. 02/09/23 00:39:47.217
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-network] DNS
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:39:47.227
Feb  9 00:39:47.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename dns 02/09/23 00:39:47.227
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:39:47.242
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:39:47.246
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... 02/09/23 00:39:47.25
Feb  9 00:39:47.267: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3691  eaf5c2d4-16a7-41f0-8f82-4888cb4248e2 8137 0 2023-02-09 00:39:47 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-02-09 00:39:47 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dt8bt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dt8bt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 00:39:47.267: INFO: Waiting up to 5m0s for pod "test-dns-nameservers" in namespace "dns-3691" to be "running and ready"
Feb  9 00:39:47.275: INFO: Pod "test-dns-nameservers": Phase="Pending", Reason="", readiness=false. Elapsed: 7.571731ms
Feb  9 00:39:47.275: INFO: The phase of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:39:49.283: INFO: Pod "test-dns-nameservers": Phase="Running", Reason="", readiness=true. Elapsed: 2.016048818s
Feb  9 00:39:49.283: INFO: The phase of Pod test-dns-nameservers is Running (Ready = true)
Feb  9 00:39:49.283: INFO: Pod "test-dns-nameservers" satisfied condition "running and ready"
STEP: Verifying customized DNS suffix list is configured on pod... 02/09/23 00:39:49.283
Feb  9 00:39:49.283: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3691 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 00:39:49.283: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 00:39:49.284: INFO: ExecWithOptions: Clientset creation
Feb  9 00:39:49.284: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/dns-3691/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod... 02/09/23 00:39:49.391
Feb  9 00:39:49.391: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3691 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 00:39:49.391: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 00:39:49.391: INFO: ExecWithOptions: Clientset creation
Feb  9 00:39:49.391: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/dns-3691/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Feb  9 00:39:49.493: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Feb  9 00:39:49.508: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-3691" for this suite. 02/09/23 00:39:49.515
------------------------------
â€¢ [2.298 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:39:47.227
    Feb  9 00:39:47.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename dns 02/09/23 00:39:47.227
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:39:47.242
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:39:47.246
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should support configurable pod DNS nameservers [Conformance]
      test/e2e/network/dns.go:411
    STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... 02/09/23 00:39:47.25
    Feb  9 00:39:47.267: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3691  eaf5c2d4-16a7-41f0-8f82-4888cb4248e2 8137 0 2023-02-09 00:39:47 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-02-09 00:39:47 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dt8bt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dt8bt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 00:39:47.267: INFO: Waiting up to 5m0s for pod "test-dns-nameservers" in namespace "dns-3691" to be "running and ready"
    Feb  9 00:39:47.275: INFO: Pod "test-dns-nameservers": Phase="Pending", Reason="", readiness=false. Elapsed: 7.571731ms
    Feb  9 00:39:47.275: INFO: The phase of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:39:49.283: INFO: Pod "test-dns-nameservers": Phase="Running", Reason="", readiness=true. Elapsed: 2.016048818s
    Feb  9 00:39:49.283: INFO: The phase of Pod test-dns-nameservers is Running (Ready = true)
    Feb  9 00:39:49.283: INFO: Pod "test-dns-nameservers" satisfied condition "running and ready"
    STEP: Verifying customized DNS suffix list is configured on pod... 02/09/23 00:39:49.283
    Feb  9 00:39:49.283: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3691 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 00:39:49.283: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 00:39:49.284: INFO: ExecWithOptions: Clientset creation
    Feb  9 00:39:49.284: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/dns-3691/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    STEP: Verifying customized DNS server is configured on pod... 02/09/23 00:39:49.391
    Feb  9 00:39:49.391: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3691 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 00:39:49.391: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 00:39:49.391: INFO: ExecWithOptions: Clientset creation
    Feb  9 00:39:49.391: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/dns-3691/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Feb  9 00:39:49.493: INFO: Deleting pod test-dns-nameservers...
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:39:49.508: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-3691" for this suite. 02/09/23 00:39:49.515
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:39:49.525
Feb  9 00:39:49.525: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 00:39:49.526
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:39:49.542
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:39:49.547
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227
STEP: Creating Pod 02/09/23 00:39:49.551
Feb  9 00:39:49.563: INFO: Waiting up to 5m0s for pod "pod-sharedvolume-dd33f815-30b1-4062-952b-a0d4ea5c86f3" in namespace "emptydir-8945" to be "running"
Feb  9 00:39:49.569: INFO: Pod "pod-sharedvolume-dd33f815-30b1-4062-952b-a0d4ea5c86f3": Phase="Pending", Reason="", readiness=false. Elapsed: 5.139021ms
Feb  9 00:39:51.577: INFO: Pod "pod-sharedvolume-dd33f815-30b1-4062-952b-a0d4ea5c86f3": Phase="Running", Reason="", readiness=false. Elapsed: 2.013242933s
Feb  9 00:39:51.577: INFO: Pod "pod-sharedvolume-dd33f815-30b1-4062-952b-a0d4ea5c86f3" satisfied condition "running"
STEP: Reading file content from the nginx-container 02/09/23 00:39:51.577
Feb  9 00:39:51.577: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8945 PodName:pod-sharedvolume-dd33f815-30b1-4062-952b-a0d4ea5c86f3 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 00:39:51.577: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 00:39:51.577: INFO: ExecWithOptions: Clientset creation
Feb  9 00:39:51.577: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/emptydir-8945/pods/pod-sharedvolume-dd33f815-30b1-4062-952b-a0d4ea5c86f3/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Feb  9 00:39:51.701: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 00:39:51.702: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-8945" for this suite. 02/09/23 00:39:51.71
------------------------------
â€¢ [2.195 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:39:49.525
    Feb  9 00:39:49.525: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 00:39:49.526
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:39:49.542
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:39:49.547
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] pod should support shared volumes between containers [Conformance]
      test/e2e/common/storage/empty_dir.go:227
    STEP: Creating Pod 02/09/23 00:39:49.551
    Feb  9 00:39:49.563: INFO: Waiting up to 5m0s for pod "pod-sharedvolume-dd33f815-30b1-4062-952b-a0d4ea5c86f3" in namespace "emptydir-8945" to be "running"
    Feb  9 00:39:49.569: INFO: Pod "pod-sharedvolume-dd33f815-30b1-4062-952b-a0d4ea5c86f3": Phase="Pending", Reason="", readiness=false. Elapsed: 5.139021ms
    Feb  9 00:39:51.577: INFO: Pod "pod-sharedvolume-dd33f815-30b1-4062-952b-a0d4ea5c86f3": Phase="Running", Reason="", readiness=false. Elapsed: 2.013242933s
    Feb  9 00:39:51.577: INFO: Pod "pod-sharedvolume-dd33f815-30b1-4062-952b-a0d4ea5c86f3" satisfied condition "running"
    STEP: Reading file content from the nginx-container 02/09/23 00:39:51.577
    Feb  9 00:39:51.577: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8945 PodName:pod-sharedvolume-dd33f815-30b1-4062-952b-a0d4ea5c86f3 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 00:39:51.577: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 00:39:51.577: INFO: ExecWithOptions: Clientset creation
    Feb  9 00:39:51.577: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/emptydir-8945/pods/pod-sharedvolume-dd33f815-30b1-4062-952b-a0d4ea5c86f3/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
    Feb  9 00:39:51.701: INFO: Exec stderr: ""
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:39:51.702: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-8945" for this suite. 02/09/23 00:39:51.71
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:135
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:39:51.721
Feb  9 00:39:51.721: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubelet-test 02/09/23 00:39:51.722
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:39:51.737
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:39:51.742
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:85
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:135
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Feb  9 00:39:51.777: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-3812" for this suite. 02/09/23 00:39:51.784
------------------------------
â€¢ [0.072 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:82
    should be possible to delete [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:135

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:39:51.721
    Feb  9 00:39:51.721: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubelet-test 02/09/23 00:39:51.722
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:39:51.737
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:39:51.742
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [BeforeEach] when scheduling a busybox command that always fails in a pod
      test/e2e/common/node/kubelet.go:85
    [It] should be possible to delete [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:135
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:39:51.777: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-3812" for this suite. 02/09/23 00:39:51.784
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-network] Proxy version v1
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/network/proxy.go:286
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:39:51.794
Feb  9 00:39:51.795: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename proxy 02/09/23 00:39:51.795
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:39:51.811
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:39:51.815
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/network/proxy.go:286
Feb  9 00:39:51.819: INFO: Creating pod...
Feb  9 00:39:51.832: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-6705" to be "running"
Feb  9 00:39:51.837: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 5.007021ms
Feb  9 00:39:53.845: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.012259729s
Feb  9 00:39:53.845: INFO: Pod "agnhost" satisfied condition "running"
Feb  9 00:39:53.845: INFO: Creating service...
Feb  9 00:39:53.860: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/DELETE
Feb  9 00:39:53.872: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Feb  9 00:39:53.872: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/GET
Feb  9 00:39:53.879: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Feb  9 00:39:53.880: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/HEAD
Feb  9 00:39:53.886: INFO: http.Client request:HEAD | StatusCode:200
Feb  9 00:39:53.887: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/OPTIONS
Feb  9 00:39:53.895: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Feb  9 00:39:53.895: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/PATCH
Feb  9 00:39:53.902: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Feb  9 00:39:53.902: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/POST
Feb  9 00:39:53.910: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Feb  9 00:39:53.910: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/PUT
Feb  9 00:39:53.917: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Feb  9 00:39:53.917: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/DELETE
Feb  9 00:39:53.928: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Feb  9 00:39:53.928: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/GET
Feb  9 00:39:53.938: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Feb  9 00:39:53.938: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/HEAD
Feb  9 00:39:53.948: INFO: http.Client request:HEAD | StatusCode:200
Feb  9 00:39:53.948: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/OPTIONS
Feb  9 00:39:53.967: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Feb  9 00:39:53.967: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/PATCH
Feb  9 00:39:53.978: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Feb  9 00:39:53.978: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/POST
Feb  9 00:39:53.987: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Feb  9 00:39:53.987: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/PUT
Feb  9 00:39:53.997: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Feb  9 00:39:53.997: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-6705" for this suite. 02/09/23 00:39:54.005
------------------------------
â€¢ [2.222 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
    test/e2e/network/proxy.go:286

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:39:51.794
    Feb  9 00:39:51.795: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename proxy 02/09/23 00:39:51.795
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:39:51.811
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:39:51.815
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
      test/e2e/network/proxy.go:286
    Feb  9 00:39:51.819: INFO: Creating pod...
    Feb  9 00:39:51.832: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-6705" to be "running"
    Feb  9 00:39:51.837: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 5.007021ms
    Feb  9 00:39:53.845: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.012259729s
    Feb  9 00:39:53.845: INFO: Pod "agnhost" satisfied condition "running"
    Feb  9 00:39:53.845: INFO: Creating service...
    Feb  9 00:39:53.860: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/DELETE
    Feb  9 00:39:53.872: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Feb  9 00:39:53.872: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/GET
    Feb  9 00:39:53.879: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
    Feb  9 00:39:53.880: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/HEAD
    Feb  9 00:39:53.886: INFO: http.Client request:HEAD | StatusCode:200
    Feb  9 00:39:53.887: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/OPTIONS
    Feb  9 00:39:53.895: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Feb  9 00:39:53.895: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/PATCH
    Feb  9 00:39:53.902: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Feb  9 00:39:53.902: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/POST
    Feb  9 00:39:53.910: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Feb  9 00:39:53.910: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/pods/agnhost/proxy/some/path/with/PUT
    Feb  9 00:39:53.917: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Feb  9 00:39:53.917: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/DELETE
    Feb  9 00:39:53.928: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Feb  9 00:39:53.928: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/GET
    Feb  9 00:39:53.938: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
    Feb  9 00:39:53.938: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/HEAD
    Feb  9 00:39:53.948: INFO: http.Client request:HEAD | StatusCode:200
    Feb  9 00:39:53.948: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/OPTIONS
    Feb  9 00:39:53.967: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Feb  9 00:39:53.967: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/PATCH
    Feb  9 00:39:53.978: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Feb  9 00:39:53.978: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/POST
    Feb  9 00:39:53.987: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Feb  9 00:39:53.987: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6705/services/test-service/proxy/some/path/with/PUT
    Feb  9 00:39:53.997: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:39:53.997: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-6705" for this suite. 02/09/23 00:39:54.005
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:39:54.019
Feb  9 00:39:54.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename var-expansion 02/09/23 00:39:54.02
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:39:54.036
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:39:54.04
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152
Feb  9 00:39:54.057: INFO: Waiting up to 2m0s for pod "var-expansion-ab77447b-b34d-4568-b1cb-328e48dc78df" in namespace "var-expansion-7186" to be "container 0 failed with reason CreateContainerConfigError"
Feb  9 00:39:54.063: INFO: Pod "var-expansion-ab77447b-b34d-4568-b1cb-328e48dc78df": Phase="Pending", Reason="", readiness=false. Elapsed: 5.539423ms
Feb  9 00:39:56.070: INFO: Pod "var-expansion-ab77447b-b34d-4568-b1cb-328e48dc78df": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012518331s
Feb  9 00:39:56.070: INFO: Pod "var-expansion-ab77447b-b34d-4568-b1cb-328e48dc78df" satisfied condition "container 0 failed with reason CreateContainerConfigError"
Feb  9 00:39:56.070: INFO: Deleting pod "var-expansion-ab77447b-b34d-4568-b1cb-328e48dc78df" in namespace "var-expansion-7186"
Feb  9 00:39:56.081: INFO: Wait up to 5m0s for pod "var-expansion-ab77447b-b34d-4568-b1cb-328e48dc78df" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Feb  9 00:39:58.094: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-7186" for this suite. 02/09/23 00:39:58.102
------------------------------
â€¢ [4.092 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:39:54.019
    Feb  9 00:39:54.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename var-expansion 02/09/23 00:39:54.02
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:39:54.036
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:39:54.04
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
      test/e2e/common/node/expansion.go:152
    Feb  9 00:39:54.057: INFO: Waiting up to 2m0s for pod "var-expansion-ab77447b-b34d-4568-b1cb-328e48dc78df" in namespace "var-expansion-7186" to be "container 0 failed with reason CreateContainerConfigError"
    Feb  9 00:39:54.063: INFO: Pod "var-expansion-ab77447b-b34d-4568-b1cb-328e48dc78df": Phase="Pending", Reason="", readiness=false. Elapsed: 5.539423ms
    Feb  9 00:39:56.070: INFO: Pod "var-expansion-ab77447b-b34d-4568-b1cb-328e48dc78df": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012518331s
    Feb  9 00:39:56.070: INFO: Pod "var-expansion-ab77447b-b34d-4568-b1cb-328e48dc78df" satisfied condition "container 0 failed with reason CreateContainerConfigError"
    Feb  9 00:39:56.070: INFO: Deleting pod "var-expansion-ab77447b-b34d-4568-b1cb-328e48dc78df" in namespace "var-expansion-7186"
    Feb  9 00:39:56.081: INFO: Wait up to 5m0s for pod "var-expansion-ab77447b-b34d-4568-b1cb-328e48dc78df" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:39:58.094: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-7186" for this suite. 02/09/23 00:39:58.102
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial]
  should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:39:58.112
Feb  9 00:39:58.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename controllerrevisions 02/09/23 00:39:58.112
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:39:58.128
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:39:58.132
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/apps/controller_revision.go:93
[It] should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124
STEP: Creating DaemonSet "e2e-lff5x-daemon-set" 02/09/23 00:39:58.174
STEP: Check that daemon pods launch on every node of the cluster. 02/09/23 00:39:58.182
Feb  9 00:39:58.193: INFO: Number of nodes with available pods controlled by daemonset e2e-lff5x-daemon-set: 0
Feb  9 00:39:58.193: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 00:39:59.206: INFO: Number of nodes with available pods controlled by daemonset e2e-lff5x-daemon-set: 0
Feb  9 00:39:59.206: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 00:40:00.208: INFO: Number of nodes with available pods controlled by daemonset e2e-lff5x-daemon-set: 1
Feb  9 00:40:00.208: INFO: Node aks-nodes-15799032-vmss000001 is running 0 daemon pod, expected 1
Feb  9 00:40:01.208: INFO: Number of nodes with available pods controlled by daemonset e2e-lff5x-daemon-set: 2
Feb  9 00:40:01.208: INFO: Node aks-nodes-15799032-vmss000001 is running 0 daemon pod, expected 1
Feb  9 00:40:02.206: INFO: Number of nodes with available pods controlled by daemonset e2e-lff5x-daemon-set: 3
Feb  9 00:40:02.206: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-lff5x-daemon-set
STEP: Confirm DaemonSet "e2e-lff5x-daemon-set" successfully created with "daemonset-name=e2e-lff5x-daemon-set" label 02/09/23 00:40:02.211
STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-lff5x-daemon-set" 02/09/23 00:40:02.224
Feb  9 00:40:02.232: INFO: Located ControllerRevision: "e2e-lff5x-daemon-set-76c554f4db"
STEP: Patching ControllerRevision "e2e-lff5x-daemon-set-76c554f4db" 02/09/23 00:40:02.237
Feb  9 00:40:02.245: INFO: e2e-lff5x-daemon-set-76c554f4db has been patched
STEP: Create a new ControllerRevision 02/09/23 00:40:02.245
Feb  9 00:40:02.251: INFO: Created ControllerRevision: e2e-lff5x-daemon-set-86c49f7584
STEP: Confirm that there are two ControllerRevisions 02/09/23 00:40:02.251
Feb  9 00:40:02.251: INFO: Requesting list of ControllerRevisions to confirm quantity
Feb  9 00:40:02.256: INFO: Found 2 ControllerRevisions
STEP: Deleting ControllerRevision "e2e-lff5x-daemon-set-76c554f4db" 02/09/23 00:40:02.256
STEP: Confirm that there is only one ControllerRevision 02/09/23 00:40:02.265
Feb  9 00:40:02.265: INFO: Requesting list of ControllerRevisions to confirm quantity
Feb  9 00:40:02.270: INFO: Found 1 ControllerRevisions
STEP: Updating ControllerRevision "e2e-lff5x-daemon-set-86c49f7584" 02/09/23 00:40:02.276
Feb  9 00:40:02.288: INFO: e2e-lff5x-daemon-set-86c49f7584 has been updated
STEP: Generate another ControllerRevision by patching the Daemonset 02/09/23 00:40:02.288
W0209 00:40:02.298947      20 warnings.go:70] unknown field "updateStrategy"
STEP: Confirm that there are two ControllerRevisions 02/09/23 00:40:02.299
Feb  9 00:40:02.299: INFO: Requesting list of ControllerRevisions to confirm quantity
Feb  9 00:40:03.305: INFO: Requesting list of ControllerRevisions to confirm quantity
Feb  9 00:40:03.311: INFO: Found 2 ControllerRevisions
STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-lff5x-daemon-set-86c49f7584=updated" 02/09/23 00:40:03.311
STEP: Confirm that there is only one ControllerRevision 02/09/23 00:40:03.326
Feb  9 00:40:03.326: INFO: Requesting list of ControllerRevisions to confirm quantity
Feb  9 00:40:03.332: INFO: Found 1 ControllerRevisions
Feb  9 00:40:03.338: INFO: ControllerRevision "e2e-lff5x-daemon-set-65cccfc77" has revision 3
[AfterEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/apps/controller_revision.go:58
STEP: Deleting DaemonSet "e2e-lff5x-daemon-set" 02/09/23 00:40:03.344
STEP: deleting DaemonSet.extensions e2e-lff5x-daemon-set in namespace controllerrevisions-7661, will wait for the garbage collector to delete the pods 02/09/23 00:40:03.344
Feb  9 00:40:03.410: INFO: Deleting DaemonSet.extensions e2e-lff5x-daemon-set took: 8.968938ms
Feb  9 00:40:03.511: INFO: Terminating DaemonSet.extensions e2e-lff5x-daemon-set pods took: 100.983426ms
Feb  9 00:40:05.017: INFO: Number of nodes with available pods controlled by daemonset e2e-lff5x-daemon-set: 0
Feb  9 00:40:05.017: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-lff5x-daemon-set
Feb  9 00:40:05.023: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8404"},"items":null}

Feb  9 00:40:05.028: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8404"},"items":null}

[AfterEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:40:05.051: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "controllerrevisions-7661" for this suite. 02/09/23 00:40:05.056
------------------------------
â€¢ [SLOW TEST] [6.954 seconds]
[sig-apps] ControllerRevision [Serial]
test/e2e/apps/framework.go:23
  should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:39:58.112
    Feb  9 00:39:58.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename controllerrevisions 02/09/23 00:39:58.112
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:39:58.128
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:39:58.132
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/apps/controller_revision.go:93
    [It] should manage the lifecycle of a ControllerRevision [Conformance]
      test/e2e/apps/controller_revision.go:124
    STEP: Creating DaemonSet "e2e-lff5x-daemon-set" 02/09/23 00:39:58.174
    STEP: Check that daemon pods launch on every node of the cluster. 02/09/23 00:39:58.182
    Feb  9 00:39:58.193: INFO: Number of nodes with available pods controlled by daemonset e2e-lff5x-daemon-set: 0
    Feb  9 00:39:58.193: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 00:39:59.206: INFO: Number of nodes with available pods controlled by daemonset e2e-lff5x-daemon-set: 0
    Feb  9 00:39:59.206: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 00:40:00.208: INFO: Number of nodes with available pods controlled by daemonset e2e-lff5x-daemon-set: 1
    Feb  9 00:40:00.208: INFO: Node aks-nodes-15799032-vmss000001 is running 0 daemon pod, expected 1
    Feb  9 00:40:01.208: INFO: Number of nodes with available pods controlled by daemonset e2e-lff5x-daemon-set: 2
    Feb  9 00:40:01.208: INFO: Node aks-nodes-15799032-vmss000001 is running 0 daemon pod, expected 1
    Feb  9 00:40:02.206: INFO: Number of nodes with available pods controlled by daemonset e2e-lff5x-daemon-set: 3
    Feb  9 00:40:02.206: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-lff5x-daemon-set
    STEP: Confirm DaemonSet "e2e-lff5x-daemon-set" successfully created with "daemonset-name=e2e-lff5x-daemon-set" label 02/09/23 00:40:02.211
    STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-lff5x-daemon-set" 02/09/23 00:40:02.224
    Feb  9 00:40:02.232: INFO: Located ControllerRevision: "e2e-lff5x-daemon-set-76c554f4db"
    STEP: Patching ControllerRevision "e2e-lff5x-daemon-set-76c554f4db" 02/09/23 00:40:02.237
    Feb  9 00:40:02.245: INFO: e2e-lff5x-daemon-set-76c554f4db has been patched
    STEP: Create a new ControllerRevision 02/09/23 00:40:02.245
    Feb  9 00:40:02.251: INFO: Created ControllerRevision: e2e-lff5x-daemon-set-86c49f7584
    STEP: Confirm that there are two ControllerRevisions 02/09/23 00:40:02.251
    Feb  9 00:40:02.251: INFO: Requesting list of ControllerRevisions to confirm quantity
    Feb  9 00:40:02.256: INFO: Found 2 ControllerRevisions
    STEP: Deleting ControllerRevision "e2e-lff5x-daemon-set-76c554f4db" 02/09/23 00:40:02.256
    STEP: Confirm that there is only one ControllerRevision 02/09/23 00:40:02.265
    Feb  9 00:40:02.265: INFO: Requesting list of ControllerRevisions to confirm quantity
    Feb  9 00:40:02.270: INFO: Found 1 ControllerRevisions
    STEP: Updating ControllerRevision "e2e-lff5x-daemon-set-86c49f7584" 02/09/23 00:40:02.276
    Feb  9 00:40:02.288: INFO: e2e-lff5x-daemon-set-86c49f7584 has been updated
    STEP: Generate another ControllerRevision by patching the Daemonset 02/09/23 00:40:02.288
    W0209 00:40:02.298947      20 warnings.go:70] unknown field "updateStrategy"
    STEP: Confirm that there are two ControllerRevisions 02/09/23 00:40:02.299
    Feb  9 00:40:02.299: INFO: Requesting list of ControllerRevisions to confirm quantity
    Feb  9 00:40:03.305: INFO: Requesting list of ControllerRevisions to confirm quantity
    Feb  9 00:40:03.311: INFO: Found 2 ControllerRevisions
    STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-lff5x-daemon-set-86c49f7584=updated" 02/09/23 00:40:03.311
    STEP: Confirm that there is only one ControllerRevision 02/09/23 00:40:03.326
    Feb  9 00:40:03.326: INFO: Requesting list of ControllerRevisions to confirm quantity
    Feb  9 00:40:03.332: INFO: Found 1 ControllerRevisions
    Feb  9 00:40:03.338: INFO: ControllerRevision "e2e-lff5x-daemon-set-65cccfc77" has revision 3
    [AfterEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/apps/controller_revision.go:58
    STEP: Deleting DaemonSet "e2e-lff5x-daemon-set" 02/09/23 00:40:03.344
    STEP: deleting DaemonSet.extensions e2e-lff5x-daemon-set in namespace controllerrevisions-7661, will wait for the garbage collector to delete the pods 02/09/23 00:40:03.344
    Feb  9 00:40:03.410: INFO: Deleting DaemonSet.extensions e2e-lff5x-daemon-set took: 8.968938ms
    Feb  9 00:40:03.511: INFO: Terminating DaemonSet.extensions e2e-lff5x-daemon-set pods took: 100.983426ms
    Feb  9 00:40:05.017: INFO: Number of nodes with available pods controlled by daemonset e2e-lff5x-daemon-set: 0
    Feb  9 00:40:05.017: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-lff5x-daemon-set
    Feb  9 00:40:05.023: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8404"},"items":null}

    Feb  9 00:40:05.028: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8404"},"items":null}

    [AfterEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:40:05.051: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "controllerrevisions-7661" for this suite. 02/09/23 00:40:05.056
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:184
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:40:05.069
Feb  9 00:40:05.069: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubelet-test 02/09/23 00:40:05.07
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:40:05.085
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:40:05.089
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:184
Feb  9 00:40:05.107: INFO: Waiting up to 5m0s for pod "busybox-readonly-fse3f0063a-d0a2-40af-9dd4-313061fafafa" in namespace "kubelet-test-9069" to be "running and ready"
Feb  9 00:40:05.113: INFO: Pod "busybox-readonly-fse3f0063a-d0a2-40af-9dd4-313061fafafa": Phase="Pending", Reason="", readiness=false. Elapsed: 5.710024ms
Feb  9 00:40:05.113: INFO: The phase of Pod busybox-readonly-fse3f0063a-d0a2-40af-9dd4-313061fafafa is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:40:07.120: INFO: Pod "busybox-readonly-fse3f0063a-d0a2-40af-9dd4-313061fafafa": Phase="Running", Reason="", readiness=true. Elapsed: 2.012371981s
Feb  9 00:40:07.120: INFO: The phase of Pod busybox-readonly-fse3f0063a-d0a2-40af-9dd4-313061fafafa is Running (Ready = true)
Feb  9 00:40:07.120: INFO: Pod "busybox-readonly-fse3f0063a-d0a2-40af-9dd4-313061fafafa" satisfied condition "running and ready"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Feb  9 00:40:07.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-9069" for this suite. 02/09/23 00:40:07.146
------------------------------
â€¢ [2.086 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a read only busybox container
  test/e2e/common/node/kubelet.go:175
    should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:40:05.069
    Feb  9 00:40:05.069: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubelet-test 02/09/23 00:40:05.07
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:40:05.085
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:40:05.089
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:184
    Feb  9 00:40:05.107: INFO: Waiting up to 5m0s for pod "busybox-readonly-fse3f0063a-d0a2-40af-9dd4-313061fafafa" in namespace "kubelet-test-9069" to be "running and ready"
    Feb  9 00:40:05.113: INFO: Pod "busybox-readonly-fse3f0063a-d0a2-40af-9dd4-313061fafafa": Phase="Pending", Reason="", readiness=false. Elapsed: 5.710024ms
    Feb  9 00:40:05.113: INFO: The phase of Pod busybox-readonly-fse3f0063a-d0a2-40af-9dd4-313061fafafa is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:40:07.120: INFO: Pod "busybox-readonly-fse3f0063a-d0a2-40af-9dd4-313061fafafa": Phase="Running", Reason="", readiness=true. Elapsed: 2.012371981s
    Feb  9 00:40:07.120: INFO: The phase of Pod busybox-readonly-fse3f0063a-d0a2-40af-9dd4-313061fafafa is Running (Ready = true)
    Feb  9 00:40:07.120: INFO: Pod "busybox-readonly-fse3f0063a-d0a2-40af-9dd4-313061fafafa" satisfied condition "running and ready"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:40:07.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-9069" for this suite. 02/09/23 00:40:07.146
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Containers
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:40:07.156
Feb  9 00:40:07.156: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename containers 02/09/23 00:40:07.157
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:40:07.171
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:40:07.175
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39
Feb  9 00:40:07.190: INFO: Waiting up to 5m0s for pod "client-containers-58fd0e66-0620-4f8c-a6b0-c86e596a9dfc" in namespace "containers-5546" to be "running"
Feb  9 00:40:07.199: INFO: Pod "client-containers-58fd0e66-0620-4f8c-a6b0-c86e596a9dfc": Phase="Pending", Reason="", readiness=false. Elapsed: 8.329035ms
Feb  9 00:40:09.206: INFO: Pod "client-containers-58fd0e66-0620-4f8c-a6b0-c86e596a9dfc": Phase="Running", Reason="", readiness=true. Elapsed: 2.015883996s
Feb  9 00:40:09.206: INFO: Pod "client-containers-58fd0e66-0620-4f8c-a6b0-c86e596a9dfc" satisfied condition "running"
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Feb  9 00:40:09.218: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-5546" for this suite. 02/09/23 00:40:09.226
------------------------------
â€¢ [2.079 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:40:07.156
    Feb  9 00:40:07.156: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename containers 02/09/23 00:40:07.157
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:40:07.171
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:40:07.175
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:39
    Feb  9 00:40:07.190: INFO: Waiting up to 5m0s for pod "client-containers-58fd0e66-0620-4f8c-a6b0-c86e596a9dfc" in namespace "containers-5546" to be "running"
    Feb  9 00:40:07.199: INFO: Pod "client-containers-58fd0e66-0620-4f8c-a6b0-c86e596a9dfc": Phase="Pending", Reason="", readiness=false. Elapsed: 8.329035ms
    Feb  9 00:40:09.206: INFO: Pod "client-containers-58fd0e66-0620-4f8c-a6b0-c86e596a9dfc": Phase="Running", Reason="", readiness=true. Elapsed: 2.015883996s
    Feb  9 00:40:09.206: INFO: Pod "client-containers-58fd0e66-0620-4f8c-a6b0-c86e596a9dfc" satisfied condition "running"
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:40:09.218: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-5546" for this suite. 02/09/23 00:40:09.226
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates
  should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:40:09.239
Feb  9 00:40:09.240: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename podtemplate 02/09/23 00:40:09.24
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:40:09.257
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:40:09.261
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122
STEP: Create set of pod templates 02/09/23 00:40:09.265
Feb  9 00:40:09.272: INFO: created test-podtemplate-1
Feb  9 00:40:09.278: INFO: created test-podtemplate-2
Feb  9 00:40:09.284: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace 02/09/23 00:40:09.284
STEP: delete collection of pod templates 02/09/23 00:40:09.29
Feb  9 00:40:09.290: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity 02/09/23 00:40:09.315
Feb  9 00:40:09.316: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Feb  9 00:40:09.323: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-6124" for this suite. 02/09/23 00:40:09.329
------------------------------
â€¢ [0.098 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:40:09.239
    Feb  9 00:40:09.240: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename podtemplate 02/09/23 00:40:09.24
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:40:09.257
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:40:09.261
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a collection of pod templates [Conformance]
      test/e2e/common/node/podtemplates.go:122
    STEP: Create set of pod templates 02/09/23 00:40:09.265
    Feb  9 00:40:09.272: INFO: created test-podtemplate-1
    Feb  9 00:40:09.278: INFO: created test-podtemplate-2
    Feb  9 00:40:09.284: INFO: created test-podtemplate-3
    STEP: get a list of pod templates with a label in the current namespace 02/09/23 00:40:09.284
    STEP: delete collection of pod templates 02/09/23 00:40:09.29
    Feb  9 00:40:09.290: INFO: requesting DeleteCollection of pod templates
    STEP: check that the list of pod templates matches the requested quantity 02/09/23 00:40:09.315
    Feb  9 00:40:09.316: INFO: requesting list of pod templates to confirm quantity
    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:40:09.323: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-6124" for this suite. 02/09/23 00:40:09.329
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:40:09.339
Feb  9 00:40:09.339: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 00:40:09.339
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:40:09.353
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:40:09.357
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47
STEP: Creating configMap with name projected-configmap-test-volume-b3d225be-ff0b-4741-be62-31e84d8b00b2 02/09/23 00:40:09.361
STEP: Creating a pod to test consume configMaps 02/09/23 00:40:09.369
Feb  9 00:40:09.383: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28" in namespace "projected-8974" to be "Succeeded or Failed"
Feb  9 00:40:09.388: INFO: Pod "pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28": Phase="Pending", Reason="", readiness=false. Elapsed: 5.235422ms
Feb  9 00:40:11.399: INFO: Pod "pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015745995s
Feb  9 00:40:13.395: INFO: Pod "pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011521292s
STEP: Saw pod success 02/09/23 00:40:13.395
Feb  9 00:40:13.395: INFO: Pod "pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28" satisfied condition "Succeeded or Failed"
Feb  9 00:40:13.400: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28 container agnhost-container: <nil>
STEP: delete the pod 02/09/23 00:40:13.412
Feb  9 00:40:13.428: INFO: Waiting for pod pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28 to disappear
Feb  9 00:40:13.433: INFO: Pod pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Feb  9 00:40:13.433: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8974" for this suite. 02/09/23 00:40:13.44
------------------------------
â€¢ [4.119 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:40:09.339
    Feb  9 00:40:09.339: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 00:40:09.339
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:40:09.353
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:40:09.357
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:47
    STEP: Creating configMap with name projected-configmap-test-volume-b3d225be-ff0b-4741-be62-31e84d8b00b2 02/09/23 00:40:09.361
    STEP: Creating a pod to test consume configMaps 02/09/23 00:40:09.369
    Feb  9 00:40:09.383: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28" in namespace "projected-8974" to be "Succeeded or Failed"
    Feb  9 00:40:09.388: INFO: Pod "pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28": Phase="Pending", Reason="", readiness=false. Elapsed: 5.235422ms
    Feb  9 00:40:11.399: INFO: Pod "pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015745995s
    Feb  9 00:40:13.395: INFO: Pod "pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011521292s
    STEP: Saw pod success 02/09/23 00:40:13.395
    Feb  9 00:40:13.395: INFO: Pod "pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28" satisfied condition "Succeeded or Failed"
    Feb  9 00:40:13.400: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28 container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 00:40:13.412
    Feb  9 00:40:13.428: INFO: Waiting for pod pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28 to disappear
    Feb  9 00:40:13.433: INFO: Pod pod-projected-configmaps-9c8d11bd-4cd2-40fd-b800-127427206d28 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:40:13.433: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8974" for this suite. 02/09/23 00:40:13.44
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:40:13.459
Feb  9 00:40:13.459: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-probe 02/09/23 00:40:13.459
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:40:13.476
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:40:13.479
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199
STEP: Creating pod liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 in namespace container-probe-5027 02/09/23 00:40:13.483
Feb  9 00:40:13.494: INFO: Waiting up to 5m0s for pod "liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0" in namespace "container-probe-5027" to be "not pending"
Feb  9 00:40:13.500: INFO: Pod "liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.171626ms
Feb  9 00:40:15.511: INFO: Pod "liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0": Phase="Running", Reason="", readiness=true. Elapsed: 2.016442177s
Feb  9 00:40:15.511: INFO: Pod "liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0" satisfied condition "not pending"
Feb  9 00:40:15.511: INFO: Started pod liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 in namespace container-probe-5027
STEP: checking the pod's current state and verifying that restartCount is present 02/09/23 00:40:15.511
Feb  9 00:40:15.517: INFO: Initial restart count of pod liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 is 0
Feb  9 00:40:35.592: INFO: Restart count of pod container-probe-5027/liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 is now 1 (20.074861724s elapsed)
Feb  9 00:40:55.660: INFO: Restart count of pod container-probe-5027/liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 is now 2 (40.142824826s elapsed)
Feb  9 00:41:15.729: INFO: Restart count of pod container-probe-5027/liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 is now 3 (1m0.21248692s elapsed)
Feb  9 00:41:35.800: INFO: Restart count of pod container-probe-5027/liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 is now 4 (1m20.283285603s elapsed)
Feb  9 00:42:36.009: INFO: Restart count of pod container-probe-5027/liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 is now 5 (2m20.492317208s elapsed)
STEP: deleting the pod 02/09/23 00:42:36.009
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Feb  9 00:42:36.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-5027" for this suite. 02/09/23 00:42:36.033
------------------------------
â€¢ [SLOW TEST] [142.583 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:40:13.459
    Feb  9 00:40:13.459: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-probe 02/09/23 00:40:13.459
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:40:13.476
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:40:13.479
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should have monotonically increasing restart count [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:199
    STEP: Creating pod liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 in namespace container-probe-5027 02/09/23 00:40:13.483
    Feb  9 00:40:13.494: INFO: Waiting up to 5m0s for pod "liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0" in namespace "container-probe-5027" to be "not pending"
    Feb  9 00:40:13.500: INFO: Pod "liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.171626ms
    Feb  9 00:40:15.511: INFO: Pod "liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0": Phase="Running", Reason="", readiness=true. Elapsed: 2.016442177s
    Feb  9 00:40:15.511: INFO: Pod "liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0" satisfied condition "not pending"
    Feb  9 00:40:15.511: INFO: Started pod liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 in namespace container-probe-5027
    STEP: checking the pod's current state and verifying that restartCount is present 02/09/23 00:40:15.511
    Feb  9 00:40:15.517: INFO: Initial restart count of pod liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 is 0
    Feb  9 00:40:35.592: INFO: Restart count of pod container-probe-5027/liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 is now 1 (20.074861724s elapsed)
    Feb  9 00:40:55.660: INFO: Restart count of pod container-probe-5027/liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 is now 2 (40.142824826s elapsed)
    Feb  9 00:41:15.729: INFO: Restart count of pod container-probe-5027/liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 is now 3 (1m0.21248692s elapsed)
    Feb  9 00:41:35.800: INFO: Restart count of pod container-probe-5027/liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 is now 4 (1m20.283285603s elapsed)
    Feb  9 00:42:36.009: INFO: Restart count of pod container-probe-5027/liveness-28e9a8e4-4dd4-4866-83f1-3f42356331b0 is now 5 (2m20.492317208s elapsed)
    STEP: deleting the pod 02/09/23 00:42:36.009
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:42:36.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-5027" for this suite. 02/09/23 00:42:36.033
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:122
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:42:36.046
Feb  9 00:42:36.046: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pod-network-test 02/09/23 00:42:36.047
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:42:36.064
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:42:36.068
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:122
STEP: Performing setup for networking test in namespace pod-network-test-999 02/09/23 00:42:36.072
STEP: creating a selector 02/09/23 00:42:36.072
STEP: Creating the service pods in kubernetes 02/09/23 00:42:36.072
Feb  9 00:42:36.073: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Feb  9 00:42:36.110: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-999" to be "running and ready"
Feb  9 00:42:36.117: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 7.329574ms
Feb  9 00:42:36.117: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:42:38.125: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.015184817s
Feb  9 00:42:38.125: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 00:42:40.125: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.01502728s
Feb  9 00:42:40.125: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 00:42:42.124: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.013560898s
Feb  9 00:42:42.124: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 00:42:44.125: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.015333726s
Feb  9 00:42:44.125: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 00:42:46.124: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.014128136s
Feb  9 00:42:46.124: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 00:42:48.124: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.013770723s
Feb  9 00:42:48.124: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Feb  9 00:42:48.124: INFO: Pod "netserver-0" satisfied condition "running and ready"
Feb  9 00:42:48.129: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-999" to be "running and ready"
Feb  9 00:42:48.135: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 5.220081ms
Feb  9 00:42:48.135: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Feb  9 00:42:48.135: INFO: Pod "netserver-1" satisfied condition "running and ready"
Feb  9 00:42:48.140: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-999" to be "running and ready"
Feb  9 00:42:48.145: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 5.048475ms
Feb  9 00:42:48.145: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Feb  9 00:42:50.152: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 2.012644037s
Feb  9 00:42:50.152: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Feb  9 00:42:52.151: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 4.011784507s
Feb  9 00:42:52.151: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Feb  9 00:42:54.152: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 6.011939179s
Feb  9 00:42:54.152: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Feb  9 00:42:56.152: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 8.012300669s
Feb  9 00:42:56.152: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Feb  9 00:42:58.152: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 10.011857028s
Feb  9 00:42:58.152: INFO: The phase of Pod netserver-2 is Running (Ready = true)
Feb  9 00:42:58.152: INFO: Pod "netserver-2" satisfied condition "running and ready"
STEP: Creating test pods 02/09/23 00:42:58.159
Feb  9 00:42:58.176: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-999" to be "running"
Feb  9 00:42:58.182: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.342618ms
Feb  9 00:43:00.189: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.013055723s
Feb  9 00:43:00.189: INFO: Pod "test-container-pod" satisfied condition "running"
Feb  9 00:43:00.195: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-999" to be "running"
Feb  9 00:43:00.201: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 5.481788ms
Feb  9 00:43:00.201: INFO: Pod "host-test-container-pod" satisfied condition "running"
Feb  9 00:43:00.206: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Feb  9 00:43:00.206: INFO: Going to poll 10.244.0.21 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Feb  9 00:43:00.211: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.21 8081 | grep -v '^\s*$'] Namespace:pod-network-test-999 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 00:43:00.211: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 00:43:00.212: INFO: ExecWithOptions: Clientset creation
Feb  9 00:43:00.212: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-999/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.21+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Feb  9 00:43:01.308: INFO: Found all 1 expected endpoints: [netserver-0]
Feb  9 00:43:01.309: INFO: Going to poll 10.244.1.16 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Feb  9 00:43:01.315: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.16 8081 | grep -v '^\s*$'] Namespace:pod-network-test-999 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 00:43:01.315: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 00:43:01.315: INFO: ExecWithOptions: Clientset creation
Feb  9 00:43:01.315: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-999/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.16+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Feb  9 00:43:02.401: INFO: Found all 1 expected endpoints: [netserver-1]
Feb  9 00:43:02.401: INFO: Going to poll 10.244.2.7 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Feb  9 00:43:02.409: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.2.7 8081 | grep -v '^\s*$'] Namespace:pod-network-test-999 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 00:43:02.410: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 00:43:02.410: INFO: ExecWithOptions: Clientset creation
Feb  9 00:43:02.410: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-999/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.2.7+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Feb  9 00:43:03.505: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Feb  9 00:43:03.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-999" for this suite. 02/09/23 00:43:03.515
------------------------------
â€¢ [SLOW TEST] [27.484 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:42:36.046
    Feb  9 00:42:36.046: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pod-network-test 02/09/23 00:42:36.047
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:42:36.064
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:42:36.068
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:122
    STEP: Performing setup for networking test in namespace pod-network-test-999 02/09/23 00:42:36.072
    STEP: creating a selector 02/09/23 00:42:36.072
    STEP: Creating the service pods in kubernetes 02/09/23 00:42:36.072
    Feb  9 00:42:36.073: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Feb  9 00:42:36.110: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-999" to be "running and ready"
    Feb  9 00:42:36.117: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 7.329574ms
    Feb  9 00:42:36.117: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:42:38.125: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.015184817s
    Feb  9 00:42:38.125: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 00:42:40.125: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.01502728s
    Feb  9 00:42:40.125: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 00:42:42.124: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.013560898s
    Feb  9 00:42:42.124: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 00:42:44.125: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.015333726s
    Feb  9 00:42:44.125: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 00:42:46.124: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.014128136s
    Feb  9 00:42:46.124: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 00:42:48.124: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.013770723s
    Feb  9 00:42:48.124: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Feb  9 00:42:48.124: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Feb  9 00:42:48.129: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-999" to be "running and ready"
    Feb  9 00:42:48.135: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 5.220081ms
    Feb  9 00:42:48.135: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Feb  9 00:42:48.135: INFO: Pod "netserver-1" satisfied condition "running and ready"
    Feb  9 00:42:48.140: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-999" to be "running and ready"
    Feb  9 00:42:48.145: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 5.048475ms
    Feb  9 00:42:48.145: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Feb  9 00:42:50.152: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 2.012644037s
    Feb  9 00:42:50.152: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Feb  9 00:42:52.151: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 4.011784507s
    Feb  9 00:42:52.151: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Feb  9 00:42:54.152: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 6.011939179s
    Feb  9 00:42:54.152: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Feb  9 00:42:56.152: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 8.012300669s
    Feb  9 00:42:56.152: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Feb  9 00:42:58.152: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 10.011857028s
    Feb  9 00:42:58.152: INFO: The phase of Pod netserver-2 is Running (Ready = true)
    Feb  9 00:42:58.152: INFO: Pod "netserver-2" satisfied condition "running and ready"
    STEP: Creating test pods 02/09/23 00:42:58.159
    Feb  9 00:42:58.176: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-999" to be "running"
    Feb  9 00:42:58.182: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.342618ms
    Feb  9 00:43:00.189: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.013055723s
    Feb  9 00:43:00.189: INFO: Pod "test-container-pod" satisfied condition "running"
    Feb  9 00:43:00.195: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-999" to be "running"
    Feb  9 00:43:00.201: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 5.481788ms
    Feb  9 00:43:00.201: INFO: Pod "host-test-container-pod" satisfied condition "running"
    Feb  9 00:43:00.206: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
    Feb  9 00:43:00.206: INFO: Going to poll 10.244.0.21 on port 8081 at least 0 times, with a maximum of 39 tries before failing
    Feb  9 00:43:00.211: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.21 8081 | grep -v '^\s*$'] Namespace:pod-network-test-999 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 00:43:00.211: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 00:43:00.212: INFO: ExecWithOptions: Clientset creation
    Feb  9 00:43:00.212: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-999/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.21+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Feb  9 00:43:01.308: INFO: Found all 1 expected endpoints: [netserver-0]
    Feb  9 00:43:01.309: INFO: Going to poll 10.244.1.16 on port 8081 at least 0 times, with a maximum of 39 tries before failing
    Feb  9 00:43:01.315: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.16 8081 | grep -v '^\s*$'] Namespace:pod-network-test-999 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 00:43:01.315: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 00:43:01.315: INFO: ExecWithOptions: Clientset creation
    Feb  9 00:43:01.315: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-999/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.16+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Feb  9 00:43:02.401: INFO: Found all 1 expected endpoints: [netserver-1]
    Feb  9 00:43:02.401: INFO: Going to poll 10.244.2.7 on port 8081 at least 0 times, with a maximum of 39 tries before failing
    Feb  9 00:43:02.409: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.2.7 8081 | grep -v '^\s*$'] Namespace:pod-network-test-999 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 00:43:02.410: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 00:43:02.410: INFO: ExecWithOptions: Clientset creation
    Feb  9 00:43:02.410: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-999/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.2.7+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Feb  9 00:43:03.505: INFO: Found all 1 expected endpoints: [netserver-2]
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:43:03.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-999" for this suite. 02/09/23 00:43:03.515
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:43:03.531
Feb  9 00:43:03.531: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename secrets 02/09/23 00:43:03.532
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:03.549
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:03.552
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46
STEP: Creating secret with name secret-test-fbaebb45-2a29-41c3-ba4c-516017f99af8 02/09/23 00:43:03.556
STEP: Creating a pod to test consume secrets 02/09/23 00:43:03.562
Feb  9 00:43:03.576: INFO: Waiting up to 5m0s for pod "pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41" in namespace "secrets-9268" to be "Succeeded or Failed"
Feb  9 00:43:03.582: INFO: Pod "pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41": Phase="Pending", Reason="", readiness=false. Elapsed: 5.635389ms
Feb  9 00:43:05.588: INFO: Pod "pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0119427s
Feb  9 00:43:07.590: INFO: Pod "pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013693559s
STEP: Saw pod success 02/09/23 00:43:07.59
Feb  9 00:43:07.590: INFO: Pod "pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41" satisfied condition "Succeeded or Failed"
Feb  9 00:43:07.597: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41 container secret-env-test: <nil>
STEP: delete the pod 02/09/23 00:43:07.608
Feb  9 00:43:07.625: INFO: Waiting for pod pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41 to disappear
Feb  9 00:43:07.630: INFO: Pod pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Feb  9 00:43:07.630: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-9268" for this suite. 02/09/23 00:43:07.638
------------------------------
â€¢ [4.118 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:43:03.531
    Feb  9 00:43:03.531: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename secrets 02/09/23 00:43:03.532
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:03.549
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:03.552
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in env vars [NodeConformance] [Conformance]
      test/e2e/common/node/secrets.go:46
    STEP: Creating secret with name secret-test-fbaebb45-2a29-41c3-ba4c-516017f99af8 02/09/23 00:43:03.556
    STEP: Creating a pod to test consume secrets 02/09/23 00:43:03.562
    Feb  9 00:43:03.576: INFO: Waiting up to 5m0s for pod "pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41" in namespace "secrets-9268" to be "Succeeded or Failed"
    Feb  9 00:43:03.582: INFO: Pod "pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41": Phase="Pending", Reason="", readiness=false. Elapsed: 5.635389ms
    Feb  9 00:43:05.588: INFO: Pod "pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0119427s
    Feb  9 00:43:07.590: INFO: Pod "pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013693559s
    STEP: Saw pod success 02/09/23 00:43:07.59
    Feb  9 00:43:07.590: INFO: Pod "pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41" satisfied condition "Succeeded or Failed"
    Feb  9 00:43:07.597: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41 container secret-env-test: <nil>
    STEP: delete the pod 02/09/23 00:43:07.608
    Feb  9 00:43:07.625: INFO: Waiting for pod pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41 to disappear
    Feb  9 00:43:07.630: INFO: Pod pod-secrets-1cc01e8d-b039-4db3-978e-75adfe91be41 no longer exists
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:43:07.630: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-9268" for this suite. 02/09/23 00:43:07.638
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:43:07.655
Feb  9 00:43:07.655: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 00:43:07.655
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:07.67
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:07.674
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442
STEP: set up a multi version CRD 02/09/23 00:43:07.678
Feb  9 00:43:07.678: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: mark a version not serverd 02/09/23 00:43:11.335
STEP: check the unserved version gets removed 02/09/23 00:43:11.36
STEP: check the other version is not changed 02/09/23 00:43:12.746
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:43:15.790: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-8269" for this suite. 02/09/23 00:43:15.809
------------------------------
â€¢ [SLOW TEST] [8.164 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:43:07.655
    Feb  9 00:43:07.655: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 00:43:07.655
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:07.67
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:07.674
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] removes definition from spec when one version gets changed to not be served [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:442
    STEP: set up a multi version CRD 02/09/23 00:43:07.678
    Feb  9 00:43:07.678: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: mark a version not serverd 02/09/23 00:43:11.335
    STEP: check the unserved version gets removed 02/09/23 00:43:11.36
    STEP: check the other version is not changed 02/09/23 00:43:12.746
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:43:15.790: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-8269" for this suite. 02/09/23 00:43:15.809
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:43:15.819
Feb  9 00:43:15.819: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename resourcequota 02/09/23 00:43:15.82
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:15.835
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:15.839
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392
STEP: Counting existing ResourceQuota 02/09/23 00:43:15.844
STEP: Creating a ResourceQuota 02/09/23 00:43:20.85
STEP: Ensuring resource quota status is calculated 02/09/23 00:43:20.857
STEP: Creating a ReplicationController 02/09/23 00:43:22.867
STEP: Ensuring resource quota status captures replication controller creation 02/09/23 00:43:22.881
STEP: Deleting a ReplicationController 02/09/23 00:43:24.89
STEP: Ensuring resource quota status released usage 02/09/23 00:43:24.898
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Feb  9 00:43:26.906: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-4087" for this suite. 02/09/23 00:43:26.915
------------------------------
â€¢ [SLOW TEST] [11.106 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:43:15.819
    Feb  9 00:43:15.819: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename resourcequota 02/09/23 00:43:15.82
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:15.835
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:15.839
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
      test/e2e/apimachinery/resource_quota.go:392
    STEP: Counting existing ResourceQuota 02/09/23 00:43:15.844
    STEP: Creating a ResourceQuota 02/09/23 00:43:20.85
    STEP: Ensuring resource quota status is calculated 02/09/23 00:43:20.857
    STEP: Creating a ReplicationController 02/09/23 00:43:22.867
    STEP: Ensuring resource quota status captures replication controller creation 02/09/23 00:43:22.881
    STEP: Deleting a ReplicationController 02/09/23 00:43:24.89
    STEP: Ensuring resource quota status released usage 02/09/23 00:43:24.898
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:43:26.906: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-4087" for this suite. 02/09/23 00:43:26.915
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:43:26.926
Feb  9 00:43:26.926: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename watch 02/09/23 00:43:26.927
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:26.946
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:26.95
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191
STEP: creating a watch on configmaps 02/09/23 00:43:26.955
STEP: creating a new configmap 02/09/23 00:43:26.957
STEP: modifying the configmap once 02/09/23 00:43:26.963
STEP: closing the watch once it receives two notifications 02/09/23 00:43:26.975
Feb  9 00:43:26.975: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6863  3caf2556-4e70-4cd3-b1db-6ec13f473677 9632 0 2023-02-09 00:43:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-02-09 00:43:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Feb  9 00:43:26.975: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6863  3caf2556-4e70-4cd3-b1db-6ec13f473677 9633 0 2023-02-09 00:43:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-02-09 00:43:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed 02/09/23 00:43:26.975
STEP: creating a new watch on configmaps from the last resource version observed by the first watch 02/09/23 00:43:26.986
STEP: deleting the configmap 02/09/23 00:43:26.988
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed 02/09/23 00:43:26.997
Feb  9 00:43:26.997: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6863  3caf2556-4e70-4cd3-b1db-6ec13f473677 9634 0 2023-02-09 00:43:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-02-09 00:43:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Feb  9 00:43:26.997: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6863  3caf2556-4e70-4cd3-b1db-6ec13f473677 9635 0 2023-02-09 00:43:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-02-09 00:43:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Feb  9 00:43:26.997: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-6863" for this suite. 02/09/23 00:43:27.003
------------------------------
â€¢ [0.087 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:43:26.926
    Feb  9 00:43:26.926: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename watch 02/09/23 00:43:26.927
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:26.946
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:26.95
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
      test/e2e/apimachinery/watch.go:191
    STEP: creating a watch on configmaps 02/09/23 00:43:26.955
    STEP: creating a new configmap 02/09/23 00:43:26.957
    STEP: modifying the configmap once 02/09/23 00:43:26.963
    STEP: closing the watch once it receives two notifications 02/09/23 00:43:26.975
    Feb  9 00:43:26.975: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6863  3caf2556-4e70-4cd3-b1db-6ec13f473677 9632 0 2023-02-09 00:43:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-02-09 00:43:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Feb  9 00:43:26.975: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6863  3caf2556-4e70-4cd3-b1db-6ec13f473677 9633 0 2023-02-09 00:43:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-02-09 00:43:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying the configmap a second time, while the watch is closed 02/09/23 00:43:26.975
    STEP: creating a new watch on configmaps from the last resource version observed by the first watch 02/09/23 00:43:26.986
    STEP: deleting the configmap 02/09/23 00:43:26.988
    STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed 02/09/23 00:43:26.997
    Feb  9 00:43:26.997: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6863  3caf2556-4e70-4cd3-b1db-6ec13f473677 9634 0 2023-02-09 00:43:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-02-09 00:43:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Feb  9 00:43:26.997: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6863  3caf2556-4e70-4cd3-b1db-6ec13f473677 9635 0 2023-02-09 00:43:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-02-09 00:43:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:43:26.997: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-6863" for this suite. 02/09/23 00:43:27.003
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:43:27.016
Feb  9 00:43:27.016: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename resourcequota 02/09/23 00:43:27.017
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:27.033
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:27.036
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75
STEP: Counting existing ResourceQuota 02/09/23 00:43:27.04
STEP: Creating a ResourceQuota 02/09/23 00:43:32.046
STEP: Ensuring resource quota status is calculated 02/09/23 00:43:32.053
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Feb  9 00:43:34.060: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-4780" for this suite. 02/09/23 00:43:34.067
------------------------------
â€¢ [SLOW TEST] [7.061 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:43:27.016
    Feb  9 00:43:27.016: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename resourcequota 02/09/23 00:43:27.017
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:27.033
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:27.036
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
      test/e2e/apimachinery/resource_quota.go:75
    STEP: Counting existing ResourceQuota 02/09/23 00:43:27.04
    STEP: Creating a ResourceQuota 02/09/23 00:43:32.046
    STEP: Ensuring resource quota status is calculated 02/09/23 00:43:32.053
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:43:34.060: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-4780" for this suite. 02/09/23 00:43:34.067
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] Secrets
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:43:34.077
Feb  9 00:43:34.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename secrets 02/09/23 00:43:34.078
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:34.095
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:34.098
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140
STEP: Creating projection with secret that has name secret-emptykey-test-6cb1c617-1b2e-4443-b456-d00e5554dd60 02/09/23 00:43:34.102
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Feb  9 00:43:34.104: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-542" for this suite. 02/09/23 00:43:34.11
------------------------------
â€¢ [0.045 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:43:34.077
    Feb  9 00:43:34.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename secrets 02/09/23 00:43:34.078
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:34.095
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:34.098
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail to create secret due to empty secret key [Conformance]
      test/e2e/common/node/secrets.go:140
    STEP: Creating projection with secret that has name secret-emptykey-test-6cb1c617-1b2e-4443-b456-d00e5554dd60 02/09/23 00:43:34.102
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:43:34.104: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-542" for this suite. 02/09/23 00:43:34.11
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:212
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:43:34.123
Feb  9 00:43:34.123: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-lifecycle-hook 02/09/23 00:43:34.124
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:34.139
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:34.143
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 02/09/23 00:43:34.154
Feb  9 00:43:34.169: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-547" to be "running and ready"
Feb  9 00:43:34.175: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 6.310656ms
Feb  9 00:43:34.175: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:43:36.181: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.012375364s
Feb  9 00:43:36.181: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Feb  9 00:43:36.181: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:212
STEP: create the pod with lifecycle hook 02/09/23 00:43:36.186
Feb  9 00:43:36.194: INFO: Waiting up to 5m0s for pod "pod-with-prestop-http-hook" in namespace "container-lifecycle-hook-547" to be "running and ready"
Feb  9 00:43:36.200: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 6.120952ms
Feb  9 00:43:36.200: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:43:38.206: INFO: Pod "pod-with-prestop-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.012486058s
Feb  9 00:43:38.206: INFO: The phase of Pod pod-with-prestop-http-hook is Running (Ready = true)
Feb  9 00:43:38.206: INFO: Pod "pod-with-prestop-http-hook" satisfied condition "running and ready"
STEP: delete the pod with lifecycle hook 02/09/23 00:43:38.212
Feb  9 00:43:38.223: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Feb  9 00:43:38.228: INFO: Pod pod-with-prestop-http-hook still exists
Feb  9 00:43:40.229: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Feb  9 00:43:40.236: INFO: Pod pod-with-prestop-http-hook still exists
Feb  9 00:43:42.230: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Feb  9 00:43:42.235: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook 02/09/23 00:43:42.235
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Feb  9 00:43:42.248: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-547" for this suite. 02/09/23 00:43:42.255
------------------------------
â€¢ [SLOW TEST] [8.141 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:212

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:43:34.123
    Feb  9 00:43:34.123: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-lifecycle-hook 02/09/23 00:43:34.124
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:34.139
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:34.143
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 02/09/23 00:43:34.154
    Feb  9 00:43:34.169: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-547" to be "running and ready"
    Feb  9 00:43:34.175: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 6.310656ms
    Feb  9 00:43:34.175: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:43:36.181: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.012375364s
    Feb  9 00:43:36.181: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Feb  9 00:43:36.181: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute prestop http hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:212
    STEP: create the pod with lifecycle hook 02/09/23 00:43:36.186
    Feb  9 00:43:36.194: INFO: Waiting up to 5m0s for pod "pod-with-prestop-http-hook" in namespace "container-lifecycle-hook-547" to be "running and ready"
    Feb  9 00:43:36.200: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 6.120952ms
    Feb  9 00:43:36.200: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:43:38.206: INFO: Pod "pod-with-prestop-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.012486058s
    Feb  9 00:43:38.206: INFO: The phase of Pod pod-with-prestop-http-hook is Running (Ready = true)
    Feb  9 00:43:38.206: INFO: Pod "pod-with-prestop-http-hook" satisfied condition "running and ready"
    STEP: delete the pod with lifecycle hook 02/09/23 00:43:38.212
    Feb  9 00:43:38.223: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Feb  9 00:43:38.228: INFO: Pod pod-with-prestop-http-hook still exists
    Feb  9 00:43:40.229: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Feb  9 00:43:40.236: INFO: Pod pod-with-prestop-http-hook still exists
    Feb  9 00:43:42.230: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Feb  9 00:43:42.235: INFO: Pod pod-with-prestop-http-hook no longer exists
    STEP: check prestop hook 02/09/23 00:43:42.235
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:43:42.248: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-547" for this suite. 02/09/23 00:43:42.255
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] Deployment
  should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:43:42.266
Feb  9 00:43:42.266: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename deployment 02/09/23 00:43:42.267
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:42.282
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:42.288
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479
STEP: creating a Deployment 02/09/23 00:43:42.302
Feb  9 00:43:42.302: INFO: Creating simple deployment test-deployment-fglhv
Feb  9 00:43:42.319: INFO: deployment "test-deployment-fglhv" doesn't have the required revision set
STEP: Getting /status 02/09/23 00:43:44.344
Feb  9 00:43:44.350: INFO: Deployment test-deployment-fglhv has Conditions: [{Available True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fglhv-54bc444df" has successfully progressed.}]
STEP: updating Deployment Status 02/09/23 00:43:44.35
Feb  9 00:43:44.365: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 0, 43, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 0, 43, 43, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 0, 43, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 0, 43, 42, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-fglhv-54bc444df\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated 02/09/23 00:43:44.365
Feb  9 00:43:44.368: INFO: Observed &Deployment event: ADDED
Feb  9 00:43:44.368: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fglhv-54bc444df"}
Feb  9 00:43:44.368: INFO: Observed &Deployment event: MODIFIED
Feb  9 00:43:44.368: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fglhv-54bc444df"}
Feb  9 00:43:44.368: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Feb  9 00:43:44.368: INFO: Observed &Deployment event: MODIFIED
Feb  9 00:43:44.368: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Feb  9 00:43:44.368: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-fglhv-54bc444df" is progressing.}
Feb  9 00:43:44.369: INFO: Observed &Deployment event: MODIFIED
Feb  9 00:43:44.369: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Feb  9 00:43:44.369: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fglhv-54bc444df" has successfully progressed.}
Feb  9 00:43:44.369: INFO: Observed &Deployment event: MODIFIED
Feb  9 00:43:44.369: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Feb  9 00:43:44.369: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fglhv-54bc444df" has successfully progressed.}
Feb  9 00:43:44.369: INFO: Found Deployment test-deployment-fglhv in namespace deployment-2617 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Feb  9 00:43:44.369: INFO: Deployment test-deployment-fglhv has an updated status
STEP: patching the Statefulset Status 02/09/23 00:43:44.369
Feb  9 00:43:44.369: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Feb  9 00:43:44.378: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched 02/09/23 00:43:44.378
Feb  9 00:43:44.381: INFO: Observed &Deployment event: ADDED
Feb  9 00:43:44.381: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fglhv-54bc444df"}
Feb  9 00:43:44.381: INFO: Observed &Deployment event: MODIFIED
Feb  9 00:43:44.381: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fglhv-54bc444df"}
Feb  9 00:43:44.381: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Feb  9 00:43:44.381: INFO: Observed &Deployment event: MODIFIED
Feb  9 00:43:44.381: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Feb  9 00:43:44.381: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-fglhv-54bc444df" is progressing.}
Feb  9 00:43:44.382: INFO: Observed &Deployment event: MODIFIED
Feb  9 00:43:44.382: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Feb  9 00:43:44.382: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fglhv-54bc444df" has successfully progressed.}
Feb  9 00:43:44.382: INFO: Observed &Deployment event: MODIFIED
Feb  9 00:43:44.382: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Feb  9 00:43:44.382: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fglhv-54bc444df" has successfully progressed.}
Feb  9 00:43:44.382: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Feb  9 00:43:44.382: INFO: Observed &Deployment event: MODIFIED
Feb  9 00:43:44.382: INFO: Found deployment test-deployment-fglhv in namespace deployment-2617 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Feb  9 00:43:44.382: INFO: Deployment test-deployment-fglhv has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Feb  9 00:43:44.388: INFO: Deployment "test-deployment-fglhv":
&Deployment{ObjectMeta:{test-deployment-fglhv  deployment-2617  21085728-a35a-4b27-9ecd-2bd608292551 9795 1 2023-02-09 00:43:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-02-09 00:43:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-02-09 00:43:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2023-02-09 00:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00703ee68 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-fglhv-54bc444df",LastUpdateTime:2023-02-09 00:43:44 +0000 UTC,LastTransitionTime:2023-02-09 00:43:44 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Feb  9 00:43:44.394: INFO: New ReplicaSet "test-deployment-fglhv-54bc444df" of Deployment "test-deployment-fglhv":
&ReplicaSet{ObjectMeta:{test-deployment-fglhv-54bc444df  deployment-2617  5f20e5d0-9f52-4f83-a01d-5d5661413dca 9782 1 2023-02-09 00:43:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-fglhv 21085728-a35a-4b27-9ecd-2bd608292551 0xc00703f2e7 0xc00703f2e8}] [] [{kube-controller-manager Update apps/v1 2023-02-09 00:43:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"21085728-a35a-4b27-9ecd-2bd608292551\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 00:43:43 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 54bc444df,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00703f398 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Feb  9 00:43:44.401: INFO: Pod "test-deployment-fglhv-54bc444df-6vxz2" is available:
&Pod{ObjectMeta:{test-deployment-fglhv-54bc444df-6vxz2 test-deployment-fglhv-54bc444df- deployment-2617  c5b0e658-0ed9-4f15-8e10-a17eefe9fbbd 9781 0 2023-02-09 00:43:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [{apps/v1 ReplicaSet test-deployment-fglhv-54bc444df 5f20e5d0-9f52-4f83-a01d-5d5661413dca 0xc0031db557 0xc0031db558}] [] [{kube-controller-manager Update v1 2023-02-09 00:43:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5f20e5d0-9f52-4f83-a01d-5d5661413dca\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 00:43:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.24\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nk7jm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nk7jm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:43:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:43:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:43:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:43:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.24,StartTime:2023-02-09 00:43:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 00:43:42 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://0c7745892db53baadc2ee9f61b44c7ab3eb216392a28a23afb9df24847167ea1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.24,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Feb  9 00:43:44.401: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-2617" for this suite. 02/09/23 00:43:44.409
------------------------------
â€¢ [2.152 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:43:42.266
    Feb  9 00:43:42.266: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename deployment 02/09/23 00:43:42.267
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:42.282
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:42.288
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] should validate Deployment Status endpoints [Conformance]
      test/e2e/apps/deployment.go:479
    STEP: creating a Deployment 02/09/23 00:43:42.302
    Feb  9 00:43:42.302: INFO: Creating simple deployment test-deployment-fglhv
    Feb  9 00:43:42.319: INFO: deployment "test-deployment-fglhv" doesn't have the required revision set
    STEP: Getting /status 02/09/23 00:43:44.344
    Feb  9 00:43:44.350: INFO: Deployment test-deployment-fglhv has Conditions: [{Available True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fglhv-54bc444df" has successfully progressed.}]
    STEP: updating Deployment Status 02/09/23 00:43:44.35
    Feb  9 00:43:44.365: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 0, 43, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 0, 43, 43, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 0, 43, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 0, 43, 42, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-fglhv-54bc444df\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the Deployment status to be updated 02/09/23 00:43:44.365
    Feb  9 00:43:44.368: INFO: Observed &Deployment event: ADDED
    Feb  9 00:43:44.368: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fglhv-54bc444df"}
    Feb  9 00:43:44.368: INFO: Observed &Deployment event: MODIFIED
    Feb  9 00:43:44.368: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fglhv-54bc444df"}
    Feb  9 00:43:44.368: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Feb  9 00:43:44.368: INFO: Observed &Deployment event: MODIFIED
    Feb  9 00:43:44.368: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Feb  9 00:43:44.368: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-fglhv-54bc444df" is progressing.}
    Feb  9 00:43:44.369: INFO: Observed &Deployment event: MODIFIED
    Feb  9 00:43:44.369: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Feb  9 00:43:44.369: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fglhv-54bc444df" has successfully progressed.}
    Feb  9 00:43:44.369: INFO: Observed &Deployment event: MODIFIED
    Feb  9 00:43:44.369: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Feb  9 00:43:44.369: INFO: Observed Deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fglhv-54bc444df" has successfully progressed.}
    Feb  9 00:43:44.369: INFO: Found Deployment test-deployment-fglhv in namespace deployment-2617 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Feb  9 00:43:44.369: INFO: Deployment test-deployment-fglhv has an updated status
    STEP: patching the Statefulset Status 02/09/23 00:43:44.369
    Feb  9 00:43:44.369: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Feb  9 00:43:44.378: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Deployment status to be patched 02/09/23 00:43:44.378
    Feb  9 00:43:44.381: INFO: Observed &Deployment event: ADDED
    Feb  9 00:43:44.381: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fglhv-54bc444df"}
    Feb  9 00:43:44.381: INFO: Observed &Deployment event: MODIFIED
    Feb  9 00:43:44.381: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fglhv-54bc444df"}
    Feb  9 00:43:44.381: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Feb  9 00:43:44.381: INFO: Observed &Deployment event: MODIFIED
    Feb  9 00:43:44.381: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Feb  9 00:43:44.381: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:42 +0000 UTC 2023-02-09 00:43:42 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-fglhv-54bc444df" is progressing.}
    Feb  9 00:43:44.382: INFO: Observed &Deployment event: MODIFIED
    Feb  9 00:43:44.382: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Feb  9 00:43:44.382: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fglhv-54bc444df" has successfully progressed.}
    Feb  9 00:43:44.382: INFO: Observed &Deployment event: MODIFIED
    Feb  9 00:43:44.382: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Feb  9 00:43:44.382: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-02-09 00:43:43 +0000 UTC 2023-02-09 00:43:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fglhv-54bc444df" has successfully progressed.}
    Feb  9 00:43:44.382: INFO: Observed deployment test-deployment-fglhv in namespace deployment-2617 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Feb  9 00:43:44.382: INFO: Observed &Deployment event: MODIFIED
    Feb  9 00:43:44.382: INFO: Found deployment test-deployment-fglhv in namespace deployment-2617 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
    Feb  9 00:43:44.382: INFO: Deployment test-deployment-fglhv has a patched status
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Feb  9 00:43:44.388: INFO: Deployment "test-deployment-fglhv":
    &Deployment{ObjectMeta:{test-deployment-fglhv  deployment-2617  21085728-a35a-4b27-9ecd-2bd608292551 9795 1 2023-02-09 00:43:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-02-09 00:43:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-02-09 00:43:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2023-02-09 00:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00703ee68 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-fglhv-54bc444df",LastUpdateTime:2023-02-09 00:43:44 +0000 UTC,LastTransitionTime:2023-02-09 00:43:44 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Feb  9 00:43:44.394: INFO: New ReplicaSet "test-deployment-fglhv-54bc444df" of Deployment "test-deployment-fglhv":
    &ReplicaSet{ObjectMeta:{test-deployment-fglhv-54bc444df  deployment-2617  5f20e5d0-9f52-4f83-a01d-5d5661413dca 9782 1 2023-02-09 00:43:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-fglhv 21085728-a35a-4b27-9ecd-2bd608292551 0xc00703f2e7 0xc00703f2e8}] [] [{kube-controller-manager Update apps/v1 2023-02-09 00:43:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"21085728-a35a-4b27-9ecd-2bd608292551\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 00:43:43 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 54bc444df,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00703f398 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Feb  9 00:43:44.401: INFO: Pod "test-deployment-fglhv-54bc444df-6vxz2" is available:
    &Pod{ObjectMeta:{test-deployment-fglhv-54bc444df-6vxz2 test-deployment-fglhv-54bc444df- deployment-2617  c5b0e658-0ed9-4f15-8e10-a17eefe9fbbd 9781 0 2023-02-09 00:43:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [{apps/v1 ReplicaSet test-deployment-fglhv-54bc444df 5f20e5d0-9f52-4f83-a01d-5d5661413dca 0xc0031db557 0xc0031db558}] [] [{kube-controller-manager Update v1 2023-02-09 00:43:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5f20e5d0-9f52-4f83-a01d-5d5661413dca\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 00:43:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.24\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nk7jm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nk7jm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:43:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:43:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:43:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:43:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.24,StartTime:2023-02-09 00:43:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 00:43:42 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://0c7745892db53baadc2ee9f61b44c7ab3eb216392a28a23afb9df24847167ea1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.24,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:43:44.401: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-2617" for this suite. 02/09/23 00:43:44.409
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:43:44.419
Feb  9 00:43:44.419: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename secrets 02/09/23 00:43:44.42
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:44.435
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:44.438
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47
STEP: Creating secret with name secret-test-d0e3dcdf-c517-4a51-9ed0-0a8d1859ee8b 02/09/23 00:43:44.443
STEP: Creating a pod to test consume secrets 02/09/23 00:43:44.449
Feb  9 00:43:44.461: INFO: Waiting up to 5m0s for pod "pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b" in namespace "secrets-4886" to be "Succeeded or Failed"
Feb  9 00:43:44.467: INFO: Pod "pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.482507ms
Feb  9 00:43:46.474: INFO: Pod "pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b": Phase="Running", Reason="", readiness=false. Elapsed: 2.012761804s
Feb  9 00:43:48.475: INFO: Pod "pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014015979s
STEP: Saw pod success 02/09/23 00:43:48.475
Feb  9 00:43:48.475: INFO: Pod "pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b" satisfied condition "Succeeded or Failed"
Feb  9 00:43:48.481: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b container secret-volume-test: <nil>
STEP: delete the pod 02/09/23 00:43:48.492
Feb  9 00:43:48.508: INFO: Waiting for pod pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b to disappear
Feb  9 00:43:48.514: INFO: Pod pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Feb  9 00:43:48.514: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4886" for this suite. 02/09/23 00:43:48.522
------------------------------
â€¢ [4.114 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:43:44.419
    Feb  9 00:43:44.419: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename secrets 02/09/23 00:43:44.42
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:44.435
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:44.438
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:47
    STEP: Creating secret with name secret-test-d0e3dcdf-c517-4a51-9ed0-0a8d1859ee8b 02/09/23 00:43:44.443
    STEP: Creating a pod to test consume secrets 02/09/23 00:43:44.449
    Feb  9 00:43:44.461: INFO: Waiting up to 5m0s for pod "pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b" in namespace "secrets-4886" to be "Succeeded or Failed"
    Feb  9 00:43:44.467: INFO: Pod "pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.482507ms
    Feb  9 00:43:46.474: INFO: Pod "pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b": Phase="Running", Reason="", readiness=false. Elapsed: 2.012761804s
    Feb  9 00:43:48.475: INFO: Pod "pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014015979s
    STEP: Saw pod success 02/09/23 00:43:48.475
    Feb  9 00:43:48.475: INFO: Pod "pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b" satisfied condition "Succeeded or Failed"
    Feb  9 00:43:48.481: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b container secret-volume-test: <nil>
    STEP: delete the pod 02/09/23 00:43:48.492
    Feb  9 00:43:48.508: INFO: Waiting for pod pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b to disappear
    Feb  9 00:43:48.514: INFO: Pod pod-secrets-328ae890-bc09-4c50-a4f4-0af3d2c92e0b no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:43:48.514: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4886" for this suite. 02/09/23 00:43:48.522
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:43:48.534
Feb  9 00:43:48.534: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 00:43:48.535
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:48.55
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:48.554
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57
STEP: Creating configMap with name projected-configmap-test-volume-c9f29c8e-6139-4309-b83d-9f47fb54fee3 02/09/23 00:43:48.557
STEP: Creating a pod to test consume configMaps 02/09/23 00:43:48.563
Feb  9 00:43:48.575: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f" in namespace "projected-1345" to be "Succeeded or Failed"
Feb  9 00:43:48.581: INFO: Pod "pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f": Phase="Pending", Reason="", readiness=false. Elapsed: 5.190524ms
Feb  9 00:43:50.588: INFO: Pod "pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012596266s
Feb  9 00:43:52.588: INFO: Pod "pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012433028s
STEP: Saw pod success 02/09/23 00:43:52.588
Feb  9 00:43:52.588: INFO: Pod "pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f" satisfied condition "Succeeded or Failed"
Feb  9 00:43:52.594: INFO: Trying to get logs from node aks-nodes-15799032-vmss000001 pod pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f container agnhost-container: <nil>
STEP: delete the pod 02/09/23 00:43:52.605
Feb  9 00:43:52.624: INFO: Waiting for pod pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f to disappear
Feb  9 00:43:52.630: INFO: Pod pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Feb  9 00:43:52.630: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1345" for this suite. 02/09/23 00:43:52.637
------------------------------
â€¢ [4.112 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:43:48.534
    Feb  9 00:43:48.534: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 00:43:48.535
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:48.55
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:48.554
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:57
    STEP: Creating configMap with name projected-configmap-test-volume-c9f29c8e-6139-4309-b83d-9f47fb54fee3 02/09/23 00:43:48.557
    STEP: Creating a pod to test consume configMaps 02/09/23 00:43:48.563
    Feb  9 00:43:48.575: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f" in namespace "projected-1345" to be "Succeeded or Failed"
    Feb  9 00:43:48.581: INFO: Pod "pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f": Phase="Pending", Reason="", readiness=false. Elapsed: 5.190524ms
    Feb  9 00:43:50.588: INFO: Pod "pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012596266s
    Feb  9 00:43:52.588: INFO: Pod "pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012433028s
    STEP: Saw pod success 02/09/23 00:43:52.588
    Feb  9 00:43:52.588: INFO: Pod "pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f" satisfied condition "Succeeded or Failed"
    Feb  9 00:43:52.594: INFO: Trying to get logs from node aks-nodes-15799032-vmss000001 pod pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 00:43:52.605
    Feb  9 00:43:52.624: INFO: Waiting for pod pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f to disappear
    Feb  9 00:43:52.630: INFO: Pod pod-projected-configmaps-0b61cd50-a938-4110-9105-fb3b235b811f no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:43:52.630: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1345" for this suite. 02/09/23 00:43:52.637
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/apps/statefulset.go:317
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:43:52.649
Feb  9 00:43:52.649: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename statefulset 02/09/23 00:43:52.65
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:52.665
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:52.67
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-6404 02/09/23 00:43:52.674
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/apps/statefulset.go:317
STEP: Creating a new StatefulSet 02/09/23 00:43:52.68
Feb  9 00:43:52.694: INFO: Found 0 stateful pods, waiting for 3
Feb  9 00:44:02.701: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Feb  9 00:44:02.701: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Feb  9 00:44:02.701: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 02/09/23 00:44:02.718
Feb  9 00:44:02.741: INFO: Updating stateful set ss2
STEP: Creating a new revision 02/09/23 00:44:02.741
STEP: Not applying an update when the partition is greater than the number of replicas 02/09/23 00:44:12.767
STEP: Performing a canary update 02/09/23 00:44:12.767
Feb  9 00:44:12.791: INFO: Updating stateful set ss2
Feb  9 00:44:12.805: INFO: Waiting for Pod statefulset-6404/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
STEP: Restoring Pods to the correct revision when they are deleted 02/09/23 00:44:23.484
Feb  9 00:44:23.532: INFO: Found 2 stateful pods, waiting for 3
Feb  9 00:44:33.542: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Feb  9 00:44:33.542: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Feb  9 00:44:33.542: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update 02/09/23 00:44:33.554
Feb  9 00:44:33.581: INFO: Updating stateful set ss2
Feb  9 00:44:33.593: INFO: Waiting for Pod statefulset-6404/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Feb  9 00:44:43.633: INFO: Updating stateful set ss2
Feb  9 00:44:43.647: INFO: Waiting for StatefulSet statefulset-6404/ss2 to complete update
Feb  9 00:44:43.647: INFO: Waiting for Pod statefulset-6404/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Feb  9 00:44:53.659: INFO: Deleting all statefulset in ns statefulset-6404
Feb  9 00:44:53.665: INFO: Scaling statefulset ss2 to 0
Feb  9 00:45:03.688: INFO: Waiting for statefulset status.replicas updated to 0
Feb  9 00:45:03.694: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Feb  9 00:45:03.717: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-6404" for this suite. 02/09/23 00:45:03.729
------------------------------
â€¢ [SLOW TEST] [71.089 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/apps/statefulset.go:317

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:43:52.649
    Feb  9 00:43:52.649: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename statefulset 02/09/23 00:43:52.65
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:43:52.665
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:43:52.67
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-6404 02/09/23 00:43:52.674
    [It] should perform canary updates and phased rolling updates of template modifications [Conformance]
      test/e2e/apps/statefulset.go:317
    STEP: Creating a new StatefulSet 02/09/23 00:43:52.68
    Feb  9 00:43:52.694: INFO: Found 0 stateful pods, waiting for 3
    Feb  9 00:44:02.701: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Feb  9 00:44:02.701: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Feb  9 00:44:02.701: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 02/09/23 00:44:02.718
    Feb  9 00:44:02.741: INFO: Updating stateful set ss2
    STEP: Creating a new revision 02/09/23 00:44:02.741
    STEP: Not applying an update when the partition is greater than the number of replicas 02/09/23 00:44:12.767
    STEP: Performing a canary update 02/09/23 00:44:12.767
    Feb  9 00:44:12.791: INFO: Updating stateful set ss2
    Feb  9 00:44:12.805: INFO: Waiting for Pod statefulset-6404/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    STEP: Restoring Pods to the correct revision when they are deleted 02/09/23 00:44:23.484
    Feb  9 00:44:23.532: INFO: Found 2 stateful pods, waiting for 3
    Feb  9 00:44:33.542: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Feb  9 00:44:33.542: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Feb  9 00:44:33.542: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Performing a phased rolling update 02/09/23 00:44:33.554
    Feb  9 00:44:33.581: INFO: Updating stateful set ss2
    Feb  9 00:44:33.593: INFO: Waiting for Pod statefulset-6404/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Feb  9 00:44:43.633: INFO: Updating stateful set ss2
    Feb  9 00:44:43.647: INFO: Waiting for StatefulSet statefulset-6404/ss2 to complete update
    Feb  9 00:44:43.647: INFO: Waiting for Pod statefulset-6404/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Feb  9 00:44:53.659: INFO: Deleting all statefulset in ns statefulset-6404
    Feb  9 00:44:53.665: INFO: Scaling statefulset ss2 to 0
    Feb  9 00:45:03.688: INFO: Waiting for statefulset status.replicas updated to 0
    Feb  9 00:45:03.694: INFO: Deleting statefulset ss2
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:45:03.717: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-6404" for this suite. 02/09/23 00:45:03.729
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:45:03.74
Feb  9 00:45:03.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename svcaccounts 02/09/23 00:45:03.74
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:03.756
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:03.759
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161
Feb  9 00:45:03.792: INFO: created pod pod-service-account-defaultsa
Feb  9 00:45:03.792: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Feb  9 00:45:03.801: INFO: created pod pod-service-account-mountsa
Feb  9 00:45:03.801: INFO: pod pod-service-account-mountsa service account token volume mount: true
Feb  9 00:45:03.808: INFO: created pod pod-service-account-nomountsa
Feb  9 00:45:03.808: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Feb  9 00:45:03.816: INFO: created pod pod-service-account-defaultsa-mountspec
Feb  9 00:45:03.816: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Feb  9 00:45:03.824: INFO: created pod pod-service-account-mountsa-mountspec
Feb  9 00:45:03.824: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Feb  9 00:45:03.832: INFO: created pod pod-service-account-nomountsa-mountspec
Feb  9 00:45:03.832: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Feb  9 00:45:03.842: INFO: created pod pod-service-account-defaultsa-nomountspec
Feb  9 00:45:03.842: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Feb  9 00:45:03.849: INFO: created pod pod-service-account-mountsa-nomountspec
Feb  9 00:45:03.849: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Feb  9 00:45:03.857: INFO: created pod pod-service-account-nomountsa-nomountspec
Feb  9 00:45:03.857: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Feb  9 00:45:03.857: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-4953" for this suite. 02/09/23 00:45:03.864
------------------------------
â€¢ [0.135 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:45:03.74
    Feb  9 00:45:03.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename svcaccounts 02/09/23 00:45:03.74
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:03.756
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:03.759
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow opting out of API token automount  [Conformance]
      test/e2e/auth/service_accounts.go:161
    Feb  9 00:45:03.792: INFO: created pod pod-service-account-defaultsa
    Feb  9 00:45:03.792: INFO: pod pod-service-account-defaultsa service account token volume mount: true
    Feb  9 00:45:03.801: INFO: created pod pod-service-account-mountsa
    Feb  9 00:45:03.801: INFO: pod pod-service-account-mountsa service account token volume mount: true
    Feb  9 00:45:03.808: INFO: created pod pod-service-account-nomountsa
    Feb  9 00:45:03.808: INFO: pod pod-service-account-nomountsa service account token volume mount: false
    Feb  9 00:45:03.816: INFO: created pod pod-service-account-defaultsa-mountspec
    Feb  9 00:45:03.816: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
    Feb  9 00:45:03.824: INFO: created pod pod-service-account-mountsa-mountspec
    Feb  9 00:45:03.824: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
    Feb  9 00:45:03.832: INFO: created pod pod-service-account-nomountsa-mountspec
    Feb  9 00:45:03.832: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
    Feb  9 00:45:03.842: INFO: created pod pod-service-account-defaultsa-nomountspec
    Feb  9 00:45:03.842: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
    Feb  9 00:45:03.849: INFO: created pod pod-service-account-mountsa-nomountspec
    Feb  9 00:45:03.849: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
    Feb  9 00:45:03.857: INFO: created pod pod-service-account-nomountsa-nomountspec
    Feb  9 00:45:03.857: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:45:03.857: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-4953" for this suite. 02/09/23 00:45:03.864
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:45:03.875
Feb  9 00:45:03.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename sysctl 02/09/23 00:45:03.876
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:03.89
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:03.894
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123
STEP: Creating a pod with one valid and two invalid sysctls 02/09/23 00:45:03.898
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:45:03.906: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "sysctl-7858" for this suite. 02/09/23 00:45:03.912
------------------------------
â€¢ [0.045 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
test/e2e/common/node/framework.go:23
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:37
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:45:03.875
    Feb  9 00:45:03.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename sysctl 02/09/23 00:45:03.876
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:03.89
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:03.894
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:67
    [It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
      test/e2e/common/node/sysctl.go:123
    STEP: Creating a pod with one valid and two invalid sysctls 02/09/23 00:45:03.898
    [AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:45:03.906: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sysctl-7858" for this suite. 02/09/23 00:45:03.912
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:45:03.922
Feb  9 00:45:03.922: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename resourcequota 02/09/23 00:45:03.923
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:03.937
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:03.941
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943
STEP: Creating a ResourceQuota 02/09/23 00:45:03.945
STEP: Getting a ResourceQuota 02/09/23 00:45:03.951
STEP: Listing all ResourceQuotas with LabelSelector 02/09/23 00:45:03.957
STEP: Patching the ResourceQuota 02/09/23 00:45:03.963
STEP: Deleting a Collection of ResourceQuotas 02/09/23 00:45:03.971
STEP: Verifying the deleted ResourceQuota 02/09/23 00:45:03.984
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Feb  9 00:45:03.989: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-5226" for this suite. 02/09/23 00:45:03.999
------------------------------
â€¢ [0.092 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:45:03.922
    Feb  9 00:45:03.922: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename resourcequota 02/09/23 00:45:03.923
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:03.937
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:03.941
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of a ResourceQuota [Conformance]
      test/e2e/apimachinery/resource_quota.go:943
    STEP: Creating a ResourceQuota 02/09/23 00:45:03.945
    STEP: Getting a ResourceQuota 02/09/23 00:45:03.951
    STEP: Listing all ResourceQuotas with LabelSelector 02/09/23 00:45:03.957
    STEP: Patching the ResourceQuota 02/09/23 00:45:03.963
    STEP: Deleting a Collection of ResourceQuotas 02/09/23 00:45:03.971
    STEP: Verifying the deleted ResourceQuota 02/09/23 00:45:03.984
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:45:03.989: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-5226" for this suite. 02/09/23 00:45:03.999
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:151
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:45:04.015
Feb  9 00:45:04.015: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-lifecycle-hook 02/09/23 00:45:04.016
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:04.032
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:04.036
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 02/09/23 00:45:04.046
Feb  9 00:45:04.061: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-5196" to be "running and ready"
Feb  9 00:45:04.067: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 5.306011ms
Feb  9 00:45:04.067: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:45:06.073: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012057344s
Feb  9 00:45:06.073: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:45:08.074: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.012335642s
Feb  9 00:45:08.074: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Feb  9 00:45:08.074: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:151
STEP: create the pod with lifecycle hook 02/09/23 00:45:08.079
Feb  9 00:45:08.090: INFO: Waiting up to 5m0s for pod "pod-with-prestop-exec-hook" in namespace "container-lifecycle-hook-5196" to be "running and ready"
Feb  9 00:45:08.096: INFO: Pod "pod-with-prestop-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 6.357733ms
Feb  9 00:45:08.096: INFO: The phase of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:45:10.103: INFO: Pod "pod-with-prestop-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.013316839s
Feb  9 00:45:10.103: INFO: The phase of Pod pod-with-prestop-exec-hook is Running (Ready = true)
Feb  9 00:45:10.103: INFO: Pod "pod-with-prestop-exec-hook" satisfied condition "running and ready"
STEP: delete the pod with lifecycle hook 02/09/23 00:45:10.108
Feb  9 00:45:10.119: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Feb  9 00:45:10.125: INFO: Pod pod-with-prestop-exec-hook still exists
Feb  9 00:45:12.126: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Feb  9 00:45:12.133: INFO: Pod pod-with-prestop-exec-hook still exists
Feb  9 00:45:14.125: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Feb  9 00:45:14.131: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook 02/09/23 00:45:14.131
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Feb  9 00:45:14.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-5196" for this suite. 02/09/23 00:45:14.151
------------------------------
â€¢ [SLOW TEST] [10.146 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:151

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:45:04.015
    Feb  9 00:45:04.015: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-lifecycle-hook 02/09/23 00:45:04.016
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:04.032
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:04.036
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 02/09/23 00:45:04.046
    Feb  9 00:45:04.061: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-5196" to be "running and ready"
    Feb  9 00:45:04.067: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 5.306011ms
    Feb  9 00:45:04.067: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:45:06.073: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012057344s
    Feb  9 00:45:06.073: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:45:08.074: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.012335642s
    Feb  9 00:45:08.074: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Feb  9 00:45:08.074: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute prestop exec hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:151
    STEP: create the pod with lifecycle hook 02/09/23 00:45:08.079
    Feb  9 00:45:08.090: INFO: Waiting up to 5m0s for pod "pod-with-prestop-exec-hook" in namespace "container-lifecycle-hook-5196" to be "running and ready"
    Feb  9 00:45:08.096: INFO: Pod "pod-with-prestop-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 6.357733ms
    Feb  9 00:45:08.096: INFO: The phase of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:45:10.103: INFO: Pod "pod-with-prestop-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.013316839s
    Feb  9 00:45:10.103: INFO: The phase of Pod pod-with-prestop-exec-hook is Running (Ready = true)
    Feb  9 00:45:10.103: INFO: Pod "pod-with-prestop-exec-hook" satisfied condition "running and ready"
    STEP: delete the pod with lifecycle hook 02/09/23 00:45:10.108
    Feb  9 00:45:10.119: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Feb  9 00:45:10.125: INFO: Pod pod-with-prestop-exec-hook still exists
    Feb  9 00:45:12.126: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Feb  9 00:45:12.133: INFO: Pod pod-with-prestop-exec-hook still exists
    Feb  9 00:45:14.125: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Feb  9 00:45:14.131: INFO: Pod pod-with-prestop-exec-hook no longer exists
    STEP: check prestop hook 02/09/23 00:45:14.131
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:45:14.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-5196" for this suite. 02/09/23 00:45:14.151
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo
  should create and stop a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:339
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:45:14.161
Feb  9 00:45:14.161: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 00:45:14.162
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:14.177
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:14.181
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:326
[It] should create and stop a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:339
STEP: creating a replication controller 02/09/23 00:45:14.188
Feb  9 00:45:14.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 create -f -'
Feb  9 00:45:14.393: INFO: stderr: ""
Feb  9 00:45:14.393: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up. 02/09/23 00:45:14.393
Feb  9 00:45:14.393: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Feb  9 00:45:14.478: INFO: stderr: ""
Feb  9 00:45:14.478: INFO: stdout: "update-demo-nautilus-s2fr6 update-demo-nautilus-wvsjg "
Feb  9 00:45:14.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods update-demo-nautilus-s2fr6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Feb  9 00:45:14.539: INFO: stderr: ""
Feb  9 00:45:14.539: INFO: stdout: ""
Feb  9 00:45:14.539: INFO: update-demo-nautilus-s2fr6 is created but not running
Feb  9 00:45:19.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Feb  9 00:45:19.605: INFO: stderr: ""
Feb  9 00:45:19.605: INFO: stdout: "update-demo-nautilus-s2fr6 update-demo-nautilus-wvsjg "
Feb  9 00:45:19.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods update-demo-nautilus-s2fr6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Feb  9 00:45:19.669: INFO: stderr: ""
Feb  9 00:45:19.670: INFO: stdout: "true"
Feb  9 00:45:19.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods update-demo-nautilus-s2fr6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Feb  9 00:45:19.734: INFO: stderr: ""
Feb  9 00:45:19.734: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Feb  9 00:45:19.734: INFO: validating pod update-demo-nautilus-s2fr6
Feb  9 00:45:19.746: INFO: got data: {
  "image": "nautilus.jpg"
}

Feb  9 00:45:19.746: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Feb  9 00:45:19.746: INFO: update-demo-nautilus-s2fr6 is verified up and running
Feb  9 00:45:19.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods update-demo-nautilus-wvsjg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Feb  9 00:45:19.814: INFO: stderr: ""
Feb  9 00:45:19.814: INFO: stdout: "true"
Feb  9 00:45:19.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods update-demo-nautilus-wvsjg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Feb  9 00:45:19.877: INFO: stderr: ""
Feb  9 00:45:19.877: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Feb  9 00:45:19.877: INFO: validating pod update-demo-nautilus-wvsjg
Feb  9 00:45:19.887: INFO: got data: {
  "image": "nautilus.jpg"
}

Feb  9 00:45:19.888: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Feb  9 00:45:19.888: INFO: update-demo-nautilus-wvsjg is verified up and running
STEP: using delete to clean up resources 02/09/23 00:45:19.888
Feb  9 00:45:19.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 delete --grace-period=0 --force -f -'
Feb  9 00:45:19.958: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Feb  9 00:45:19.958: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Feb  9 00:45:19.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get rc,svc -l name=update-demo --no-headers'
Feb  9 00:45:20.060: INFO: stderr: "No resources found in kubectl-3341 namespace.\n"
Feb  9 00:45:20.060: INFO: stdout: ""
Feb  9 00:45:20.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Feb  9 00:45:20.141: INFO: stderr: ""
Feb  9 00:45:20.141: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 00:45:20.141: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-3341" for this suite. 02/09/23 00:45:20.149
------------------------------
â€¢ [SLOW TEST] [5.997 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:324
    should create and stop a replication controller  [Conformance]
    test/e2e/kubectl/kubectl.go:339

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:45:14.161
    Feb  9 00:45:14.161: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 00:45:14.162
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:14.177
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:14.181
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Update Demo
      test/e2e/kubectl/kubectl.go:326
    [It] should create and stop a replication controller  [Conformance]
      test/e2e/kubectl/kubectl.go:339
    STEP: creating a replication controller 02/09/23 00:45:14.188
    Feb  9 00:45:14.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 create -f -'
    Feb  9 00:45:14.393: INFO: stderr: ""
    Feb  9 00:45:14.393: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 02/09/23 00:45:14.393
    Feb  9 00:45:14.393: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Feb  9 00:45:14.478: INFO: stderr: ""
    Feb  9 00:45:14.478: INFO: stdout: "update-demo-nautilus-s2fr6 update-demo-nautilus-wvsjg "
    Feb  9 00:45:14.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods update-demo-nautilus-s2fr6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Feb  9 00:45:14.539: INFO: stderr: ""
    Feb  9 00:45:14.539: INFO: stdout: ""
    Feb  9 00:45:14.539: INFO: update-demo-nautilus-s2fr6 is created but not running
    Feb  9 00:45:19.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Feb  9 00:45:19.605: INFO: stderr: ""
    Feb  9 00:45:19.605: INFO: stdout: "update-demo-nautilus-s2fr6 update-demo-nautilus-wvsjg "
    Feb  9 00:45:19.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods update-demo-nautilus-s2fr6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Feb  9 00:45:19.669: INFO: stderr: ""
    Feb  9 00:45:19.670: INFO: stdout: "true"
    Feb  9 00:45:19.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods update-demo-nautilus-s2fr6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Feb  9 00:45:19.734: INFO: stderr: ""
    Feb  9 00:45:19.734: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Feb  9 00:45:19.734: INFO: validating pod update-demo-nautilus-s2fr6
    Feb  9 00:45:19.746: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Feb  9 00:45:19.746: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Feb  9 00:45:19.746: INFO: update-demo-nautilus-s2fr6 is verified up and running
    Feb  9 00:45:19.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods update-demo-nautilus-wvsjg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Feb  9 00:45:19.814: INFO: stderr: ""
    Feb  9 00:45:19.814: INFO: stdout: "true"
    Feb  9 00:45:19.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods update-demo-nautilus-wvsjg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Feb  9 00:45:19.877: INFO: stderr: ""
    Feb  9 00:45:19.877: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Feb  9 00:45:19.877: INFO: validating pod update-demo-nautilus-wvsjg
    Feb  9 00:45:19.887: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Feb  9 00:45:19.888: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Feb  9 00:45:19.888: INFO: update-demo-nautilus-wvsjg is verified up and running
    STEP: using delete to clean up resources 02/09/23 00:45:19.888
    Feb  9 00:45:19.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 delete --grace-period=0 --force -f -'
    Feb  9 00:45:19.958: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Feb  9 00:45:19.958: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
    Feb  9 00:45:19.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get rc,svc -l name=update-demo --no-headers'
    Feb  9 00:45:20.060: INFO: stderr: "No resources found in kubectl-3341 namespace.\n"
    Feb  9 00:45:20.060: INFO: stdout: ""
    Feb  9 00:45:20.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3341 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Feb  9 00:45:20.141: INFO: stderr: ""
    Feb  9 00:45:20.141: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:45:20.141: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-3341" for this suite. 02/09/23 00:45:20.149
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:45:20.159
Feb  9 00:45:20.159: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 00:45:20.16
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:20.176
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:20.18
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78
STEP: Creating projection with secret that has name projected-secret-test-map-ce4e8ced-702e-4021-94ba-e4c0a8f3529d 02/09/23 00:45:20.184
STEP: Creating a pod to test consume secrets 02/09/23 00:45:20.19
Feb  9 00:45:20.203: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2" in namespace "projected-6831" to be "Succeeded or Failed"
Feb  9 00:45:20.209: INFO: Pod "pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2": Phase="Pending", Reason="", readiness=false. Elapsed: 6.448334ms
Feb  9 00:45:22.216: INFO: Pod "pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013583006s
Feb  9 00:45:24.216: INFO: Pod "pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013191322s
STEP: Saw pod success 02/09/23 00:45:24.216
Feb  9 00:45:24.216: INFO: Pod "pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2" satisfied condition "Succeeded or Failed"
Feb  9 00:45:24.222: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2 container projected-secret-volume-test: <nil>
STEP: delete the pod 02/09/23 00:45:24.235
Feb  9 00:45:24.249: INFO: Waiting for pod pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2 to disappear
Feb  9 00:45:24.255: INFO: Pod pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Feb  9 00:45:24.255: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6831" for this suite. 02/09/23 00:45:24.263
------------------------------
â€¢ [4.113 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:45:20.159
    Feb  9 00:45:20.159: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 00:45:20.16
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:20.176
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:20.18
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:78
    STEP: Creating projection with secret that has name projected-secret-test-map-ce4e8ced-702e-4021-94ba-e4c0a8f3529d 02/09/23 00:45:20.184
    STEP: Creating a pod to test consume secrets 02/09/23 00:45:20.19
    Feb  9 00:45:20.203: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2" in namespace "projected-6831" to be "Succeeded or Failed"
    Feb  9 00:45:20.209: INFO: Pod "pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2": Phase="Pending", Reason="", readiness=false. Elapsed: 6.448334ms
    Feb  9 00:45:22.216: INFO: Pod "pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013583006s
    Feb  9 00:45:24.216: INFO: Pod "pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013191322s
    STEP: Saw pod success 02/09/23 00:45:24.216
    Feb  9 00:45:24.216: INFO: Pod "pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2" satisfied condition "Succeeded or Failed"
    Feb  9 00:45:24.222: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2 container projected-secret-volume-test: <nil>
    STEP: delete the pod 02/09/23 00:45:24.235
    Feb  9 00:45:24.249: INFO: Waiting for pod pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2 to disappear
    Feb  9 00:45:24.255: INFO: Pod pod-projected-secrets-cb0377f1-405c-4c4a-aecc-a51a47dd62b2 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:45:24.255: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6831" for this suite. 02/09/23 00:45:24.263
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:45:24.273
Feb  9 00:45:24.274: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 00:45:24.274
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:24.29
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:24.294
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375
STEP: Creating configMap with name projected-configmap-test-volume-6d6a83ec-e0f2-460c-94ed-81719fd5efef 02/09/23 00:45:24.298
STEP: Creating a pod to test consume configMaps 02/09/23 00:45:24.305
Feb  9 00:45:24.316: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092" in namespace "projected-2404" to be "Succeeded or Failed"
Feb  9 00:45:24.323: INFO: Pod "pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092": Phase="Pending", Reason="", readiness=false. Elapsed: 6.192628ms
Feb  9 00:45:26.330: INFO: Pod "pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0138902s
Feb  9 00:45:28.329: INFO: Pod "pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013002879s
STEP: Saw pod success 02/09/23 00:45:28.329
Feb  9 00:45:28.330: INFO: Pod "pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092" satisfied condition "Succeeded or Failed"
Feb  9 00:45:28.335: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092 container projected-configmap-volume-test: <nil>
STEP: delete the pod 02/09/23 00:45:28.345
Feb  9 00:45:28.363: INFO: Waiting for pod pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092 to disappear
Feb  9 00:45:28.368: INFO: Pod pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Feb  9 00:45:28.368: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-2404" for this suite. 02/09/23 00:45:28.377
------------------------------
â€¢ [4.114 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:45:24.273
    Feb  9 00:45:24.274: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 00:45:24.274
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:24.29
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:24.294
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:375
    STEP: Creating configMap with name projected-configmap-test-volume-6d6a83ec-e0f2-460c-94ed-81719fd5efef 02/09/23 00:45:24.298
    STEP: Creating a pod to test consume configMaps 02/09/23 00:45:24.305
    Feb  9 00:45:24.316: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092" in namespace "projected-2404" to be "Succeeded or Failed"
    Feb  9 00:45:24.323: INFO: Pod "pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092": Phase="Pending", Reason="", readiness=false. Elapsed: 6.192628ms
    Feb  9 00:45:26.330: INFO: Pod "pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0138902s
    Feb  9 00:45:28.329: INFO: Pod "pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013002879s
    STEP: Saw pod success 02/09/23 00:45:28.329
    Feb  9 00:45:28.330: INFO: Pod "pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092" satisfied condition "Succeeded or Failed"
    Feb  9 00:45:28.335: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092 container projected-configmap-volume-test: <nil>
    STEP: delete the pod 02/09/23 00:45:28.345
    Feb  9 00:45:28.363: INFO: Waiting for pod pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092 to disappear
    Feb  9 00:45:28.368: INFO: Pod pod-projected-configmaps-03078b5b-1d2b-4315-83de-e0586ede3092 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:45:28.368: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-2404" for this suite. 02/09/23 00:45:28.377
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] Secrets
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:45:28.39
Feb  9 00:45:28.390: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename secrets 02/09/23 00:45:28.39
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:28.405
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:28.409
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99
STEP: Creating secret with name secret-test-3eb50cbf-01be-4004-bd1a-8253bdc7cfa2 02/09/23 00:45:28.434
STEP: Creating a pod to test consume secrets 02/09/23 00:45:28.439
Feb  9 00:45:28.452: INFO: Waiting up to 5m0s for pod "pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f" in namespace "secrets-47" to be "Succeeded or Failed"
Feb  9 00:45:28.457: INFO: Pod "pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f": Phase="Pending", Reason="", readiness=false. Elapsed: 5.268078ms
Feb  9 00:45:30.468: INFO: Pod "pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015642511s
Feb  9 00:45:32.463: INFO: Pod "pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011351012s
STEP: Saw pod success 02/09/23 00:45:32.463
Feb  9 00:45:32.463: INFO: Pod "pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f" satisfied condition "Succeeded or Failed"
Feb  9 00:45:32.469: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f container secret-volume-test: <nil>
STEP: delete the pod 02/09/23 00:45:32.479
Feb  9 00:45:32.496: INFO: Waiting for pod pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f to disappear
Feb  9 00:45:32.501: INFO: Pod pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Feb  9 00:45:32.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-47" for this suite. 02/09/23 00:45:32.509
STEP: Destroying namespace "secret-namespace-473" for this suite. 02/09/23 00:45:32.518
------------------------------
â€¢ [4.137 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:45:28.39
    Feb  9 00:45:28.390: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename secrets 02/09/23 00:45:28.39
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:28.405
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:28.409
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:99
    STEP: Creating secret with name secret-test-3eb50cbf-01be-4004-bd1a-8253bdc7cfa2 02/09/23 00:45:28.434
    STEP: Creating a pod to test consume secrets 02/09/23 00:45:28.439
    Feb  9 00:45:28.452: INFO: Waiting up to 5m0s for pod "pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f" in namespace "secrets-47" to be "Succeeded or Failed"
    Feb  9 00:45:28.457: INFO: Pod "pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f": Phase="Pending", Reason="", readiness=false. Elapsed: 5.268078ms
    Feb  9 00:45:30.468: INFO: Pod "pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015642511s
    Feb  9 00:45:32.463: INFO: Pod "pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011351012s
    STEP: Saw pod success 02/09/23 00:45:32.463
    Feb  9 00:45:32.463: INFO: Pod "pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f" satisfied condition "Succeeded or Failed"
    Feb  9 00:45:32.469: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f container secret-volume-test: <nil>
    STEP: delete the pod 02/09/23 00:45:32.479
    Feb  9 00:45:32.496: INFO: Waiting for pod pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f to disappear
    Feb  9 00:45:32.501: INFO: Pod pod-secrets-c2701e47-8045-4360-9b20-12c6e6085c1f no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:45:32.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-47" for this suite. 02/09/23 00:45:32.509
    STEP: Destroying namespace "secret-namespace-473" for this suite. 02/09/23 00:45:32.518
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/kubectl/kubectl.go:1250
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:45:32.529
Feb  9 00:45:32.530: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 00:45:32.53
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:32.546
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:32.55
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/kubectl/kubectl.go:1250
STEP: validating cluster-info 02/09/23 00:45:32.554
Feb  9 00:45:32.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1827 cluster-info'
Feb  9 00:45:32.615: INFO: stderr: ""
Feb  9 00:45:32.615: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.0.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 00:45:32.615: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1827" for this suite. 02/09/23 00:45:32.622
------------------------------
â€¢ [0.102 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl cluster-info
  test/e2e/kubectl/kubectl.go:1244
    should check if Kubernetes control plane services is included in cluster-info  [Conformance]
    test/e2e/kubectl/kubectl.go:1250

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:45:32.529
    Feb  9 00:45:32.530: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 00:45:32.53
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:32.546
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:32.55
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
      test/e2e/kubectl/kubectl.go:1250
    STEP: validating cluster-info 02/09/23 00:45:32.554
    Feb  9 00:45:32.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1827 cluster-info'
    Feb  9 00:45:32.615: INFO: stderr: ""
    Feb  9 00:45:32.615: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.0.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:45:32.615: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1827" for this suite. 02/09/23 00:45:32.622
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:45:32.632
Feb  9 00:45:32.632: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 00:45:32.633
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:32.648
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:32.652
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428
STEP: creating a Service 02/09/23 00:45:32.663
STEP: watching for the Service to be added 02/09/23 00:45:32.677
Feb  9 00:45:32.679: INFO: Found Service test-service-4cxzk in namespace services-966 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Feb  9 00:45:32.679: INFO: Service test-service-4cxzk created
STEP: Getting /status 02/09/23 00:45:32.679
Feb  9 00:45:32.684: INFO: Service test-service-4cxzk has LoadBalancer: {[]}
STEP: patching the ServiceStatus 02/09/23 00:45:32.684
STEP: watching for the Service to be patched 02/09/23 00:45:32.691
Feb  9 00:45:32.693: INFO: observed Service test-service-4cxzk in namespace services-966 with annotations: map[] & LoadBalancer: {[]}
Feb  9 00:45:32.693: INFO: Found Service test-service-4cxzk in namespace services-966 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Feb  9 00:45:32.693: INFO: Service test-service-4cxzk has service status patched
STEP: updating the ServiceStatus 02/09/23 00:45:32.693
Feb  9 00:45:32.705: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated 02/09/23 00:45:32.705
Feb  9 00:45:32.707: INFO: Observed Service test-service-4cxzk in namespace services-966 with annotations: map[] & Conditions: {[]}
Feb  9 00:45:32.707: INFO: Observed event: &Service{ObjectMeta:{test-service-4cxzk  services-966  d6d32e5b-9331-4115-9272-5700ffbfe481 10911 0 2023-02-09 00:45:32 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-02-09 00:45:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-02-09 00:45:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.0.24.188,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.0.24.188],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Feb  9 00:45:32.707: INFO: Found Service test-service-4cxzk in namespace services-966 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Feb  9 00:45:32.707: INFO: Service test-service-4cxzk has service status updated
STEP: patching the service 02/09/23 00:45:32.708
STEP: watching for the Service to be patched 02/09/23 00:45:32.722
Feb  9 00:45:32.724: INFO: observed Service test-service-4cxzk in namespace services-966 with labels: map[test-service-static:true]
Feb  9 00:45:32.724: INFO: observed Service test-service-4cxzk in namespace services-966 with labels: map[test-service-static:true]
Feb  9 00:45:32.724: INFO: observed Service test-service-4cxzk in namespace services-966 with labels: map[test-service-static:true]
Feb  9 00:45:32.724: INFO: Found Service test-service-4cxzk in namespace services-966 with labels: map[test-service:patched test-service-static:true]
Feb  9 00:45:32.724: INFO: Service test-service-4cxzk patched
STEP: deleting the service 02/09/23 00:45:32.724
STEP: watching for the Service to be deleted 02/09/23 00:45:32.744
Feb  9 00:45:32.750: INFO: Observed event: ADDED
Feb  9 00:45:32.750: INFO: Observed event: MODIFIED
Feb  9 00:45:32.750: INFO: Observed event: MODIFIED
Feb  9 00:45:32.750: INFO: Observed event: MODIFIED
Feb  9 00:45:32.750: INFO: Found Service test-service-4cxzk in namespace services-966 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Feb  9 00:45:32.750: INFO: Service test-service-4cxzk deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 00:45:32.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-966" for this suite. 02/09/23 00:45:32.757
------------------------------
â€¢ [0.133 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:45:32.632
    Feb  9 00:45:32.632: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 00:45:32.633
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:32.648
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:32.652
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should complete a service status lifecycle [Conformance]
      test/e2e/network/service.go:3428
    STEP: creating a Service 02/09/23 00:45:32.663
    STEP: watching for the Service to be added 02/09/23 00:45:32.677
    Feb  9 00:45:32.679: INFO: Found Service test-service-4cxzk in namespace services-966 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
    Feb  9 00:45:32.679: INFO: Service test-service-4cxzk created
    STEP: Getting /status 02/09/23 00:45:32.679
    Feb  9 00:45:32.684: INFO: Service test-service-4cxzk has LoadBalancer: {[]}
    STEP: patching the ServiceStatus 02/09/23 00:45:32.684
    STEP: watching for the Service to be patched 02/09/23 00:45:32.691
    Feb  9 00:45:32.693: INFO: observed Service test-service-4cxzk in namespace services-966 with annotations: map[] & LoadBalancer: {[]}
    Feb  9 00:45:32.693: INFO: Found Service test-service-4cxzk in namespace services-966 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
    Feb  9 00:45:32.693: INFO: Service test-service-4cxzk has service status patched
    STEP: updating the ServiceStatus 02/09/23 00:45:32.693
    Feb  9 00:45:32.705: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the Service to be updated 02/09/23 00:45:32.705
    Feb  9 00:45:32.707: INFO: Observed Service test-service-4cxzk in namespace services-966 with annotations: map[] & Conditions: {[]}
    Feb  9 00:45:32.707: INFO: Observed event: &Service{ObjectMeta:{test-service-4cxzk  services-966  d6d32e5b-9331-4115-9272-5700ffbfe481 10911 0 2023-02-09 00:45:32 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-02-09 00:45:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-02-09 00:45:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.0.24.188,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.0.24.188],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
    Feb  9 00:45:32.707: INFO: Found Service test-service-4cxzk in namespace services-966 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Feb  9 00:45:32.707: INFO: Service test-service-4cxzk has service status updated
    STEP: patching the service 02/09/23 00:45:32.708
    STEP: watching for the Service to be patched 02/09/23 00:45:32.722
    Feb  9 00:45:32.724: INFO: observed Service test-service-4cxzk in namespace services-966 with labels: map[test-service-static:true]
    Feb  9 00:45:32.724: INFO: observed Service test-service-4cxzk in namespace services-966 with labels: map[test-service-static:true]
    Feb  9 00:45:32.724: INFO: observed Service test-service-4cxzk in namespace services-966 with labels: map[test-service-static:true]
    Feb  9 00:45:32.724: INFO: Found Service test-service-4cxzk in namespace services-966 with labels: map[test-service:patched test-service-static:true]
    Feb  9 00:45:32.724: INFO: Service test-service-4cxzk patched
    STEP: deleting the service 02/09/23 00:45:32.724
    STEP: watching for the Service to be deleted 02/09/23 00:45:32.744
    Feb  9 00:45:32.750: INFO: Observed event: ADDED
    Feb  9 00:45:32.750: INFO: Observed event: MODIFIED
    Feb  9 00:45:32.750: INFO: Observed event: MODIFIED
    Feb  9 00:45:32.750: INFO: Observed event: MODIFIED
    Feb  9 00:45:32.750: INFO: Found Service test-service-4cxzk in namespace services-966 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
    Feb  9 00:45:32.750: INFO: Service test-service-4cxzk deleted
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:45:32.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-966" for this suite. 02/09/23 00:45:32.757
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:45:32.77
Feb  9 00:45:32.770: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename cronjob 02/09/23 00:45:32.771
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:32.786
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:32.79
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160
STEP: Creating a ReplaceConcurrent cronjob 02/09/23 00:45:32.794
STEP: Ensuring a job is scheduled 02/09/23 00:45:32.8
STEP: Ensuring exactly one is scheduled 02/09/23 00:46:00.806
STEP: Ensuring exactly one running job exists by listing jobs explicitly 02/09/23 00:46:00.811
STEP: Ensuring the job is replaced with a new one 02/09/23 00:46:00.817
STEP: Removing cronjob 02/09/23 00:47:00.824
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Feb  9 00:47:00.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-594" for this suite. 02/09/23 00:47:00.841
------------------------------
â€¢ [SLOW TEST] [88.079 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:45:32.77
    Feb  9 00:45:32.770: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename cronjob 02/09/23 00:45:32.771
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:45:32.786
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:45:32.79
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should replace jobs when ReplaceConcurrent [Conformance]
      test/e2e/apps/cronjob.go:160
    STEP: Creating a ReplaceConcurrent cronjob 02/09/23 00:45:32.794
    STEP: Ensuring a job is scheduled 02/09/23 00:45:32.8
    STEP: Ensuring exactly one is scheduled 02/09/23 00:46:00.806
    STEP: Ensuring exactly one running job exists by listing jobs explicitly 02/09/23 00:46:00.811
    STEP: Ensuring the job is replaced with a new one 02/09/23 00:46:00.817
    STEP: Removing cronjob 02/09/23 00:47:00.824
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:47:00.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-594" for this suite. 02/09/23 00:47:00.841
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:47:00.851
Feb  9 00:47:00.851: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 00:47:00.851
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:47:00.87
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:47:00.874
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249
STEP: Creating a pod to test downward API volume plugin 02/09/23 00:47:00.879
Feb  9 00:47:00.894: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd" in namespace "projected-7908" to be "Succeeded or Failed"
Feb  9 00:47:00.902: INFO: Pod "downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd": Phase="Pending", Reason="", readiness=false. Elapsed: 8.234689ms
Feb  9 00:47:02.909: INFO: Pod "downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd": Phase="Running", Reason="", readiness=false. Elapsed: 2.014924685s
Feb  9 00:47:04.909: INFO: Pod "downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015254012s
STEP: Saw pod success 02/09/23 00:47:04.909
Feb  9 00:47:04.909: INFO: Pod "downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd" satisfied condition "Succeeded or Failed"
Feb  9 00:47:04.915: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd container client-container: <nil>
STEP: delete the pod 02/09/23 00:47:04.927
Feb  9 00:47:04.944: INFO: Waiting for pod downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd to disappear
Feb  9 00:47:04.949: INFO: Pod downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Feb  9 00:47:04.950: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7908" for this suite. 02/09/23 00:47:04.957
------------------------------
â€¢ [4.115 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:47:00.851
    Feb  9 00:47:00.851: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 00:47:00.851
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:47:00.87
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:47:00.874
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:249
    STEP: Creating a pod to test downward API volume plugin 02/09/23 00:47:00.879
    Feb  9 00:47:00.894: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd" in namespace "projected-7908" to be "Succeeded or Failed"
    Feb  9 00:47:00.902: INFO: Pod "downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd": Phase="Pending", Reason="", readiness=false. Elapsed: 8.234689ms
    Feb  9 00:47:02.909: INFO: Pod "downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd": Phase="Running", Reason="", readiness=false. Elapsed: 2.014924685s
    Feb  9 00:47:04.909: INFO: Pod "downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015254012s
    STEP: Saw pod success 02/09/23 00:47:04.909
    Feb  9 00:47:04.909: INFO: Pod "downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd" satisfied condition "Succeeded or Failed"
    Feb  9 00:47:04.915: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd container client-container: <nil>
    STEP: delete the pod 02/09/23 00:47:04.927
    Feb  9 00:47:04.944: INFO: Waiting for pod downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd to disappear
    Feb  9 00:47:04.949: INFO: Pod downwardapi-volume-2898f10a-8a59-4749-bc47-988dd6cc37dd no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:47:04.950: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7908" for this suite. 02/09/23 00:47:04.957
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:47:04.967
Feb  9 00:47:04.967: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename security-context 02/09/23 00:47:04.968
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:47:04.983
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:47:04.987
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 02/09/23 00:47:04.992
Feb  9 00:47:05.004: INFO: Waiting up to 5m0s for pod "security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f" in namespace "security-context-3489" to be "Succeeded or Failed"
Feb  9 00:47:05.009: INFO: Pod "security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f": Phase="Pending", Reason="", readiness=false. Elapsed: 5.031154ms
Feb  9 00:47:07.016: INFO: Pod "security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011344494s
Feb  9 00:47:09.016: INFO: Pod "security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012063325s
STEP: Saw pod success 02/09/23 00:47:09.016
Feb  9 00:47:09.017: INFO: Pod "security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f" satisfied condition "Succeeded or Failed"
Feb  9 00:47:09.023: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f container test-container: <nil>
STEP: delete the pod 02/09/23 00:47:09.034
Feb  9 00:47:09.048: INFO: Waiting for pod security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f to disappear
Feb  9 00:47:09.053: INFO: Pod security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Feb  9 00:47:09.053: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-3489" for this suite. 02/09/23 00:47:09.06
------------------------------
â€¢ [4.102 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:47:04.967
    Feb  9 00:47:04.967: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename security-context 02/09/23 00:47:04.968
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:47:04.983
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:47:04.987
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
      test/e2e/node/security_context.go:164
    STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 02/09/23 00:47:04.992
    Feb  9 00:47:05.004: INFO: Waiting up to 5m0s for pod "security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f" in namespace "security-context-3489" to be "Succeeded or Failed"
    Feb  9 00:47:05.009: INFO: Pod "security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f": Phase="Pending", Reason="", readiness=false. Elapsed: 5.031154ms
    Feb  9 00:47:07.016: INFO: Pod "security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011344494s
    Feb  9 00:47:09.016: INFO: Pod "security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012063325s
    STEP: Saw pod success 02/09/23 00:47:09.016
    Feb  9 00:47:09.017: INFO: Pod "security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f" satisfied condition "Succeeded or Failed"
    Feb  9 00:47:09.023: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f container test-container: <nil>
    STEP: delete the pod 02/09/23 00:47:09.034
    Feb  9 00:47:09.048: INFO: Waiting for pod security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f to disappear
    Feb  9 00:47:09.053: INFO: Pod security-context-ce3d14ec-40de-41b9-9fb1-1e9f6815ed4f no longer exists
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:47:09.053: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-3489" for this suite. 02/09/23 00:47:09.06
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/apps/statefulset.go:587
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:47:09.072
Feb  9 00:47:09.072: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename statefulset 02/09/23 00:47:09.073
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:47:09.088
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:47:09.092
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-7054 02/09/23 00:47:09.096
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/apps/statefulset.go:587
STEP: Initializing watcher for selector baz=blah,foo=bar 02/09/23 00:47:09.103
STEP: Creating stateful set ss in namespace statefulset-7054 02/09/23 00:47:09.108
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7054 02/09/23 00:47:09.115
Feb  9 00:47:09.120: INFO: Found 0 stateful pods, waiting for 1
Feb  9 00:47:19.127: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod 02/09/23 00:47:19.127
Feb  9 00:47:19.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Feb  9 00:47:19.298: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Feb  9 00:47:19.298: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Feb  9 00:47:19.298: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Feb  9 00:47:19.305: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Feb  9 00:47:29.315: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Feb  9 00:47:29.315: INFO: Waiting for statefulset status.replicas updated to 0
Feb  9 00:47:29.340: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.9999997s
Feb  9 00:47:30.347: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.992491801s
Feb  9 00:47:31.355: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.985442808s
Feb  9 00:47:32.361: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.978173312s
Feb  9 00:47:33.368: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.971853507s
Feb  9 00:47:34.374: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.965093099s
Feb  9 00:47:35.382: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.957834886s
Feb  9 00:47:36.389: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.951044777s
Feb  9 00:47:37.396: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.943746564s
Feb  9 00:47:38.403: INFO: Verifying statefulset ss doesn't scale past 1 for another 936.293465ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7054 02/09/23 00:47:39.403
Feb  9 00:47:39.411: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Feb  9 00:47:39.564: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Feb  9 00:47:39.564: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Feb  9 00:47:39.564: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Feb  9 00:47:39.570: INFO: Found 1 stateful pods, waiting for 3
Feb  9 00:47:49.577: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Feb  9 00:47:49.577: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Feb  9 00:47:49.577: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order 02/09/23 00:47:49.577
STEP: Scale down will halt with unhealthy stateful pod 02/09/23 00:47:49.578
Feb  9 00:47:49.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Feb  9 00:47:49.736: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Feb  9 00:47:49.736: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Feb  9 00:47:49.736: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Feb  9 00:47:49.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Feb  9 00:47:49.895: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Feb  9 00:47:49.895: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Feb  9 00:47:49.895: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Feb  9 00:47:49.895: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Feb  9 00:47:50.064: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Feb  9 00:47:50.064: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Feb  9 00:47:50.064: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Feb  9 00:47:50.064: INFO: Waiting for statefulset status.replicas updated to 0
Feb  9 00:47:50.070: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Feb  9 00:48:00.083: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Feb  9 00:48:00.083: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Feb  9 00:48:00.083: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Feb  9 00:48:00.103: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.9999997s
Feb  9 00:48:01.110: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.993058027s
Feb  9 00:48:02.116: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.986038054s
Feb  9 00:48:03.122: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.979701688s
Feb  9 00:48:04.129: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.97320682s
Feb  9 00:48:05.136: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.965901414s
Feb  9 00:48:06.144: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.95938422s
Feb  9 00:48:07.151: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.951829112s
Feb  9 00:48:08.159: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.944969014s
Feb  9 00:48:09.166: INFO: Verifying statefulset ss doesn't scale past 3 for another 936.552395ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7054 02/09/23 00:48:10.166
Feb  9 00:48:10.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Feb  9 00:48:10.343: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Feb  9 00:48:10.343: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Feb  9 00:48:10.343: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Feb  9 00:48:10.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Feb  9 00:48:10.506: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Feb  9 00:48:10.506: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Feb  9 00:48:10.506: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Feb  9 00:48:10.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Feb  9 00:48:10.648: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Feb  9 00:48:10.648: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Feb  9 00:48:10.648: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Feb  9 00:48:10.648: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order 02/09/23 00:48:20.671
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Feb  9 00:48:20.671: INFO: Deleting all statefulset in ns statefulset-7054
Feb  9 00:48:20.677: INFO: Scaling statefulset ss to 0
Feb  9 00:48:20.695: INFO: Waiting for statefulset status.replicas updated to 0
Feb  9 00:48:20.700: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Feb  9 00:48:20.722: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-7054" for this suite. 02/09/23 00:48:20.73
------------------------------
â€¢ [SLOW TEST] [71.672 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/apps/statefulset.go:587

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:47:09.072
    Feb  9 00:47:09.072: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename statefulset 02/09/23 00:47:09.073
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:47:09.088
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:47:09.092
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-7054 02/09/23 00:47:09.096
    [It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
      test/e2e/apps/statefulset.go:587
    STEP: Initializing watcher for selector baz=blah,foo=bar 02/09/23 00:47:09.103
    STEP: Creating stateful set ss in namespace statefulset-7054 02/09/23 00:47:09.108
    STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7054 02/09/23 00:47:09.115
    Feb  9 00:47:09.120: INFO: Found 0 stateful pods, waiting for 1
    Feb  9 00:47:19.127: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod 02/09/23 00:47:19.127
    Feb  9 00:47:19.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Feb  9 00:47:19.298: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Feb  9 00:47:19.298: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Feb  9 00:47:19.298: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Feb  9 00:47:19.305: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
    Feb  9 00:47:29.315: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Feb  9 00:47:29.315: INFO: Waiting for statefulset status.replicas updated to 0
    Feb  9 00:47:29.340: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.9999997s
    Feb  9 00:47:30.347: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.992491801s
    Feb  9 00:47:31.355: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.985442808s
    Feb  9 00:47:32.361: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.978173312s
    Feb  9 00:47:33.368: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.971853507s
    Feb  9 00:47:34.374: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.965093099s
    Feb  9 00:47:35.382: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.957834886s
    Feb  9 00:47:36.389: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.951044777s
    Feb  9 00:47:37.396: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.943746564s
    Feb  9 00:47:38.403: INFO: Verifying statefulset ss doesn't scale past 1 for another 936.293465ms
    STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7054 02/09/23 00:47:39.403
    Feb  9 00:47:39.411: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Feb  9 00:47:39.564: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Feb  9 00:47:39.564: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Feb  9 00:47:39.564: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Feb  9 00:47:39.570: INFO: Found 1 stateful pods, waiting for 3
    Feb  9 00:47:49.577: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Feb  9 00:47:49.577: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Feb  9 00:47:49.577: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Verifying that stateful set ss was scaled up in order 02/09/23 00:47:49.577
    STEP: Scale down will halt with unhealthy stateful pod 02/09/23 00:47:49.578
    Feb  9 00:47:49.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Feb  9 00:47:49.736: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Feb  9 00:47:49.736: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Feb  9 00:47:49.736: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Feb  9 00:47:49.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Feb  9 00:47:49.895: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Feb  9 00:47:49.895: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Feb  9 00:47:49.895: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Feb  9 00:47:49.895: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Feb  9 00:47:50.064: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Feb  9 00:47:50.064: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Feb  9 00:47:50.064: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Feb  9 00:47:50.064: INFO: Waiting for statefulset status.replicas updated to 0
    Feb  9 00:47:50.070: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
    Feb  9 00:48:00.083: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Feb  9 00:48:00.083: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
    Feb  9 00:48:00.083: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
    Feb  9 00:48:00.103: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.9999997s
    Feb  9 00:48:01.110: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.993058027s
    Feb  9 00:48:02.116: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.986038054s
    Feb  9 00:48:03.122: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.979701688s
    Feb  9 00:48:04.129: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.97320682s
    Feb  9 00:48:05.136: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.965901414s
    Feb  9 00:48:06.144: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.95938422s
    Feb  9 00:48:07.151: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.951829112s
    Feb  9 00:48:08.159: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.944969014s
    Feb  9 00:48:09.166: INFO: Verifying statefulset ss doesn't scale past 3 for another 936.552395ms
    STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7054 02/09/23 00:48:10.166
    Feb  9 00:48:10.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Feb  9 00:48:10.343: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Feb  9 00:48:10.343: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Feb  9 00:48:10.343: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Feb  9 00:48:10.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Feb  9 00:48:10.506: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Feb  9 00:48:10.506: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Feb  9 00:48:10.506: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Feb  9 00:48:10.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-7054 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Feb  9 00:48:10.648: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Feb  9 00:48:10.648: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Feb  9 00:48:10.648: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Feb  9 00:48:10.648: INFO: Scaling statefulset ss to 0
    STEP: Verifying that stateful set ss was scaled down in reverse order 02/09/23 00:48:20.671
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Feb  9 00:48:20.671: INFO: Deleting all statefulset in ns statefulset-7054
    Feb  9 00:48:20.677: INFO: Scaling statefulset ss to 0
    Feb  9 00:48:20.695: INFO: Waiting for statefulset status.replicas updated to 0
    Feb  9 00:48:20.700: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:48:20.722: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-7054" for this suite. 02/09/23 00:48:20.73
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:48:20.747
Feb  9 00:48:20.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename secrets 02/09/23 00:48:20.748
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:20.764
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:20.767
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79
STEP: Creating secret with name secret-test-map-b68045c6-1b8d-48f9-9796-516c257e8089 02/09/23 00:48:20.772
STEP: Creating a pod to test consume secrets 02/09/23 00:48:20.778
Feb  9 00:48:20.791: INFO: Waiting up to 5m0s for pod "pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267" in namespace "secrets-6549" to be "Succeeded or Failed"
Feb  9 00:48:20.802: INFO: Pod "pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267": Phase="Pending", Reason="", readiness=false. Elapsed: 10.343527ms
Feb  9 00:48:22.809: INFO: Pod "pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017451729s
Feb  9 00:48:24.809: INFO: Pod "pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017682246s
STEP: Saw pod success 02/09/23 00:48:24.809
Feb  9 00:48:24.809: INFO: Pod "pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267" satisfied condition "Succeeded or Failed"
Feb  9 00:48:24.814: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267 container secret-volume-test: <nil>
STEP: delete the pod 02/09/23 00:48:24.825
Feb  9 00:48:24.842: INFO: Waiting for pod pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267 to disappear
Feb  9 00:48:24.847: INFO: Pod pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Feb  9 00:48:24.847: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-6549" for this suite. 02/09/23 00:48:24.855
------------------------------
â€¢ [4.120 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:48:20.747
    Feb  9 00:48:20.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename secrets 02/09/23 00:48:20.748
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:20.764
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:20.767
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:79
    STEP: Creating secret with name secret-test-map-b68045c6-1b8d-48f9-9796-516c257e8089 02/09/23 00:48:20.772
    STEP: Creating a pod to test consume secrets 02/09/23 00:48:20.778
    Feb  9 00:48:20.791: INFO: Waiting up to 5m0s for pod "pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267" in namespace "secrets-6549" to be "Succeeded or Failed"
    Feb  9 00:48:20.802: INFO: Pod "pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267": Phase="Pending", Reason="", readiness=false. Elapsed: 10.343527ms
    Feb  9 00:48:22.809: INFO: Pod "pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017451729s
    Feb  9 00:48:24.809: INFO: Pod "pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017682246s
    STEP: Saw pod success 02/09/23 00:48:24.809
    Feb  9 00:48:24.809: INFO: Pod "pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267" satisfied condition "Succeeded or Failed"
    Feb  9 00:48:24.814: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267 container secret-volume-test: <nil>
    STEP: delete the pod 02/09/23 00:48:24.825
    Feb  9 00:48:24.842: INFO: Waiting for pod pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267 to disappear
    Feb  9 00:48:24.847: INFO: Pod pod-secrets-2f21d664-ee99-4e35-9d61-31ab5e5ca267 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:48:24.847: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-6549" for this suite. 02/09/23 00:48:24.855
  << End Captured GinkgoWriter Output
------------------------------
[sig-network] EndpointSlice
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:48:24.868
Feb  9 00:48:24.868: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename endpointslice 02/09/23 00:48:24.869
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:24.885
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:24.889
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Feb  9 00:48:24.964: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-1843" for this suite. 02/09/23 00:48:24.972
------------------------------
â€¢ [0.114 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:48:24.868
    Feb  9 00:48:24.868: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename endpointslice 02/09/23 00:48:24.869
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:24.885
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:24.889
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
      test/e2e/network/endpointslice.go:102
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:48:24.964: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-1843" for this suite. 02/09/23 00:48:24.972
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:48:24.984
Feb  9 00:48:24.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 00:48:24.985
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:25.004
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:25.01
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 00:48:25.03
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 00:48:25.292
STEP: Deploying the webhook pod 02/09/23 00:48:25.299
STEP: Wait for the deployment to be ready 02/09/23 00:48:25.312
Feb  9 00:48:25.324: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 00:48:27.341
STEP: Verifying the service has paired with the endpoint 02/09/23 00:48:27.359
Feb  9 00:48:28.359: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291
Feb  9 00:48:28.366: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2024-crds.webhook.example.com via the AdmissionRegistration API 02/09/23 00:48:28.878
STEP: Creating a custom resource that should be mutated by the webhook 02/09/23 00:48:28.906
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:48:31.484: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-4486" for this suite. 02/09/23 00:48:31.551
STEP: Destroying namespace "webhook-4486-markers" for this suite. 02/09/23 00:48:31.559
------------------------------
â€¢ [SLOW TEST] [6.586 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:48:24.984
    Feb  9 00:48:24.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 00:48:24.985
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:25.004
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:25.01
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 00:48:25.03
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 00:48:25.292
    STEP: Deploying the webhook pod 02/09/23 00:48:25.299
    STEP: Wait for the deployment to be ready 02/09/23 00:48:25.312
    Feb  9 00:48:25.324: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 00:48:27.341
    STEP: Verifying the service has paired with the endpoint 02/09/23 00:48:27.359
    Feb  9 00:48:28.359: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource [Conformance]
      test/e2e/apimachinery/webhook.go:291
    Feb  9 00:48:28.366: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2024-crds.webhook.example.com via the AdmissionRegistration API 02/09/23 00:48:28.878
    STEP: Creating a custom resource that should be mutated by the webhook 02/09/23 00:48:28.906
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:48:31.484: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-4486" for this suite. 02/09/23 00:48:31.551
    STEP: Destroying namespace "webhook-4486-markers" for this suite. 02/09/23 00:48:31.559
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:48:31.574
Feb  9 00:48:31.574: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 00:48:31.574
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:31.589
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:31.594
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 00:48:31.614
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 00:48:31.836
STEP: Deploying the webhook pod 02/09/23 00:48:31.843
STEP: Wait for the deployment to be ready 02/09/23 00:48:31.857
Feb  9 00:48:31.871: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 00:48:33.888
STEP: Verifying the service has paired with the endpoint 02/09/23 00:48:33.902
Feb  9 00:48:34.903: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413
STEP: Creating a validating webhook configuration 02/09/23 00:48:34.91
STEP: Creating a configMap that does not comply to the validation webhook rules 02/09/23 00:48:34.94
STEP: Updating a validating webhook configuration's rules to not include the create operation 02/09/23 00:48:34.952
STEP: Creating a configMap that does not comply to the validation webhook rules 02/09/23 00:48:34.966
STEP: Patching a validating webhook configuration's rules to include the create operation 02/09/23 00:48:34.981
STEP: Creating a configMap that does not comply to the validation webhook rules 02/09/23 00:48:34.989
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:48:35.004: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-5273" for this suite. 02/09/23 00:48:35.063
STEP: Destroying namespace "webhook-5273-markers" for this suite. 02/09/23 00:48:35.078
------------------------------
â€¢ [3.518 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:48:31.574
    Feb  9 00:48:31.574: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 00:48:31.574
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:31.589
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:31.594
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 00:48:31.614
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 00:48:31.836
    STEP: Deploying the webhook pod 02/09/23 00:48:31.843
    STEP: Wait for the deployment to be ready 02/09/23 00:48:31.857
    Feb  9 00:48:31.871: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 00:48:33.888
    STEP: Verifying the service has paired with the endpoint 02/09/23 00:48:33.902
    Feb  9 00:48:34.903: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] patching/updating a validating webhook should work [Conformance]
      test/e2e/apimachinery/webhook.go:413
    STEP: Creating a validating webhook configuration 02/09/23 00:48:34.91
    STEP: Creating a configMap that does not comply to the validation webhook rules 02/09/23 00:48:34.94
    STEP: Updating a validating webhook configuration's rules to not include the create operation 02/09/23 00:48:34.952
    STEP: Creating a configMap that does not comply to the validation webhook rules 02/09/23 00:48:34.966
    STEP: Patching a validating webhook configuration's rules to include the create operation 02/09/23 00:48:34.981
    STEP: Creating a configMap that does not comply to the validation webhook rules 02/09/23 00:48:34.989
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:48:35.004: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-5273" for this suite. 02/09/23 00:48:35.063
    STEP: Destroying namespace "webhook-5273-markers" for this suite. 02/09/23 00:48:35.078
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:48:35.096
Feb  9 00:48:35.096: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename var-expansion 02/09/23 00:48:35.097
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:35.113
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:35.117
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92
STEP: Creating a pod to test substitution in container's args 02/09/23 00:48:35.121
Feb  9 00:48:35.134: INFO: Waiting up to 5m0s for pod "var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa" in namespace "var-expansion-5176" to be "Succeeded or Failed"
Feb  9 00:48:35.139: INFO: Pod "var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa": Phase="Pending", Reason="", readiness=false. Elapsed: 5.460258ms
Feb  9 00:48:37.146: INFO: Pod "var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012557471s
Feb  9 00:48:39.147: INFO: Pod "var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013488008s
STEP: Saw pod success 02/09/23 00:48:39.147
Feb  9 00:48:39.147: INFO: Pod "var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa" satisfied condition "Succeeded or Failed"
Feb  9 00:48:39.153: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa container dapi-container: <nil>
STEP: delete the pod 02/09/23 00:48:39.165
Feb  9 00:48:39.183: INFO: Waiting for pod var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa to disappear
Feb  9 00:48:39.189: INFO: Pod var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Feb  9 00:48:39.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-5176" for this suite. 02/09/23 00:48:39.198
------------------------------
â€¢ [4.111 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:48:35.096
    Feb  9 00:48:35.096: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename var-expansion 02/09/23 00:48:35.097
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:35.113
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:35.117
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a container's args [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:92
    STEP: Creating a pod to test substitution in container's args 02/09/23 00:48:35.121
    Feb  9 00:48:35.134: INFO: Waiting up to 5m0s for pod "var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa" in namespace "var-expansion-5176" to be "Succeeded or Failed"
    Feb  9 00:48:35.139: INFO: Pod "var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa": Phase="Pending", Reason="", readiness=false. Elapsed: 5.460258ms
    Feb  9 00:48:37.146: INFO: Pod "var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012557471s
    Feb  9 00:48:39.147: INFO: Pod "var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013488008s
    STEP: Saw pod success 02/09/23 00:48:39.147
    Feb  9 00:48:39.147: INFO: Pod "var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa" satisfied condition "Succeeded or Failed"
    Feb  9 00:48:39.153: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa container dapi-container: <nil>
    STEP: delete the pod 02/09/23 00:48:39.165
    Feb  9 00:48:39.183: INFO: Waiting for pod var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa to disappear
    Feb  9 00:48:39.189: INFO: Pod var-expansion-a30f83d9-1f32-40f0-af09-d5567a9277fa no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:48:39.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-5176" for this suite. 02/09/23 00:48:39.198
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:48:39.209
Feb  9 00:48:39.209: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename tables 02/09/23 00:48:39.21
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:39.225
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:39.228
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/node/init/init.go:32
Feb  9 00:48:39.236: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  tear down framework | framework.go:193
STEP: Destroying namespace "tables-6964" for this suite. 02/09/23 00:48:39.243
------------------------------
â€¢ [0.044 seconds]
[sig-api-machinery] Servers with support for Table transformation
test/e2e/apimachinery/framework.go:23
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:48:39.209
    Feb  9 00:48:39.209: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename tables 02/09/23 00:48:39.21
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:39.225
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:39.228
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/apimachinery/table_conversion.go:49
    [It] should return a 406 for a backend which does not implement metadata [Conformance]
      test/e2e/apimachinery/table_conversion.go:154
    [AfterEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:48:39.236: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      tear down framework | framework.go:193
    STEP: Destroying namespace "tables-6964" for this suite. 02/09/23 00:48:39.243
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:48:39.255
Feb  9 00:48:39.255: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 00:48:39.256
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:39.272
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:39.276
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 00:48:39.298
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 00:48:39.763
STEP: Deploying the webhook pod 02/09/23 00:48:39.776
STEP: Wait for the deployment to be ready 02/09/23 00:48:39.789
Feb  9 00:48:39.803: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service 02/09/23 00:48:41.82
STEP: Verifying the service has paired with the endpoint 02/09/23 00:48:41.833
Feb  9 00:48:42.833: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508
STEP: Creating a mutating webhook configuration 02/09/23 00:48:42.839
STEP: Updating a mutating webhook configuration's rules to not include the create operation 02/09/23 00:48:42.865
STEP: Creating a configMap that should not be mutated 02/09/23 00:48:42.872
STEP: Patching a mutating webhook configuration's rules to include the create operation 02/09/23 00:48:42.887
STEP: Creating a configMap that should be mutated 02/09/23 00:48:42.902
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:48:42.936: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-5132" for this suite. 02/09/23 00:48:43.004
STEP: Destroying namespace "webhook-5132-markers" for this suite. 02/09/23 00:48:43.018
------------------------------
â€¢ [3.771 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:48:39.255
    Feb  9 00:48:39.255: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 00:48:39.256
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:39.272
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:39.276
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 00:48:39.298
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 00:48:39.763
    STEP: Deploying the webhook pod 02/09/23 00:48:39.776
    STEP: Wait for the deployment to be ready 02/09/23 00:48:39.789
    Feb  9 00:48:39.803: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
    STEP: Deploying the webhook service 02/09/23 00:48:41.82
    STEP: Verifying the service has paired with the endpoint 02/09/23 00:48:41.833
    Feb  9 00:48:42.833: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] patching/updating a mutating webhook should work [Conformance]
      test/e2e/apimachinery/webhook.go:508
    STEP: Creating a mutating webhook configuration 02/09/23 00:48:42.839
    STEP: Updating a mutating webhook configuration's rules to not include the create operation 02/09/23 00:48:42.865
    STEP: Creating a configMap that should not be mutated 02/09/23 00:48:42.872
    STEP: Patching a mutating webhook configuration's rules to include the create operation 02/09/23 00:48:42.887
    STEP: Creating a configMap that should be mutated 02/09/23 00:48:42.902
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:48:42.936: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-5132" for this suite. 02/09/23 00:48:43.004
    STEP: Destroying namespace "webhook-5132-markers" for this suite. 02/09/23 00:48:43.018
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:48:43.029
Feb  9 00:48:43.029: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 00:48:43.029
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:43.044
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:43.048
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 00:48:43.069
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 00:48:43.709
STEP: Deploying the webhook pod 02/09/23 00:48:43.716
STEP: Wait for the deployment to be ready 02/09/23 00:48:43.729
Feb  9 00:48:43.742: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 00:48:45.759
STEP: Verifying the service has paired with the endpoint 02/09/23 00:48:45.772
Feb  9 00:48:46.773: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197
STEP: Registering the webhook via the AdmissionRegistration API 02/09/23 00:48:46.779
STEP: create a pod that should be denied by the webhook 02/09/23 00:48:46.805
STEP: create a pod that causes the webhook to hang 02/09/23 00:48:46.821
STEP: create a configmap that should be denied by the webhook 02/09/23 00:48:56.832
STEP: create a configmap that should be admitted by the webhook 02/09/23 00:48:56.912
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook 02/09/23 00:48:56.927
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook 02/09/23 00:48:56.94
STEP: create a namespace that bypass the webhook 02/09/23 00:48:56.948
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace 02/09/23 00:48:56.959
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:48:56.995: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-8349" for this suite. 02/09/23 00:48:57.05
STEP: Destroying namespace "webhook-8349-markers" for this suite. 02/09/23 00:48:57.064
------------------------------
â€¢ [SLOW TEST] [14.050 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:48:43.029
    Feb  9 00:48:43.029: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 00:48:43.029
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:43.044
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:43.048
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 00:48:43.069
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 00:48:43.709
    STEP: Deploying the webhook pod 02/09/23 00:48:43.716
    STEP: Wait for the deployment to be ready 02/09/23 00:48:43.729
    Feb  9 00:48:43.742: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 00:48:45.759
    STEP: Verifying the service has paired with the endpoint 02/09/23 00:48:45.772
    Feb  9 00:48:46.773: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny pod and configmap creation [Conformance]
      test/e2e/apimachinery/webhook.go:197
    STEP: Registering the webhook via the AdmissionRegistration API 02/09/23 00:48:46.779
    STEP: create a pod that should be denied by the webhook 02/09/23 00:48:46.805
    STEP: create a pod that causes the webhook to hang 02/09/23 00:48:46.821
    STEP: create a configmap that should be denied by the webhook 02/09/23 00:48:56.832
    STEP: create a configmap that should be admitted by the webhook 02/09/23 00:48:56.912
    STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook 02/09/23 00:48:56.927
    STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook 02/09/23 00:48:56.94
    STEP: create a namespace that bypass the webhook 02/09/23 00:48:56.948
    STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace 02/09/23 00:48:56.959
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:48:56.995: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-8349" for this suite. 02/09/23 00:48:57.05
    STEP: Destroying namespace "webhook-8349-markers" for this suite. 02/09/23 00:48:57.064
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:48:57.079
Feb  9 00:48:57.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 00:48:57.08
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:57.095
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:57.099
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74
STEP: Creating configMap with name projected-configmap-test-volume-4ce34da6-792f-40ee-baf5-36429782879e 02/09/23 00:48:57.103
STEP: Creating a pod to test consume configMaps 02/09/23 00:48:57.11
Feb  9 00:48:57.121: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563" in namespace "projected-744" to be "Succeeded or Failed"
Feb  9 00:48:57.129: INFO: Pod "pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563": Phase="Pending", Reason="", readiness=false. Elapsed: 7.132061ms
Feb  9 00:48:59.136: INFO: Pod "pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563": Phase="Running", Reason="", readiness=false. Elapsed: 2.014201786s
Feb  9 00:49:01.137: INFO: Pod "pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015266351s
STEP: Saw pod success 02/09/23 00:49:01.137
Feb  9 00:49:01.137: INFO: Pod "pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563" satisfied condition "Succeeded or Failed"
Feb  9 00:49:01.142: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563 container agnhost-container: <nil>
STEP: delete the pod 02/09/23 00:49:01.155
Feb  9 00:49:01.170: INFO: Waiting for pod pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563 to disappear
Feb  9 00:49:01.175: INFO: Pod pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Feb  9 00:49:01.175: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-744" for this suite. 02/09/23 00:49:01.183
------------------------------
â€¢ [4.113 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:48:57.079
    Feb  9 00:48:57.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 00:48:57.08
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:48:57.095
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:48:57.099
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:74
    STEP: Creating configMap with name projected-configmap-test-volume-4ce34da6-792f-40ee-baf5-36429782879e 02/09/23 00:48:57.103
    STEP: Creating a pod to test consume configMaps 02/09/23 00:48:57.11
    Feb  9 00:48:57.121: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563" in namespace "projected-744" to be "Succeeded or Failed"
    Feb  9 00:48:57.129: INFO: Pod "pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563": Phase="Pending", Reason="", readiness=false. Elapsed: 7.132061ms
    Feb  9 00:48:59.136: INFO: Pod "pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563": Phase="Running", Reason="", readiness=false. Elapsed: 2.014201786s
    Feb  9 00:49:01.137: INFO: Pod "pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015266351s
    STEP: Saw pod success 02/09/23 00:49:01.137
    Feb  9 00:49:01.137: INFO: Pod "pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563" satisfied condition "Succeeded or Failed"
    Feb  9 00:49:01.142: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563 container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 00:49:01.155
    Feb  9 00:49:01.170: INFO: Waiting for pod pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563 to disappear
    Feb  9 00:49:01.175: INFO: Pod pod-projected-configmaps-4b020432-b9ba-498d-8f9b-5a123a762563 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:49:01.175: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-744" for this suite. 02/09/23 00:49:01.183
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:49:01.193
Feb  9 00:49:01.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 00:49:01.194
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:01.212
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:01.217
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 00:49:01.238
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 00:49:01.563
STEP: Deploying the webhook pod 02/09/23 00:49:01.571
STEP: Wait for the deployment to be ready 02/09/23 00:49:01.586
Feb  9 00:49:01.597: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 00:49:03.628
STEP: Verifying the service has paired with the endpoint 02/09/23 00:49:03.642
Feb  9 00:49:04.643: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381
STEP: Setting timeout (1s) shorter than webhook latency (5s) 02/09/23 00:49:04.649
STEP: Registering slow webhook via the AdmissionRegistration API 02/09/23 00:49:04.649
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) 02/09/23 00:49:04.672
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore 02/09/23 00:49:05.686
STEP: Registering slow webhook via the AdmissionRegistration API 02/09/23 00:49:05.687
STEP: Having no error when timeout is longer than webhook latency 02/09/23 00:49:06.724
STEP: Registering slow webhook via the AdmissionRegistration API 02/09/23 00:49:06.725
STEP: Having no error when timeout is empty (defaulted to 10s in v1) 02/09/23 00:49:11.78
STEP: Registering slow webhook via the AdmissionRegistration API 02/09/23 00:49:11.78
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:49:16.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-15" for this suite. 02/09/23 00:49:16.885
STEP: Destroying namespace "webhook-15-markers" for this suite. 02/09/23 00:49:16.912
------------------------------
â€¢ [SLOW TEST] [15.739 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:49:01.193
    Feb  9 00:49:01.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 00:49:01.194
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:01.212
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:01.217
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 00:49:01.238
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 00:49:01.563
    STEP: Deploying the webhook pod 02/09/23 00:49:01.571
    STEP: Wait for the deployment to be ready 02/09/23 00:49:01.586
    Feb  9 00:49:01.597: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 00:49:03.628
    STEP: Verifying the service has paired with the endpoint 02/09/23 00:49:03.642
    Feb  9 00:49:04.643: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should honor timeout [Conformance]
      test/e2e/apimachinery/webhook.go:381
    STEP: Setting timeout (1s) shorter than webhook latency (5s) 02/09/23 00:49:04.649
    STEP: Registering slow webhook via the AdmissionRegistration API 02/09/23 00:49:04.649
    STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) 02/09/23 00:49:04.672
    STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore 02/09/23 00:49:05.686
    STEP: Registering slow webhook via the AdmissionRegistration API 02/09/23 00:49:05.687
    STEP: Having no error when timeout is longer than webhook latency 02/09/23 00:49:06.724
    STEP: Registering slow webhook via the AdmissionRegistration API 02/09/23 00:49:06.725
    STEP: Having no error when timeout is empty (defaulted to 10s in v1) 02/09/23 00:49:11.78
    STEP: Registering slow webhook via the AdmissionRegistration API 02/09/23 00:49:11.78
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:49:16.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-15" for this suite. 02/09/23 00:49:16.885
    STEP: Destroying namespace "webhook-15-markers" for this suite. 02/09/23 00:49:16.912
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:49:16.942
Feb  9 00:49:16.942: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename svcaccounts 02/09/23 00:49:16.943
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:16.97
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:16.975
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742
Feb  9 00:49:16.988: INFO: Got root ca configmap in namespace "svcaccounts-2444"
Feb  9 00:49:17.000: INFO: Deleted root ca configmap in namespace "svcaccounts-2444"
STEP: waiting for a new root ca configmap created 02/09/23 00:49:17.5
Feb  9 00:49:17.507: INFO: Recreated root ca configmap in namespace "svcaccounts-2444"
Feb  9 00:49:17.513: INFO: Updated root ca configmap in namespace "svcaccounts-2444"
STEP: waiting for the root ca configmap reconciled 02/09/23 00:49:18.014
Feb  9 00:49:18.020: INFO: Reconciled root ca configmap in namespace "svcaccounts-2444"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Feb  9 00:49:18.020: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-2444" for this suite. 02/09/23 00:49:18.028
------------------------------
â€¢ [1.105 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:49:16.942
    Feb  9 00:49:16.942: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename svcaccounts 02/09/23 00:49:16.943
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:16.97
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:16.975
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
      test/e2e/auth/service_accounts.go:742
    Feb  9 00:49:16.988: INFO: Got root ca configmap in namespace "svcaccounts-2444"
    Feb  9 00:49:17.000: INFO: Deleted root ca configmap in namespace "svcaccounts-2444"
    STEP: waiting for a new root ca configmap created 02/09/23 00:49:17.5
    Feb  9 00:49:17.507: INFO: Recreated root ca configmap in namespace "svcaccounts-2444"
    Feb  9 00:49:17.513: INFO: Updated root ca configmap in namespace "svcaccounts-2444"
    STEP: waiting for the root ca configmap reconciled 02/09/23 00:49:18.014
    Feb  9 00:49:18.020: INFO: Reconciled root ca configmap in namespace "svcaccounts-2444"
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:49:18.020: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-2444" for this suite. 02/09/23 00:49:18.028
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:49:18.039
Feb  9 00:49:18.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 00:49:18.04
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:18.056
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:18.06
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97
STEP: Creating a pod to test emptydir 0644 on tmpfs 02/09/23 00:49:18.064
Feb  9 00:49:18.076: INFO: Waiting up to 5m0s for pod "pod-4776cb6f-a358-405c-9f66-e07d20389e09" in namespace "emptydir-4883" to be "Succeeded or Failed"
Feb  9 00:49:18.082: INFO: Pod "pod-4776cb6f-a358-405c-9f66-e07d20389e09": Phase="Pending", Reason="", readiness=false. Elapsed: 6.123524ms
Feb  9 00:49:20.089: INFO: Pod "pod-4776cb6f-a358-405c-9f66-e07d20389e09": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01279288s
Feb  9 00:49:22.089: INFO: Pod "pod-4776cb6f-a358-405c-9f66-e07d20389e09": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012466782s
STEP: Saw pod success 02/09/23 00:49:22.089
Feb  9 00:49:22.089: INFO: Pod "pod-4776cb6f-a358-405c-9f66-e07d20389e09" satisfied condition "Succeeded or Failed"
Feb  9 00:49:22.095: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-4776cb6f-a358-405c-9f66-e07d20389e09 container test-container: <nil>
STEP: delete the pod 02/09/23 00:49:22.108
Feb  9 00:49:22.125: INFO: Waiting for pod pod-4776cb6f-a358-405c-9f66-e07d20389e09 to disappear
Feb  9 00:49:22.133: INFO: Pod pod-4776cb6f-a358-405c-9f66-e07d20389e09 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 00:49:22.133: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-4883" for this suite. 02/09/23 00:49:22.141
------------------------------
â€¢ [4.113 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:49:18.039
    Feb  9 00:49:18.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 00:49:18.04
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:18.056
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:18.06
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:97
    STEP: Creating a pod to test emptydir 0644 on tmpfs 02/09/23 00:49:18.064
    Feb  9 00:49:18.076: INFO: Waiting up to 5m0s for pod "pod-4776cb6f-a358-405c-9f66-e07d20389e09" in namespace "emptydir-4883" to be "Succeeded or Failed"
    Feb  9 00:49:18.082: INFO: Pod "pod-4776cb6f-a358-405c-9f66-e07d20389e09": Phase="Pending", Reason="", readiness=false. Elapsed: 6.123524ms
    Feb  9 00:49:20.089: INFO: Pod "pod-4776cb6f-a358-405c-9f66-e07d20389e09": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01279288s
    Feb  9 00:49:22.089: INFO: Pod "pod-4776cb6f-a358-405c-9f66-e07d20389e09": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012466782s
    STEP: Saw pod success 02/09/23 00:49:22.089
    Feb  9 00:49:22.089: INFO: Pod "pod-4776cb6f-a358-405c-9f66-e07d20389e09" satisfied condition "Succeeded or Failed"
    Feb  9 00:49:22.095: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-4776cb6f-a358-405c-9f66-e07d20389e09 container test-container: <nil>
    STEP: delete the pod 02/09/23 00:49:22.108
    Feb  9 00:49:22.125: INFO: Waiting for pod pod-4776cb6f-a358-405c-9f66-e07d20389e09 to disappear
    Feb  9 00:49:22.133: INFO: Pod pod-4776cb6f-a358-405c-9f66-e07d20389e09 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:49:22.133: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-4883" for this suite. 02/09/23 00:49:22.141
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:49:22.155
Feb  9 00:49:22.155: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 00:49:22.156
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:22.175
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:22.179
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193
STEP: Creating a pod to test downward API volume plugin 02/09/23 00:49:22.186
Feb  9 00:49:22.200: INFO: Waiting up to 5m0s for pod "downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb" in namespace "downward-api-3528" to be "Succeeded or Failed"
Feb  9 00:49:22.207: INFO: Pod "downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb": Phase="Pending", Reason="", readiness=false. Elapsed: 7.600779ms
Feb  9 00:49:24.215: INFO: Pod "downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb": Phase="Running", Reason="", readiness=false. Elapsed: 2.014887441s
Feb  9 00:49:26.215: INFO: Pod "downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014910819s
STEP: Saw pod success 02/09/23 00:49:26.215
Feb  9 00:49:26.215: INFO: Pod "downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb" satisfied condition "Succeeded or Failed"
Feb  9 00:49:26.221: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb container client-container: <nil>
STEP: delete the pod 02/09/23 00:49:26.232
Feb  9 00:49:26.250: INFO: Waiting for pod downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb to disappear
Feb  9 00:49:26.255: INFO: Pod downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Feb  9 00:49:26.255: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-3528" for this suite. 02/09/23 00:49:26.263
------------------------------
â€¢ [4.119 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:49:22.155
    Feb  9 00:49:22.155: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 00:49:22.156
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:22.175
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:22.179
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's cpu limit [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:193
    STEP: Creating a pod to test downward API volume plugin 02/09/23 00:49:22.186
    Feb  9 00:49:22.200: INFO: Waiting up to 5m0s for pod "downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb" in namespace "downward-api-3528" to be "Succeeded or Failed"
    Feb  9 00:49:22.207: INFO: Pod "downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb": Phase="Pending", Reason="", readiness=false. Elapsed: 7.600779ms
    Feb  9 00:49:24.215: INFO: Pod "downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb": Phase="Running", Reason="", readiness=false. Elapsed: 2.014887441s
    Feb  9 00:49:26.215: INFO: Pod "downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014910819s
    STEP: Saw pod success 02/09/23 00:49:26.215
    Feb  9 00:49:26.215: INFO: Pod "downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb" satisfied condition "Succeeded or Failed"
    Feb  9 00:49:26.221: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb container client-container: <nil>
    STEP: delete the pod 02/09/23 00:49:26.232
    Feb  9 00:49:26.250: INFO: Waiting for pod downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb to disappear
    Feb  9 00:49:26.255: INFO: Pod downwardapi-volume-bcf3e31f-4d34-4dd3-a6d5-2ca34a2f66eb no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:49:26.255: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-3528" for this suite. 02/09/23 00:49:26.263
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:167
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:49:26.276
Feb  9 00:49:26.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-lifecycle-hook 02/09/23 00:49:26.277
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:26.292
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:26.295
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 02/09/23 00:49:26.306
Feb  9 00:49:26.317: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-2707" to be "running and ready"
Feb  9 00:49:26.324: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 6.68835ms
Feb  9 00:49:26.324: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:49:28.331: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.013864126s
Feb  9 00:49:28.331: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Feb  9 00:49:28.331: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:167
STEP: create the pod with lifecycle hook 02/09/23 00:49:28.336
Feb  9 00:49:28.345: INFO: Waiting up to 5m0s for pod "pod-with-poststart-http-hook" in namespace "container-lifecycle-hook-2707" to be "running and ready"
Feb  9 00:49:28.351: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 5.742543ms
Feb  9 00:49:28.351: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:49:30.359: INFO: Pod "pod-with-poststart-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.013781726s
Feb  9 00:49:30.359: INFO: The phase of Pod pod-with-poststart-http-hook is Running (Ready = true)
Feb  9 00:49:30.359: INFO: Pod "pod-with-poststart-http-hook" satisfied condition "running and ready"
STEP: check poststart hook 02/09/23 00:49:30.364
STEP: delete the pod with lifecycle hook 02/09/23 00:49:30.377
Feb  9 00:49:30.388: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Feb  9 00:49:30.393: INFO: Pod pod-with-poststart-http-hook still exists
Feb  9 00:49:32.394: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Feb  9 00:49:32.401: INFO: Pod pod-with-poststart-http-hook still exists
Feb  9 00:49:34.394: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Feb  9 00:49:34.401: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Feb  9 00:49:34.401: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-2707" for this suite. 02/09/23 00:49:34.409
------------------------------
â€¢ [SLOW TEST] [8.143 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:167

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:49:26.276
    Feb  9 00:49:26.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-lifecycle-hook 02/09/23 00:49:26.277
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:26.292
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:26.295
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 02/09/23 00:49:26.306
    Feb  9 00:49:26.317: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-2707" to be "running and ready"
    Feb  9 00:49:26.324: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 6.68835ms
    Feb  9 00:49:26.324: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:49:28.331: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.013864126s
    Feb  9 00:49:28.331: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Feb  9 00:49:28.331: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute poststart http hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:167
    STEP: create the pod with lifecycle hook 02/09/23 00:49:28.336
    Feb  9 00:49:28.345: INFO: Waiting up to 5m0s for pod "pod-with-poststart-http-hook" in namespace "container-lifecycle-hook-2707" to be "running and ready"
    Feb  9 00:49:28.351: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 5.742543ms
    Feb  9 00:49:28.351: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:49:30.359: INFO: Pod "pod-with-poststart-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.013781726s
    Feb  9 00:49:30.359: INFO: The phase of Pod pod-with-poststart-http-hook is Running (Ready = true)
    Feb  9 00:49:30.359: INFO: Pod "pod-with-poststart-http-hook" satisfied condition "running and ready"
    STEP: check poststart hook 02/09/23 00:49:30.364
    STEP: delete the pod with lifecycle hook 02/09/23 00:49:30.377
    Feb  9 00:49:30.388: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Feb  9 00:49:30.393: INFO: Pod pod-with-poststart-http-hook still exists
    Feb  9 00:49:32.394: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Feb  9 00:49:32.401: INFO: Pod pod-with-poststart-http-hook still exists
    Feb  9 00:49:34.394: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Feb  9 00:49:34.401: INFO: Pod pod-with-poststart-http-hook no longer exists
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:49:34.401: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-2707" for this suite. 02/09/23 00:49:34.409
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/kubectl/kubectl.go:1713
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:49:34.42
Feb  9 00:49:34.420: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 00:49:34.421
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:34.438
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:34.442
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1700
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/kubectl/kubectl.go:1713
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 02/09/23 00:49:34.447
Feb  9 00:49:34.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-601 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
Feb  9 00:49:34.528: INFO: stderr: ""
Feb  9 00:49:34.528: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created 02/09/23 00:49:34.528
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1704
Feb  9 00:49:34.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-601 delete pods e2e-test-httpd-pod'
Feb  9 00:49:36.839: INFO: stderr: ""
Feb  9 00:49:36.839: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 00:49:36.839: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-601" for this suite. 02/09/23 00:49:36.848
------------------------------
â€¢ [2.437 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl run pod
  test/e2e/kubectl/kubectl.go:1697
    should create a pod from an image when restart is Never  [Conformance]
    test/e2e/kubectl/kubectl.go:1713

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:49:34.42
    Feb  9 00:49:34.420: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 00:49:34.421
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:34.438
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:34.442
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl run pod
      test/e2e/kubectl/kubectl.go:1700
    [It] should create a pod from an image when restart is Never  [Conformance]
      test/e2e/kubectl/kubectl.go:1713
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 02/09/23 00:49:34.447
    Feb  9 00:49:34.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-601 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
    Feb  9 00:49:34.528: INFO: stderr: ""
    Feb  9 00:49:34.528: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: verifying the pod e2e-test-httpd-pod was created 02/09/23 00:49:34.528
    [AfterEach] Kubectl run pod
      test/e2e/kubectl/kubectl.go:1704
    Feb  9 00:49:34.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-601 delete pods e2e-test-httpd-pod'
    Feb  9 00:49:36.839: INFO: stderr: ""
    Feb  9 00:49:36.839: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:49:36.839: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-601" for this suite. 02/09/23 00:49:36.848
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] CSIInlineVolumes
  should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46
[BeforeEach] [sig-storage] CSIInlineVolumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:49:36.857
Feb  9 00:49:36.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename csiinlinevolumes 02/09/23 00:49:36.858
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:36.876
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:36.88
[BeforeEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46
STEP: creating 02/09/23 00:49:36.885
STEP: getting 02/09/23 00:49:36.911
STEP: listing 02/09/23 00:49:36.921
STEP: deleting 02/09/23 00:49:36.926
[AfterEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/node/init/init.go:32
Feb  9 00:49:36.953: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  tear down framework | framework.go:193
STEP: Destroying namespace "csiinlinevolumes-4735" for this suite. 02/09/23 00:49:36.958
------------------------------
â€¢ [0.110 seconds]
[sig-storage] CSIInlineVolumes
test/e2e/storage/utils/framework.go:23
  should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIInlineVolumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:49:36.857
    Feb  9 00:49:36.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename csiinlinevolumes 02/09/23 00:49:36.858
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:36.876
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:36.88
    [BeforeEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
      test/e2e/storage/csi_inline.go:46
    STEP: creating 02/09/23 00:49:36.885
    STEP: getting 02/09/23 00:49:36.911
    STEP: listing 02/09/23 00:49:36.921
    STEP: deleting 02/09/23 00:49:36.926
    [AfterEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:49:36.953: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "csiinlinevolumes-4735" for this suite. 02/09/23 00:49:36.958
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:49:36.97
Feb  9 00:49:36.970: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename svcaccounts 02/09/23 00:49:36.97
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:36.986
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:36.99
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649
STEP: creating a ServiceAccount 02/09/23 00:49:36.994
STEP: watching for the ServiceAccount to be added 02/09/23 00:49:37.004
STEP: patching the ServiceAccount 02/09/23 00:49:37.006
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) 02/09/23 00:49:37.014
STEP: deleting the ServiceAccount 02/09/23 00:49:37.021
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Feb  9 00:49:37.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-1719" for this suite. 02/09/23 00:49:37.045
------------------------------
â€¢ [0.085 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:49:36.97
    Feb  9 00:49:36.970: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename svcaccounts 02/09/23 00:49:36.97
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:36.986
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:36.99
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should run through the lifecycle of a ServiceAccount [Conformance]
      test/e2e/auth/service_accounts.go:649
    STEP: creating a ServiceAccount 02/09/23 00:49:36.994
    STEP: watching for the ServiceAccount to be added 02/09/23 00:49:37.004
    STEP: patching the ServiceAccount 02/09/23 00:49:37.006
    STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) 02/09/23 00:49:37.014
    STEP: deleting the ServiceAccount 02/09/23 00:49:37.021
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:49:37.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-1719" for this suite. 02/09/23 00:49:37.045
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:49:37.058
Feb  9 00:49:37.058: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pods 02/09/23 00:49:37.059
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:37.074
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:37.078
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618
Feb  9 00:49:37.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: creating the pod 02/09/23 00:49:37.082
STEP: submitting the pod to kubernetes 02/09/23 00:49:37.082
Feb  9 00:49:37.096: INFO: Waiting up to 5m0s for pod "pod-logs-websocket-2d1e5bd6-e2db-44fd-a651-5c21c970382d" in namespace "pods-4763" to be "running and ready"
Feb  9 00:49:37.103: INFO: Pod "pod-logs-websocket-2d1e5bd6-e2db-44fd-a651-5c21c970382d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.228866ms
Feb  9 00:49:37.103: INFO: The phase of Pod pod-logs-websocket-2d1e5bd6-e2db-44fd-a651-5c21c970382d is Pending, waiting for it to be Running (with Ready = true)
Feb  9 00:49:39.110: INFO: Pod "pod-logs-websocket-2d1e5bd6-e2db-44fd-a651-5c21c970382d": Phase="Running", Reason="", readiness=true. Elapsed: 2.013515251s
Feb  9 00:49:39.110: INFO: The phase of Pod pod-logs-websocket-2d1e5bd6-e2db-44fd-a651-5c21c970382d is Running (Ready = true)
Feb  9 00:49:39.110: INFO: Pod "pod-logs-websocket-2d1e5bd6-e2db-44fd-a651-5c21c970382d" satisfied condition "running and ready"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Feb  9 00:49:39.134: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-4763" for this suite. 02/09/23 00:49:39.141
------------------------------
â€¢ [2.093 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:49:37.058
    Feb  9 00:49:37.058: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pods 02/09/23 00:49:37.059
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:37.074
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:37.078
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:618
    Feb  9 00:49:37.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: creating the pod 02/09/23 00:49:37.082
    STEP: submitting the pod to kubernetes 02/09/23 00:49:37.082
    Feb  9 00:49:37.096: INFO: Waiting up to 5m0s for pod "pod-logs-websocket-2d1e5bd6-e2db-44fd-a651-5c21c970382d" in namespace "pods-4763" to be "running and ready"
    Feb  9 00:49:37.103: INFO: Pod "pod-logs-websocket-2d1e5bd6-e2db-44fd-a651-5c21c970382d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.228866ms
    Feb  9 00:49:37.103: INFO: The phase of Pod pod-logs-websocket-2d1e5bd6-e2db-44fd-a651-5c21c970382d is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 00:49:39.110: INFO: Pod "pod-logs-websocket-2d1e5bd6-e2db-44fd-a651-5c21c970382d": Phase="Running", Reason="", readiness=true. Elapsed: 2.013515251s
    Feb  9 00:49:39.110: INFO: The phase of Pod pod-logs-websocket-2d1e5bd6-e2db-44fd-a651-5c21c970382d is Running (Ready = true)
    Feb  9 00:49:39.110: INFO: Pod "pod-logs-websocket-2d1e5bd6-e2db-44fd-a651-5c21c970382d" satisfied condition "running and ready"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:49:39.134: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-4763" for this suite. 02/09/23 00:49:39.141
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:49:39.154
Feb  9 00:49:39.154: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename svcaccounts 02/09/23 00:49:39.155
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:39.17
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:39.173
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531
Feb  9 00:49:39.196: INFO: created pod
Feb  9 00:49:39.196: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-9583" to be "Succeeded or Failed"
Feb  9 00:49:39.202: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 6.786572ms
Feb  9 00:49:41.211: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015318574s
Feb  9 00:49:43.211: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015094183s
STEP: Saw pod success 02/09/23 00:49:43.211
Feb  9 00:49:43.211: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Feb  9 00:50:13.212: INFO: polling logs
Feb  9 00:50:13.225: INFO: Pod logs: 
I0209 00:49:39.715466       1 log.go:198] OK: Got token
I0209 00:49:39.715603       1 log.go:198] validating with in-cluster discovery
I0209 00:49:39.715908       1 log.go:198] OK: got issuer https://testcluster-0fcdd07f.hcp.rysosl3nu.e2e.azmk8s.io
I0209 00:49:39.715998       1 log.go:198] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://testcluster-0fcdd07f.hcp.rysosl3nu.e2e.azmk8s.io", Subject:"system:serviceaccount:svcaccounts-9583:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1675904379, NotBefore:1675903779, IssuedAt:1675903779, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9583", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a5b90f61-6afa-4c8b-ae3b-4a3f4ce4d4ad"}}}
I0209 00:49:39.733013       1 log.go:198] OK: Constructed OIDC provider for issuer https://testcluster-0fcdd07f.hcp.rysosl3nu.e2e.azmk8s.io
I0209 00:49:39.735177       1 log.go:198] OK: Validated signature on JWT
I0209 00:49:39.735235       1 log.go:198] OK: Got valid claims from token!
I0209 00:49:39.735253       1 log.go:198] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://testcluster-0fcdd07f.hcp.rysosl3nu.e2e.azmk8s.io", Subject:"system:serviceaccount:svcaccounts-9583:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1675904379, NotBefore:1675903779, IssuedAt:1675903779, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9583", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a5b90f61-6afa-4c8b-ae3b-4a3f4ce4d4ad"}}}

Feb  9 00:50:13.225: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Feb  9 00:50:13.237: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-9583" for this suite. 02/09/23 00:50:13.245
------------------------------
â€¢ [SLOW TEST] [34.101 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:49:39.154
    Feb  9 00:49:39.154: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename svcaccounts 02/09/23 00:49:39.155
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:49:39.17
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:49:39.173
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
      test/e2e/auth/service_accounts.go:531
    Feb  9 00:49:39.196: INFO: created pod
    Feb  9 00:49:39.196: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-9583" to be "Succeeded or Failed"
    Feb  9 00:49:39.202: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 6.786572ms
    Feb  9 00:49:41.211: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015318574s
    Feb  9 00:49:43.211: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015094183s
    STEP: Saw pod success 02/09/23 00:49:43.211
    Feb  9 00:49:43.211: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
    Feb  9 00:50:13.212: INFO: polling logs
    Feb  9 00:50:13.225: INFO: Pod logs: 
    I0209 00:49:39.715466       1 log.go:198] OK: Got token
    I0209 00:49:39.715603       1 log.go:198] validating with in-cluster discovery
    I0209 00:49:39.715908       1 log.go:198] OK: got issuer https://testcluster-0fcdd07f.hcp.rysosl3nu.e2e.azmk8s.io
    I0209 00:49:39.715998       1 log.go:198] Full, not-validated claims: 
    openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://testcluster-0fcdd07f.hcp.rysosl3nu.e2e.azmk8s.io", Subject:"system:serviceaccount:svcaccounts-9583:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1675904379, NotBefore:1675903779, IssuedAt:1675903779, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9583", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a5b90f61-6afa-4c8b-ae3b-4a3f4ce4d4ad"}}}
    I0209 00:49:39.733013       1 log.go:198] OK: Constructed OIDC provider for issuer https://testcluster-0fcdd07f.hcp.rysosl3nu.e2e.azmk8s.io
    I0209 00:49:39.735177       1 log.go:198] OK: Validated signature on JWT
    I0209 00:49:39.735235       1 log.go:198] OK: Got valid claims from token!
    I0209 00:49:39.735253       1 log.go:198] Full, validated claims: 
    &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://testcluster-0fcdd07f.hcp.rysosl3nu.e2e.azmk8s.io", Subject:"system:serviceaccount:svcaccounts-9583:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1675904379, NotBefore:1675903779, IssuedAt:1675903779, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9583", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a5b90f61-6afa-4c8b-ae3b-4a3f4ce4d4ad"}}}

    Feb  9 00:50:13.225: INFO: completed pod
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:50:13.237: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-9583" for this suite. 02/09/23 00:50:13.245
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:50:13.256
Feb  9 00:50:13.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename dns 02/09/23 00:50:13.257
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:50:13.274
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:50:13.277
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193
STEP: Creating a test headless service 02/09/23 00:50:13.282
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9395 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9395;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9395 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9395;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9395.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9395.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9395.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9395.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9395.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9395.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9395.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9395.svc;check="$$(dig +notcp +noall +answer +search 121.66.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.66.121_udp@PTR;check="$$(dig +tcp +noall +answer +search 121.66.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.66.121_tcp@PTR;sleep 1; done
 02/09/23 00:50:13.3
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9395 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9395;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9395 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9395;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9395.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9395.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9395.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9395.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9395.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9395.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9395.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9395.svc;check="$$(dig +notcp +noall +answer +search 121.66.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.66.121_udp@PTR;check="$$(dig +tcp +noall +answer +search 121.66.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.66.121_tcp@PTR;sleep 1; done
 02/09/23 00:50:13.301
STEP: creating a pod to probe DNS 02/09/23 00:50:13.301
STEP: submitting the pod to kubernetes 02/09/23 00:50:13.301
Feb  9 00:50:13.313: INFO: Waiting up to 15m0s for pod "dns-test-2b28e381-add2-408a-939a-14eed9397d79" in namespace "dns-9395" to be "running"
Feb  9 00:50:13.320: INFO: Pod "dns-test-2b28e381-add2-408a-939a-14eed9397d79": Phase="Pending", Reason="", readiness=false. Elapsed: 6.452654ms
Feb  9 00:50:15.328: INFO: Pod "dns-test-2b28e381-add2-408a-939a-14eed9397d79": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014613593s
Feb  9 00:50:17.329: INFO: Pod "dns-test-2b28e381-add2-408a-939a-14eed9397d79": Phase="Pending", Reason="", readiness=false. Elapsed: 4.014977867s
Feb  9 00:50:19.328: INFO: Pod "dns-test-2b28e381-add2-408a-939a-14eed9397d79": Phase="Running", Reason="", readiness=true. Elapsed: 6.01403003s
Feb  9 00:50:19.328: INFO: Pod "dns-test-2b28e381-add2-408a-939a-14eed9397d79" satisfied condition "running"
STEP: retrieving the pod 02/09/23 00:50:19.328
STEP: looking for the results for each expected name from probers 02/09/23 00:50:19.333
Feb  9 00:50:19.343: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
Feb  9 00:50:19.350: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
Feb  9 00:50:19.357: INFO: Unable to read wheezy_udp@dns-test-service.dns-9395 from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
Feb  9 00:50:19.372: INFO: Unable to read wheezy_udp@dns-test-service.dns-9395.svc from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
Feb  9 00:50:19.387: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9395.svc from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
Feb  9 00:50:19.402: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9395.svc from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
Feb  9 00:50:19.486: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9395.svc from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
Feb  9 00:50:19.493: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9395.svc from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
Feb  9 00:50:19.524: INFO: Lookups using dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9395 wheezy_udp@dns-test-service.dns-9395.svc wheezy_udp@_http._tcp.dns-test-service.dns-9395.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9395.svc jessie_udp@_http._tcp.dns-test-service.dns-9395.svc jessie_tcp@_http._tcp.dns-test-service.dns-9395.svc]

Feb  9 00:50:24.703: INFO: DNS probes using dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79 succeeded

STEP: deleting the pod 02/09/23 00:50:24.704
STEP: deleting the test service 02/09/23 00:50:24.723
STEP: deleting the test headless service 02/09/23 00:50:24.754
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Feb  9 00:50:24.771: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-9395" for this suite. 02/09/23 00:50:24.778
------------------------------
â€¢ [SLOW TEST] [11.532 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:50:13.256
    Feb  9 00:50:13.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename dns 02/09/23 00:50:13.257
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:50:13.274
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:50:13.277
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
      test/e2e/network/dns.go:193
    STEP: Creating a test headless service 02/09/23 00:50:13.282
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9395 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9395;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9395 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9395;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9395.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9395.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9395.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9395.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9395.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9395.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9395.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9395.svc;check="$$(dig +notcp +noall +answer +search 121.66.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.66.121_udp@PTR;check="$$(dig +tcp +noall +answer +search 121.66.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.66.121_tcp@PTR;sleep 1; done
     02/09/23 00:50:13.3
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9395 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9395;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9395 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9395;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9395.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9395.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9395.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9395.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9395.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9395.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9395.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9395.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9395.svc;check="$$(dig +notcp +noall +answer +search 121.66.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.66.121_udp@PTR;check="$$(dig +tcp +noall +answer +search 121.66.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.66.121_tcp@PTR;sleep 1; done
     02/09/23 00:50:13.301
    STEP: creating a pod to probe DNS 02/09/23 00:50:13.301
    STEP: submitting the pod to kubernetes 02/09/23 00:50:13.301
    Feb  9 00:50:13.313: INFO: Waiting up to 15m0s for pod "dns-test-2b28e381-add2-408a-939a-14eed9397d79" in namespace "dns-9395" to be "running"
    Feb  9 00:50:13.320: INFO: Pod "dns-test-2b28e381-add2-408a-939a-14eed9397d79": Phase="Pending", Reason="", readiness=false. Elapsed: 6.452654ms
    Feb  9 00:50:15.328: INFO: Pod "dns-test-2b28e381-add2-408a-939a-14eed9397d79": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014613593s
    Feb  9 00:50:17.329: INFO: Pod "dns-test-2b28e381-add2-408a-939a-14eed9397d79": Phase="Pending", Reason="", readiness=false. Elapsed: 4.014977867s
    Feb  9 00:50:19.328: INFO: Pod "dns-test-2b28e381-add2-408a-939a-14eed9397d79": Phase="Running", Reason="", readiness=true. Elapsed: 6.01403003s
    Feb  9 00:50:19.328: INFO: Pod "dns-test-2b28e381-add2-408a-939a-14eed9397d79" satisfied condition "running"
    STEP: retrieving the pod 02/09/23 00:50:19.328
    STEP: looking for the results for each expected name from probers 02/09/23 00:50:19.333
    Feb  9 00:50:19.343: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
    Feb  9 00:50:19.350: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
    Feb  9 00:50:19.357: INFO: Unable to read wheezy_udp@dns-test-service.dns-9395 from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
    Feb  9 00:50:19.372: INFO: Unable to read wheezy_udp@dns-test-service.dns-9395.svc from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
    Feb  9 00:50:19.387: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9395.svc from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
    Feb  9 00:50:19.402: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9395.svc from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
    Feb  9 00:50:19.486: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9395.svc from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
    Feb  9 00:50:19.493: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9395.svc from pod dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79: the server could not find the requested resource (get pods dns-test-2b28e381-add2-408a-939a-14eed9397d79)
    Feb  9 00:50:19.524: INFO: Lookups using dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9395 wheezy_udp@dns-test-service.dns-9395.svc wheezy_udp@_http._tcp.dns-test-service.dns-9395.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9395.svc jessie_udp@_http._tcp.dns-test-service.dns-9395.svc jessie_tcp@_http._tcp.dns-test-service.dns-9395.svc]

    Feb  9 00:50:24.703: INFO: DNS probes using dns-9395/dns-test-2b28e381-add2-408a-939a-14eed9397d79 succeeded

    STEP: deleting the pod 02/09/23 00:50:24.704
    STEP: deleting the test service 02/09/23 00:50:24.723
    STEP: deleting the test headless service 02/09/23 00:50:24.754
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:50:24.771: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-9395" for this suite. 02/09/23 00:50:24.778
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:50:24.79
Feb  9 00:50:24.791: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 00:50:24.791
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:50:24.808
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:50:24.812
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175
STEP: Creating configMap with name configmap-test-upd-3ea7806a-cd6b-4437-a1c7-885815927e87 02/09/23 00:50:24.822
STEP: Creating the pod 02/09/23 00:50:24.828
Feb  9 00:50:24.841: INFO: Waiting up to 5m0s for pod "pod-configmaps-6654252a-3aa4-4e8b-99be-2b2349696f8a" in namespace "configmap-8557" to be "running"
Feb  9 00:50:24.846: INFO: Pod "pod-configmaps-6654252a-3aa4-4e8b-99be-2b2349696f8a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.758147ms
Feb  9 00:50:26.854: INFO: Pod "pod-configmaps-6654252a-3aa4-4e8b-99be-2b2349696f8a": Phase="Running", Reason="", readiness=false. Elapsed: 2.013918503s
Feb  9 00:50:26.854: INFO: Pod "pod-configmaps-6654252a-3aa4-4e8b-99be-2b2349696f8a" satisfied condition "running"
STEP: Waiting for pod with text data 02/09/23 00:50:26.854
STEP: Waiting for pod with binary data 02/09/23 00:50:26.867
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 00:50:26.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8557" for this suite. 02/09/23 00:50:26.887
------------------------------
â€¢ [2.108 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:50:24.79
    Feb  9 00:50:24.791: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 00:50:24.791
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:50:24.808
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:50:24.812
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] binary data should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:175
    STEP: Creating configMap with name configmap-test-upd-3ea7806a-cd6b-4437-a1c7-885815927e87 02/09/23 00:50:24.822
    STEP: Creating the pod 02/09/23 00:50:24.828
    Feb  9 00:50:24.841: INFO: Waiting up to 5m0s for pod "pod-configmaps-6654252a-3aa4-4e8b-99be-2b2349696f8a" in namespace "configmap-8557" to be "running"
    Feb  9 00:50:24.846: INFO: Pod "pod-configmaps-6654252a-3aa4-4e8b-99be-2b2349696f8a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.758147ms
    Feb  9 00:50:26.854: INFO: Pod "pod-configmaps-6654252a-3aa4-4e8b-99be-2b2349696f8a": Phase="Running", Reason="", readiness=false. Elapsed: 2.013918503s
    Feb  9 00:50:26.854: INFO: Pod "pod-configmaps-6654252a-3aa4-4e8b-99be-2b2349696f8a" satisfied condition "running"
    STEP: Waiting for pod with text data 02/09/23 00:50:26.854
    STEP: Waiting for pod with binary data 02/09/23 00:50:26.867
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:50:26.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8557" for this suite. 02/09/23 00:50:26.887
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:50:26.899
Feb  9 00:50:26.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 00:50:26.9
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:50:26.915
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:50:26.919
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84
STEP: Creating a pod to test downward API volume plugin 02/09/23 00:50:26.93
Feb  9 00:50:26.942: INFO: Waiting up to 5m0s for pod "downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9" in namespace "projected-3754" to be "Succeeded or Failed"
Feb  9 00:50:26.947: INFO: Pod "downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9": Phase="Pending", Reason="", readiness=false. Elapsed: 5.429644ms
Feb  9 00:50:28.954: INFO: Pod "downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012131188s
Feb  9 00:50:30.954: INFO: Pod "downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01161052s
STEP: Saw pod success 02/09/23 00:50:30.954
Feb  9 00:50:30.954: INFO: Pod "downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9" satisfied condition "Succeeded or Failed"
Feb  9 00:50:30.959: INFO: Trying to get logs from node aks-nodes-15799032-vmss000001 pod downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9 container client-container: <nil>
STEP: delete the pod 02/09/23 00:50:30.969
Feb  9 00:50:30.985: INFO: Waiting for pod downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9 to disappear
Feb  9 00:50:30.990: INFO: Pod downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Feb  9 00:50:30.990: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3754" for this suite. 02/09/23 00:50:30.997
------------------------------
â€¢ [4.107 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:50:26.899
    Feb  9 00:50:26.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 00:50:26.9
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:50:26.915
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:50:26.919
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:84
    STEP: Creating a pod to test downward API volume plugin 02/09/23 00:50:26.93
    Feb  9 00:50:26.942: INFO: Waiting up to 5m0s for pod "downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9" in namespace "projected-3754" to be "Succeeded or Failed"
    Feb  9 00:50:26.947: INFO: Pod "downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9": Phase="Pending", Reason="", readiness=false. Elapsed: 5.429644ms
    Feb  9 00:50:28.954: INFO: Pod "downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012131188s
    Feb  9 00:50:30.954: INFO: Pod "downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01161052s
    STEP: Saw pod success 02/09/23 00:50:30.954
    Feb  9 00:50:30.954: INFO: Pod "downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9" satisfied condition "Succeeded or Failed"
    Feb  9 00:50:30.959: INFO: Trying to get logs from node aks-nodes-15799032-vmss000001 pod downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9 container client-container: <nil>
    STEP: delete the pod 02/09/23 00:50:30.969
    Feb  9 00:50:30.985: INFO: Waiting for pod downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9 to disappear
    Feb  9 00:50:30.990: INFO: Pod downwardapi-volume-7a5ad28d-8f24-4f61-bc44-a1d18bc121e9 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:50:30.990: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3754" for this suite. 02/09/23 00:50:30.997
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:50:31.007
Feb  9 00:50:31.007: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename replicaset 02/09/23 00:50:31.008
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:50:31.027
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:50:31.031
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176
STEP: Create a Replicaset 02/09/23 00:50:31.041
STEP: Verify that the required pods have come up. 02/09/23 00:50:31.047
Feb  9 00:50:31.053: INFO: Pod name sample-pod: Found 0 pods out of 1
Feb  9 00:50:36.060: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 02/09/23 00:50:36.06
STEP: Getting /status 02/09/23 00:50:36.06
Feb  9 00:50:36.066: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status 02/09/23 00:50:36.066
Feb  9 00:50:36.079: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated 02/09/23 00:50:36.079
Feb  9 00:50:36.081: INFO: Observed &ReplicaSet event: ADDED
Feb  9 00:50:36.081: INFO: Observed &ReplicaSet event: MODIFIED
Feb  9 00:50:36.082: INFO: Observed &ReplicaSet event: MODIFIED
Feb  9 00:50:36.082: INFO: Observed &ReplicaSet event: MODIFIED
Feb  9 00:50:36.082: INFO: Found replicaset test-rs in namespace replicaset-2836 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Feb  9 00:50:36.082: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status 02/09/23 00:50:36.082
Feb  9 00:50:36.082: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Feb  9 00:50:36.091: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched 02/09/23 00:50:36.091
Feb  9 00:50:36.094: INFO: Observed &ReplicaSet event: ADDED
Feb  9 00:50:36.094: INFO: Observed &ReplicaSet event: MODIFIED
Feb  9 00:50:36.094: INFO: Observed &ReplicaSet event: MODIFIED
Feb  9 00:50:36.094: INFO: Observed &ReplicaSet event: MODIFIED
Feb  9 00:50:36.094: INFO: Observed replicaset test-rs in namespace replicaset-2836 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Feb  9 00:50:36.094: INFO: Observed &ReplicaSet event: MODIFIED
Feb  9 00:50:36.094: INFO: Found replicaset test-rs in namespace replicaset-2836 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Feb  9 00:50:36.094: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Feb  9 00:50:36.095: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-2836" for this suite. 02/09/23 00:50:36.102
------------------------------
â€¢ [SLOW TEST] [5.104 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:50:31.007
    Feb  9 00:50:31.007: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename replicaset 02/09/23 00:50:31.008
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:50:31.027
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:50:31.031
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should validate Replicaset Status endpoints [Conformance]
      test/e2e/apps/replica_set.go:176
    STEP: Create a Replicaset 02/09/23 00:50:31.041
    STEP: Verify that the required pods have come up. 02/09/23 00:50:31.047
    Feb  9 00:50:31.053: INFO: Pod name sample-pod: Found 0 pods out of 1
    Feb  9 00:50:36.060: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 02/09/23 00:50:36.06
    STEP: Getting /status 02/09/23 00:50:36.06
    Feb  9 00:50:36.066: INFO: Replicaset test-rs has Conditions: []
    STEP: updating the Replicaset Status 02/09/23 00:50:36.066
    Feb  9 00:50:36.079: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the ReplicaSet status to be updated 02/09/23 00:50:36.079
    Feb  9 00:50:36.081: INFO: Observed &ReplicaSet event: ADDED
    Feb  9 00:50:36.081: INFO: Observed &ReplicaSet event: MODIFIED
    Feb  9 00:50:36.082: INFO: Observed &ReplicaSet event: MODIFIED
    Feb  9 00:50:36.082: INFO: Observed &ReplicaSet event: MODIFIED
    Feb  9 00:50:36.082: INFO: Found replicaset test-rs in namespace replicaset-2836 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Feb  9 00:50:36.082: INFO: Replicaset test-rs has an updated status
    STEP: patching the Replicaset Status 02/09/23 00:50:36.082
    Feb  9 00:50:36.082: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Feb  9 00:50:36.091: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Replicaset status to be patched 02/09/23 00:50:36.091
    Feb  9 00:50:36.094: INFO: Observed &ReplicaSet event: ADDED
    Feb  9 00:50:36.094: INFO: Observed &ReplicaSet event: MODIFIED
    Feb  9 00:50:36.094: INFO: Observed &ReplicaSet event: MODIFIED
    Feb  9 00:50:36.094: INFO: Observed &ReplicaSet event: MODIFIED
    Feb  9 00:50:36.094: INFO: Observed replicaset test-rs in namespace replicaset-2836 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Feb  9 00:50:36.094: INFO: Observed &ReplicaSet event: MODIFIED
    Feb  9 00:50:36.094: INFO: Found replicaset test-rs in namespace replicaset-2836 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
    Feb  9 00:50:36.094: INFO: Replicaset test-rs has a patched status
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:50:36.095: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-2836" for this suite. 02/09/23 00:50:36.102
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:50:36.113
Feb  9 00:50:36.113: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename watch 02/09/23 00:50:36.114
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:50:36.13
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:50:36.135
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60
STEP: creating a watch on configmaps with label A 02/09/23 00:50:36.139
STEP: creating a watch on configmaps with label B 02/09/23 00:50:36.141
STEP: creating a watch on configmaps with label A or B 02/09/23 00:50:36.143
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification 02/09/23 00:50:36.145
Feb  9 00:50:36.155: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13364 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Feb  9 00:50:36.155: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13364 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification 02/09/23 00:50:36.155
Feb  9 00:50:36.168: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13366 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Feb  9 00:50:36.168: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13366 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification 02/09/23 00:50:36.168
Feb  9 00:50:36.179: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13367 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Feb  9 00:50:36.179: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13367 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification 02/09/23 00:50:36.179
Feb  9 00:50:36.189: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13368 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Feb  9 00:50:36.189: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13368 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification 02/09/23 00:50:36.19
Feb  9 00:50:36.196: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7482  c81f0e15-ab62-4870-be4a-deaa8de5a33c 13369 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Feb  9 00:50:36.196: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7482  c81f0e15-ab62-4870-be4a-deaa8de5a33c 13369 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification 02/09/23 00:50:46.197
Feb  9 00:50:46.209: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7482  c81f0e15-ab62-4870-be4a-deaa8de5a33c 13434 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Feb  9 00:50:46.209: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7482  c81f0e15-ab62-4870-be4a-deaa8de5a33c 13434 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Feb  9 00:50:56.210: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-7482" for this suite. 02/09/23 00:50:56.219
------------------------------
â€¢ [SLOW TEST] [20.115 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:50:36.113
    Feb  9 00:50:36.113: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename watch 02/09/23 00:50:36.114
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:50:36.13
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:50:36.135
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should observe add, update, and delete watch notifications on configmaps [Conformance]
      test/e2e/apimachinery/watch.go:60
    STEP: creating a watch on configmaps with label A 02/09/23 00:50:36.139
    STEP: creating a watch on configmaps with label B 02/09/23 00:50:36.141
    STEP: creating a watch on configmaps with label A or B 02/09/23 00:50:36.143
    STEP: creating a configmap with label A and ensuring the correct watchers observe the notification 02/09/23 00:50:36.145
    Feb  9 00:50:36.155: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13364 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Feb  9 00:50:36.155: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13364 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying configmap A and ensuring the correct watchers observe the notification 02/09/23 00:50:36.155
    Feb  9 00:50:36.168: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13366 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    Feb  9 00:50:36.168: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13366 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying configmap A again and ensuring the correct watchers observe the notification 02/09/23 00:50:36.168
    Feb  9 00:50:36.179: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13367 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Feb  9 00:50:36.179: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13367 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: deleting configmap A and ensuring the correct watchers observe the notification 02/09/23 00:50:36.179
    Feb  9 00:50:36.189: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13368 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Feb  9 00:50:36.189: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7482  96f989db-5fd0-4c8b-a7aa-9726494b2425 13368 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: creating a configmap with label B and ensuring the correct watchers observe the notification 02/09/23 00:50:36.19
    Feb  9 00:50:36.196: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7482  c81f0e15-ab62-4870-be4a-deaa8de5a33c 13369 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Feb  9 00:50:36.196: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7482  c81f0e15-ab62-4870-be4a-deaa8de5a33c 13369 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: deleting configmap B and ensuring the correct watchers observe the notification 02/09/23 00:50:46.197
    Feb  9 00:50:46.209: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7482  c81f0e15-ab62-4870-be4a-deaa8de5a33c 13434 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Feb  9 00:50:46.209: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7482  c81f0e15-ab62-4870-be4a-deaa8de5a33c 13434 0 2023-02-09 00:50:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-02-09 00:50:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:50:56.210: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-7482" for this suite. 02/09/23 00:50:56.219
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts
  should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:50:56.23
Feb  9 00:50:56.230: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename svcaccounts 02/09/23 00:50:56.231
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:50:56.247
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:50:56.25
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275
STEP: Creating a pod to test service account token:  02/09/23 00:50:56.254
Feb  9 00:50:56.271: INFO: Waiting up to 5m0s for pod "test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb" in namespace "svcaccounts-4972" to be "Succeeded or Failed"
Feb  9 00:50:56.280: INFO: Pod "test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb": Phase="Pending", Reason="", readiness=false. Elapsed: 9.338272ms
Feb  9 00:50:58.287: INFO: Pod "test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016706565s
Feb  9 00:51:00.287: INFO: Pod "test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016118697s
STEP: Saw pod success 02/09/23 00:51:00.287
Feb  9 00:51:00.287: INFO: Pod "test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb" satisfied condition "Succeeded or Failed"
Feb  9 00:51:00.294: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb container agnhost-container: <nil>
STEP: delete the pod 02/09/23 00:51:00.306
Feb  9 00:51:00.320: INFO: Waiting for pod test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb to disappear
Feb  9 00:51:00.325: INFO: Pod test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Feb  9 00:51:00.325: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-4972" for this suite. 02/09/23 00:51:00.333
------------------------------
â€¢ [4.116 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:50:56.23
    Feb  9 00:50:56.230: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename svcaccounts 02/09/23 00:50:56.231
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:50:56.247
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:50:56.25
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should mount projected service account token [Conformance]
      test/e2e/auth/service_accounts.go:275
    STEP: Creating a pod to test service account token:  02/09/23 00:50:56.254
    Feb  9 00:50:56.271: INFO: Waiting up to 5m0s for pod "test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb" in namespace "svcaccounts-4972" to be "Succeeded or Failed"
    Feb  9 00:50:56.280: INFO: Pod "test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb": Phase="Pending", Reason="", readiness=false. Elapsed: 9.338272ms
    Feb  9 00:50:58.287: INFO: Pod "test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016706565s
    Feb  9 00:51:00.287: INFO: Pod "test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016118697s
    STEP: Saw pod success 02/09/23 00:51:00.287
    Feb  9 00:51:00.287: INFO: Pod "test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb" satisfied condition "Succeeded or Failed"
    Feb  9 00:51:00.294: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 00:51:00.306
    Feb  9 00:51:00.320: INFO: Waiting for pod test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb to disappear
    Feb  9 00:51:00.325: INFO: Pod test-pod-5914b704-2e3e-4f04-b46b-c6b6ae2fcfbb no longer exists
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:51:00.325: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-4972" for this suite. 02/09/23 00:51:00.333
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49
[BeforeEach] [sig-storage] CSIStorageCapacity
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:51:00.348
Feb  9 00:51:00.348: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename csistoragecapacity 02/09/23 00:51:00.349
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:00.364
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:00.368
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/metrics/init/init.go:31
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49
STEP: getting /apis 02/09/23 00:51:00.372
STEP: getting /apis/storage.k8s.io 02/09/23 00:51:00.376
STEP: getting /apis/storage.k8s.io/v1 02/09/23 00:51:00.378
STEP: creating 02/09/23 00:51:00.38
STEP: watching 02/09/23 00:51:00.402
Feb  9 00:51:00.402: INFO: starting watch
STEP: getting 02/09/23 00:51:00.412
STEP: listing in namespace 02/09/23 00:51:00.417
STEP: listing across namespaces 02/09/23 00:51:00.423
STEP: patching 02/09/23 00:51:00.428
STEP: updating 02/09/23 00:51:00.434
Feb  9 00:51:00.440: INFO: waiting for watch events with expected annotations in namespace
Feb  9 00:51:00.440: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting 02/09/23 00:51:00.44
STEP: deleting a collection 02/09/23 00:51:00.458
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/node/init/init.go:32
Feb  9 00:51:00.483: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  tear down framework | framework.go:193
STEP: Destroying namespace "csistoragecapacity-5816" for this suite. 02/09/23 00:51:00.489
------------------------------
â€¢ [0.152 seconds]
[sig-storage] CSIStorageCapacity
test/e2e/storage/utils/framework.go:23
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIStorageCapacity
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:51:00.348
    Feb  9 00:51:00.348: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename csistoragecapacity 02/09/23 00:51:00.349
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:00.364
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:00.368
    [BeforeEach] [sig-storage] CSIStorageCapacity
      test/e2e/framework/metrics/init/init.go:31
    [It]  should support CSIStorageCapacities API operations [Conformance]
      test/e2e/storage/csistoragecapacity.go:49
    STEP: getting /apis 02/09/23 00:51:00.372
    STEP: getting /apis/storage.k8s.io 02/09/23 00:51:00.376
    STEP: getting /apis/storage.k8s.io/v1 02/09/23 00:51:00.378
    STEP: creating 02/09/23 00:51:00.38
    STEP: watching 02/09/23 00:51:00.402
    Feb  9 00:51:00.402: INFO: starting watch
    STEP: getting 02/09/23 00:51:00.412
    STEP: listing in namespace 02/09/23 00:51:00.417
    STEP: listing across namespaces 02/09/23 00:51:00.423
    STEP: patching 02/09/23 00:51:00.428
    STEP: updating 02/09/23 00:51:00.434
    Feb  9 00:51:00.440: INFO: waiting for watch events with expected annotations in namespace
    Feb  9 00:51:00.440: INFO: waiting for watch events with expected annotations across namespace
    STEP: deleting 02/09/23 00:51:00.44
    STEP: deleting a collection 02/09/23 00:51:00.458
    [AfterEach] [sig-storage] CSIStorageCapacity
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:51:00.483: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      tear down framework | framework.go:193
    STEP: Destroying namespace "csistoragecapacity-5816" for this suite. 02/09/23 00:51:00.489
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:51:00.505
Feb  9 00:51:00.505: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 00:51:00.506
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:00.52
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:00.524
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88
STEP: Creating projection with secret that has name projected-secret-test-map-9667994b-d619-4d81-9c93-d9fcfafede2a 02/09/23 00:51:00.528
STEP: Creating a pod to test consume secrets 02/09/23 00:51:00.534
Feb  9 00:51:00.548: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e" in namespace "projected-7796" to be "Succeeded or Failed"
Feb  9 00:51:00.553: INFO: Pod "pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.021238ms
Feb  9 00:51:02.559: INFO: Pod "pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011955844s
Feb  9 00:51:04.561: INFO: Pod "pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013423275s
STEP: Saw pod success 02/09/23 00:51:04.561
Feb  9 00:51:04.561: INFO: Pod "pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e" satisfied condition "Succeeded or Failed"
Feb  9 00:51:04.566: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e container projected-secret-volume-test: <nil>
STEP: delete the pod 02/09/23 00:51:04.579
Feb  9 00:51:04.598: INFO: Waiting for pod pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e to disappear
Feb  9 00:51:04.604: INFO: Pod pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Feb  9 00:51:04.604: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7796" for this suite. 02/09/23 00:51:04.612
------------------------------
â€¢ [4.117 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:51:00.505
    Feb  9 00:51:00.505: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 00:51:00.506
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:00.52
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:00.524
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:88
    STEP: Creating projection with secret that has name projected-secret-test-map-9667994b-d619-4d81-9c93-d9fcfafede2a 02/09/23 00:51:00.528
    STEP: Creating a pod to test consume secrets 02/09/23 00:51:00.534
    Feb  9 00:51:00.548: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e" in namespace "projected-7796" to be "Succeeded or Failed"
    Feb  9 00:51:00.553: INFO: Pod "pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.021238ms
    Feb  9 00:51:02.559: INFO: Pod "pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011955844s
    Feb  9 00:51:04.561: INFO: Pod "pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013423275s
    STEP: Saw pod success 02/09/23 00:51:04.561
    Feb  9 00:51:04.561: INFO: Pod "pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e" satisfied condition "Succeeded or Failed"
    Feb  9 00:51:04.566: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e container projected-secret-volume-test: <nil>
    STEP: delete the pod 02/09/23 00:51:04.579
    Feb  9 00:51:04.598: INFO: Waiting for pod pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e to disappear
    Feb  9 00:51:04.604: INFO: Pod pod-projected-secrets-9f765b7e-44fe-4bc0-ac5e-fe01b224e36e no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:51:04.604: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7796" for this suite. 02/09/23 00:51:04.612
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:51:04.624
Feb  9 00:51:04.624: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 00:51:04.624
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:04.641
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:04.645
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391
STEP: set up a multi version CRD 02/09/23 00:51:04.648
Feb  9 00:51:04.649: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: rename a version 02/09/23 00:51:08.569
STEP: check the new version name is served 02/09/23 00:51:08.604
STEP: check the old version name is removed 02/09/23 00:51:09.658
STEP: check the other version is not changed 02/09/23 00:51:10.38
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:51:13.384: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-9332" for this suite. 02/09/23 00:51:13.4
------------------------------
â€¢ [SLOW TEST] [8.790 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:51:04.624
    Feb  9 00:51:04.624: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 00:51:04.624
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:04.641
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:04.645
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] updates the published spec when one version gets renamed [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:391
    STEP: set up a multi version CRD 02/09/23 00:51:04.648
    Feb  9 00:51:04.649: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: rename a version 02/09/23 00:51:08.569
    STEP: check the new version name is served 02/09/23 00:51:08.604
    STEP: check the old version name is removed 02/09/23 00:51:09.658
    STEP: check the other version is not changed 02/09/23 00:51:10.38
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:51:13.384: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-9332" for this suite. 02/09/23 00:51:13.4
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:51:13.415
Feb  9 00:51:13.415: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 00:51:13.416
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:13.433
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:13.437
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250
STEP: creating service in namespace services-7031 02/09/23 00:51:13.442
STEP: creating service affinity-nodeport-transition in namespace services-7031 02/09/23 00:51:13.442
STEP: creating replication controller affinity-nodeport-transition in namespace services-7031 02/09/23 00:51:13.462
I0209 00:51:13.469909      20 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-7031, replica count: 3
I0209 00:51:16.521986      20 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Feb  9 00:51:16.541: INFO: Creating new exec pod
Feb  9 00:51:16.550: INFO: Waiting up to 5m0s for pod "execpod-affinitym872m" in namespace "services-7031" to be "running"
Feb  9 00:51:16.556: INFO: Pod "execpod-affinitym872m": Phase="Pending", Reason="", readiness=false. Elapsed: 5.812148ms
Feb  9 00:51:18.562: INFO: Pod "execpod-affinitym872m": Phase="Running", Reason="", readiness=true. Elapsed: 2.011892657s
Feb  9 00:51:18.562: INFO: Pod "execpod-affinitym872m" satisfied condition "running"
Feb  9 00:51:19.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7031 exec execpod-affinitym872m -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport-transition 80'
Feb  9 00:51:19.732: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Feb  9 00:51:19.732: INFO: stdout: ""
Feb  9 00:51:19.733: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7031 exec execpod-affinitym872m -- /bin/sh -x -c nc -v -z -w 2 10.0.124.215 80'
Feb  9 00:51:19.889: INFO: stderr: "+ nc -v -z -w 2 10.0.124.215 80\nConnection to 10.0.124.215 80 port [tcp/http] succeeded!\n"
Feb  9 00:51:19.889: INFO: stdout: ""
Feb  9 00:51:19.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7031 exec execpod-affinitym872m -- /bin/sh -x -c nc -v -z -w 2 10.224.0.4 31723'
Feb  9 00:51:20.035: INFO: stderr: "+ nc -v -z -w 2 10.224.0.4 31723\nConnection to 10.224.0.4 31723 port [tcp/*] succeeded!\n"
Feb  9 00:51:20.035: INFO: stdout: ""
Feb  9 00:51:20.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7031 exec execpod-affinitym872m -- /bin/sh -x -c nc -v -z -w 2 10.224.0.5 31723'
Feb  9 00:51:20.190: INFO: stderr: "+ nc -v -z -w 2 10.224.0.5 31723\nConnection to 10.224.0.5 31723 port [tcp/*] succeeded!\n"
Feb  9 00:51:20.190: INFO: stdout: ""
Feb  9 00:51:20.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7031 exec execpod-affinitym872m -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.224.0.4:31723/ ; done'
Feb  9 00:51:20.459: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n"
Feb  9 00:51:20.459: INFO: stdout: "\naffinity-nodeport-transition-lwhtd\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-lwhtd\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-khjtf\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-lwhtd\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-khjtf\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-khjtf\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-lwhtd"
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-lwhtd
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-lwhtd
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-khjtf
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-lwhtd
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-khjtf
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-khjtf
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-lwhtd
Feb  9 00:51:20.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7031 exec execpod-affinitym872m -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.224.0.4:31723/ ; done'
Feb  9 00:51:20.724: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n"
Feb  9 00:51:20.724: INFO: stdout: "\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26"
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
Feb  9 00:51:20.724: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7031, will wait for the garbage collector to delete the pods 02/09/23 00:51:20.738
Feb  9 00:51:20.803: INFO: Deleting ReplicationController affinity-nodeport-transition took: 9.319676ms
Feb  9 00:51:20.904: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.919826ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 00:51:23.136: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-7031" for this suite. 02/09/23 00:51:23.144
------------------------------
â€¢ [SLOW TEST] [9.744 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:51:13.415
    Feb  9 00:51:13.415: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 00:51:13.416
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:13.433
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:13.437
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2250
    STEP: creating service in namespace services-7031 02/09/23 00:51:13.442
    STEP: creating service affinity-nodeport-transition in namespace services-7031 02/09/23 00:51:13.442
    STEP: creating replication controller affinity-nodeport-transition in namespace services-7031 02/09/23 00:51:13.462
    I0209 00:51:13.469909      20 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-7031, replica count: 3
    I0209 00:51:16.521986      20 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Feb  9 00:51:16.541: INFO: Creating new exec pod
    Feb  9 00:51:16.550: INFO: Waiting up to 5m0s for pod "execpod-affinitym872m" in namespace "services-7031" to be "running"
    Feb  9 00:51:16.556: INFO: Pod "execpod-affinitym872m": Phase="Pending", Reason="", readiness=false. Elapsed: 5.812148ms
    Feb  9 00:51:18.562: INFO: Pod "execpod-affinitym872m": Phase="Running", Reason="", readiness=true. Elapsed: 2.011892657s
    Feb  9 00:51:18.562: INFO: Pod "execpod-affinitym872m" satisfied condition "running"
    Feb  9 00:51:19.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7031 exec execpod-affinitym872m -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport-transition 80'
    Feb  9 00:51:19.732: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
    Feb  9 00:51:19.732: INFO: stdout: ""
    Feb  9 00:51:19.733: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7031 exec execpod-affinitym872m -- /bin/sh -x -c nc -v -z -w 2 10.0.124.215 80'
    Feb  9 00:51:19.889: INFO: stderr: "+ nc -v -z -w 2 10.0.124.215 80\nConnection to 10.0.124.215 80 port [tcp/http] succeeded!\n"
    Feb  9 00:51:19.889: INFO: stdout: ""
    Feb  9 00:51:19.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7031 exec execpod-affinitym872m -- /bin/sh -x -c nc -v -z -w 2 10.224.0.4 31723'
    Feb  9 00:51:20.035: INFO: stderr: "+ nc -v -z -w 2 10.224.0.4 31723\nConnection to 10.224.0.4 31723 port [tcp/*] succeeded!\n"
    Feb  9 00:51:20.035: INFO: stdout: ""
    Feb  9 00:51:20.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7031 exec execpod-affinitym872m -- /bin/sh -x -c nc -v -z -w 2 10.224.0.5 31723'
    Feb  9 00:51:20.190: INFO: stderr: "+ nc -v -z -w 2 10.224.0.5 31723\nConnection to 10.224.0.5 31723 port [tcp/*] succeeded!\n"
    Feb  9 00:51:20.190: INFO: stdout: ""
    Feb  9 00:51:20.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7031 exec execpod-affinitym872m -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.224.0.4:31723/ ; done'
    Feb  9 00:51:20.459: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n"
    Feb  9 00:51:20.459: INFO: stdout: "\naffinity-nodeport-transition-lwhtd\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-lwhtd\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-khjtf\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-lwhtd\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-khjtf\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-khjtf\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-lwhtd"
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-lwhtd
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-lwhtd
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-khjtf
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-lwhtd
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-khjtf
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-khjtf
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.459: INFO: Received response from host: affinity-nodeport-transition-lwhtd
    Feb  9 00:51:20.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7031 exec execpod-affinitym872m -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.224.0.4:31723/ ; done'
    Feb  9 00:51:20.724: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:31723/\n"
    Feb  9 00:51:20.724: INFO: stdout: "\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26\naffinity-nodeport-transition-tfw26"
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Received response from host: affinity-nodeport-transition-tfw26
    Feb  9 00:51:20.724: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7031, will wait for the garbage collector to delete the pods 02/09/23 00:51:20.738
    Feb  9 00:51:20.803: INFO: Deleting ReplicationController affinity-nodeport-transition took: 9.319676ms
    Feb  9 00:51:20.904: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.919826ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:51:23.136: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-7031" for this suite. 02/09/23 00:51:23.144
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:51:23.163
Feb  9 00:51:23.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pods 02/09/23 00:51:23.164
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:23.18
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:23.188
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226
STEP: creating the pod 02/09/23 00:51:23.195
STEP: setting up watch 02/09/23 00:51:23.195
STEP: submitting the pod to kubernetes 02/09/23 00:51:23.301
STEP: verifying the pod is in kubernetes 02/09/23 00:51:23.315
STEP: verifying pod creation was observed 02/09/23 00:51:23.32
Feb  9 00:51:23.320: INFO: Waiting up to 5m0s for pod "pod-submit-remove-03f8924f-adb7-47e0-8c2c-0fea4ee954a4" in namespace "pods-1403" to be "running"
Feb  9 00:51:23.326: INFO: Pod "pod-submit-remove-03f8924f-adb7-47e0-8c2c-0fea4ee954a4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.242943ms
Feb  9 00:51:25.332: INFO: Pod "pod-submit-remove-03f8924f-adb7-47e0-8c2c-0fea4ee954a4": Phase="Running", Reason="", readiness=true. Elapsed: 2.011471206s
Feb  9 00:51:25.332: INFO: Pod "pod-submit-remove-03f8924f-adb7-47e0-8c2c-0fea4ee954a4" satisfied condition "running"
STEP: deleting the pod gracefully 02/09/23 00:51:25.337
STEP: verifying pod deletion was observed 02/09/23 00:51:25.346
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Feb  9 00:51:27.100: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-1403" for this suite. 02/09/23 00:51:27.108
------------------------------
â€¢ [3.965 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:51:23.163
    Feb  9 00:51:23.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pods 02/09/23 00:51:23.164
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:23.18
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:23.188
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should be submitted and removed [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:226
    STEP: creating the pod 02/09/23 00:51:23.195
    STEP: setting up watch 02/09/23 00:51:23.195
    STEP: submitting the pod to kubernetes 02/09/23 00:51:23.301
    STEP: verifying the pod is in kubernetes 02/09/23 00:51:23.315
    STEP: verifying pod creation was observed 02/09/23 00:51:23.32
    Feb  9 00:51:23.320: INFO: Waiting up to 5m0s for pod "pod-submit-remove-03f8924f-adb7-47e0-8c2c-0fea4ee954a4" in namespace "pods-1403" to be "running"
    Feb  9 00:51:23.326: INFO: Pod "pod-submit-remove-03f8924f-adb7-47e0-8c2c-0fea4ee954a4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.242943ms
    Feb  9 00:51:25.332: INFO: Pod "pod-submit-remove-03f8924f-adb7-47e0-8c2c-0fea4ee954a4": Phase="Running", Reason="", readiness=true. Elapsed: 2.011471206s
    Feb  9 00:51:25.332: INFO: Pod "pod-submit-remove-03f8924f-adb7-47e0-8c2c-0fea4ee954a4" satisfied condition "running"
    STEP: deleting the pod gracefully 02/09/23 00:51:25.337
    STEP: verifying pod deletion was observed 02/09/23 00:51:25.346
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:51:27.100: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-1403" for this suite. 02/09/23 00:51:27.108
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:51:27.131
Feb  9 00:51:27.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename daemonsets 02/09/23 00:51:27.132
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:27.149
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:27.154
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374
Feb  9 00:51:27.203: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster. 02/09/23 00:51:27.21
Feb  9 00:51:27.224: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 00:51:27.224: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 00:51:28.238: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Feb  9 00:51:28.238: INFO: Node aks-nodes-15799032-vmss000002 is running 0 daemon pod, expected 1
Feb  9 00:51:29.241: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Feb  9 00:51:29.241: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Update daemon pods image. 02/09/23 00:51:29.266
STEP: Check that daemon pods images are updated. 02/09/23 00:51:29.281
Feb  9 00:51:29.287: INFO: Wrong image for pod: daemon-set-jbxzc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Feb  9 00:51:29.287: INFO: Wrong image for pod: daemon-set-n7czw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Feb  9 00:51:29.287: INFO: Wrong image for pod: daemon-set-xjq2w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Feb  9 00:51:30.301: INFO: Wrong image for pod: daemon-set-jbxzc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Feb  9 00:51:30.301: INFO: Wrong image for pod: daemon-set-n7czw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Feb  9 00:51:31.301: INFO: Wrong image for pod: daemon-set-jbxzc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Feb  9 00:51:31.301: INFO: Wrong image for pod: daemon-set-n7czw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Feb  9 00:51:32.299: INFO: Pod daemon-set-7xjsw is not available
Feb  9 00:51:32.299: INFO: Wrong image for pod: daemon-set-jbxzc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Feb  9 00:51:32.299: INFO: Wrong image for pod: daemon-set-n7czw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Feb  9 00:51:33.301: INFO: Pod daemon-set-ktvdp is not available
Feb  9 00:51:33.301: INFO: Wrong image for pod: daemon-set-n7czw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Feb  9 00:51:35.300: INFO: Pod daemon-set-5qx4m is not available
STEP: Check that daemon pods are still running on every node of the cluster. 02/09/23 00:51:35.308
Feb  9 00:51:35.319: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Feb  9 00:51:35.319: INFO: Node aks-nodes-15799032-vmss000001 is running 0 daemon pod, expected 1
Feb  9 00:51:36.333: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Feb  9 00:51:36.333: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 02/09/23 00:51:36.36
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3204, will wait for the garbage collector to delete the pods 02/09/23 00:51:36.36
Feb  9 00:51:36.425: INFO: Deleting DaemonSet.extensions daemon-set took: 9.536368ms
Feb  9 00:51:36.525: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.310512ms
Feb  9 00:51:39.132: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 00:51:39.132: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Feb  9 00:51:39.137: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14004"},"items":null}

Feb  9 00:51:39.142: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14004"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:51:39.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-3204" for this suite. 02/09/23 00:51:39.173
------------------------------
â€¢ [SLOW TEST] [12.051 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:51:27.131
    Feb  9 00:51:27.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename daemonsets 02/09/23 00:51:27.132
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:27.149
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:27.154
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
      test/e2e/apps/daemon_set.go:374
    Feb  9 00:51:27.203: INFO: Creating simple daemon set daemon-set
    STEP: Check that daemon pods launch on every node of the cluster. 02/09/23 00:51:27.21
    Feb  9 00:51:27.224: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 00:51:27.224: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 00:51:28.238: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Feb  9 00:51:28.238: INFO: Node aks-nodes-15799032-vmss000002 is running 0 daemon pod, expected 1
    Feb  9 00:51:29.241: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Feb  9 00:51:29.241: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    STEP: Update daemon pods image. 02/09/23 00:51:29.266
    STEP: Check that daemon pods images are updated. 02/09/23 00:51:29.281
    Feb  9 00:51:29.287: INFO: Wrong image for pod: daemon-set-jbxzc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Feb  9 00:51:29.287: INFO: Wrong image for pod: daemon-set-n7czw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Feb  9 00:51:29.287: INFO: Wrong image for pod: daemon-set-xjq2w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Feb  9 00:51:30.301: INFO: Wrong image for pod: daemon-set-jbxzc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Feb  9 00:51:30.301: INFO: Wrong image for pod: daemon-set-n7czw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Feb  9 00:51:31.301: INFO: Wrong image for pod: daemon-set-jbxzc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Feb  9 00:51:31.301: INFO: Wrong image for pod: daemon-set-n7czw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Feb  9 00:51:32.299: INFO: Pod daemon-set-7xjsw is not available
    Feb  9 00:51:32.299: INFO: Wrong image for pod: daemon-set-jbxzc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Feb  9 00:51:32.299: INFO: Wrong image for pod: daemon-set-n7czw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Feb  9 00:51:33.301: INFO: Pod daemon-set-ktvdp is not available
    Feb  9 00:51:33.301: INFO: Wrong image for pod: daemon-set-n7czw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Feb  9 00:51:35.300: INFO: Pod daemon-set-5qx4m is not available
    STEP: Check that daemon pods are still running on every node of the cluster. 02/09/23 00:51:35.308
    Feb  9 00:51:35.319: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Feb  9 00:51:35.319: INFO: Node aks-nodes-15799032-vmss000001 is running 0 daemon pod, expected 1
    Feb  9 00:51:36.333: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Feb  9 00:51:36.333: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 02/09/23 00:51:36.36
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3204, will wait for the garbage collector to delete the pods 02/09/23 00:51:36.36
    Feb  9 00:51:36.425: INFO: Deleting DaemonSet.extensions daemon-set took: 9.536368ms
    Feb  9 00:51:36.525: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.310512ms
    Feb  9 00:51:39.132: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 00:51:39.132: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Feb  9 00:51:39.137: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14004"},"items":null}

    Feb  9 00:51:39.142: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14004"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:51:39.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-3204" for this suite. 02/09/23 00:51:39.173
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:51:39.183
Feb  9 00:51:39.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 00:51:39.184
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:39.202
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:39.206
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147
STEP: Creating a pod to test emptydir 0777 on tmpfs 02/09/23 00:51:39.21
Feb  9 00:51:39.221: INFO: Waiting up to 5m0s for pod "pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd" in namespace "emptydir-8937" to be "Succeeded or Failed"
Feb  9 00:51:39.228: INFO: Pod "pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd": Phase="Pending", Reason="", readiness=false. Elapsed: 6.369545ms
Feb  9 00:51:41.234: INFO: Pod "pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012775797s
Feb  9 00:51:43.234: INFO: Pod "pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012853373s
STEP: Saw pod success 02/09/23 00:51:43.234
Feb  9 00:51:43.234: INFO: Pod "pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd" satisfied condition "Succeeded or Failed"
Feb  9 00:51:43.240: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd container test-container: <nil>
STEP: delete the pod 02/09/23 00:51:43.251
Feb  9 00:51:43.269: INFO: Waiting for pod pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd to disappear
Feb  9 00:51:43.274: INFO: Pod pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 00:51:43.274: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-8937" for this suite. 02/09/23 00:51:43.282
------------------------------
â€¢ [4.107 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:51:39.183
    Feb  9 00:51:39.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 00:51:39.184
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:39.202
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:39.206
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:147
    STEP: Creating a pod to test emptydir 0777 on tmpfs 02/09/23 00:51:39.21
    Feb  9 00:51:39.221: INFO: Waiting up to 5m0s for pod "pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd" in namespace "emptydir-8937" to be "Succeeded or Failed"
    Feb  9 00:51:39.228: INFO: Pod "pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd": Phase="Pending", Reason="", readiness=false. Elapsed: 6.369545ms
    Feb  9 00:51:41.234: INFO: Pod "pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012775797s
    Feb  9 00:51:43.234: INFO: Pod "pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012853373s
    STEP: Saw pod success 02/09/23 00:51:43.234
    Feb  9 00:51:43.234: INFO: Pod "pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd" satisfied condition "Succeeded or Failed"
    Feb  9 00:51:43.240: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd container test-container: <nil>
    STEP: delete the pod 02/09/23 00:51:43.251
    Feb  9 00:51:43.269: INFO: Waiting for pod pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd to disappear
    Feb  9 00:51:43.274: INFO: Pod pod-c23a3ca0-2c06-4bc3-9b04-3dc9b4d614fd no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:51:43.274: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-8937" for this suite. 02/09/23 00:51:43.282
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:51:43.292
Feb  9 00:51:43.292: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir-wrapper 02/09/23 00:51:43.292
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:43.308
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:43.312
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189
STEP: Creating 50 configmaps 02/09/23 00:51:43.316
STEP: Creating RC which spawns configmap-volume pods 02/09/23 00:51:43.615
Feb  9 00:51:43.654: INFO: Pod name wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6: Found 1 pods out of 5
Feb  9 00:51:48.668: INFO: Pod name wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6: Found 5 pods out of 5
STEP: Ensuring each pod is running 02/09/23 00:51:48.668
Feb  9 00:51:48.668: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:51:48.674: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v": Phase="Pending", Reason="", readiness=false. Elapsed: 5.546643ms
Feb  9 00:51:50.682: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014213974s
Feb  9 00:51:52.681: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v": Phase="Pending", Reason="", readiness=false. Elapsed: 4.012960224s
Feb  9 00:51:54.682: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v": Phase="Pending", Reason="", readiness=false. Elapsed: 6.013719989s
Feb  9 00:51:56.682: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v": Phase="Pending", Reason="", readiness=false. Elapsed: 8.014433054s
Feb  9 00:51:58.682: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v": Phase="Running", Reason="", readiness=true. Elapsed: 10.013798135s
Feb  9 00:51:58.682: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v" satisfied condition "running"
Feb  9 00:51:58.682: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-jcfms" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:51:58.687: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-jcfms": Phase="Running", Reason="", readiness=true. Elapsed: 5.555199ms
Feb  9 00:51:58.687: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-jcfms" satisfied condition "running"
Feb  9 00:51:58.687: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-rx8gw" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:51:58.693: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-rx8gw": Phase="Running", Reason="", readiness=true. Elapsed: 5.486ms
Feb  9 00:51:58.693: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-rx8gw" satisfied condition "running"
Feb  9 00:51:58.693: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-sdjlj" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:51:58.698: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-sdjlj": Phase="Running", Reason="", readiness=true. Elapsed: 5.447599ms
Feb  9 00:51:58.698: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-sdjlj" satisfied condition "running"
Feb  9 00:51:58.698: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-sjc6p" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:51:58.704: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-sjc6p": Phase="Running", Reason="", readiness=true. Elapsed: 5.093099ms
Feb  9 00:51:58.704: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-sjc6p" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6 in namespace emptydir-wrapper-7920, will wait for the garbage collector to delete the pods 02/09/23 00:51:58.704
Feb  9 00:51:58.770: INFO: Deleting ReplicationController wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6 took: 9.275199ms
Feb  9 00:51:58.871: INFO: Terminating ReplicationController wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6 pods took: 100.498487ms
STEP: Creating RC which spawns configmap-volume pods 02/09/23 00:52:02.08
Feb  9 00:52:02.102: INFO: Pod name wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59: Found 0 pods out of 5
Feb  9 00:52:07.113: INFO: Pod name wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59: Found 5 pods out of 5
STEP: Ensuring each pod is running 02/09/23 00:52:07.113
Feb  9 00:52:07.113: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:52:07.119: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz": Phase="Pending", Reason="", readiness=false. Elapsed: 5.576745ms
Feb  9 00:52:09.128: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014084371s
Feb  9 00:52:11.128: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz": Phase="Pending", Reason="", readiness=false. Elapsed: 4.014632032s
Feb  9 00:52:13.129: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz": Phase="Pending", Reason="", readiness=false. Elapsed: 6.015425495s
Feb  9 00:52:15.126: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz": Phase="Pending", Reason="", readiness=false. Elapsed: 8.012675404s
Feb  9 00:52:17.126: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz": Phase="Running", Reason="", readiness=true. Elapsed: 10.012848135s
Feb  9 00:52:17.126: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz" satisfied condition "running"
Feb  9 00:52:17.126: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-7gxxd" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:52:17.132: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-7gxxd": Phase="Running", Reason="", readiness=true. Elapsed: 5.134641ms
Feb  9 00:52:17.132: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-7gxxd" satisfied condition "running"
Feb  9 00:52:17.132: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-l2dxd" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:52:17.137: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-l2dxd": Phase="Pending", Reason="", readiness=false. Elapsed: 5.160041ms
Feb  9 00:52:19.144: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-l2dxd": Phase="Running", Reason="", readiness=true. Elapsed: 2.012747231s
Feb  9 00:52:19.144: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-l2dxd" satisfied condition "running"
Feb  9 00:52:19.144: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-vf8rd" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:52:19.150: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-vf8rd": Phase="Running", Reason="", readiness=true. Elapsed: 5.383143ms
Feb  9 00:52:19.150: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-vf8rd" satisfied condition "running"
Feb  9 00:52:19.150: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-xlt9s" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:52:19.155: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-xlt9s": Phase="Running", Reason="", readiness=true. Elapsed: 5.413943ms
Feb  9 00:52:19.155: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-xlt9s" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59 in namespace emptydir-wrapper-7920, will wait for the garbage collector to delete the pods 02/09/23 00:52:19.155
Feb  9 00:52:19.221: INFO: Deleting ReplicationController wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59 took: 9.881278ms
Feb  9 00:52:19.322: INFO: Terminating ReplicationController wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59 pods took: 100.876699ms
STEP: Creating RC which spawns configmap-volume pods 02/09/23 00:52:22.332
Feb  9 00:52:22.356: INFO: Pod name wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd: Found 0 pods out of 5
Feb  9 00:52:27.367: INFO: Pod name wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd: Found 5 pods out of 5
STEP: Ensuring each pod is running 02/09/23 00:52:27.367
Feb  9 00:52:27.368: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:52:27.374: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.818952ms
Feb  9 00:52:29.382: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014824954s
Feb  9 00:52:31.382: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01469719s
Feb  9 00:52:33.383: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.015066927s
Feb  9 00:52:35.382: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8": Phase="Pending", Reason="", readiness=false. Elapsed: 8.014488362s
Feb  9 00:52:37.382: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8": Phase="Running", Reason="", readiness=true. Elapsed: 10.014753106s
Feb  9 00:52:37.382: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8" satisfied condition "running"
Feb  9 00:52:37.382: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-48q5n" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:52:37.388: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-48q5n": Phase="Running", Reason="", readiness=true. Elapsed: 5.212634ms
Feb  9 00:52:37.388: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-48q5n" satisfied condition "running"
Feb  9 00:52:37.388: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-fpd9n" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:52:37.394: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-fpd9n": Phase="Running", Reason="", readiness=true. Elapsed: 5.823738ms
Feb  9 00:52:37.394: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-fpd9n" satisfied condition "running"
Feb  9 00:52:37.394: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-qzr9d" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:52:37.399: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-qzr9d": Phase="Running", Reason="", readiness=true. Elapsed: 5.783038ms
Feb  9 00:52:37.399: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-qzr9d" satisfied condition "running"
Feb  9 00:52:37.399: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-zm7th" in namespace "emptydir-wrapper-7920" to be "running"
Feb  9 00:52:37.404: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-zm7th": Phase="Pending", Reason="", readiness=false. Elapsed: 4.930332ms
Feb  9 00:52:39.414: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-zm7th": Phase="Running", Reason="", readiness=true. Elapsed: 2.014386825s
Feb  9 00:52:39.414: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-zm7th" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd in namespace emptydir-wrapper-7920, will wait for the garbage collector to delete the pods 02/09/23 00:52:39.414
Feb  9 00:52:39.482: INFO: Deleting ReplicationController wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd took: 11.165775ms
Feb  9 00:52:39.582: INFO: Terminating ReplicationController wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd pods took: 100.224968ms
STEP: Cleaning up the configMaps 02/09/23 00:52:42.283
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 00:52:42.739: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-wrapper-7920" for this suite. 02/09/23 00:52:42.747
------------------------------
â€¢ [SLOW TEST] [59.465 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:51:43.292
    Feb  9 00:51:43.292: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir-wrapper 02/09/23 00:51:43.292
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:51:43.308
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:51:43.312
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should not cause race condition when used for configmaps [Serial] [Conformance]
      test/e2e/storage/empty_dir_wrapper.go:189
    STEP: Creating 50 configmaps 02/09/23 00:51:43.316
    STEP: Creating RC which spawns configmap-volume pods 02/09/23 00:51:43.615
    Feb  9 00:51:43.654: INFO: Pod name wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6: Found 1 pods out of 5
    Feb  9 00:51:48.668: INFO: Pod name wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6: Found 5 pods out of 5
    STEP: Ensuring each pod is running 02/09/23 00:51:48.668
    Feb  9 00:51:48.668: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:51:48.674: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v": Phase="Pending", Reason="", readiness=false. Elapsed: 5.546643ms
    Feb  9 00:51:50.682: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014213974s
    Feb  9 00:51:52.681: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v": Phase="Pending", Reason="", readiness=false. Elapsed: 4.012960224s
    Feb  9 00:51:54.682: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v": Phase="Pending", Reason="", readiness=false. Elapsed: 6.013719989s
    Feb  9 00:51:56.682: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v": Phase="Pending", Reason="", readiness=false. Elapsed: 8.014433054s
    Feb  9 00:51:58.682: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v": Phase="Running", Reason="", readiness=true. Elapsed: 10.013798135s
    Feb  9 00:51:58.682: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-dhr2v" satisfied condition "running"
    Feb  9 00:51:58.682: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-jcfms" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:51:58.687: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-jcfms": Phase="Running", Reason="", readiness=true. Elapsed: 5.555199ms
    Feb  9 00:51:58.687: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-jcfms" satisfied condition "running"
    Feb  9 00:51:58.687: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-rx8gw" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:51:58.693: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-rx8gw": Phase="Running", Reason="", readiness=true. Elapsed: 5.486ms
    Feb  9 00:51:58.693: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-rx8gw" satisfied condition "running"
    Feb  9 00:51:58.693: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-sdjlj" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:51:58.698: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-sdjlj": Phase="Running", Reason="", readiness=true. Elapsed: 5.447599ms
    Feb  9 00:51:58.698: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-sdjlj" satisfied condition "running"
    Feb  9 00:51:58.698: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-sjc6p" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:51:58.704: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-sjc6p": Phase="Running", Reason="", readiness=true. Elapsed: 5.093099ms
    Feb  9 00:51:58.704: INFO: Pod "wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6-sjc6p" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6 in namespace emptydir-wrapper-7920, will wait for the garbage collector to delete the pods 02/09/23 00:51:58.704
    Feb  9 00:51:58.770: INFO: Deleting ReplicationController wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6 took: 9.275199ms
    Feb  9 00:51:58.871: INFO: Terminating ReplicationController wrapped-volume-race-0c17c50f-8aae-4731-9856-c6b9d70970e6 pods took: 100.498487ms
    STEP: Creating RC which spawns configmap-volume pods 02/09/23 00:52:02.08
    Feb  9 00:52:02.102: INFO: Pod name wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59: Found 0 pods out of 5
    Feb  9 00:52:07.113: INFO: Pod name wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59: Found 5 pods out of 5
    STEP: Ensuring each pod is running 02/09/23 00:52:07.113
    Feb  9 00:52:07.113: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:52:07.119: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz": Phase="Pending", Reason="", readiness=false. Elapsed: 5.576745ms
    Feb  9 00:52:09.128: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014084371s
    Feb  9 00:52:11.128: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz": Phase="Pending", Reason="", readiness=false. Elapsed: 4.014632032s
    Feb  9 00:52:13.129: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz": Phase="Pending", Reason="", readiness=false. Elapsed: 6.015425495s
    Feb  9 00:52:15.126: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz": Phase="Pending", Reason="", readiness=false. Elapsed: 8.012675404s
    Feb  9 00:52:17.126: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz": Phase="Running", Reason="", readiness=true. Elapsed: 10.012848135s
    Feb  9 00:52:17.126: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-4q6mz" satisfied condition "running"
    Feb  9 00:52:17.126: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-7gxxd" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:52:17.132: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-7gxxd": Phase="Running", Reason="", readiness=true. Elapsed: 5.134641ms
    Feb  9 00:52:17.132: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-7gxxd" satisfied condition "running"
    Feb  9 00:52:17.132: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-l2dxd" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:52:17.137: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-l2dxd": Phase="Pending", Reason="", readiness=false. Elapsed: 5.160041ms
    Feb  9 00:52:19.144: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-l2dxd": Phase="Running", Reason="", readiness=true. Elapsed: 2.012747231s
    Feb  9 00:52:19.144: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-l2dxd" satisfied condition "running"
    Feb  9 00:52:19.144: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-vf8rd" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:52:19.150: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-vf8rd": Phase="Running", Reason="", readiness=true. Elapsed: 5.383143ms
    Feb  9 00:52:19.150: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-vf8rd" satisfied condition "running"
    Feb  9 00:52:19.150: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-xlt9s" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:52:19.155: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-xlt9s": Phase="Running", Reason="", readiness=true. Elapsed: 5.413943ms
    Feb  9 00:52:19.155: INFO: Pod "wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59-xlt9s" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59 in namespace emptydir-wrapper-7920, will wait for the garbage collector to delete the pods 02/09/23 00:52:19.155
    Feb  9 00:52:19.221: INFO: Deleting ReplicationController wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59 took: 9.881278ms
    Feb  9 00:52:19.322: INFO: Terminating ReplicationController wrapped-volume-race-bdd8817b-d29b-4039-a61c-6949fe034d59 pods took: 100.876699ms
    STEP: Creating RC which spawns configmap-volume pods 02/09/23 00:52:22.332
    Feb  9 00:52:22.356: INFO: Pod name wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd: Found 0 pods out of 5
    Feb  9 00:52:27.367: INFO: Pod name wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd: Found 5 pods out of 5
    STEP: Ensuring each pod is running 02/09/23 00:52:27.367
    Feb  9 00:52:27.368: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:52:27.374: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.818952ms
    Feb  9 00:52:29.382: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014824954s
    Feb  9 00:52:31.382: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01469719s
    Feb  9 00:52:33.383: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.015066927s
    Feb  9 00:52:35.382: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8": Phase="Pending", Reason="", readiness=false. Elapsed: 8.014488362s
    Feb  9 00:52:37.382: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8": Phase="Running", Reason="", readiness=true. Elapsed: 10.014753106s
    Feb  9 00:52:37.382: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-2dmt8" satisfied condition "running"
    Feb  9 00:52:37.382: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-48q5n" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:52:37.388: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-48q5n": Phase="Running", Reason="", readiness=true. Elapsed: 5.212634ms
    Feb  9 00:52:37.388: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-48q5n" satisfied condition "running"
    Feb  9 00:52:37.388: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-fpd9n" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:52:37.394: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-fpd9n": Phase="Running", Reason="", readiness=true. Elapsed: 5.823738ms
    Feb  9 00:52:37.394: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-fpd9n" satisfied condition "running"
    Feb  9 00:52:37.394: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-qzr9d" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:52:37.399: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-qzr9d": Phase="Running", Reason="", readiness=true. Elapsed: 5.783038ms
    Feb  9 00:52:37.399: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-qzr9d" satisfied condition "running"
    Feb  9 00:52:37.399: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-zm7th" in namespace "emptydir-wrapper-7920" to be "running"
    Feb  9 00:52:37.404: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-zm7th": Phase="Pending", Reason="", readiness=false. Elapsed: 4.930332ms
    Feb  9 00:52:39.414: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-zm7th": Phase="Running", Reason="", readiness=true. Elapsed: 2.014386825s
    Feb  9 00:52:39.414: INFO: Pod "wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd-zm7th" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd in namespace emptydir-wrapper-7920, will wait for the garbage collector to delete the pods 02/09/23 00:52:39.414
    Feb  9 00:52:39.482: INFO: Deleting ReplicationController wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd took: 11.165775ms
    Feb  9 00:52:39.582: INFO: Terminating ReplicationController wrapped-volume-race-be19a169-43d5-437e-98e4-a68cc6b9a7fd pods took: 100.224968ms
    STEP: Cleaning up the configMaps 02/09/23 00:52:42.283
    [AfterEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:52:42.739: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-wrapper-7920" for this suite. 02/09/23 00:52:42.747
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:52:42.757
Feb  9 00:52:42.757: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename taint-multiple-pods 02/09/23 00:52:42.758
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:52:42.773
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:52:42.776
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:383
Feb  9 00:52:42.780: INFO: Waiting up to 1m0s for all nodes to be ready
Feb  9 00:53:42.809: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455
Feb  9 00:53:42.816: INFO: Starting informer...
STEP: Starting pods... 02/09/23 00:53:42.816
Feb  9 00:53:43.047: INFO: Pod1 is running on aks-nodes-15799032-vmss000000. Tainting Node
Feb  9 00:53:43.260: INFO: Waiting up to 5m0s for pod "taint-eviction-b1" in namespace "taint-multiple-pods-341" to be "running"
Feb  9 00:53:43.267: INFO: Pod "taint-eviction-b1": Phase="Pending", Reason="", readiness=false. Elapsed: 6.464231ms
Feb  9 00:53:45.274: INFO: Pod "taint-eviction-b1": Phase="Running", Reason="", readiness=true. Elapsed: 2.013356145s
Feb  9 00:53:45.274: INFO: Pod "taint-eviction-b1" satisfied condition "running"
Feb  9 00:53:45.274: INFO: Waiting up to 5m0s for pod "taint-eviction-b2" in namespace "taint-multiple-pods-341" to be "running"
Feb  9 00:53:45.280: INFO: Pod "taint-eviction-b2": Phase="Running", Reason="", readiness=true. Elapsed: 6.20763ms
Feb  9 00:53:45.280: INFO: Pod "taint-eviction-b2" satisfied condition "running"
Feb  9 00:53:45.280: INFO: Pod2 is running on aks-nodes-15799032-vmss000000. Tainting Node
STEP: Trying to apply a taint on the Node 02/09/23 00:53:45.28
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 02/09/23 00:53:45.3
STEP: Waiting for Pod1 and Pod2 to be deleted 02/09/23 00:53:45.306
Feb  9 00:53:51.385: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Feb  9 00:54:11.424: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 02/09/23 00:54:11.445
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:54:11.450: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "taint-multiple-pods-341" for this suite. 02/09/23 00:54:11.458
------------------------------
â€¢ [SLOW TEST] [88.711 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:52:42.757
    Feb  9 00:52:42.757: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename taint-multiple-pods 02/09/23 00:52:42.758
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:52:42.773
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:52:42.776
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/node/taints.go:383
    Feb  9 00:52:42.780: INFO: Waiting up to 1m0s for all nodes to be ready
    Feb  9 00:53:42.809: INFO: Waiting for terminating namespaces to be deleted...
    [It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
      test/e2e/node/taints.go:455
    Feb  9 00:53:42.816: INFO: Starting informer...
    STEP: Starting pods... 02/09/23 00:53:42.816
    Feb  9 00:53:43.047: INFO: Pod1 is running on aks-nodes-15799032-vmss000000. Tainting Node
    Feb  9 00:53:43.260: INFO: Waiting up to 5m0s for pod "taint-eviction-b1" in namespace "taint-multiple-pods-341" to be "running"
    Feb  9 00:53:43.267: INFO: Pod "taint-eviction-b1": Phase="Pending", Reason="", readiness=false. Elapsed: 6.464231ms
    Feb  9 00:53:45.274: INFO: Pod "taint-eviction-b1": Phase="Running", Reason="", readiness=true. Elapsed: 2.013356145s
    Feb  9 00:53:45.274: INFO: Pod "taint-eviction-b1" satisfied condition "running"
    Feb  9 00:53:45.274: INFO: Waiting up to 5m0s for pod "taint-eviction-b2" in namespace "taint-multiple-pods-341" to be "running"
    Feb  9 00:53:45.280: INFO: Pod "taint-eviction-b2": Phase="Running", Reason="", readiness=true. Elapsed: 6.20763ms
    Feb  9 00:53:45.280: INFO: Pod "taint-eviction-b2" satisfied condition "running"
    Feb  9 00:53:45.280: INFO: Pod2 is running on aks-nodes-15799032-vmss000000. Tainting Node
    STEP: Trying to apply a taint on the Node 02/09/23 00:53:45.28
    STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 02/09/23 00:53:45.3
    STEP: Waiting for Pod1 and Pod2 to be deleted 02/09/23 00:53:45.306
    Feb  9 00:53:51.385: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
    Feb  9 00:54:11.424: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
    STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 02/09/23 00:54:11.445
    [AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:54:11.450: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "taint-multiple-pods-341" for this suite. 02/09/23 00:54:11.458
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:54:11.47
Feb  9 00:54:11.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename crd-webhook 02/09/23 00:54:11.47
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:11.484
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:11.488
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert 02/09/23 00:54:11.492
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 02/09/23 00:54:12.128
STEP: Deploying the custom resource conversion webhook pod 02/09/23 00:54:12.135
STEP: Wait for the deployment to be ready 02/09/23 00:54:12.151
Feb  9 00:54:12.164: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 00:54:14.181
STEP: Verifying the service has paired with the endpoint 02/09/23 00:54:14.195
Feb  9 00:54:15.195: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184
Feb  9 00:54:15.201: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Creating a v1 custom resource 02/09/23 00:54:17.815
STEP: Create a v2 custom resource 02/09/23 00:54:17.838
STEP: List CRs in v1 02/09/23 00:54:17.912
STEP: List CRs in v2 02/09/23 00:54:17.92
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:54:18.448: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-webhook-5667" for this suite. 02/09/23 00:54:18.505
------------------------------
â€¢ [SLOW TEST] [7.044 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:54:11.47
    Feb  9 00:54:11.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename crd-webhook 02/09/23 00:54:11.47
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:11.484
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:11.488
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:128
    STEP: Setting up server cert 02/09/23 00:54:11.492
    STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 02/09/23 00:54:12.128
    STEP: Deploying the custom resource conversion webhook pod 02/09/23 00:54:12.135
    STEP: Wait for the deployment to be ready 02/09/23 00:54:12.151
    Feb  9 00:54:12.164: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 00:54:14.181
    STEP: Verifying the service has paired with the endpoint 02/09/23 00:54:14.195
    Feb  9 00:54:15.195: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
    [It] should be able to convert a non homogeneous list of CRs [Conformance]
      test/e2e/apimachinery/crd_conversion_webhook.go:184
    Feb  9 00:54:15.201: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Creating a v1 custom resource 02/09/23 00:54:17.815
    STEP: Create a v2 custom resource 02/09/23 00:54:17.838
    STEP: List CRs in v1 02/09/23 00:54:17.912
    STEP: List CRs in v2 02/09/23 00:54:17.92
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:54:18.448: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:139
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-webhook-5667" for this suite. 02/09/23 00:54:18.505
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207
[BeforeEach] [sig-instrumentation] Events API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:54:18.514
Feb  9 00:54:18.514: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename events 02/09/23 00:54:18.514
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:18.536
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:18.545
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207
STEP: Create set of events 02/09/23 00:54:18.549
STEP: get a list of Events with a label in the current namespace 02/09/23 00:54:18.567
STEP: delete a list of events 02/09/23 00:54:18.572
Feb  9 00:54:18.573: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity 02/09/23 00:54:18.609
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/node/init/init.go:32
Feb  9 00:54:18.614: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events API
  tear down framework | framework.go:193
STEP: Destroying namespace "events-900" for this suite. 02/09/23 00:54:18.62
------------------------------
â€¢ [0.115 seconds]
[sig-instrumentation] Events API
test/e2e/instrumentation/common/framework.go:23
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:54:18.514
    Feb  9 00:54:18.514: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename events 02/09/23 00:54:18.514
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:18.536
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:18.545
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/instrumentation/events.go:84
    [It] should delete a collection of events [Conformance]
      test/e2e/instrumentation/events.go:207
    STEP: Create set of events 02/09/23 00:54:18.549
    STEP: get a list of Events with a label in the current namespace 02/09/23 00:54:18.567
    STEP: delete a list of events 02/09/23 00:54:18.572
    Feb  9 00:54:18.573: INFO: requesting DeleteCollection of events
    STEP: check that the list of events matches the requested quantity 02/09/23 00:54:18.609
    [AfterEach] [sig-instrumentation] Events API
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:54:18.614: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-900" for this suite. 02/09/23 00:54:18.62
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:54:18.63
Feb  9 00:54:18.630: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename deployment 02/09/23 00:54:18.631
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:18.645
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:18.649
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150
Feb  9 00:54:18.653: INFO: Creating simple deployment test-new-deployment
Feb  9 00:54:18.670: INFO: deployment "test-new-deployment" doesn't have the required revision set
STEP: getting scale subresource 02/09/23 00:54:20.691
STEP: updating a scale subresource 02/09/23 00:54:20.696
STEP: verifying the deployment Spec.Replicas was modified 02/09/23 00:54:20.704
STEP: Patch a scale subresource 02/09/23 00:54:20.709
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Feb  9 00:54:20.728: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-4918  ae663498-06d4-497f-8d8b-634095bee45a 15719 3 2023-02-09 00:54:18 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-02-09 00:54:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 00:54:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003bf87a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-02-09 00:54:19 +0000 UTC,LastTransitionTime:2023-02-09 00:54:19 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-7f5969cbc7" has successfully progressed.,LastUpdateTime:2023-02-09 00:54:19 +0000 UTC,LastTransitionTime:2023-02-09 00:54:18 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Feb  9 00:54:20.733: INFO: New ReplicaSet "test-new-deployment-7f5969cbc7" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-7f5969cbc7  deployment-4918  0717d887-ed41-442f-b280-5b3bc9d5779d 15726 2 2023-02-09 00:54:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment ae663498-06d4-497f-8d8b-634095bee45a 0xc0053c5657 0xc0053c5658}] [] [{kube-controller-manager Update apps/v1 2023-02-09 00:54:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ae663498-06d4-497f-8d8b-634095bee45a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 00:54:20 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0053c56e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Feb  9 00:54:20.739: INFO: Pod "test-new-deployment-7f5969cbc7-f9d6z" is not available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-f9d6z test-new-deployment-7f5969cbc7- deployment-4918  0ad29827-6501-487b-a1d9-b7d11e7a9179 15722 0 2023-02-09 00:54:20 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 0717d887-ed41-442f-b280-5b3bc9d5779d 0xc0053c5ac7 0xc0053c5ac8}] [] [{kube-controller-manager Update v1 2023-02-09 00:54:20 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0717d887-ed41-442f-b280-5b3bc9d5779d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xb8w4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xb8w4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:54:20 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 00:54:20.739: INFO: Pod "test-new-deployment-7f5969cbc7-p8v52" is available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-p8v52 test-new-deployment-7f5969cbc7- deployment-4918  6bd71a6a-c00f-4bcc-9e35-7db5dc57de88 15711 0 2023-02-09 00:54:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 0717d887-ed41-442f-b280-5b3bc9d5779d 0xc0053c5c20 0xc0053c5c21}] [] [{kube-controller-manager Update v1 2023-02-09 00:54:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0717d887-ed41-442f-b280-5b3bc9d5779d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 00:54:19 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.64\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5tdxx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5tdxx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:54:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:54:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:54:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:54:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.64,StartTime:2023-02-09 00:54:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 00:54:19 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://60e6d38458b823687fd61f85ff0752c88e30ff7663a389ac2bf475d4539d14ec,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.64,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Feb  9 00:54:20.739: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-4918" for this suite. 02/09/23 00:54:20.747
------------------------------
â€¢ [2.126 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:54:18.63
    Feb  9 00:54:18.630: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename deployment 02/09/23 00:54:18.631
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:18.645
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:18.649
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] Deployment should have a working scale subresource [Conformance]
      test/e2e/apps/deployment.go:150
    Feb  9 00:54:18.653: INFO: Creating simple deployment test-new-deployment
    Feb  9 00:54:18.670: INFO: deployment "test-new-deployment" doesn't have the required revision set
    STEP: getting scale subresource 02/09/23 00:54:20.691
    STEP: updating a scale subresource 02/09/23 00:54:20.696
    STEP: verifying the deployment Spec.Replicas was modified 02/09/23 00:54:20.704
    STEP: Patch a scale subresource 02/09/23 00:54:20.709
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Feb  9 00:54:20.728: INFO: Deployment "test-new-deployment":
    &Deployment{ObjectMeta:{test-new-deployment  deployment-4918  ae663498-06d4-497f-8d8b-634095bee45a 15719 3 2023-02-09 00:54:18 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-02-09 00:54:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 00:54:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003bf87a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-02-09 00:54:19 +0000 UTC,LastTransitionTime:2023-02-09 00:54:19 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-7f5969cbc7" has successfully progressed.,LastUpdateTime:2023-02-09 00:54:19 +0000 UTC,LastTransitionTime:2023-02-09 00:54:18 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Feb  9 00:54:20.733: INFO: New ReplicaSet "test-new-deployment-7f5969cbc7" of Deployment "test-new-deployment":
    &ReplicaSet{ObjectMeta:{test-new-deployment-7f5969cbc7  deployment-4918  0717d887-ed41-442f-b280-5b3bc9d5779d 15726 2 2023-02-09 00:54:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment ae663498-06d4-497f-8d8b-634095bee45a 0xc0053c5657 0xc0053c5658}] [] [{kube-controller-manager Update apps/v1 2023-02-09 00:54:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ae663498-06d4-497f-8d8b-634095bee45a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 00:54:20 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0053c56e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Feb  9 00:54:20.739: INFO: Pod "test-new-deployment-7f5969cbc7-f9d6z" is not available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-f9d6z test-new-deployment-7f5969cbc7- deployment-4918  0ad29827-6501-487b-a1d9-b7d11e7a9179 15722 0 2023-02-09 00:54:20 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 0717d887-ed41-442f-b280-5b3bc9d5779d 0xc0053c5ac7 0xc0053c5ac8}] [] [{kube-controller-manager Update v1 2023-02-09 00:54:20 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0717d887-ed41-442f-b280-5b3bc9d5779d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xb8w4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xb8w4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:54:20 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 00:54:20.739: INFO: Pod "test-new-deployment-7f5969cbc7-p8v52" is available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-p8v52 test-new-deployment-7f5969cbc7- deployment-4918  6bd71a6a-c00f-4bcc-9e35-7db5dc57de88 15711 0 2023-02-09 00:54:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 0717d887-ed41-442f-b280-5b3bc9d5779d 0xc0053c5c20 0xc0053c5c21}] [] [{kube-controller-manager Update v1 2023-02-09 00:54:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0717d887-ed41-442f-b280-5b3bc9d5779d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 00:54:19 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.64\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5tdxx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5tdxx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:54:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:54:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:54:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 00:54:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.64,StartTime:2023-02-09 00:54:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 00:54:19 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://60e6d38458b823687fd61f85ff0752c88e30ff7663a389ac2bf475d4539d14ec,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.64,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:54:20.739: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-4918" for this suite. 02/09/23 00:54:20.747
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/apps/statefulset.go:977
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:54:20.759
Feb  9 00:54:20.759: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename statefulset 02/09/23 00:54:20.759
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:20.779
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:20.783
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-9589 02/09/23 00:54:20.788
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/apps/statefulset.go:977
STEP: Creating statefulset ss in namespace statefulset-9589 02/09/23 00:54:20.803
Feb  9 00:54:20.819: INFO: Found 0 stateful pods, waiting for 1
Feb  9 00:54:30.828: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label 02/09/23 00:54:30.839
STEP: Getting /status 02/09/23 00:54:30.85
Feb  9 00:54:30.857: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status 02/09/23 00:54:30.857
Feb  9 00:54:30.870: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated 02/09/23 00:54:30.87
Feb  9 00:54:30.873: INFO: Observed &StatefulSet event: ADDED
Feb  9 00:54:30.873: INFO: Found Statefulset ss in namespace statefulset-9589 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Feb  9 00:54:30.873: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status 02/09/23 00:54:30.873
Feb  9 00:54:30.873: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Feb  9 00:54:30.882: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched 02/09/23 00:54:30.882
Feb  9 00:54:30.885: INFO: Observed &StatefulSet event: ADDED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Feb  9 00:54:30.885: INFO: Deleting all statefulset in ns statefulset-9589
Feb  9 00:54:30.890: INFO: Scaling statefulset ss to 0
Feb  9 00:54:40.916: INFO: Waiting for statefulset status.replicas updated to 0
Feb  9 00:54:40.921: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Feb  9 00:54:40.941: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-9589" for this suite. 02/09/23 00:54:40.949
------------------------------
â€¢ [SLOW TEST] [20.199 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/apps/statefulset.go:977

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:54:20.759
    Feb  9 00:54:20.759: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename statefulset 02/09/23 00:54:20.759
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:20.779
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:20.783
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-9589 02/09/23 00:54:20.788
    [It] should validate Statefulset Status endpoints [Conformance]
      test/e2e/apps/statefulset.go:977
    STEP: Creating statefulset ss in namespace statefulset-9589 02/09/23 00:54:20.803
    Feb  9 00:54:20.819: INFO: Found 0 stateful pods, waiting for 1
    Feb  9 00:54:30.828: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Patch Statefulset to include a label 02/09/23 00:54:30.839
    STEP: Getting /status 02/09/23 00:54:30.85
    Feb  9 00:54:30.857: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
    STEP: updating the StatefulSet Status 02/09/23 00:54:30.857
    Feb  9 00:54:30.870: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the statefulset status to be updated 02/09/23 00:54:30.87
    Feb  9 00:54:30.873: INFO: Observed &StatefulSet event: ADDED
    Feb  9 00:54:30.873: INFO: Found Statefulset ss in namespace statefulset-9589 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Feb  9 00:54:30.873: INFO: Statefulset ss has an updated status
    STEP: patching the Statefulset Status 02/09/23 00:54:30.873
    Feb  9 00:54:30.873: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Feb  9 00:54:30.882: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Statefulset status to be patched 02/09/23 00:54:30.882
    Feb  9 00:54:30.885: INFO: Observed &StatefulSet event: ADDED
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Feb  9 00:54:30.885: INFO: Deleting all statefulset in ns statefulset-9589
    Feb  9 00:54:30.890: INFO: Scaling statefulset ss to 0
    Feb  9 00:54:40.916: INFO: Waiting for statefulset status.replicas updated to 0
    Feb  9 00:54:40.921: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:54:40.941: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-9589" for this suite. 02/09/23 00:54:40.949
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Projected combined
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44
[BeforeEach] [sig-storage] Projected combined
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:54:40.958
Feb  9 00:54:40.958: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 00:54:40.958
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:40.972
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:40.976
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/metrics/init/init.go:31
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44
STEP: Creating configMap with name configmap-projected-all-test-volume-35d4e47f-cb5f-414e-b242-8d0f7c975a36 02/09/23 00:54:40.981
STEP: Creating secret with name secret-projected-all-test-volume-c9ab4763-43bb-4a2d-9f37-0b2502066fb9 02/09/23 00:54:40.986
STEP: Creating a pod to test Check all projections for projected volume plugin 02/09/23 00:54:40.992
Feb  9 00:54:41.005: INFO: Waiting up to 5m0s for pod "projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8" in namespace "projected-347" to be "Succeeded or Failed"
Feb  9 00:54:41.011: INFO: Pod "projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.737732ms
Feb  9 00:54:43.018: INFO: Pod "projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012781963s
Feb  9 00:54:45.019: INFO: Pod "projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01385917s
STEP: Saw pod success 02/09/23 00:54:45.019
Feb  9 00:54:45.019: INFO: Pod "projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8" satisfied condition "Succeeded or Failed"
Feb  9 00:54:45.024: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8 container projected-all-volume-test: <nil>
STEP: delete the pod 02/09/23 00:54:45.036
Feb  9 00:54:45.053: INFO: Waiting for pod projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8 to disappear
Feb  9 00:54:45.058: INFO: Pod projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/node/init/init.go:32
Feb  9 00:54:45.058: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected combined
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected combined
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected combined
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-347" for this suite. 02/09/23 00:54:45.066
------------------------------
â€¢ [4.118 seconds]
[sig-storage] Projected combined
test/e2e/common/storage/framework.go:23
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected combined
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:54:40.958
    Feb  9 00:54:40.958: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 00:54:40.958
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:40.972
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:40.976
    [BeforeEach] [sig-storage] Projected combined
      test/e2e/framework/metrics/init/init.go:31
    [It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
      test/e2e/common/storage/projected_combined.go:44
    STEP: Creating configMap with name configmap-projected-all-test-volume-35d4e47f-cb5f-414e-b242-8d0f7c975a36 02/09/23 00:54:40.981
    STEP: Creating secret with name secret-projected-all-test-volume-c9ab4763-43bb-4a2d-9f37-0b2502066fb9 02/09/23 00:54:40.986
    STEP: Creating a pod to test Check all projections for projected volume plugin 02/09/23 00:54:40.992
    Feb  9 00:54:41.005: INFO: Waiting up to 5m0s for pod "projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8" in namespace "projected-347" to be "Succeeded or Failed"
    Feb  9 00:54:41.011: INFO: Pod "projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.737732ms
    Feb  9 00:54:43.018: INFO: Pod "projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012781963s
    Feb  9 00:54:45.019: INFO: Pod "projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01385917s
    STEP: Saw pod success 02/09/23 00:54:45.019
    Feb  9 00:54:45.019: INFO: Pod "projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8" satisfied condition "Succeeded or Failed"
    Feb  9 00:54:45.024: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8 container projected-all-volume-test: <nil>
    STEP: delete the pod 02/09/23 00:54:45.036
    Feb  9 00:54:45.053: INFO: Waiting for pod projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8 to disappear
    Feb  9 00:54:45.058: INFO: Pod projected-volume-e315b642-f802-4653-9a55-c8a32f6cd3c8 no longer exists
    [AfterEach] [sig-storage] Projected combined
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:54:45.058: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected combined
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected combined
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected combined
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-347" for this suite. 02/09/23 00:54:45.066
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:54:45.077
Feb  9 00:54:45.078: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 00:54:45.078
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:45.103
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:45.119
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93
STEP: Creating configMap configmap-9996/configmap-test-ed3f2639-6cd6-4643-899e-1e5c677422f5 02/09/23 00:54:45.135
STEP: Creating a pod to test consume configMaps 02/09/23 00:54:45.164
Feb  9 00:54:45.189: INFO: Waiting up to 5m0s for pod "pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe" in namespace "configmap-9996" to be "Succeeded or Failed"
Feb  9 00:54:45.195: INFO: Pod "pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe": Phase="Pending", Reason="", readiness=false. Elapsed: 5.977329ms
Feb  9 00:54:47.201: INFO: Pod "pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012508361s
Feb  9 00:54:49.202: INFO: Pod "pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01292018s
STEP: Saw pod success 02/09/23 00:54:49.202
Feb  9 00:54:49.202: INFO: Pod "pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe" satisfied condition "Succeeded or Failed"
Feb  9 00:54:49.208: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe container env-test: <nil>
STEP: delete the pod 02/09/23 00:54:49.219
Feb  9 00:54:49.232: INFO: Waiting for pod pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe to disappear
Feb  9 00:54:49.237: INFO: Pod pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 00:54:49.237: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-9996" for this suite. 02/09/23 00:54:49.244
------------------------------
â€¢ [4.177 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:54:45.077
    Feb  9 00:54:45.078: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 00:54:45.078
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:45.103
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:45.119
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via the environment [NodeConformance] [Conformance]
      test/e2e/common/node/configmap.go:93
    STEP: Creating configMap configmap-9996/configmap-test-ed3f2639-6cd6-4643-899e-1e5c677422f5 02/09/23 00:54:45.135
    STEP: Creating a pod to test consume configMaps 02/09/23 00:54:45.164
    Feb  9 00:54:45.189: INFO: Waiting up to 5m0s for pod "pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe" in namespace "configmap-9996" to be "Succeeded or Failed"
    Feb  9 00:54:45.195: INFO: Pod "pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe": Phase="Pending", Reason="", readiness=false. Elapsed: 5.977329ms
    Feb  9 00:54:47.201: INFO: Pod "pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012508361s
    Feb  9 00:54:49.202: INFO: Pod "pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01292018s
    STEP: Saw pod success 02/09/23 00:54:49.202
    Feb  9 00:54:49.202: INFO: Pod "pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe" satisfied condition "Succeeded or Failed"
    Feb  9 00:54:49.208: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe container env-test: <nil>
    STEP: delete the pod 02/09/23 00:54:49.219
    Feb  9 00:54:49.232: INFO: Waiting for pod pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe to disappear
    Feb  9 00:54:49.237: INFO: Pod pod-configmaps-cb4ac7c2-4e6c-4f4a-aa0e-035bb9d78efe no longer exists
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:54:49.237: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-9996" for this suite. 02/09/23 00:54:49.244
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:58
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:54:49.258
Feb  9 00:54:49.258: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename custom-resource-definition 02/09/23 00:54:49.258
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:49.273
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:49.278
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:58
Feb  9 00:54:49.282: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 00:54:50.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-6706" for this suite. 02/09/23 00:54:50.317
------------------------------
â€¢ [1.070 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    creating/deleting custom resource definition objects works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:58

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:54:49.258
    Feb  9 00:54:49.258: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename custom-resource-definition 02/09/23 00:54:49.258
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:49.273
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:49.278
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] creating/deleting custom resource definition objects works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:58
    Feb  9 00:54:49.282: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:54:50.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-6706" for this suite. 02/09/23 00:54:50.317
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/apps/statefulset.go:908
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:54:50.328
Feb  9 00:54:50.328: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename statefulset 02/09/23 00:54:50.328
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:50.346
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:50.35
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-568 02/09/23 00:54:50.355
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/apps/statefulset.go:908
Feb  9 00:54:50.374: INFO: Found 0 stateful pods, waiting for 1
Feb  9 00:55:00.382: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet 02/09/23 00:55:00.393
W0209 00:55:00.400820      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Feb  9 00:55:00.412: INFO: Found 1 stateful pods, waiting for 2
Feb  9 00:55:10.420: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Feb  9 00:55:10.420: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets 02/09/23 00:55:10.431
STEP: Delete all of the StatefulSets 02/09/23 00:55:10.436
STEP: Verify that StatefulSets have been deleted 02/09/23 00:55:10.451
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Feb  9 00:55:10.457: INFO: Deleting all statefulset in ns statefulset-568
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Feb  9 00:55:10.475: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-568" for this suite. 02/09/23 00:55:10.484
------------------------------
â€¢ [SLOW TEST] [20.166 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/apps/statefulset.go:908

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:54:50.328
    Feb  9 00:54:50.328: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename statefulset 02/09/23 00:54:50.328
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:54:50.346
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:54:50.35
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-568 02/09/23 00:54:50.355
    [It] should list, patch and delete a collection of StatefulSets [Conformance]
      test/e2e/apps/statefulset.go:908
    Feb  9 00:54:50.374: INFO: Found 0 stateful pods, waiting for 1
    Feb  9 00:55:00.382: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: patching the StatefulSet 02/09/23 00:55:00.393
    W0209 00:55:00.400820      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Feb  9 00:55:00.412: INFO: Found 1 stateful pods, waiting for 2
    Feb  9 00:55:10.420: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Feb  9 00:55:10.420: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Listing all StatefulSets 02/09/23 00:55:10.431
    STEP: Delete all of the StatefulSets 02/09/23 00:55:10.436
    STEP: Verify that StatefulSets have been deleted 02/09/23 00:55:10.451
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Feb  9 00:55:10.457: INFO: Deleting all statefulset in ns statefulset-568
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:55:10.475: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-568" for this suite. 02/09/23 00:55:10.484
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:55:10.495
Feb  9 00:55:10.495: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename disruption 02/09/23 00:55:10.496
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:55:10.511
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:55:10.515
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347
STEP: Creating a pdb that targets all three pods in a test replica set 02/09/23 00:55:10.519
STEP: Waiting for the pdb to be processed 02/09/23 00:55:10.526
STEP: First trying to evict a pod which shouldn't be evictable 02/09/23 00:55:12.546
STEP: Waiting for all pods to be running 02/09/23 00:55:12.546
Feb  9 00:55:12.553: INFO: pods: 0 < 3
STEP: locating a running pod 02/09/23 00:55:14.56
STEP: Updating the pdb to allow a pod to be evicted 02/09/23 00:55:14.575
STEP: Waiting for the pdb to be processed 02/09/23 00:55:14.586
STEP: Trying to evict the same pod we tried earlier which should now be evictable 02/09/23 00:55:16.6
STEP: Waiting for all pods to be running 02/09/23 00:55:16.6
STEP: Waiting for the pdb to observed all healthy pods 02/09/23 00:55:16.606
STEP: Patching the pdb to disallow a pod to be evicted 02/09/23 00:55:16.643
STEP: Waiting for the pdb to be processed 02/09/23 00:55:16.663
STEP: Waiting for all pods to be running 02/09/23 00:55:18.678
STEP: locating a running pod 02/09/23 00:55:18.684
STEP: Deleting the pdb to allow a pod to be evicted 02/09/23 00:55:18.699
STEP: Waiting for the pdb to be deleted 02/09/23 00:55:18.708
STEP: Trying to evict the same pod we tried earlier which should now be evictable 02/09/23 00:55:18.713
STEP: Waiting for all pods to be running 02/09/23 00:55:18.713
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Feb  9 00:55:18.744: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-8382" for this suite. 02/09/23 00:55:18.752
------------------------------
â€¢ [SLOW TEST] [8.268 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:55:10.495
    Feb  9 00:55:10.495: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename disruption 02/09/23 00:55:10.496
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:55:10.511
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:55:10.515
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should block an eviction until the PDB is updated to allow it [Conformance]
      test/e2e/apps/disruption.go:347
    STEP: Creating a pdb that targets all three pods in a test replica set 02/09/23 00:55:10.519
    STEP: Waiting for the pdb to be processed 02/09/23 00:55:10.526
    STEP: First trying to evict a pod which shouldn't be evictable 02/09/23 00:55:12.546
    STEP: Waiting for all pods to be running 02/09/23 00:55:12.546
    Feb  9 00:55:12.553: INFO: pods: 0 < 3
    STEP: locating a running pod 02/09/23 00:55:14.56
    STEP: Updating the pdb to allow a pod to be evicted 02/09/23 00:55:14.575
    STEP: Waiting for the pdb to be processed 02/09/23 00:55:14.586
    STEP: Trying to evict the same pod we tried earlier which should now be evictable 02/09/23 00:55:16.6
    STEP: Waiting for all pods to be running 02/09/23 00:55:16.6
    STEP: Waiting for the pdb to observed all healthy pods 02/09/23 00:55:16.606
    STEP: Patching the pdb to disallow a pod to be evicted 02/09/23 00:55:16.643
    STEP: Waiting for the pdb to be processed 02/09/23 00:55:16.663
    STEP: Waiting for all pods to be running 02/09/23 00:55:18.678
    STEP: locating a running pod 02/09/23 00:55:18.684
    STEP: Deleting the pdb to allow a pod to be evicted 02/09/23 00:55:18.699
    STEP: Waiting for the pdb to be deleted 02/09/23 00:55:18.708
    STEP: Trying to evict the same pod we tried earlier which should now be evictable 02/09/23 00:55:18.713
    STEP: Waiting for all pods to be running 02/09/23 00:55:18.713
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:55:18.744: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-8382" for this suite. 02/09/23 00:55:18.752
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:55:18.765
Feb  9 00:55:18.765: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename dns 02/09/23 00:55:18.765
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:55:18.784
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:55:18.789
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333
STEP: Creating a test externalName service 02/09/23 00:55:18.794
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5366.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5366.svc.cluster.local; sleep 1; done
 02/09/23 00:55:18.801
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5366.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5366.svc.cluster.local; sleep 1; done
 02/09/23 00:55:18.801
STEP: creating a pod to probe DNS 02/09/23 00:55:18.801
STEP: submitting the pod to kubernetes 02/09/23 00:55:18.801
Feb  9 00:55:18.814: INFO: Waiting up to 15m0s for pod "dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682" in namespace "dns-5366" to be "running"
Feb  9 00:55:18.825: INFO: Pod "dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682": Phase="Pending", Reason="", readiness=false. Elapsed: 11.136176ms
Feb  9 00:55:20.833: INFO: Pod "dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018878288s
Feb  9 00:55:22.832: INFO: Pod "dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682": Phase="Pending", Reason="", readiness=false. Elapsed: 4.017821476s
Feb  9 00:55:24.832: INFO: Pod "dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682": Phase="Running", Reason="", readiness=true. Elapsed: 6.01783717s
Feb  9 00:55:24.832: INFO: Pod "dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682" satisfied condition "running"
STEP: retrieving the pod 02/09/23 00:55:24.832
STEP: looking for the results for each expected name from probers 02/09/23 00:55:24.837
Feb  9 00:55:24.855: INFO: DNS probes using dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682 succeeded

STEP: deleting the pod 02/09/23 00:55:24.855
STEP: changing the externalName to bar.example.com 02/09/23 00:55:24.873
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5366.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5366.svc.cluster.local; sleep 1; done
 02/09/23 00:55:24.884
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5366.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5366.svc.cluster.local; sleep 1; done
 02/09/23 00:55:24.884
STEP: creating a second pod to probe DNS 02/09/23 00:55:24.884
STEP: submitting the pod to kubernetes 02/09/23 00:55:24.885
Feb  9 00:55:24.894: INFO: Waiting up to 15m0s for pod "dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939" in namespace "dns-5366" to be "running"
Feb  9 00:55:24.901: INFO: Pod "dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939": Phase="Pending", Reason="", readiness=false. Elapsed: 7.012034ms
Feb  9 00:55:26.908: INFO: Pod "dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939": Phase="Running", Reason="", readiness=true. Elapsed: 2.014271663s
Feb  9 00:55:26.908: INFO: Pod "dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939" satisfied condition "running"
STEP: retrieving the pod 02/09/23 00:55:26.908
STEP: looking for the results for each expected name from probers 02/09/23 00:55:26.915
Feb  9 00:55:26.933: INFO: File jessie_udp@dns-test-service-3.dns-5366.svc.cluster.local from pod  dns-5366/dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939 contains 'foo.example.com.
' instead of 'bar.example.com.'
Feb  9 00:55:26.933: INFO: Lookups using dns-5366/dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939 failed for: [jessie_udp@dns-test-service-3.dns-5366.svc.cluster.local]

Feb  9 00:55:31.949: INFO: DNS probes using dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939 succeeded

STEP: deleting the pod 02/09/23 00:55:31.949
STEP: changing the service to type=ClusterIP 02/09/23 00:55:31.964
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5366.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5366.svc.cluster.local; sleep 1; done
 02/09/23 00:55:31.982
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5366.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5366.svc.cluster.local; sleep 1; done
 02/09/23 00:55:31.983
STEP: creating a third pod to probe DNS 02/09/23 00:55:31.983
STEP: submitting the pod to kubernetes 02/09/23 00:55:31.989
Feb  9 00:55:31.997: INFO: Waiting up to 15m0s for pod "dns-test-5b533913-eaf8-4101-acba-a17b59b6412f" in namespace "dns-5366" to be "running"
Feb  9 00:55:32.005: INFO: Pod "dns-test-5b533913-eaf8-4101-acba-a17b59b6412f": Phase="Pending", Reason="", readiness=false. Elapsed: 7.261822ms
Feb  9 00:55:34.011: INFO: Pod "dns-test-5b533913-eaf8-4101-acba-a17b59b6412f": Phase="Running", Reason="", readiness=true. Elapsed: 2.014111777s
Feb  9 00:55:34.012: INFO: Pod "dns-test-5b533913-eaf8-4101-acba-a17b59b6412f" satisfied condition "running"
STEP: retrieving the pod 02/09/23 00:55:34.012
STEP: looking for the results for each expected name from probers 02/09/23 00:55:34.017
Feb  9 00:55:34.048: INFO: DNS probes using dns-test-5b533913-eaf8-4101-acba-a17b59b6412f succeeded

STEP: deleting the pod 02/09/23 00:55:34.048
STEP: deleting the test externalName service 02/09/23 00:55:34.067
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Feb  9 00:55:34.086: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-5366" for this suite. 02/09/23 00:55:34.093
------------------------------
â€¢ [SLOW TEST] [15.338 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:55:18.765
    Feb  9 00:55:18.765: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename dns 02/09/23 00:55:18.765
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:55:18.784
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:55:18.789
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for ExternalName services [Conformance]
      test/e2e/network/dns.go:333
    STEP: Creating a test externalName service 02/09/23 00:55:18.794
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5366.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5366.svc.cluster.local; sleep 1; done
     02/09/23 00:55:18.801
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5366.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5366.svc.cluster.local; sleep 1; done
     02/09/23 00:55:18.801
    STEP: creating a pod to probe DNS 02/09/23 00:55:18.801
    STEP: submitting the pod to kubernetes 02/09/23 00:55:18.801
    Feb  9 00:55:18.814: INFO: Waiting up to 15m0s for pod "dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682" in namespace "dns-5366" to be "running"
    Feb  9 00:55:18.825: INFO: Pod "dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682": Phase="Pending", Reason="", readiness=false. Elapsed: 11.136176ms
    Feb  9 00:55:20.833: INFO: Pod "dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018878288s
    Feb  9 00:55:22.832: INFO: Pod "dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682": Phase="Pending", Reason="", readiness=false. Elapsed: 4.017821476s
    Feb  9 00:55:24.832: INFO: Pod "dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682": Phase="Running", Reason="", readiness=true. Elapsed: 6.01783717s
    Feb  9 00:55:24.832: INFO: Pod "dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682" satisfied condition "running"
    STEP: retrieving the pod 02/09/23 00:55:24.832
    STEP: looking for the results for each expected name from probers 02/09/23 00:55:24.837
    Feb  9 00:55:24.855: INFO: DNS probes using dns-test-beb0e46d-0932-4600-9f3e-fc85d8584682 succeeded

    STEP: deleting the pod 02/09/23 00:55:24.855
    STEP: changing the externalName to bar.example.com 02/09/23 00:55:24.873
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5366.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5366.svc.cluster.local; sleep 1; done
     02/09/23 00:55:24.884
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5366.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5366.svc.cluster.local; sleep 1; done
     02/09/23 00:55:24.884
    STEP: creating a second pod to probe DNS 02/09/23 00:55:24.884
    STEP: submitting the pod to kubernetes 02/09/23 00:55:24.885
    Feb  9 00:55:24.894: INFO: Waiting up to 15m0s for pod "dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939" in namespace "dns-5366" to be "running"
    Feb  9 00:55:24.901: INFO: Pod "dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939": Phase="Pending", Reason="", readiness=false. Elapsed: 7.012034ms
    Feb  9 00:55:26.908: INFO: Pod "dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939": Phase="Running", Reason="", readiness=true. Elapsed: 2.014271663s
    Feb  9 00:55:26.908: INFO: Pod "dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939" satisfied condition "running"
    STEP: retrieving the pod 02/09/23 00:55:26.908
    STEP: looking for the results for each expected name from probers 02/09/23 00:55:26.915
    Feb  9 00:55:26.933: INFO: File jessie_udp@dns-test-service-3.dns-5366.svc.cluster.local from pod  dns-5366/dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Feb  9 00:55:26.933: INFO: Lookups using dns-5366/dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939 failed for: [jessie_udp@dns-test-service-3.dns-5366.svc.cluster.local]

    Feb  9 00:55:31.949: INFO: DNS probes using dns-test-558d6075-1496-4b69-b21e-c14b9fbb6939 succeeded

    STEP: deleting the pod 02/09/23 00:55:31.949
    STEP: changing the service to type=ClusterIP 02/09/23 00:55:31.964
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5366.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5366.svc.cluster.local; sleep 1; done
     02/09/23 00:55:31.982
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5366.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5366.svc.cluster.local; sleep 1; done
     02/09/23 00:55:31.983
    STEP: creating a third pod to probe DNS 02/09/23 00:55:31.983
    STEP: submitting the pod to kubernetes 02/09/23 00:55:31.989
    Feb  9 00:55:31.997: INFO: Waiting up to 15m0s for pod "dns-test-5b533913-eaf8-4101-acba-a17b59b6412f" in namespace "dns-5366" to be "running"
    Feb  9 00:55:32.005: INFO: Pod "dns-test-5b533913-eaf8-4101-acba-a17b59b6412f": Phase="Pending", Reason="", readiness=false. Elapsed: 7.261822ms
    Feb  9 00:55:34.011: INFO: Pod "dns-test-5b533913-eaf8-4101-acba-a17b59b6412f": Phase="Running", Reason="", readiness=true. Elapsed: 2.014111777s
    Feb  9 00:55:34.012: INFO: Pod "dns-test-5b533913-eaf8-4101-acba-a17b59b6412f" satisfied condition "running"
    STEP: retrieving the pod 02/09/23 00:55:34.012
    STEP: looking for the results for each expected name from probers 02/09/23 00:55:34.017
    Feb  9 00:55:34.048: INFO: DNS probes using dns-test-5b533913-eaf8-4101-acba-a17b59b6412f succeeded

    STEP: deleting the pod 02/09/23 00:55:34.048
    STEP: deleting the test externalName service 02/09/23 00:55:34.067
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Feb  9 00:55:34.086: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-5366" for this suite. 02/09/23 00:55:34.093
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 00:55:34.107
Feb  9 00:55:34.107: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename cronjob 02/09/23 00:55:34.107
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:55:34.124
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:55:34.128
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96
STEP: Creating a suspended cronjob 02/09/23 00:55:34.132
STEP: Ensuring no jobs are scheduled 02/09/23 00:55:34.139
STEP: Ensuring no job exists by listing jobs explicitly 02/09/23 01:00:34.151
STEP: Removing cronjob 02/09/23 01:00:34.156
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Feb  9 01:00:34.165: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-3683" for this suite. 02/09/23 01:00:34.179
------------------------------
â€¢ [SLOW TEST] [300.082 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 00:55:34.107
    Feb  9 00:55:34.107: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename cronjob 02/09/23 00:55:34.107
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 00:55:34.124
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 00:55:34.128
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should not schedule jobs when suspended [Slow] [Conformance]
      test/e2e/apps/cronjob.go:96
    STEP: Creating a suspended cronjob 02/09/23 00:55:34.132
    STEP: Ensuring no jobs are scheduled 02/09/23 00:55:34.139
    STEP: Ensuring no job exists by listing jobs explicitly 02/09/23 01:00:34.151
    STEP: Removing cronjob 02/09/23 01:00:34.156
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:00:34.165: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-3683" for this suite. 02/09/23 01:00:34.179
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services
  should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:00:34.191
Feb  9 01:00:34.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:00:34.191
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:00:34.208
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:00:34.212
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654
STEP: creating a collection of services 02/09/23 01:00:34.217
Feb  9 01:00:34.217: INFO: Creating e2e-svc-a-266xw
Feb  9 01:00:34.230: INFO: Creating e2e-svc-b-lfwtm
Feb  9 01:00:34.243: INFO: Creating e2e-svc-c-6njlb
STEP: deleting service collection 02/09/23 01:00:34.262
Feb  9 01:00:34.312: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:00:34.312: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-3396" for this suite. 02/09/23 01:00:34.318
------------------------------
â€¢ [0.136 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:00:34.191
    Feb  9 01:00:34.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:00:34.191
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:00:34.208
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:00:34.212
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should delete a collection of services [Conformance]
      test/e2e/network/service.go:3654
    STEP: creating a collection of services 02/09/23 01:00:34.217
    Feb  9 01:00:34.217: INFO: Creating e2e-svc-a-266xw
    Feb  9 01:00:34.230: INFO: Creating e2e-svc-b-lfwtm
    Feb  9 01:00:34.243: INFO: Creating e2e-svc-c-6njlb
    STEP: deleting service collection 02/09/23 01:00:34.262
    Feb  9 01:00:34.312: INFO: Collection of services has been deleted
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:00:34.312: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-3396" for this suite. 02/09/23 01:00:34.318
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:52
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:00:34.327
Feb  9 01:00:34.327: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubelet-test 02/09/23 01:00:34.328
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:00:34.342
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:00:34.346
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:52
Feb  9 01:00:34.367: INFO: Waiting up to 5m0s for pod "busybox-scheduling-1464b4cc-739e-46f4-812b-ac9c91edd2d0" in namespace "kubelet-test-3729" to be "running and ready"
Feb  9 01:00:34.372: INFO: Pod "busybox-scheduling-1464b4cc-739e-46f4-812b-ac9c91edd2d0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.758434ms
Feb  9 01:00:34.372: INFO: The phase of Pod busybox-scheduling-1464b4cc-739e-46f4-812b-ac9c91edd2d0 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:00:36.378: INFO: Pod "busybox-scheduling-1464b4cc-739e-46f4-812b-ac9c91edd2d0": Phase="Running", Reason="", readiness=true. Elapsed: 2.011351052s
Feb  9 01:00:36.378: INFO: The phase of Pod busybox-scheduling-1464b4cc-739e-46f4-812b-ac9c91edd2d0 is Running (Ready = true)
Feb  9 01:00:36.378: INFO: Pod "busybox-scheduling-1464b4cc-739e-46f4-812b-ac9c91edd2d0" satisfied condition "running and ready"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Feb  9 01:00:36.399: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-3729" for this suite. 02/09/23 01:00:36.407
------------------------------
â€¢ [2.089 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command in a pod
  test/e2e/common/node/kubelet.go:44
    should print the output to logs [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:52

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:00:34.327
    Feb  9 01:00:34.327: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubelet-test 02/09/23 01:00:34.328
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:00:34.342
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:00:34.346
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should print the output to logs [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:52
    Feb  9 01:00:34.367: INFO: Waiting up to 5m0s for pod "busybox-scheduling-1464b4cc-739e-46f4-812b-ac9c91edd2d0" in namespace "kubelet-test-3729" to be "running and ready"
    Feb  9 01:00:34.372: INFO: Pod "busybox-scheduling-1464b4cc-739e-46f4-812b-ac9c91edd2d0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.758434ms
    Feb  9 01:00:34.372: INFO: The phase of Pod busybox-scheduling-1464b4cc-739e-46f4-812b-ac9c91edd2d0 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:00:36.378: INFO: Pod "busybox-scheduling-1464b4cc-739e-46f4-812b-ac9c91edd2d0": Phase="Running", Reason="", readiness=true. Elapsed: 2.011351052s
    Feb  9 01:00:36.378: INFO: The phase of Pod busybox-scheduling-1464b4cc-739e-46f4-812b-ac9c91edd2d0 is Running (Ready = true)
    Feb  9 01:00:36.378: INFO: Pod "busybox-scheduling-1464b4cc-739e-46f4-812b-ac9c91edd2d0" satisfied condition "running and ready"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:00:36.399: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-3729" for this suite. 02/09/23 01:00:36.407
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/apps/statefulset.go:306
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:00:36.418
Feb  9 01:00:36.418: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename statefulset 02/09/23 01:00:36.418
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:00:36.432
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:00:36.436
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-4520 02/09/23 01:00:36.44
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/apps/statefulset.go:306
STEP: Creating a new StatefulSet 02/09/23 01:00:36.446
Feb  9 01:00:36.459: INFO: Found 0 stateful pods, waiting for 3
Feb  9 01:00:46.467: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Feb  9 01:00:46.467: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Feb  9 01:00:46.467: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Feb  9 01:00:46.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4520 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Feb  9 01:00:46.645: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Feb  9 01:00:46.645: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Feb  9 01:00:46.645: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 02/09/23 01:00:56.671
Feb  9 01:00:56.696: INFO: Updating stateful set ss2
STEP: Creating a new revision 02/09/23 01:00:56.696
STEP: Updating Pods in reverse ordinal order 02/09/23 01:01:06.719
Feb  9 01:01:06.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4520 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Feb  9 01:01:06.873: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Feb  9 01:01:06.873: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Feb  9 01:01:06.873: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision 02/09/23 01:01:16.908
Feb  9 01:01:16.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4520 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Feb  9 01:01:17.108: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Feb  9 01:01:17.108: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Feb  9 01:01:17.108: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Feb  9 01:01:27.157: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order 02/09/23 01:01:37.181
Feb  9 01:01:37.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4520 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Feb  9 01:01:37.354: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Feb  9 01:01:37.354: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Feb  9 01:01:37.354: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Feb  9 01:01:47.390: INFO: Deleting all statefulset in ns statefulset-4520
Feb  9 01:01:47.395: INFO: Scaling statefulset ss2 to 0
Feb  9 01:01:57.426: INFO: Waiting for statefulset status.replicas updated to 0
Feb  9 01:01:57.432: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Feb  9 01:01:57.454: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-4520" for this suite. 02/09/23 01:01:57.463
------------------------------
â€¢ [SLOW TEST] [81.055 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/apps/statefulset.go:306

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:00:36.418
    Feb  9 01:00:36.418: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename statefulset 02/09/23 01:00:36.418
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:00:36.432
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:00:36.436
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-4520 02/09/23 01:00:36.44
    [It] should perform rolling updates and roll backs of template modifications [Conformance]
      test/e2e/apps/statefulset.go:306
    STEP: Creating a new StatefulSet 02/09/23 01:00:36.446
    Feb  9 01:00:36.459: INFO: Found 0 stateful pods, waiting for 3
    Feb  9 01:00:46.467: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Feb  9 01:00:46.467: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Feb  9 01:00:46.467: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    Feb  9 01:00:46.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4520 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Feb  9 01:00:46.645: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Feb  9 01:00:46.645: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Feb  9 01:00:46.645: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 02/09/23 01:00:56.671
    Feb  9 01:00:56.696: INFO: Updating stateful set ss2
    STEP: Creating a new revision 02/09/23 01:00:56.696
    STEP: Updating Pods in reverse ordinal order 02/09/23 01:01:06.719
    Feb  9 01:01:06.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4520 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Feb  9 01:01:06.873: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Feb  9 01:01:06.873: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Feb  9 01:01:06.873: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    STEP: Rolling back to a previous revision 02/09/23 01:01:16.908
    Feb  9 01:01:16.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4520 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Feb  9 01:01:17.108: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Feb  9 01:01:17.108: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Feb  9 01:01:17.108: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Feb  9 01:01:27.157: INFO: Updating stateful set ss2
    STEP: Rolling back update in reverse ordinal order 02/09/23 01:01:37.181
    Feb  9 01:01:37.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4520 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Feb  9 01:01:37.354: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Feb  9 01:01:37.354: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Feb  9 01:01:37.354: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Feb  9 01:01:47.390: INFO: Deleting all statefulset in ns statefulset-4520
    Feb  9 01:01:47.395: INFO: Scaling statefulset ss2 to 0
    Feb  9 01:01:57.426: INFO: Waiting for statefulset status.replicas updated to 0
    Feb  9 01:01:57.432: INFO: Deleting statefulset ss2
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:01:57.454: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-4520" for this suite. 02/09/23 01:01:57.463
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:01:57.474
Feb  9 01:01:57.474: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:01:57.474
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:01:57.49
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:01:57.493
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109
STEP: Creating configMap with name projected-configmap-test-volume-map-9c208ebd-9537-4556-9959-fcb7ed874fd2 02/09/23 01:01:57.497
STEP: Creating a pod to test consume configMaps 02/09/23 01:01:57.503
Feb  9 01:01:57.516: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2" in namespace "projected-790" to be "Succeeded or Failed"
Feb  9 01:01:57.522: INFO: Pod "pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2": Phase="Pending", Reason="", readiness=false. Elapsed: 6.259629ms
Feb  9 01:01:59.528: INFO: Pod "pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012838682s
Feb  9 01:02:01.529: INFO: Pod "pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013703128s
STEP: Saw pod success 02/09/23 01:02:01.529
Feb  9 01:02:01.529: INFO: Pod "pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2" satisfied condition "Succeeded or Failed"
Feb  9 01:02:01.535: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2 container agnhost-container: <nil>
STEP: delete the pod 02/09/23 01:02:01.547
Feb  9 01:02:01.566: INFO: Waiting for pod pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2 to disappear
Feb  9 01:02:01.572: INFO: Pod pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:02:01.572: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-790" for this suite. 02/09/23 01:02:01.58
------------------------------
â€¢ [4.116 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:01:57.474
    Feb  9 01:01:57.474: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:01:57.474
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:01:57.49
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:01:57.493
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:109
    STEP: Creating configMap with name projected-configmap-test-volume-map-9c208ebd-9537-4556-9959-fcb7ed874fd2 02/09/23 01:01:57.497
    STEP: Creating a pod to test consume configMaps 02/09/23 01:01:57.503
    Feb  9 01:01:57.516: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2" in namespace "projected-790" to be "Succeeded or Failed"
    Feb  9 01:01:57.522: INFO: Pod "pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2": Phase="Pending", Reason="", readiness=false. Elapsed: 6.259629ms
    Feb  9 01:01:59.528: INFO: Pod "pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012838682s
    Feb  9 01:02:01.529: INFO: Pod "pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013703128s
    STEP: Saw pod success 02/09/23 01:02:01.529
    Feb  9 01:02:01.529: INFO: Pod "pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2" satisfied condition "Succeeded or Failed"
    Feb  9 01:02:01.535: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2 container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 01:02:01.547
    Feb  9 01:02:01.566: INFO: Waiting for pod pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2 to disappear
    Feb  9 01:02:01.572: INFO: Pod pod-projected-configmaps-2ce1340c-00f6-4d4a-be5a-fbcf30a446e2 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:02:01.572: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-790" for this suite. 02/09/23 01:02:01.58
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:02:01.592
Feb  9 01:02:01.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename runtimeclass 02/09/23 01:02:01.593
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:01.608
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:01.612
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156
STEP: Deleting RuntimeClass runtimeclass-1481-delete-me 02/09/23 01:02:01.622
STEP: Waiting for the RuntimeClass to disappear 02/09/23 01:02:01.63
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Feb  9 01:02:01.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-1481" for this suite. 02/09/23 01:02:01.651
------------------------------
â€¢ [0.068 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:02:01.592
    Feb  9 01:02:01.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename runtimeclass 02/09/23 01:02:01.593
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:01.608
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:01.612
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:156
    STEP: Deleting RuntimeClass runtimeclass-1481-delete-me 02/09/23 01:02:01.622
    STEP: Waiting for the RuntimeClass to disappear 02/09/23 01:02:01.63
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:02:01.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-1481" for this suite. 02/09/23 01:02:01.651
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] Garbage collector
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:02:01.66
Feb  9 01:02:01.660: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename gc 02/09/23 01:02:01.661
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:01.674
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:01.678
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735
STEP: create the rc1 02/09/23 01:02:01.688
STEP: create the rc2 02/09/23 01:02:01.695
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well 02/09/23 01:02:06.708
STEP: delete the rc simpletest-rc-to-be-deleted 02/09/23 01:02:06.911
STEP: wait for the rc to be deleted 02/09/23 01:02:06.921
STEP: Gathering metrics 02/09/23 01:02:11.936
W0209 01:02:11.948882      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Feb  9 01:02:11.948: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Feb  9 01:02:11.948: INFO: Deleting pod "simpletest-rc-to-be-deleted-4d8s2" in namespace "gc-516"
Feb  9 01:02:11.966: INFO: Deleting pod "simpletest-rc-to-be-deleted-4vvht" in namespace "gc-516"
Feb  9 01:02:11.986: INFO: Deleting pod "simpletest-rc-to-be-deleted-4wzwr" in namespace "gc-516"
Feb  9 01:02:11.998: INFO: Deleting pod "simpletest-rc-to-be-deleted-6ctxs" in namespace "gc-516"
Feb  9 01:02:12.024: INFO: Deleting pod "simpletest-rc-to-be-deleted-6q58s" in namespace "gc-516"
Feb  9 01:02:12.037: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zn5w" in namespace "gc-516"
Feb  9 01:02:12.050: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zw65" in namespace "gc-516"
Feb  9 01:02:12.069: INFO: Deleting pod "simpletest-rc-to-be-deleted-7vz77" in namespace "gc-516"
Feb  9 01:02:12.087: INFO: Deleting pod "simpletest-rc-to-be-deleted-7zgwt" in namespace "gc-516"
Feb  9 01:02:12.101: INFO: Deleting pod "simpletest-rc-to-be-deleted-84s97" in namespace "gc-516"
Feb  9 01:02:12.117: INFO: Deleting pod "simpletest-rc-to-be-deleted-8hf7l" in namespace "gc-516"
Feb  9 01:02:12.132: INFO: Deleting pod "simpletest-rc-to-be-deleted-948nl" in namespace "gc-516"
Feb  9 01:02:12.144: INFO: Deleting pod "simpletest-rc-to-be-deleted-cjvcj" in namespace "gc-516"
Feb  9 01:02:12.162: INFO: Deleting pod "simpletest-rc-to-be-deleted-f2dw2" in namespace "gc-516"
Feb  9 01:02:12.177: INFO: Deleting pod "simpletest-rc-to-be-deleted-fdmpz" in namespace "gc-516"
Feb  9 01:02:12.193: INFO: Deleting pod "simpletest-rc-to-be-deleted-ffnv2" in namespace "gc-516"
Feb  9 01:02:12.209: INFO: Deleting pod "simpletest-rc-to-be-deleted-g99ml" in namespace "gc-516"
Feb  9 01:02:12.225: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfr5h" in namespace "gc-516"
Feb  9 01:02:12.247: INFO: Deleting pod "simpletest-rc-to-be-deleted-hb22q" in namespace "gc-516"
Feb  9 01:02:12.263: INFO: Deleting pod "simpletest-rc-to-be-deleted-hm674" in namespace "gc-516"
Feb  9 01:02:12.280: INFO: Deleting pod "simpletest-rc-to-be-deleted-hnbsn" in namespace "gc-516"
Feb  9 01:02:12.292: INFO: Deleting pod "simpletest-rc-to-be-deleted-hs9jm" in namespace "gc-516"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Feb  9 01:02:12.306: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-516" for this suite. 02/09/23 01:02:12.313
------------------------------
â€¢ [SLOW TEST] [10.661 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:02:01.66
    Feb  9 01:02:01.660: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename gc 02/09/23 01:02:01.661
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:01.674
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:01.678
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
      test/e2e/apimachinery/garbage_collector.go:735
    STEP: create the rc1 02/09/23 01:02:01.688
    STEP: create the rc2 02/09/23 01:02:01.695
    STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well 02/09/23 01:02:06.708
    STEP: delete the rc simpletest-rc-to-be-deleted 02/09/23 01:02:06.911
    STEP: wait for the rc to be deleted 02/09/23 01:02:06.921
    STEP: Gathering metrics 02/09/23 01:02:11.936
    W0209 01:02:11.948882      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Feb  9 01:02:11.948: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    Feb  9 01:02:11.948: INFO: Deleting pod "simpletest-rc-to-be-deleted-4d8s2" in namespace "gc-516"
    Feb  9 01:02:11.966: INFO: Deleting pod "simpletest-rc-to-be-deleted-4vvht" in namespace "gc-516"
    Feb  9 01:02:11.986: INFO: Deleting pod "simpletest-rc-to-be-deleted-4wzwr" in namespace "gc-516"
    Feb  9 01:02:11.998: INFO: Deleting pod "simpletest-rc-to-be-deleted-6ctxs" in namespace "gc-516"
    Feb  9 01:02:12.024: INFO: Deleting pod "simpletest-rc-to-be-deleted-6q58s" in namespace "gc-516"
    Feb  9 01:02:12.037: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zn5w" in namespace "gc-516"
    Feb  9 01:02:12.050: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zw65" in namespace "gc-516"
    Feb  9 01:02:12.069: INFO: Deleting pod "simpletest-rc-to-be-deleted-7vz77" in namespace "gc-516"
    Feb  9 01:02:12.087: INFO: Deleting pod "simpletest-rc-to-be-deleted-7zgwt" in namespace "gc-516"
    Feb  9 01:02:12.101: INFO: Deleting pod "simpletest-rc-to-be-deleted-84s97" in namespace "gc-516"
    Feb  9 01:02:12.117: INFO: Deleting pod "simpletest-rc-to-be-deleted-8hf7l" in namespace "gc-516"
    Feb  9 01:02:12.132: INFO: Deleting pod "simpletest-rc-to-be-deleted-948nl" in namespace "gc-516"
    Feb  9 01:02:12.144: INFO: Deleting pod "simpletest-rc-to-be-deleted-cjvcj" in namespace "gc-516"
    Feb  9 01:02:12.162: INFO: Deleting pod "simpletest-rc-to-be-deleted-f2dw2" in namespace "gc-516"
    Feb  9 01:02:12.177: INFO: Deleting pod "simpletest-rc-to-be-deleted-fdmpz" in namespace "gc-516"
    Feb  9 01:02:12.193: INFO: Deleting pod "simpletest-rc-to-be-deleted-ffnv2" in namespace "gc-516"
    Feb  9 01:02:12.209: INFO: Deleting pod "simpletest-rc-to-be-deleted-g99ml" in namespace "gc-516"
    Feb  9 01:02:12.225: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfr5h" in namespace "gc-516"
    Feb  9 01:02:12.247: INFO: Deleting pod "simpletest-rc-to-be-deleted-hb22q" in namespace "gc-516"
    Feb  9 01:02:12.263: INFO: Deleting pod "simpletest-rc-to-be-deleted-hm674" in namespace "gc-516"
    Feb  9 01:02:12.280: INFO: Deleting pod "simpletest-rc-to-be-deleted-hnbsn" in namespace "gc-516"
    Feb  9 01:02:12.292: INFO: Deleting pod "simpletest-rc-to-be-deleted-hs9jm" in namespace "gc-516"
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:02:12.306: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-516" for this suite. 02/09/23 01:02:12.313
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] server version
  should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39
[BeforeEach] [sig-api-machinery] server version
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:02:12.322
Feb  9 01:02:12.322: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename server-version 02/09/23 01:02:12.323
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:12.34
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:12.344
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/metrics/init/init.go:31
[It] should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39
STEP: Request ServerVersion 02/09/23 01:02:12.349
STEP: Confirm major version 02/09/23 01:02:12.351
Feb  9 01:02:12.351: INFO: Major version: 1
STEP: Confirm minor version 02/09/23 01:02:12.351
Feb  9 01:02:12.351: INFO: cleanMinorVersion: 26
Feb  9 01:02:12.351: INFO: Minor version: 26
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/node/init/init.go:32
Feb  9 01:02:12.351: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] server version
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] server version
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] server version
  tear down framework | framework.go:193
STEP: Destroying namespace "server-version-9294" for this suite. 02/09/23 01:02:12.357
------------------------------
â€¢ [0.044 seconds]
[sig-api-machinery] server version
test/e2e/apimachinery/framework.go:23
  should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] server version
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:02:12.322
    Feb  9 01:02:12.322: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename server-version 02/09/23 01:02:12.323
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:12.34
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:12.344
    [BeforeEach] [sig-api-machinery] server version
      test/e2e/framework/metrics/init/init.go:31
    [It] should find the server version [Conformance]
      test/e2e/apimachinery/server_version.go:39
    STEP: Request ServerVersion 02/09/23 01:02:12.349
    STEP: Confirm major version 02/09/23 01:02:12.351
    Feb  9 01:02:12.351: INFO: Major version: 1
    STEP: Confirm minor version 02/09/23 01:02:12.351
    Feb  9 01:02:12.351: INFO: cleanMinorVersion: 26
    Feb  9 01:02:12.351: INFO: Minor version: 26
    [AfterEach] [sig-api-machinery] server version
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:02:12.351: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] server version
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] server version
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] server version
      tear down framework | framework.go:193
    STEP: Destroying namespace "server-version-9294" for this suite. 02/09/23 01:02:12.357
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:486
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:02:12.367
Feb  9 01:02:12.367: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename security-context-test 02/09/23 01:02:12.367
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:12.382
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:12.386
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:486
Feb  9 01:02:12.401: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-a3e6ca52-564a-462f-a664-926e22e3e669" in namespace "security-context-test-7140" to be "Succeeded or Failed"
Feb  9 01:02:12.407: INFO: Pod "busybox-readonly-false-a3e6ca52-564a-462f-a664-926e22e3e669": Phase="Pending", Reason="", readiness=false. Elapsed: 5.400502ms
Feb  9 01:02:14.414: INFO: Pod "busybox-readonly-false-a3e6ca52-564a-462f-a664-926e22e3e669": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01238747s
Feb  9 01:02:16.414: INFO: Pod "busybox-readonly-false-a3e6ca52-564a-462f-a664-926e22e3e669": Phase="Pending", Reason="", readiness=false. Elapsed: 4.012816369s
Feb  9 01:02:18.413: INFO: Pod "busybox-readonly-false-a3e6ca52-564a-462f-a664-926e22e3e669": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.012063444s
Feb  9 01:02:18.413: INFO: Pod "busybox-readonly-false-a3e6ca52-564a-462f-a664-926e22e3e669" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Feb  9 01:02:18.413: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-7140" for this suite. 02/09/23 01:02:18.421
------------------------------
â€¢ [SLOW TEST] [6.063 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with readOnlyRootFilesystem
  test/e2e/common/node/security_context.go:430
    should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:486

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:02:12.367
    Feb  9 01:02:12.367: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename security-context-test 02/09/23 01:02:12.367
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:12.382
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:12.386
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:486
    Feb  9 01:02:12.401: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-a3e6ca52-564a-462f-a664-926e22e3e669" in namespace "security-context-test-7140" to be "Succeeded or Failed"
    Feb  9 01:02:12.407: INFO: Pod "busybox-readonly-false-a3e6ca52-564a-462f-a664-926e22e3e669": Phase="Pending", Reason="", readiness=false. Elapsed: 5.400502ms
    Feb  9 01:02:14.414: INFO: Pod "busybox-readonly-false-a3e6ca52-564a-462f-a664-926e22e3e669": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01238747s
    Feb  9 01:02:16.414: INFO: Pod "busybox-readonly-false-a3e6ca52-564a-462f-a664-926e22e3e669": Phase="Pending", Reason="", readiness=false. Elapsed: 4.012816369s
    Feb  9 01:02:18.413: INFO: Pod "busybox-readonly-false-a3e6ca52-564a-462f-a664-926e22e3e669": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.012063444s
    Feb  9 01:02:18.413: INFO: Pod "busybox-readonly-false-a3e6ca52-564a-462f-a664-926e22e3e669" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:02:18.413: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-7140" for this suite. 02/09/23 01:02:18.421
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:02:18.43
Feb  9 01:02:18.430: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename job 02/09/23 01:02:18.431
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:18.446
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:18.45
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426
STEP: Creating a job 02/09/23 01:02:18.454
STEP: Ensuring job reaches completions 02/09/23 01:02:18.46
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Feb  9 01:02:28.468: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-310" for this suite. 02/09/23 01:02:28.476
------------------------------
â€¢ [SLOW TEST] [10.056 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:02:18.43
    Feb  9 01:02:18.430: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename job 02/09/23 01:02:18.431
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:18.446
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:18.45
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
      test/e2e/apps/job.go:426
    STEP: Creating a job 02/09/23 01:02:18.454
    STEP: Ensuring job reaches completions 02/09/23 01:02:18.46
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:02:28.468: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-310" for this suite. 02/09/23 01:02:28.476
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:02:28.487
Feb  9 01:02:28.487: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 01:02:28.487
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:28.502
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:28.509
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207
STEP: Creating a pod to test emptydir 0666 on node default medium 02/09/23 01:02:28.513
Feb  9 01:02:28.527: INFO: Waiting up to 5m0s for pod "pod-4590b058-ffa0-4344-9115-8b169c44fd52" in namespace "emptydir-5707" to be "Succeeded or Failed"
Feb  9 01:02:28.535: INFO: Pod "pod-4590b058-ffa0-4344-9115-8b169c44fd52": Phase="Pending", Reason="", readiness=false. Elapsed: 8.530473ms
Feb  9 01:02:30.545: INFO: Pod "pod-4590b058-ffa0-4344-9115-8b169c44fd52": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018609826s
Feb  9 01:02:32.544: INFO: Pod "pod-4590b058-ffa0-4344-9115-8b169c44fd52": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017655098s
STEP: Saw pod success 02/09/23 01:02:32.544
Feb  9 01:02:32.544: INFO: Pod "pod-4590b058-ffa0-4344-9115-8b169c44fd52" satisfied condition "Succeeded or Failed"
Feb  9 01:02:32.550: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-4590b058-ffa0-4344-9115-8b169c44fd52 container test-container: <nil>
STEP: delete the pod 02/09/23 01:02:32.563
Feb  9 01:02:32.584: INFO: Waiting for pod pod-4590b058-ffa0-4344-9115-8b169c44fd52 to disappear
Feb  9 01:02:32.589: INFO: Pod pod-4590b058-ffa0-4344-9115-8b169c44fd52 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:02:32.589: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-5707" for this suite. 02/09/23 01:02:32.598
------------------------------
â€¢ [4.121 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:02:28.487
    Feb  9 01:02:28.487: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 01:02:28.487
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:28.502
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:28.509
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:207
    STEP: Creating a pod to test emptydir 0666 on node default medium 02/09/23 01:02:28.513
    Feb  9 01:02:28.527: INFO: Waiting up to 5m0s for pod "pod-4590b058-ffa0-4344-9115-8b169c44fd52" in namespace "emptydir-5707" to be "Succeeded or Failed"
    Feb  9 01:02:28.535: INFO: Pod "pod-4590b058-ffa0-4344-9115-8b169c44fd52": Phase="Pending", Reason="", readiness=false. Elapsed: 8.530473ms
    Feb  9 01:02:30.545: INFO: Pod "pod-4590b058-ffa0-4344-9115-8b169c44fd52": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018609826s
    Feb  9 01:02:32.544: INFO: Pod "pod-4590b058-ffa0-4344-9115-8b169c44fd52": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017655098s
    STEP: Saw pod success 02/09/23 01:02:32.544
    Feb  9 01:02:32.544: INFO: Pod "pod-4590b058-ffa0-4344-9115-8b169c44fd52" satisfied condition "Succeeded or Failed"
    Feb  9 01:02:32.550: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-4590b058-ffa0-4344-9115-8b169c44fd52 container test-container: <nil>
    STEP: delete the pod 02/09/23 01:02:32.563
    Feb  9 01:02:32.584: INFO: Waiting for pod pod-4590b058-ffa0-4344-9115-8b169c44fd52 to disappear
    Feb  9 01:02:32.589: INFO: Pod pod-4590b058-ffa0-4344-9115-8b169c44fd52 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:02:32.589: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-5707" for this suite. 02/09/23 01:02:32.598
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:105
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:02:32.608
Feb  9 01:02:32.608: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pod-network-test 02/09/23 01:02:32.608
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:32.627
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:32.631
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:105
STEP: Performing setup for networking test in namespace pod-network-test-4721 02/09/23 01:02:32.635
STEP: creating a selector 02/09/23 01:02:32.635
STEP: Creating the service pods in kubernetes 02/09/23 01:02:32.636
Feb  9 01:02:32.636: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Feb  9 01:02:32.672: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-4721" to be "running and ready"
Feb  9 01:02:32.680: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 7.868548ms
Feb  9 01:02:32.680: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:02:34.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.014706968s
Feb  9 01:02:34.687: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:02:36.688: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.015930354s
Feb  9 01:02:36.688: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:02:38.688: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.01535433s
Feb  9 01:02:38.688: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:02:40.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.014681348s
Feb  9 01:02:40.687: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:02:42.688: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.016062469s
Feb  9 01:02:42.688: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:02:44.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.014234491s
Feb  9 01:02:44.687: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:02:46.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.014494982s
Feb  9 01:02:46.687: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:02:48.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.014444102s
Feb  9 01:02:48.687: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:02:50.686: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.014005196s
Feb  9 01:02:50.686: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:02:52.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.014425704s
Feb  9 01:02:52.687: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:02:54.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.01460446s
Feb  9 01:02:54.687: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Feb  9 01:02:54.687: INFO: Pod "netserver-0" satisfied condition "running and ready"
Feb  9 01:02:54.693: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-4721" to be "running and ready"
Feb  9 01:02:54.698: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 5.206906ms
Feb  9 01:02:54.698: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Feb  9 01:02:54.698: INFO: Pod "netserver-1" satisfied condition "running and ready"
Feb  9 01:02:54.704: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-4721" to be "running and ready"
Feb  9 01:02:54.708: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 4.804297ms
Feb  9 01:02:54.708: INFO: The phase of Pod netserver-2 is Running (Ready = true)
Feb  9 01:02:54.708: INFO: Pod "netserver-2" satisfied condition "running and ready"
STEP: Creating test pods 02/09/23 01:02:54.713
Feb  9 01:02:54.733: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-4721" to be "running"
Feb  9 01:02:54.738: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.882399ms
Feb  9 01:02:56.745: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.01190773s
Feb  9 01:02:56.745: INFO: Pod "test-container-pod" satisfied condition "running"
Feb  9 01:02:56.750: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-4721" to be "running"
Feb  9 01:02:56.755: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 5.720916ms
Feb  9 01:02:56.755: INFO: Pod "host-test-container-pod" satisfied condition "running"
Feb  9 01:02:56.761: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Feb  9 01:02:56.761: INFO: Going to poll 10.244.0.101 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Feb  9 01:02:56.766: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.101:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4721 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:02:56.766: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:02:56.766: INFO: ExecWithOptions: Clientset creation
Feb  9 01:02:56.767: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-4721/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.101%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Feb  9 01:02:56.860: INFO: Found all 1 expected endpoints: [netserver-0]
Feb  9 01:02:56.860: INFO: Going to poll 10.244.1.56 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Feb  9 01:02:56.866: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.56:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4721 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:02:56.866: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:02:56.866: INFO: ExecWithOptions: Clientset creation
Feb  9 01:02:56.867: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-4721/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.56%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Feb  9 01:02:56.967: INFO: Found all 1 expected endpoints: [netserver-1]
Feb  9 01:02:56.967: INFO: Going to poll 10.244.2.52 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Feb  9 01:02:56.973: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.2.52:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4721 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:02:56.973: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:02:56.973: INFO: ExecWithOptions: Clientset creation
Feb  9 01:02:56.973: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-4721/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.2.52%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Feb  9 01:02:57.058: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Feb  9 01:02:57.058: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-4721" for this suite. 02/09/23 01:02:57.066
------------------------------
â€¢ [SLOW TEST] [24.467 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:105

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:02:32.608
    Feb  9 01:02:32.608: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pod-network-test 02/09/23 01:02:32.608
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:32.627
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:32.631
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:105
    STEP: Performing setup for networking test in namespace pod-network-test-4721 02/09/23 01:02:32.635
    STEP: creating a selector 02/09/23 01:02:32.635
    STEP: Creating the service pods in kubernetes 02/09/23 01:02:32.636
    Feb  9 01:02:32.636: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Feb  9 01:02:32.672: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-4721" to be "running and ready"
    Feb  9 01:02:32.680: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 7.868548ms
    Feb  9 01:02:32.680: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:02:34.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.014706968s
    Feb  9 01:02:34.687: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:02:36.688: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.015930354s
    Feb  9 01:02:36.688: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:02:38.688: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.01535433s
    Feb  9 01:02:38.688: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:02:40.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.014681348s
    Feb  9 01:02:40.687: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:02:42.688: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.016062469s
    Feb  9 01:02:42.688: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:02:44.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.014234491s
    Feb  9 01:02:44.687: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:02:46.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.014494982s
    Feb  9 01:02:46.687: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:02:48.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.014444102s
    Feb  9 01:02:48.687: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:02:50.686: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.014005196s
    Feb  9 01:02:50.686: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:02:52.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.014425704s
    Feb  9 01:02:52.687: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:02:54.687: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.01460446s
    Feb  9 01:02:54.687: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Feb  9 01:02:54.687: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Feb  9 01:02:54.693: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-4721" to be "running and ready"
    Feb  9 01:02:54.698: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 5.206906ms
    Feb  9 01:02:54.698: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Feb  9 01:02:54.698: INFO: Pod "netserver-1" satisfied condition "running and ready"
    Feb  9 01:02:54.704: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-4721" to be "running and ready"
    Feb  9 01:02:54.708: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 4.804297ms
    Feb  9 01:02:54.708: INFO: The phase of Pod netserver-2 is Running (Ready = true)
    Feb  9 01:02:54.708: INFO: Pod "netserver-2" satisfied condition "running and ready"
    STEP: Creating test pods 02/09/23 01:02:54.713
    Feb  9 01:02:54.733: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-4721" to be "running"
    Feb  9 01:02:54.738: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.882399ms
    Feb  9 01:02:56.745: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.01190773s
    Feb  9 01:02:56.745: INFO: Pod "test-container-pod" satisfied condition "running"
    Feb  9 01:02:56.750: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-4721" to be "running"
    Feb  9 01:02:56.755: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 5.720916ms
    Feb  9 01:02:56.755: INFO: Pod "host-test-container-pod" satisfied condition "running"
    Feb  9 01:02:56.761: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
    Feb  9 01:02:56.761: INFO: Going to poll 10.244.0.101 on port 8083 at least 0 times, with a maximum of 39 tries before failing
    Feb  9 01:02:56.766: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.101:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4721 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:02:56.766: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:02:56.766: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:02:56.767: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-4721/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.101%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Feb  9 01:02:56.860: INFO: Found all 1 expected endpoints: [netserver-0]
    Feb  9 01:02:56.860: INFO: Going to poll 10.244.1.56 on port 8083 at least 0 times, with a maximum of 39 tries before failing
    Feb  9 01:02:56.866: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.56:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4721 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:02:56.866: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:02:56.866: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:02:56.867: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-4721/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.56%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Feb  9 01:02:56.967: INFO: Found all 1 expected endpoints: [netserver-1]
    Feb  9 01:02:56.967: INFO: Going to poll 10.244.2.52 on port 8083 at least 0 times, with a maximum of 39 tries before failing
    Feb  9 01:02:56.973: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.2.52:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4721 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:02:56.973: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:02:56.973: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:02:56.973: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-4721/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.2.52%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Feb  9 01:02:57.058: INFO: Found all 1 expected endpoints: [netserver-2]
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:02:57.058: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-4721" for this suite. 02/09/23 01:02:57.066
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:02:57.076
Feb  9 01:02:57.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename var-expansion 02/09/23 01:02:57.077
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:57.091
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:57.095
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225
STEP: creating the pod with failed condition 02/09/23 01:02:57.1
Feb  9 01:02:57.115: INFO: Waiting up to 2m0s for pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423" in namespace "var-expansion-3585" to be "running"
Feb  9 01:02:57.122: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 6.556433ms
Feb  9 01:02:59.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013712967s
Feb  9 01:03:01.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01439915s
Feb  9 01:03:03.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 6.014359115s
Feb  9 01:03:05.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 8.013803242s
Feb  9 01:03:07.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 10.012561157s
Feb  9 01:03:09.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 12.013781413s
Feb  9 01:03:11.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 14.012827535s
Feb  9 01:03:13.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 16.012367122s
Feb  9 01:03:15.135: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 18.019820026s
Feb  9 01:03:17.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 20.014111174s
Feb  9 01:03:19.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 22.013231332s
Feb  9 01:03:21.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 24.013565367s
Feb  9 01:03:23.131: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 26.015455826s
Feb  9 01:03:25.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 28.014121135s
Feb  9 01:03:27.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 30.01246137s
Feb  9 01:03:29.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 32.013649584s
Feb  9 01:03:31.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 34.01431549s
Feb  9 01:03:33.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 36.013520573s
Feb  9 01:03:35.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 38.012725659s
Feb  9 01:03:37.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 40.013513773s
Feb  9 01:03:39.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 42.014389489s
Feb  9 01:03:41.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 44.014047886s
Feb  9 01:03:43.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 46.014304064s
Feb  9 01:03:45.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 48.013721474s
Feb  9 01:03:47.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 50.012670678s
Feb  9 01:03:49.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 52.014873528s
Feb  9 01:03:51.131: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 54.0159283s
Feb  9 01:03:53.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 56.012912682s
Feb  9 01:03:55.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 58.014054693s
Feb  9 01:03:57.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.013855272s
Feb  9 01:03:59.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.01346078s
Feb  9 01:04:01.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.014057356s
Feb  9 01:04:03.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.012696807s
Feb  9 01:04:05.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.014004692s
Feb  9 01:04:07.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.013435726s
Feb  9 01:04:09.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.014408707s
Feb  9 01:04:11.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.014331274s
Feb  9 01:04:13.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.012291315s
Feb  9 01:04:15.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.01351126s
Feb  9 01:04:17.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.013017931s
Feb  9 01:04:19.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.013847612s
Feb  9 01:04:21.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.013152936s
Feb  9 01:04:23.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.013278192s
Feb  9 01:04:25.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.013454051s
Feb  9 01:04:27.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.013046403s
Feb  9 01:04:29.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.013422964s
Feb  9 01:04:31.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.014067786s
Feb  9 01:04:33.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.013314972s
Feb  9 01:04:35.131: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.015569398s
Feb  9 01:04:37.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.012715657s
Feb  9 01:04:39.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.014818366s
Feb  9 01:04:41.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.013408294s
Feb  9 01:04:43.131: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.015243362s
Feb  9 01:04:45.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.014496098s
Feb  9 01:04:47.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.014190808s
Feb  9 01:04:49.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.014866752s
Feb  9 01:04:51.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.013935875s
Feb  9 01:04:53.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.013277101s
Feb  9 01:04:55.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.013622566s
Feb  9 01:04:57.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.01441061s
Feb  9 01:04:57.136: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.020308986s
STEP: updating the pod 02/09/23 01:04:57.136
Feb  9 01:04:57.651: INFO: Successfully updated pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423"
STEP: waiting for pod running 02/09/23 01:04:57.652
Feb  9 01:04:57.652: INFO: Waiting up to 2m0s for pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423" in namespace "var-expansion-3585" to be "running"
Feb  9 01:04:57.657: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 5.200767ms
Feb  9 01:04:59.664: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Running", Reason="", readiness=true. Elapsed: 2.011852588s
Feb  9 01:04:59.664: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423" satisfied condition "running"
STEP: deleting the pod gracefully 02/09/23 01:04:59.664
Feb  9 01:04:59.664: INFO: Deleting pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423" in namespace "var-expansion-3585"
Feb  9 01:04:59.675: INFO: Wait up to 5m0s for pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Feb  9 01:05:31.686: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-3585" for this suite. 02/09/23 01:05:31.694
------------------------------
â€¢ [SLOW TEST] [154.630 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:02:57.076
    Feb  9 01:02:57.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename var-expansion 02/09/23 01:02:57.077
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:02:57.091
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:02:57.095
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
      test/e2e/common/node/expansion.go:225
    STEP: creating the pod with failed condition 02/09/23 01:02:57.1
    Feb  9 01:02:57.115: INFO: Waiting up to 2m0s for pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423" in namespace "var-expansion-3585" to be "running"
    Feb  9 01:02:57.122: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 6.556433ms
    Feb  9 01:02:59.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013712967s
    Feb  9 01:03:01.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01439915s
    Feb  9 01:03:03.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 6.014359115s
    Feb  9 01:03:05.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 8.013803242s
    Feb  9 01:03:07.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 10.012561157s
    Feb  9 01:03:09.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 12.013781413s
    Feb  9 01:03:11.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 14.012827535s
    Feb  9 01:03:13.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 16.012367122s
    Feb  9 01:03:15.135: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 18.019820026s
    Feb  9 01:03:17.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 20.014111174s
    Feb  9 01:03:19.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 22.013231332s
    Feb  9 01:03:21.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 24.013565367s
    Feb  9 01:03:23.131: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 26.015455826s
    Feb  9 01:03:25.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 28.014121135s
    Feb  9 01:03:27.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 30.01246137s
    Feb  9 01:03:29.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 32.013649584s
    Feb  9 01:03:31.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 34.01431549s
    Feb  9 01:03:33.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 36.013520573s
    Feb  9 01:03:35.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 38.012725659s
    Feb  9 01:03:37.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 40.013513773s
    Feb  9 01:03:39.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 42.014389489s
    Feb  9 01:03:41.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 44.014047886s
    Feb  9 01:03:43.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 46.014304064s
    Feb  9 01:03:45.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 48.013721474s
    Feb  9 01:03:47.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 50.012670678s
    Feb  9 01:03:49.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 52.014873528s
    Feb  9 01:03:51.131: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 54.0159283s
    Feb  9 01:03:53.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 56.012912682s
    Feb  9 01:03:55.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 58.014054693s
    Feb  9 01:03:57.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.013855272s
    Feb  9 01:03:59.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.01346078s
    Feb  9 01:04:01.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.014057356s
    Feb  9 01:04:03.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.012696807s
    Feb  9 01:04:05.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.014004692s
    Feb  9 01:04:07.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.013435726s
    Feb  9 01:04:09.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.014408707s
    Feb  9 01:04:11.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.014331274s
    Feb  9 01:04:13.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.012291315s
    Feb  9 01:04:15.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.01351126s
    Feb  9 01:04:17.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.013017931s
    Feb  9 01:04:19.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.013847612s
    Feb  9 01:04:21.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.013152936s
    Feb  9 01:04:23.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.013278192s
    Feb  9 01:04:25.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.013454051s
    Feb  9 01:04:27.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.013046403s
    Feb  9 01:04:29.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.013422964s
    Feb  9 01:04:31.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.014067786s
    Feb  9 01:04:33.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.013314972s
    Feb  9 01:04:35.131: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.015569398s
    Feb  9 01:04:37.128: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.012715657s
    Feb  9 01:04:39.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.014818366s
    Feb  9 01:04:41.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.013408294s
    Feb  9 01:04:43.131: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.015243362s
    Feb  9 01:04:45.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.014496098s
    Feb  9 01:04:47.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.014190808s
    Feb  9 01:04:49.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.014866752s
    Feb  9 01:04:51.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.013935875s
    Feb  9 01:04:53.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.013277101s
    Feb  9 01:04:55.129: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.013622566s
    Feb  9 01:04:57.130: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.01441061s
    Feb  9 01:04:57.136: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.020308986s
    STEP: updating the pod 02/09/23 01:04:57.136
    Feb  9 01:04:57.651: INFO: Successfully updated pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423"
    STEP: waiting for pod running 02/09/23 01:04:57.652
    Feb  9 01:04:57.652: INFO: Waiting up to 2m0s for pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423" in namespace "var-expansion-3585" to be "running"
    Feb  9 01:04:57.657: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Pending", Reason="", readiness=false. Elapsed: 5.200767ms
    Feb  9 01:04:59.664: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423": Phase="Running", Reason="", readiness=true. Elapsed: 2.011852588s
    Feb  9 01:04:59.664: INFO: Pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423" satisfied condition "running"
    STEP: deleting the pod gracefully 02/09/23 01:04:59.664
    Feb  9 01:04:59.664: INFO: Deleting pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423" in namespace "var-expansion-3585"
    Feb  9 01:04:59.675: INFO: Wait up to 5m0s for pod "var-expansion-d367dc7a-bc14-4376-b2ca-61df94c47423" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:05:31.686: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-3585" for this suite. 02/09/23 01:05:31.694
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes
  should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:05:31.708
Feb  9 01:05:31.708: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir-wrapper 02/09/23 01:05:31.709
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:05:31.729
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:05:31.734
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67
Feb  9 01:05:31.766: INFO: Waiting up to 5m0s for pod "pod-secrets-50d302e1-0c25-4735-b383-4bb984623b9c" in namespace "emptydir-wrapper-704" to be "running and ready"
Feb  9 01:05:31.773: INFO: Pod "pod-secrets-50d302e1-0c25-4735-b383-4bb984623b9c": Phase="Pending", Reason="", readiness=false. Elapsed: 7.084173ms
Feb  9 01:05:31.773: INFO: The phase of Pod pod-secrets-50d302e1-0c25-4735-b383-4bb984623b9c is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:05:33.780: INFO: Pod "pod-secrets-50d302e1-0c25-4735-b383-4bb984623b9c": Phase="Running", Reason="", readiness=true. Elapsed: 2.013853892s
Feb  9 01:05:33.780: INFO: The phase of Pod pod-secrets-50d302e1-0c25-4735-b383-4bb984623b9c is Running (Ready = true)
Feb  9 01:05:33.780: INFO: Pod "pod-secrets-50d302e1-0c25-4735-b383-4bb984623b9c" satisfied condition "running and ready"
STEP: Cleaning up the secret 02/09/23 01:05:33.786
STEP: Cleaning up the configmap 02/09/23 01:05:33.796
STEP: Cleaning up the pod 02/09/23 01:05:33.804
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:05:33.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-wrapper-704" for this suite. 02/09/23 01:05:33.829
------------------------------
â€¢ [2.130 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:05:31.708
    Feb  9 01:05:31.708: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir-wrapper 02/09/23 01:05:31.709
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:05:31.729
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:05:31.734
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should not conflict [Conformance]
      test/e2e/storage/empty_dir_wrapper.go:67
    Feb  9 01:05:31.766: INFO: Waiting up to 5m0s for pod "pod-secrets-50d302e1-0c25-4735-b383-4bb984623b9c" in namespace "emptydir-wrapper-704" to be "running and ready"
    Feb  9 01:05:31.773: INFO: Pod "pod-secrets-50d302e1-0c25-4735-b383-4bb984623b9c": Phase="Pending", Reason="", readiness=false. Elapsed: 7.084173ms
    Feb  9 01:05:31.773: INFO: The phase of Pod pod-secrets-50d302e1-0c25-4735-b383-4bb984623b9c is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:05:33.780: INFO: Pod "pod-secrets-50d302e1-0c25-4735-b383-4bb984623b9c": Phase="Running", Reason="", readiness=true. Elapsed: 2.013853892s
    Feb  9 01:05:33.780: INFO: The phase of Pod pod-secrets-50d302e1-0c25-4735-b383-4bb984623b9c is Running (Ready = true)
    Feb  9 01:05:33.780: INFO: Pod "pod-secrets-50d302e1-0c25-4735-b383-4bb984623b9c" satisfied condition "running and ready"
    STEP: Cleaning up the secret 02/09/23 01:05:33.786
    STEP: Cleaning up the configmap 02/09/23 01:05:33.796
    STEP: Cleaning up the pod 02/09/23 01:05:33.804
    [AfterEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:05:33.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-wrapper-704" for this suite. 02/09/23 01:05:33.829
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:05:33.84
Feb  9 01:05:33.840: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-probe 02/09/23 01:05:33.841
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:05:33.855
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:05:33.862
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72
Feb  9 01:05:33.882: INFO: Waiting up to 5m0s for pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd" in namespace "container-probe-548" to be "running and ready"
Feb  9 01:05:33.888: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Pending", Reason="", readiness=false. Elapsed: 5.87246ms
Feb  9 01:05:33.888: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:05:35.901: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 2.01839422s
Feb  9 01:05:35.901: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
Feb  9 01:05:37.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 4.012582187s
Feb  9 01:05:37.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
Feb  9 01:05:39.896: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 6.013468797s
Feb  9 01:05:39.896: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
Feb  9 01:05:41.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 8.012983179s
Feb  9 01:05:41.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
Feb  9 01:05:43.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 10.012475615s
Feb  9 01:05:43.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
Feb  9 01:05:45.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 12.012577238s
Feb  9 01:05:45.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
Feb  9 01:05:47.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 14.012541359s
Feb  9 01:05:47.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
Feb  9 01:05:49.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 16.012646282s
Feb  9 01:05:49.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
Feb  9 01:05:51.894: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 18.011498125s
Feb  9 01:05:51.894: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
Feb  9 01:05:53.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 20.012601152s
Feb  9 01:05:53.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
Feb  9 01:05:55.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=true. Elapsed: 22.012432064s
Feb  9 01:05:55.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = true)
Feb  9 01:05:55.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd" satisfied condition "running and ready"
Feb  9 01:05:55.900: INFO: Container started at 2023-02-09 01:05:34 +0000 UTC, pod became ready at 2023-02-09 01:05:54 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Feb  9 01:05:55.900: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-548" for this suite. 02/09/23 01:05:55.908
------------------------------
â€¢ [SLOW TEST] [22.078 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:05:33.84
    Feb  9 01:05:33.840: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-probe 02/09/23 01:05:33.841
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:05:33.855
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:05:33.862
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:72
    Feb  9 01:05:33.882: INFO: Waiting up to 5m0s for pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd" in namespace "container-probe-548" to be "running and ready"
    Feb  9 01:05:33.888: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Pending", Reason="", readiness=false. Elapsed: 5.87246ms
    Feb  9 01:05:33.888: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:05:35.901: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 2.01839422s
    Feb  9 01:05:35.901: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
    Feb  9 01:05:37.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 4.012582187s
    Feb  9 01:05:37.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
    Feb  9 01:05:39.896: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 6.013468797s
    Feb  9 01:05:39.896: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
    Feb  9 01:05:41.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 8.012983179s
    Feb  9 01:05:41.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
    Feb  9 01:05:43.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 10.012475615s
    Feb  9 01:05:43.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
    Feb  9 01:05:45.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 12.012577238s
    Feb  9 01:05:45.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
    Feb  9 01:05:47.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 14.012541359s
    Feb  9 01:05:47.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
    Feb  9 01:05:49.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 16.012646282s
    Feb  9 01:05:49.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
    Feb  9 01:05:51.894: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 18.011498125s
    Feb  9 01:05:51.894: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
    Feb  9 01:05:53.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=false. Elapsed: 20.012601152s
    Feb  9 01:05:53.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = false)
    Feb  9 01:05:55.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd": Phase="Running", Reason="", readiness=true. Elapsed: 22.012432064s
    Feb  9 01:05:55.895: INFO: The phase of Pod test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd is Running (Ready = true)
    Feb  9 01:05:55.895: INFO: Pod "test-webserver-f5362fa4-6ab0-4d77-9b73-c1cac38f54cd" satisfied condition "running and ready"
    Feb  9 01:05:55.900: INFO: Container started at 2023-02-09 01:05:34 +0000 UTC, pod became ready at 2023-02-09 01:05:54 +0000 UTC
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:05:55.900: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-548" for this suite. 02/09/23 01:05:55.908
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:05:55.921
Feb  9 01:05:55.921: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:05:55.922
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:05:55.936
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:05:55.94
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236
Feb  9 01:05:55.944: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 02/09/23 01:05:57.593
Feb  9 01:05:57.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-1455 --namespace=crd-publish-openapi-1455 create -f -'
Feb  9 01:05:58.170: INFO: stderr: ""
Feb  9 01:05:58.170: INFO: stdout: "e2e-test-crd-publish-openapi-5562-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Feb  9 01:05:58.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-1455 --namespace=crd-publish-openapi-1455 delete e2e-test-crd-publish-openapi-5562-crds test-cr'
Feb  9 01:05:58.278: INFO: stderr: ""
Feb  9 01:05:58.278: INFO: stdout: "e2e-test-crd-publish-openapi-5562-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Feb  9 01:05:58.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-1455 --namespace=crd-publish-openapi-1455 apply -f -'
Feb  9 01:05:58.461: INFO: stderr: ""
Feb  9 01:05:58.461: INFO: stdout: "e2e-test-crd-publish-openapi-5562-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Feb  9 01:05:58.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-1455 --namespace=crd-publish-openapi-1455 delete e2e-test-crd-publish-openapi-5562-crds test-cr'
Feb  9 01:05:58.558: INFO: stderr: ""
Feb  9 01:05:58.558: INFO: stdout: "e2e-test-crd-publish-openapi-5562-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR 02/09/23 01:05:58.558
Feb  9 01:05:58.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-1455 explain e2e-test-crd-publish-openapi-5562-crds'
Feb  9 01:05:58.725: INFO: stderr: ""
Feb  9 01:05:58.725: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5562-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:06:00.380: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-1455" for this suite. 02/09/23 01:06:00.397
------------------------------
â€¢ [4.485 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:05:55.921
    Feb  9 01:05:55.921: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:05:55.922
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:05:55.936
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:05:55.94
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD preserving unknown fields in an embedded object [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:236
    Feb  9 01:05:55.944: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 02/09/23 01:05:57.593
    Feb  9 01:05:57.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-1455 --namespace=crd-publish-openapi-1455 create -f -'
    Feb  9 01:05:58.170: INFO: stderr: ""
    Feb  9 01:05:58.170: INFO: stdout: "e2e-test-crd-publish-openapi-5562-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
    Feb  9 01:05:58.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-1455 --namespace=crd-publish-openapi-1455 delete e2e-test-crd-publish-openapi-5562-crds test-cr'
    Feb  9 01:05:58.278: INFO: stderr: ""
    Feb  9 01:05:58.278: INFO: stdout: "e2e-test-crd-publish-openapi-5562-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
    Feb  9 01:05:58.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-1455 --namespace=crd-publish-openapi-1455 apply -f -'
    Feb  9 01:05:58.461: INFO: stderr: ""
    Feb  9 01:05:58.461: INFO: stdout: "e2e-test-crd-publish-openapi-5562-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
    Feb  9 01:05:58.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-1455 --namespace=crd-publish-openapi-1455 delete e2e-test-crd-publish-openapi-5562-crds test-cr'
    Feb  9 01:05:58.558: INFO: stderr: ""
    Feb  9 01:05:58.558: INFO: stdout: "e2e-test-crd-publish-openapi-5562-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR 02/09/23 01:05:58.558
    Feb  9 01:05:58.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-1455 explain e2e-test-crd-publish-openapi-5562-crds'
    Feb  9 01:05:58.725: INFO: stderr: ""
    Feb  9 01:05:58.725: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5562-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:06:00.380: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-1455" for this suite. 02/09/23 01:06:00.397
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:06:00.407
Feb  9 01:06:00.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename init-container 02/09/23 01:06:00.407
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:00.428
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:00.433
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458
STEP: creating the pod 02/09/23 01:06:00.438
Feb  9 01:06:00.439: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:06:04.107: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-1910" for this suite. 02/09/23 01:06:04.116
------------------------------
â€¢ [3.718 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:06:00.407
    Feb  9 01:06:00.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename init-container 02/09/23 01:06:00.407
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:00.428
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:00.433
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
      test/e2e/common/node/init_container.go:458
    STEP: creating the pod 02/09/23 01:06:00.438
    Feb  9 01:06:00.439: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:06:04.107: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-1910" for this suite. 02/09/23 01:06:04.116
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61
[BeforeEach] [sig-scheduling] LimitRange
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:06:04.126
Feb  9 01:06:04.126: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename limitrange 02/09/23 01:06:04.127
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:04.146
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:04.151
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:31
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61
STEP: Creating a LimitRange 02/09/23 01:06:04.155
STEP: Setting up watch 02/09/23 01:06:04.155
STEP: Submitting a LimitRange 02/09/23 01:06:04.261
STEP: Verifying LimitRange creation was observed 02/09/23 01:06:04.268
STEP: Fetching the LimitRange to ensure it has proper values 02/09/23 01:06:04.269
Feb  9 01:06:04.274: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Feb  9 01:06:04.274: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements 02/09/23 01:06:04.274
STEP: Ensuring Pod has resource requirements applied from LimitRange 02/09/23 01:06:04.283
Feb  9 01:06:04.289: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Feb  9 01:06:04.289: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements 02/09/23 01:06:04.289
STEP: Ensuring Pod has merged resource requirements applied from LimitRange 02/09/23 01:06:04.297
Feb  9 01:06:04.304: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Feb  9 01:06:04.304: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources 02/09/23 01:06:04.304
STEP: Failing to create a Pod with more than max resources 02/09/23 01:06:04.308
STEP: Updating a LimitRange 02/09/23 01:06:04.312
STEP: Verifying LimitRange updating is effective 02/09/23 01:06:04.32
STEP: Creating a Pod with less than former min resources 02/09/23 01:06:06.326
STEP: Failing to create a Pod with more than max resources 02/09/23 01:06:06.335
STEP: Deleting a LimitRange 02/09/23 01:06:06.339
STEP: Verifying the LimitRange was deleted 02/09/23 01:06:06.35
Feb  9 01:06:11.356: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources 02/09/23 01:06:11.356
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/node/init/init.go:32
Feb  9 01:06:11.369: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  tear down framework | framework.go:193
STEP: Destroying namespace "limitrange-3001" for this suite. 02/09/23 01:06:11.379
------------------------------
â€¢ [SLOW TEST] [7.262 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] LimitRange
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:06:04.126
    Feb  9 01:06:04.126: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename limitrange 02/09/23 01:06:04.127
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:04.146
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:04.151
    [BeforeEach] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
      test/e2e/scheduling/limit_range.go:61
    STEP: Creating a LimitRange 02/09/23 01:06:04.155
    STEP: Setting up watch 02/09/23 01:06:04.155
    STEP: Submitting a LimitRange 02/09/23 01:06:04.261
    STEP: Verifying LimitRange creation was observed 02/09/23 01:06:04.268
    STEP: Fetching the LimitRange to ensure it has proper values 02/09/23 01:06:04.269
    Feb  9 01:06:04.274: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
    Feb  9 01:06:04.274: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Creating a Pod with no resource requirements 02/09/23 01:06:04.274
    STEP: Ensuring Pod has resource requirements applied from LimitRange 02/09/23 01:06:04.283
    Feb  9 01:06:04.289: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
    Feb  9 01:06:04.289: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Creating a Pod with partial resource requirements 02/09/23 01:06:04.289
    STEP: Ensuring Pod has merged resource requirements applied from LimitRange 02/09/23 01:06:04.297
    Feb  9 01:06:04.304: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
    Feb  9 01:06:04.304: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Failing to create a Pod with less than min resources 02/09/23 01:06:04.304
    STEP: Failing to create a Pod with more than max resources 02/09/23 01:06:04.308
    STEP: Updating a LimitRange 02/09/23 01:06:04.312
    STEP: Verifying LimitRange updating is effective 02/09/23 01:06:04.32
    STEP: Creating a Pod with less than former min resources 02/09/23 01:06:06.326
    STEP: Failing to create a Pod with more than max resources 02/09/23 01:06:06.335
    STEP: Deleting a LimitRange 02/09/23 01:06:06.339
    STEP: Verifying the LimitRange was deleted 02/09/23 01:06:06.35
    Feb  9 01:06:11.356: INFO: limitRange is already deleted
    STEP: Creating a Pod with more than former max resources 02/09/23 01:06:11.356
    [AfterEach] [sig-scheduling] LimitRange
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:06:11.369: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      tear down framework | framework.go:193
    STEP: Destroying namespace "limitrange-3001" for this suite. 02/09/23 01:06:11.379
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:232
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:06:11.389
Feb  9 01:06:11.390: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-runtime 02/09/23 01:06:11.39
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:11.409
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:11.414
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:232
STEP: create the container 02/09/23 01:06:11.419
STEP: wait for the container to reach Succeeded 02/09/23 01:06:11.433
STEP: get the container status 02/09/23 01:06:14.463
STEP: the container should be terminated 02/09/23 01:06:14.469
STEP: the termination message should be set 02/09/23 01:06:14.469
Feb  9 01:06:14.469: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container 02/09/23 01:06:14.469
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Feb  9 01:06:14.508: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-3233" for this suite. 02/09/23 01:06:14.517
------------------------------
â€¢ [3.136 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:232

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:06:11.389
    Feb  9 01:06:11.390: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-runtime 02/09/23 01:06:11.39
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:11.409
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:11.414
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:232
    STEP: create the container 02/09/23 01:06:11.419
    STEP: wait for the container to reach Succeeded 02/09/23 01:06:11.433
    STEP: get the container status 02/09/23 01:06:14.463
    STEP: the container should be terminated 02/09/23 01:06:14.469
    STEP: the termination message should be set 02/09/23 01:06:14.469
    Feb  9 01:06:14.469: INFO: Expected: &{} to match Container's Termination Message:  --
    STEP: delete the container 02/09/23 01:06:14.469
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:06:14.508: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-3233" for this suite. 02/09/23 01:06:14.517
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-network] Services
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:06:14.527
Feb  9 01:06:14.527: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:06:14.528
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:14.547
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:14.551
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787
STEP: creating service endpoint-test2 in namespace services-4649 02/09/23 01:06:14.556
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[] 02/09/23 01:06:14.573
Feb  9 01:06:14.589: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-4649 02/09/23 01:06:14.589
Feb  9 01:06:14.608: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-4649" to be "running and ready"
Feb  9 01:06:14.616: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 8.237988ms
Feb  9 01:06:14.616: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:06:16.622: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.014575099s
Feb  9 01:06:16.622: INFO: The phase of Pod pod1 is Running (Ready = true)
Feb  9 01:06:16.622: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[pod1:[80]] 02/09/23 01:06:16.628
Feb  9 01:06:16.650: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1 02/09/23 01:06:16.65
Feb  9 01:06:16.650: INFO: Creating new exec pod
Feb  9 01:06:16.658: INFO: Waiting up to 5m0s for pod "execpodpmnkr" in namespace "services-4649" to be "running"
Feb  9 01:06:16.664: INFO: Pod "execpodpmnkr": Phase="Pending", Reason="", readiness=false. Elapsed: 6.009265ms
Feb  9 01:06:18.671: INFO: Pod "execpodpmnkr": Phase="Running", Reason="", readiness=true. Elapsed: 2.01273118s
Feb  9 01:06:18.671: INFO: Pod "execpodpmnkr" satisfied condition "running"
Feb  9 01:06:19.671: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-4649 exec execpodpmnkr -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Feb  9 01:06:19.833: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Feb  9 01:06:19.833: INFO: stdout: ""
Feb  9 01:06:19.833: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-4649 exec execpodpmnkr -- /bin/sh -x -c nc -v -z -w 2 10.0.176.161 80'
Feb  9 01:06:19.981: INFO: stderr: "+ nc -v -z -w 2 10.0.176.161 80\nConnection to 10.0.176.161 80 port [tcp/http] succeeded!\n"
Feb  9 01:06:19.981: INFO: stdout: ""
STEP: Creating pod pod2 in namespace services-4649 02/09/23 01:06:19.981
Feb  9 01:06:19.990: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-4649" to be "running and ready"
Feb  9 01:06:19.995: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.204856ms
Feb  9 01:06:19.995: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:06:22.002: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.011715769s
Feb  9 01:06:22.002: INFO: The phase of Pod pod2 is Running (Ready = true)
Feb  9 01:06:22.002: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[pod1:[80] pod2:[80]] 02/09/23 01:06:22.008
Feb  9 01:06:22.033: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2 02/09/23 01:06:22.033
Feb  9 01:06:23.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-4649 exec execpodpmnkr -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Feb  9 01:06:23.191: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Feb  9 01:06:23.191: INFO: stdout: ""
Feb  9 01:06:23.191: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-4649 exec execpodpmnkr -- /bin/sh -x -c nc -v -z -w 2 10.0.176.161 80'
Feb  9 01:06:23.353: INFO: stderr: "+ nc -v -z -w 2 10.0.176.161 80\nConnection to 10.0.176.161 80 port [tcp/http] succeeded!\n"
Feb  9 01:06:23.353: INFO: stdout: ""
STEP: Deleting pod pod1 in namespace services-4649 02/09/23 01:06:23.353
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[pod2:[80]] 02/09/23 01:06:23.373
Feb  9 01:06:23.391: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2 02/09/23 01:06:23.391
Feb  9 01:06:24.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-4649 exec execpodpmnkr -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Feb  9 01:06:24.551: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Feb  9 01:06:24.551: INFO: stdout: ""
Feb  9 01:06:24.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-4649 exec execpodpmnkr -- /bin/sh -x -c nc -v -z -w 2 10.0.176.161 80'
Feb  9 01:06:24.713: INFO: stderr: "+ nc -v -z -w 2 10.0.176.161 80\nConnection to 10.0.176.161 80 port [tcp/http] succeeded!\n"
Feb  9 01:06:24.713: INFO: stdout: ""
STEP: Deleting pod pod2 in namespace services-4649 02/09/23 01:06:24.713
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[] 02/09/23 01:06:24.728
Feb  9 01:06:24.741: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:06:24.768: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-4649" for this suite. 02/09/23 01:06:24.779
------------------------------
â€¢ [SLOW TEST] [10.264 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:06:14.527
    Feb  9 01:06:14.527: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:06:14.528
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:14.547
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:14.551
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should serve a basic endpoint from pods  [Conformance]
      test/e2e/network/service.go:787
    STEP: creating service endpoint-test2 in namespace services-4649 02/09/23 01:06:14.556
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[] 02/09/23 01:06:14.573
    Feb  9 01:06:14.589: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[]
    STEP: Creating pod pod1 in namespace services-4649 02/09/23 01:06:14.589
    Feb  9 01:06:14.608: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-4649" to be "running and ready"
    Feb  9 01:06:14.616: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 8.237988ms
    Feb  9 01:06:14.616: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:06:16.622: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.014575099s
    Feb  9 01:06:16.622: INFO: The phase of Pod pod1 is Running (Ready = true)
    Feb  9 01:06:16.622: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[pod1:[80]] 02/09/23 01:06:16.628
    Feb  9 01:06:16.650: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[pod1:[80]]
    STEP: Checking if the Service forwards traffic to pod1 02/09/23 01:06:16.65
    Feb  9 01:06:16.650: INFO: Creating new exec pod
    Feb  9 01:06:16.658: INFO: Waiting up to 5m0s for pod "execpodpmnkr" in namespace "services-4649" to be "running"
    Feb  9 01:06:16.664: INFO: Pod "execpodpmnkr": Phase="Pending", Reason="", readiness=false. Elapsed: 6.009265ms
    Feb  9 01:06:18.671: INFO: Pod "execpodpmnkr": Phase="Running", Reason="", readiness=true. Elapsed: 2.01273118s
    Feb  9 01:06:18.671: INFO: Pod "execpodpmnkr" satisfied condition "running"
    Feb  9 01:06:19.671: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-4649 exec execpodpmnkr -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Feb  9 01:06:19.833: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Feb  9 01:06:19.833: INFO: stdout: ""
    Feb  9 01:06:19.833: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-4649 exec execpodpmnkr -- /bin/sh -x -c nc -v -z -w 2 10.0.176.161 80'
    Feb  9 01:06:19.981: INFO: stderr: "+ nc -v -z -w 2 10.0.176.161 80\nConnection to 10.0.176.161 80 port [tcp/http] succeeded!\n"
    Feb  9 01:06:19.981: INFO: stdout: ""
    STEP: Creating pod pod2 in namespace services-4649 02/09/23 01:06:19.981
    Feb  9 01:06:19.990: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-4649" to be "running and ready"
    Feb  9 01:06:19.995: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.204856ms
    Feb  9 01:06:19.995: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:06:22.002: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.011715769s
    Feb  9 01:06:22.002: INFO: The phase of Pod pod2 is Running (Ready = true)
    Feb  9 01:06:22.002: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[pod1:[80] pod2:[80]] 02/09/23 01:06:22.008
    Feb  9 01:06:22.033: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[pod1:[80] pod2:[80]]
    STEP: Checking if the Service forwards traffic to pod1 and pod2 02/09/23 01:06:22.033
    Feb  9 01:06:23.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-4649 exec execpodpmnkr -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Feb  9 01:06:23.191: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Feb  9 01:06:23.191: INFO: stdout: ""
    Feb  9 01:06:23.191: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-4649 exec execpodpmnkr -- /bin/sh -x -c nc -v -z -w 2 10.0.176.161 80'
    Feb  9 01:06:23.353: INFO: stderr: "+ nc -v -z -w 2 10.0.176.161 80\nConnection to 10.0.176.161 80 port [tcp/http] succeeded!\n"
    Feb  9 01:06:23.353: INFO: stdout: ""
    STEP: Deleting pod pod1 in namespace services-4649 02/09/23 01:06:23.353
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[pod2:[80]] 02/09/23 01:06:23.373
    Feb  9 01:06:23.391: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[pod2:[80]]
    STEP: Checking if the Service forwards traffic to pod2 02/09/23 01:06:23.391
    Feb  9 01:06:24.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-4649 exec execpodpmnkr -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Feb  9 01:06:24.551: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Feb  9 01:06:24.551: INFO: stdout: ""
    Feb  9 01:06:24.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-4649 exec execpodpmnkr -- /bin/sh -x -c nc -v -z -w 2 10.0.176.161 80'
    Feb  9 01:06:24.713: INFO: stderr: "+ nc -v -z -w 2 10.0.176.161 80\nConnection to 10.0.176.161 80 port [tcp/http] succeeded!\n"
    Feb  9 01:06:24.713: INFO: stdout: ""
    STEP: Deleting pod pod2 in namespace services-4649 02/09/23 01:06:24.713
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[] 02/09/23 01:06:24.728
    Feb  9 01:06:24.741: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[]
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:06:24.768: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-4649" for this suite. 02/09/23 01:06:24.779
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:145
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:06:24.791
Feb  9 01:06:24.791: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename custom-resource-definition 02/09/23 01:06:24.792
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:24.812
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:24.817
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:145
Feb  9 01:06:24.822: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:06:25.370: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-574" for this suite. 02/09/23 01:06:25.38
------------------------------
â€¢ [0.597 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    getting/updating/patching custom resource definition status sub-resource works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:145

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:06:24.791
    Feb  9 01:06:24.791: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename custom-resource-definition 02/09/23 01:06:24.792
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:24.812
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:24.817
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:145
    Feb  9 01:06:24.822: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:06:25.370: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-574" for this suite. 02/09/23 01:06:25.38
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:06:25.389
Feb  9 01:06:25.389: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 01:06:25.39
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:25.41
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:25.414
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187
STEP: Creating a pod to test emptydir 0777 on node default medium 02/09/23 01:06:25.419
Feb  9 01:06:25.431: INFO: Waiting up to 5m0s for pod "pod-667b0b3a-9344-4170-a178-a71d46eecd19" in namespace "emptydir-5210" to be "Succeeded or Failed"
Feb  9 01:06:25.437: INFO: Pod "pod-667b0b3a-9344-4170-a178-a71d46eecd19": Phase="Pending", Reason="", readiness=false. Elapsed: 6.042667ms
Feb  9 01:06:27.445: INFO: Pod "pod-667b0b3a-9344-4170-a178-a71d46eecd19": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014020785s
Feb  9 01:06:29.445: INFO: Pod "pod-667b0b3a-9344-4170-a178-a71d46eecd19": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013810413s
STEP: Saw pod success 02/09/23 01:06:29.445
Feb  9 01:06:29.445: INFO: Pod "pod-667b0b3a-9344-4170-a178-a71d46eecd19" satisfied condition "Succeeded or Failed"
Feb  9 01:06:29.450: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-667b0b3a-9344-4170-a178-a71d46eecd19 container test-container: <nil>
STEP: delete the pod 02/09/23 01:06:29.464
Feb  9 01:06:29.479: INFO: Waiting for pod pod-667b0b3a-9344-4170-a178-a71d46eecd19 to disappear
Feb  9 01:06:29.485: INFO: Pod pod-667b0b3a-9344-4170-a178-a71d46eecd19 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:06:29.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-5210" for this suite. 02/09/23 01:06:29.495
------------------------------
â€¢ [4.116 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:06:25.389
    Feb  9 01:06:25.389: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 01:06:25.39
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:25.41
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:25.414
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:187
    STEP: Creating a pod to test emptydir 0777 on node default medium 02/09/23 01:06:25.419
    Feb  9 01:06:25.431: INFO: Waiting up to 5m0s for pod "pod-667b0b3a-9344-4170-a178-a71d46eecd19" in namespace "emptydir-5210" to be "Succeeded or Failed"
    Feb  9 01:06:25.437: INFO: Pod "pod-667b0b3a-9344-4170-a178-a71d46eecd19": Phase="Pending", Reason="", readiness=false. Elapsed: 6.042667ms
    Feb  9 01:06:27.445: INFO: Pod "pod-667b0b3a-9344-4170-a178-a71d46eecd19": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014020785s
    Feb  9 01:06:29.445: INFO: Pod "pod-667b0b3a-9344-4170-a178-a71d46eecd19": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013810413s
    STEP: Saw pod success 02/09/23 01:06:29.445
    Feb  9 01:06:29.445: INFO: Pod "pod-667b0b3a-9344-4170-a178-a71d46eecd19" satisfied condition "Succeeded or Failed"
    Feb  9 01:06:29.450: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-667b0b3a-9344-4170-a178-a71d46eecd19 container test-container: <nil>
    STEP: delete the pod 02/09/23 01:06:29.464
    Feb  9 01:06:29.479: INFO: Waiting for pod pod-667b0b3a-9344-4170-a178-a71d46eecd19 to disappear
    Feb  9 01:06:29.485: INFO: Pod pod-667b0b3a-9344-4170-a178-a71d46eecd19 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:06:29.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-5210" for this suite. 02/09/23 01:06:29.495
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace
  should update a single-container pod's image  [Conformance]
  test/e2e/kubectl/kubectl.go:1747
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:06:29.505
Feb  9 01:06:29.505: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:06:29.506
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:29.525
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:29.53
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1734
[It] should update a single-container pod's image  [Conformance]
  test/e2e/kubectl/kubectl.go:1747
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 02/09/23 01:06:29.535
Feb  9 01:06:29.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7474 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Feb  9 01:06:29.607: INFO: stderr: ""
Feb  9 01:06:29.607: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running 02/09/23 01:06:29.607
STEP: verifying the pod e2e-test-httpd-pod was created 02/09/23 01:06:34.658
Feb  9 01:06:34.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7474 get pod e2e-test-httpd-pod -o json'
Feb  9 01:06:34.720: INFO: stderr: ""
Feb  9 01:06:34.720: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-02-09T01:06:29Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7474\",\n        \"resourceVersion\": \"21166\",\n        \"uid\": \"287c64a6-e46c-41c3-b0fa-bdcb95bb2878\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-gt9s9\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"aks-nodes-15799032-vmss000000\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-gt9s9\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-02-09T01:06:29Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-02-09T01:06:31Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-02-09T01:06:31Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-02-09T01:06:29Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://f9623a3c9e3ef5322512e25211b7f890ebf46f87609a65e929cff9ad43c65cf1\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-02-09T01:06:30Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.224.0.4\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.0.111\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.0.111\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-02-09T01:06:29Z\"\n    }\n}\n"
STEP: replace the image in the pod 02/09/23 01:06:34.721
Feb  9 01:06:34.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7474 replace -f -'
Feb  9 01:06:35.400: INFO: stderr: ""
Feb  9 01:06:35.400: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 02/09/23 01:06:35.4
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1738
Feb  9 01:06:35.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7474 delete pods e2e-test-httpd-pod'
Feb  9 01:06:37.216: INFO: stderr: ""
Feb  9 01:06:37.216: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:06:37.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-7474" for this suite. 02/09/23 01:06:37.224
------------------------------
â€¢ [SLOW TEST] [7.729 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1731
    should update a single-container pod's image  [Conformance]
    test/e2e/kubectl/kubectl.go:1747

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:06:29.505
    Feb  9 01:06:29.505: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:06:29.506
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:29.525
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:29.53
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl replace
      test/e2e/kubectl/kubectl.go:1734
    [It] should update a single-container pod's image  [Conformance]
      test/e2e/kubectl/kubectl.go:1747
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 02/09/23 01:06:29.535
    Feb  9 01:06:29.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7474 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
    Feb  9 01:06:29.607: INFO: stderr: ""
    Feb  9 01:06:29.607: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: verifying the pod e2e-test-httpd-pod is running 02/09/23 01:06:29.607
    STEP: verifying the pod e2e-test-httpd-pod was created 02/09/23 01:06:34.658
    Feb  9 01:06:34.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7474 get pod e2e-test-httpd-pod -o json'
    Feb  9 01:06:34.720: INFO: stderr: ""
    Feb  9 01:06:34.720: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-02-09T01:06:29Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7474\",\n        \"resourceVersion\": \"21166\",\n        \"uid\": \"287c64a6-e46c-41c3-b0fa-bdcb95bb2878\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-gt9s9\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"aks-nodes-15799032-vmss000000\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-gt9s9\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-02-09T01:06:29Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-02-09T01:06:31Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-02-09T01:06:31Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-02-09T01:06:29Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://f9623a3c9e3ef5322512e25211b7f890ebf46f87609a65e929cff9ad43c65cf1\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-02-09T01:06:30Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.224.0.4\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.0.111\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.0.111\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-02-09T01:06:29Z\"\n    }\n}\n"
    STEP: replace the image in the pod 02/09/23 01:06:34.721
    Feb  9 01:06:34.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7474 replace -f -'
    Feb  9 01:06:35.400: INFO: stderr: ""
    Feb  9 01:06:35.400: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
    STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 02/09/23 01:06:35.4
    [AfterEach] Kubectl replace
      test/e2e/kubectl/kubectl.go:1738
    Feb  9 01:06:35.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7474 delete pods e2e-test-httpd-pod'
    Feb  9 01:06:37.216: INFO: stderr: ""
    Feb  9 01:06:37.216: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:06:37.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-7474" for this suite. 02/09/23 01:06:37.224
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:06:37.235
Feb  9 01:06:37.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename sysctl 02/09/23 01:06:37.235
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:37.258
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:37.263
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl 02/09/23 01:06:37.268
STEP: Watching for error events or started pod 02/09/23 01:06:37.28
STEP: Waiting for pod completion 02/09/23 01:06:39.288
Feb  9 01:06:39.288: INFO: Waiting up to 3m0s for pod "sysctl-aba9b5d6-b3fe-4cce-ab76-1d227d23cc83" in namespace "sysctl-5572" to be "completed"
Feb  9 01:06:39.293: INFO: Pod "sysctl-aba9b5d6-b3fe-4cce-ab76-1d227d23cc83": Phase="Pending", Reason="", readiness=false. Elapsed: 5.769584ms
Feb  9 01:06:41.301: INFO: Pod "sysctl-aba9b5d6-b3fe-4cce-ab76-1d227d23cc83": Phase="Succeeded", Reason="", readiness=false. Elapsed: 2.01361631s
Feb  9 01:06:41.301: INFO: Pod "sysctl-aba9b5d6-b3fe-4cce-ab76-1d227d23cc83" satisfied condition "completed"
STEP: Checking that the pod succeeded 02/09/23 01:06:41.307
STEP: Getting logs from the pod 02/09/23 01:06:41.307
STEP: Checking that the sysctl is actually updated 02/09/23 01:06:41.32
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:06:41.320: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "sysctl-5572" for this suite. 02/09/23 01:06:41.329
------------------------------
â€¢ [4.103 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
test/e2e/common/node/framework.go:23
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:37
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:06:37.235
    Feb  9 01:06:37.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename sysctl 02/09/23 01:06:37.235
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:37.258
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:37.263
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:67
    [It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
      test/e2e/common/node/sysctl.go:77
    STEP: Creating a pod with the kernel.shm_rmid_forced sysctl 02/09/23 01:06:37.268
    STEP: Watching for error events or started pod 02/09/23 01:06:37.28
    STEP: Waiting for pod completion 02/09/23 01:06:39.288
    Feb  9 01:06:39.288: INFO: Waiting up to 3m0s for pod "sysctl-aba9b5d6-b3fe-4cce-ab76-1d227d23cc83" in namespace "sysctl-5572" to be "completed"
    Feb  9 01:06:39.293: INFO: Pod "sysctl-aba9b5d6-b3fe-4cce-ab76-1d227d23cc83": Phase="Pending", Reason="", readiness=false. Elapsed: 5.769584ms
    Feb  9 01:06:41.301: INFO: Pod "sysctl-aba9b5d6-b3fe-4cce-ab76-1d227d23cc83": Phase="Succeeded", Reason="", readiness=false. Elapsed: 2.01361631s
    Feb  9 01:06:41.301: INFO: Pod "sysctl-aba9b5d6-b3fe-4cce-ab76-1d227d23cc83" satisfied condition "completed"
    STEP: Checking that the pod succeeded 02/09/23 01:06:41.307
    STEP: Getting logs from the pod 02/09/23 01:06:41.307
    STEP: Checking that the sysctl is actually updated 02/09/23 01:06:41.32
    [AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:06:41.320: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sysctl-5572" for this suite. 02/09/23 01:06:41.329
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:06:41.341
Feb  9 01:06:41.341: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename secrets 02/09/23 01:06:41.342
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:41.363
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:41.367
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125
STEP: Creating secret with name secret-test-3f2d2e0e-98b2-4c09-b027-ce447a517019 02/09/23 01:06:41.371
STEP: Creating a pod to test consume secrets 02/09/23 01:06:41.377
Feb  9 01:06:41.389: INFO: Waiting up to 5m0s for pod "pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423" in namespace "secrets-8846" to be "Succeeded or Failed"
Feb  9 01:06:41.395: INFO: Pod "pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423": Phase="Pending", Reason="", readiness=false. Elapsed: 5.669385ms
Feb  9 01:06:43.402: INFO: Pod "pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012905294s
Feb  9 01:06:45.401: INFO: Pod "pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012312689s
STEP: Saw pod success 02/09/23 01:06:45.401
Feb  9 01:06:45.402: INFO: Pod "pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423" satisfied condition "Succeeded or Failed"
Feb  9 01:06:45.408: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423 container secret-volume-test: <nil>
STEP: delete the pod 02/09/23 01:06:45.426
Feb  9 01:06:45.446: INFO: Waiting for pod pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423 to disappear
Feb  9 01:06:45.451: INFO: Pod pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Feb  9 01:06:45.451: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-8846" for this suite. 02/09/23 01:06:45.461
------------------------------
â€¢ [4.129 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:06:41.341
    Feb  9 01:06:41.341: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename secrets 02/09/23 01:06:41.342
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:41.363
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:41.367
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:125
    STEP: Creating secret with name secret-test-3f2d2e0e-98b2-4c09-b027-ce447a517019 02/09/23 01:06:41.371
    STEP: Creating a pod to test consume secrets 02/09/23 01:06:41.377
    Feb  9 01:06:41.389: INFO: Waiting up to 5m0s for pod "pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423" in namespace "secrets-8846" to be "Succeeded or Failed"
    Feb  9 01:06:41.395: INFO: Pod "pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423": Phase="Pending", Reason="", readiness=false. Elapsed: 5.669385ms
    Feb  9 01:06:43.402: INFO: Pod "pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012905294s
    Feb  9 01:06:45.401: INFO: Pod "pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012312689s
    STEP: Saw pod success 02/09/23 01:06:45.401
    Feb  9 01:06:45.402: INFO: Pod "pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423" satisfied condition "Succeeded or Failed"
    Feb  9 01:06:45.408: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423 container secret-volume-test: <nil>
    STEP: delete the pod 02/09/23 01:06:45.426
    Feb  9 01:06:45.446: INFO: Waiting for pod pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423 to disappear
    Feb  9 01:06:45.451: INFO: Pod pod-secrets-5ca11867-c040-44c2-8cbe-5e476f73b423 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:06:45.451: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-8846" for this suite. 02/09/23 01:06:45.461
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:06:45.473
Feb  9 01:06:45.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename gc 02/09/23 01:06:45.473
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:45.501
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:45.506
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491
STEP: create the deployment 02/09/23 01:06:45.511
STEP: Wait for the Deployment to create new ReplicaSet 02/09/23 01:06:45.518
STEP: delete the deployment 02/09/23 01:06:45.524
STEP: wait for all rs to be garbage collected 02/09/23 01:06:45.534
STEP: expected 0 rs, got 1 rs 02/09/23 01:06:45.546
STEP: expected 0 pods, got 2 pods 02/09/23 01:06:45.553
STEP: Gathering metrics 02/09/23 01:06:46.071
W0209 01:06:46.085241      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Feb  9 01:06:46.085: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Feb  9 01:06:46.085: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-6086" for this suite. 02/09/23 01:06:46.094
------------------------------
â€¢ [0.630 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:06:45.473
    Feb  9 01:06:45.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename gc 02/09/23 01:06:45.473
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:45.501
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:45.506
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete RS created by deployment when not orphaning [Conformance]
      test/e2e/apimachinery/garbage_collector.go:491
    STEP: create the deployment 02/09/23 01:06:45.511
    STEP: Wait for the Deployment to create new ReplicaSet 02/09/23 01:06:45.518
    STEP: delete the deployment 02/09/23 01:06:45.524
    STEP: wait for all rs to be garbage collected 02/09/23 01:06:45.534
    STEP: expected 0 rs, got 1 rs 02/09/23 01:06:45.546
    STEP: expected 0 pods, got 2 pods 02/09/23 01:06:45.553
    STEP: Gathering metrics 02/09/23 01:06:46.071
    W0209 01:06:46.085241      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Feb  9 01:06:46.085: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:06:46.085: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-6086" for this suite. 02/09/23 01:06:46.094
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:06:46.103
Feb  9 01:06:46.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename sched-pred 02/09/23 01:06:46.104
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:46.123
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:46.128
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Feb  9 01:06:46.132: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Feb  9 01:06:46.149: INFO: Waiting for terminating namespaces to be deleted...
Feb  9 01:06:46.157: INFO: 
Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000000 before test
Feb  9 01:06:46.167: INFO: azure-ip-masq-agent-26zqc from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.167: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Feb  9 01:06:46.167: INFO: cloud-node-manager-khkh5 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.167: INFO: 	Container cloud-node-manager ready: true, restart count 0
Feb  9 01:06:46.167: INFO: csi-azuredisk-node-f98f4 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
Feb  9 01:06:46.167: INFO: 	Container azuredisk ready: true, restart count 0
Feb  9 01:06:46.167: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:06:46.167: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:06:46.167: INFO: csi-azurefile-node-kd8lb from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
Feb  9 01:06:46.167: INFO: 	Container azurefile ready: true, restart count 0
Feb  9 01:06:46.167: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:06:46.167: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:06:46.167: INFO: kube-proxy-hznqr from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.167: INFO: 	Container kube-proxy ready: true, restart count 0
Feb  9 01:06:46.167: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-ccznv from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:06:46.167: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:06:46.167: INFO: 	Container systemd-logs ready: true, restart count 0
Feb  9 01:06:46.167: INFO: sysctl-aba9b5d6-b3fe-4cce-ab76-1d227d23cc83 from sysctl-5572 started at 2023-02-09 01:06:37 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.167: INFO: 	Container test-container ready: false, restart count 0
Feb  9 01:06:46.167: INFO: 
Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000001 before test
Feb  9 01:06:46.176: INFO: azure-ip-masq-agent-9z68l from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.176: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Feb  9 01:06:46.176: INFO: cloud-node-manager-5mlpp from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.176: INFO: 	Container cloud-node-manager ready: true, restart count 0
Feb  9 01:06:46.176: INFO: coredns-78669d9946-89dxb from kube-system started at 2023-02-09 00:22:29 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.176: INFO: 	Container coredns ready: true, restart count 0
Feb  9 01:06:46.176: INFO: coredns-autoscaler-5b5c4f5b4f-9tnqp from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.176: INFO: 	Container autoscaler ready: true, restart count 0
Feb  9 01:06:46.176: INFO: csi-azuredisk-node-6tghn from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
Feb  9 01:06:46.176: INFO: 	Container azuredisk ready: true, restart count 0
Feb  9 01:06:46.176: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:06:46.176: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:06:46.176: INFO: csi-azurefile-node-cgcmb from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
Feb  9 01:06:46.176: INFO: 	Container azurefile ready: true, restart count 0
Feb  9 01:06:46.176: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:06:46.176: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:06:46.176: INFO: konnectivity-agent-6dd87768b6-5jd76 from kube-system started at 2023-02-09 00:41:56 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.176: INFO: 	Container konnectivity-agent ready: true, restart count 0
Feb  9 01:06:46.176: INFO: kube-proxy-tkwb2 from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.177: INFO: 	Container kube-proxy ready: true, restart count 0
Feb  9 01:06:46.177: INFO: metrics-server-5f6654d4df-mqppz from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
Feb  9 01:06:46.177: INFO: 	Container metrics-server ready: true, restart count 0
Feb  9 01:06:46.177: INFO: 	Container metrics-server-vpa ready: true, restart count 0
Feb  9 01:06:46.177: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-hktzz from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:06:46.177: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:06:46.177: INFO: 	Container systemd-logs ready: true, restart count 0
Feb  9 01:06:46.177: INFO: 
Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000002 before test
Feb  9 01:06:46.188: INFO: azure-ip-masq-agent-g85z9 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.188: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Feb  9 01:06:46.188: INFO: cloud-node-manager-2mppx from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.188: INFO: 	Container cloud-node-manager ready: true, restart count 0
Feb  9 01:06:46.188: INFO: coredns-78669d9946-nmkmm from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.188: INFO: 	Container coredns ready: true, restart count 0
Feb  9 01:06:46.188: INFO: csi-azuredisk-node-drwdg from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
Feb  9 01:06:46.188: INFO: 	Container azuredisk ready: true, restart count 0
Feb  9 01:06:46.188: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:06:46.188: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:06:46.188: INFO: csi-azurefile-node-j6wh8 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
Feb  9 01:06:46.188: INFO: 	Container azurefile ready: true, restart count 0
Feb  9 01:06:46.188: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:06:46.188: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:06:46.188: INFO: konnectivity-agent-6dd87768b6-4wblz from kube-system started at 2023-02-09 00:41:54 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.188: INFO: 	Container konnectivity-agent ready: true, restart count 0
Feb  9 01:06:46.188: INFO: kube-proxy-k97mw from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.188: INFO: 	Container kube-proxy ready: true, restart count 0
Feb  9 01:06:46.188: INFO: metrics-server-5f6654d4df-cp5km from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
Feb  9 01:06:46.188: INFO: 	Container metrics-server ready: true, restart count 0
Feb  9 01:06:46.188: INFO: 	Container metrics-server-vpa ready: true, restart count 0
Feb  9 01:06:46.188: INFO: sonobuoy from sonobuoy started at 2023-02-09 00:26:49 +0000 UTC (1 container statuses recorded)
Feb  9 01:06:46.188: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Feb  9 01:06:46.188: INFO: sonobuoy-e2e-job-2cb73ed04ae14ea3 from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:06:46.188: INFO: 	Container e2e ready: true, restart count 0
Feb  9 01:06:46.188: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:06:46.188: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-snxjd from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:06:46.188: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:06:46.188: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443
STEP: Trying to schedule Pod with nonempty NodeSelector. 02/09/23 01:06:46.188
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.1742028abc41deff], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] 02/09/23 01:06:46.228
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:06:47.229: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-6148" for this suite. 02/09/23 01:06:47.238
------------------------------
â€¢ [1.145 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:06:46.103
    Feb  9 01:06:46.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename sched-pred 02/09/23 01:06:46.104
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:46.123
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:46.128
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Feb  9 01:06:46.132: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Feb  9 01:06:46.149: INFO: Waiting for terminating namespaces to be deleted...
    Feb  9 01:06:46.157: INFO: 
    Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000000 before test
    Feb  9 01:06:46.167: INFO: azure-ip-masq-agent-26zqc from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.167: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
    Feb  9 01:06:46.167: INFO: cloud-node-manager-khkh5 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.167: INFO: 	Container cloud-node-manager ready: true, restart count 0
    Feb  9 01:06:46.167: INFO: csi-azuredisk-node-f98f4 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
    Feb  9 01:06:46.167: INFO: 	Container azuredisk ready: true, restart count 0
    Feb  9 01:06:46.167: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:06:46.167: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:06:46.167: INFO: csi-azurefile-node-kd8lb from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
    Feb  9 01:06:46.167: INFO: 	Container azurefile ready: true, restart count 0
    Feb  9 01:06:46.167: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:06:46.167: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:06:46.167: INFO: kube-proxy-hznqr from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.167: INFO: 	Container kube-proxy ready: true, restart count 0
    Feb  9 01:06:46.167: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-ccznv from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:06:46.167: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:06:46.167: INFO: 	Container systemd-logs ready: true, restart count 0
    Feb  9 01:06:46.167: INFO: sysctl-aba9b5d6-b3fe-4cce-ab76-1d227d23cc83 from sysctl-5572 started at 2023-02-09 01:06:37 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.167: INFO: 	Container test-container ready: false, restart count 0
    Feb  9 01:06:46.167: INFO: 
    Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000001 before test
    Feb  9 01:06:46.176: INFO: azure-ip-masq-agent-9z68l from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.176: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
    Feb  9 01:06:46.176: INFO: cloud-node-manager-5mlpp from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.176: INFO: 	Container cloud-node-manager ready: true, restart count 0
    Feb  9 01:06:46.176: INFO: coredns-78669d9946-89dxb from kube-system started at 2023-02-09 00:22:29 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.176: INFO: 	Container coredns ready: true, restart count 0
    Feb  9 01:06:46.176: INFO: coredns-autoscaler-5b5c4f5b4f-9tnqp from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.176: INFO: 	Container autoscaler ready: true, restart count 0
    Feb  9 01:06:46.176: INFO: csi-azuredisk-node-6tghn from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
    Feb  9 01:06:46.176: INFO: 	Container azuredisk ready: true, restart count 0
    Feb  9 01:06:46.176: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:06:46.176: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:06:46.176: INFO: csi-azurefile-node-cgcmb from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
    Feb  9 01:06:46.176: INFO: 	Container azurefile ready: true, restart count 0
    Feb  9 01:06:46.176: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:06:46.176: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:06:46.176: INFO: konnectivity-agent-6dd87768b6-5jd76 from kube-system started at 2023-02-09 00:41:56 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.176: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Feb  9 01:06:46.176: INFO: kube-proxy-tkwb2 from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.177: INFO: 	Container kube-proxy ready: true, restart count 0
    Feb  9 01:06:46.177: INFO: metrics-server-5f6654d4df-mqppz from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
    Feb  9 01:06:46.177: INFO: 	Container metrics-server ready: true, restart count 0
    Feb  9 01:06:46.177: INFO: 	Container metrics-server-vpa ready: true, restart count 0
    Feb  9 01:06:46.177: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-hktzz from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:06:46.177: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:06:46.177: INFO: 	Container systemd-logs ready: true, restart count 0
    Feb  9 01:06:46.177: INFO: 
    Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000002 before test
    Feb  9 01:06:46.188: INFO: azure-ip-masq-agent-g85z9 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.188: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: cloud-node-manager-2mppx from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.188: INFO: 	Container cloud-node-manager ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: coredns-78669d9946-nmkmm from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.188: INFO: 	Container coredns ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: csi-azuredisk-node-drwdg from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
    Feb  9 01:06:46.188: INFO: 	Container azuredisk ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: csi-azurefile-node-j6wh8 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
    Feb  9 01:06:46.188: INFO: 	Container azurefile ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: konnectivity-agent-6dd87768b6-4wblz from kube-system started at 2023-02-09 00:41:54 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.188: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: kube-proxy-k97mw from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.188: INFO: 	Container kube-proxy ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: metrics-server-5f6654d4df-cp5km from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
    Feb  9 01:06:46.188: INFO: 	Container metrics-server ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: 	Container metrics-server-vpa ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: sonobuoy from sonobuoy started at 2023-02-09 00:26:49 +0000 UTC (1 container statuses recorded)
    Feb  9 01:06:46.188: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: sonobuoy-e2e-job-2cb73ed04ae14ea3 from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:06:46.188: INFO: 	Container e2e ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-snxjd from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:06:46.188: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:06:46.188: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates that NodeSelector is respected if not matching  [Conformance]
      test/e2e/scheduling/predicates.go:443
    STEP: Trying to schedule Pod with nonempty NodeSelector. 02/09/23 01:06:46.188
    STEP: Considering event: 
    Type = [Warning], Name = [restricted-pod.1742028abc41deff], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] 02/09/23 01:06:46.228
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:06:47.229: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-6148" for this suite. 02/09/23 01:06:47.238
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] HostPort
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63
[BeforeEach] [sig-network] HostPort
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:06:47.249
Feb  9 01:06:47.249: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename hostport 02/09/23 01:06:47.25
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:47.27
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:47.274
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled 02/09/23 01:06:47.286
Feb  9 01:06:47.298: INFO: Waiting up to 5m0s for pod "pod1" in namespace "hostport-8941" to be "running and ready"
Feb  9 01:06:47.303: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.134843ms
Feb  9 01:06:47.303: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:06:49.310: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.012097537s
Feb  9 01:06:49.310: INFO: The phase of Pod pod1 is Running (Ready = true)
Feb  9 01:06:49.310: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.224.0.6 on the node which pod1 resides and expect scheduled 02/09/23 01:06:49.31
Feb  9 01:06:49.319: INFO: Waiting up to 5m0s for pod "pod2" in namespace "hostport-8941" to be "running and ready"
Feb  9 01:06:49.324: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.247344ms
Feb  9 01:06:49.324: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:06:51.331: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.012082137s
Feb  9 01:06:51.331: INFO: The phase of Pod pod2 is Running (Ready = true)
Feb  9 01:06:51.331: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.224.0.6 but use UDP protocol on the node which pod2 resides 02/09/23 01:06:51.331
Feb  9 01:06:51.339: INFO: Waiting up to 5m0s for pod "pod3" in namespace "hostport-8941" to be "running and ready"
Feb  9 01:06:51.345: INFO: Pod "pod3": Phase="Pending", Reason="", readiness=false. Elapsed: 6.358653ms
Feb  9 01:06:51.345: INFO: The phase of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:06:53.353: INFO: Pod "pod3": Phase="Running", Reason="", readiness=true. Elapsed: 2.013853851s
Feb  9 01:06:53.353: INFO: The phase of Pod pod3 is Running (Ready = true)
Feb  9 01:06:53.353: INFO: Pod "pod3" satisfied condition "running and ready"
Feb  9 01:06:53.361: INFO: Waiting up to 5m0s for pod "e2e-host-exec" in namespace "hostport-8941" to be "running and ready"
Feb  9 01:06:53.366: INFO: Pod "e2e-host-exec": Phase="Pending", Reason="", readiness=false. Elapsed: 5.172242ms
Feb  9 01:06:53.366: INFO: The phase of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:06:55.374: INFO: Pod "e2e-host-exec": Phase="Running", Reason="", readiness=true. Elapsed: 2.012789345s
Feb  9 01:06:55.374: INFO: The phase of Pod e2e-host-exec is Running (Ready = true)
Feb  9 01:06:55.374: INFO: Pod "e2e-host-exec" satisfied condition "running and ready"
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 02/09/23 01:06:55.379
Feb  9 01:06:55.379: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.224.0.6 http://127.0.0.1:54323/hostname] Namespace:hostport-8941 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:06:55.379: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:06:55.380: INFO: ExecWithOptions: Clientset creation
Feb  9 01:06:55.380: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/hostport-8941/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.224.0.6+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.224.0.6, port: 54323 02/09/23 01:06:55.473
Feb  9 01:06:55.473: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.224.0.6:54323/hostname] Namespace:hostport-8941 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:06:55.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:06:55.474: INFO: ExecWithOptions: Clientset creation
Feb  9 01:06:55.474: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/hostport-8941/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.224.0.6%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.224.0.6, port: 54323 UDP 02/09/23 01:06:55.573
Feb  9 01:06:55.573: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.224.0.6 54323] Namespace:hostport-8941 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:06:55.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:06:55.573: INFO: ExecWithOptions: Clientset creation
Feb  9 01:06:55.573: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/hostport-8941/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.224.0.6+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/node/init/init.go:32
Feb  9 01:07:00.663: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] HostPort
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] HostPort
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] HostPort
  tear down framework | framework.go:193
STEP: Destroying namespace "hostport-8941" for this suite. 02/09/23 01:07:00.673
------------------------------
â€¢ [SLOW TEST] [13.438 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] HostPort
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:06:47.249
    Feb  9 01:06:47.249: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename hostport 02/09/23 01:06:47.25
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:06:47.27
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:06:47.274
    [BeforeEach] [sig-network] HostPort
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] HostPort
      test/e2e/network/hostport.go:49
    [It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
      test/e2e/network/hostport.go:63
    STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled 02/09/23 01:06:47.286
    Feb  9 01:06:47.298: INFO: Waiting up to 5m0s for pod "pod1" in namespace "hostport-8941" to be "running and ready"
    Feb  9 01:06:47.303: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.134843ms
    Feb  9 01:06:47.303: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:06:49.310: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.012097537s
    Feb  9 01:06:49.310: INFO: The phase of Pod pod1 is Running (Ready = true)
    Feb  9 01:06:49.310: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.224.0.6 on the node which pod1 resides and expect scheduled 02/09/23 01:06:49.31
    Feb  9 01:06:49.319: INFO: Waiting up to 5m0s for pod "pod2" in namespace "hostport-8941" to be "running and ready"
    Feb  9 01:06:49.324: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.247344ms
    Feb  9 01:06:49.324: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:06:51.331: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.012082137s
    Feb  9 01:06:51.331: INFO: The phase of Pod pod2 is Running (Ready = true)
    Feb  9 01:06:51.331: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.224.0.6 but use UDP protocol on the node which pod2 resides 02/09/23 01:06:51.331
    Feb  9 01:06:51.339: INFO: Waiting up to 5m0s for pod "pod3" in namespace "hostport-8941" to be "running and ready"
    Feb  9 01:06:51.345: INFO: Pod "pod3": Phase="Pending", Reason="", readiness=false. Elapsed: 6.358653ms
    Feb  9 01:06:51.345: INFO: The phase of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:06:53.353: INFO: Pod "pod3": Phase="Running", Reason="", readiness=true. Elapsed: 2.013853851s
    Feb  9 01:06:53.353: INFO: The phase of Pod pod3 is Running (Ready = true)
    Feb  9 01:06:53.353: INFO: Pod "pod3" satisfied condition "running and ready"
    Feb  9 01:06:53.361: INFO: Waiting up to 5m0s for pod "e2e-host-exec" in namespace "hostport-8941" to be "running and ready"
    Feb  9 01:06:53.366: INFO: Pod "e2e-host-exec": Phase="Pending", Reason="", readiness=false. Elapsed: 5.172242ms
    Feb  9 01:06:53.366: INFO: The phase of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:06:55.374: INFO: Pod "e2e-host-exec": Phase="Running", Reason="", readiness=true. Elapsed: 2.012789345s
    Feb  9 01:06:55.374: INFO: The phase of Pod e2e-host-exec is Running (Ready = true)
    Feb  9 01:06:55.374: INFO: Pod "e2e-host-exec" satisfied condition "running and ready"
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 02/09/23 01:06:55.379
    Feb  9 01:06:55.379: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.224.0.6 http://127.0.0.1:54323/hostname] Namespace:hostport-8941 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:06:55.379: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:06:55.380: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:06:55.380: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/hostport-8941/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.224.0.6+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.224.0.6, port: 54323 02/09/23 01:06:55.473
    Feb  9 01:06:55.473: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.224.0.6:54323/hostname] Namespace:hostport-8941 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:06:55.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:06:55.474: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:06:55.474: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/hostport-8941/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.224.0.6%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.224.0.6, port: 54323 UDP 02/09/23 01:06:55.573
    Feb  9 01:06:55.573: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.224.0.6 54323] Namespace:hostport-8941 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:06:55.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:06:55.573: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:06:55.573: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/hostport-8941/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.224.0.6+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    [AfterEach] [sig-network] HostPort
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:07:00.663: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] HostPort
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] HostPort
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] HostPort
      tear down framework | framework.go:193
    STEP: Destroying namespace "hostport-8941" for this suite. 02/09/23 01:07:00.673
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo
  should scale a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:352
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:07:00.687
Feb  9 01:07:00.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:07:00.688
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:07:00.709
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:07:00.713
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:326
[It] should scale a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:352
STEP: creating a replication controller 02/09/23 01:07:00.717
Feb  9 01:07:00.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 create -f -'
Feb  9 01:07:00.917: INFO: stderr: ""
Feb  9 01:07:00.917: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up. 02/09/23 01:07:00.917
Feb  9 01:07:00.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Feb  9 01:07:01.021: INFO: stderr: ""
Feb  9 01:07:01.021: INFO: stdout: "update-demo-nautilus-8vtns update-demo-nautilus-cz5vl "
Feb  9 01:07:01.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Feb  9 01:07:01.087: INFO: stderr: ""
Feb  9 01:07:01.087: INFO: stdout: ""
Feb  9 01:07:01.087: INFO: update-demo-nautilus-8vtns is created but not running
Feb  9 01:07:06.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Feb  9 01:07:06.198: INFO: stderr: ""
Feb  9 01:07:06.198: INFO: stdout: "update-demo-nautilus-8vtns update-demo-nautilus-cz5vl "
Feb  9 01:07:06.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Feb  9 01:07:06.308: INFO: stderr: ""
Feb  9 01:07:06.308: INFO: stdout: "true"
Feb  9 01:07:06.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Feb  9 01:07:06.416: INFO: stderr: ""
Feb  9 01:07:06.416: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Feb  9 01:07:06.416: INFO: validating pod update-demo-nautilus-8vtns
Feb  9 01:07:06.427: INFO: got data: {
  "image": "nautilus.jpg"
}

Feb  9 01:07:06.427: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Feb  9 01:07:06.427: INFO: update-demo-nautilus-8vtns is verified up and running
Feb  9 01:07:06.427: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-cz5vl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Feb  9 01:07:06.541: INFO: stderr: ""
Feb  9 01:07:06.541: INFO: stdout: "true"
Feb  9 01:07:06.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-cz5vl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Feb  9 01:07:06.640: INFO: stderr: ""
Feb  9 01:07:06.640: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Feb  9 01:07:06.640: INFO: validating pod update-demo-nautilus-cz5vl
Feb  9 01:07:06.653: INFO: got data: {
  "image": "nautilus.jpg"
}

Feb  9 01:07:06.653: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Feb  9 01:07:06.653: INFO: update-demo-nautilus-cz5vl is verified up and running
STEP: scaling down the replication controller 02/09/23 01:07:06.653
Feb  9 01:07:06.654: INFO: scanned /root for discovery docs: <nil>
Feb  9 01:07:06.654: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Feb  9 01:07:07.748: INFO: stderr: ""
Feb  9 01:07:07.748: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up. 02/09/23 01:07:07.748
Feb  9 01:07:07.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Feb  9 01:07:07.812: INFO: stderr: ""
Feb  9 01:07:07.812: INFO: stdout: "update-demo-nautilus-8vtns update-demo-nautilus-cz5vl "
STEP: Replicas for name=update-demo: expected=1 actual=2 02/09/23 01:07:07.812
Feb  9 01:07:12.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Feb  9 01:07:12.879: INFO: stderr: ""
Feb  9 01:07:12.879: INFO: stdout: "update-demo-nautilus-8vtns "
Feb  9 01:07:12.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Feb  9 01:07:12.964: INFO: stderr: ""
Feb  9 01:07:12.964: INFO: stdout: "true"
Feb  9 01:07:12.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Feb  9 01:07:13.044: INFO: stderr: ""
Feb  9 01:07:13.044: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Feb  9 01:07:13.044: INFO: validating pod update-demo-nautilus-8vtns
Feb  9 01:07:13.052: INFO: got data: {
  "image": "nautilus.jpg"
}

Feb  9 01:07:13.052: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Feb  9 01:07:13.052: INFO: update-demo-nautilus-8vtns is verified up and running
STEP: scaling up the replication controller 02/09/23 01:07:13.052
Feb  9 01:07:13.053: INFO: scanned /root for discovery docs: <nil>
Feb  9 01:07:13.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Feb  9 01:07:14.144: INFO: stderr: ""
Feb  9 01:07:14.144: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up. 02/09/23 01:07:14.144
Feb  9 01:07:14.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Feb  9 01:07:14.214: INFO: stderr: ""
Feb  9 01:07:14.214: INFO: stdout: "update-demo-nautilus-8mlxf update-demo-nautilus-8vtns "
Feb  9 01:07:14.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8mlxf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Feb  9 01:07:14.279: INFO: stderr: ""
Feb  9 01:07:14.279: INFO: stdout: ""
Feb  9 01:07:14.279: INFO: update-demo-nautilus-8mlxf is created but not running
Feb  9 01:07:19.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Feb  9 01:07:19.351: INFO: stderr: ""
Feb  9 01:07:19.351: INFO: stdout: "update-demo-nautilus-8mlxf update-demo-nautilus-8vtns "
Feb  9 01:07:19.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8mlxf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Feb  9 01:07:19.414: INFO: stderr: ""
Feb  9 01:07:19.414: INFO: stdout: "true"
Feb  9 01:07:19.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8mlxf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Feb  9 01:07:19.478: INFO: stderr: ""
Feb  9 01:07:19.478: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Feb  9 01:07:19.478: INFO: validating pod update-demo-nautilus-8mlxf
Feb  9 01:07:19.491: INFO: got data: {
  "image": "nautilus.jpg"
}

Feb  9 01:07:19.491: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Feb  9 01:07:19.491: INFO: update-demo-nautilus-8mlxf is verified up and running
Feb  9 01:07:19.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Feb  9 01:07:19.556: INFO: stderr: ""
Feb  9 01:07:19.556: INFO: stdout: "true"
Feb  9 01:07:19.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Feb  9 01:07:19.618: INFO: stderr: ""
Feb  9 01:07:19.618: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Feb  9 01:07:19.618: INFO: validating pod update-demo-nautilus-8vtns
Feb  9 01:07:19.627: INFO: got data: {
  "image": "nautilus.jpg"
}

Feb  9 01:07:19.627: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Feb  9 01:07:19.627: INFO: update-demo-nautilus-8vtns is verified up and running
STEP: using delete to clean up resources 02/09/23 01:07:19.627
Feb  9 01:07:19.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 delete --grace-period=0 --force -f -'
Feb  9 01:07:19.699: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Feb  9 01:07:19.699: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Feb  9 01:07:19.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get rc,svc -l name=update-demo --no-headers'
Feb  9 01:07:19.770: INFO: stderr: "No resources found in kubectl-4581 namespace.\n"
Feb  9 01:07:19.770: INFO: stdout: ""
Feb  9 01:07:19.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Feb  9 01:07:19.842: INFO: stderr: ""
Feb  9 01:07:19.842: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:07:19.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-4581" for this suite. 02/09/23 01:07:19.851
------------------------------
â€¢ [SLOW TEST] [19.172 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:324
    should scale a replication controller  [Conformance]
    test/e2e/kubectl/kubectl.go:352

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:07:00.687
    Feb  9 01:07:00.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:07:00.688
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:07:00.709
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:07:00.713
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Update Demo
      test/e2e/kubectl/kubectl.go:326
    [It] should scale a replication controller  [Conformance]
      test/e2e/kubectl/kubectl.go:352
    STEP: creating a replication controller 02/09/23 01:07:00.717
    Feb  9 01:07:00.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 create -f -'
    Feb  9 01:07:00.917: INFO: stderr: ""
    Feb  9 01:07:00.917: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 02/09/23 01:07:00.917
    Feb  9 01:07:00.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Feb  9 01:07:01.021: INFO: stderr: ""
    Feb  9 01:07:01.021: INFO: stdout: "update-demo-nautilus-8vtns update-demo-nautilus-cz5vl "
    Feb  9 01:07:01.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Feb  9 01:07:01.087: INFO: stderr: ""
    Feb  9 01:07:01.087: INFO: stdout: ""
    Feb  9 01:07:01.087: INFO: update-demo-nautilus-8vtns is created but not running
    Feb  9 01:07:06.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Feb  9 01:07:06.198: INFO: stderr: ""
    Feb  9 01:07:06.198: INFO: stdout: "update-demo-nautilus-8vtns update-demo-nautilus-cz5vl "
    Feb  9 01:07:06.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Feb  9 01:07:06.308: INFO: stderr: ""
    Feb  9 01:07:06.308: INFO: stdout: "true"
    Feb  9 01:07:06.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Feb  9 01:07:06.416: INFO: stderr: ""
    Feb  9 01:07:06.416: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Feb  9 01:07:06.416: INFO: validating pod update-demo-nautilus-8vtns
    Feb  9 01:07:06.427: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Feb  9 01:07:06.427: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Feb  9 01:07:06.427: INFO: update-demo-nautilus-8vtns is verified up and running
    Feb  9 01:07:06.427: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-cz5vl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Feb  9 01:07:06.541: INFO: stderr: ""
    Feb  9 01:07:06.541: INFO: stdout: "true"
    Feb  9 01:07:06.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-cz5vl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Feb  9 01:07:06.640: INFO: stderr: ""
    Feb  9 01:07:06.640: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Feb  9 01:07:06.640: INFO: validating pod update-demo-nautilus-cz5vl
    Feb  9 01:07:06.653: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Feb  9 01:07:06.653: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Feb  9 01:07:06.653: INFO: update-demo-nautilus-cz5vl is verified up and running
    STEP: scaling down the replication controller 02/09/23 01:07:06.653
    Feb  9 01:07:06.654: INFO: scanned /root for discovery docs: <nil>
    Feb  9 01:07:06.654: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
    Feb  9 01:07:07.748: INFO: stderr: ""
    Feb  9 01:07:07.748: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 02/09/23 01:07:07.748
    Feb  9 01:07:07.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Feb  9 01:07:07.812: INFO: stderr: ""
    Feb  9 01:07:07.812: INFO: stdout: "update-demo-nautilus-8vtns update-demo-nautilus-cz5vl "
    STEP: Replicas for name=update-demo: expected=1 actual=2 02/09/23 01:07:07.812
    Feb  9 01:07:12.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Feb  9 01:07:12.879: INFO: stderr: ""
    Feb  9 01:07:12.879: INFO: stdout: "update-demo-nautilus-8vtns "
    Feb  9 01:07:12.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Feb  9 01:07:12.964: INFO: stderr: ""
    Feb  9 01:07:12.964: INFO: stdout: "true"
    Feb  9 01:07:12.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Feb  9 01:07:13.044: INFO: stderr: ""
    Feb  9 01:07:13.044: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Feb  9 01:07:13.044: INFO: validating pod update-demo-nautilus-8vtns
    Feb  9 01:07:13.052: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Feb  9 01:07:13.052: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Feb  9 01:07:13.052: INFO: update-demo-nautilus-8vtns is verified up and running
    STEP: scaling up the replication controller 02/09/23 01:07:13.052
    Feb  9 01:07:13.053: INFO: scanned /root for discovery docs: <nil>
    Feb  9 01:07:13.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
    Feb  9 01:07:14.144: INFO: stderr: ""
    Feb  9 01:07:14.144: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 02/09/23 01:07:14.144
    Feb  9 01:07:14.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Feb  9 01:07:14.214: INFO: stderr: ""
    Feb  9 01:07:14.214: INFO: stdout: "update-demo-nautilus-8mlxf update-demo-nautilus-8vtns "
    Feb  9 01:07:14.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8mlxf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Feb  9 01:07:14.279: INFO: stderr: ""
    Feb  9 01:07:14.279: INFO: stdout: ""
    Feb  9 01:07:14.279: INFO: update-demo-nautilus-8mlxf is created but not running
    Feb  9 01:07:19.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Feb  9 01:07:19.351: INFO: stderr: ""
    Feb  9 01:07:19.351: INFO: stdout: "update-demo-nautilus-8mlxf update-demo-nautilus-8vtns "
    Feb  9 01:07:19.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8mlxf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Feb  9 01:07:19.414: INFO: stderr: ""
    Feb  9 01:07:19.414: INFO: stdout: "true"
    Feb  9 01:07:19.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8mlxf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Feb  9 01:07:19.478: INFO: stderr: ""
    Feb  9 01:07:19.478: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Feb  9 01:07:19.478: INFO: validating pod update-demo-nautilus-8mlxf
    Feb  9 01:07:19.491: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Feb  9 01:07:19.491: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Feb  9 01:07:19.491: INFO: update-demo-nautilus-8mlxf is verified up and running
    Feb  9 01:07:19.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Feb  9 01:07:19.556: INFO: stderr: ""
    Feb  9 01:07:19.556: INFO: stdout: "true"
    Feb  9 01:07:19.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods update-demo-nautilus-8vtns -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Feb  9 01:07:19.618: INFO: stderr: ""
    Feb  9 01:07:19.618: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Feb  9 01:07:19.618: INFO: validating pod update-demo-nautilus-8vtns
    Feb  9 01:07:19.627: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Feb  9 01:07:19.627: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Feb  9 01:07:19.627: INFO: update-demo-nautilus-8vtns is verified up and running
    STEP: using delete to clean up resources 02/09/23 01:07:19.627
    Feb  9 01:07:19.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 delete --grace-period=0 --force -f -'
    Feb  9 01:07:19.699: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Feb  9 01:07:19.699: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
    Feb  9 01:07:19.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get rc,svc -l name=update-demo --no-headers'
    Feb  9 01:07:19.770: INFO: stderr: "No resources found in kubectl-4581 namespace.\n"
    Feb  9 01:07:19.770: INFO: stdout: ""
    Feb  9 01:07:19.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-4581 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Feb  9 01:07:19.842: INFO: stderr: ""
    Feb  9 01:07:19.842: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:07:19.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-4581" for this suite. 02/09/23 01:07:19.851
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases
  should write entries to /etc/hosts [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:148
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:07:19.86
Feb  9 01:07:19.860: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubelet-test 02/09/23 01:07:19.862
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:07:19.881
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:07:19.885
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should write entries to /etc/hosts [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:148
STEP: Waiting for pod completion 02/09/23 01:07:19.905
Feb  9 01:07:19.905: INFO: Waiting up to 3m0s for pod "agnhost-host-aliasesc6a1f3dc-6907-4b1e-99d9-0862d13d8a07" in namespace "kubelet-test-193" to be "completed"
Feb  9 01:07:19.910: INFO: Pod "agnhost-host-aliasesc6a1f3dc-6907-4b1e-99d9-0862d13d8a07": Phase="Pending", Reason="", readiness=false. Elapsed: 5.853333ms
Feb  9 01:07:21.918: INFO: Pod "agnhost-host-aliasesc6a1f3dc-6907-4b1e-99d9-0862d13d8a07": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013431158s
Feb  9 01:07:23.917: INFO: Pod "agnhost-host-aliasesc6a1f3dc-6907-4b1e-99d9-0862d13d8a07": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012722536s
Feb  9 01:07:23.917: INFO: Pod "agnhost-host-aliasesc6a1f3dc-6907-4b1e-99d9-0862d13d8a07" satisfied condition "completed"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Feb  9 01:07:23.930: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-193" for this suite. 02/09/23 01:07:23.94
------------------------------
â€¢ [4.089 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling an agnhost Pod with hostAliases
  test/e2e/common/node/kubelet.go:140
    should write entries to /etc/hosts [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:148

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:07:19.86
    Feb  9 01:07:19.860: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubelet-test 02/09/23 01:07:19.862
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:07:19.881
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:07:19.885
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should write entries to /etc/hosts [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:148
    STEP: Waiting for pod completion 02/09/23 01:07:19.905
    Feb  9 01:07:19.905: INFO: Waiting up to 3m0s for pod "agnhost-host-aliasesc6a1f3dc-6907-4b1e-99d9-0862d13d8a07" in namespace "kubelet-test-193" to be "completed"
    Feb  9 01:07:19.910: INFO: Pod "agnhost-host-aliasesc6a1f3dc-6907-4b1e-99d9-0862d13d8a07": Phase="Pending", Reason="", readiness=false. Elapsed: 5.853333ms
    Feb  9 01:07:21.918: INFO: Pod "agnhost-host-aliasesc6a1f3dc-6907-4b1e-99d9-0862d13d8a07": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013431158s
    Feb  9 01:07:23.917: INFO: Pod "agnhost-host-aliasesc6a1f3dc-6907-4b1e-99d9-0862d13d8a07": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012722536s
    Feb  9 01:07:23.917: INFO: Pod "agnhost-host-aliasesc6a1f3dc-6907-4b1e-99d9-0862d13d8a07" satisfied condition "completed"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:07:23.930: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-193" for this suite. 02/09/23 01:07:23.94
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease
  lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72
[BeforeEach] [sig-node] Lease
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:07:23.953
Feb  9 01:07:23.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename lease-test 02/09/23 01:07:23.953
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:07:23.973
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:07:23.978
[BeforeEach] [sig-node] Lease
  test/e2e/framework/metrics/init/init.go:31
[It] lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72
[AfterEach] [sig-node] Lease
  test/e2e/framework/node/init/init.go:32
Feb  9 01:07:24.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Lease
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Lease
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Lease
  tear down framework | framework.go:193
STEP: Destroying namespace "lease-test-6017" for this suite. 02/09/23 01:07:24.078
------------------------------
â€¢ [0.135 seconds]
[sig-node] Lease
test/e2e/common/node/framework.go:23
  lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Lease
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:07:23.953
    Feb  9 01:07:23.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename lease-test 02/09/23 01:07:23.953
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:07:23.973
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:07:23.978
    [BeforeEach] [sig-node] Lease
      test/e2e/framework/metrics/init/init.go:31
    [It] lease API should be available [Conformance]
      test/e2e/common/node/lease.go:72
    [AfterEach] [sig-node] Lease
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:07:24.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Lease
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Lease
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Lease
      tear down framework | framework.go:193
    STEP: Destroying namespace "lease-test-6017" for this suite. 02/09/23 01:07:24.078
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:07:24.089
Feb  9 01:07:24.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename var-expansion 02/09/23 01:07:24.09
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:07:24.11
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:07:24.115
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186
Feb  9 01:07:24.134: INFO: Waiting up to 2m0s for pod "var-expansion-9e08269e-9c72-49e4-8f8f-bfe70e54b2e3" in namespace "var-expansion-9732" to be "container 0 failed with reason CreateContainerConfigError"
Feb  9 01:07:24.140: INFO: Pod "var-expansion-9e08269e-9c72-49e4-8f8f-bfe70e54b2e3": Phase="Pending", Reason="", readiness=false. Elapsed: 6.037934ms
Feb  9 01:07:26.147: INFO: Pod "var-expansion-9e08269e-9c72-49e4-8f8f-bfe70e54b2e3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013052427s
Feb  9 01:07:26.147: INFO: Pod "var-expansion-9e08269e-9c72-49e4-8f8f-bfe70e54b2e3" satisfied condition "container 0 failed with reason CreateContainerConfigError"
Feb  9 01:07:26.147: INFO: Deleting pod "var-expansion-9e08269e-9c72-49e4-8f8f-bfe70e54b2e3" in namespace "var-expansion-9732"
Feb  9 01:07:26.158: INFO: Wait up to 5m0s for pod "var-expansion-9e08269e-9c72-49e4-8f8f-bfe70e54b2e3" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Feb  9 01:07:28.171: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-9732" for this suite. 02/09/23 01:07:28.18
------------------------------
â€¢ [4.099 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:07:24.089
    Feb  9 01:07:24.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename var-expansion 02/09/23 01:07:24.09
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:07:24.11
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:07:24.115
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
      test/e2e/common/node/expansion.go:186
    Feb  9 01:07:24.134: INFO: Waiting up to 2m0s for pod "var-expansion-9e08269e-9c72-49e4-8f8f-bfe70e54b2e3" in namespace "var-expansion-9732" to be "container 0 failed with reason CreateContainerConfigError"
    Feb  9 01:07:24.140: INFO: Pod "var-expansion-9e08269e-9c72-49e4-8f8f-bfe70e54b2e3": Phase="Pending", Reason="", readiness=false. Elapsed: 6.037934ms
    Feb  9 01:07:26.147: INFO: Pod "var-expansion-9e08269e-9c72-49e4-8f8f-bfe70e54b2e3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013052427s
    Feb  9 01:07:26.147: INFO: Pod "var-expansion-9e08269e-9c72-49e4-8f8f-bfe70e54b2e3" satisfied condition "container 0 failed with reason CreateContainerConfigError"
    Feb  9 01:07:26.147: INFO: Deleting pod "var-expansion-9e08269e-9c72-49e4-8f8f-bfe70e54b2e3" in namespace "var-expansion-9732"
    Feb  9 01:07:26.158: INFO: Wait up to 5m0s for pod "var-expansion-9e08269e-9c72-49e4-8f8f-bfe70e54b2e3" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:07:28.171: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-9732" for this suite. 02/09/23 01:07:28.18
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:07:28.191
Feb  9 01:07:28.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 01:07:28.191
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:07:28.211
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:07:28.216
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 01:07:28.237
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:07:29.038
STEP: Deploying the webhook pod 02/09/23 01:07:29.048
STEP: Wait for the deployment to be ready 02/09/23 01:07:29.062
Feb  9 01:07:29.076: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 01:07:31.094
STEP: Verifying the service has paired with the endpoint 02/09/23 01:07:31.113
Feb  9 01:07:32.113: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656
STEP: Listing all of the created validation webhooks 02/09/23 01:07:32.193
STEP: Creating a configMap that should be mutated 02/09/23 01:07:32.218
STEP: Deleting the collection of validation webhooks 02/09/23 01:07:32.267
STEP: Creating a configMap that should not be mutated 02/09/23 01:07:32.344
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:07:32.361: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-3341" for this suite. 02/09/23 01:07:32.421
STEP: Destroying namespace "webhook-3341-markers" for this suite. 02/09/23 01:07:32.429
------------------------------
â€¢ [4.247 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:07:28.191
    Feb  9 01:07:28.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 01:07:28.191
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:07:28.211
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:07:28.216
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 01:07:28.237
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:07:29.038
    STEP: Deploying the webhook pod 02/09/23 01:07:29.048
    STEP: Wait for the deployment to be ready 02/09/23 01:07:29.062
    Feb  9 01:07:29.076: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 01:07:31.094
    STEP: Verifying the service has paired with the endpoint 02/09/23 01:07:31.113
    Feb  9 01:07:32.113: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] listing mutating webhooks should work [Conformance]
      test/e2e/apimachinery/webhook.go:656
    STEP: Listing all of the created validation webhooks 02/09/23 01:07:32.193
    STEP: Creating a configMap that should be mutated 02/09/23 01:07:32.218
    STEP: Deleting the collection of validation webhooks 02/09/23 01:07:32.267
    STEP: Creating a configMap that should not be mutated 02/09/23 01:07:32.344
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:07:32.361: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-3341" for this suite. 02/09/23 01:07:32.421
    STEP: Destroying namespace "webhook-3341-markers" for this suite. 02/09/23 01:07:32.429
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch
  watch on custom resource definition objects [Conformance]
  test/e2e/apimachinery/crd_watch.go:51
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:07:32.438
Feb  9 01:07:32.438: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename crd-watch 02/09/23 01:07:32.439
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:07:32.457
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:07:32.461
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] watch on custom resource definition objects [Conformance]
  test/e2e/apimachinery/crd_watch.go:51
Feb  9 01:07:32.465: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Creating first CR  02/09/23 01:07:35.041
Feb  9 01:07:35.048: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-02-09T01:07:35Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-02-09T01:07:35Z]] name:name1 resourceVersion:21868 uid:923cdb78-9cd7-4500-ae0d-dbad378b9a1c] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR 02/09/23 01:07:45.049
Feb  9 01:07:45.056: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-02-09T01:07:45Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-02-09T01:07:45Z]] name:name2 resourceVersion:21922 uid:03dd367b-8bf6-4098-a96e-ad2de94b4126] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR 02/09/23 01:07:55.057
Feb  9 01:07:55.067: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-02-09T01:07:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-02-09T01:07:55Z]] name:name1 resourceVersion:21967 uid:923cdb78-9cd7-4500-ae0d-dbad378b9a1c] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR 02/09/23 01:08:05.068
Feb  9 01:08:05.077: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-02-09T01:07:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-02-09T01:08:05Z]] name:name2 resourceVersion:22008 uid:03dd367b-8bf6-4098-a96e-ad2de94b4126] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR 02/09/23 01:08:15.077
Feb  9 01:08:15.089: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-02-09T01:07:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-02-09T01:07:55Z]] name:name1 resourceVersion:22049 uid:923cdb78-9cd7-4500-ae0d-dbad378b9a1c] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR 02/09/23 01:08:25.09
Feb  9 01:08:25.103: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-02-09T01:07:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-02-09T01:08:05Z]] name:name2 resourceVersion:22095 uid:03dd367b-8bf6-4098-a96e-ad2de94b4126] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:08:35.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-watch-3420" for this suite. 02/09/23 01:08:35.633
------------------------------
â€¢ [SLOW TEST] [63.204 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/apimachinery/crd_watch.go:51

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:07:32.438
    Feb  9 01:07:32.438: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename crd-watch 02/09/23 01:07:32.439
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:07:32.457
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:07:32.461
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] watch on custom resource definition objects [Conformance]
      test/e2e/apimachinery/crd_watch.go:51
    Feb  9 01:07:32.465: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Creating first CR  02/09/23 01:07:35.041
    Feb  9 01:07:35.048: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-02-09T01:07:35Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-02-09T01:07:35Z]] name:name1 resourceVersion:21868 uid:923cdb78-9cd7-4500-ae0d-dbad378b9a1c] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Creating second CR 02/09/23 01:07:45.049
    Feb  9 01:07:45.056: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-02-09T01:07:45Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-02-09T01:07:45Z]] name:name2 resourceVersion:21922 uid:03dd367b-8bf6-4098-a96e-ad2de94b4126] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Modifying first CR 02/09/23 01:07:55.057
    Feb  9 01:07:55.067: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-02-09T01:07:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-02-09T01:07:55Z]] name:name1 resourceVersion:21967 uid:923cdb78-9cd7-4500-ae0d-dbad378b9a1c] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Modifying second CR 02/09/23 01:08:05.068
    Feb  9 01:08:05.077: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-02-09T01:07:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-02-09T01:08:05Z]] name:name2 resourceVersion:22008 uid:03dd367b-8bf6-4098-a96e-ad2de94b4126] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Deleting first CR 02/09/23 01:08:15.077
    Feb  9 01:08:15.089: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-02-09T01:07:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-02-09T01:07:55Z]] name:name1 resourceVersion:22049 uid:923cdb78-9cd7-4500-ae0d-dbad378b9a1c] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Deleting second CR 02/09/23 01:08:25.09
    Feb  9 01:08:25.103: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-02-09T01:07:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-02-09T01:08:05Z]] name:name2 resourceVersion:22095 uid:03dd367b-8bf6-4098-a96e-ad2de94b4126] num:map[num1:9223372036854775807 num2:1000000]]}
    [AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:08:35.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-watch-3420" for this suite. 02/09/23 01:08:35.633
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:08:35.645
Feb  9 01:08:35.645: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:08:35.646
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:08:35.666
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:08:35.67
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:08:35.675
Feb  9 01:08:35.688: INFO: Waiting up to 5m0s for pod "downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64" in namespace "downward-api-1365" to be "Succeeded or Failed"
Feb  9 01:08:35.694: INFO: Pod "downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64": Phase="Pending", Reason="", readiness=false. Elapsed: 6.049246ms
Feb  9 01:08:37.700: INFO: Pod "downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012732145s
Feb  9 01:08:39.701: INFO: Pod "downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012883405s
STEP: Saw pod success 02/09/23 01:08:39.701
Feb  9 01:08:39.701: INFO: Pod "downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64" satisfied condition "Succeeded or Failed"
Feb  9 01:08:39.707: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64 container client-container: <nil>
STEP: delete the pod 02/09/23 01:08:39.721
Feb  9 01:08:39.735: INFO: Waiting for pod downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64 to disappear
Feb  9 01:08:39.741: INFO: Pod downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Feb  9 01:08:39.741: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-1365" for this suite. 02/09/23 01:08:39.749
------------------------------
â€¢ [4.116 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:08:35.645
    Feb  9 01:08:35.645: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:08:35.646
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:08:35.666
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:08:35.67
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's memory limit [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:207
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:08:35.675
    Feb  9 01:08:35.688: INFO: Waiting up to 5m0s for pod "downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64" in namespace "downward-api-1365" to be "Succeeded or Failed"
    Feb  9 01:08:35.694: INFO: Pod "downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64": Phase="Pending", Reason="", readiness=false. Elapsed: 6.049246ms
    Feb  9 01:08:37.700: INFO: Pod "downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012732145s
    Feb  9 01:08:39.701: INFO: Pod "downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012883405s
    STEP: Saw pod success 02/09/23 01:08:39.701
    Feb  9 01:08:39.701: INFO: Pod "downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64" satisfied condition "Succeeded or Failed"
    Feb  9 01:08:39.707: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64 container client-container: <nil>
    STEP: delete the pod 02/09/23 01:08:39.721
    Feb  9 01:08:39.735: INFO: Waiting for pod downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64 to disappear
    Feb  9 01:08:39.741: INFO: Pod downwardapi-volume-aff7bd0d-249c-45c6-871c-76cfe23c0f64 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:08:39.741: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-1365" for this suite. 02/09/23 01:08:39.749
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:08:39.763
Feb  9 01:08:39.763: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename endpointslice 02/09/23 01:08:39.764
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:08:39.784
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:08:39.788
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66
Feb  9 01:08:39.809: INFO: Endpoints addresses: [20.81.117.134] , ports: [443]
Feb  9 01:08:39.809: INFO: EndpointSlices addresses: [20.81.117.134] , ports: [443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Feb  9 01:08:39.809: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-8471" for this suite. 02/09/23 01:08:39.816
------------------------------
â€¢ [0.062 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:08:39.763
    Feb  9 01:08:39.763: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename endpointslice 02/09/23 01:08:39.764
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:08:39.784
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:08:39.788
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
      test/e2e/network/endpointslice.go:66
    Feb  9 01:08:39.809: INFO: Endpoints addresses: [20.81.117.134] , ports: [443]
    Feb  9 01:08:39.809: INFO: EndpointSlices addresses: [20.81.117.134] , ports: [443]
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:08:39.809: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-8471" for this suite. 02/09/23 01:08:39.816
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:08:39.827
Feb  9 01:08:39.827: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:08:39.828
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:08:39.85
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:08:39.854
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:08:39.858
Feb  9 01:08:39.874: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156" in namespace "downward-api-6770" to be "Succeeded or Failed"
Feb  9 01:08:39.880: INFO: Pod "downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156": Phase="Pending", Reason="", readiness=false. Elapsed: 5.879402ms
Feb  9 01:08:41.887: INFO: Pod "downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156": Phase="Running", Reason="", readiness=false. Elapsed: 2.012647907s
Feb  9 01:08:43.887: INFO: Pod "downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013469709s
STEP: Saw pod success 02/09/23 01:08:43.887
Feb  9 01:08:43.887: INFO: Pod "downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156" satisfied condition "Succeeded or Failed"
Feb  9 01:08:43.894: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156 container client-container: <nil>
STEP: delete the pod 02/09/23 01:08:43.912
Feb  9 01:08:43.936: INFO: Waiting for pod downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156 to disappear
Feb  9 01:08:43.941: INFO: Pod downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Feb  9 01:08:43.941: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-6770" for this suite. 02/09/23 01:08:43.95
------------------------------
â€¢ [4.133 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:08:39.827
    Feb  9 01:08:39.827: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:08:39.828
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:08:39.85
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:08:39.854
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's cpu request [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:221
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:08:39.858
    Feb  9 01:08:39.874: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156" in namespace "downward-api-6770" to be "Succeeded or Failed"
    Feb  9 01:08:39.880: INFO: Pod "downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156": Phase="Pending", Reason="", readiness=false. Elapsed: 5.879402ms
    Feb  9 01:08:41.887: INFO: Pod "downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156": Phase="Running", Reason="", readiness=false. Elapsed: 2.012647907s
    Feb  9 01:08:43.887: INFO: Pod "downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013469709s
    STEP: Saw pod success 02/09/23 01:08:43.887
    Feb  9 01:08:43.887: INFO: Pod "downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156" satisfied condition "Succeeded or Failed"
    Feb  9 01:08:43.894: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156 container client-container: <nil>
    STEP: delete the pod 02/09/23 01:08:43.912
    Feb  9 01:08:43.936: INFO: Waiting for pod downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156 to disappear
    Feb  9 01:08:43.941: INFO: Pod downwardapi-volume-1010c049-cb8b-4708-a2d3-23630bf24156 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:08:43.941: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-6770" for this suite. 02/09/23 01:08:43.95
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should have a working scale subresource [Conformance]
  test/e2e/apps/statefulset.go:848
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:08:43.962
Feb  9 01:08:43.962: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename statefulset 02/09/23 01:08:43.963
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:08:43.983
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:08:43.987
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-1723 02/09/23 01:08:43.992
[It] should have a working scale subresource [Conformance]
  test/e2e/apps/statefulset.go:848
STEP: Creating statefulset ss in namespace statefulset-1723 02/09/23 01:08:43.999
Feb  9 01:08:44.013: INFO: Found 0 stateful pods, waiting for 1
Feb  9 01:08:54.019: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource 02/09/23 01:08:54.032
STEP: updating a scale subresource 02/09/23 01:08:54.039
STEP: verifying the statefulset Spec.Replicas was modified 02/09/23 01:08:54.048
STEP: Patch a scale subresource 02/09/23 01:08:54.053
STEP: verifying the statefulset Spec.Replicas was modified 02/09/23 01:08:54.063
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Feb  9 01:08:54.069: INFO: Deleting all statefulset in ns statefulset-1723
Feb  9 01:08:54.075: INFO: Scaling statefulset ss to 0
Feb  9 01:09:04.122: INFO: Waiting for statefulset status.replicas updated to 0
Feb  9 01:09:04.128: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Feb  9 01:09:04.150: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-1723" for this suite. 02/09/23 01:09:04.16
------------------------------
â€¢ [SLOW TEST] [20.208 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should have a working scale subresource [Conformance]
    test/e2e/apps/statefulset.go:848

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:08:43.962
    Feb  9 01:08:43.962: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename statefulset 02/09/23 01:08:43.963
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:08:43.983
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:08:43.987
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-1723 02/09/23 01:08:43.992
    [It] should have a working scale subresource [Conformance]
      test/e2e/apps/statefulset.go:848
    STEP: Creating statefulset ss in namespace statefulset-1723 02/09/23 01:08:43.999
    Feb  9 01:08:44.013: INFO: Found 0 stateful pods, waiting for 1
    Feb  9 01:08:54.019: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: getting scale subresource 02/09/23 01:08:54.032
    STEP: updating a scale subresource 02/09/23 01:08:54.039
    STEP: verifying the statefulset Spec.Replicas was modified 02/09/23 01:08:54.048
    STEP: Patch a scale subresource 02/09/23 01:08:54.053
    STEP: verifying the statefulset Spec.Replicas was modified 02/09/23 01:08:54.063
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Feb  9 01:08:54.069: INFO: Deleting all statefulset in ns statefulset-1723
    Feb  9 01:08:54.075: INFO: Scaling statefulset ss to 0
    Feb  9 01:09:04.122: INFO: Waiting for statefulset status.replicas updated to 0
    Feb  9 01:09:04.128: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:09:04.150: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-1723" for this suite. 02/09/23 01:09:04.16
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:09:04.17
Feb  9 01:09:04.170: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename crd-webhook 02/09/23 01:09:04.171
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:04.19
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:04.194
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert 02/09/23 01:09:04.199
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 02/09/23 01:09:04.591
STEP: Deploying the custom resource conversion webhook pod 02/09/23 01:09:04.603
STEP: Wait for the deployment to be ready 02/09/23 01:09:04.616
Feb  9 01:09:04.628: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 01:09:06.648
STEP: Verifying the service has paired with the endpoint 02/09/23 01:09:06.662
Feb  9 01:09:07.662: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149
Feb  9 01:09:07.668: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Creating a v1 custom resource 02/09/23 01:09:10.285
STEP: v2 custom resource should be converted 02/09/23 01:09:10.291
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:09:10.827: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-webhook-9355" for this suite. 02/09/23 01:09:10.89
------------------------------
â€¢ [SLOW TEST] [6.733 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:09:04.17
    Feb  9 01:09:04.170: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename crd-webhook 02/09/23 01:09:04.171
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:04.19
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:04.194
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:128
    STEP: Setting up server cert 02/09/23 01:09:04.199
    STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 02/09/23 01:09:04.591
    STEP: Deploying the custom resource conversion webhook pod 02/09/23 01:09:04.603
    STEP: Wait for the deployment to be ready 02/09/23 01:09:04.616
    Feb  9 01:09:04.628: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 01:09:06.648
    STEP: Verifying the service has paired with the endpoint 02/09/23 01:09:06.662
    Feb  9 01:09:07.662: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
    [It] should be able to convert from CR v1 to CR v2 [Conformance]
      test/e2e/apimachinery/crd_conversion_webhook.go:149
    Feb  9 01:09:07.668: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Creating a v1 custom resource 02/09/23 01:09:10.285
    STEP: v2 custom resource should be converted 02/09/23 01:09:10.291
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:09:10.827: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:139
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-webhook-9355" for this suite. 02/09/23 01:09:10.89
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:09:10.906
Feb  9 01:09:10.906: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:09:10.907
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:10.942
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:10.952
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation 02/09/23 01:09:10.96
Feb  9 01:09:10.961: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:09:12.587: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:09:18.647: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-5227" for this suite. 02/09/23 01:09:18.662
------------------------------
â€¢ [SLOW TEST] [7.766 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:09:10.906
    Feb  9 01:09:10.906: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:09:10.907
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:10.942
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:10.952
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of same group and version but different kinds [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:357
    STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation 02/09/23 01:09:10.96
    Feb  9 01:09:10.961: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:09:12.587: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:09:18.647: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-5227" for this suite. 02/09/23 01:09:18.662
  << End Captured GinkgoWriter Output
------------------------------
[sig-instrumentation] Events API
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98
[BeforeEach] [sig-instrumentation] Events API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:09:18.672
Feb  9 01:09:18.672: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename events 02/09/23 01:09:18.673
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:18.693
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:18.697
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98
STEP: creating a test event 02/09/23 01:09:18.701
STEP: listing events in all namespaces 02/09/23 01:09:18.711
STEP: listing events in test namespace 02/09/23 01:09:18.727
STEP: listing events with field selection filtering on source 02/09/23 01:09:18.734
STEP: listing events with field selection filtering on reportingController 02/09/23 01:09:18.739
STEP: getting the test event 02/09/23 01:09:18.745
STEP: patching the test event 02/09/23 01:09:18.75
STEP: getting the test event 02/09/23 01:09:18.762
STEP: updating the test event 02/09/23 01:09:18.767
STEP: getting the test event 02/09/23 01:09:18.777
STEP: deleting the test event 02/09/23 01:09:18.782
STEP: listing events in all namespaces 02/09/23 01:09:18.794
STEP: listing events in test namespace 02/09/23 01:09:18.806
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/node/init/init.go:32
Feb  9 01:09:18.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events API
  tear down framework | framework.go:193
STEP: Destroying namespace "events-3533" for this suite. 02/09/23 01:09:18.82
------------------------------
â€¢ [0.157 seconds]
[sig-instrumentation] Events API
test/e2e/instrumentation/common/framework.go:23
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:09:18.672
    Feb  9 01:09:18.672: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename events 02/09/23 01:09:18.673
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:18.693
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:18.697
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/instrumentation/events.go:84
    [It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
      test/e2e/instrumentation/events.go:98
    STEP: creating a test event 02/09/23 01:09:18.701
    STEP: listing events in all namespaces 02/09/23 01:09:18.711
    STEP: listing events in test namespace 02/09/23 01:09:18.727
    STEP: listing events with field selection filtering on source 02/09/23 01:09:18.734
    STEP: listing events with field selection filtering on reportingController 02/09/23 01:09:18.739
    STEP: getting the test event 02/09/23 01:09:18.745
    STEP: patching the test event 02/09/23 01:09:18.75
    STEP: getting the test event 02/09/23 01:09:18.762
    STEP: updating the test event 02/09/23 01:09:18.767
    STEP: getting the test event 02/09/23 01:09:18.777
    STEP: deleting the test event 02/09/23 01:09:18.782
    STEP: listing events in all namespaces 02/09/23 01:09:18.794
    STEP: listing events in test namespace 02/09/23 01:09:18.806
    [AfterEach] [sig-instrumentation] Events API
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:09:18.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-3533" for this suite. 02/09/23 01:09:18.82
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] Services
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:09:18.831
Feb  9 01:09:18.831: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:09:18.832
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:18.852
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:18.857
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213
STEP: creating service in namespace services-7833 02/09/23 01:09:18.861
STEP: creating service affinity-clusterip-transition in namespace services-7833 02/09/23 01:09:18.861
STEP: creating replication controller affinity-clusterip-transition in namespace services-7833 02/09/23 01:09:18.879
I0209 01:09:18.886681      20 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-7833, replica count: 3
I0209 01:09:21.941129      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Feb  9 01:09:21.952: INFO: Creating new exec pod
Feb  9 01:09:21.965: INFO: Waiting up to 5m0s for pod "execpod-affinity9jj5f" in namespace "services-7833" to be "running"
Feb  9 01:09:21.970: INFO: Pod "execpod-affinity9jj5f": Phase="Pending", Reason="", readiness=false. Elapsed: 5.23093ms
Feb  9 01:09:23.977: INFO: Pod "execpod-affinity9jj5f": Phase="Running", Reason="", readiness=true. Elapsed: 2.012545676s
Feb  9 01:09:23.977: INFO: Pod "execpod-affinity9jj5f" satisfied condition "running"
Feb  9 01:09:24.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7833 exec execpod-affinity9jj5f -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip-transition 80'
Feb  9 01:09:25.144: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Feb  9 01:09:25.144: INFO: stdout: ""
Feb  9 01:09:25.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7833 exec execpod-affinity9jj5f -- /bin/sh -x -c nc -v -z -w 2 10.0.86.172 80'
Feb  9 01:09:25.299: INFO: stderr: "+ nc -v -z -w 2 10.0.86.172 80\nConnection to 10.0.86.172 80 port [tcp/http] succeeded!\n"
Feb  9 01:09:25.299: INFO: stdout: ""
Feb  9 01:09:25.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7833 exec execpod-affinity9jj5f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.86.172:80/ ; done'
Feb  9 01:09:25.555: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n"
Feb  9 01:09:25.555: INFO: stdout: "\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-fn96w\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-fn96w\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-fn96w\naffinity-clusterip-transition-fn96w\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-fn96w"
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-fn96w
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-fn96w
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-fn96w
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-fn96w
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-fn96w
Feb  9 01:09:25.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7833 exec execpod-affinity9jj5f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.86.172:80/ ; done'
Feb  9 01:09:25.793: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n"
Feb  9 01:09:25.793: INFO: stdout: "\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v"
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
Feb  9 01:09:25.793: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7833, will wait for the garbage collector to delete the pods 02/09/23 01:09:25.806
Feb  9 01:09:25.873: INFO: Deleting ReplicationController affinity-clusterip-transition took: 10.981765ms
Feb  9 01:09:25.974: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.953996ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:09:27.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-7833" for this suite. 02/09/23 01:09:28.007
------------------------------
â€¢ [SLOW TEST] [9.186 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:09:18.831
    Feb  9 01:09:18.831: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:09:18.832
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:18.852
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:18.857
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2213
    STEP: creating service in namespace services-7833 02/09/23 01:09:18.861
    STEP: creating service affinity-clusterip-transition in namespace services-7833 02/09/23 01:09:18.861
    STEP: creating replication controller affinity-clusterip-transition in namespace services-7833 02/09/23 01:09:18.879
    I0209 01:09:18.886681      20 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-7833, replica count: 3
    I0209 01:09:21.941129      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Feb  9 01:09:21.952: INFO: Creating new exec pod
    Feb  9 01:09:21.965: INFO: Waiting up to 5m0s for pod "execpod-affinity9jj5f" in namespace "services-7833" to be "running"
    Feb  9 01:09:21.970: INFO: Pod "execpod-affinity9jj5f": Phase="Pending", Reason="", readiness=false. Elapsed: 5.23093ms
    Feb  9 01:09:23.977: INFO: Pod "execpod-affinity9jj5f": Phase="Running", Reason="", readiness=true. Elapsed: 2.012545676s
    Feb  9 01:09:23.977: INFO: Pod "execpod-affinity9jj5f" satisfied condition "running"
    Feb  9 01:09:24.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7833 exec execpod-affinity9jj5f -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip-transition 80'
    Feb  9 01:09:25.144: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
    Feb  9 01:09:25.144: INFO: stdout: ""
    Feb  9 01:09:25.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7833 exec execpod-affinity9jj5f -- /bin/sh -x -c nc -v -z -w 2 10.0.86.172 80'
    Feb  9 01:09:25.299: INFO: stderr: "+ nc -v -z -w 2 10.0.86.172 80\nConnection to 10.0.86.172 80 port [tcp/http] succeeded!\n"
    Feb  9 01:09:25.299: INFO: stdout: ""
    Feb  9 01:09:25.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7833 exec execpod-affinity9jj5f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.86.172:80/ ; done'
    Feb  9 01:09:25.555: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n"
    Feb  9 01:09:25.555: INFO: stdout: "\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-fn96w\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-fn96w\naffinity-clusterip-transition-qb4hl\naffinity-clusterip-transition-fn96w\naffinity-clusterip-transition-fn96w\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-fn96w"
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-fn96w
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-fn96w
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-qb4hl
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-fn96w
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-fn96w
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.555: INFO: Received response from host: affinity-clusterip-transition-fn96w
    Feb  9 01:09:25.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7833 exec execpod-affinity9jj5f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.86.172:80/ ; done'
    Feb  9 01:09:25.793: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.86.172:80/\n"
    Feb  9 01:09:25.793: INFO: stdout: "\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v\naffinity-clusterip-transition-4f85v"
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Received response from host: affinity-clusterip-transition-4f85v
    Feb  9 01:09:25.793: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7833, will wait for the garbage collector to delete the pods 02/09/23 01:09:25.806
    Feb  9 01:09:25.873: INFO: Deleting ReplicationController affinity-clusterip-transition took: 10.981765ms
    Feb  9 01:09:25.974: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.953996ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:09:27.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-7833" for this suite. 02/09/23 01:09:28.007
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:09:28.02
Feb  9 01:09:28.021: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:09:28.022
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:28.041
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:28.046
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:09:28.051
Feb  9 01:09:28.063: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105" in namespace "downward-api-9506" to be "Succeeded or Failed"
Feb  9 01:09:28.069: INFO: Pod "downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105": Phase="Pending", Reason="", readiness=false. Elapsed: 5.788039ms
Feb  9 01:09:30.076: INFO: Pod "downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013133502s
Feb  9 01:09:32.076: INFO: Pod "downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012700012s
STEP: Saw pod success 02/09/23 01:09:32.076
Feb  9 01:09:32.076: INFO: Pod "downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105" satisfied condition "Succeeded or Failed"
Feb  9 01:09:32.082: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105 container client-container: <nil>
STEP: delete the pod 02/09/23 01:09:32.096
Feb  9 01:09:32.112: INFO: Waiting for pod downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105 to disappear
Feb  9 01:09:32.119: INFO: Pod downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Feb  9 01:09:32.119: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-9506" for this suite. 02/09/23 01:09:32.127
------------------------------
â€¢ [4.116 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:09:28.02
    Feb  9 01:09:28.021: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:09:28.022
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:28.041
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:28.046
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:249
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:09:28.051
    Feb  9 01:09:28.063: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105" in namespace "downward-api-9506" to be "Succeeded or Failed"
    Feb  9 01:09:28.069: INFO: Pod "downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105": Phase="Pending", Reason="", readiness=false. Elapsed: 5.788039ms
    Feb  9 01:09:30.076: INFO: Pod "downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013133502s
    Feb  9 01:09:32.076: INFO: Pod "downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012700012s
    STEP: Saw pod success 02/09/23 01:09:32.076
    Feb  9 01:09:32.076: INFO: Pod "downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105" satisfied condition "Succeeded or Failed"
    Feb  9 01:09:32.082: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105 container client-container: <nil>
    STEP: delete the pod 02/09/23 01:09:32.096
    Feb  9 01:09:32.112: INFO: Waiting for pod downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105 to disappear
    Feb  9 01:09:32.119: INFO: Pod downwardapi-volume-f9547784-222a-48df-900e-f9533ae64105 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:09:32.119: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-9506" for this suite. 02/09/23 01:09:32.127
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:09:32.138
Feb  9 01:09:32.139: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pods 02/09/23 01:09:32.139
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:32.163
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:32.17
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398
STEP: creating the pod 02/09/23 01:09:32.175
STEP: submitting the pod to kubernetes 02/09/23 01:09:32.176
Feb  9 01:09:32.188: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d" in namespace "pods-7218" to be "running and ready"
Feb  9 01:09:32.194: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d": Phase="Pending", Reason="", readiness=false. Elapsed: 5.868839ms
Feb  9 01:09:32.194: INFO: The phase of Pod pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:09:34.200: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d": Phase="Running", Reason="", readiness=true. Elapsed: 2.012351297s
Feb  9 01:09:34.200: INFO: The phase of Pod pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d is Running (Ready = true)
Feb  9 01:09:34.200: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d" satisfied condition "running and ready"
STEP: verifying the pod is in kubernetes 02/09/23 01:09:34.207
STEP: updating the pod 02/09/23 01:09:34.213
Feb  9 01:09:34.733: INFO: Successfully updated pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d"
Feb  9 01:09:34.733: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d" in namespace "pods-7218" to be "terminated with reason DeadlineExceeded"
Feb  9 01:09:34.739: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d": Phase="Running", Reason="", readiness=true. Elapsed: 5.825142ms
Feb  9 01:09:36.747: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d": Phase="Running", Reason="", readiness=true. Elapsed: 2.014211602s
Feb  9 01:09:38.745: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.012326188s
Feb  9 01:09:38.745: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d" satisfied condition "terminated with reason DeadlineExceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Feb  9 01:09:38.746: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-7218" for this suite. 02/09/23 01:09:38.754
------------------------------
â€¢ [SLOW TEST] [6.626 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:09:32.138
    Feb  9 01:09:32.139: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pods 02/09/23 01:09:32.139
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:32.163
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:32.17
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:398
    STEP: creating the pod 02/09/23 01:09:32.175
    STEP: submitting the pod to kubernetes 02/09/23 01:09:32.176
    Feb  9 01:09:32.188: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d" in namespace "pods-7218" to be "running and ready"
    Feb  9 01:09:32.194: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d": Phase="Pending", Reason="", readiness=false. Elapsed: 5.868839ms
    Feb  9 01:09:32.194: INFO: The phase of Pod pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:09:34.200: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d": Phase="Running", Reason="", readiness=true. Elapsed: 2.012351297s
    Feb  9 01:09:34.200: INFO: The phase of Pod pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d is Running (Ready = true)
    Feb  9 01:09:34.200: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d" satisfied condition "running and ready"
    STEP: verifying the pod is in kubernetes 02/09/23 01:09:34.207
    STEP: updating the pod 02/09/23 01:09:34.213
    Feb  9 01:09:34.733: INFO: Successfully updated pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d"
    Feb  9 01:09:34.733: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d" in namespace "pods-7218" to be "terminated with reason DeadlineExceeded"
    Feb  9 01:09:34.739: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d": Phase="Running", Reason="", readiness=true. Elapsed: 5.825142ms
    Feb  9 01:09:36.747: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d": Phase="Running", Reason="", readiness=true. Elapsed: 2.014211602s
    Feb  9 01:09:38.745: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.012326188s
    Feb  9 01:09:38.745: INFO: Pod "pod-update-activedeadlineseconds-b3545bad-6fc6-499a-979d-dc9dad24f80d" satisfied condition "terminated with reason DeadlineExceeded"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:09:38.746: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-7218" for this suite. 02/09/23 01:09:38.754
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:216
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:09:38.765
Feb  9 01:09:38.766: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-runtime 02/09/23 01:09:38.766
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:38.786
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:38.79
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:216
STEP: create the container 02/09/23 01:09:38.795
STEP: wait for the container to reach Failed 02/09/23 01:09:38.811
STEP: get the container status 02/09/23 01:09:41.837
STEP: the container should be terminated 02/09/23 01:09:41.843
STEP: the termination message should be set 02/09/23 01:09:41.843
Feb  9 01:09:41.843: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container 02/09/23 01:09:41.843
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Feb  9 01:09:41.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-8799" for this suite. 02/09/23 01:09:41.873
------------------------------
â€¢ [3.118 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:216

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:09:38.765
    Feb  9 01:09:38.766: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-runtime 02/09/23 01:09:38.766
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:38.786
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:38.79
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:216
    STEP: create the container 02/09/23 01:09:38.795
    STEP: wait for the container to reach Failed 02/09/23 01:09:38.811
    STEP: get the container status 02/09/23 01:09:41.837
    STEP: the container should be terminated 02/09/23 01:09:41.843
    STEP: the termination message should be set 02/09/23 01:09:41.843
    Feb  9 01:09:41.843: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
    STEP: delete the container 02/09/23 01:09:41.843
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:09:41.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-8799" for this suite. 02/09/23 01:09:41.873
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:09:41.89
Feb  9 01:09:41.891: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts 02/09/23 01:09:41.891
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:41.914
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:41.918
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/metrics/init/init.go:31
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63
STEP: Setting up the test 02/09/23 01:09:41.923
STEP: Creating hostNetwork=false pod 02/09/23 01:09:41.923
Feb  9 01:09:41.936: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "e2e-kubelet-etc-hosts-9585" to be "running and ready"
Feb  9 01:09:41.942: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.587141ms
Feb  9 01:09:41.942: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:09:43.950: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.014128661s
Feb  9 01:09:43.950: INFO: The phase of Pod test-pod is Running (Ready = true)
Feb  9 01:09:43.950: INFO: Pod "test-pod" satisfied condition "running and ready"
STEP: Creating hostNetwork=true pod 02/09/23 01:09:43.956
Feb  9 01:09:43.964: INFO: Waiting up to 5m0s for pod "test-host-network-pod" in namespace "e2e-kubelet-etc-hosts-9585" to be "running and ready"
Feb  9 01:09:43.972: INFO: Pod "test-host-network-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 7.250529ms
Feb  9 01:09:43.972: INFO: The phase of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:09:45.979: INFO: Pod "test-host-network-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.014906926s
Feb  9 01:09:45.979: INFO: The phase of Pod test-host-network-pod is Running (Ready = true)
Feb  9 01:09:45.979: INFO: Pod "test-host-network-pod" satisfied condition "running and ready"
STEP: Running the test 02/09/23 01:09:45.986
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false 02/09/23 01:09:45.986
Feb  9 01:09:45.986: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:09:45.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:09:45.986: INFO: ExecWithOptions: Clientset creation
Feb  9 01:09:45.987: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Feb  9 01:09:46.095: INFO: Exec stderr: ""
Feb  9 01:09:46.095: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:09:46.095: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:09:46.096: INFO: ExecWithOptions: Clientset creation
Feb  9 01:09:46.096: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Feb  9 01:09:46.196: INFO: Exec stderr: ""
Feb  9 01:09:46.196: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:09:46.196: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:09:46.196: INFO: ExecWithOptions: Clientset creation
Feb  9 01:09:46.197: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Feb  9 01:09:46.269: INFO: Exec stderr: ""
Feb  9 01:09:46.269: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:09:46.269: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:09:46.269: INFO: ExecWithOptions: Clientset creation
Feb  9 01:09:46.269: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Feb  9 01:09:46.347: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount 02/09/23 01:09:46.347
Feb  9 01:09:46.348: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:09:46.348: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:09:46.348: INFO: ExecWithOptions: Clientset creation
Feb  9 01:09:46.348: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Feb  9 01:09:46.436: INFO: Exec stderr: ""
Feb  9 01:09:46.437: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:09:46.437: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:09:46.437: INFO: ExecWithOptions: Clientset creation
Feb  9 01:09:46.437: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Feb  9 01:09:46.519: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true 02/09/23 01:09:46.519
Feb  9 01:09:46.520: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:09:46.520: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:09:46.520: INFO: ExecWithOptions: Clientset creation
Feb  9 01:09:46.520: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Feb  9 01:09:46.599: INFO: Exec stderr: ""
Feb  9 01:09:46.599: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:09:46.599: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:09:46.600: INFO: ExecWithOptions: Clientset creation
Feb  9 01:09:46.600: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Feb  9 01:09:46.686: INFO: Exec stderr: ""
Feb  9 01:09:46.686: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:09:46.686: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:09:46.687: INFO: ExecWithOptions: Clientset creation
Feb  9 01:09:46.687: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Feb  9 01:09:46.771: INFO: Exec stderr: ""
Feb  9 01:09:46.771: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:09:46.771: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:09:46.772: INFO: ExecWithOptions: Clientset creation
Feb  9 01:09:46.772: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Feb  9 01:09:46.866: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/node/init/init.go:32
Feb  9 01:09:46.867: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  tear down framework | framework.go:193
STEP: Destroying namespace "e2e-kubelet-etc-hosts-9585" for this suite. 02/09/23 01:09:46.877
------------------------------
â€¢ [4.997 seconds]
[sig-node] KubeletManagedEtcHosts
test/e2e/common/node/framework.go:23
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] KubeletManagedEtcHosts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:09:41.89
    Feb  9 01:09:41.891: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts 02/09/23 01:09:41.891
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:41.914
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:41.918
    [BeforeEach] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/metrics/init/init.go:31
    [It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet_etc_hosts.go:63
    STEP: Setting up the test 02/09/23 01:09:41.923
    STEP: Creating hostNetwork=false pod 02/09/23 01:09:41.923
    Feb  9 01:09:41.936: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "e2e-kubelet-etc-hosts-9585" to be "running and ready"
    Feb  9 01:09:41.942: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.587141ms
    Feb  9 01:09:41.942: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:09:43.950: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.014128661s
    Feb  9 01:09:43.950: INFO: The phase of Pod test-pod is Running (Ready = true)
    Feb  9 01:09:43.950: INFO: Pod "test-pod" satisfied condition "running and ready"
    STEP: Creating hostNetwork=true pod 02/09/23 01:09:43.956
    Feb  9 01:09:43.964: INFO: Waiting up to 5m0s for pod "test-host-network-pod" in namespace "e2e-kubelet-etc-hosts-9585" to be "running and ready"
    Feb  9 01:09:43.972: INFO: Pod "test-host-network-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 7.250529ms
    Feb  9 01:09:43.972: INFO: The phase of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:09:45.979: INFO: Pod "test-host-network-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.014906926s
    Feb  9 01:09:45.979: INFO: The phase of Pod test-host-network-pod is Running (Ready = true)
    Feb  9 01:09:45.979: INFO: Pod "test-host-network-pod" satisfied condition "running and ready"
    STEP: Running the test 02/09/23 01:09:45.986
    STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false 02/09/23 01:09:45.986
    Feb  9 01:09:45.986: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:09:45.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:09:45.986: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:09:45.987: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Feb  9 01:09:46.095: INFO: Exec stderr: ""
    Feb  9 01:09:46.095: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:09:46.095: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:09:46.096: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:09:46.096: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Feb  9 01:09:46.196: INFO: Exec stderr: ""
    Feb  9 01:09:46.196: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:09:46.196: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:09:46.196: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:09:46.197: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Feb  9 01:09:46.269: INFO: Exec stderr: ""
    Feb  9 01:09:46.269: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:09:46.269: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:09:46.269: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:09:46.269: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Feb  9 01:09:46.347: INFO: Exec stderr: ""
    STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount 02/09/23 01:09:46.347
    Feb  9 01:09:46.348: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:09:46.348: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:09:46.348: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:09:46.348: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
    Feb  9 01:09:46.436: INFO: Exec stderr: ""
    Feb  9 01:09:46.437: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:09:46.437: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:09:46.437: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:09:46.437: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
    Feb  9 01:09:46.519: INFO: Exec stderr: ""
    STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true 02/09/23 01:09:46.519
    Feb  9 01:09:46.520: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:09:46.520: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:09:46.520: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:09:46.520: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Feb  9 01:09:46.599: INFO: Exec stderr: ""
    Feb  9 01:09:46.599: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:09:46.599: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:09:46.600: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:09:46.600: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Feb  9 01:09:46.686: INFO: Exec stderr: ""
    Feb  9 01:09:46.686: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:09:46.686: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:09:46.687: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:09:46.687: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Feb  9 01:09:46.771: INFO: Exec stderr: ""
    Feb  9 01:09:46.771: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9585 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:09:46.771: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:09:46.772: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:09:46.772: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9585/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Feb  9 01:09:46.866: INFO: Exec stderr: ""
    [AfterEach] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:09:46.867: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      tear down framework | framework.go:193
    STEP: Destroying namespace "e2e-kubelet-etc-hosts-9585" for this suite. 02/09/23 01:09:46.877
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:09:46.89
Feb  9 01:09:46.890: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename replication-controller 02/09/23 01:09:46.891
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:46.909
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:46.914
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83
Feb  9 01:09:46.918: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota 02/09/23 01:09:46.93
STEP: Checking rc "condition-test" has the desired failure condition set 02/09/23 01:09:46.936
STEP: Scaling down rc "condition-test" to satisfy pod quota 02/09/23 01:09:47.947
Feb  9 01:09:47.960: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set 02/09/23 01:09:47.96
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Feb  9 01:09:48.973: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-8360" for this suite. 02/09/23 01:09:48.981
------------------------------
â€¢ [2.101 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:09:46.89
    Feb  9 01:09:46.890: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename replication-controller 02/09/23 01:09:46.891
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:46.909
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:46.914
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should surface a failure condition on a common issue like exceeded quota [Conformance]
      test/e2e/apps/rc.go:83
    Feb  9 01:09:46.918: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
    STEP: Creating rc "condition-test" that asks for more than the allowed pod quota 02/09/23 01:09:46.93
    STEP: Checking rc "condition-test" has the desired failure condition set 02/09/23 01:09:46.936
    STEP: Scaling down rc "condition-test" to satisfy pod quota 02/09/23 01:09:47.947
    Feb  9 01:09:47.960: INFO: Updating replication controller "condition-test"
    STEP: Checking rc "condition-test" has no failure condition set 02/09/23 01:09:47.96
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:09:48.973: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-8360" for this suite. 02/09/23 01:09:48.981
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:09:48.991
Feb  9 01:09:48.991: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename containers 02/09/23 01:09:48.992
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:49.01
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:49.014
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59
STEP: Creating a pod to test override arguments 02/09/23 01:09:49.018
Feb  9 01:09:49.030: INFO: Waiting up to 5m0s for pod "client-containers-81637505-3843-44f4-938d-3959de1ec6c2" in namespace "containers-1675" to be "Succeeded or Failed"
Feb  9 01:09:49.035: INFO: Pod "client-containers-81637505-3843-44f4-938d-3959de1ec6c2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.541431ms
Feb  9 01:09:51.043: INFO: Pod "client-containers-81637505-3843-44f4-938d-3959de1ec6c2": Phase="Running", Reason="", readiness=false. Elapsed: 2.012726653s
Feb  9 01:09:53.042: INFO: Pod "client-containers-81637505-3843-44f4-938d-3959de1ec6c2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012229716s
STEP: Saw pod success 02/09/23 01:09:53.042
Feb  9 01:09:53.042: INFO: Pod "client-containers-81637505-3843-44f4-938d-3959de1ec6c2" satisfied condition "Succeeded or Failed"
Feb  9 01:09:53.048: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod client-containers-81637505-3843-44f4-938d-3959de1ec6c2 container agnhost-container: <nil>
STEP: delete the pod 02/09/23 01:09:53.06
Feb  9 01:09:53.075: INFO: Waiting for pod client-containers-81637505-3843-44f4-938d-3959de1ec6c2 to disappear
Feb  9 01:09:53.080: INFO: Pod client-containers-81637505-3843-44f4-938d-3959de1ec6c2 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Feb  9 01:09:53.081: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-1675" for this suite. 02/09/23 01:09:53.09
------------------------------
â€¢ [4.107 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:09:48.991
    Feb  9 01:09:48.991: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename containers 02/09/23 01:09:48.992
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:49.01
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:49.014
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:59
    STEP: Creating a pod to test override arguments 02/09/23 01:09:49.018
    Feb  9 01:09:49.030: INFO: Waiting up to 5m0s for pod "client-containers-81637505-3843-44f4-938d-3959de1ec6c2" in namespace "containers-1675" to be "Succeeded or Failed"
    Feb  9 01:09:49.035: INFO: Pod "client-containers-81637505-3843-44f4-938d-3959de1ec6c2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.541431ms
    Feb  9 01:09:51.043: INFO: Pod "client-containers-81637505-3843-44f4-938d-3959de1ec6c2": Phase="Running", Reason="", readiness=false. Elapsed: 2.012726653s
    Feb  9 01:09:53.042: INFO: Pod "client-containers-81637505-3843-44f4-938d-3959de1ec6c2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012229716s
    STEP: Saw pod success 02/09/23 01:09:53.042
    Feb  9 01:09:53.042: INFO: Pod "client-containers-81637505-3843-44f4-938d-3959de1ec6c2" satisfied condition "Succeeded or Failed"
    Feb  9 01:09:53.048: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod client-containers-81637505-3843-44f4-938d-3959de1ec6c2 container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 01:09:53.06
    Feb  9 01:09:53.075: INFO: Waiting for pod client-containers-81637505-3843-44f4-938d-3959de1ec6c2 to disappear
    Feb  9 01:09:53.080: INFO: Pod client-containers-81637505-3843-44f4-938d-3959de1ec6c2 no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:09:53.081: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-1675" for this suite. 02/09/23 01:09:53.09
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label
  should update the label on a resource  [Conformance]
  test/e2e/kubectl/kubectl.go:1509
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:09:53.102
Feb  9 01:09:53.102: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:09:53.103
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:53.127
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:53.133
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1494
STEP: creating the pod 02/09/23 01:09:53.138
Feb  9 01:09:53.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 create -f -'
Feb  9 01:09:53.316: INFO: stderr: ""
Feb  9 01:09:53.316: INFO: stdout: "pod/pause created\n"
Feb  9 01:09:53.316: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Feb  9 01:09:53.316: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-3190" to be "running and ready"
Feb  9 01:09:53.323: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 7.131539ms
Feb  9 01:09:53.323: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'aks-nodes-15799032-vmss000000' to be 'Running' but was 'Pending'
Feb  9 01:09:55.330: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.013997143s
Feb  9 01:09:55.330: INFO: Pod "pause" satisfied condition "running and ready"
Feb  9 01:09:55.330: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/kubectl/kubectl.go:1509
STEP: adding the label testing-label with value testing-label-value to a pod 02/09/23 01:09:55.33
Feb  9 01:09:55.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 label pods pause testing-label=testing-label-value'
Feb  9 01:09:55.409: INFO: stderr: ""
Feb  9 01:09:55.409: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value 02/09/23 01:09:55.409
Feb  9 01:09:55.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 get pod pause -L testing-label'
Feb  9 01:09:55.473: INFO: stderr: ""
Feb  9 01:09:55.473: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod 02/09/23 01:09:55.473
Feb  9 01:09:55.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 label pods pause testing-label-'
Feb  9 01:09:55.547: INFO: stderr: ""
Feb  9 01:09:55.547: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label 02/09/23 01:09:55.547
Feb  9 01:09:55.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 get pod pause -L testing-label'
Feb  9 01:09:55.617: INFO: stderr: ""
Feb  9 01:09:55.617: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1500
STEP: using delete to clean up resources 02/09/23 01:09:55.617
Feb  9 01:09:55.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 delete --grace-period=0 --force -f -'
Feb  9 01:09:55.696: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Feb  9 01:09:55.696: INFO: stdout: "pod \"pause\" force deleted\n"
Feb  9 01:09:55.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 get rc,svc -l name=pause --no-headers'
Feb  9 01:09:55.766: INFO: stderr: "No resources found in kubectl-3190 namespace.\n"
Feb  9 01:09:55.766: INFO: stdout: ""
Feb  9 01:09:55.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Feb  9 01:09:55.825: INFO: stderr: ""
Feb  9 01:09:55.825: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:09:55.826: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-3190" for this suite. 02/09/23 01:09:55.834
------------------------------
â€¢ [2.742 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl label
  test/e2e/kubectl/kubectl.go:1492
    should update the label on a resource  [Conformance]
    test/e2e/kubectl/kubectl.go:1509

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:09:53.102
    Feb  9 01:09:53.102: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:09:53.103
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:53.127
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:53.133
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl label
      test/e2e/kubectl/kubectl.go:1494
    STEP: creating the pod 02/09/23 01:09:53.138
    Feb  9 01:09:53.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 create -f -'
    Feb  9 01:09:53.316: INFO: stderr: ""
    Feb  9 01:09:53.316: INFO: stdout: "pod/pause created\n"
    Feb  9 01:09:53.316: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
    Feb  9 01:09:53.316: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-3190" to be "running and ready"
    Feb  9 01:09:53.323: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 7.131539ms
    Feb  9 01:09:53.323: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'aks-nodes-15799032-vmss000000' to be 'Running' but was 'Pending'
    Feb  9 01:09:55.330: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.013997143s
    Feb  9 01:09:55.330: INFO: Pod "pause" satisfied condition "running and ready"
    Feb  9 01:09:55.330: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
    [It] should update the label on a resource  [Conformance]
      test/e2e/kubectl/kubectl.go:1509
    STEP: adding the label testing-label with value testing-label-value to a pod 02/09/23 01:09:55.33
    Feb  9 01:09:55.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 label pods pause testing-label=testing-label-value'
    Feb  9 01:09:55.409: INFO: stderr: ""
    Feb  9 01:09:55.409: INFO: stdout: "pod/pause labeled\n"
    STEP: verifying the pod has the label testing-label with the value testing-label-value 02/09/23 01:09:55.409
    Feb  9 01:09:55.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 get pod pause -L testing-label'
    Feb  9 01:09:55.473: INFO: stderr: ""
    Feb  9 01:09:55.473: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
    STEP: removing the label testing-label of a pod 02/09/23 01:09:55.473
    Feb  9 01:09:55.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 label pods pause testing-label-'
    Feb  9 01:09:55.547: INFO: stderr: ""
    Feb  9 01:09:55.547: INFO: stdout: "pod/pause unlabeled\n"
    STEP: verifying the pod doesn't have the label testing-label 02/09/23 01:09:55.547
    Feb  9 01:09:55.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 get pod pause -L testing-label'
    Feb  9 01:09:55.617: INFO: stderr: ""
    Feb  9 01:09:55.617: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
    [AfterEach] Kubectl label
      test/e2e/kubectl/kubectl.go:1500
    STEP: using delete to clean up resources 02/09/23 01:09:55.617
    Feb  9 01:09:55.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 delete --grace-period=0 --force -f -'
    Feb  9 01:09:55.696: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Feb  9 01:09:55.696: INFO: stdout: "pod \"pause\" force deleted\n"
    Feb  9 01:09:55.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 get rc,svc -l name=pause --no-headers'
    Feb  9 01:09:55.766: INFO: stderr: "No resources found in kubectl-3190 namespace.\n"
    Feb  9 01:09:55.766: INFO: stdout: ""
    Feb  9 01:09:55.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-3190 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Feb  9 01:09:55.825: INFO: stderr: ""
    Feb  9 01:09:55.825: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:09:55.826: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-3190" for this suite. 02/09/23 01:09:55.834
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:09:55.846
Feb  9 01:09:55.846: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename replication-controller 02/09/23 01:09:55.847
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:55.866
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:55.87
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101
STEP: Given a ReplicationController is created 02/09/23 01:09:55.875
STEP: When the matched label of one of its pods change 02/09/23 01:09:55.882
Feb  9 01:09:55.888: INFO: Pod name pod-release: Found 0 pods out of 1
Feb  9 01:10:00.896: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released 02/09/23 01:10:00.912
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Feb  9 01:10:01.924: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-5775" for this suite. 02/09/23 01:10:01.933
------------------------------
â€¢ [SLOW TEST] [6.097 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:09:55.846
    Feb  9 01:09:55.846: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename replication-controller 02/09/23 01:09:55.847
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:09:55.866
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:09:55.87
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should release no longer matching pods [Conformance]
      test/e2e/apps/rc.go:101
    STEP: Given a ReplicationController is created 02/09/23 01:09:55.875
    STEP: When the matched label of one of its pods change 02/09/23 01:09:55.882
    Feb  9 01:09:55.888: INFO: Pod name pod-release: Found 0 pods out of 1
    Feb  9 01:10:00.896: INFO: Pod name pod-release: Found 1 pods out of 1
    STEP: Then the pod is released 02/09/23 01:10:00.912
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:10:01.924: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-5775" for this suite. 02/09/23 01:10:01.933
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:10:01.943
Feb  9 01:10:01.943: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename secrets 02/09/23 01:10:01.944
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:10:01.963
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:10:01.968
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68
STEP: Creating secret with name secret-test-ac4fc1a9-5ac7-4459-b5d7-f1e745722272 02/09/23 01:10:01.973
STEP: Creating a pod to test consume secrets 02/09/23 01:10:01.979
Feb  9 01:10:01.993: INFO: Waiting up to 5m0s for pod "pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d" in namespace "secrets-1750" to be "Succeeded or Failed"
Feb  9 01:10:01.999: INFO: Pod "pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d": Phase="Pending", Reason="", readiness=false. Elapsed: 5.582131ms
Feb  9 01:10:04.006: INFO: Pod "pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012774786s
Feb  9 01:10:06.011: INFO: Pod "pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017378027s
STEP: Saw pod success 02/09/23 01:10:06.011
Feb  9 01:10:06.011: INFO: Pod "pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d" satisfied condition "Succeeded or Failed"
Feb  9 01:10:06.017: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d container secret-volume-test: <nil>
STEP: delete the pod 02/09/23 01:10:06.03
Feb  9 01:10:06.051: INFO: Waiting for pod pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d to disappear
Feb  9 01:10:06.057: INFO: Pod pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Feb  9 01:10:06.057: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-1750" for this suite. 02/09/23 01:10:06.065
------------------------------
â€¢ [4.132 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:10:01.943
    Feb  9 01:10:01.943: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename secrets 02/09/23 01:10:01.944
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:10:01.963
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:10:01.968
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:68
    STEP: Creating secret with name secret-test-ac4fc1a9-5ac7-4459-b5d7-f1e745722272 02/09/23 01:10:01.973
    STEP: Creating a pod to test consume secrets 02/09/23 01:10:01.979
    Feb  9 01:10:01.993: INFO: Waiting up to 5m0s for pod "pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d" in namespace "secrets-1750" to be "Succeeded or Failed"
    Feb  9 01:10:01.999: INFO: Pod "pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d": Phase="Pending", Reason="", readiness=false. Elapsed: 5.582131ms
    Feb  9 01:10:04.006: INFO: Pod "pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012774786s
    Feb  9 01:10:06.011: INFO: Pod "pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017378027s
    STEP: Saw pod success 02/09/23 01:10:06.011
    Feb  9 01:10:06.011: INFO: Pod "pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d" satisfied condition "Succeeded or Failed"
    Feb  9 01:10:06.017: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d container secret-volume-test: <nil>
    STEP: delete the pod 02/09/23 01:10:06.03
    Feb  9 01:10:06.051: INFO: Waiting for pod pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d to disappear
    Feb  9 01:10:06.057: INFO: Pod pod-secrets-a020f39e-f948-4a0d-968f-f0795788e25d no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:10:06.057: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-1750" for this suite. 02/09/23 01:10:06.065
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests
  should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38
[BeforeEach] [sig-architecture] Conformance Tests
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:10:06.077
Feb  9 01:10:06.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename conformance-tests 02/09/23 01:10:06.077
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:10:06.097
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:10:06.102
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/metrics/init/init.go:31
[It] should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38
STEP: Getting node addresses 02/09/23 01:10:06.107
Feb  9 01:10:06.107: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/node/init/init.go:32
Feb  9 01:10:06.118: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  tear down framework | framework.go:193
STEP: Destroying namespace "conformance-tests-5148" for this suite. 02/09/23 01:10:06.125
------------------------------
â€¢ [0.058 seconds]
[sig-architecture] Conformance Tests
test/e2e/architecture/framework.go:23
  should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-architecture] Conformance Tests
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:10:06.077
    Feb  9 01:10:06.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename conformance-tests 02/09/23 01:10:06.077
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:10:06.097
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:10:06.102
    [BeforeEach] [sig-architecture] Conformance Tests
      test/e2e/framework/metrics/init/init.go:31
    [It] should have at least two untainted nodes [Conformance]
      test/e2e/architecture/conformance.go:38
    STEP: Getting node addresses 02/09/23 01:10:06.107
    Feb  9 01:10:06.107: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    [AfterEach] [sig-architecture] Conformance Tests
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:10:06.118: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      tear down framework | framework.go:193
    STEP: Destroying namespace "conformance-tests-5148" for this suite. 02/09/23 01:10:06.125
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should delete a job [Conformance]
  test/e2e/apps/job.go:481
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:10:06.137
Feb  9 01:10:06.137: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename job 02/09/23 01:10:06.138
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:10:06.158
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:10:06.162
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a job [Conformance]
  test/e2e/apps/job.go:481
STEP: Creating a job 02/09/23 01:10:06.167
STEP: Ensuring active pods == parallelism 02/09/23 01:10:06.174
STEP: delete a job 02/09/23 01:10:08.181
STEP: deleting Job.batch foo in namespace job-8335, will wait for the garbage collector to delete the pods 02/09/23 01:10:08.181
Feb  9 01:10:08.248: INFO: Deleting Job.batch foo took: 10.080255ms
Feb  9 01:10:08.348: INFO: Terminating Job.batch foo pods took: 100.158752ms
STEP: Ensuring job was deleted 02/09/23 01:10:40.849
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Feb  9 01:10:40.855: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-8335" for this suite. 02/09/23 01:10:40.864
------------------------------
â€¢ [SLOW TEST] [34.736 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/apps/job.go:481

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:10:06.137
    Feb  9 01:10:06.137: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename job 02/09/23 01:10:06.138
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:10:06.158
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:10:06.162
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a job [Conformance]
      test/e2e/apps/job.go:481
    STEP: Creating a job 02/09/23 01:10:06.167
    STEP: Ensuring active pods == parallelism 02/09/23 01:10:06.174
    STEP: delete a job 02/09/23 01:10:08.181
    STEP: deleting Job.batch foo in namespace job-8335, will wait for the garbage collector to delete the pods 02/09/23 01:10:08.181
    Feb  9 01:10:08.248: INFO: Deleting Job.batch foo took: 10.080255ms
    Feb  9 01:10:08.348: INFO: Terminating Job.batch foo pods took: 100.158752ms
    STEP: Ensuring job was deleted 02/09/23 01:10:40.849
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:10:40.855: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-8335" for this suite. 02/09/23 01:10:40.864
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:10:40.875
Feb  9 01:10:40.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename resourcequota 02/09/23 01:10:40.876
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:10:40.895
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:10:40.904
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803
STEP: Creating a ResourceQuota with best effort scope 02/09/23 01:10:40.908
STEP: Ensuring ResourceQuota status is calculated 02/09/23 01:10:40.915
STEP: Creating a ResourceQuota with not best effort scope 02/09/23 01:10:42.922
STEP: Ensuring ResourceQuota status is calculated 02/09/23 01:10:42.93
STEP: Creating a best-effort pod 02/09/23 01:10:44.937
STEP: Ensuring resource quota with best effort scope captures the pod usage 02/09/23 01:10:44.955
STEP: Ensuring resource quota with not best effort ignored the pod usage 02/09/23 01:10:46.962
STEP: Deleting the pod 02/09/23 01:10:48.968
STEP: Ensuring resource quota status released the pod usage 02/09/23 01:10:48.986
STEP: Creating a not best-effort pod 02/09/23 01:10:50.992
STEP: Ensuring resource quota with not best effort scope captures the pod usage 02/09/23 01:10:51.006
STEP: Ensuring resource quota with best effort scope ignored the pod usage 02/09/23 01:10:53.013
STEP: Deleting the pod 02/09/23 01:10:55.021
STEP: Ensuring resource quota status released the pod usage 02/09/23 01:10:55.034
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Feb  9 01:10:57.041: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-8530" for this suite. 02/09/23 01:10:57.05
------------------------------
â€¢ [SLOW TEST] [16.185 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:10:40.875
    Feb  9 01:10:40.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename resourcequota 02/09/23 01:10:40.876
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:10:40.895
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:10:40.904
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify ResourceQuota with best effort scope. [Conformance]
      test/e2e/apimachinery/resource_quota.go:803
    STEP: Creating a ResourceQuota with best effort scope 02/09/23 01:10:40.908
    STEP: Ensuring ResourceQuota status is calculated 02/09/23 01:10:40.915
    STEP: Creating a ResourceQuota with not best effort scope 02/09/23 01:10:42.922
    STEP: Ensuring ResourceQuota status is calculated 02/09/23 01:10:42.93
    STEP: Creating a best-effort pod 02/09/23 01:10:44.937
    STEP: Ensuring resource quota with best effort scope captures the pod usage 02/09/23 01:10:44.955
    STEP: Ensuring resource quota with not best effort ignored the pod usage 02/09/23 01:10:46.962
    STEP: Deleting the pod 02/09/23 01:10:48.968
    STEP: Ensuring resource quota status released the pod usage 02/09/23 01:10:48.986
    STEP: Creating a not best-effort pod 02/09/23 01:10:50.992
    STEP: Ensuring resource quota with not best effort scope captures the pod usage 02/09/23 01:10:51.006
    STEP: Ensuring resource quota with best effort scope ignored the pod usage 02/09/23 01:10:53.013
    STEP: Deleting the pod 02/09/23 01:10:55.021
    STEP: Ensuring resource quota status released the pod usage 02/09/23 01:10:55.034
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:10:57.041: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-8530" for this suite. 02/09/23 01:10:57.05
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version
  should check is all data is printed  [Conformance]
  test/e2e/kubectl/kubectl.go:1685
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:10:57.062
Feb  9 01:10:57.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:10:57.063
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:10:57.083
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:10:57.088
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check is all data is printed  [Conformance]
  test/e2e/kubectl/kubectl.go:1685
Feb  9 01:10:57.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1269 version'
Feb  9 01:10:57.143: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Feb  9 01:10:57.143: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.0\", GitCommit:\"b46a3f887ca979b1a5d14fd39cb1af43e7e5d12d\", GitTreeState:\"clean\", BuildDate:\"2022-12-08T19:58:30Z\", GoVersion:\"go1.19.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.7\nServer Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.0\", GitCommit:\"b46a3f887ca979b1a5d14fd39cb1af43e7e5d12d\", GitTreeState:\"clean\", BuildDate:\"2022-12-11T00:15:47Z\", GoVersion:\"go1.19.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:10:57.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1269" for this suite. 02/09/23 01:10:57.151
------------------------------
â€¢ [0.100 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl version
  test/e2e/kubectl/kubectl.go:1679
    should check is all data is printed  [Conformance]
    test/e2e/kubectl/kubectl.go:1685

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:10:57.062
    Feb  9 01:10:57.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:10:57.063
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:10:57.083
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:10:57.088
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check is all data is printed  [Conformance]
      test/e2e/kubectl/kubectl.go:1685
    Feb  9 01:10:57.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1269 version'
    Feb  9 01:10:57.143: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
    Feb  9 01:10:57.143: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.0\", GitCommit:\"b46a3f887ca979b1a5d14fd39cb1af43e7e5d12d\", GitTreeState:\"clean\", BuildDate:\"2022-12-08T19:58:30Z\", GoVersion:\"go1.19.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.7\nServer Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.0\", GitCommit:\"b46a3f887ca979b1a5d14fd39cb1af43e7e5d12d\", GitTreeState:\"clean\", BuildDate:\"2022-12-11T00:15:47Z\", GoVersion:\"go1.19.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:10:57.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1269" for this suite. 02/09/23 01:10:57.151
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:10:57.163
Feb  9 01:10:57.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 01:10:57.163
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:10:57.185
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:10:57.19
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 01:10:57.213
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:10:57.939
STEP: Deploying the webhook pod 02/09/23 01:10:57.951
STEP: Wait for the deployment to be ready 02/09/23 01:10:57.966
Feb  9 01:10:57.977: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service 02/09/23 01:10:59.995
STEP: Verifying the service has paired with the endpoint 02/09/23 01:11:00.025
Feb  9 01:11:01.025: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582
STEP: Listing all of the created validation webhooks 02/09/23 01:11:01.105
STEP: Creating a configMap that does not comply to the validation webhook rules 02/09/23 01:11:01.153
STEP: Deleting the collection of validation webhooks 02/09/23 01:11:01.187
STEP: Creating a configMap that does not comply to the validation webhook rules 02/09/23 01:11:01.263
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:01.280: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-5723" for this suite. 02/09/23 01:11:01.339
STEP: Destroying namespace "webhook-5723-markers" for this suite. 02/09/23 01:11:01.35
------------------------------
â€¢ [4.197 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:10:57.163
    Feb  9 01:10:57.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 01:10:57.163
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:10:57.185
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:10:57.19
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 01:10:57.213
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:10:57.939
    STEP: Deploying the webhook pod 02/09/23 01:10:57.951
    STEP: Wait for the deployment to be ready 02/09/23 01:10:57.966
    Feb  9 01:10:57.977: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
    STEP: Deploying the webhook service 02/09/23 01:10:59.995
    STEP: Verifying the service has paired with the endpoint 02/09/23 01:11:00.025
    Feb  9 01:11:01.025: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] listing validating webhooks should work [Conformance]
      test/e2e/apimachinery/webhook.go:582
    STEP: Listing all of the created validation webhooks 02/09/23 01:11:01.105
    STEP: Creating a configMap that does not comply to the validation webhook rules 02/09/23 01:11:01.153
    STEP: Deleting the collection of validation webhooks 02/09/23 01:11:01.187
    STEP: Creating a configMap that does not comply to the validation webhook rules 02/09/23 01:11:01.263
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:01.280: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-5723" for this suite. 02/09/23 01:11:01.339
    STEP: Destroying namespace "webhook-5723-markers" for this suite. 02/09/23 01:11:01.35
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:01.361
Feb  9 01:11:01.361: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename namespaces 02/09/23 01:11:01.362
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:01.38
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:01.384
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268
STEP: creating a Namespace 02/09/23 01:11:01.389
STEP: patching the Namespace 02/09/23 01:11:01.408
STEP: get the Namespace and ensuring it has the label 02/09/23 01:11:01.415
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:01.420: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-8700" for this suite. 02/09/23 01:11:01.428
STEP: Destroying namespace "nspatchtest-d7cd13c0-c2f6-4870-9954-f31bcad674b3-969" for this suite. 02/09/23 01:11:01.438
------------------------------
â€¢ [0.093 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:01.361
    Feb  9 01:11:01.361: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename namespaces 02/09/23 01:11:01.362
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:01.38
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:01.384
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should patch a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:268
    STEP: creating a Namespace 02/09/23 01:11:01.389
    STEP: patching the Namespace 02/09/23 01:11:01.408
    STEP: get the Namespace and ensuring it has the label 02/09/23 01:11:01.415
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:01.420: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-8700" for this suite. 02/09/23 01:11:01.428
    STEP: Destroying namespace "nspatchtest-d7cd13c0-c2f6-4870-9954-f31bcad674b3-969" for this suite. 02/09/23 01:11:01.438
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:01.456
Feb  9 01:11:01.456: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename deployment 02/09/23 01:11:01.457
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:01.476
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:01.481
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122
Feb  9 01:11:01.500: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Feb  9 01:11:06.507: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 02/09/23 01:11:06.507
Feb  9 01:11:06.507: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up 02/09/23 01:11:06.521
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Feb  9 01:11:06.541: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-4603  55589ab9-4860-42e3-83e6-8d78b09b6b69 23695 1 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] [{e2e.test Update apps/v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003166588 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

Feb  9 01:11:06.547: INFO: New ReplicaSet "test-cleanup-deployment-7698ff6f6b" of Deployment "test-cleanup-deployment":
&ReplicaSet{ObjectMeta:{test-cleanup-deployment-7698ff6f6b  deployment-4603  3312979c-efc0-429e-93b2-1acbe1c58471 23697 1 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment 55589ab9-4860-42e3-83e6-8d78b09b6b69 0xc004f027c7 0xc004f027c8}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"55589ab9-4860-42e3-83e6-8d78b09b6b69\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 7698ff6f6b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004f02858 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:0,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Feb  9 01:11:06.547: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
Feb  9 01:11:06.548: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-4603  d6c7de90-79ff-4c69-971c-54faee3386f7 23696 1 2023-02-09 01:11:01 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment 55589ab9-4860-42e3-83e6-8d78b09b6b69 0xc004f02697 0xc004f02698}] [] [{e2e.test Update apps/v1 2023-02-09 01:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:11:02 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"55589ab9-4860-42e3-83e6-8d78b09b6b69\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc004f02758 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Feb  9 01:11:06.553: INFO: Pod "test-cleanup-controller-4x47k" is available:
&Pod{ObjectMeta:{test-cleanup-controller-4x47k test-cleanup-controller- deployment-4603  e9bda034-70ff-4357-970d-1ceb15a44580 23670 0 2023-02-09 01:11:01 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 ReplicaSet test-cleanup-controller d6c7de90-79ff-4c69-971c-54faee3386f7 0xc004f02e07 0xc004f02e08}] [] [{kube-controller-manager Update v1 2023-02-09 01:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d6c7de90-79ff-4c69-971c-54faee3386f7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:11:02 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.137\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-blc9x,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-blc9x,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:11:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:11:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:11:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:11:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.137,StartTime:2023-02-09 01:11:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:11:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://aa16e0e7ba84fdaefe8b95e3021e30e75e1b9598f57de54f10a391bd1e9f31ae,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.137,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:11:06.554: INFO: Pod "test-cleanup-deployment-7698ff6f6b-f44mr" is not available:
&Pod{ObjectMeta:{test-cleanup-deployment-7698ff6f6b-f44mr test-cleanup-deployment-7698ff6f6b- deployment-4603  6ddf2671-567f-49fe-b211-80a9730ada6e 23702 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[] [{apps/v1 ReplicaSet test-cleanup-deployment-7698ff6f6b 3312979c-efc0-429e-93b2-1acbe1c58471 0xc004f02ff7 0xc004f02ff8}] [] [{kube-controller-manager Update v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3312979c-efc0-429e-93b2-1acbe1c58471\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8vmhc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8vmhc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:06.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-4603" for this suite. 02/09/23 01:11:06.563
------------------------------
â€¢ [SLOW TEST] [5.117 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:01.456
    Feb  9 01:11:01.456: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename deployment 02/09/23 01:11:01.457
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:01.476
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:01.481
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should delete old replica sets [Conformance]
      test/e2e/apps/deployment.go:122
    Feb  9 01:11:01.500: INFO: Pod name cleanup-pod: Found 0 pods out of 1
    Feb  9 01:11:06.507: INFO: Pod name cleanup-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 02/09/23 01:11:06.507
    Feb  9 01:11:06.507: INFO: Creating deployment test-cleanup-deployment
    STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up 02/09/23 01:11:06.521
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Feb  9 01:11:06.541: INFO: Deployment "test-cleanup-deployment":
    &Deployment{ObjectMeta:{test-cleanup-deployment  deployment-4603  55589ab9-4860-42e3-83e6-8d78b09b6b69 23695 1 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] [{e2e.test Update apps/v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003166588 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

    Feb  9 01:11:06.547: INFO: New ReplicaSet "test-cleanup-deployment-7698ff6f6b" of Deployment "test-cleanup-deployment":
    &ReplicaSet{ObjectMeta:{test-cleanup-deployment-7698ff6f6b  deployment-4603  3312979c-efc0-429e-93b2-1acbe1c58471 23697 1 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment 55589ab9-4860-42e3-83e6-8d78b09b6b69 0xc004f027c7 0xc004f027c8}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"55589ab9-4860-42e3-83e6-8d78b09b6b69\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 7698ff6f6b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004f02858 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:0,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Feb  9 01:11:06.547: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
    Feb  9 01:11:06.548: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-4603  d6c7de90-79ff-4c69-971c-54faee3386f7 23696 1 2023-02-09 01:11:01 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment 55589ab9-4860-42e3-83e6-8d78b09b6b69 0xc004f02697 0xc004f02698}] [] [{e2e.test Update apps/v1 2023-02-09 01:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:11:02 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"55589ab9-4860-42e3-83e6-8d78b09b6b69\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc004f02758 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Feb  9 01:11:06.553: INFO: Pod "test-cleanup-controller-4x47k" is available:
    &Pod{ObjectMeta:{test-cleanup-controller-4x47k test-cleanup-controller- deployment-4603  e9bda034-70ff-4357-970d-1ceb15a44580 23670 0 2023-02-09 01:11:01 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 ReplicaSet test-cleanup-controller d6c7de90-79ff-4c69-971c-54faee3386f7 0xc004f02e07 0xc004f02e08}] [] [{kube-controller-manager Update v1 2023-02-09 01:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d6c7de90-79ff-4c69-971c-54faee3386f7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:11:02 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.137\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-blc9x,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-blc9x,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:11:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:11:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:11:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:11:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.137,StartTime:2023-02-09 01:11:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:11:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://aa16e0e7ba84fdaefe8b95e3021e30e75e1b9598f57de54f10a391bd1e9f31ae,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.137,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:11:06.554: INFO: Pod "test-cleanup-deployment-7698ff6f6b-f44mr" is not available:
    &Pod{ObjectMeta:{test-cleanup-deployment-7698ff6f6b-f44mr test-cleanup-deployment-7698ff6f6b- deployment-4603  6ddf2671-567f-49fe-b211-80a9730ada6e 23702 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[] [{apps/v1 ReplicaSet test-cleanup-deployment-7698ff6f6b 3312979c-efc0-429e-93b2-1acbe1c58471 0xc004f02ff7 0xc004f02ff8}] [] [{kube-controller-manager Update v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3312979c-efc0-429e-93b2-1acbe1c58471\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8vmhc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8vmhc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:06.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-4603" for this suite. 02/09/23 01:11:06.563
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:06.575
Feb  9 01:11:06.575: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename watch 02/09/23 01:11:06.576
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:06.603
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:06.608
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257
STEP: creating a watch on configmaps with a certain label 02/09/23 01:11:06.613
STEP: creating a new configmap 02/09/23 01:11:06.616
STEP: modifying the configmap once 02/09/23 01:11:06.621
STEP: changing the label value of the configmap 02/09/23 01:11:06.633
STEP: Expecting to observe a delete notification for the watched object 02/09/23 01:11:06.644
Feb  9 01:11:06.644: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3364  fd6e0746-2d93-44ce-a87a-a017176d80c8 23717 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Feb  9 01:11:06.645: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3364  fd6e0746-2d93-44ce-a87a-a017176d80c8 23718 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Feb  9 01:11:06.645: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3364  fd6e0746-2d93-44ce-a87a-a017176d80c8 23719 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time 02/09/23 01:11:06.645
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements 02/09/23 01:11:06.656
STEP: changing the label value of the configmap back 02/09/23 01:11:16.657
STEP: modifying the configmap a third time 02/09/23 01:11:16.67
STEP: deleting the configmap 02/09/23 01:11:16.681
STEP: Expecting to observe an add notification for the watched object when the label value was restored 02/09/23 01:11:16.69
Feb  9 01:11:16.690: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3364  fd6e0746-2d93-44ce-a87a-a017176d80c8 23799 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-02-09 01:11:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Feb  9 01:11:16.690: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3364  fd6e0746-2d93-44ce-a87a-a017176d80c8 23800 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-02-09 01:11:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Feb  9 01:11:16.691: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3364  fd6e0746-2d93-44ce-a87a-a017176d80c8 23801 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-02-09 01:11:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:16.691: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-3364" for this suite. 02/09/23 01:11:16.699
------------------------------
â€¢ [SLOW TEST] [10.133 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:06.575
    Feb  9 01:11:06.575: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename watch 02/09/23 01:11:06.576
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:06.603
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:06.608
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
      test/e2e/apimachinery/watch.go:257
    STEP: creating a watch on configmaps with a certain label 02/09/23 01:11:06.613
    STEP: creating a new configmap 02/09/23 01:11:06.616
    STEP: modifying the configmap once 02/09/23 01:11:06.621
    STEP: changing the label value of the configmap 02/09/23 01:11:06.633
    STEP: Expecting to observe a delete notification for the watched object 02/09/23 01:11:06.644
    Feb  9 01:11:06.644: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3364  fd6e0746-2d93-44ce-a87a-a017176d80c8 23717 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Feb  9 01:11:06.645: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3364  fd6e0746-2d93-44ce-a87a-a017176d80c8 23718 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    Feb  9 01:11:06.645: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3364  fd6e0746-2d93-44ce-a87a-a017176d80c8 23719 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-02-09 01:11:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying the configmap a second time 02/09/23 01:11:06.645
    STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements 02/09/23 01:11:06.656
    STEP: changing the label value of the configmap back 02/09/23 01:11:16.657
    STEP: modifying the configmap a third time 02/09/23 01:11:16.67
    STEP: deleting the configmap 02/09/23 01:11:16.681
    STEP: Expecting to observe an add notification for the watched object when the label value was restored 02/09/23 01:11:16.69
    Feb  9 01:11:16.690: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3364  fd6e0746-2d93-44ce-a87a-a017176d80c8 23799 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-02-09 01:11:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Feb  9 01:11:16.690: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3364  fd6e0746-2d93-44ce-a87a-a017176d80c8 23800 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-02-09 01:11:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
    Feb  9 01:11:16.691: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3364  fd6e0746-2d93-44ce-a87a-a017176d80c8 23801 0 2023-02-09 01:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-02-09 01:11:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:16.691: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-3364" for this suite. 02/09/23 01:11:16.699
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:195
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:16.709
Feb  9 01:11:16.709: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-runtime 02/09/23 01:11:16.71
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:16.729
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:16.733
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:195
STEP: create the container 02/09/23 01:11:16.737
STEP: wait for the container to reach Succeeded 02/09/23 01:11:16.751
STEP: get the container status 02/09/23 01:11:20.785
STEP: the container should be terminated 02/09/23 01:11:20.79
STEP: the termination message should be set 02/09/23 01:11:20.791
Feb  9 01:11:20.791: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container 02/09/23 01:11:20.791
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:20.811: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-8152" for this suite. 02/09/23 01:11:20.82
------------------------------
â€¢ [4.121 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:195

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:16.709
    Feb  9 01:11:16.709: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-runtime 02/09/23 01:11:16.71
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:16.729
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:16.733
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:195
    STEP: create the container 02/09/23 01:11:16.737
    STEP: wait for the container to reach Succeeded 02/09/23 01:11:16.751
    STEP: get the container status 02/09/23 01:11:20.785
    STEP: the container should be terminated 02/09/23 01:11:20.79
    STEP: the termination message should be set 02/09/23 01:11:20.791
    Feb  9 01:11:20.791: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
    STEP: delete the container 02/09/23 01:11:20.791
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:20.811: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-8152" for this suite. 02/09/23 01:11:20.82
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:20.837
Feb  9 01:11:20.837: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename containers 02/09/23 01:11:20.837
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:20.858
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:20.862
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87
STEP: Creating a pod to test override all 02/09/23 01:11:20.866
Feb  9 01:11:20.881: INFO: Waiting up to 5m0s for pod "client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251" in namespace "containers-6563" to be "Succeeded or Failed"
Feb  9 01:11:20.886: INFO: Pod "client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251": Phase="Pending", Reason="", readiness=false. Elapsed: 5.481929ms
Feb  9 01:11:22.893: INFO: Pod "client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012111833s
Feb  9 01:11:24.893: INFO: Pod "client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012186303s
STEP: Saw pod success 02/09/23 01:11:24.893
Feb  9 01:11:24.893: INFO: Pod "client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251" satisfied condition "Succeeded or Failed"
Feb  9 01:11:24.900: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251 container agnhost-container: <nil>
STEP: delete the pod 02/09/23 01:11:24.912
Feb  9 01:11:24.926: INFO: Waiting for pod client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251 to disappear
Feb  9 01:11:24.932: INFO: Pod client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:24.932: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-6563" for this suite. 02/09/23 01:11:24.94
------------------------------
â€¢ [4.112 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:20.837
    Feb  9 01:11:20.837: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename containers 02/09/23 01:11:20.837
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:20.858
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:20.862
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:87
    STEP: Creating a pod to test override all 02/09/23 01:11:20.866
    Feb  9 01:11:20.881: INFO: Waiting up to 5m0s for pod "client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251" in namespace "containers-6563" to be "Succeeded or Failed"
    Feb  9 01:11:20.886: INFO: Pod "client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251": Phase="Pending", Reason="", readiness=false. Elapsed: 5.481929ms
    Feb  9 01:11:22.893: INFO: Pod "client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012111833s
    Feb  9 01:11:24.893: INFO: Pod "client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012186303s
    STEP: Saw pod success 02/09/23 01:11:24.893
    Feb  9 01:11:24.893: INFO: Pod "client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251" satisfied condition "Succeeded or Failed"
    Feb  9 01:11:24.900: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251 container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 01:11:24.912
    Feb  9 01:11:24.926: INFO: Waiting for pod client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251 to disappear
    Feb  9 01:11:24.932: INFO: Pod client-containers-e7149953-ab1b-48e2-b551-59fa54a3c251 no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:24.932: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-6563" for this suite. 02/09/23 01:11:24.94
  << End Captured GinkgoWriter Output
------------------------------
[sig-instrumentation] Events
  should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57
[BeforeEach] [sig-instrumentation] Events
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:24.949
Feb  9 01:11:24.949: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename events 02/09/23 01:11:24.95
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:24.978
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:24.983
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57
STEP: creating a test event 02/09/23 01:11:24.987
STEP: listing all events in all namespaces 02/09/23 01:11:24.993
STEP: patching the test event 02/09/23 01:11:25.007
STEP: fetching the test event 02/09/23 01:11:25.016
STEP: updating the test event 02/09/23 01:11:25.021
STEP: getting the test event 02/09/23 01:11:25.036
STEP: deleting the test event 02/09/23 01:11:25.041
STEP: listing all events in all namespaces 02/09/23 01:11:25.054
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:25.066: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events
  tear down framework | framework.go:193
STEP: Destroying namespace "events-7989" for this suite. 02/09/23 01:11:25.074
------------------------------
â€¢ [0.134 seconds]
[sig-instrumentation] Events
test/e2e/instrumentation/common/framework.go:23
  should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:24.949
    Feb  9 01:11:24.949: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename events 02/09/23 01:11:24.95
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:24.978
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:24.983
    [BeforeEach] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of an event [Conformance]
      test/e2e/instrumentation/core_events.go:57
    STEP: creating a test event 02/09/23 01:11:24.987
    STEP: listing all events in all namespaces 02/09/23 01:11:24.993
    STEP: patching the test event 02/09/23 01:11:25.007
    STEP: fetching the test event 02/09/23 01:11:25.016
    STEP: updating the test event 02/09/23 01:11:25.021
    STEP: getting the test event 02/09/23 01:11:25.036
    STEP: deleting the test event 02/09/23 01:11:25.041
    STEP: listing all events in all namespaces 02/09/23 01:11:25.054
    [AfterEach] [sig-instrumentation] Events
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:25.066: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-7989" for this suite. 02/09/23 01:11:25.074
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:25.085
Feb  9 01:11:25.085: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename disruption 02/09/23 01:11:25.086
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:25.118
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:25.131
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141
STEP: Waiting for the pdb to be processed 02/09/23 01:11:25.144
STEP: Waiting for all pods to be running 02/09/23 01:11:27.185
Feb  9 01:11:27.190: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:29.202: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-6341" for this suite. 02/09/23 01:11:29.21
------------------------------
â€¢ [4.135 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:25.085
    Feb  9 01:11:25.085: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename disruption 02/09/23 01:11:25.086
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:25.118
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:25.131
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should observe PodDisruptionBudget status updated [Conformance]
      test/e2e/apps/disruption.go:141
    STEP: Waiting for the pdb to be processed 02/09/23 01:11:25.144
    STEP: Waiting for all pods to be running 02/09/23 01:11:27.185
    Feb  9 01:11:27.190: INFO: running pods: 0 < 3
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:29.202: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-6341" for this suite. 02/09/23 01:11:29.21
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] RuntimeClass
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:29.22
Feb  9 01:11:29.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename runtimeclass 02/09/23 01:11:29.221
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:29.241
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:29.245
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:29.260: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-1702" for this suite. 02/09/23 01:11:29.267
------------------------------
â€¢ [0.057 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:29.22
    Feb  9 01:11:29.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename runtimeclass 02/09/23 01:11:29.221
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:29.241
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:29.245
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:55
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:29.260: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-1702" for this suite. 02/09/23 01:11:29.267
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:528
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:29.279
Feb  9 01:11:29.279: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename security-context-test 02/09/23 01:11:29.279
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:29.299
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:29.303
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:528
Feb  9 01:11:29.319: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-9399498b-ee57-42e9-9bc5-246d38f90d58" in namespace "security-context-test-8858" to be "Succeeded or Failed"
Feb  9 01:11:29.325: INFO: Pod "busybox-privileged-false-9399498b-ee57-42e9-9bc5-246d38f90d58": Phase="Pending", Reason="", readiness=false. Elapsed: 6.047232ms
Feb  9 01:11:31.331: INFO: Pod "busybox-privileged-false-9399498b-ee57-42e9-9bc5-246d38f90d58": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012334251s
Feb  9 01:11:33.333: INFO: Pod "busybox-privileged-false-9399498b-ee57-42e9-9bc5-246d38f90d58": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013582643s
Feb  9 01:11:33.333: INFO: Pod "busybox-privileged-false-9399498b-ee57-42e9-9bc5-246d38f90d58" satisfied condition "Succeeded or Failed"
Feb  9 01:11:33.345: INFO: Got logs for pod "busybox-privileged-false-9399498b-ee57-42e9-9bc5-246d38f90d58": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:33.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-8858" for this suite. 02/09/23 01:11:33.354
------------------------------
â€¢ [4.084 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with privileged
  test/e2e/common/node/security_context.go:491
    should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:528

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:29.279
    Feb  9 01:11:29.279: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename security-context-test 02/09/23 01:11:29.279
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:29.299
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:29.303
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:528
    Feb  9 01:11:29.319: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-9399498b-ee57-42e9-9bc5-246d38f90d58" in namespace "security-context-test-8858" to be "Succeeded or Failed"
    Feb  9 01:11:29.325: INFO: Pod "busybox-privileged-false-9399498b-ee57-42e9-9bc5-246d38f90d58": Phase="Pending", Reason="", readiness=false. Elapsed: 6.047232ms
    Feb  9 01:11:31.331: INFO: Pod "busybox-privileged-false-9399498b-ee57-42e9-9bc5-246d38f90d58": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012334251s
    Feb  9 01:11:33.333: INFO: Pod "busybox-privileged-false-9399498b-ee57-42e9-9bc5-246d38f90d58": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013582643s
    Feb  9 01:11:33.333: INFO: Pod "busybox-privileged-false-9399498b-ee57-42e9-9bc5-246d38f90d58" satisfied condition "Succeeded or Failed"
    Feb  9 01:11:33.345: INFO: Got logs for pod "busybox-privileged-false-9399498b-ee57-42e9-9bc5-246d38f90d58": "ip: RTNETLINK answers: Operation not permitted\n"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:33.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-8858" for this suite. 02/09/23 01:11:33.354
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:33.365
Feb  9 01:11:33.365: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename resourcequota 02/09/23 01:11:33.366
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:33.384
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:33.389
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160
STEP: Discovering how many secrets are in namespace by default 02/09/23 01:11:33.393
STEP: Counting existing ResourceQuota 02/09/23 01:11:38.4
STEP: Creating a ResourceQuota 02/09/23 01:11:43.408
STEP: Ensuring resource quota status is calculated 02/09/23 01:11:43.415
STEP: Creating a Secret 02/09/23 01:11:45.421
STEP: Ensuring resource quota status captures secret creation 02/09/23 01:11:45.435
STEP: Deleting a secret 02/09/23 01:11:47.442
STEP: Ensuring resource quota status released usage 02/09/23 01:11:47.452
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:49.459: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-8490" for this suite. 02/09/23 01:11:49.468
------------------------------
â€¢ [SLOW TEST] [16.114 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:33.365
    Feb  9 01:11:33.365: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename resourcequota 02/09/23 01:11:33.366
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:33.384
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:33.389
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a secret. [Conformance]
      test/e2e/apimachinery/resource_quota.go:160
    STEP: Discovering how many secrets are in namespace by default 02/09/23 01:11:33.393
    STEP: Counting existing ResourceQuota 02/09/23 01:11:38.4
    STEP: Creating a ResourceQuota 02/09/23 01:11:43.408
    STEP: Ensuring resource quota status is calculated 02/09/23 01:11:43.415
    STEP: Creating a Secret 02/09/23 01:11:45.421
    STEP: Ensuring resource quota status captures secret creation 02/09/23 01:11:45.435
    STEP: Deleting a secret 02/09/23 01:11:47.442
    STEP: Ensuring resource quota status released usage 02/09/23 01:11:47.452
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:49.459: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-8490" for this suite. 02/09/23 01:11:49.468
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin]
  should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:49.48
Feb  9 01:11:49.480: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename certificates 02/09/23 01:11:49.481
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:49.5
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:49.504
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200
STEP: getting /apis 02/09/23 01:11:50.238
STEP: getting /apis/certificates.k8s.io 02/09/23 01:11:50.242
STEP: getting /apis/certificates.k8s.io/v1 02/09/23 01:11:50.244
STEP: creating 02/09/23 01:11:50.247
STEP: getting 02/09/23 01:11:50.275
STEP: listing 02/09/23 01:11:50.281
STEP: watching 02/09/23 01:11:50.287
Feb  9 01:11:50.287: INFO: starting watch
STEP: patching 02/09/23 01:11:50.289
STEP: updating 02/09/23 01:11:50.297
Feb  9 01:11:50.303: INFO: waiting for watch events with expected annotations
Feb  9 01:11:50.303: INFO: saw patched and updated annotations
STEP: getting /approval 02/09/23 01:11:50.303
STEP: patching /approval 02/09/23 01:11:50.309
STEP: updating /approval 02/09/23 01:11:50.316
STEP: getting /status 02/09/23 01:11:50.323
STEP: patching /status 02/09/23 01:11:50.328
STEP: updating /status 02/09/23 01:11:50.354
STEP: deleting 02/09/23 01:11:50.363
STEP: deleting a collection 02/09/23 01:11:50.385
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:50.411: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "certificates-4549" for this suite. 02/09/23 01:11:50.421
------------------------------
â€¢ [0.952 seconds]
[sig-auth] Certificates API [Privileged:ClusterAdmin]
test/e2e/auth/framework.go:23
  should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:49.48
    Feb  9 01:11:49.480: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename certificates 02/09/23 01:11:49.481
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:49.5
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:49.504
    [BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CSR API operations [Conformance]
      test/e2e/auth/certificates.go:200
    STEP: getting /apis 02/09/23 01:11:50.238
    STEP: getting /apis/certificates.k8s.io 02/09/23 01:11:50.242
    STEP: getting /apis/certificates.k8s.io/v1 02/09/23 01:11:50.244
    STEP: creating 02/09/23 01:11:50.247
    STEP: getting 02/09/23 01:11:50.275
    STEP: listing 02/09/23 01:11:50.281
    STEP: watching 02/09/23 01:11:50.287
    Feb  9 01:11:50.287: INFO: starting watch
    STEP: patching 02/09/23 01:11:50.289
    STEP: updating 02/09/23 01:11:50.297
    Feb  9 01:11:50.303: INFO: waiting for watch events with expected annotations
    Feb  9 01:11:50.303: INFO: saw patched and updated annotations
    STEP: getting /approval 02/09/23 01:11:50.303
    STEP: patching /approval 02/09/23 01:11:50.309
    STEP: updating /approval 02/09/23 01:11:50.316
    STEP: getting /status 02/09/23 01:11:50.323
    STEP: patching /status 02/09/23 01:11:50.328
    STEP: updating /status 02/09/23 01:11:50.354
    STEP: deleting 02/09/23 01:11:50.363
    STEP: deleting a collection 02/09/23 01:11:50.385
    [AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:50.411: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "certificates-4549" for this suite. 02/09/23 01:11:50.421
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:50.433
Feb  9 01:11:50.433: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename namespaces 02/09/23 01:11:50.433
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:50.455
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:50.459
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366
STEP: Updating Namespace "namespaces-1362" 02/09/23 01:11:50.463
Feb  9 01:11:50.484: INFO: Namespace "namespaces-1362" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"a104d546-0228-4a05-90e1-297ab7feb3d9", "kubernetes.io/metadata.name":"namespaces-1362", "namespaces-1362":"updated", "pod-security.kubernetes.io/enforce":"baseline"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:50.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-1362" for this suite. 02/09/23 01:11:50.495
------------------------------
â€¢ [0.072 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:50.433
    Feb  9 01:11:50.433: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename namespaces 02/09/23 01:11:50.433
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:50.455
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:50.459
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply an update to a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:366
    STEP: Updating Namespace "namespaces-1362" 02/09/23 01:11:50.463
    Feb  9 01:11:50.484: INFO: Namespace "namespaces-1362" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"a104d546-0228-4a05-90e1-297ab7feb3d9", "kubernetes.io/metadata.name":"namespaces-1362", "namespaces-1362":"updated", "pod-security.kubernetes.io/enforce":"baseline"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:50.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-1362" for this suite. 02/09/23 01:11:50.495
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:609
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:50.508
Feb  9 01:11:50.508: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename security-context-test 02/09/23 01:11:50.509
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:50.527
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:50.532
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:609
Feb  9 01:11:50.552: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-8d0c7368-b74c-4ec6-b8e6-4b6377828ccc" in namespace "security-context-test-450" to be "Succeeded or Failed"
Feb  9 01:11:50.557: INFO: Pod "alpine-nnp-false-8d0c7368-b74c-4ec6-b8e6-4b6377828ccc": Phase="Pending", Reason="", readiness=false. Elapsed: 5.41833ms
Feb  9 01:11:52.564: INFO: Pod "alpine-nnp-false-8d0c7368-b74c-4ec6-b8e6-4b6377828ccc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012340108s
Feb  9 01:11:54.564: INFO: Pod "alpine-nnp-false-8d0c7368-b74c-4ec6-b8e6-4b6377828ccc": Phase="Pending", Reason="", readiness=false. Elapsed: 4.012509896s
Feb  9 01:11:56.565: INFO: Pod "alpine-nnp-false-8d0c7368-b74c-4ec6-b8e6-4b6377828ccc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.012950385s
Feb  9 01:11:56.565: INFO: Pod "alpine-nnp-false-8d0c7368-b74c-4ec6-b8e6-4b6377828ccc" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Feb  9 01:11:56.579: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-450" for this suite. 02/09/23 01:11:56.588
------------------------------
â€¢ [SLOW TEST] [6.089 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:555
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:609

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:50.508
    Feb  9 01:11:50.508: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename security-context-test 02/09/23 01:11:50.509
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:50.527
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:50.532
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:609
    Feb  9 01:11:50.552: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-8d0c7368-b74c-4ec6-b8e6-4b6377828ccc" in namespace "security-context-test-450" to be "Succeeded or Failed"
    Feb  9 01:11:50.557: INFO: Pod "alpine-nnp-false-8d0c7368-b74c-4ec6-b8e6-4b6377828ccc": Phase="Pending", Reason="", readiness=false. Elapsed: 5.41833ms
    Feb  9 01:11:52.564: INFO: Pod "alpine-nnp-false-8d0c7368-b74c-4ec6-b8e6-4b6377828ccc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012340108s
    Feb  9 01:11:54.564: INFO: Pod "alpine-nnp-false-8d0c7368-b74c-4ec6-b8e6-4b6377828ccc": Phase="Pending", Reason="", readiness=false. Elapsed: 4.012509896s
    Feb  9 01:11:56.565: INFO: Pod "alpine-nnp-false-8d0c7368-b74c-4ec6-b8e6-4b6377828ccc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.012950385s
    Feb  9 01:11:56.565: INFO: Pod "alpine-nnp-false-8d0c7368-b74c-4ec6-b8e6-4b6377828ccc" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:11:56.579: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-450" for this suite. 02/09/23 01:11:56.588
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:11:56.598
Feb  9 01:11:56.598: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename replicaset 02/09/23 01:11:56.599
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:56.618
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:56.623
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111
Feb  9 01:11:56.627: INFO: Creating ReplicaSet my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688
Feb  9 01:11:56.641: INFO: Pod name my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688: Found 0 pods out of 1
Feb  9 01:12:01.649: INFO: Pod name my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688: Found 1 pods out of 1
Feb  9 01:12:01.649: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688" is running
Feb  9 01:12:01.649: INFO: Waiting up to 5m0s for pod "my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688-zc5hg" in namespace "replicaset-2760" to be "running"
Feb  9 01:12:01.659: INFO: Pod "my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688-zc5hg": Phase="Running", Reason="", readiness=true. Elapsed: 10.503555ms
Feb  9 01:12:01.659: INFO: Pod "my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688-zc5hg" satisfied condition "running"
Feb  9 01:12:01.659: INFO: Pod "my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688-zc5hg" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:11:56 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:11:57 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:11:57 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:11:56 +0000 UTC Reason: Message:}])
Feb  9 01:12:01.659: INFO: Trying to dial the pod
Feb  9 01:12:06.684: INFO: Controller my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688: Got expected result from replica 1 [my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688-zc5hg]: "my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688-zc5hg", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Feb  9 01:12:06.684: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-2760" for this suite. 02/09/23 01:12:06.695
------------------------------
â€¢ [SLOW TEST] [10.109 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:11:56.598
    Feb  9 01:11:56.598: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename replicaset 02/09/23 01:11:56.599
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:11:56.618
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:11:56.623
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should serve a basic image on each replica with a public image  [Conformance]
      test/e2e/apps/replica_set.go:111
    Feb  9 01:11:56.627: INFO: Creating ReplicaSet my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688
    Feb  9 01:11:56.641: INFO: Pod name my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688: Found 0 pods out of 1
    Feb  9 01:12:01.649: INFO: Pod name my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688: Found 1 pods out of 1
    Feb  9 01:12:01.649: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688" is running
    Feb  9 01:12:01.649: INFO: Waiting up to 5m0s for pod "my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688-zc5hg" in namespace "replicaset-2760" to be "running"
    Feb  9 01:12:01.659: INFO: Pod "my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688-zc5hg": Phase="Running", Reason="", readiness=true. Elapsed: 10.503555ms
    Feb  9 01:12:01.659: INFO: Pod "my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688-zc5hg" satisfied condition "running"
    Feb  9 01:12:01.659: INFO: Pod "my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688-zc5hg" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:11:56 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:11:57 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:11:57 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:11:56 +0000 UTC Reason: Message:}])
    Feb  9 01:12:01.659: INFO: Trying to dial the pod
    Feb  9 01:12:06.684: INFO: Controller my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688: Got expected result from replica 1 [my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688-zc5hg]: "my-hostname-basic-82a9d388-cb3e-4a44-8a0e-e6fb7a373688-zc5hg", 1 of 1 required successes so far
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:12:06.684: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-2760" for this suite. 02/09/23 01:12:06.695
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:248
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:12:06.708
Feb  9 01:12:06.708: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-runtime 02/09/23 01:12:06.709
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:06.73
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:06.734
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:248
STEP: create the container 02/09/23 01:12:06.739
STEP: wait for the container to reach Succeeded 02/09/23 01:12:06.751
STEP: get the container status 02/09/23 01:12:10.783
STEP: the container should be terminated 02/09/23 01:12:10.789
STEP: the termination message should be set 02/09/23 01:12:10.789
Feb  9 01:12:10.790: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container 02/09/23 01:12:10.79
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Feb  9 01:12:10.813: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-6556" for this suite. 02/09/23 01:12:10.822
------------------------------
â€¢ [4.126 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:248

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:12:06.708
    Feb  9 01:12:06.708: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-runtime 02/09/23 01:12:06.709
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:06.73
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:06.734
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:248
    STEP: create the container 02/09/23 01:12:06.739
    STEP: wait for the container to reach Succeeded 02/09/23 01:12:06.751
    STEP: get the container status 02/09/23 01:12:10.783
    STEP: the container should be terminated 02/09/23 01:12:10.789
    STEP: the termination message should be set 02/09/23 01:12:10.789
    Feb  9 01:12:10.790: INFO: Expected: &{OK} to match Container's Termination Message: OK --
    STEP: delete the container 02/09/23 01:12:10.79
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:12:10.813: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-6556" for this suite. 02/09/23 01:12:10.822
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-network] Services
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:12:10.834
Feb  9 01:12:10.834: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:12:10.835
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:10.854
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:10.858
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244
STEP: creating an Endpoint 02/09/23 01:12:10.869
STEP: waiting for available Endpoint 02/09/23 01:12:10.875
STEP: listing all Endpoints 02/09/23 01:12:10.878
STEP: updating the Endpoint 02/09/23 01:12:10.883
STEP: fetching the Endpoint 02/09/23 01:12:10.892
STEP: patching the Endpoint 02/09/23 01:12:10.9
STEP: fetching the Endpoint 02/09/23 01:12:10.911
STEP: deleting the Endpoint by Collection 02/09/23 01:12:10.916
STEP: waiting for Endpoint deletion 02/09/23 01:12:10.929
STEP: fetching the Endpoint 02/09/23 01:12:10.931
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:12:10.937: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-306" for this suite. 02/09/23 01:12:10.945
------------------------------
â€¢ [0.122 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:12:10.834
    Feb  9 01:12:10.834: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:12:10.835
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:10.854
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:10.858
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should test the lifecycle of an Endpoint [Conformance]
      test/e2e/network/service.go:3244
    STEP: creating an Endpoint 02/09/23 01:12:10.869
    STEP: waiting for available Endpoint 02/09/23 01:12:10.875
    STEP: listing all Endpoints 02/09/23 01:12:10.878
    STEP: updating the Endpoint 02/09/23 01:12:10.883
    STEP: fetching the Endpoint 02/09/23 01:12:10.892
    STEP: patching the Endpoint 02/09/23 01:12:10.9
    STEP: fetching the Endpoint 02/09/23 01:12:10.911
    STEP: deleting the Endpoint by Collection 02/09/23 01:12:10.916
    STEP: waiting for Endpoint deletion 02/09/23 01:12:10.929
    STEP: fetching the Endpoint 02/09/23 01:12:10.931
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:12:10.937: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-306" for this suite. 02/09/23 01:12:10.945
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/kubectl/kubectl.go:1276
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:12:10.958
Feb  9 01:12:10.959: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:12:10.959
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:10.978
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:10.982
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/kubectl/kubectl.go:1276
Feb  9 01:12:10.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 create -f -'
Feb  9 01:12:11.154: INFO: stderr: ""
Feb  9 01:12:11.154: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Feb  9 01:12:11.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 create -f -'
Feb  9 01:12:11.340: INFO: stderr: ""
Feb  9 01:12:11.340: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 02/09/23 01:12:11.34
Feb  9 01:12:12.348: INFO: Selector matched 1 pods for map[app:agnhost]
Feb  9 01:12:12.348: INFO: Found 1 / 1
Feb  9 01:12:12.348: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Feb  9 01:12:12.353: INFO: Selector matched 1 pods for map[app:agnhost]
Feb  9 01:12:12.353: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Feb  9 01:12:12.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 describe pod agnhost-primary-sn574'
Feb  9 01:12:12.430: INFO: stderr: ""
Feb  9 01:12:12.430: INFO: stdout: "Name:             agnhost-primary-sn574\nNamespace:        kubectl-1116\nPriority:         0\nService Account:  default\nNode:             aks-nodes-15799032-vmss000000/10.224.0.4\nStart Time:       Thu, 09 Feb 2023 01:12:11 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.0.146\nIPs:\n  IP:           10.244.0.146\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://f2b1855203d3f7a93315efd2da86708efc1b11c5bccec3ab310eec91f55414f9\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.43\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 09 Feb 2023 01:12:11 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-w86fx (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-w86fx:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-1116/agnhost-primary-sn574 to aks-nodes-15799032-vmss000000\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.43\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
Feb  9 01:12:12.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 describe rc agnhost-primary'
Feb  9 01:12:12.531: INFO: stderr: ""
Feb  9 01:12:12.531: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1116\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.43\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-sn574\n"
Feb  9 01:12:12.531: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 describe service agnhost-primary'
Feb  9 01:12:12.614: INFO: stderr: ""
Feb  9 01:12:12.614: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-1116\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.0.173.76\nIPs:               10.0.173.76\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.0.146:6379\nSession Affinity:  None\nEvents:            <none>\n"
Feb  9 01:12:12.622: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 describe node aks-nodes-15799032-vmss000000'
Feb  9 01:12:12.743: INFO: stderr: ""
Feb  9 01:12:12.743: INFO: stdout: "Name:               aks-nodes-15799032-vmss000000\nRoles:              agent\nLabels:             agentpool=nodes\n                    beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.azure.com/agentpool=nodes\n                    kubernetes.azure.com/cluster=MC_yizhangebld68397905_testcluster_eastus\n                    kubernetes.azure.com/kubelet-identity-client-id=\n                    kubernetes.azure.com/mode=system\n                    kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-2023.01.26\n                    kubernetes.azure.com/os-sku=Ubuntu\n                    kubernetes.azure.com/role=agent\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=aks-nodes-15799032-vmss000000\n                    kubernetes.io/os=linux\n                    kubernetes.io/role=agent\n                    node-role.kubernetes.io/agent=\n                    node.kubernetes.io/instance-type=Standard_DS2_v2\n                    topology.disk.csi.azure.com/zone=\n                    topology.kubernetes.io/region=eastus\n                    topology.kubernetes.io/zone=0\nAnnotations:        csi.volume.kubernetes.io/nodeid: {\"disk.csi.azure.com\":\"aks-nodes-15799032-vmss000000\",\"file.csi.azure.com\":\"aks-nodes-15799032-vmss000000\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 09 Feb 2023 00:21:06 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  aks-nodes-15799032-vmss000000\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 09 Feb 2023 01:12:10 +0000\nConditions:\n  Type                          Status  LastHeartbeatTime                 LastTransitionTime                Reason                          Message\n  ----                          ------  -----------------                 ------------------                ------                          -------\n  ReadonlyFilesystem            False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   FilesystemIsNotReadOnly         Filesystem is not read-only\n  FrequentDockerRestart         False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   NoFrequentDockerRestart         docker is functioning properly\n  FrequentContainerdRestart     False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   NoFrequentContainerdRestart     containerd is functioning properly\n  KernelDeadlock                False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   KernelHasNoDeadlock             kernel has no deadlock\n  FrequentUnregisterNetDevice   False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   NoFrequentUnregisterNetDevice   node is functioning properly\n  VMEventScheduled              False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:24:06 +0000   NoVMEventScheduled              VM has no scheduled event\n  FrequentKubeletRestart        False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   NoFrequentKubeletRestart        kubelet is functioning properly\n  FilesystemCorruptionProblem   False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   FilesystemIsOK                  Filesystem is healthy\n  KubeletProblem                False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   KubeletIsUp                     kubelet service is up\n  ContainerRuntimeProblem       False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   ContainerRuntimeIsUp            container runtime service is up\n  NetworkUnavailable            False   Thu, 09 Feb 2023 00:22:07 +0000   Thu, 09 Feb 2023 00:22:07 +0000   RouteCreated                    RouteController created a route\n  MemoryPressure                False   Thu, 09 Feb 2023 01:10:54 +0000   Thu, 09 Feb 2023 00:21:06 +0000   KubeletHasSufficientMemory      kubelet has sufficient memory available\n  DiskPressure                  False   Thu, 09 Feb 2023 01:10:54 +0000   Thu, 09 Feb 2023 00:21:06 +0000   KubeletHasNoDiskPressure        kubelet has no disk pressure\n  PIDPressure                   False   Thu, 09 Feb 2023 01:10:54 +0000   Thu, 09 Feb 2023 00:21:06 +0000   KubeletHasSufficientPID         kubelet has sufficient PID available\n  Ready                         True    Thu, 09 Feb 2023 01:10:54 +0000   Thu, 09 Feb 2023 00:21:06 +0000   KubeletReady                    kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  10.224.0.4\n  Hostname:    aks-nodes-15799032-vmss000000\nCapacity:\n  cpu:                2\n  ephemeral-storage:  30298176Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7109920Ki\n  pods:               30\nAllocatable:\n  cpu:                1900m\n  ephemeral-storage:  27922798956\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             4664608Ki\n  pods:               30\nSystem Info:\n  Machine ID:                 20bff917c0b3491cae3a6b5455b1f398\n  System UUID:                670de17d-bd2d-4b04-be12-f6d74eb24b14\n  Boot ID:                    b46bbed1-a947-4b9d-9648-9b17feefdfaa\n  Kernel Version:             5.15.0-1031-azure\n  OS Image:                   Ubuntu 22.04.1 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.15+azure-1\n  Kubelet Version:            v1.26.0\n  Kube-Proxy Version:         v1.26.0\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nProviderID:                   azure:///subscriptions/feb5b150-60fe-4441-be73-8c02a524f55a/resourceGroups/mc_yizhangebld68397905_testcluster_eastus/providers/Microsoft.Compute/virtualMachineScaleSets/aks-nodes-15799032-vmss/virtualMachines/0\nNon-terminated Pods:          (7 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 azure-ip-masq-agent-26zqc                                  100m (5%)     500m (26%)  50Mi (1%)        250Mi (5%)     51m\n  kube-system                 cloud-node-manager-khkh5                                   50m (2%)      0 (0%)      50Mi (1%)        512Mi (11%)    51m\n  kube-system                 csi-azuredisk-node-f98f4                                   30m (1%)      0 (0%)      60Mi (1%)        400Mi (8%)     51m\n  kube-system                 csi-azurefile-node-kd8lb                                   30m (1%)      0 (0%)      60Mi (1%)        600Mi (13%)    51m\n  kube-system                 kube-proxy-hznqr                                           100m (5%)     0 (0%)      0 (0%)           0 (0%)         51m\n  kubectl-1116                agnhost-primary-sn574                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         1s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-ccznv    0 (0%)        0 (0%)      0 (0%)           0 (0%)         45m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                310m (16%)  500m (26%)\n  memory             220Mi (4%)  1762Mi (38%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From                                                        Message\n  ----     ------                   ----               ----                                                        -------\n  Normal   Starting                 49m                kube-proxy                                                  \n  Warning  InvalidDiskCapacity      51m                kubelet                                                     invalid capacity 0 on image filesystem\n  Normal   Starting                 51m                kubelet                                                     Starting kubelet.\n  Normal   NodeHasSufficientMemory  51m (x2 over 51m)  kubelet                                                     Node aks-nodes-15799032-vmss000000 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    51m (x2 over 51m)  kubelet                                                     Node aks-nodes-15799032-vmss000000 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     51m (x2 over 51m)  kubelet                                                     Node aks-nodes-15799032-vmss000000 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  51m                kubelet                                                     Updated Node Allocatable limit across pods\n  Normal   NodeReady                51m                kubelet                                                     Node aks-nodes-15799032-vmss000000 status is now: NodeReady\n  Normal   RegisteredNode           51m                node-controller                                             Node aks-nodes-15799032-vmss000000 event: Registered Node aks-nodes-15799032-vmss000000 in Controller\n  Normal   RegisteredNode           49m                node-controller                                             Node aks-nodes-15799032-vmss000000 event: Registered Node aks-nodes-15799032-vmss000000 in Controller\n  Warning  PreemptScheduled         48m                custom-scheduledevents-consolidated-preempt-plugin-monitor  IMDS query failed, exit code: 28\nConnection timed out after 24 seconds. Contact IMDSCoreDevsSG@microsoft.com\n  Normal  NoVMEventScheduled  48m  custom-scheduledevents-consolidated-condition-plugin-monitor  Node condition VMEventScheduled is now: Unknown, reason: NoVMEventScheduled\n  Normal  NoVMEventScheduled  48m  custom-scheduledevents-consolidated-condition-plugin-monitor  Node condition VMEventScheduled is now: False, reason: NoVMEventScheduled\n"
Feb  9 01:12:12.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 describe namespace kubectl-1116'
Feb  9 01:12:12.829: INFO: stderr: ""
Feb  9 01:12:12.829: INFO: stdout: "Name:         kubectl-1116\nLabels:       e2e-framework=kubectl\n              e2e-run=a104d546-0228-4a05-90e1-297ab7feb3d9\n              kubernetes.io/metadata.name=kubectl-1116\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:12:12.829: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1116" for this suite. 02/09/23 01:12:12.837
------------------------------
â€¢ [1.889 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl describe
  test/e2e/kubectl/kubectl.go:1270
    should check if kubectl describe prints relevant information for rc and pods  [Conformance]
    test/e2e/kubectl/kubectl.go:1276

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:12:10.958
    Feb  9 01:12:10.959: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:12:10.959
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:10.978
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:10.982
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
      test/e2e/kubectl/kubectl.go:1276
    Feb  9 01:12:10.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 create -f -'
    Feb  9 01:12:11.154: INFO: stderr: ""
    Feb  9 01:12:11.154: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    Feb  9 01:12:11.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 create -f -'
    Feb  9 01:12:11.340: INFO: stderr: ""
    Feb  9 01:12:11.340: INFO: stdout: "service/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 02/09/23 01:12:11.34
    Feb  9 01:12:12.348: INFO: Selector matched 1 pods for map[app:agnhost]
    Feb  9 01:12:12.348: INFO: Found 1 / 1
    Feb  9 01:12:12.348: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    Feb  9 01:12:12.353: INFO: Selector matched 1 pods for map[app:agnhost]
    Feb  9 01:12:12.353: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Feb  9 01:12:12.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 describe pod agnhost-primary-sn574'
    Feb  9 01:12:12.430: INFO: stderr: ""
    Feb  9 01:12:12.430: INFO: stdout: "Name:             agnhost-primary-sn574\nNamespace:        kubectl-1116\nPriority:         0\nService Account:  default\nNode:             aks-nodes-15799032-vmss000000/10.224.0.4\nStart Time:       Thu, 09 Feb 2023 01:12:11 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.0.146\nIPs:\n  IP:           10.244.0.146\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://f2b1855203d3f7a93315efd2da86708efc1b11c5bccec3ab310eec91f55414f9\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.43\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 09 Feb 2023 01:12:11 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-w86fx (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-w86fx:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-1116/agnhost-primary-sn574 to aks-nodes-15799032-vmss000000\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.43\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
    Feb  9 01:12:12.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 describe rc agnhost-primary'
    Feb  9 01:12:12.531: INFO: stderr: ""
    Feb  9 01:12:12.531: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1116\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.43\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-sn574\n"
    Feb  9 01:12:12.531: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 describe service agnhost-primary'
    Feb  9 01:12:12.614: INFO: stderr: ""
    Feb  9 01:12:12.614: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-1116\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.0.173.76\nIPs:               10.0.173.76\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.0.146:6379\nSession Affinity:  None\nEvents:            <none>\n"
    Feb  9 01:12:12.622: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 describe node aks-nodes-15799032-vmss000000'
    Feb  9 01:12:12.743: INFO: stderr: ""
    Feb  9 01:12:12.743: INFO: stdout: "Name:               aks-nodes-15799032-vmss000000\nRoles:              agent\nLabels:             agentpool=nodes\n                    beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.azure.com/agentpool=nodes\n                    kubernetes.azure.com/cluster=MC_yizhangebld68397905_testcluster_eastus\n                    kubernetes.azure.com/kubelet-identity-client-id=\n                    kubernetes.azure.com/mode=system\n                    kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-2023.01.26\n                    kubernetes.azure.com/os-sku=Ubuntu\n                    kubernetes.azure.com/role=agent\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=aks-nodes-15799032-vmss000000\n                    kubernetes.io/os=linux\n                    kubernetes.io/role=agent\n                    node-role.kubernetes.io/agent=\n                    node.kubernetes.io/instance-type=Standard_DS2_v2\n                    topology.disk.csi.azure.com/zone=\n                    topology.kubernetes.io/region=eastus\n                    topology.kubernetes.io/zone=0\nAnnotations:        csi.volume.kubernetes.io/nodeid: {\"disk.csi.azure.com\":\"aks-nodes-15799032-vmss000000\",\"file.csi.azure.com\":\"aks-nodes-15799032-vmss000000\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 09 Feb 2023 00:21:06 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  aks-nodes-15799032-vmss000000\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 09 Feb 2023 01:12:10 +0000\nConditions:\n  Type                          Status  LastHeartbeatTime                 LastTransitionTime                Reason                          Message\n  ----                          ------  -----------------                 ------------------                ------                          -------\n  ReadonlyFilesystem            False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   FilesystemIsNotReadOnly         Filesystem is not read-only\n  FrequentDockerRestart         False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   NoFrequentDockerRestart         docker is functioning properly\n  FrequentContainerdRestart     False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   NoFrequentContainerdRestart     containerd is functioning properly\n  KernelDeadlock                False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   KernelHasNoDeadlock             kernel has no deadlock\n  FrequentUnregisterNetDevice   False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   NoFrequentUnregisterNetDevice   node is functioning properly\n  VMEventScheduled              False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:24:06 +0000   NoVMEventScheduled              VM has no scheduled event\n  FrequentKubeletRestart        False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   NoFrequentKubeletRestart        kubelet is functioning properly\n  FilesystemCorruptionProblem   False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   FilesystemIsOK                  Filesystem is healthy\n  KubeletProblem                False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   KubeletIsUp                     kubelet service is up\n  ContainerRuntimeProblem       False   Thu, 09 Feb 2023 01:09:13 +0000   Thu, 09 Feb 2023 00:23:31 +0000   ContainerRuntimeIsUp            container runtime service is up\n  NetworkUnavailable            False   Thu, 09 Feb 2023 00:22:07 +0000   Thu, 09 Feb 2023 00:22:07 +0000   RouteCreated                    RouteController created a route\n  MemoryPressure                False   Thu, 09 Feb 2023 01:10:54 +0000   Thu, 09 Feb 2023 00:21:06 +0000   KubeletHasSufficientMemory      kubelet has sufficient memory available\n  DiskPressure                  False   Thu, 09 Feb 2023 01:10:54 +0000   Thu, 09 Feb 2023 00:21:06 +0000   KubeletHasNoDiskPressure        kubelet has no disk pressure\n  PIDPressure                   False   Thu, 09 Feb 2023 01:10:54 +0000   Thu, 09 Feb 2023 00:21:06 +0000   KubeletHasSufficientPID         kubelet has sufficient PID available\n  Ready                         True    Thu, 09 Feb 2023 01:10:54 +0000   Thu, 09 Feb 2023 00:21:06 +0000   KubeletReady                    kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  10.224.0.4\n  Hostname:    aks-nodes-15799032-vmss000000\nCapacity:\n  cpu:                2\n  ephemeral-storage:  30298176Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7109920Ki\n  pods:               30\nAllocatable:\n  cpu:                1900m\n  ephemeral-storage:  27922798956\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             4664608Ki\n  pods:               30\nSystem Info:\n  Machine ID:                 20bff917c0b3491cae3a6b5455b1f398\n  System UUID:                670de17d-bd2d-4b04-be12-f6d74eb24b14\n  Boot ID:                    b46bbed1-a947-4b9d-9648-9b17feefdfaa\n  Kernel Version:             5.15.0-1031-azure\n  OS Image:                   Ubuntu 22.04.1 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.15+azure-1\n  Kubelet Version:            v1.26.0\n  Kube-Proxy Version:         v1.26.0\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nProviderID:                   azure:///subscriptions/feb5b150-60fe-4441-be73-8c02a524f55a/resourceGroups/mc_yizhangebld68397905_testcluster_eastus/providers/Microsoft.Compute/virtualMachineScaleSets/aks-nodes-15799032-vmss/virtualMachines/0\nNon-terminated Pods:          (7 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 azure-ip-masq-agent-26zqc                                  100m (5%)     500m (26%)  50Mi (1%)        250Mi (5%)     51m\n  kube-system                 cloud-node-manager-khkh5                                   50m (2%)      0 (0%)      50Mi (1%)        512Mi (11%)    51m\n  kube-system                 csi-azuredisk-node-f98f4                                   30m (1%)      0 (0%)      60Mi (1%)        400Mi (8%)     51m\n  kube-system                 csi-azurefile-node-kd8lb                                   30m (1%)      0 (0%)      60Mi (1%)        600Mi (13%)    51m\n  kube-system                 kube-proxy-hznqr                                           100m (5%)     0 (0%)      0 (0%)           0 (0%)         51m\n  kubectl-1116                agnhost-primary-sn574                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         1s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-ccznv    0 (0%)        0 (0%)      0 (0%)           0 (0%)         45m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                310m (16%)  500m (26%)\n  memory             220Mi (4%)  1762Mi (38%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From                                                        Message\n  ----     ------                   ----               ----                                                        -------\n  Normal   Starting                 49m                kube-proxy                                                  \n  Warning  InvalidDiskCapacity      51m                kubelet                                                     invalid capacity 0 on image filesystem\n  Normal   Starting                 51m                kubelet                                                     Starting kubelet.\n  Normal   NodeHasSufficientMemory  51m (x2 over 51m)  kubelet                                                     Node aks-nodes-15799032-vmss000000 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    51m (x2 over 51m)  kubelet                                                     Node aks-nodes-15799032-vmss000000 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     51m (x2 over 51m)  kubelet                                                     Node aks-nodes-15799032-vmss000000 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  51m                kubelet                                                     Updated Node Allocatable limit across pods\n  Normal   NodeReady                51m                kubelet                                                     Node aks-nodes-15799032-vmss000000 status is now: NodeReady\n  Normal   RegisteredNode           51m                node-controller                                             Node aks-nodes-15799032-vmss000000 event: Registered Node aks-nodes-15799032-vmss000000 in Controller\n  Normal   RegisteredNode           49m                node-controller                                             Node aks-nodes-15799032-vmss000000 event: Registered Node aks-nodes-15799032-vmss000000 in Controller\n  Warning  PreemptScheduled         48m                custom-scheduledevents-consolidated-preempt-plugin-monitor  IMDS query failed, exit code: 28\nConnection timed out after 24 seconds. Contact IMDSCoreDevsSG@microsoft.com\n  Normal  NoVMEventScheduled  48m  custom-scheduledevents-consolidated-condition-plugin-monitor  Node condition VMEventScheduled is now: Unknown, reason: NoVMEventScheduled\n  Normal  NoVMEventScheduled  48m  custom-scheduledevents-consolidated-condition-plugin-monitor  Node condition VMEventScheduled is now: False, reason: NoVMEventScheduled\n"
    Feb  9 01:12:12.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1116 describe namespace kubectl-1116'
    Feb  9 01:12:12.829: INFO: stderr: ""
    Feb  9 01:12:12.829: INFO: stdout: "Name:         kubectl-1116\nLabels:       e2e-framework=kubectl\n              e2e-run=a104d546-0228-4a05-90e1-297ab7feb3d9\n              kubernetes.io/metadata.name=kubectl-1116\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:12:12.829: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1116" for this suite. 02/09/23 01:12:12.837
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:12:12.848
Feb  9 01:12:12.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-probe 02/09/23 01:12:12.849
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:12.868
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:12.872
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169
STEP: Creating pod liveness-af482ac3-0972-4ea4-845f-d2ce16599336 in namespace container-probe-3168 02/09/23 01:12:12.877
Feb  9 01:12:12.889: INFO: Waiting up to 5m0s for pod "liveness-af482ac3-0972-4ea4-845f-d2ce16599336" in namespace "container-probe-3168" to be "not pending"
Feb  9 01:12:12.894: INFO: Pod "liveness-af482ac3-0972-4ea4-845f-d2ce16599336": Phase="Pending", Reason="", readiness=false. Elapsed: 5.574529ms
Feb  9 01:12:14.909: INFO: Pod "liveness-af482ac3-0972-4ea4-845f-d2ce16599336": Phase="Running", Reason="", readiness=true. Elapsed: 2.020594156s
Feb  9 01:12:14.909: INFO: Pod "liveness-af482ac3-0972-4ea4-845f-d2ce16599336" satisfied condition "not pending"
Feb  9 01:12:14.909: INFO: Started pod liveness-af482ac3-0972-4ea4-845f-d2ce16599336 in namespace container-probe-3168
STEP: checking the pod's current state and verifying that restartCount is present 02/09/23 01:12:14.909
Feb  9 01:12:14.915: INFO: Initial restart count of pod liveness-af482ac3-0972-4ea4-845f-d2ce16599336 is 0
Feb  9 01:12:34.989: INFO: Restart count of pod container-probe-3168/liveness-af482ac3-0972-4ea4-845f-d2ce16599336 is now 1 (20.073697711s elapsed)
STEP: deleting the pod 02/09/23 01:12:34.989
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Feb  9 01:12:35.006: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-3168" for this suite. 02/09/23 01:12:35.014
------------------------------
â€¢ [SLOW TEST] [22.175 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:12:12.848
    Feb  9 01:12:12.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-probe 02/09/23 01:12:12.849
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:12.868
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:12.872
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:169
    STEP: Creating pod liveness-af482ac3-0972-4ea4-845f-d2ce16599336 in namespace container-probe-3168 02/09/23 01:12:12.877
    Feb  9 01:12:12.889: INFO: Waiting up to 5m0s for pod "liveness-af482ac3-0972-4ea4-845f-d2ce16599336" in namespace "container-probe-3168" to be "not pending"
    Feb  9 01:12:12.894: INFO: Pod "liveness-af482ac3-0972-4ea4-845f-d2ce16599336": Phase="Pending", Reason="", readiness=false. Elapsed: 5.574529ms
    Feb  9 01:12:14.909: INFO: Pod "liveness-af482ac3-0972-4ea4-845f-d2ce16599336": Phase="Running", Reason="", readiness=true. Elapsed: 2.020594156s
    Feb  9 01:12:14.909: INFO: Pod "liveness-af482ac3-0972-4ea4-845f-d2ce16599336" satisfied condition "not pending"
    Feb  9 01:12:14.909: INFO: Started pod liveness-af482ac3-0972-4ea4-845f-d2ce16599336 in namespace container-probe-3168
    STEP: checking the pod's current state and verifying that restartCount is present 02/09/23 01:12:14.909
    Feb  9 01:12:14.915: INFO: Initial restart count of pod liveness-af482ac3-0972-4ea4-845f-d2ce16599336 is 0
    Feb  9 01:12:34.989: INFO: Restart count of pod container-probe-3168/liveness-af482ac3-0972-4ea4-845f-d2ce16599336 is now 1 (20.073697711s elapsed)
    STEP: deleting the pod 02/09/23 01:12:34.989
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:12:35.006: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-3168" for this suite. 02/09/23 01:12:35.014
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:12:35.023
Feb  9 01:12:35.023: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename gc 02/09/23 01:12:35.024
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:35.044
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:35.048
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550
STEP: create the deployment 02/09/23 01:12:35.053
STEP: Wait for the Deployment to create new ReplicaSet 02/09/23 01:12:35.059
STEP: delete the deployment 02/09/23 01:12:35.185
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs 02/09/23 01:12:35.195
STEP: Gathering metrics 02/09/23 01:12:35.728
W0209 01:12:35.741668      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Feb  9 01:12:35.741: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Feb  9 01:12:35.741: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-2238" for this suite. 02/09/23 01:12:35.753
------------------------------
â€¢ [0.739 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:12:35.023
    Feb  9 01:12:35.023: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename gc 02/09/23 01:12:35.024
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:35.044
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:35.048
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
      test/e2e/apimachinery/garbage_collector.go:550
    STEP: create the deployment 02/09/23 01:12:35.053
    STEP: Wait for the Deployment to create new ReplicaSet 02/09/23 01:12:35.059
    STEP: delete the deployment 02/09/23 01:12:35.185
    STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs 02/09/23 01:12:35.195
    STEP: Gathering metrics 02/09/23 01:12:35.728
    W0209 01:12:35.741668      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Feb  9 01:12:35.741: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:12:35.741: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-2238" for this suite. 02/09/23 01:12:35.753
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch
  should add annotations for pods in rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1652
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:12:35.767
Feb  9 01:12:35.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:12:35.767
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:35.789
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:35.793
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1652
STEP: creating Agnhost RC 02/09/23 01:12:35.798
Feb  9 01:12:35.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-6254 create -f -'
Feb  9 01:12:35.966: INFO: stderr: ""
Feb  9 01:12:35.966: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 02/09/23 01:12:35.966
Feb  9 01:12:36.974: INFO: Selector matched 1 pods for map[app:agnhost]
Feb  9 01:12:36.974: INFO: Found 0 / 1
Feb  9 01:12:37.974: INFO: Selector matched 1 pods for map[app:agnhost]
Feb  9 01:12:37.974: INFO: Found 1 / 1
Feb  9 01:12:37.974: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods 02/09/23 01:12:37.974
Feb  9 01:12:37.979: INFO: Selector matched 1 pods for map[app:agnhost]
Feb  9 01:12:37.979: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Feb  9 01:12:37.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-6254 patch pod agnhost-primary-d7t96 -p {"metadata":{"annotations":{"x":"y"}}}'
Feb  9 01:12:38.058: INFO: stderr: ""
Feb  9 01:12:38.058: INFO: stdout: "pod/agnhost-primary-d7t96 patched\n"
STEP: checking annotations 02/09/23 01:12:38.058
Feb  9 01:12:38.064: INFO: Selector matched 1 pods for map[app:agnhost]
Feb  9 01:12:38.064: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:12:38.064: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-6254" for this suite. 02/09/23 01:12:38.073
------------------------------
â€¢ [2.316 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl patch
  test/e2e/kubectl/kubectl.go:1646
    should add annotations for pods in rc  [Conformance]
    test/e2e/kubectl/kubectl.go:1652

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:12:35.767
    Feb  9 01:12:35.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:12:35.767
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:35.789
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:35.793
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should add annotations for pods in rc  [Conformance]
      test/e2e/kubectl/kubectl.go:1652
    STEP: creating Agnhost RC 02/09/23 01:12:35.798
    Feb  9 01:12:35.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-6254 create -f -'
    Feb  9 01:12:35.966: INFO: stderr: ""
    Feb  9 01:12:35.966: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 02/09/23 01:12:35.966
    Feb  9 01:12:36.974: INFO: Selector matched 1 pods for map[app:agnhost]
    Feb  9 01:12:36.974: INFO: Found 0 / 1
    Feb  9 01:12:37.974: INFO: Selector matched 1 pods for map[app:agnhost]
    Feb  9 01:12:37.974: INFO: Found 1 / 1
    Feb  9 01:12:37.974: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    STEP: patching all pods 02/09/23 01:12:37.974
    Feb  9 01:12:37.979: INFO: Selector matched 1 pods for map[app:agnhost]
    Feb  9 01:12:37.979: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Feb  9 01:12:37.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-6254 patch pod agnhost-primary-d7t96 -p {"metadata":{"annotations":{"x":"y"}}}'
    Feb  9 01:12:38.058: INFO: stderr: ""
    Feb  9 01:12:38.058: INFO: stdout: "pod/agnhost-primary-d7t96 patched\n"
    STEP: checking annotations 02/09/23 01:12:38.058
    Feb  9 01:12:38.064: INFO: Selector matched 1 pods for map[app:agnhost]
    Feb  9 01:12:38.064: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:12:38.064: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-6254" for this suite. 02/09/23 01:12:38.073
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/kubectl/kubectl.go:1592
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:12:38.083
Feb  9 01:12:38.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:12:38.084
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:38.103
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:38.107
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1572
STEP: creating an pod 02/09/23 01:12:38.112
Feb  9 01:12:38.112: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.43 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Feb  9 01:12:38.184: INFO: stderr: ""
Feb  9 01:12:38.184: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/kubectl/kubectl.go:1592
STEP: Waiting for log generator to start. 02/09/23 01:12:38.184
Feb  9 01:12:38.184: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Feb  9 01:12:38.184: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-9675" to be "running and ready, or succeeded"
Feb  9 01:12:38.190: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 5.943125ms
Feb  9 01:12:38.190: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on 'aks-nodes-15799032-vmss000000' to be 'Running' but was 'Pending'
Feb  9 01:12:40.196: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.012046022s
Feb  9 01:12:40.196: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Feb  9 01:12:40.196: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings 02/09/23 01:12:40.196
Feb  9 01:12:40.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 logs logs-generator logs-generator'
Feb  9 01:12:40.279: INFO: stderr: ""
Feb  9 01:12:40.279: INFO: stdout: "I0209 01:12:38.719378       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/rgj 389\nI0209 01:12:38.919549       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/s9m 285\nI0209 01:12:39.120096       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/gv5g 349\nI0209 01:12:39.319466       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/pvh 231\nI0209 01:12:39.519825       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/rhld 255\nI0209 01:12:39.720227       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/4lls 427\nI0209 01:12:39.919644       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/qjxm 483\nI0209 01:12:40.120021       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/8ksv 387\n"
STEP: limiting log lines 02/09/23 01:12:40.279
Feb  9 01:12:40.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 logs logs-generator logs-generator --tail=1'
Feb  9 01:12:40.357: INFO: stderr: ""
Feb  9 01:12:40.357: INFO: stdout: "I0209 01:12:40.320435       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/fqp 213\n"
Feb  9 01:12:40.357: INFO: got output "I0209 01:12:40.320435       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/fqp 213\n"
STEP: limiting log bytes 02/09/23 01:12:40.357
Feb  9 01:12:40.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 logs logs-generator logs-generator --limit-bytes=1'
Feb  9 01:12:40.449: INFO: stderr: ""
Feb  9 01:12:40.449: INFO: stdout: "I"
Feb  9 01:12:40.449: INFO: got output "I"
STEP: exposing timestamps 02/09/23 01:12:40.449
Feb  9 01:12:40.449: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 logs logs-generator logs-generator --tail=1 --timestamps'
Feb  9 01:12:40.523: INFO: stderr: ""
Feb  9 01:12:40.523: INFO: stdout: "2023-02-09T01:12:40.520025657Z I0209 01:12:40.519865       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/564s 387\n"
Feb  9 01:12:40.523: INFO: got output "2023-02-09T01:12:40.520025657Z I0209 01:12:40.519865       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/564s 387\n"
STEP: restricting to a time range 02/09/23 01:12:40.524
Feb  9 01:12:43.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 logs logs-generator logs-generator --since=1s'
Feb  9 01:12:43.103: INFO: stderr: ""
Feb  9 01:12:43.103: INFO: stdout: "I0209 01:12:42.119839       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/mh2 421\nI0209 01:12:42.320256       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/cxld 215\nI0209 01:12:42.519615       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/nkn 265\nI0209 01:12:42.720003       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/rsh 564\nI0209 01:12:42.920429       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/gcr 387\n"
Feb  9 01:12:43.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 logs logs-generator logs-generator --since=24h'
Feb  9 01:12:43.182: INFO: stderr: ""
Feb  9 01:12:43.182: INFO: stdout: "I0209 01:12:38.719378       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/rgj 389\nI0209 01:12:38.919549       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/s9m 285\nI0209 01:12:39.120096       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/gv5g 349\nI0209 01:12:39.319466       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/pvh 231\nI0209 01:12:39.519825       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/rhld 255\nI0209 01:12:39.720227       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/4lls 427\nI0209 01:12:39.919644       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/qjxm 483\nI0209 01:12:40.120021       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/8ksv 387\nI0209 01:12:40.320435       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/fqp 213\nI0209 01:12:40.519865       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/564s 387\nI0209 01:12:40.720192       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/5k9b 252\nI0209 01:12:40.919538       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/qtg 341\nI0209 01:12:41.119879       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/pwd 531\nI0209 01:12:41.320263       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/wflf 237\nI0209 01:12:41.519571       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/mwg 512\nI0209 01:12:41.720017       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/bzt 440\nI0209 01:12:41.920394       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/6c2 562\nI0209 01:12:42.119839       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/mh2 421\nI0209 01:12:42.320256       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/cxld 215\nI0209 01:12:42.519615       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/nkn 265\nI0209 01:12:42.720003       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/rsh 564\nI0209 01:12:42.920429       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/gcr 387\nI0209 01:12:43.119823       1 logs_generator.go:76] 22 GET /api/v1/namespaces/ns/pods/pht 459\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1577
Feb  9 01:12:43.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 delete pod logs-generator'
Feb  9 01:12:44.065: INFO: stderr: ""
Feb  9 01:12:44.065: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:12:44.065: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-9675" for this suite. 02/09/23 01:12:44.074
------------------------------
â€¢ [SLOW TEST] [6.014 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1569
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/kubectl/kubectl.go:1592

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:12:38.083
    Feb  9 01:12:38.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:12:38.084
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:38.103
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:38.107
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl logs
      test/e2e/kubectl/kubectl.go:1572
    STEP: creating an pod 02/09/23 01:12:38.112
    Feb  9 01:12:38.112: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.43 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
    Feb  9 01:12:38.184: INFO: stderr: ""
    Feb  9 01:12:38.184: INFO: stdout: "pod/logs-generator created\n"
    [It] should be able to retrieve and filter logs  [Conformance]
      test/e2e/kubectl/kubectl.go:1592
    STEP: Waiting for log generator to start. 02/09/23 01:12:38.184
    Feb  9 01:12:38.184: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
    Feb  9 01:12:38.184: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-9675" to be "running and ready, or succeeded"
    Feb  9 01:12:38.190: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 5.943125ms
    Feb  9 01:12:38.190: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on 'aks-nodes-15799032-vmss000000' to be 'Running' but was 'Pending'
    Feb  9 01:12:40.196: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.012046022s
    Feb  9 01:12:40.196: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
    Feb  9 01:12:40.196: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
    STEP: checking for a matching strings 02/09/23 01:12:40.196
    Feb  9 01:12:40.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 logs logs-generator logs-generator'
    Feb  9 01:12:40.279: INFO: stderr: ""
    Feb  9 01:12:40.279: INFO: stdout: "I0209 01:12:38.719378       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/rgj 389\nI0209 01:12:38.919549       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/s9m 285\nI0209 01:12:39.120096       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/gv5g 349\nI0209 01:12:39.319466       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/pvh 231\nI0209 01:12:39.519825       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/rhld 255\nI0209 01:12:39.720227       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/4lls 427\nI0209 01:12:39.919644       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/qjxm 483\nI0209 01:12:40.120021       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/8ksv 387\n"
    STEP: limiting log lines 02/09/23 01:12:40.279
    Feb  9 01:12:40.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 logs logs-generator logs-generator --tail=1'
    Feb  9 01:12:40.357: INFO: stderr: ""
    Feb  9 01:12:40.357: INFO: stdout: "I0209 01:12:40.320435       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/fqp 213\n"
    Feb  9 01:12:40.357: INFO: got output "I0209 01:12:40.320435       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/fqp 213\n"
    STEP: limiting log bytes 02/09/23 01:12:40.357
    Feb  9 01:12:40.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 logs logs-generator logs-generator --limit-bytes=1'
    Feb  9 01:12:40.449: INFO: stderr: ""
    Feb  9 01:12:40.449: INFO: stdout: "I"
    Feb  9 01:12:40.449: INFO: got output "I"
    STEP: exposing timestamps 02/09/23 01:12:40.449
    Feb  9 01:12:40.449: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 logs logs-generator logs-generator --tail=1 --timestamps'
    Feb  9 01:12:40.523: INFO: stderr: ""
    Feb  9 01:12:40.523: INFO: stdout: "2023-02-09T01:12:40.520025657Z I0209 01:12:40.519865       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/564s 387\n"
    Feb  9 01:12:40.523: INFO: got output "2023-02-09T01:12:40.520025657Z I0209 01:12:40.519865       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/564s 387\n"
    STEP: restricting to a time range 02/09/23 01:12:40.524
    Feb  9 01:12:43.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 logs logs-generator logs-generator --since=1s'
    Feb  9 01:12:43.103: INFO: stderr: ""
    Feb  9 01:12:43.103: INFO: stdout: "I0209 01:12:42.119839       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/mh2 421\nI0209 01:12:42.320256       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/cxld 215\nI0209 01:12:42.519615       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/nkn 265\nI0209 01:12:42.720003       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/rsh 564\nI0209 01:12:42.920429       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/gcr 387\n"
    Feb  9 01:12:43.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 logs logs-generator logs-generator --since=24h'
    Feb  9 01:12:43.182: INFO: stderr: ""
    Feb  9 01:12:43.182: INFO: stdout: "I0209 01:12:38.719378       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/rgj 389\nI0209 01:12:38.919549       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/s9m 285\nI0209 01:12:39.120096       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/gv5g 349\nI0209 01:12:39.319466       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/pvh 231\nI0209 01:12:39.519825       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/rhld 255\nI0209 01:12:39.720227       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/4lls 427\nI0209 01:12:39.919644       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/qjxm 483\nI0209 01:12:40.120021       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/8ksv 387\nI0209 01:12:40.320435       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/fqp 213\nI0209 01:12:40.519865       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/564s 387\nI0209 01:12:40.720192       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/5k9b 252\nI0209 01:12:40.919538       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/qtg 341\nI0209 01:12:41.119879       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/pwd 531\nI0209 01:12:41.320263       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/wflf 237\nI0209 01:12:41.519571       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/mwg 512\nI0209 01:12:41.720017       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/bzt 440\nI0209 01:12:41.920394       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/6c2 562\nI0209 01:12:42.119839       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/mh2 421\nI0209 01:12:42.320256       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/cxld 215\nI0209 01:12:42.519615       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/nkn 265\nI0209 01:12:42.720003       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/rsh 564\nI0209 01:12:42.920429       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/gcr 387\nI0209 01:12:43.119823       1 logs_generator.go:76] 22 GET /api/v1/namespaces/ns/pods/pht 459\n"
    [AfterEach] Kubectl logs
      test/e2e/kubectl/kubectl.go:1577
    Feb  9 01:12:43.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-9675 delete pod logs-generator'
    Feb  9 01:12:44.065: INFO: stderr: ""
    Feb  9 01:12:44.065: INFO: stdout: "pod \"logs-generator\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:12:44.065: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-9675" for this suite. 02/09/23 01:12:44.074
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:12:44.098
Feb  9 01:12:44.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename namespaces 02/09/23 01:12:44.098
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:44.121
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:44.125
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243
STEP: Creating a test namespace 02/09/23 01:12:44.13
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:44.149
STEP: Creating a pod in the namespace 02/09/23 01:12:44.153
STEP: Waiting for the pod to have running status 02/09/23 01:12:44.165
Feb  9 01:12:44.165: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "nsdeletetest-8106" to be "running"
Feb  9 01:12:44.170: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.131123ms
Feb  9 01:12:46.176: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.01164609s
Feb  9 01:12:46.176: INFO: Pod "test-pod" satisfied condition "running"
STEP: Deleting the namespace 02/09/23 01:12:46.176
STEP: Waiting for the namespace to be removed. 02/09/23 01:12:46.186
STEP: Recreating the namespace 02/09/23 01:12:57.194
STEP: Verifying there are no pods in the namespace 02/09/23 01:12:57.215
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:12:57.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-3026" for this suite. 02/09/23 01:12:57.23
STEP: Destroying namespace "nsdeletetest-8106" for this suite. 02/09/23 01:12:57.238
Feb  9 01:12:57.244: INFO: Namespace nsdeletetest-8106 was already deleted
STEP: Destroying namespace "nsdeletetest-7039" for this suite. 02/09/23 01:12:57.244
------------------------------
â€¢ [SLOW TEST] [13.156 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:12:44.098
    Feb  9 01:12:44.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename namespaces 02/09/23 01:12:44.098
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:44.121
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:44.125
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should ensure that all pods are removed when a namespace is deleted [Conformance]
      test/e2e/apimachinery/namespace.go:243
    STEP: Creating a test namespace 02/09/23 01:12:44.13
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:44.149
    STEP: Creating a pod in the namespace 02/09/23 01:12:44.153
    STEP: Waiting for the pod to have running status 02/09/23 01:12:44.165
    Feb  9 01:12:44.165: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "nsdeletetest-8106" to be "running"
    Feb  9 01:12:44.170: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.131123ms
    Feb  9 01:12:46.176: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.01164609s
    Feb  9 01:12:46.176: INFO: Pod "test-pod" satisfied condition "running"
    STEP: Deleting the namespace 02/09/23 01:12:46.176
    STEP: Waiting for the namespace to be removed. 02/09/23 01:12:46.186
    STEP: Recreating the namespace 02/09/23 01:12:57.194
    STEP: Verifying there are no pods in the namespace 02/09/23 01:12:57.215
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:12:57.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-3026" for this suite. 02/09/23 01:12:57.23
    STEP: Destroying namespace "nsdeletetest-8106" for this suite. 02/09/23 01:12:57.238
    Feb  9 01:12:57.244: INFO: Namespace nsdeletetest-8106 was already deleted
    STEP: Destroying namespace "nsdeletetest-7039" for this suite. 02/09/23 01:12:57.244
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-network] Services
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:12:57.254
Feb  9 01:12:57.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:12:57.255
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:57.275
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:57.28
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477
STEP: creating a service externalname-service with the type=ExternalName in namespace services-8729 02/09/23 01:12:57.285
STEP: changing the ExternalName service to type=NodePort 02/09/23 01:12:57.292
STEP: creating replication controller externalname-service in namespace services-8729 02/09/23 01:12:57.318
I0209 01:12:57.325057      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-8729, replica count: 2
I0209 01:13:00.376498      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Feb  9 01:13:00.376: INFO: Creating new exec pod
Feb  9 01:13:00.391: INFO: Waiting up to 5m0s for pod "execpod79pwg" in namespace "services-8729" to be "running"
Feb  9 01:13:00.397: INFO: Pod "execpod79pwg": Phase="Pending", Reason="", readiness=false. Elapsed: 5.790627ms
Feb  9 01:13:02.403: INFO: Pod "execpod79pwg": Phase="Running", Reason="", readiness=true. Elapsed: 2.011735294s
Feb  9 01:13:02.403: INFO: Pod "execpod79pwg" satisfied condition "running"
Feb  9 01:13:03.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-8729 exec execpod79pwg -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
Feb  9 01:13:03.582: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Feb  9 01:13:03.582: INFO: stdout: ""
Feb  9 01:13:03.582: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-8729 exec execpod79pwg -- /bin/sh -x -c nc -v -z -w 2 10.0.227.132 80'
Feb  9 01:13:03.750: INFO: stderr: "+ nc -v -z -w 2 10.0.227.132 80\nConnection to 10.0.227.132 80 port [tcp/http] succeeded!\n"
Feb  9 01:13:03.750: INFO: stdout: ""
Feb  9 01:13:03.750: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-8729 exec execpod79pwg -- /bin/sh -x -c nc -v -z -w 2 10.224.0.5 31963'
Feb  9 01:13:03.901: INFO: stderr: "+ nc -v -z -w 2 10.224.0.5 31963\nConnection to 10.224.0.5 31963 port [tcp/*] succeeded!\n"
Feb  9 01:13:03.901: INFO: stdout: ""
Feb  9 01:13:03.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-8729 exec execpod79pwg -- /bin/sh -x -c nc -v -z -w 2 10.224.0.6 31963'
Feb  9 01:13:04.058: INFO: stderr: "+ nc -v -z -w 2 10.224.0.6 31963\nConnection to 10.224.0.6 31963 port [tcp/*] succeeded!\n"
Feb  9 01:13:04.058: INFO: stdout: ""
Feb  9 01:13:04.058: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:13:04.090: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-8729" for this suite. 02/09/23 01:13:04.099
------------------------------
â€¢ [SLOW TEST] [6.858 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:12:57.254
    Feb  9 01:12:57.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:12:57.255
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:12:57.275
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:12:57.28
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ExternalName to NodePort [Conformance]
      test/e2e/network/service.go:1477
    STEP: creating a service externalname-service with the type=ExternalName in namespace services-8729 02/09/23 01:12:57.285
    STEP: changing the ExternalName service to type=NodePort 02/09/23 01:12:57.292
    STEP: creating replication controller externalname-service in namespace services-8729 02/09/23 01:12:57.318
    I0209 01:12:57.325057      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-8729, replica count: 2
    I0209 01:13:00.376498      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Feb  9 01:13:00.376: INFO: Creating new exec pod
    Feb  9 01:13:00.391: INFO: Waiting up to 5m0s for pod "execpod79pwg" in namespace "services-8729" to be "running"
    Feb  9 01:13:00.397: INFO: Pod "execpod79pwg": Phase="Pending", Reason="", readiness=false. Elapsed: 5.790627ms
    Feb  9 01:13:02.403: INFO: Pod "execpod79pwg": Phase="Running", Reason="", readiness=true. Elapsed: 2.011735294s
    Feb  9 01:13:02.403: INFO: Pod "execpod79pwg" satisfied condition "running"
    Feb  9 01:13:03.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-8729 exec execpod79pwg -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
    Feb  9 01:13:03.582: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
    Feb  9 01:13:03.582: INFO: stdout: ""
    Feb  9 01:13:03.582: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-8729 exec execpod79pwg -- /bin/sh -x -c nc -v -z -w 2 10.0.227.132 80'
    Feb  9 01:13:03.750: INFO: stderr: "+ nc -v -z -w 2 10.0.227.132 80\nConnection to 10.0.227.132 80 port [tcp/http] succeeded!\n"
    Feb  9 01:13:03.750: INFO: stdout: ""
    Feb  9 01:13:03.750: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-8729 exec execpod79pwg -- /bin/sh -x -c nc -v -z -w 2 10.224.0.5 31963'
    Feb  9 01:13:03.901: INFO: stderr: "+ nc -v -z -w 2 10.224.0.5 31963\nConnection to 10.224.0.5 31963 port [tcp/*] succeeded!\n"
    Feb  9 01:13:03.901: INFO: stdout: ""
    Feb  9 01:13:03.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-8729 exec execpod79pwg -- /bin/sh -x -c nc -v -z -w 2 10.224.0.6 31963'
    Feb  9 01:13:04.058: INFO: stderr: "+ nc -v -z -w 2 10.224.0.6 31963\nConnection to 10.224.0.6 31963 port [tcp/*] succeeded!\n"
    Feb  9 01:13:04.058: INFO: stdout: ""
    Feb  9 01:13:04.058: INFO: Cleaning up the ExternalName to NodePort test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:13:04.090: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-8729" for this suite. 02/09/23 01:13:04.099
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:13:04.113
Feb  9 01:13:04.113: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 01:13:04.113
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:04.135
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:04.139
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197
STEP: Creating a pod to test emptydir 0644 on node default medium 02/09/23 01:13:04.144
Feb  9 01:13:04.158: INFO: Waiting up to 5m0s for pod "pod-fb577db4-6991-4666-a9eb-f5aa06bc1972" in namespace "emptydir-3227" to be "Succeeded or Failed"
Feb  9 01:13:04.165: INFO: Pod "pod-fb577db4-6991-4666-a9eb-f5aa06bc1972": Phase="Pending", Reason="", readiness=false. Elapsed: 6.844628ms
Feb  9 01:13:06.172: INFO: Pod "pod-fb577db4-6991-4666-a9eb-f5aa06bc1972": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013758914s
Feb  9 01:13:08.171: INFO: Pod "pod-fb577db4-6991-4666-a9eb-f5aa06bc1972": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013553771s
STEP: Saw pod success 02/09/23 01:13:08.171
Feb  9 01:13:08.171: INFO: Pod "pod-fb577db4-6991-4666-a9eb-f5aa06bc1972" satisfied condition "Succeeded or Failed"
Feb  9 01:13:08.177: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-fb577db4-6991-4666-a9eb-f5aa06bc1972 container test-container: <nil>
STEP: delete the pod 02/09/23 01:13:08.189
Feb  9 01:13:08.206: INFO: Waiting for pod pod-fb577db4-6991-4666-a9eb-f5aa06bc1972 to disappear
Feb  9 01:13:08.211: INFO: Pod pod-fb577db4-6991-4666-a9eb-f5aa06bc1972 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:13:08.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-3227" for this suite. 02/09/23 01:13:08.219
------------------------------
â€¢ [4.117 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:13:04.113
    Feb  9 01:13:04.113: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 01:13:04.113
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:04.135
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:04.139
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:197
    STEP: Creating a pod to test emptydir 0644 on node default medium 02/09/23 01:13:04.144
    Feb  9 01:13:04.158: INFO: Waiting up to 5m0s for pod "pod-fb577db4-6991-4666-a9eb-f5aa06bc1972" in namespace "emptydir-3227" to be "Succeeded or Failed"
    Feb  9 01:13:04.165: INFO: Pod "pod-fb577db4-6991-4666-a9eb-f5aa06bc1972": Phase="Pending", Reason="", readiness=false. Elapsed: 6.844628ms
    Feb  9 01:13:06.172: INFO: Pod "pod-fb577db4-6991-4666-a9eb-f5aa06bc1972": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013758914s
    Feb  9 01:13:08.171: INFO: Pod "pod-fb577db4-6991-4666-a9eb-f5aa06bc1972": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013553771s
    STEP: Saw pod success 02/09/23 01:13:08.171
    Feb  9 01:13:08.171: INFO: Pod "pod-fb577db4-6991-4666-a9eb-f5aa06bc1972" satisfied condition "Succeeded or Failed"
    Feb  9 01:13:08.177: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-fb577db4-6991-4666-a9eb-f5aa06bc1972 container test-container: <nil>
    STEP: delete the pod 02/09/23 01:13:08.189
    Feb  9 01:13:08.206: INFO: Waiting for pod pod-fb577db4-6991-4666-a9eb-f5aa06bc1972 to disappear
    Feb  9 01:13:08.211: INFO: Pod pod-fb577db4-6991-4666-a9eb-f5aa06bc1972 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:13:08.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-3227" for this suite. 02/09/23 01:13:08.219
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose
  should create services for rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1415
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:13:08.231
Feb  9 01:13:08.231: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:13:08.232
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:08.252
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:08.257
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should create services for rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1415
STEP: creating Agnhost RC 02/09/23 01:13:08.261
Feb  9 01:13:08.261: INFO: namespace kubectl-2782
Feb  9 01:13:08.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-2782 create -f -'
Feb  9 01:13:08.440: INFO: stderr: ""
Feb  9 01:13:08.440: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 02/09/23 01:13:08.44
Feb  9 01:13:09.446: INFO: Selector matched 1 pods for map[app:agnhost]
Feb  9 01:13:09.446: INFO: Found 1 / 1
Feb  9 01:13:09.446: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Feb  9 01:13:09.455: INFO: Selector matched 1 pods for map[app:agnhost]
Feb  9 01:13:09.455: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Feb  9 01:13:09.455: INFO: wait on agnhost-primary startup in kubectl-2782 
Feb  9 01:13:09.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-2782 logs agnhost-primary-z4xsm agnhost-primary'
Feb  9 01:13:09.534: INFO: stderr: ""
Feb  9 01:13:09.534: INFO: stdout: "Paused\n"
STEP: exposing RC 02/09/23 01:13:09.534
Feb  9 01:13:09.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-2782 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Feb  9 01:13:09.613: INFO: stderr: ""
Feb  9 01:13:09.613: INFO: stdout: "service/rm2 exposed\n"
Feb  9 01:13:09.618: INFO: Service rm2 in namespace kubectl-2782 found.
STEP: exposing service 02/09/23 01:13:11.631
Feb  9 01:13:11.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-2782 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Feb  9 01:13:11.717: INFO: stderr: ""
Feb  9 01:13:11.717: INFO: stdout: "service/rm3 exposed\n"
Feb  9 01:13:11.723: INFO: Service rm3 in namespace kubectl-2782 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:13:13.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-2782" for this suite. 02/09/23 01:13:13.743
------------------------------
â€¢ [SLOW TEST] [5.523 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1409
    should create services for rc  [Conformance]
    test/e2e/kubectl/kubectl.go:1415

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:13:08.231
    Feb  9 01:13:08.231: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:13:08.232
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:08.252
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:08.257
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should create services for rc  [Conformance]
      test/e2e/kubectl/kubectl.go:1415
    STEP: creating Agnhost RC 02/09/23 01:13:08.261
    Feb  9 01:13:08.261: INFO: namespace kubectl-2782
    Feb  9 01:13:08.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-2782 create -f -'
    Feb  9 01:13:08.440: INFO: stderr: ""
    Feb  9 01:13:08.440: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 02/09/23 01:13:08.44
    Feb  9 01:13:09.446: INFO: Selector matched 1 pods for map[app:agnhost]
    Feb  9 01:13:09.446: INFO: Found 1 / 1
    Feb  9 01:13:09.446: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    Feb  9 01:13:09.455: INFO: Selector matched 1 pods for map[app:agnhost]
    Feb  9 01:13:09.455: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Feb  9 01:13:09.455: INFO: wait on agnhost-primary startup in kubectl-2782 
    Feb  9 01:13:09.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-2782 logs agnhost-primary-z4xsm agnhost-primary'
    Feb  9 01:13:09.534: INFO: stderr: ""
    Feb  9 01:13:09.534: INFO: stdout: "Paused\n"
    STEP: exposing RC 02/09/23 01:13:09.534
    Feb  9 01:13:09.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-2782 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
    Feb  9 01:13:09.613: INFO: stderr: ""
    Feb  9 01:13:09.613: INFO: stdout: "service/rm2 exposed\n"
    Feb  9 01:13:09.618: INFO: Service rm2 in namespace kubectl-2782 found.
    STEP: exposing service 02/09/23 01:13:11.631
    Feb  9 01:13:11.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-2782 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
    Feb  9 01:13:11.717: INFO: stderr: ""
    Feb  9 01:13:11.717: INFO: stdout: "service/rm3 exposed\n"
    Feb  9 01:13:11.723: INFO: Service rm3 in namespace kubectl-2782 found.
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:13:13.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-2782" for this suite. 02/09/23 01:13:13.743
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:13:13.758
Feb  9 01:13:13.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename disruption 02/09/23 01:13:13.758
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:13.778
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:13.782
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164
STEP: Waiting for the pdb to be processed 02/09/23 01:13:13.794
STEP: Updating PodDisruptionBudget status 02/09/23 01:13:15.808
STEP: Waiting for all pods to be running 02/09/23 01:13:15.82
Feb  9 01:13:15.826: INFO: running pods: 0 < 1
STEP: locating a running pod 02/09/23 01:13:17.833
STEP: Waiting for the pdb to be processed 02/09/23 01:13:17.85
STEP: Patching PodDisruptionBudget status 02/09/23 01:13:17.862
STEP: Waiting for the pdb to be processed 02/09/23 01:13:17.874
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Feb  9 01:13:17.880: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-3113" for this suite. 02/09/23 01:13:17.888
------------------------------
â€¢ [4.140 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:13:13.758
    Feb  9 01:13:13.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename disruption 02/09/23 01:13:13.758
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:13.778
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:13.782
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should update/patch PodDisruptionBudget status [Conformance]
      test/e2e/apps/disruption.go:164
    STEP: Waiting for the pdb to be processed 02/09/23 01:13:13.794
    STEP: Updating PodDisruptionBudget status 02/09/23 01:13:15.808
    STEP: Waiting for all pods to be running 02/09/23 01:13:15.82
    Feb  9 01:13:15.826: INFO: running pods: 0 < 1
    STEP: locating a running pod 02/09/23 01:13:17.833
    STEP: Waiting for the pdb to be processed 02/09/23 01:13:17.85
    STEP: Patching PodDisruptionBudget status 02/09/23 01:13:17.862
    STEP: Waiting for the pdb to be processed 02/09/23 01:13:17.874
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:13:17.880: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-3113" for this suite. 02/09/23 01:13:17.888
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:93
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:13:17.899
Feb  9 01:13:17.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pod-network-test 02/09/23 01:13:17.9
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:17.919
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:17.923
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:93
STEP: Performing setup for networking test in namespace pod-network-test-3201 02/09/23 01:13:17.927
STEP: creating a selector 02/09/23 01:13:17.927
STEP: Creating the service pods in kubernetes 02/09/23 01:13:17.927
Feb  9 01:13:17.928: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Feb  9 01:13:17.967: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-3201" to be "running and ready"
Feb  9 01:13:17.973: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 5.132112ms
Feb  9 01:13:17.973: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:13:19.980: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.012534075s
Feb  9 01:13:19.980: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:13:21.979: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.01172761s
Feb  9 01:13:21.979: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:13:23.979: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.011708548s
Feb  9 01:13:23.979: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:13:25.980: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.012559289s
Feb  9 01:13:25.980: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:13:27.979: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.012025726s
Feb  9 01:13:27.979: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:13:29.980: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.012225916s
Feb  9 01:13:29.980: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Feb  9 01:13:29.980: INFO: Pod "netserver-0" satisfied condition "running and ready"
Feb  9 01:13:29.985: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-3201" to be "running and ready"
Feb  9 01:13:29.991: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 5.392421ms
Feb  9 01:13:29.991: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Feb  9 01:13:29.991: INFO: Pod "netserver-1" satisfied condition "running and ready"
Feb  9 01:13:29.997: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-3201" to be "running and ready"
Feb  9 01:13:30.002: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 5.341721ms
Feb  9 01:13:30.002: INFO: The phase of Pod netserver-2 is Running (Ready = true)
Feb  9 01:13:30.002: INFO: Pod "netserver-2" satisfied condition "running and ready"
STEP: Creating test pods 02/09/23 01:13:30.008
Feb  9 01:13:30.017: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-3201" to be "running"
Feb  9 01:13:30.022: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.23412ms
Feb  9 01:13:32.028: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.011585034s
Feb  9 01:13:32.028: INFO: Pod "test-container-pod" satisfied condition "running"
Feb  9 01:13:32.034: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Feb  9 01:13:32.034: INFO: Breadth first check of 10.244.0.157 on host 10.224.0.4...
Feb  9 01:13:32.040: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.158:9080/dial?request=hostname&protocol=udp&host=10.244.0.157&port=8081&tries=1'] Namespace:pod-network-test-3201 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:13:32.040: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:13:32.040: INFO: ExecWithOptions: Clientset creation
Feb  9 01:13:32.040: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-3201/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.157%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Feb  9 01:13:32.140: INFO: Waiting for responses: map[]
Feb  9 01:13:32.140: INFO: reached 10.244.0.157 after 0/1 tries
Feb  9 01:13:32.140: INFO: Breadth first check of 10.244.1.66 on host 10.224.0.5...
Feb  9 01:13:32.146: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.158:9080/dial?request=hostname&protocol=udp&host=10.244.1.66&port=8081&tries=1'] Namespace:pod-network-test-3201 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:13:32.146: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:13:32.146: INFO: ExecWithOptions: Clientset creation
Feb  9 01:13:32.146: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-3201/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.66%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Feb  9 01:13:32.243: INFO: Waiting for responses: map[]
Feb  9 01:13:32.243: INFO: reached 10.244.1.66 after 0/1 tries
Feb  9 01:13:32.243: INFO: Breadth first check of 10.244.2.57 on host 10.224.0.6...
Feb  9 01:13:32.249: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.158:9080/dial?request=hostname&protocol=udp&host=10.244.2.57&port=8081&tries=1'] Namespace:pod-network-test-3201 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:13:32.249: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:13:32.250: INFO: ExecWithOptions: Clientset creation
Feb  9 01:13:32.250: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-3201/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.2.57%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Feb  9 01:13:32.338: INFO: Waiting for responses: map[]
Feb  9 01:13:32.338: INFO: reached 10.244.2.57 after 0/1 tries
Feb  9 01:13:32.339: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Feb  9 01:13:32.339: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-3201" for this suite. 02/09/23 01:13:32.348
------------------------------
â€¢ [SLOW TEST] [14.458 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:93

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:13:17.899
    Feb  9 01:13:17.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pod-network-test 02/09/23 01:13:17.9
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:17.919
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:17.923
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:93
    STEP: Performing setup for networking test in namespace pod-network-test-3201 02/09/23 01:13:17.927
    STEP: creating a selector 02/09/23 01:13:17.927
    STEP: Creating the service pods in kubernetes 02/09/23 01:13:17.927
    Feb  9 01:13:17.928: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Feb  9 01:13:17.967: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-3201" to be "running and ready"
    Feb  9 01:13:17.973: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 5.132112ms
    Feb  9 01:13:17.973: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:13:19.980: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.012534075s
    Feb  9 01:13:19.980: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:13:21.979: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.01172761s
    Feb  9 01:13:21.979: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:13:23.979: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.011708548s
    Feb  9 01:13:23.979: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:13:25.980: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.012559289s
    Feb  9 01:13:25.980: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:13:27.979: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.012025726s
    Feb  9 01:13:27.979: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:13:29.980: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.012225916s
    Feb  9 01:13:29.980: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Feb  9 01:13:29.980: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Feb  9 01:13:29.985: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-3201" to be "running and ready"
    Feb  9 01:13:29.991: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 5.392421ms
    Feb  9 01:13:29.991: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Feb  9 01:13:29.991: INFO: Pod "netserver-1" satisfied condition "running and ready"
    Feb  9 01:13:29.997: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-3201" to be "running and ready"
    Feb  9 01:13:30.002: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 5.341721ms
    Feb  9 01:13:30.002: INFO: The phase of Pod netserver-2 is Running (Ready = true)
    Feb  9 01:13:30.002: INFO: Pod "netserver-2" satisfied condition "running and ready"
    STEP: Creating test pods 02/09/23 01:13:30.008
    Feb  9 01:13:30.017: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-3201" to be "running"
    Feb  9 01:13:30.022: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.23412ms
    Feb  9 01:13:32.028: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.011585034s
    Feb  9 01:13:32.028: INFO: Pod "test-container-pod" satisfied condition "running"
    Feb  9 01:13:32.034: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
    Feb  9 01:13:32.034: INFO: Breadth first check of 10.244.0.157 on host 10.224.0.4...
    Feb  9 01:13:32.040: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.158:9080/dial?request=hostname&protocol=udp&host=10.244.0.157&port=8081&tries=1'] Namespace:pod-network-test-3201 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:13:32.040: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:13:32.040: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:13:32.040: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-3201/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.157%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Feb  9 01:13:32.140: INFO: Waiting for responses: map[]
    Feb  9 01:13:32.140: INFO: reached 10.244.0.157 after 0/1 tries
    Feb  9 01:13:32.140: INFO: Breadth first check of 10.244.1.66 on host 10.224.0.5...
    Feb  9 01:13:32.146: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.158:9080/dial?request=hostname&protocol=udp&host=10.244.1.66&port=8081&tries=1'] Namespace:pod-network-test-3201 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:13:32.146: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:13:32.146: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:13:32.146: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-3201/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.66%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Feb  9 01:13:32.243: INFO: Waiting for responses: map[]
    Feb  9 01:13:32.243: INFO: reached 10.244.1.66 after 0/1 tries
    Feb  9 01:13:32.243: INFO: Breadth first check of 10.244.2.57 on host 10.224.0.6...
    Feb  9 01:13:32.249: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.158:9080/dial?request=hostname&protocol=udp&host=10.244.2.57&port=8081&tries=1'] Namespace:pod-network-test-3201 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:13:32.249: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:13:32.250: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:13:32.250: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-3201/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.2.57%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Feb  9 01:13:32.338: INFO: Waiting for responses: map[]
    Feb  9 01:13:32.338: INFO: reached 10.244.2.57 after 0/1 tries
    Feb  9 01:13:32.339: INFO: Going to retry 0 out of 3 pods....
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:13:32.339: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-3201" for this suite. 02/09/23 01:13:32.348
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/kubectl/kubectl.go:962
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:13:32.359
Feb  9 01:13:32.359: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:13:32.36
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:32.381
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:32.385
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/kubectl/kubectl.go:962
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 02/09/23 01:13:32.389
Feb  9 01:13:32.390: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5323 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Feb  9 01:13:32.467: INFO: stderr: ""
Feb  9 01:13:32.467: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run 02/09/23 01:13:32.467
Feb  9 01:13:32.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5323 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
Feb  9 01:13:32.643: INFO: stderr: ""
Feb  9 01:13:32.643: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 02/09/23 01:13:32.643
Feb  9 01:13:32.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5323 delete pods e2e-test-httpd-pod'
Feb  9 01:13:34.194: INFO: stderr: ""
Feb  9 01:13:34.194: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:13:34.194: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-5323" for this suite. 02/09/23 01:13:34.203
------------------------------
â€¢ [1.853 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl server-side dry-run
  test/e2e/kubectl/kubectl.go:956
    should check if kubectl can dry-run update Pods [Conformance]
    test/e2e/kubectl/kubectl.go:962

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:13:32.359
    Feb  9 01:13:32.359: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:13:32.36
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:32.381
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:32.385
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl can dry-run update Pods [Conformance]
      test/e2e/kubectl/kubectl.go:962
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 02/09/23 01:13:32.389
    Feb  9 01:13:32.390: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5323 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
    Feb  9 01:13:32.467: INFO: stderr: ""
    Feb  9 01:13:32.467: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: replace the image in the pod with server-side dry-run 02/09/23 01:13:32.467
    Feb  9 01:13:32.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5323 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
    Feb  9 01:13:32.643: INFO: stderr: ""
    Feb  9 01:13:32.643: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
    STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 02/09/23 01:13:32.643
    Feb  9 01:13:32.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5323 delete pods e2e-test-httpd-pod'
    Feb  9 01:13:34.194: INFO: stderr: ""
    Feb  9 01:13:34.194: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:13:34.194: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-5323" for this suite. 02/09/23 01:13:34.203
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Downward API
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:13:34.212
Feb  9 01:13:34.212: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:13:34.214
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:34.233
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:34.237
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90
STEP: Creating a pod to test downward api env vars 02/09/23 01:13:34.241
Feb  9 01:13:34.253: INFO: Waiting up to 5m0s for pod "downward-api-803c6eab-565a-486a-b6af-7c01daf40609" in namespace "downward-api-6829" to be "Succeeded or Failed"
Feb  9 01:13:34.258: INFO: Pod "downward-api-803c6eab-565a-486a-b6af-7c01daf40609": Phase="Pending", Reason="", readiness=false. Elapsed: 5.470021ms
Feb  9 01:13:36.266: INFO: Pod "downward-api-803c6eab-565a-486a-b6af-7c01daf40609": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012887926s
Feb  9 01:13:38.264: INFO: Pod "downward-api-803c6eab-565a-486a-b6af-7c01daf40609": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011161387s
STEP: Saw pod success 02/09/23 01:13:38.264
Feb  9 01:13:38.264: INFO: Pod "downward-api-803c6eab-565a-486a-b6af-7c01daf40609" satisfied condition "Succeeded or Failed"
Feb  9 01:13:38.270: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downward-api-803c6eab-565a-486a-b6af-7c01daf40609 container dapi-container: <nil>
STEP: delete the pod 02/09/23 01:13:38.282
Feb  9 01:13:38.299: INFO: Waiting for pod downward-api-803c6eab-565a-486a-b6af-7c01daf40609 to disappear
Feb  9 01:13:38.304: INFO: Pod downward-api-803c6eab-565a-486a-b6af-7c01daf40609 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Feb  9 01:13:38.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-6829" for this suite. 02/09/23 01:13:38.313
------------------------------
â€¢ [4.109 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:13:34.212
    Feb  9 01:13:34.212: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:13:34.214
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:34.233
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:34.237
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide host IP as an env var [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:90
    STEP: Creating a pod to test downward api env vars 02/09/23 01:13:34.241
    Feb  9 01:13:34.253: INFO: Waiting up to 5m0s for pod "downward-api-803c6eab-565a-486a-b6af-7c01daf40609" in namespace "downward-api-6829" to be "Succeeded or Failed"
    Feb  9 01:13:34.258: INFO: Pod "downward-api-803c6eab-565a-486a-b6af-7c01daf40609": Phase="Pending", Reason="", readiness=false. Elapsed: 5.470021ms
    Feb  9 01:13:36.266: INFO: Pod "downward-api-803c6eab-565a-486a-b6af-7c01daf40609": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012887926s
    Feb  9 01:13:38.264: INFO: Pod "downward-api-803c6eab-565a-486a-b6af-7c01daf40609": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011161387s
    STEP: Saw pod success 02/09/23 01:13:38.264
    Feb  9 01:13:38.264: INFO: Pod "downward-api-803c6eab-565a-486a-b6af-7c01daf40609" satisfied condition "Succeeded or Failed"
    Feb  9 01:13:38.270: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downward-api-803c6eab-565a-486a-b6af-7c01daf40609 container dapi-container: <nil>
    STEP: delete the pod 02/09/23 01:13:38.282
    Feb  9 01:13:38.299: INFO: Waiting for pod downward-api-803c6eab-565a-486a-b6af-7c01daf40609 to disappear
    Feb  9 01:13:38.304: INFO: Pod downward-api-803c6eab-565a-486a-b6af-7c01daf40609 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:13:38.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-6829" for this suite. 02/09/23 01:13:38.313
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:13:38.325
Feb  9 01:13:38.326: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename security-context 02/09/23 01:13:38.326
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:38.35
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:38.355
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 02/09/23 01:13:38.359
Feb  9 01:13:38.371: INFO: Waiting up to 5m0s for pod "security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021" in namespace "security-context-5134" to be "Succeeded or Failed"
Feb  9 01:13:38.377: INFO: Pod "security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021": Phase="Pending", Reason="", readiness=false. Elapsed: 5.440321ms
Feb  9 01:13:40.383: INFO: Pod "security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011567113s
Feb  9 01:13:42.383: INFO: Pod "security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012049982s
STEP: Saw pod success 02/09/23 01:13:42.383
Feb  9 01:13:42.384: INFO: Pod "security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021" satisfied condition "Succeeded or Failed"
Feb  9 01:13:42.389: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021 container test-container: <nil>
STEP: delete the pod 02/09/23 01:13:42.408
Feb  9 01:13:42.424: INFO: Waiting for pod security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021 to disappear
Feb  9 01:13:42.429: INFO: Pod security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Feb  9 01:13:42.429: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-5134" for this suite. 02/09/23 01:13:42.438
------------------------------
â€¢ [4.122 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:13:38.325
    Feb  9 01:13:38.326: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename security-context 02/09/23 01:13:38.326
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:38.35
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:38.355
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
      test/e2e/node/security_context.go:129
    STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 02/09/23 01:13:38.359
    Feb  9 01:13:38.371: INFO: Waiting up to 5m0s for pod "security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021" in namespace "security-context-5134" to be "Succeeded or Failed"
    Feb  9 01:13:38.377: INFO: Pod "security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021": Phase="Pending", Reason="", readiness=false. Elapsed: 5.440321ms
    Feb  9 01:13:40.383: INFO: Pod "security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011567113s
    Feb  9 01:13:42.383: INFO: Pod "security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012049982s
    STEP: Saw pod success 02/09/23 01:13:42.383
    Feb  9 01:13:42.384: INFO: Pod "security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021" satisfied condition "Succeeded or Failed"
    Feb  9 01:13:42.389: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021 container test-container: <nil>
    STEP: delete the pod 02/09/23 01:13:42.408
    Feb  9 01:13:42.424: INFO: Waiting for pod security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021 to disappear
    Feb  9 01:13:42.429: INFO: Pod security-context-fd99a988-ba8c-4ec3-93c2-96b3312d0021 no longer exists
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:13:42.429: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-5134" for this suite. 02/09/23 01:13:42.438
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:13:42.448
Feb  9 01:13:42.448: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 01:13:42.448
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:42.467
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:42.471
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107
STEP: Creating a pod to test emptydir 0666 on tmpfs 02/09/23 01:13:42.475
Feb  9 01:13:42.488: INFO: Waiting up to 5m0s for pod "pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07" in namespace "emptydir-5546" to be "Succeeded or Failed"
Feb  9 01:13:42.493: INFO: Pod "pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07": Phase="Pending", Reason="", readiness=false. Elapsed: 5.33652ms
Feb  9 01:13:44.500: INFO: Pod "pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011647584s
Feb  9 01:13:46.501: INFO: Pod "pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012768318s
STEP: Saw pod success 02/09/23 01:13:46.501
Feb  9 01:13:46.501: INFO: Pod "pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07" satisfied condition "Succeeded or Failed"
Feb  9 01:13:46.507: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07 container test-container: <nil>
STEP: delete the pod 02/09/23 01:13:46.519
Feb  9 01:13:46.538: INFO: Waiting for pod pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07 to disappear
Feb  9 01:13:46.551: INFO: Pod pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:13:46.551: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-5546" for this suite. 02/09/23 01:13:46.56
------------------------------
â€¢ [4.121 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:13:42.448
    Feb  9 01:13:42.448: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 01:13:42.448
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:42.467
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:42.471
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:107
    STEP: Creating a pod to test emptydir 0666 on tmpfs 02/09/23 01:13:42.475
    Feb  9 01:13:42.488: INFO: Waiting up to 5m0s for pod "pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07" in namespace "emptydir-5546" to be "Succeeded or Failed"
    Feb  9 01:13:42.493: INFO: Pod "pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07": Phase="Pending", Reason="", readiness=false. Elapsed: 5.33652ms
    Feb  9 01:13:44.500: INFO: Pod "pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011647584s
    Feb  9 01:13:46.501: INFO: Pod "pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012768318s
    STEP: Saw pod success 02/09/23 01:13:46.501
    Feb  9 01:13:46.501: INFO: Pod "pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07" satisfied condition "Succeeded or Failed"
    Feb  9 01:13:46.507: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07 container test-container: <nil>
    STEP: delete the pod 02/09/23 01:13:46.519
    Feb  9 01:13:46.538: INFO: Waiting for pod pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07 to disappear
    Feb  9 01:13:46.551: INFO: Pod pod-db78d1e9-2d86-47e1-8d15-1b71d4ab3c07 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:13:46.551: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-5546" for this suite. 02/09/23 01:13:46.56
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:13:46.57
Feb  9 01:13:46.570: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 01:13:46.57
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:46.589
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:46.593
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 01:13:46.613
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:13:47.159
STEP: Deploying the webhook pod 02/09/23 01:13:47.171
STEP: Wait for the deployment to be ready 02/09/23 01:13:47.185
Feb  9 01:13:47.198: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 01:13:49.217
STEP: Verifying the service has paired with the endpoint 02/09/23 01:13:49.231
Feb  9 01:13:50.232: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117
STEP: fetching the /apis discovery document 02/09/23 01:13:50.238
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document 02/09/23 01:13:50.241
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document 02/09/23 01:13:50.241
STEP: fetching the /apis/admissionregistration.k8s.io discovery document 02/09/23 01:13:50.242
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document 02/09/23 01:13:50.244
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document 02/09/23 01:13:50.244
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document 02/09/23 01:13:50.246
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:13:50.246: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-8174" for this suite. 02/09/23 01:13:50.306
STEP: Destroying namespace "webhook-8174-markers" for this suite. 02/09/23 01:13:50.316
------------------------------
â€¢ [3.756 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:13:46.57
    Feb  9 01:13:46.570: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 01:13:46.57
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:46.589
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:46.593
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 01:13:46.613
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:13:47.159
    STEP: Deploying the webhook pod 02/09/23 01:13:47.171
    STEP: Wait for the deployment to be ready 02/09/23 01:13:47.185
    Feb  9 01:13:47.198: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 01:13:49.217
    STEP: Verifying the service has paired with the endpoint 02/09/23 01:13:49.231
    Feb  9 01:13:50.232: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should include webhook resources in discovery documents [Conformance]
      test/e2e/apimachinery/webhook.go:117
    STEP: fetching the /apis discovery document 02/09/23 01:13:50.238
    STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document 02/09/23 01:13:50.241
    STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document 02/09/23 01:13:50.241
    STEP: fetching the /apis/admissionregistration.k8s.io discovery document 02/09/23 01:13:50.242
    STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document 02/09/23 01:13:50.244
    STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document 02/09/23 01:13:50.244
    STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document 02/09/23 01:13:50.246
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:13:50.246: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-8174" for this suite. 02/09/23 01:13:50.306
    STEP: Destroying namespace "webhook-8174-markers" for this suite. 02/09/23 01:13:50.316
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Should recreate evicted statefulset [Conformance]
  test/e2e/apps/statefulset.go:739
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:13:50.331
Feb  9 01:13:50.332: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename statefulset 02/09/23 01:13:50.334
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:50.381
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:50.387
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-2389 02/09/23 01:13:50.392
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/apps/statefulset.go:739
STEP: Looking for a node to schedule stateful set and pod 02/09/23 01:13:50.401
STEP: Creating pod with conflicting port in namespace statefulset-2389 02/09/23 01:13:50.407
STEP: Waiting until pod test-pod will start running in namespace statefulset-2389 02/09/23 01:13:50.419
Feb  9 01:13:50.419: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "statefulset-2389" to be "running"
Feb  9 01:13:50.425: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.517322ms
Feb  9 01:13:52.431: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.012060573s
Feb  9 01:13:52.431: INFO: Pod "test-pod" satisfied condition "running"
STEP: Creating statefulset with conflicting port in namespace statefulset-2389 02/09/23 01:13:52.431
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-2389 02/09/23 01:13:52.44
Feb  9 01:13:52.458: INFO: Observed stateful pod in namespace: statefulset-2389, name: ss-0, uid: 1b9b37ee-36e0-48b7-a6aa-830df1b95ddb, status phase: Pending. Waiting for statefulset controller to delete.
Feb  9 01:13:52.478: INFO: Observed stateful pod in namespace: statefulset-2389, name: ss-0, uid: 1b9b37ee-36e0-48b7-a6aa-830df1b95ddb, status phase: Failed. Waiting for statefulset controller to delete.
Feb  9 01:13:52.487: INFO: Observed stateful pod in namespace: statefulset-2389, name: ss-0, uid: 1b9b37ee-36e0-48b7-a6aa-830df1b95ddb, status phase: Failed. Waiting for statefulset controller to delete.
Feb  9 01:13:52.503: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-2389
STEP: Removing pod with conflicting port in namespace statefulset-2389 02/09/23 01:13:52.503
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-2389 and will be in running state 02/09/23 01:13:52.516
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Feb  9 01:13:54.529: INFO: Deleting all statefulset in ns statefulset-2389
Feb  9 01:13:54.535: INFO: Scaling statefulset ss to 0
Feb  9 01:14:04.562: INFO: Waiting for statefulset status.replicas updated to 0
Feb  9 01:14:04.568: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Feb  9 01:14:04.588: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-2389" for this suite. 02/09/23 01:14:04.597
------------------------------
â€¢ [SLOW TEST] [14.274 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Should recreate evicted statefulset [Conformance]
    test/e2e/apps/statefulset.go:739

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:13:50.331
    Feb  9 01:13:50.332: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename statefulset 02/09/23 01:13:50.334
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:13:50.381
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:13:50.387
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-2389 02/09/23 01:13:50.392
    [It] Should recreate evicted statefulset [Conformance]
      test/e2e/apps/statefulset.go:739
    STEP: Looking for a node to schedule stateful set and pod 02/09/23 01:13:50.401
    STEP: Creating pod with conflicting port in namespace statefulset-2389 02/09/23 01:13:50.407
    STEP: Waiting until pod test-pod will start running in namespace statefulset-2389 02/09/23 01:13:50.419
    Feb  9 01:13:50.419: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "statefulset-2389" to be "running"
    Feb  9 01:13:50.425: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.517322ms
    Feb  9 01:13:52.431: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.012060573s
    Feb  9 01:13:52.431: INFO: Pod "test-pod" satisfied condition "running"
    STEP: Creating statefulset with conflicting port in namespace statefulset-2389 02/09/23 01:13:52.431
    STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-2389 02/09/23 01:13:52.44
    Feb  9 01:13:52.458: INFO: Observed stateful pod in namespace: statefulset-2389, name: ss-0, uid: 1b9b37ee-36e0-48b7-a6aa-830df1b95ddb, status phase: Pending. Waiting for statefulset controller to delete.
    Feb  9 01:13:52.478: INFO: Observed stateful pod in namespace: statefulset-2389, name: ss-0, uid: 1b9b37ee-36e0-48b7-a6aa-830df1b95ddb, status phase: Failed. Waiting for statefulset controller to delete.
    Feb  9 01:13:52.487: INFO: Observed stateful pod in namespace: statefulset-2389, name: ss-0, uid: 1b9b37ee-36e0-48b7-a6aa-830df1b95ddb, status phase: Failed. Waiting for statefulset controller to delete.
    Feb  9 01:13:52.503: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-2389
    STEP: Removing pod with conflicting port in namespace statefulset-2389 02/09/23 01:13:52.503
    STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-2389 and will be in running state 02/09/23 01:13:52.516
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Feb  9 01:13:54.529: INFO: Deleting all statefulset in ns statefulset-2389
    Feb  9 01:13:54.535: INFO: Scaling statefulset ss to 0
    Feb  9 01:14:04.562: INFO: Waiting for statefulset status.replicas updated to 0
    Feb  9 01:14:04.568: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:14:04.588: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-2389" for this suite. 02/09/23 01:14:04.597
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:14:04.608
Feb  9 01:14:04.608: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:14:04.609
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:04.631
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:04.636
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44
STEP: Creating a pod to test downward api env vars 02/09/23 01:14:04.64
Feb  9 01:14:04.653: INFO: Waiting up to 5m0s for pod "downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b" in namespace "downward-api-2811" to be "Succeeded or Failed"
Feb  9 01:14:04.658: INFO: Pod "downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.307033ms
Feb  9 01:14:06.665: INFO: Pod "downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012521589s
Feb  9 01:14:08.664: INFO: Pod "downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011417058s
STEP: Saw pod success 02/09/23 01:14:08.664
Feb  9 01:14:08.665: INFO: Pod "downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b" satisfied condition "Succeeded or Failed"
Feb  9 01:14:08.670: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b container dapi-container: <nil>
STEP: delete the pod 02/09/23 01:14:08.683
Feb  9 01:14:08.700: INFO: Waiting for pod downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b to disappear
Feb  9 01:14:08.705: INFO: Pod downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Feb  9 01:14:08.705: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-2811" for this suite. 02/09/23 01:14:08.713
------------------------------
â€¢ [4.115 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:14:04.608
    Feb  9 01:14:04.608: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:14:04.609
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:04.631
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:04.636
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:44
    STEP: Creating a pod to test downward api env vars 02/09/23 01:14:04.64
    Feb  9 01:14:04.653: INFO: Waiting up to 5m0s for pod "downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b" in namespace "downward-api-2811" to be "Succeeded or Failed"
    Feb  9 01:14:04.658: INFO: Pod "downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.307033ms
    Feb  9 01:14:06.665: INFO: Pod "downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012521589s
    Feb  9 01:14:08.664: INFO: Pod "downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011417058s
    STEP: Saw pod success 02/09/23 01:14:08.664
    Feb  9 01:14:08.665: INFO: Pod "downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b" satisfied condition "Succeeded or Failed"
    Feb  9 01:14:08.670: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b container dapi-container: <nil>
    STEP: delete the pod 02/09/23 01:14:08.683
    Feb  9 01:14:08.700: INFO: Waiting for pod downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b to disappear
    Feb  9 01:14:08.705: INFO: Pod downward-api-12bae4d9-6cc4-483f-a7c6-9d90b0c86a2b no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:14:08.705: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-2811" for this suite. 02/09/23 01:14:08.713
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:14:08.725
Feb  9 01:14:08.725: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename replicaset 02/09/23 01:14:08.726
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:08.747
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:08.751
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165
STEP: Create a ReplicaSet 02/09/23 01:14:08.756
STEP: Verify that the required pods have come up 02/09/23 01:14:08.763
Feb  9 01:14:08.768: INFO: Pod name sample-pod: Found 0 pods out of 3
Feb  9 01:14:13.774: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running 02/09/23 01:14:13.774
Feb  9 01:14:13.780: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets 02/09/23 01:14:13.78
STEP: DeleteCollection of the ReplicaSets 02/09/23 01:14:13.788
STEP: After DeleteCollection verify that ReplicaSets have been deleted 02/09/23 01:14:13.801
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Feb  9 01:14:13.808: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-294" for this suite. 02/09/23 01:14:13.817
------------------------------
â€¢ [SLOW TEST] [5.106 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:14:08.725
    Feb  9 01:14:08.725: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename replicaset 02/09/23 01:14:08.726
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:08.747
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:08.751
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should list and delete a collection of ReplicaSets [Conformance]
      test/e2e/apps/replica_set.go:165
    STEP: Create a ReplicaSet 02/09/23 01:14:08.756
    STEP: Verify that the required pods have come up 02/09/23 01:14:08.763
    Feb  9 01:14:08.768: INFO: Pod name sample-pod: Found 0 pods out of 3
    Feb  9 01:14:13.774: INFO: Pod name sample-pod: Found 3 pods out of 3
    STEP: ensuring each pod is running 02/09/23 01:14:13.774
    Feb  9 01:14:13.780: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
    STEP: Listing all ReplicaSets 02/09/23 01:14:13.78
    STEP: DeleteCollection of the ReplicaSets 02/09/23 01:14:13.788
    STEP: After DeleteCollection verify that ReplicaSets have been deleted 02/09/23 01:14:13.801
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:14:13.808: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-294" for this suite. 02/09/23 01:14:13.817
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:14:13.835
Feb  9 01:14:13.835: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename watch 02/09/23 01:14:13.835
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:13.853
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:13.858
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334
STEP: getting a starting resourceVersion 02/09/23 01:14:13.863
STEP: starting a background goroutine to produce watch events 02/09/23 01:14:13.869
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order 02/09/23 01:14:13.869
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Feb  9 01:14:16.642: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-1745" for this suite. 02/09/23 01:14:16.697
------------------------------
â€¢ [2.911 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:14:13.835
    Feb  9 01:14:13.835: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename watch 02/09/23 01:14:13.835
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:13.853
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:13.858
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should receive events on concurrent watches in same order [Conformance]
      test/e2e/apimachinery/watch.go:334
    STEP: getting a starting resourceVersion 02/09/23 01:14:13.863
    STEP: starting a background goroutine to produce watch events 02/09/23 01:14:13.869
    STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order 02/09/23 01:14:13.869
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:14:16.642: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-1745" for this suite. 02/09/23 01:14:16.697
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:14:16.75
Feb  9 01:14:16.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:14:16.751
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:16.77
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:16.775
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162
STEP: Creating the pod 02/09/23 01:14:16.779
Feb  9 01:14:16.793: INFO: Waiting up to 5m0s for pod "annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5" in namespace "downward-api-3740" to be "running and ready"
Feb  9 01:14:16.799: INFO: Pod "annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5": Phase="Pending", Reason="", readiness=false. Elapsed: 5.768416ms
Feb  9 01:14:16.799: INFO: The phase of Pod annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:14:18.807: INFO: Pod "annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5": Phase="Running", Reason="", readiness=true. Elapsed: 2.013280754s
Feb  9 01:14:18.807: INFO: The phase of Pod annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5 is Running (Ready = true)
Feb  9 01:14:18.807: INFO: Pod "annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5" satisfied condition "running and ready"
Feb  9 01:14:19.343: INFO: Successfully updated pod "annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Feb  9 01:14:21.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-3740" for this suite. 02/09/23 01:14:21.387
------------------------------
â€¢ [4.646 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:14:16.75
    Feb  9 01:14:16.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:14:16.751
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:16.77
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:16.775
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should update annotations on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:162
    STEP: Creating the pod 02/09/23 01:14:16.779
    Feb  9 01:14:16.793: INFO: Waiting up to 5m0s for pod "annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5" in namespace "downward-api-3740" to be "running and ready"
    Feb  9 01:14:16.799: INFO: Pod "annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5": Phase="Pending", Reason="", readiness=false. Elapsed: 5.768416ms
    Feb  9 01:14:16.799: INFO: The phase of Pod annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:14:18.807: INFO: Pod "annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5": Phase="Running", Reason="", readiness=true. Elapsed: 2.013280754s
    Feb  9 01:14:18.807: INFO: The phase of Pod annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5 is Running (Ready = true)
    Feb  9 01:14:18.807: INFO: Pod "annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5" satisfied condition "running and ready"
    Feb  9 01:14:19.343: INFO: Successfully updated pod "annotationupdateb594ae15-bf34-4e90-81bc-2974c336cca5"
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:14:21.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-3740" for this suite. 02/09/23 01:14:21.387
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:14:21.398
Feb  9 01:14:21.398: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pods 02/09/23 01:14:21.399
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:21.417
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:21.422
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845
STEP: Create set of pods 02/09/23 01:14:21.427
Feb  9 01:14:21.442: INFO: created test-pod-1
Feb  9 01:14:21.450: INFO: created test-pod-2
Feb  9 01:14:21.459: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running 02/09/23 01:14:21.459
Feb  9 01:14:21.459: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-8842' to be running and ready
Feb  9 01:14:21.476: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Feb  9 01:14:21.476: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Feb  9 01:14:21.476: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Feb  9 01:14:21.476: INFO: 0 / 3 pods in namespace 'pods-8842' are running and ready (0 seconds elapsed)
Feb  9 01:14:21.476: INFO: expected 0 pod replicas in namespace 'pods-8842', 0 are Running and Ready.
Feb  9 01:14:21.476: INFO: POD         NODE                           PHASE    GRACE  CONDITIONS
Feb  9 01:14:21.476: INFO: test-pod-1  aks-nodes-15799032-vmss000000  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC  }]
Feb  9 01:14:21.476: INFO: test-pod-2  aks-nodes-15799032-vmss000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC  }]
Feb  9 01:14:21.476: INFO: test-pod-3  aks-nodes-15799032-vmss000000  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC  }]
Feb  9 01:14:21.476: INFO: 
Feb  9 01:14:23.494: INFO: 3 / 3 pods in namespace 'pods-8842' are running and ready (2 seconds elapsed)
Feb  9 01:14:23.494: INFO: expected 0 pod replicas in namespace 'pods-8842', 0 are Running and Ready.
STEP: waiting for all pods to be deleted 02/09/23 01:14:23.524
Feb  9 01:14:23.531: INFO: Pod quantity 3 is different from expected quantity 0
Feb  9 01:14:24.538: INFO: Pod quantity 3 is different from expected quantity 0
Feb  9 01:14:25.538: INFO: Pod quantity 1 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Feb  9 01:14:26.538: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-8842" for this suite. 02/09/23 01:14:26.547
------------------------------
â€¢ [SLOW TEST] [5.159 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:14:21.398
    Feb  9 01:14:21.398: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pods 02/09/23 01:14:21.399
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:21.417
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:21.422
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should delete a collection of pods [Conformance]
      test/e2e/common/node/pods.go:845
    STEP: Create set of pods 02/09/23 01:14:21.427
    Feb  9 01:14:21.442: INFO: created test-pod-1
    Feb  9 01:14:21.450: INFO: created test-pod-2
    Feb  9 01:14:21.459: INFO: created test-pod-3
    STEP: waiting for all 3 pods to be running 02/09/23 01:14:21.459
    Feb  9 01:14:21.459: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-8842' to be running and ready
    Feb  9 01:14:21.476: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Feb  9 01:14:21.476: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Feb  9 01:14:21.476: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Feb  9 01:14:21.476: INFO: 0 / 3 pods in namespace 'pods-8842' are running and ready (0 seconds elapsed)
    Feb  9 01:14:21.476: INFO: expected 0 pod replicas in namespace 'pods-8842', 0 are Running and Ready.
    Feb  9 01:14:21.476: INFO: POD         NODE                           PHASE    GRACE  CONDITIONS
    Feb  9 01:14:21.476: INFO: test-pod-1  aks-nodes-15799032-vmss000000  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC  }]
    Feb  9 01:14:21.476: INFO: test-pod-2  aks-nodes-15799032-vmss000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC  }]
    Feb  9 01:14:21.476: INFO: test-pod-3  aks-nodes-15799032-vmss000000  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:14:21 +0000 UTC  }]
    Feb  9 01:14:21.476: INFO: 
    Feb  9 01:14:23.494: INFO: 3 / 3 pods in namespace 'pods-8842' are running and ready (2 seconds elapsed)
    Feb  9 01:14:23.494: INFO: expected 0 pod replicas in namespace 'pods-8842', 0 are Running and Ready.
    STEP: waiting for all pods to be deleted 02/09/23 01:14:23.524
    Feb  9 01:14:23.531: INFO: Pod quantity 3 is different from expected quantity 0
    Feb  9 01:14:24.538: INFO: Pod quantity 3 is different from expected quantity 0
    Feb  9 01:14:25.538: INFO: Pod quantity 1 is different from expected quantity 0
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:14:26.538: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-8842" for this suite. 02/09/23 01:14:26.547
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:14:26.559
Feb  9 01:14:26.559: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 01:14:26.56
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:26.579
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:26.583
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 01:14:26.603
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:14:27.113
STEP: Deploying the webhook pod 02/09/23 01:14:27.123
STEP: Wait for the deployment to be ready 02/09/23 01:14:27.137
Feb  9 01:14:27.150: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 01:14:29.169
STEP: Verifying the service has paired with the endpoint 02/09/23 01:14:29.184
Feb  9 01:14:30.185: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264
STEP: Registering the mutating pod webhook via the AdmissionRegistration API 02/09/23 01:14:30.191
STEP: create a pod that should be updated by the webhook 02/09/23 01:14:30.214
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:14:30.252: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-2569" for this suite. 02/09/23 01:14:30.315
STEP: Destroying namespace "webhook-2569-markers" for this suite. 02/09/23 01:14:30.325
------------------------------
â€¢ [3.774 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:14:26.559
    Feb  9 01:14:26.559: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 01:14:26.56
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:26.579
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:26.583
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 01:14:26.603
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:14:27.113
    STEP: Deploying the webhook pod 02/09/23 01:14:27.123
    STEP: Wait for the deployment to be ready 02/09/23 01:14:27.137
    Feb  9 01:14:27.150: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 01:14:29.169
    STEP: Verifying the service has paired with the endpoint 02/09/23 01:14:29.184
    Feb  9 01:14:30.185: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate pod and apply defaults after mutation [Conformance]
      test/e2e/apimachinery/webhook.go:264
    STEP: Registering the mutating pod webhook via the AdmissionRegistration API 02/09/23 01:14:30.191
    STEP: create a pod that should be updated by the webhook 02/09/23 01:14:30.214
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:14:30.252: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-2569" for this suite. 02/09/23 01:14:30.315
    STEP: Destroying namespace "webhook-2569-markers" for this suite. 02/09/23 01:14:30.325
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:14:30.335
Feb  9 01:14:30.335: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:14:30.336
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:30.356
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:30.36
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99
STEP: Creating configMap with name projected-configmap-test-volume-map-96bb5a6e-76de-41f3-abd5-96532148589a 02/09/23 01:14:30.365
STEP: Creating a pod to test consume configMaps 02/09/23 01:14:30.371
Feb  9 01:14:30.384: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d" in namespace "projected-4454" to be "Succeeded or Failed"
Feb  9 01:14:30.389: INFO: Pod "pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d": Phase="Pending", Reason="", readiness=false. Elapsed: 5.35252ms
Feb  9 01:14:32.396: INFO: Pod "pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012135092s
Feb  9 01:14:34.398: INFO: Pod "pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013961033s
STEP: Saw pod success 02/09/23 01:14:34.398
Feb  9 01:14:34.398: INFO: Pod "pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d" satisfied condition "Succeeded or Failed"
Feb  9 01:14:34.405: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d container agnhost-container: <nil>
STEP: delete the pod 02/09/23 01:14:34.417
Feb  9 01:14:34.437: INFO: Waiting for pod pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d to disappear
Feb  9 01:14:34.443: INFO: Pod pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:14:34.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4454" for this suite. 02/09/23 01:14:34.452
------------------------------
â€¢ [4.127 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:14:30.335
    Feb  9 01:14:30.335: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:14:30.336
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:30.356
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:30.36
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:99
    STEP: Creating configMap with name projected-configmap-test-volume-map-96bb5a6e-76de-41f3-abd5-96532148589a 02/09/23 01:14:30.365
    STEP: Creating a pod to test consume configMaps 02/09/23 01:14:30.371
    Feb  9 01:14:30.384: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d" in namespace "projected-4454" to be "Succeeded or Failed"
    Feb  9 01:14:30.389: INFO: Pod "pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d": Phase="Pending", Reason="", readiness=false. Elapsed: 5.35252ms
    Feb  9 01:14:32.396: INFO: Pod "pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012135092s
    Feb  9 01:14:34.398: INFO: Pod "pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013961033s
    STEP: Saw pod success 02/09/23 01:14:34.398
    Feb  9 01:14:34.398: INFO: Pod "pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d" satisfied condition "Succeeded or Failed"
    Feb  9 01:14:34.405: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 01:14:34.417
    Feb  9 01:14:34.437: INFO: Waiting for pod pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d to disappear
    Feb  9 01:14:34.443: INFO: Pod pod-projected-configmaps-1664ed7e-85e0-4507-8d71-55f5d4e94b1d no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:14:34.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4454" for this suite. 02/09/23 01:14:34.452
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:14:34.464
Feb  9 01:14:34.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename gc 02/09/23 01:14:34.464
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:34.484
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:34.488
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370
STEP: create the rc 02/09/23 01:14:34.5
STEP: delete the rc 02/09/23 01:14:39.519
STEP: wait for the rc to be deleted 02/09/23 01:14:39.536
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods 02/09/23 01:14:44.543
STEP: Gathering metrics 02/09/23 01:15:14.558
W0209 01:15:14.570302      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Feb  9 01:15:14.570: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Feb  9 01:15:14.570: INFO: Deleting pod "simpletest.rc-4982t" in namespace "gc-9950"
Feb  9 01:15:14.595: INFO: Deleting pod "simpletest.rc-6jf6p" in namespace "gc-9950"
Feb  9 01:15:14.614: INFO: Deleting pod "simpletest.rc-7khls" in namespace "gc-9950"
Feb  9 01:15:14.627: INFO: Deleting pod "simpletest.rc-7m4gg" in namespace "gc-9950"
Feb  9 01:15:14.643: INFO: Deleting pod "simpletest.rc-7q52z" in namespace "gc-9950"
Feb  9 01:15:14.663: INFO: Deleting pod "simpletest.rc-829zc" in namespace "gc-9950"
Feb  9 01:15:14.681: INFO: Deleting pod "simpletest.rc-8vbcm" in namespace "gc-9950"
Feb  9 01:15:14.699: INFO: Deleting pod "simpletest.rc-9dgs6" in namespace "gc-9950"
Feb  9 01:15:14.718: INFO: Deleting pod "simpletest.rc-9m85b" in namespace "gc-9950"
Feb  9 01:15:14.743: INFO: Deleting pod "simpletest.rc-b89cl" in namespace "gc-9950"
Feb  9 01:15:14.761: INFO: Deleting pod "simpletest.rc-bjxjz" in namespace "gc-9950"
Feb  9 01:15:14.775: INFO: Deleting pod "simpletest.rc-ctw7j" in namespace "gc-9950"
Feb  9 01:15:14.792: INFO: Deleting pod "simpletest.rc-dqrzl" in namespace "gc-9950"
Feb  9 01:15:14.805: INFO: Deleting pod "simpletest.rc-gbqrt" in namespace "gc-9950"
Feb  9 01:15:15.014: INFO: Deleting pod "simpletest.rc-gfn6d" in namespace "gc-9950"
Feb  9 01:15:15.027: INFO: Deleting pod "simpletest.rc-gqjhw" in namespace "gc-9950"
Feb  9 01:15:15.042: INFO: Deleting pod "simpletest.rc-h2zg5" in namespace "gc-9950"
Feb  9 01:15:15.054: INFO: Deleting pod "simpletest.rc-hc8kf" in namespace "gc-9950"
Feb  9 01:15:15.073: INFO: Deleting pod "simpletest.rc-hg8x7" in namespace "gc-9950"
Feb  9 01:15:15.088: INFO: Deleting pod "simpletest.rc-kv8kw" in namespace "gc-9950"
Feb  9 01:15:15.106: INFO: Deleting pod "simpletest.rc-lskmj" in namespace "gc-9950"
Feb  9 01:15:15.126: INFO: Deleting pod "simpletest.rc-lzv5l" in namespace "gc-9950"
Feb  9 01:15:15.151: INFO: Deleting pod "simpletest.rc-mmlzq" in namespace "gc-9950"
Feb  9 01:15:15.167: INFO: Deleting pod "simpletest.rc-n8vpz" in namespace "gc-9950"
Feb  9 01:15:15.188: INFO: Deleting pod "simpletest.rc-p8sd5" in namespace "gc-9950"
Feb  9 01:15:15.202: INFO: Deleting pod "simpletest.rc-plsl9" in namespace "gc-9950"
Feb  9 01:15:15.219: INFO: Deleting pod "simpletest.rc-ps582" in namespace "gc-9950"
Feb  9 01:15:15.234: INFO: Deleting pod "simpletest.rc-pvvws" in namespace "gc-9950"
Feb  9 01:15:15.251: INFO: Deleting pod "simpletest.rc-rprjs" in namespace "gc-9950"
Feb  9 01:15:15.264: INFO: Deleting pod "simpletest.rc-swgfd" in namespace "gc-9950"
Feb  9 01:15:15.278: INFO: Deleting pod "simpletest.rc-swmsl" in namespace "gc-9950"
Feb  9 01:15:15.293: INFO: Deleting pod "simpletest.rc-tb5tw" in namespace "gc-9950"
Feb  9 01:15:15.306: INFO: Deleting pod "simpletest.rc-thxvv" in namespace "gc-9950"
Feb  9 01:15:15.322: INFO: Deleting pod "simpletest.rc-v6dlf" in namespace "gc-9950"
Feb  9 01:15:15.335: INFO: Deleting pod "simpletest.rc-vwlsm" in namespace "gc-9950"
Feb  9 01:15:15.353: INFO: Deleting pod "simpletest.rc-vxvnx" in namespace "gc-9950"
Feb  9 01:15:15.370: INFO: Deleting pod "simpletest.rc-wgwlf" in namespace "gc-9950"
Feb  9 01:15:15.388: INFO: Deleting pod "simpletest.rc-wmg42" in namespace "gc-9950"
Feb  9 01:15:15.632: INFO: Deleting pod "simpletest.rc-wtshq" in namespace "gc-9950"
Feb  9 01:15:15.653: INFO: Deleting pod "simpletest.rc-xfkpv" in namespace "gc-9950"
Feb  9 01:15:15.671: INFO: Deleting pod "simpletest.rc-xrfx5" in namespace "gc-9950"
Feb  9 01:15:15.688: INFO: Deleting pod "simpletest.rc-z8jsx" in namespace "gc-9950"
Feb  9 01:15:15.708: INFO: Deleting pod "simpletest.rc-zhnvz" in namespace "gc-9950"
Feb  9 01:15:15.725: INFO: Deleting pod "simpletest.rc-zknw6" in namespace "gc-9950"
Feb  9 01:15:15.741: INFO: Deleting pod "simpletest.rc-zvzhq" in namespace "gc-9950"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Feb  9 01:15:15.756: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-9950" for this suite. 02/09/23 01:15:15.765
------------------------------
â€¢ [SLOW TEST] [41.311 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:14:34.464
    Feb  9 01:14:34.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename gc 02/09/23 01:14:34.464
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:14:34.484
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:14:34.488
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should orphan pods created by rc if delete options say so [Conformance]
      test/e2e/apimachinery/garbage_collector.go:370
    STEP: create the rc 02/09/23 01:14:34.5
    STEP: delete the rc 02/09/23 01:14:39.519
    STEP: wait for the rc to be deleted 02/09/23 01:14:39.536
    STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods 02/09/23 01:14:44.543
    STEP: Gathering metrics 02/09/23 01:15:14.558
    W0209 01:15:14.570302      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Feb  9 01:15:14.570: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    Feb  9 01:15:14.570: INFO: Deleting pod "simpletest.rc-4982t" in namespace "gc-9950"
    Feb  9 01:15:14.595: INFO: Deleting pod "simpletest.rc-6jf6p" in namespace "gc-9950"
    Feb  9 01:15:14.614: INFO: Deleting pod "simpletest.rc-7khls" in namespace "gc-9950"
    Feb  9 01:15:14.627: INFO: Deleting pod "simpletest.rc-7m4gg" in namespace "gc-9950"
    Feb  9 01:15:14.643: INFO: Deleting pod "simpletest.rc-7q52z" in namespace "gc-9950"
    Feb  9 01:15:14.663: INFO: Deleting pod "simpletest.rc-829zc" in namespace "gc-9950"
    Feb  9 01:15:14.681: INFO: Deleting pod "simpletest.rc-8vbcm" in namespace "gc-9950"
    Feb  9 01:15:14.699: INFO: Deleting pod "simpletest.rc-9dgs6" in namespace "gc-9950"
    Feb  9 01:15:14.718: INFO: Deleting pod "simpletest.rc-9m85b" in namespace "gc-9950"
    Feb  9 01:15:14.743: INFO: Deleting pod "simpletest.rc-b89cl" in namespace "gc-9950"
    Feb  9 01:15:14.761: INFO: Deleting pod "simpletest.rc-bjxjz" in namespace "gc-9950"
    Feb  9 01:15:14.775: INFO: Deleting pod "simpletest.rc-ctw7j" in namespace "gc-9950"
    Feb  9 01:15:14.792: INFO: Deleting pod "simpletest.rc-dqrzl" in namespace "gc-9950"
    Feb  9 01:15:14.805: INFO: Deleting pod "simpletest.rc-gbqrt" in namespace "gc-9950"
    Feb  9 01:15:15.014: INFO: Deleting pod "simpletest.rc-gfn6d" in namespace "gc-9950"
    Feb  9 01:15:15.027: INFO: Deleting pod "simpletest.rc-gqjhw" in namespace "gc-9950"
    Feb  9 01:15:15.042: INFO: Deleting pod "simpletest.rc-h2zg5" in namespace "gc-9950"
    Feb  9 01:15:15.054: INFO: Deleting pod "simpletest.rc-hc8kf" in namespace "gc-9950"
    Feb  9 01:15:15.073: INFO: Deleting pod "simpletest.rc-hg8x7" in namespace "gc-9950"
    Feb  9 01:15:15.088: INFO: Deleting pod "simpletest.rc-kv8kw" in namespace "gc-9950"
    Feb  9 01:15:15.106: INFO: Deleting pod "simpletest.rc-lskmj" in namespace "gc-9950"
    Feb  9 01:15:15.126: INFO: Deleting pod "simpletest.rc-lzv5l" in namespace "gc-9950"
    Feb  9 01:15:15.151: INFO: Deleting pod "simpletest.rc-mmlzq" in namespace "gc-9950"
    Feb  9 01:15:15.167: INFO: Deleting pod "simpletest.rc-n8vpz" in namespace "gc-9950"
    Feb  9 01:15:15.188: INFO: Deleting pod "simpletest.rc-p8sd5" in namespace "gc-9950"
    Feb  9 01:15:15.202: INFO: Deleting pod "simpletest.rc-plsl9" in namespace "gc-9950"
    Feb  9 01:15:15.219: INFO: Deleting pod "simpletest.rc-ps582" in namespace "gc-9950"
    Feb  9 01:15:15.234: INFO: Deleting pod "simpletest.rc-pvvws" in namespace "gc-9950"
    Feb  9 01:15:15.251: INFO: Deleting pod "simpletest.rc-rprjs" in namespace "gc-9950"
    Feb  9 01:15:15.264: INFO: Deleting pod "simpletest.rc-swgfd" in namespace "gc-9950"
    Feb  9 01:15:15.278: INFO: Deleting pod "simpletest.rc-swmsl" in namespace "gc-9950"
    Feb  9 01:15:15.293: INFO: Deleting pod "simpletest.rc-tb5tw" in namespace "gc-9950"
    Feb  9 01:15:15.306: INFO: Deleting pod "simpletest.rc-thxvv" in namespace "gc-9950"
    Feb  9 01:15:15.322: INFO: Deleting pod "simpletest.rc-v6dlf" in namespace "gc-9950"
    Feb  9 01:15:15.335: INFO: Deleting pod "simpletest.rc-vwlsm" in namespace "gc-9950"
    Feb  9 01:15:15.353: INFO: Deleting pod "simpletest.rc-vxvnx" in namespace "gc-9950"
    Feb  9 01:15:15.370: INFO: Deleting pod "simpletest.rc-wgwlf" in namespace "gc-9950"
    Feb  9 01:15:15.388: INFO: Deleting pod "simpletest.rc-wmg42" in namespace "gc-9950"
    Feb  9 01:15:15.632: INFO: Deleting pod "simpletest.rc-wtshq" in namespace "gc-9950"
    Feb  9 01:15:15.653: INFO: Deleting pod "simpletest.rc-xfkpv" in namespace "gc-9950"
    Feb  9 01:15:15.671: INFO: Deleting pod "simpletest.rc-xrfx5" in namespace "gc-9950"
    Feb  9 01:15:15.688: INFO: Deleting pod "simpletest.rc-z8jsx" in namespace "gc-9950"
    Feb  9 01:15:15.708: INFO: Deleting pod "simpletest.rc-zhnvz" in namespace "gc-9950"
    Feb  9 01:15:15.725: INFO: Deleting pod "simpletest.rc-zknw6" in namespace "gc-9950"
    Feb  9 01:15:15.741: INFO: Deleting pod "simpletest.rc-zvzhq" in namespace "gc-9950"
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:15:15.756: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-9950" for this suite. 02/09/23 01:15:15.765
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:15:15.775
Feb  9 01:15:15.775: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename namespaces 02/09/23 01:15:15.776
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:15:15.812
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:15:15.817
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299
STEP: Read namespace status 02/09/23 01:15:15.822
Feb  9 01:15:15.827: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
STEP: Patch namespace status 02/09/23 01:15:15.827
Feb  9 01:15:15.835: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
STEP: Update namespace status 02/09/23 01:15:15.835
Feb  9 01:15:15.849: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:15:15.849: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-7342" for this suite. 02/09/23 01:15:15.858
------------------------------
â€¢ [0.097 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:15:15.775
    Feb  9 01:15:15.775: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename namespaces 02/09/23 01:15:15.776
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:15:15.812
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:15:15.817
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a namespace status [Conformance]
      test/e2e/apimachinery/namespace.go:299
    STEP: Read namespace status 02/09/23 01:15:15.822
    Feb  9 01:15:15.827: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
    STEP: Patch namespace status 02/09/23 01:15:15.827
    Feb  9 01:15:15.835: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
    STEP: Update namespace status 02/09/23 01:15:15.835
    Feb  9 01:15:15.849: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:15:15.849: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-7342" for this suite. 02/09/23 01:15:15.858
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:110
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:15:15.874
Feb  9 01:15:15.874: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubelet-test 02/09/23 01:15:15.875
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:15:15.9
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:15:15.905
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:85
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:110
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Feb  9 01:15:19.935: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-606" for this suite. 02/09/23 01:15:19.944
------------------------------
â€¢ [4.080 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:82
    should have an terminated reason [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:110

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:15:15.874
    Feb  9 01:15:15.874: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubelet-test 02/09/23 01:15:15.875
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:15:15.9
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:15:15.905
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [BeforeEach] when scheduling a busybox command that always fails in a pod
      test/e2e/common/node/kubelet.go:85
    [It] should have an terminated reason [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:110
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:15:19.935: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-606" for this suite. 02/09/23 01:15:19.944
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:15:19.955
Feb  9 01:15:19.955: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 01:15:19.955
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:15:19.977
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:15:19.981
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87
STEP: Creating a pod to test emptydir volume type on tmpfs 02/09/23 01:15:19.986
Feb  9 01:15:20.000: INFO: Waiting up to 5m0s for pod "pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7" in namespace "emptydir-4863" to be "Succeeded or Failed"
Feb  9 01:15:20.006: INFO: Pod "pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7": Phase="Pending", Reason="", readiness=false. Elapsed: 5.975302ms
Feb  9 01:15:22.012: INFO: Pod "pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012370238s
Feb  9 01:15:24.013: INFO: Pod "pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013098205s
STEP: Saw pod success 02/09/23 01:15:24.013
Feb  9 01:15:24.013: INFO: Pod "pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7" satisfied condition "Succeeded or Failed"
Feb  9 01:15:24.020: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7 container test-container: <nil>
STEP: delete the pod 02/09/23 01:15:24.034
Feb  9 01:15:24.052: INFO: Waiting for pod pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7 to disappear
Feb  9 01:15:24.058: INFO: Pod pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:15:24.058: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-4863" for this suite. 02/09/23 01:15:24.066
------------------------------
â€¢ [4.121 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:15:19.955
    Feb  9 01:15:19.955: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 01:15:19.955
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:15:19.977
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:15:19.981
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:87
    STEP: Creating a pod to test emptydir volume type on tmpfs 02/09/23 01:15:19.986
    Feb  9 01:15:20.000: INFO: Waiting up to 5m0s for pod "pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7" in namespace "emptydir-4863" to be "Succeeded or Failed"
    Feb  9 01:15:20.006: INFO: Pod "pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7": Phase="Pending", Reason="", readiness=false. Elapsed: 5.975302ms
    Feb  9 01:15:22.012: INFO: Pod "pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012370238s
    Feb  9 01:15:24.013: INFO: Pod "pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013098205s
    STEP: Saw pod success 02/09/23 01:15:24.013
    Feb  9 01:15:24.013: INFO: Pod "pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7" satisfied condition "Succeeded or Failed"
    Feb  9 01:15:24.020: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7 container test-container: <nil>
    STEP: delete the pod 02/09/23 01:15:24.034
    Feb  9 01:15:24.052: INFO: Waiting for pod pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7 to disappear
    Feb  9 01:15:24.058: INFO: Pod pod-672e37cb-ece7-4842-85ba-a1b8dc65b1c7 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:15:24.058: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-4863" for this suite. 02/09/23 01:15:24.066
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial]
  validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:129
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:15:24.077
Feb  9 01:15:24.078: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename sched-preemption 02/09/23 01:15:24.078
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:15:24.1
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:15:24.104
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:96
Feb  9 01:15:24.128: INFO: Waiting up to 1m0s for all nodes to be ready
Feb  9 01:16:24.163: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:129
STEP: Create pods that use 4/5 of node resources. 02/09/23 01:16:24.169
Feb  9 01:16:24.200: INFO: Created pod: pod0-0-sched-preemption-low-priority
Feb  9 01:16:24.208: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Feb  9 01:16:24.230: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Feb  9 01:16:24.239: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Feb  9 01:16:24.261: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Feb  9 01:16:24.271: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled. 02/09/23 01:16:24.271
Feb  9 01:16:24.271: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-4951" to be "running"
Feb  9 01:16:24.277: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 6.46845ms
Feb  9 01:16:26.285: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014375173s
Feb  9 01:16:28.284: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013494058s
Feb  9 01:16:30.285: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 6.014046598s
Feb  9 01:16:32.284: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 8.01330421s
Feb  9 01:16:34.285: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 10.014448667s
Feb  9 01:16:34.285: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
Feb  9 01:16:34.285: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-4951" to be "running"
Feb  9 01:16:34.291: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.59819ms
Feb  9 01:16:34.291: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
Feb  9 01:16:34.291: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-4951" to be "running"
Feb  9 01:16:34.297: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 6.255913ms
Feb  9 01:16:34.297: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
Feb  9 01:16:34.297: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-4951" to be "running"
Feb  9 01:16:34.303: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.923001ms
Feb  9 01:16:34.303: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
Feb  9 01:16:34.303: INFO: Waiting up to 5m0s for pod "pod2-0-sched-preemption-medium-priority" in namespace "sched-preemption-4951" to be "running"
Feb  9 01:16:34.308: INFO: Pod "pod2-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.353282ms
Feb  9 01:16:34.308: INFO: Pod "pod2-0-sched-preemption-medium-priority" satisfied condition "running"
Feb  9 01:16:34.309: INFO: Waiting up to 5m0s for pod "pod2-1-sched-preemption-medium-priority" in namespace "sched-preemption-4951" to be "running"
Feb  9 01:16:34.316: INFO: Pod "pod2-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 7.07624ms
Feb  9 01:16:34.316: INFO: Pod "pod2-1-sched-preemption-medium-priority" satisfied condition "running"
STEP: Run a high priority pod that has same requirements as that of lower priority pod 02/09/23 01:16:34.316
Feb  9 01:16:34.325: INFO: Waiting up to 2m0s for pod "preemptor-pod" in namespace "sched-preemption-4951" to be "running"
Feb  9 01:16:34.330: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.411784ms
Feb  9 01:16:36.339: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014618715s
Feb  9 01:16:38.338: INFO: Pod "preemptor-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.012913322s
Feb  9 01:16:38.338: INFO: Pod "preemptor-pod" satisfied condition "running"
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:16:38.378: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-4951" for this suite. 02/09/23 01:16:38.453
------------------------------
â€¢ [SLOW TEST] [74.385 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:15:24.077
    Feb  9 01:15:24.078: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename sched-preemption 02/09/23 01:15:24.078
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:15:24.1
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:15:24.104
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:96
    Feb  9 01:15:24.128: INFO: Waiting up to 1m0s for all nodes to be ready
    Feb  9 01:16:24.163: INFO: Waiting for terminating namespaces to be deleted...
    [It] validates basic preemption works [Conformance]
      test/e2e/scheduling/preemption.go:129
    STEP: Create pods that use 4/5 of node resources. 02/09/23 01:16:24.169
    Feb  9 01:16:24.200: INFO: Created pod: pod0-0-sched-preemption-low-priority
    Feb  9 01:16:24.208: INFO: Created pod: pod0-1-sched-preemption-medium-priority
    Feb  9 01:16:24.230: INFO: Created pod: pod1-0-sched-preemption-medium-priority
    Feb  9 01:16:24.239: INFO: Created pod: pod1-1-sched-preemption-medium-priority
    Feb  9 01:16:24.261: INFO: Created pod: pod2-0-sched-preemption-medium-priority
    Feb  9 01:16:24.271: INFO: Created pod: pod2-1-sched-preemption-medium-priority
    STEP: Wait for pods to be scheduled. 02/09/23 01:16:24.271
    Feb  9 01:16:24.271: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-4951" to be "running"
    Feb  9 01:16:24.277: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 6.46845ms
    Feb  9 01:16:26.285: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014375173s
    Feb  9 01:16:28.284: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013494058s
    Feb  9 01:16:30.285: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 6.014046598s
    Feb  9 01:16:32.284: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 8.01330421s
    Feb  9 01:16:34.285: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 10.014448667s
    Feb  9 01:16:34.285: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
    Feb  9 01:16:34.285: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-4951" to be "running"
    Feb  9 01:16:34.291: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.59819ms
    Feb  9 01:16:34.291: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
    Feb  9 01:16:34.291: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-4951" to be "running"
    Feb  9 01:16:34.297: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 6.255913ms
    Feb  9 01:16:34.297: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
    Feb  9 01:16:34.297: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-4951" to be "running"
    Feb  9 01:16:34.303: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.923001ms
    Feb  9 01:16:34.303: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
    Feb  9 01:16:34.303: INFO: Waiting up to 5m0s for pod "pod2-0-sched-preemption-medium-priority" in namespace "sched-preemption-4951" to be "running"
    Feb  9 01:16:34.308: INFO: Pod "pod2-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.353282ms
    Feb  9 01:16:34.308: INFO: Pod "pod2-0-sched-preemption-medium-priority" satisfied condition "running"
    Feb  9 01:16:34.309: INFO: Waiting up to 5m0s for pod "pod2-1-sched-preemption-medium-priority" in namespace "sched-preemption-4951" to be "running"
    Feb  9 01:16:34.316: INFO: Pod "pod2-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 7.07624ms
    Feb  9 01:16:34.316: INFO: Pod "pod2-1-sched-preemption-medium-priority" satisfied condition "running"
    STEP: Run a high priority pod that has same requirements as that of lower priority pod 02/09/23 01:16:34.316
    Feb  9 01:16:34.325: INFO: Waiting up to 2m0s for pod "preemptor-pod" in namespace "sched-preemption-4951" to be "running"
    Feb  9 01:16:34.330: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.411784ms
    Feb  9 01:16:36.339: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014618715s
    Feb  9 01:16:38.338: INFO: Pod "preemptor-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.012913322s
    Feb  9 01:16:38.338: INFO: Pod "preemptor-pod" satisfied condition "running"
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:16:38.378: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-4951" for this suite. 02/09/23 01:16:38.453
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:16:38.464
Feb  9 01:16:38.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename secrets 02/09/23 01:16:38.465
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:16:38.484
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:16:38.488
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205
STEP: Creating secret with name s-test-opt-del-99ae72ec-7931-4701-be04-4d1ada89d2aa 02/09/23 01:16:38.499
STEP: Creating secret with name s-test-opt-upd-192b70e6-e789-4708-9637-7a4a9219e710 02/09/23 01:16:38.505
STEP: Creating the pod 02/09/23 01:16:38.51
Feb  9 01:16:38.524: INFO: Waiting up to 5m0s for pod "pod-secrets-36ac3b1a-a7a8-4c8c-b9f1-ddd1a7479db6" in namespace "secrets-2860" to be "running and ready"
Feb  9 01:16:38.529: INFO: Pod "pod-secrets-36ac3b1a-a7a8-4c8c-b9f1-ddd1a7479db6": Phase="Pending", Reason="", readiness=false. Elapsed: 5.312906ms
Feb  9 01:16:38.529: INFO: The phase of Pod pod-secrets-36ac3b1a-a7a8-4c8c-b9f1-ddd1a7479db6 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:16:40.537: INFO: Pod "pod-secrets-36ac3b1a-a7a8-4c8c-b9f1-ddd1a7479db6": Phase="Running", Reason="", readiness=true. Elapsed: 2.013056723s
Feb  9 01:16:40.537: INFO: The phase of Pod pod-secrets-36ac3b1a-a7a8-4c8c-b9f1-ddd1a7479db6 is Running (Ready = true)
Feb  9 01:16:40.537: INFO: Pod "pod-secrets-36ac3b1a-a7a8-4c8c-b9f1-ddd1a7479db6" satisfied condition "running and ready"
STEP: Deleting secret s-test-opt-del-99ae72ec-7931-4701-be04-4d1ada89d2aa 02/09/23 01:16:40.582
STEP: Updating secret s-test-opt-upd-192b70e6-e789-4708-9637-7a4a9219e710 02/09/23 01:16:40.591
STEP: Creating secret with name s-test-opt-create-3f52cc56-2ae2-442e-80e6-7e708bd31e0e 02/09/23 01:16:40.597
STEP: waiting to observe update in volume 02/09/23 01:16:40.604
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Feb  9 01:16:42.652: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-2860" for this suite. 02/09/23 01:16:42.66
------------------------------
â€¢ [4.206 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:16:38.464
    Feb  9 01:16:38.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename secrets 02/09/23 01:16:38.465
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:16:38.484
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:16:38.488
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:205
    STEP: Creating secret with name s-test-opt-del-99ae72ec-7931-4701-be04-4d1ada89d2aa 02/09/23 01:16:38.499
    STEP: Creating secret with name s-test-opt-upd-192b70e6-e789-4708-9637-7a4a9219e710 02/09/23 01:16:38.505
    STEP: Creating the pod 02/09/23 01:16:38.51
    Feb  9 01:16:38.524: INFO: Waiting up to 5m0s for pod "pod-secrets-36ac3b1a-a7a8-4c8c-b9f1-ddd1a7479db6" in namespace "secrets-2860" to be "running and ready"
    Feb  9 01:16:38.529: INFO: Pod "pod-secrets-36ac3b1a-a7a8-4c8c-b9f1-ddd1a7479db6": Phase="Pending", Reason="", readiness=false. Elapsed: 5.312906ms
    Feb  9 01:16:38.529: INFO: The phase of Pod pod-secrets-36ac3b1a-a7a8-4c8c-b9f1-ddd1a7479db6 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:16:40.537: INFO: Pod "pod-secrets-36ac3b1a-a7a8-4c8c-b9f1-ddd1a7479db6": Phase="Running", Reason="", readiness=true. Elapsed: 2.013056723s
    Feb  9 01:16:40.537: INFO: The phase of Pod pod-secrets-36ac3b1a-a7a8-4c8c-b9f1-ddd1a7479db6 is Running (Ready = true)
    Feb  9 01:16:40.537: INFO: Pod "pod-secrets-36ac3b1a-a7a8-4c8c-b9f1-ddd1a7479db6" satisfied condition "running and ready"
    STEP: Deleting secret s-test-opt-del-99ae72ec-7931-4701-be04-4d1ada89d2aa 02/09/23 01:16:40.582
    STEP: Updating secret s-test-opt-upd-192b70e6-e789-4708-9637-7a4a9219e710 02/09/23 01:16:40.591
    STEP: Creating secret with name s-test-opt-create-3f52cc56-2ae2-442e-80e6-7e708bd31e0e 02/09/23 01:16:40.597
    STEP: waiting to observe update in volume 02/09/23 01:16:40.604
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:16:42.652: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-2860" for this suite. 02/09/23 01:16:42.66
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:16:42.671
Feb  9 01:16:42.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename runtimeclass 02/09/23 01:16:42.672
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:16:42.691
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:16:42.696
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129
Feb  9 01:16:42.720: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-7414 to be scheduled
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Feb  9 01:16:42.735: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-7414" for this suite. 02/09/23 01:16:42.742
------------------------------
â€¢ [0.081 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:16:42.671
    Feb  9 01:16:42.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename runtimeclass 02/09/23 01:16:42.672
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:16:42.691
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:16:42.696
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:129
    Feb  9 01:16:42.720: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-7414 to be scheduled
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:16:42.735: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-7414" for this suite. 02/09/23 01:16:42.742
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:347
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:16:42.754
Feb  9 01:16:42.754: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename security-context-test 02/09/23 01:16:42.754
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:16:42.773
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:16:42.778
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:347
Feb  9 01:16:42.794: INFO: Waiting up to 5m0s for pod "busybox-user-65534-721a6ef9-a80a-4de8-bb79-5d2bc54132dd" in namespace "security-context-test-2194" to be "Succeeded or Failed"
Feb  9 01:16:42.799: INFO: Pod "busybox-user-65534-721a6ef9-a80a-4de8-bb79-5d2bc54132dd": Phase="Pending", Reason="", readiness=false. Elapsed: 5.52801ms
Feb  9 01:16:44.805: INFO: Pod "busybox-user-65534-721a6ef9-a80a-4de8-bb79-5d2bc54132dd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011671602s
Feb  9 01:16:46.805: INFO: Pod "busybox-user-65534-721a6ef9-a80a-4de8-bb79-5d2bc54132dd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011786864s
Feb  9 01:16:46.805: INFO: Pod "busybox-user-65534-721a6ef9-a80a-4de8-bb79-5d2bc54132dd" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Feb  9 01:16:46.805: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-2194" for this suite. 02/09/23 01:16:46.813
------------------------------
â€¢ [4.073 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a container with runAsUser
  test/e2e/common/node/security_context.go:309
    should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:347

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:16:42.754
    Feb  9 01:16:42.754: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename security-context-test 02/09/23 01:16:42.754
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:16:42.773
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:16:42.778
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:347
    Feb  9 01:16:42.794: INFO: Waiting up to 5m0s for pod "busybox-user-65534-721a6ef9-a80a-4de8-bb79-5d2bc54132dd" in namespace "security-context-test-2194" to be "Succeeded or Failed"
    Feb  9 01:16:42.799: INFO: Pod "busybox-user-65534-721a6ef9-a80a-4de8-bb79-5d2bc54132dd": Phase="Pending", Reason="", readiness=false. Elapsed: 5.52801ms
    Feb  9 01:16:44.805: INFO: Pod "busybox-user-65534-721a6ef9-a80a-4de8-bb79-5d2bc54132dd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011671602s
    Feb  9 01:16:46.805: INFO: Pod "busybox-user-65534-721a6ef9-a80a-4de8-bb79-5d2bc54132dd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011786864s
    Feb  9 01:16:46.805: INFO: Pod "busybox-user-65534-721a6ef9-a80a-4de8-bb79-5d2bc54132dd" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:16:46.805: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-2194" for this suite. 02/09/23 01:16:46.813
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  listing custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:85
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:16:46.829
Feb  9 01:16:46.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename custom-resource-definition 02/09/23 01:16:46.83
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:16:46.85
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:16:46.854
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:85
Feb  9 01:16:46.859: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:16:53.154: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-1238" for this suite. 02/09/23 01:16:53.162
------------------------------
â€¢ [SLOW TEST] [6.343 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:85

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:16:46.829
    Feb  9 01:16:46.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename custom-resource-definition 02/09/23 01:16:46.83
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:16:46.85
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:16:46.854
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] listing custom resource definition objects works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:85
    Feb  9 01:16:46.859: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:16:53.154: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-1238" for this suite. 02/09/23 01:16:53.162
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:16:53.175
Feb  9 01:16:53.175: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename deployment 02/09/23 01:16:53.176
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:16:53.198
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:16:53.203
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132
Feb  9 01:16:53.228: INFO: Pod name rollover-pod: Found 0 pods out of 1
Feb  9 01:16:58.235: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 02/09/23 01:16:58.235
Feb  9 01:16:58.236: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Feb  9 01:17:00.244: INFO: Creating deployment "test-rollover-deployment"
Feb  9 01:17:00.258: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Feb  9 01:17:02.273: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Feb  9 01:17:02.285: INFO: Ensure that both replica sets have 1 created replica
Feb  9 01:17:02.296: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Feb  9 01:17:02.308: INFO: Updating deployment test-rollover-deployment
Feb  9 01:17:02.308: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Feb  9 01:17:04.321: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Feb  9 01:17:04.331: INFO: Make sure deployment "test-rollover-deployment" is complete
Feb  9 01:17:04.342: INFO: all replica sets need to contain the pod-template-hash label
Feb  9 01:17:04.342: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:17:06.355: INFO: all replica sets need to contain the pod-template-hash label
Feb  9 01:17:06.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:17:08.355: INFO: all replica sets need to contain the pod-template-hash label
Feb  9 01:17:08.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:17:10.355: INFO: all replica sets need to contain the pod-template-hash label
Feb  9 01:17:10.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:17:12.355: INFO: all replica sets need to contain the pod-template-hash label
Feb  9 01:17:12.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:17:14.355: INFO: 
Feb  9 01:17:14.355: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Feb  9 01:17:14.371: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-9578  c62e7a2c-73c1-4283-9dda-2d58b209b877 27999 2 2023-02-09 01:17:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-02-09 01:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:17:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00533a198 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-02-09 01:17:00 +0000 UTC,LastTransitionTime:2023-02-09 01:17:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-6c6df9974f" has successfully progressed.,LastUpdateTime:2023-02-09 01:17:13 +0000 UTC,LastTransitionTime:2023-02-09 01:17:00 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Feb  9 01:17:14.377: INFO: New ReplicaSet "test-rollover-deployment-6c6df9974f" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-6c6df9974f  deployment-9578  dc8984b2-c753-4953-a672-bcc69e34fbbf 27989 2 2023-02-09 01:17:02 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment c62e7a2c-73c1-4283-9dda-2d58b209b877 0xc00533a687 0xc00533a688}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c62e7a2c-73c1-4283-9dda-2d58b209b877\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:17:13 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 6c6df9974f,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00533a738 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Feb  9 01:17:14.377: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Feb  9 01:17:14.377: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-9578  92db6843-331c-44be-9870-12ec47e90389 27998 2 2023-02-09 01:16:53 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment c62e7a2c-73c1-4283-9dda-2d58b209b877 0xc00533a547 0xc00533a548}] [] [{e2e.test Update apps/v1 2023-02-09 01:16:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:17:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c62e7a2c-73c1-4283-9dda-2d58b209b877\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:17:13 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00533a618 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Feb  9 01:17:14.377: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-768dcbc65b  deployment-9578  440a86e5-e957-45c5-9bdc-4e3cf297445c 27930 2 2023-02-09 01:17:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment c62e7a2c-73c1-4283-9dda-2d58b209b877 0xc00533a7b7 0xc00533a7b8}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c62e7a2c-73c1-4283-9dda-2d58b209b877\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:17:02 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 768dcbc65b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[] [] [] []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00533a868 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Feb  9 01:17:14.383: INFO: Pod "test-rollover-deployment-6c6df9974f-4c6sh" is available:
&Pod{ObjectMeta:{test-rollover-deployment-6c6df9974f-4c6sh test-rollover-deployment-6c6df9974f- deployment-9578  4d9e36a9-c45b-434d-aa2d-569b7bce47f8 27946 0 2023-02-09 01:17:02 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [{apps/v1 ReplicaSet test-rollover-deployment-6c6df9974f dc8984b2-c753-4953-a672-bcc69e34fbbf 0xc00533ade7 0xc00533ade8}] [] [{kube-controller-manager Update v1 2023-02-09 01:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"dc8984b2-c753-4953-a672-bcc69e34fbbf\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:17:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.196\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wvw89,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wvw89,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:17:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:17:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:17:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:17:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.196,StartTime:2023-02-09 01:17:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:17:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://534e8f80c250cc20fcbc8d93cb6eb42f5029045fd7fafa3be2e5a6c42cfae215,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.196,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Feb  9 01:17:14.383: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-9578" for this suite. 02/09/23 01:17:14.392
------------------------------
â€¢ [SLOW TEST] [21.226 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:16:53.175
    Feb  9 01:16:53.175: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename deployment 02/09/23 01:16:53.176
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:16:53.198
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:16:53.203
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should support rollover [Conformance]
      test/e2e/apps/deployment.go:132
    Feb  9 01:16:53.228: INFO: Pod name rollover-pod: Found 0 pods out of 1
    Feb  9 01:16:58.235: INFO: Pod name rollover-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 02/09/23 01:16:58.235
    Feb  9 01:16:58.236: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
    Feb  9 01:17:00.244: INFO: Creating deployment "test-rollover-deployment"
    Feb  9 01:17:00.258: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
    Feb  9 01:17:02.273: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
    Feb  9 01:17:02.285: INFO: Ensure that both replica sets have 1 created replica
    Feb  9 01:17:02.296: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
    Feb  9 01:17:02.308: INFO: Updating deployment test-rollover-deployment
    Feb  9 01:17:02.308: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
    Feb  9 01:17:04.321: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
    Feb  9 01:17:04.331: INFO: Make sure deployment "test-rollover-deployment" is complete
    Feb  9 01:17:04.342: INFO: all replica sets need to contain the pod-template-hash label
    Feb  9 01:17:04.342: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:17:06.355: INFO: all replica sets need to contain the pod-template-hash label
    Feb  9 01:17:06.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:17:08.355: INFO: all replica sets need to contain the pod-template-hash label
    Feb  9 01:17:08.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:17:10.355: INFO: all replica sets need to contain the pod-template-hash label
    Feb  9 01:17:10.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:17:12.355: INFO: all replica sets need to contain the pod-template-hash label
    Feb  9 01:17:12.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 17, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 17, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:17:14.355: INFO: 
    Feb  9 01:17:14.355: INFO: Ensure that both old replica sets have no replicas
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Feb  9 01:17:14.371: INFO: Deployment "test-rollover-deployment":
    &Deployment{ObjectMeta:{test-rollover-deployment  deployment-9578  c62e7a2c-73c1-4283-9dda-2d58b209b877 27999 2 2023-02-09 01:17:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-02-09 01:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:17:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00533a198 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-02-09 01:17:00 +0000 UTC,LastTransitionTime:2023-02-09 01:17:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-6c6df9974f" has successfully progressed.,LastUpdateTime:2023-02-09 01:17:13 +0000 UTC,LastTransitionTime:2023-02-09 01:17:00 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Feb  9 01:17:14.377: INFO: New ReplicaSet "test-rollover-deployment-6c6df9974f" of Deployment "test-rollover-deployment":
    &ReplicaSet{ObjectMeta:{test-rollover-deployment-6c6df9974f  deployment-9578  dc8984b2-c753-4953-a672-bcc69e34fbbf 27989 2 2023-02-09 01:17:02 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment c62e7a2c-73c1-4283-9dda-2d58b209b877 0xc00533a687 0xc00533a688}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c62e7a2c-73c1-4283-9dda-2d58b209b877\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:17:13 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 6c6df9974f,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00533a738 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Feb  9 01:17:14.377: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
    Feb  9 01:17:14.377: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-9578  92db6843-331c-44be-9870-12ec47e90389 27998 2 2023-02-09 01:16:53 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment c62e7a2c-73c1-4283-9dda-2d58b209b877 0xc00533a547 0xc00533a548}] [] [{e2e.test Update apps/v1 2023-02-09 01:16:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:17:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c62e7a2c-73c1-4283-9dda-2d58b209b877\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:17:13 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00533a618 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Feb  9 01:17:14.377: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-768dcbc65b  deployment-9578  440a86e5-e957-45c5-9bdc-4e3cf297445c 27930 2 2023-02-09 01:17:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment c62e7a2c-73c1-4283-9dda-2d58b209b877 0xc00533a7b7 0xc00533a7b8}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c62e7a2c-73c1-4283-9dda-2d58b209b877\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:17:02 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 768dcbc65b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[] [] [] []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00533a868 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Feb  9 01:17:14.383: INFO: Pod "test-rollover-deployment-6c6df9974f-4c6sh" is available:
    &Pod{ObjectMeta:{test-rollover-deployment-6c6df9974f-4c6sh test-rollover-deployment-6c6df9974f- deployment-9578  4d9e36a9-c45b-434d-aa2d-569b7bce47f8 27946 0 2023-02-09 01:17:02 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [{apps/v1 ReplicaSet test-rollover-deployment-6c6df9974f dc8984b2-c753-4953-a672-bcc69e34fbbf 0xc00533ade7 0xc00533ade8}] [] [{kube-controller-manager Update v1 2023-02-09 01:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"dc8984b2-c753-4953-a672-bcc69e34fbbf\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:17:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.196\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wvw89,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wvw89,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:17:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:17:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:17:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:17:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.196,StartTime:2023-02-09 01:17:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:17:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://534e8f80c250cc20fcbc8d93cb6eb42f5029045fd7fafa3be2e5a6c42cfae215,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.196,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:17:14.383: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-9578" for this suite. 02/09/23 01:17:14.392
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:17:14.402
Feb  9 01:17:14.402: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 01:17:14.403
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:17:14.423
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:17:14.427
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99
STEP: Creating configMap with name configmap-test-volume-map-137e518f-e7b3-4377-a8e9-2ed42508a822 02/09/23 01:17:14.431
STEP: Creating a pod to test consume configMaps 02/09/23 01:17:14.438
Feb  9 01:17:14.450: INFO: Waiting up to 5m0s for pod "pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955" in namespace "configmap-7254" to be "Succeeded or Failed"
Feb  9 01:17:14.455: INFO: Pod "pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955": Phase="Pending", Reason="", readiness=false. Elapsed: 5.405842ms
Feb  9 01:17:16.462: INFO: Pod "pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012176003s
Feb  9 01:17:18.463: INFO: Pod "pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012926125s
STEP: Saw pod success 02/09/23 01:17:18.463
Feb  9 01:17:18.463: INFO: Pod "pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955" satisfied condition "Succeeded or Failed"
Feb  9 01:17:18.468: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955 container agnhost-container: <nil>
STEP: delete the pod 02/09/23 01:17:18.481
Feb  9 01:17:18.494: INFO: Waiting for pod pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955 to disappear
Feb  9 01:17:18.499: INFO: Pod pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:17:18.499: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-7254" for this suite. 02/09/23 01:17:18.511
------------------------------
â€¢ [4.119 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:17:14.402
    Feb  9 01:17:14.402: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 01:17:14.403
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:17:14.423
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:17:14.427
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:99
    STEP: Creating configMap with name configmap-test-volume-map-137e518f-e7b3-4377-a8e9-2ed42508a822 02/09/23 01:17:14.431
    STEP: Creating a pod to test consume configMaps 02/09/23 01:17:14.438
    Feb  9 01:17:14.450: INFO: Waiting up to 5m0s for pod "pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955" in namespace "configmap-7254" to be "Succeeded or Failed"
    Feb  9 01:17:14.455: INFO: Pod "pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955": Phase="Pending", Reason="", readiness=false. Elapsed: 5.405842ms
    Feb  9 01:17:16.462: INFO: Pod "pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012176003s
    Feb  9 01:17:18.463: INFO: Pod "pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012926125s
    STEP: Saw pod success 02/09/23 01:17:18.463
    Feb  9 01:17:18.463: INFO: Pod "pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955" satisfied condition "Succeeded or Failed"
    Feb  9 01:17:18.468: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955 container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 01:17:18.481
    Feb  9 01:17:18.494: INFO: Waiting for pod pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955 to disappear
    Feb  9 01:17:18.499: INFO: Pod pod-configmaps-9e5f922e-5b25-4609-abac-93c0ebb86955 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:17:18.499: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-7254" for this suite. 02/09/23 01:17:18.511
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:17:18.525
Feb  9 01:17:18.525: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:17:18.526
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:17:18.547
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:17:18.551
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69
Feb  9 01:17:18.555: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties 02/09/23 01:17:20.262
Feb  9 01:17:20.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 create -f -'
Feb  9 01:17:20.756: INFO: stderr: ""
Feb  9 01:17:20.756: INFO: stdout: "e2e-test-crd-publish-openapi-2872-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Feb  9 01:17:20.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 delete e2e-test-crd-publish-openapi-2872-crds test-foo'
Feb  9 01:17:20.874: INFO: stderr: ""
Feb  9 01:17:20.874: INFO: stdout: "e2e-test-crd-publish-openapi-2872-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Feb  9 01:17:20.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 apply -f -'
Feb  9 01:17:21.397: INFO: stderr: ""
Feb  9 01:17:21.397: INFO: stdout: "e2e-test-crd-publish-openapi-2872-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Feb  9 01:17:21.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 delete e2e-test-crd-publish-openapi-2872-crds test-foo'
Feb  9 01:17:21.476: INFO: stderr: ""
Feb  9 01:17:21.476: INFO: stdout: "e2e-test-crd-publish-openapi-2872-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values 02/09/23 01:17:21.476
Feb  9 01:17:21.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 create -f -'
Feb  9 01:17:21.648: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema 02/09/23 01:17:21.648
Feb  9 01:17:21.648: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 create -f -'
Feb  9 01:17:21.811: INFO: rc: 1
Feb  9 01:17:21.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 apply -f -'
Feb  9 01:17:21.985: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties 02/09/23 01:17:21.985
Feb  9 01:17:21.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 create -f -'
Feb  9 01:17:22.160: INFO: rc: 1
Feb  9 01:17:22.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 apply -f -'
Feb  9 01:17:22.337: INFO: rc: 1
STEP: kubectl explain works to explain CR properties 02/09/23 01:17:22.337
Feb  9 01:17:22.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 explain e2e-test-crd-publish-openapi-2872-crds'
Feb  9 01:17:22.504: INFO: stderr: ""
Feb  9 01:17:22.504: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2872-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively 02/09/23 01:17:22.504
Feb  9 01:17:22.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 explain e2e-test-crd-publish-openapi-2872-crds.metadata'
Feb  9 01:17:22.669: INFO: stderr: ""
Feb  9 01:17:22.670: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2872-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Feb  9 01:17:22.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 explain e2e-test-crd-publish-openapi-2872-crds.spec'
Feb  9 01:17:22.857: INFO: stderr: ""
Feb  9 01:17:22.857: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2872-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Feb  9 01:17:22.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 explain e2e-test-crd-publish-openapi-2872-crds.spec.bars'
Feb  9 01:17:23.054: INFO: stderr: ""
Feb  9 01:17:23.054: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2872-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist 02/09/23 01:17:23.054
Feb  9 01:17:23.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 explain e2e-test-crd-publish-openapi-2872-crds.spec.bars2'
Feb  9 01:17:23.226: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:17:24.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-9653" for this suite. 02/09/23 01:17:24.83
------------------------------
â€¢ [SLOW TEST] [6.314 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:17:18.525
    Feb  9 01:17:18.525: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:17:18.526
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:17:18.547
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:17:18.551
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD with validation schema [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:69
    Feb  9 01:17:18.555: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: kubectl validation (kubectl create and apply) allows request with known and required properties 02/09/23 01:17:20.262
    Feb  9 01:17:20.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 create -f -'
    Feb  9 01:17:20.756: INFO: stderr: ""
    Feb  9 01:17:20.756: INFO: stdout: "e2e-test-crd-publish-openapi-2872-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
    Feb  9 01:17:20.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 delete e2e-test-crd-publish-openapi-2872-crds test-foo'
    Feb  9 01:17:20.874: INFO: stderr: ""
    Feb  9 01:17:20.874: INFO: stdout: "e2e-test-crd-publish-openapi-2872-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
    Feb  9 01:17:20.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 apply -f -'
    Feb  9 01:17:21.397: INFO: stderr: ""
    Feb  9 01:17:21.397: INFO: stdout: "e2e-test-crd-publish-openapi-2872-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
    Feb  9 01:17:21.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 delete e2e-test-crd-publish-openapi-2872-crds test-foo'
    Feb  9 01:17:21.476: INFO: stderr: ""
    Feb  9 01:17:21.476: INFO: stdout: "e2e-test-crd-publish-openapi-2872-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
    STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values 02/09/23 01:17:21.476
    Feb  9 01:17:21.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 create -f -'
    Feb  9 01:17:21.648: INFO: rc: 1
    STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema 02/09/23 01:17:21.648
    Feb  9 01:17:21.648: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 create -f -'
    Feb  9 01:17:21.811: INFO: rc: 1
    Feb  9 01:17:21.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 apply -f -'
    Feb  9 01:17:21.985: INFO: rc: 1
    STEP: kubectl validation (kubectl create and apply) rejects request without required properties 02/09/23 01:17:21.985
    Feb  9 01:17:21.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 create -f -'
    Feb  9 01:17:22.160: INFO: rc: 1
    Feb  9 01:17:22.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 --namespace=crd-publish-openapi-9653 apply -f -'
    Feb  9 01:17:22.337: INFO: rc: 1
    STEP: kubectl explain works to explain CR properties 02/09/23 01:17:22.337
    Feb  9 01:17:22.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 explain e2e-test-crd-publish-openapi-2872-crds'
    Feb  9 01:17:22.504: INFO: stderr: ""
    Feb  9 01:17:22.504: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2872-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
    STEP: kubectl explain works to explain CR properties recursively 02/09/23 01:17:22.504
    Feb  9 01:17:22.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 explain e2e-test-crd-publish-openapi-2872-crds.metadata'
    Feb  9 01:17:22.669: INFO: stderr: ""
    Feb  9 01:17:22.670: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2872-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
    Feb  9 01:17:22.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 explain e2e-test-crd-publish-openapi-2872-crds.spec'
    Feb  9 01:17:22.857: INFO: stderr: ""
    Feb  9 01:17:22.857: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2872-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
    Feb  9 01:17:22.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 explain e2e-test-crd-publish-openapi-2872-crds.spec.bars'
    Feb  9 01:17:23.054: INFO: stderr: ""
    Feb  9 01:17:23.054: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2872-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
    STEP: kubectl explain works to return error when explain is called on property that doesn't exist 02/09/23 01:17:23.054
    Feb  9 01:17:23.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-9653 explain e2e-test-crd-publish-openapi-2872-crds.spec.bars2'
    Feb  9 01:17:23.226: INFO: rc: 1
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:17:24.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-9653" for this suite. 02/09/23 01:17:24.83
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API
   should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223
[BeforeEach] [sig-network] IngressClass API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:17:24.841
Feb  9 01:17:24.842: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename ingressclass 02/09/23 01:17:24.842
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:17:24.863
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:17:24.868
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:211
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223
STEP: getting /apis 02/09/23 01:17:24.873
STEP: getting /apis/networking.k8s.io 02/09/23 01:17:24.877
STEP: getting /apis/networking.k8s.iov1 02/09/23 01:17:24.879
STEP: creating 02/09/23 01:17:24.881
STEP: getting 02/09/23 01:17:24.9
STEP: listing 02/09/23 01:17:24.905
STEP: watching 02/09/23 01:17:24.912
Feb  9 01:17:24.912: INFO: starting watch
STEP: patching 02/09/23 01:17:24.914
STEP: updating 02/09/23 01:17:24.92
Feb  9 01:17:24.927: INFO: waiting for watch events with expected annotations
Feb  9 01:17:24.927: INFO: saw patched and updated annotations
STEP: deleting 02/09/23 01:17:24.927
STEP: deleting a collection 02/09/23 01:17:24.947
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/node/init/init.go:32
Feb  9 01:17:24.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] IngressClass API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] IngressClass API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] IngressClass API
  tear down framework | framework.go:193
STEP: Destroying namespace "ingressclass-3262" for this suite. 02/09/23 01:17:24.977
------------------------------
â€¢ [0.145 seconds]
[sig-network] IngressClass API
test/e2e/network/common/framework.go:23
   should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] IngressClass API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:17:24.841
    Feb  9 01:17:24.842: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename ingressclass 02/09/23 01:17:24.842
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:17:24.863
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:17:24.868
    [BeforeEach] [sig-network] IngressClass API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] IngressClass API
      test/e2e/network/ingressclass.go:211
    [It]  should support creating IngressClass API operations [Conformance]
      test/e2e/network/ingressclass.go:223
    STEP: getting /apis 02/09/23 01:17:24.873
    STEP: getting /apis/networking.k8s.io 02/09/23 01:17:24.877
    STEP: getting /apis/networking.k8s.iov1 02/09/23 01:17:24.879
    STEP: creating 02/09/23 01:17:24.881
    STEP: getting 02/09/23 01:17:24.9
    STEP: listing 02/09/23 01:17:24.905
    STEP: watching 02/09/23 01:17:24.912
    Feb  9 01:17:24.912: INFO: starting watch
    STEP: patching 02/09/23 01:17:24.914
    STEP: updating 02/09/23 01:17:24.92
    Feb  9 01:17:24.927: INFO: waiting for watch events with expected annotations
    Feb  9 01:17:24.927: INFO: saw patched and updated annotations
    STEP: deleting 02/09/23 01:17:24.927
    STEP: deleting a collection 02/09/23 01:17:24.947
    [AfterEach] [sig-network] IngressClass API
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:17:24.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] IngressClass API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] IngressClass API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] IngressClass API
      tear down framework | framework.go:193
    STEP: Destroying namespace "ingressclass-3262" for this suite. 02/09/23 01:17:24.977
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:17:24.987
Feb  9 01:17:24.987: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename init-container 02/09/23 01:17:24.988
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:17:25.007
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:17:25.011
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255
STEP: creating the pod 02/09/23 01:17:25.016
Feb  9 01:17:25.017: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:17:27.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-897" for this suite. 02/09/23 01:17:27.931
------------------------------
â€¢ [2.952 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:17:24.987
    Feb  9 01:17:24.987: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename init-container 02/09/23 01:17:24.988
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:17:25.007
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:17:25.011
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should invoke init containers on a RestartAlways pod [Conformance]
      test/e2e/common/node/init_container.go:255
    STEP: creating the pod 02/09/23 01:17:25.016
    Feb  9 01:17:25.017: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:17:27.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-897" for this suite. 02/09/23 01:17:27.931
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:17:27.942
Feb  9 01:17:27.942: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:17:27.942
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:17:27.962
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:17:27.966
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130
STEP: Creating the pod 02/09/23 01:17:27.971
Feb  9 01:17:27.982: INFO: Waiting up to 5m0s for pod "labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76" in namespace "projected-3903" to be "running and ready"
Feb  9 01:17:27.988: INFO: Pod "labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 5.567044ms
Feb  9 01:17:27.988: INFO: The phase of Pod labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:17:29.995: INFO: Pod "labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76": Phase="Running", Reason="", readiness=true. Elapsed: 2.012364927s
Feb  9 01:17:29.995: INFO: The phase of Pod labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76 is Running (Ready = true)
Feb  9 01:17:29.995: INFO: Pod "labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76" satisfied condition "running and ready"
Feb  9 01:17:30.537: INFO: Successfully updated pod "labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Feb  9 01:17:32.570: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3903" for this suite. 02/09/23 01:17:32.579
------------------------------
â€¢ [4.648 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:17:27.942
    Feb  9 01:17:27.942: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:17:27.942
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:17:27.962
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:17:27.966
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should update labels on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:130
    STEP: Creating the pod 02/09/23 01:17:27.971
    Feb  9 01:17:27.982: INFO: Waiting up to 5m0s for pod "labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76" in namespace "projected-3903" to be "running and ready"
    Feb  9 01:17:27.988: INFO: Pod "labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76": Phase="Pending", Reason="", readiness=false. Elapsed: 5.567044ms
    Feb  9 01:17:27.988: INFO: The phase of Pod labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:17:29.995: INFO: Pod "labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76": Phase="Running", Reason="", readiness=true. Elapsed: 2.012364927s
    Feb  9 01:17:29.995: INFO: The phase of Pod labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76 is Running (Ready = true)
    Feb  9 01:17:29.995: INFO: Pod "labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76" satisfied condition "running and ready"
    Feb  9 01:17:30.537: INFO: Successfully updated pod "labelsupdate345a301c-bec9-44a5-9ab6-fe1cacfe2d76"
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:17:32.570: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3903" for this suite. 02/09/23 01:17:32.579
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:17:32.591
Feb  9 01:17:32.591: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:17:32.592
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:17:32.611
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:17:32.615
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215
STEP: Creating secret with name s-test-opt-del-8c982818-5d88-4163-9f0c-a0356be11c78 02/09/23 01:17:32.626
STEP: Creating secret with name s-test-opt-upd-c5c4c789-e95d-4b8e-a80a-d06c73c08f72 02/09/23 01:17:32.634
STEP: Creating the pod 02/09/23 01:17:32.641
Feb  9 01:17:32.654: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-fe688910-9e9f-4ca3-9da2-8d966c59abeb" in namespace "projected-6165" to be "running and ready"
Feb  9 01:17:32.662: INFO: Pod "pod-projected-secrets-fe688910-9e9f-4ca3-9da2-8d966c59abeb": Phase="Pending", Reason="", readiness=false. Elapsed: 8.624071ms
Feb  9 01:17:32.662: INFO: The phase of Pod pod-projected-secrets-fe688910-9e9f-4ca3-9da2-8d966c59abeb is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:17:34.669: INFO: Pod "pod-projected-secrets-fe688910-9e9f-4ca3-9da2-8d966c59abeb": Phase="Running", Reason="", readiness=true. Elapsed: 2.015012541s
Feb  9 01:17:34.669: INFO: The phase of Pod pod-projected-secrets-fe688910-9e9f-4ca3-9da2-8d966c59abeb is Running (Ready = true)
Feb  9 01:17:34.669: INFO: Pod "pod-projected-secrets-fe688910-9e9f-4ca3-9da2-8d966c59abeb" satisfied condition "running and ready"
STEP: Deleting secret s-test-opt-del-8c982818-5d88-4163-9f0c-a0356be11c78 02/09/23 01:17:34.711
STEP: Updating secret s-test-opt-upd-c5c4c789-e95d-4b8e-a80a-d06c73c08f72 02/09/23 01:17:34.727
STEP: Creating secret with name s-test-opt-create-80238f59-2449-4523-a567-cd76c573b3e8 02/09/23 01:17:34.734
STEP: waiting to observe update in volume 02/09/23 01:17:34.74
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Feb  9 01:18:59.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6165" for this suite. 02/09/23 01:18:59.417
------------------------------
â€¢ [SLOW TEST] [86.836 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:17:32.591
    Feb  9 01:17:32.591: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:17:32.592
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:17:32.611
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:17:32.615
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:215
    STEP: Creating secret with name s-test-opt-del-8c982818-5d88-4163-9f0c-a0356be11c78 02/09/23 01:17:32.626
    STEP: Creating secret with name s-test-opt-upd-c5c4c789-e95d-4b8e-a80a-d06c73c08f72 02/09/23 01:17:32.634
    STEP: Creating the pod 02/09/23 01:17:32.641
    Feb  9 01:17:32.654: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-fe688910-9e9f-4ca3-9da2-8d966c59abeb" in namespace "projected-6165" to be "running and ready"
    Feb  9 01:17:32.662: INFO: Pod "pod-projected-secrets-fe688910-9e9f-4ca3-9da2-8d966c59abeb": Phase="Pending", Reason="", readiness=false. Elapsed: 8.624071ms
    Feb  9 01:17:32.662: INFO: The phase of Pod pod-projected-secrets-fe688910-9e9f-4ca3-9da2-8d966c59abeb is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:17:34.669: INFO: Pod "pod-projected-secrets-fe688910-9e9f-4ca3-9da2-8d966c59abeb": Phase="Running", Reason="", readiness=true. Elapsed: 2.015012541s
    Feb  9 01:17:34.669: INFO: The phase of Pod pod-projected-secrets-fe688910-9e9f-4ca3-9da2-8d966c59abeb is Running (Ready = true)
    Feb  9 01:17:34.669: INFO: Pod "pod-projected-secrets-fe688910-9e9f-4ca3-9da2-8d966c59abeb" satisfied condition "running and ready"
    STEP: Deleting secret s-test-opt-del-8c982818-5d88-4163-9f0c-a0356be11c78 02/09/23 01:17:34.711
    STEP: Updating secret s-test-opt-upd-c5c4c789-e95d-4b8e-a80a-d06c73c08f72 02/09/23 01:17:34.727
    STEP: Creating secret with name s-test-opt-create-80238f59-2449-4523-a567-cd76c573b3e8 02/09/23 01:17:34.734
    STEP: waiting to observe update in volume 02/09/23 01:17:34.74
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:18:59.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6165" for this suite. 02/09/23 01:18:59.417
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:18:59.43
Feb  9 01:18:59.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename cronjob 02/09/23 01:18:59.431
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:18:59.45
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:18:59.455
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69
STEP: Creating a cronjob 02/09/23 01:18:59.461
STEP: Ensuring more than one job is running at a time 02/09/23 01:18:59.469
STEP: Ensuring at least two running jobs exists by listing jobs explicitly 02/09/23 01:20:01.475
STEP: Removing cronjob 02/09/23 01:20:01.481
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Feb  9 01:20:01.491: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-4969" for this suite. 02/09/23 01:20:01.5
------------------------------
â€¢ [SLOW TEST] [62.079 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:18:59.43
    Feb  9 01:18:59.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename cronjob 02/09/23 01:18:59.431
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:18:59.45
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:18:59.455
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule multiple jobs concurrently [Conformance]
      test/e2e/apps/cronjob.go:69
    STEP: Creating a cronjob 02/09/23 01:18:59.461
    STEP: Ensuring more than one job is running at a time 02/09/23 01:18:59.469
    STEP: Ensuring at least two running jobs exists by listing jobs explicitly 02/09/23 01:20:01.475
    STEP: Removing cronjob 02/09/23 01:20:01.481
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:20:01.491: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-4969" for this suite. 02/09/23 01:20:01.5
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:20:01.51
Feb  9 01:20:01.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pods 02/09/23 01:20:01.511
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:20:01.532
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:20:01.537
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204
STEP: creating pod 02/09/23 01:20:01.541
Feb  9 01:20:01.557: INFO: Waiting up to 5m0s for pod "pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a" in namespace "pods-7230" to be "running and ready"
Feb  9 01:20:01.563: INFO: Pod "pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.7747ms
Feb  9 01:20:01.563: INFO: The phase of Pod pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:20:03.570: INFO: Pod "pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a": Phase="Running", Reason="", readiness=true. Elapsed: 2.012990557s
Feb  9 01:20:03.570: INFO: The phase of Pod pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a is Running (Ready = true)
Feb  9 01:20:03.570: INFO: Pod "pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a" satisfied condition "running and ready"
Feb  9 01:20:03.581: INFO: Pod pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a has hostIP: 10.224.0.5
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Feb  9 01:20:03.581: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-7230" for this suite. 02/09/23 01:20:03.589
------------------------------
â€¢ [2.090 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:20:01.51
    Feb  9 01:20:01.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pods 02/09/23 01:20:01.511
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:20:01.532
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:20:01.537
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should get a host IP [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:204
    STEP: creating pod 02/09/23 01:20:01.541
    Feb  9 01:20:01.557: INFO: Waiting up to 5m0s for pod "pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a" in namespace "pods-7230" to be "running and ready"
    Feb  9 01:20:01.563: INFO: Pod "pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.7747ms
    Feb  9 01:20:01.563: INFO: The phase of Pod pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:20:03.570: INFO: Pod "pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a": Phase="Running", Reason="", readiness=true. Elapsed: 2.012990557s
    Feb  9 01:20:03.570: INFO: The phase of Pod pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a is Running (Ready = true)
    Feb  9 01:20:03.570: INFO: Pod "pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a" satisfied condition "running and ready"
    Feb  9 01:20:03.581: INFO: Pod pod-hostip-35c817d0-30a7-4bd1-a628-86098ebc8e4a has hostIP: 10.224.0.5
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:20:03.581: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-7230" for this suite. 02/09/23 01:20:03.589
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] Garbage collector
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:20:03.6
Feb  9 01:20:03.600: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename gc 02/09/23 01:20:03.601
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:20:03.622
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:20:03.626
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650
STEP: create the rc 02/09/23 01:20:03.637
STEP: delete the rc 02/09/23 01:20:08.65
STEP: wait for the rc to be deleted 02/09/23 01:20:08.659
Feb  9 01:20:09.676: INFO: 25 pods remaining
Feb  9 01:20:09.676: INFO: 25 pods has nil DeletionTimestamp
Feb  9 01:20:09.676: INFO: 
Feb  9 01:20:10.673: INFO: 16 pods remaining
Feb  9 01:20:10.673: INFO: 15 pods has nil DeletionTimestamp
Feb  9 01:20:10.673: INFO: 
STEP: Gathering metrics 02/09/23 01:20:11.67
W0209 01:20:11.681368      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Feb  9 01:20:11.681: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Feb  9 01:20:11.681: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-2445" for this suite. 02/09/23 01:20:11.689
------------------------------
â€¢ [SLOW TEST] [8.099 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:20:03.6
    Feb  9 01:20:03.600: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename gc 02/09/23 01:20:03.601
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:20:03.622
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:20:03.626
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
      test/e2e/apimachinery/garbage_collector.go:650
    STEP: create the rc 02/09/23 01:20:03.637
    STEP: delete the rc 02/09/23 01:20:08.65
    STEP: wait for the rc to be deleted 02/09/23 01:20:08.659
    Feb  9 01:20:09.676: INFO: 25 pods remaining
    Feb  9 01:20:09.676: INFO: 25 pods has nil DeletionTimestamp
    Feb  9 01:20:09.676: INFO: 
    Feb  9 01:20:10.673: INFO: 16 pods remaining
    Feb  9 01:20:10.673: INFO: 15 pods has nil DeletionTimestamp
    Feb  9 01:20:10.673: INFO: 
    STEP: Gathering metrics 02/09/23 01:20:11.67
    W0209 01:20:11.681368      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Feb  9 01:20:11.681: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:20:11.681: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-2445" for this suite. 02/09/23 01:20:11.689
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/storage/subpath.go:80
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:20:11.7
Feb  9 01:20:11.701: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename subpath 02/09/23 01:20:11.702
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:20:11.736
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:20:11.74
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 02/09/23 01:20:11.744
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/storage/subpath.go:80
STEP: Creating pod pod-subpath-test-configmap-ct62 02/09/23 01:20:11.756
STEP: Creating a pod to test atomic-volume-subpath 02/09/23 01:20:11.756
Feb  9 01:20:11.768: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-ct62" in namespace "subpath-4395" to be "Succeeded or Failed"
Feb  9 01:20:11.773: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Pending", Reason="", readiness=false. Elapsed: 5.055191ms
Feb  9 01:20:13.779: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011459299s
Feb  9 01:20:15.780: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Pending", Reason="", readiness=false. Elapsed: 4.011800727s
Feb  9 01:20:17.781: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 6.013637448s
Feb  9 01:20:19.779: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 8.011511292s
Feb  9 01:20:21.778: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 10.01064846s
Feb  9 01:20:23.779: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 12.011011781s
Feb  9 01:20:25.780: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 14.012348402s
Feb  9 01:20:27.779: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 16.011136277s
Feb  9 01:20:29.779: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 18.011678683s
Feb  9 01:20:31.780: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 20.011762537s
Feb  9 01:20:33.778: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=false. Elapsed: 22.01045268s
Feb  9 01:20:35.779: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.011525651s
STEP: Saw pod success 02/09/23 01:20:35.779
Feb  9 01:20:35.779: INFO: Pod "pod-subpath-test-configmap-ct62" satisfied condition "Succeeded or Failed"
Feb  9 01:20:35.785: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-subpath-test-configmap-ct62 container test-container-subpath-configmap-ct62: <nil>
STEP: delete the pod 02/09/23 01:20:35.798
Feb  9 01:20:35.816: INFO: Waiting for pod pod-subpath-test-configmap-ct62 to disappear
Feb  9 01:20:35.821: INFO: Pod pod-subpath-test-configmap-ct62 no longer exists
STEP: Deleting pod pod-subpath-test-configmap-ct62 02/09/23 01:20:35.821
Feb  9 01:20:35.821: INFO: Deleting pod "pod-subpath-test-configmap-ct62" in namespace "subpath-4395"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Feb  9 01:20:35.826: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-4395" for this suite. 02/09/23 01:20:35.835
------------------------------
â€¢ [SLOW TEST] [24.144 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/storage/subpath.go:80

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:20:11.7
    Feb  9 01:20:11.701: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename subpath 02/09/23 01:20:11.702
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:20:11.736
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:20:11.74
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 02/09/23 01:20:11.744
    [It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
      test/e2e/storage/subpath.go:80
    STEP: Creating pod pod-subpath-test-configmap-ct62 02/09/23 01:20:11.756
    STEP: Creating a pod to test atomic-volume-subpath 02/09/23 01:20:11.756
    Feb  9 01:20:11.768: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-ct62" in namespace "subpath-4395" to be "Succeeded or Failed"
    Feb  9 01:20:11.773: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Pending", Reason="", readiness=false. Elapsed: 5.055191ms
    Feb  9 01:20:13.779: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011459299s
    Feb  9 01:20:15.780: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Pending", Reason="", readiness=false. Elapsed: 4.011800727s
    Feb  9 01:20:17.781: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 6.013637448s
    Feb  9 01:20:19.779: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 8.011511292s
    Feb  9 01:20:21.778: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 10.01064846s
    Feb  9 01:20:23.779: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 12.011011781s
    Feb  9 01:20:25.780: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 14.012348402s
    Feb  9 01:20:27.779: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 16.011136277s
    Feb  9 01:20:29.779: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 18.011678683s
    Feb  9 01:20:31.780: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=true. Elapsed: 20.011762537s
    Feb  9 01:20:33.778: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Running", Reason="", readiness=false. Elapsed: 22.01045268s
    Feb  9 01:20:35.779: INFO: Pod "pod-subpath-test-configmap-ct62": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.011525651s
    STEP: Saw pod success 02/09/23 01:20:35.779
    Feb  9 01:20:35.779: INFO: Pod "pod-subpath-test-configmap-ct62" satisfied condition "Succeeded or Failed"
    Feb  9 01:20:35.785: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-subpath-test-configmap-ct62 container test-container-subpath-configmap-ct62: <nil>
    STEP: delete the pod 02/09/23 01:20:35.798
    Feb  9 01:20:35.816: INFO: Waiting for pod pod-subpath-test-configmap-ct62 to disappear
    Feb  9 01:20:35.821: INFO: Pod pod-subpath-test-configmap-ct62 no longer exists
    STEP: Deleting pod pod-subpath-test-configmap-ct62 02/09/23 01:20:35.821
    Feb  9 01:20:35.821: INFO: Deleting pod "pod-subpath-test-configmap-ct62" in namespace "subpath-4395"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:20:35.826: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-4395" for this suite. 02/09/23 01:20:35.835
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:52
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:20:35.847
Feb  9 01:20:35.847: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-runtime 02/09/23 01:20:35.848
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:20:35.867
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:20:35.871
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:52
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' 02/09/23 01:20:35.891
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' 02/09/23 01:20:52.01
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition 02/09/23 01:20:52.016
STEP: Container 'terminate-cmd-rpa': should get the expected 'State' 02/09/23 01:20:52.027
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] 02/09/23 01:20:52.027
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' 02/09/23 01:20:52.055
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' 02/09/23 01:20:55.081
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition 02/09/23 01:20:57.099
STEP: Container 'terminate-cmd-rpof': should get the expected 'State' 02/09/23 01:20:57.11
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] 02/09/23 01:20:57.111
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' 02/09/23 01:20:57.138
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' 02/09/23 01:20:58.152
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition 02/09/23 01:21:01.178
STEP: Container 'terminate-cmd-rpn': should get the expected 'State' 02/09/23 01:21:01.189
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] 02/09/23 01:21:01.19
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Feb  9 01:21:01.233: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-1875" for this suite. 02/09/23 01:21:01.243
------------------------------
â€¢ [SLOW TEST] [25.406 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    when starting a container that exits
    test/e2e/common/node/runtime.go:45
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:52

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:20:35.847
    Feb  9 01:20:35.847: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-runtime 02/09/23 01:20:35.848
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:20:35.867
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:20:35.871
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should run with the expected status [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:52
    STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' 02/09/23 01:20:35.891
    STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' 02/09/23 01:20:52.01
    STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition 02/09/23 01:20:52.016
    STEP: Container 'terminate-cmd-rpa': should get the expected 'State' 02/09/23 01:20:52.027
    STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] 02/09/23 01:20:52.027
    STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' 02/09/23 01:20:52.055
    STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' 02/09/23 01:20:55.081
    STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition 02/09/23 01:20:57.099
    STEP: Container 'terminate-cmd-rpof': should get the expected 'State' 02/09/23 01:20:57.11
    STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] 02/09/23 01:20:57.111
    STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' 02/09/23 01:20:57.138
    STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' 02/09/23 01:20:58.152
    STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition 02/09/23 01:21:01.178
    STEP: Container 'terminate-cmd-rpn': should get the expected 'State' 02/09/23 01:21:01.189
    STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] 02/09/23 01:21:01.19
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:21:01.233: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-1875" for this suite. 02/09/23 01:21:01.243
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:21:01.254
Feb  9 01:21:01.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:21:01.255
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:21:01.275
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:21:01.279
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267
STEP: Creating a pod to test downward api env vars 02/09/23 01:21:01.284
Feb  9 01:21:01.296: INFO: Waiting up to 5m0s for pod "downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01" in namespace "downward-api-6351" to be "Succeeded or Failed"
Feb  9 01:21:01.303: INFO: Pod "downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01": Phase="Pending", Reason="", readiness=false. Elapsed: 6.647711ms
Feb  9 01:21:03.310: INFO: Pod "downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01366757s
Feb  9 01:21:05.309: INFO: Pod "downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012743644s
STEP: Saw pod success 02/09/23 01:21:05.309
Feb  9 01:21:05.309: INFO: Pod "downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01" satisfied condition "Succeeded or Failed"
Feb  9 01:21:05.315: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01 container dapi-container: <nil>
STEP: delete the pod 02/09/23 01:21:05.327
Feb  9 01:21:05.340: INFO: Waiting for pod downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01 to disappear
Feb  9 01:21:05.345: INFO: Pod downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Feb  9 01:21:05.346: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-6351" for this suite. 02/09/23 01:21:05.354
------------------------------
â€¢ [4.122 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:21:01.254
    Feb  9 01:21:01.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:21:01.255
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:21:01.275
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:21:01.279
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide pod UID as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:267
    STEP: Creating a pod to test downward api env vars 02/09/23 01:21:01.284
    Feb  9 01:21:01.296: INFO: Waiting up to 5m0s for pod "downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01" in namespace "downward-api-6351" to be "Succeeded or Failed"
    Feb  9 01:21:01.303: INFO: Pod "downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01": Phase="Pending", Reason="", readiness=false. Elapsed: 6.647711ms
    Feb  9 01:21:03.310: INFO: Pod "downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01366757s
    Feb  9 01:21:05.309: INFO: Pod "downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012743644s
    STEP: Saw pod success 02/09/23 01:21:05.309
    Feb  9 01:21:05.309: INFO: Pod "downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01" satisfied condition "Succeeded or Failed"
    Feb  9 01:21:05.315: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01 container dapi-container: <nil>
    STEP: delete the pod 02/09/23 01:21:05.327
    Feb  9 01:21:05.340: INFO: Waiting for pod downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01 to disappear
    Feb  9 01:21:05.345: INFO: Pod downward-api-5cbef179-af3e-4e3f-b55d-01c90b90ac01 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:21:05.346: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-6351" for this suite. 02/09/23 01:21:05.354
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:21:05.381
Feb  9 01:21:05.381: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 01:21:05.382
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:21:05.402
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:21:05.406
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 01:21:05.427
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:21:05.567
STEP: Deploying the webhook pod 02/09/23 01:21:05.585
STEP: Wait for the deployment to be ready 02/09/23 01:21:05.598
Feb  9 01:21:05.613: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 01:21:07.631
STEP: Verifying the service has paired with the endpoint 02/09/23 01:21:07.645
Feb  9 01:21:08.645: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221
Feb  9 01:21:08.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Registering the custom resource webhook via the AdmissionRegistration API 02/09/23 01:21:09.164
STEP: Creating a custom resource that should be denied by the webhook 02/09/23 01:21:09.185
STEP: Creating a custom resource whose deletion would be denied by the webhook 02/09/23 01:21:11.234
STEP: Updating the custom resource with disallowed data should be denied 02/09/23 01:21:11.244
STEP: Deleting the custom resource should be denied 02/09/23 01:21:11.26
STEP: Remove the offending key and value from the custom resource data 02/09/23 01:21:11.275
STEP: Deleting the updated custom resource should be successful 02/09/23 01:21:11.291
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:21:11.830: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-7239" for this suite. 02/09/23 01:21:11.894
STEP: Destroying namespace "webhook-7239-markers" for this suite. 02/09/23 01:21:11.903
------------------------------
â€¢ [SLOW TEST] [6.532 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:21:05.381
    Feb  9 01:21:05.381: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 01:21:05.382
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:21:05.402
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:21:05.406
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 01:21:05.427
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:21:05.567
    STEP: Deploying the webhook pod 02/09/23 01:21:05.585
    STEP: Wait for the deployment to be ready 02/09/23 01:21:05.598
    Feb  9 01:21:05.613: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 01:21:07.631
    STEP: Verifying the service has paired with the endpoint 02/09/23 01:21:07.645
    Feb  9 01:21:08.645: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny custom resource creation, update and deletion [Conformance]
      test/e2e/apimachinery/webhook.go:221
    Feb  9 01:21:08.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Registering the custom resource webhook via the AdmissionRegistration API 02/09/23 01:21:09.164
    STEP: Creating a custom resource that should be denied by the webhook 02/09/23 01:21:09.185
    STEP: Creating a custom resource whose deletion would be denied by the webhook 02/09/23 01:21:11.234
    STEP: Updating the custom resource with disallowed data should be denied 02/09/23 01:21:11.244
    STEP: Deleting the custom resource should be denied 02/09/23 01:21:11.26
    STEP: Remove the offending key and value from the custom resource data 02/09/23 01:21:11.275
    STEP: Deleting the updated custom resource should be successful 02/09/23 01:21:11.291
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:21:11.830: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-7239" for this suite. 02/09/23 01:21:11.894
    STEP: Destroying namespace "webhook-7239-markers" for this suite. 02/09/23 01:21:11.903
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:82
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:21:11.916
Feb  9 01:21:11.917: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pod-network-test 02/09/23 01:21:11.918
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:21:11.94
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:21:11.944
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:82
STEP: Performing setup for networking test in namespace pod-network-test-8941 02/09/23 01:21:11.949
STEP: creating a selector 02/09/23 01:21:11.95
STEP: Creating the service pods in kubernetes 02/09/23 01:21:11.95
Feb  9 01:21:11.950: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Feb  9 01:21:11.990: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-8941" to be "running and ready"
Feb  9 01:21:11.998: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 7.510398ms
Feb  9 01:21:11.998: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:21:14.005: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.014047377s
Feb  9 01:21:14.005: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:21:16.006: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.015329687s
Feb  9 01:21:16.006: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:21:18.006: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.015460882s
Feb  9 01:21:18.006: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:21:20.005: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.014081521s
Feb  9 01:21:20.005: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:21:22.005: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.01409175s
Feb  9 01:21:22.005: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Feb  9 01:21:24.006: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.015393893s
Feb  9 01:21:24.006: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Feb  9 01:21:24.006: INFO: Pod "netserver-0" satisfied condition "running and ready"
Feb  9 01:21:24.012: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-8941" to be "running and ready"
Feb  9 01:21:24.017: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 5.441655ms
Feb  9 01:21:24.017: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Feb  9 01:21:24.017: INFO: Pod "netserver-1" satisfied condition "running and ready"
Feb  9 01:21:24.023: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-8941" to be "running and ready"
Feb  9 01:21:24.028: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 5.060751ms
Feb  9 01:21:24.028: INFO: The phase of Pod netserver-2 is Running (Ready = true)
Feb  9 01:21:24.028: INFO: Pod "netserver-2" satisfied condition "running and ready"
STEP: Creating test pods 02/09/23 01:21:24.033
Feb  9 01:21:24.041: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-8941" to be "running"
Feb  9 01:21:24.047: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.585056ms
Feb  9 01:21:26.054: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.01295276s
Feb  9 01:21:26.054: INFO: Pod "test-container-pod" satisfied condition "running"
Feb  9 01:21:26.064: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Feb  9 01:21:26.064: INFO: Breadth first check of 10.244.0.224 on host 10.224.0.4...
Feb  9 01:21:26.072: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.225:9080/dial?request=hostname&protocol=http&host=10.244.0.224&port=8083&tries=1'] Namespace:pod-network-test-8941 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:21:26.072: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:21:26.072: INFO: ExecWithOptions: Clientset creation
Feb  9 01:21:26.072: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-8941/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.225%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.224%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Feb  9 01:21:26.179: INFO: Waiting for responses: map[]
Feb  9 01:21:26.179: INFO: reached 10.244.0.224 after 0/1 tries
Feb  9 01:21:26.179: INFO: Breadth first check of 10.244.1.103 on host 10.224.0.5...
Feb  9 01:21:26.186: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.225:9080/dial?request=hostname&protocol=http&host=10.244.1.103&port=8083&tries=1'] Namespace:pod-network-test-8941 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:21:26.186: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:21:26.187: INFO: ExecWithOptions: Clientset creation
Feb  9 01:21:26.187: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-8941/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.225%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.103%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Feb  9 01:21:26.276: INFO: Waiting for responses: map[]
Feb  9 01:21:26.276: INFO: reached 10.244.1.103 after 0/1 tries
Feb  9 01:21:26.276: INFO: Breadth first check of 10.244.2.91 on host 10.224.0.6...
Feb  9 01:21:26.282: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.225:9080/dial?request=hostname&protocol=http&host=10.244.2.91&port=8083&tries=1'] Namespace:pod-network-test-8941 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:21:26.282: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:21:26.282: INFO: ExecWithOptions: Clientset creation
Feb  9 01:21:26.282: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-8941/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.225%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.2.91%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Feb  9 01:21:26.370: INFO: Waiting for responses: map[]
Feb  9 01:21:26.370: INFO: reached 10.244.2.91 after 0/1 tries
Feb  9 01:21:26.370: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Feb  9 01:21:26.370: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-8941" for this suite. 02/09/23 01:21:26.379
------------------------------
â€¢ [SLOW TEST] [14.472 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:82

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:21:11.916
    Feb  9 01:21:11.917: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pod-network-test 02/09/23 01:21:11.918
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:21:11.94
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:21:11.944
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for intra-pod communication: http [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:82
    STEP: Performing setup for networking test in namespace pod-network-test-8941 02/09/23 01:21:11.949
    STEP: creating a selector 02/09/23 01:21:11.95
    STEP: Creating the service pods in kubernetes 02/09/23 01:21:11.95
    Feb  9 01:21:11.950: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Feb  9 01:21:11.990: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-8941" to be "running and ready"
    Feb  9 01:21:11.998: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 7.510398ms
    Feb  9 01:21:11.998: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:21:14.005: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.014047377s
    Feb  9 01:21:14.005: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:21:16.006: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.015329687s
    Feb  9 01:21:16.006: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:21:18.006: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.015460882s
    Feb  9 01:21:18.006: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:21:20.005: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.014081521s
    Feb  9 01:21:20.005: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:21:22.005: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.01409175s
    Feb  9 01:21:22.005: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Feb  9 01:21:24.006: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.015393893s
    Feb  9 01:21:24.006: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Feb  9 01:21:24.006: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Feb  9 01:21:24.012: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-8941" to be "running and ready"
    Feb  9 01:21:24.017: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 5.441655ms
    Feb  9 01:21:24.017: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Feb  9 01:21:24.017: INFO: Pod "netserver-1" satisfied condition "running and ready"
    Feb  9 01:21:24.023: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-8941" to be "running and ready"
    Feb  9 01:21:24.028: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 5.060751ms
    Feb  9 01:21:24.028: INFO: The phase of Pod netserver-2 is Running (Ready = true)
    Feb  9 01:21:24.028: INFO: Pod "netserver-2" satisfied condition "running and ready"
    STEP: Creating test pods 02/09/23 01:21:24.033
    Feb  9 01:21:24.041: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-8941" to be "running"
    Feb  9 01:21:24.047: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.585056ms
    Feb  9 01:21:26.054: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.01295276s
    Feb  9 01:21:26.054: INFO: Pod "test-container-pod" satisfied condition "running"
    Feb  9 01:21:26.064: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
    Feb  9 01:21:26.064: INFO: Breadth first check of 10.244.0.224 on host 10.224.0.4...
    Feb  9 01:21:26.072: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.225:9080/dial?request=hostname&protocol=http&host=10.244.0.224&port=8083&tries=1'] Namespace:pod-network-test-8941 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:21:26.072: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:21:26.072: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:21:26.072: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-8941/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.225%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.224%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Feb  9 01:21:26.179: INFO: Waiting for responses: map[]
    Feb  9 01:21:26.179: INFO: reached 10.244.0.224 after 0/1 tries
    Feb  9 01:21:26.179: INFO: Breadth first check of 10.244.1.103 on host 10.224.0.5...
    Feb  9 01:21:26.186: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.225:9080/dial?request=hostname&protocol=http&host=10.244.1.103&port=8083&tries=1'] Namespace:pod-network-test-8941 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:21:26.186: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:21:26.187: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:21:26.187: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-8941/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.225%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.103%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Feb  9 01:21:26.276: INFO: Waiting for responses: map[]
    Feb  9 01:21:26.276: INFO: reached 10.244.1.103 after 0/1 tries
    Feb  9 01:21:26.276: INFO: Breadth first check of 10.244.2.91 on host 10.224.0.6...
    Feb  9 01:21:26.282: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.225:9080/dial?request=hostname&protocol=http&host=10.244.2.91&port=8083&tries=1'] Namespace:pod-network-test-8941 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:21:26.282: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:21:26.282: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:21:26.282: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-8941/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.225%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.2.91%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Feb  9 01:21:26.370: INFO: Waiting for responses: map[]
    Feb  9 01:21:26.370: INFO: reached 10.244.2.91 after 0/1 tries
    Feb  9 01:21:26.370: INFO: Going to retry 0 out of 3 pods....
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:21:26.370: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-8941" for this suite. 02/09/23 01:21:26.379
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:21:26.389
Feb  9 01:21:26.389: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename job 02/09/23 01:21:26.39
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:21:26.41
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:21:26.414
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366
STEP: Creating Indexed job 02/09/23 01:21:26.419
STEP: Ensuring job reaches completions 02/09/23 01:21:26.427
STEP: Ensuring pods with index for job exist 02/09/23 01:21:36.433
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Feb  9 01:21:36.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-2708" for this suite. 02/09/23 01:21:36.45
------------------------------
â€¢ [SLOW TEST] [10.071 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:21:26.389
    Feb  9 01:21:26.389: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename job 02/09/23 01:21:26.39
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:21:26.41
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:21:26.414
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
      test/e2e/apps/job.go:366
    STEP: Creating Indexed job 02/09/23 01:21:26.419
    STEP: Ensuring job reaches completions 02/09/23 01:21:26.427
    STEP: Ensuring pods with index for job exist 02/09/23 01:21:36.433
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:21:36.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-2708" for this suite. 02/09/23 01:21:36.45
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:21:36.46
Feb  9 01:21:36.461: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:21:36.461
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:21:36.481
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:21:36.489
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:21:36.494
Feb  9 01:21:36.505: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe" in namespace "downward-api-6560" to be "Succeeded or Failed"
Feb  9 01:21:36.511: INFO: Pod "downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe": Phase="Pending", Reason="", readiness=false. Elapsed: 5.506804ms
Feb  9 01:21:38.518: INFO: Pod "downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012405564s
Feb  9 01:21:40.518: INFO: Pod "downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012317209s
STEP: Saw pod success 02/09/23 01:21:40.518
Feb  9 01:21:40.518: INFO: Pod "downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe" satisfied condition "Succeeded or Failed"
Feb  9 01:21:40.524: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe container client-container: <nil>
STEP: delete the pod 02/09/23 01:21:40.537
Feb  9 01:21:40.555: INFO: Waiting for pod downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe to disappear
Feb  9 01:21:40.560: INFO: Pod downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Feb  9 01:21:40.560: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-6560" for this suite. 02/09/23 01:21:40.569
------------------------------
â€¢ [4.120 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:21:36.46
    Feb  9 01:21:36.461: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:21:36.461
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:21:36.481
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:21:36.489
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:261
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:21:36.494
    Feb  9 01:21:36.505: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe" in namespace "downward-api-6560" to be "Succeeded or Failed"
    Feb  9 01:21:36.511: INFO: Pod "downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe": Phase="Pending", Reason="", readiness=false. Elapsed: 5.506804ms
    Feb  9 01:21:38.518: INFO: Pod "downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012405564s
    Feb  9 01:21:40.518: INFO: Pod "downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012317209s
    STEP: Saw pod success 02/09/23 01:21:40.518
    Feb  9 01:21:40.518: INFO: Pod "downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe" satisfied condition "Succeeded or Failed"
    Feb  9 01:21:40.524: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe container client-container: <nil>
    STEP: delete the pod 02/09/23 01:21:40.537
    Feb  9 01:21:40.555: INFO: Waiting for pod downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe to disappear
    Feb  9 01:21:40.560: INFO: Pod downwardapi-volume-f95f909e-c912-42f7-8ae0-aa0bfc7acabe no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:21:40.560: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-6560" for this suite. 02/09/23 01:21:40.569
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:21:40.583
Feb  9 01:21:40.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename resourcequota 02/09/23 01:21:40.583
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:21:40.608
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:21:40.613
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326
STEP: Counting existing ResourceQuota 02/09/23 01:21:57.624
STEP: Creating a ResourceQuota 02/09/23 01:22:02.631
STEP: Ensuring resource quota status is calculated 02/09/23 01:22:02.638
STEP: Creating a ConfigMap 02/09/23 01:22:04.645
STEP: Ensuring resource quota status captures configMap creation 02/09/23 01:22:04.658
STEP: Deleting a ConfigMap 02/09/23 01:22:06.664
STEP: Ensuring resource quota status released usage 02/09/23 01:22:06.674
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Feb  9 01:22:08.681: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-9756" for this suite. 02/09/23 01:22:08.69
------------------------------
â€¢ [SLOW TEST] [28.117 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:21:40.583
    Feb  9 01:21:40.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename resourcequota 02/09/23 01:21:40.583
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:21:40.608
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:21:40.613
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
      test/e2e/apimachinery/resource_quota.go:326
    STEP: Counting existing ResourceQuota 02/09/23 01:21:57.624
    STEP: Creating a ResourceQuota 02/09/23 01:22:02.631
    STEP: Ensuring resource quota status is calculated 02/09/23 01:22:02.638
    STEP: Creating a ConfigMap 02/09/23 01:22:04.645
    STEP: Ensuring resource quota status captures configMap creation 02/09/23 01:22:04.658
    STEP: Deleting a ConfigMap 02/09/23 01:22:06.664
    STEP: Ensuring resource quota status released usage 02/09/23 01:22:06.674
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:22:08.681: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-9756" for this suite. 02/09/23 01:22:08.69
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:22:08.704
Feb  9 01:22:08.704: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename secrets 02/09/23 01:22:08.705
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:08.724
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:08.729
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89
STEP: Creating secret with name secret-test-map-d437e801-05a1-404a-ac50-f067983c8ef1 02/09/23 01:22:08.733
STEP: Creating a pod to test consume secrets 02/09/23 01:22:08.74
Feb  9 01:22:08.753: INFO: Waiting up to 5m0s for pod "pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387" in namespace "secrets-9153" to be "Succeeded or Failed"
Feb  9 01:22:08.759: INFO: Pod "pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387": Phase="Pending", Reason="", readiness=false. Elapsed: 6.172379ms
Feb  9 01:22:10.766: INFO: Pod "pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013436879s
Feb  9 01:22:12.766: INFO: Pod "pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013488488s
STEP: Saw pod success 02/09/23 01:22:12.766
Feb  9 01:22:12.766: INFO: Pod "pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387" satisfied condition "Succeeded or Failed"
Feb  9 01:22:12.772: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387 container secret-volume-test: <nil>
STEP: delete the pod 02/09/23 01:22:12.786
Feb  9 01:22:12.805: INFO: Waiting for pod pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387 to disappear
Feb  9 01:22:12.812: INFO: Pod pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Feb  9 01:22:12.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-9153" for this suite. 02/09/23 01:22:12.82
------------------------------
â€¢ [4.126 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:22:08.704
    Feb  9 01:22:08.704: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename secrets 02/09/23 01:22:08.705
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:08.724
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:08.729
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:89
    STEP: Creating secret with name secret-test-map-d437e801-05a1-404a-ac50-f067983c8ef1 02/09/23 01:22:08.733
    STEP: Creating a pod to test consume secrets 02/09/23 01:22:08.74
    Feb  9 01:22:08.753: INFO: Waiting up to 5m0s for pod "pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387" in namespace "secrets-9153" to be "Succeeded or Failed"
    Feb  9 01:22:08.759: INFO: Pod "pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387": Phase="Pending", Reason="", readiness=false. Elapsed: 6.172379ms
    Feb  9 01:22:10.766: INFO: Pod "pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013436879s
    Feb  9 01:22:12.766: INFO: Pod "pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013488488s
    STEP: Saw pod success 02/09/23 01:22:12.766
    Feb  9 01:22:12.766: INFO: Pod "pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387" satisfied condition "Succeeded or Failed"
    Feb  9 01:22:12.772: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387 container secret-volume-test: <nil>
    STEP: delete the pod 02/09/23 01:22:12.786
    Feb  9 01:22:12.805: INFO: Waiting for pod pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387 to disappear
    Feb  9 01:22:12.812: INFO: Pod pod-secrets-4b6edc73-303d-4284-a046-f9b65790e387 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:22:12.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-9153" for this suite. 02/09/23 01:22:12.82
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:22:12.839
Feb  9 01:22:12.839: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename containers 02/09/23 01:22:12.84
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:12.861
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:12.865
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73
STEP: Creating a pod to test override command 02/09/23 01:22:12.869
Feb  9 01:22:12.881: INFO: Waiting up to 5m0s for pod "client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0" in namespace "containers-6731" to be "Succeeded or Failed"
Feb  9 01:22:12.887: INFO: Pod "client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0": Phase="Pending", Reason="", readiness=false. Elapsed: 5.43097ms
Feb  9 01:22:14.895: INFO: Pod "client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013240077s
Feb  9 01:22:16.895: INFO: Pod "client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013919411s
STEP: Saw pod success 02/09/23 01:22:16.895
Feb  9 01:22:16.896: INFO: Pod "client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0" satisfied condition "Succeeded or Failed"
Feb  9 01:22:16.901: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0 container agnhost-container: <nil>
STEP: delete the pod 02/09/23 01:22:16.914
Feb  9 01:22:16.927: INFO: Waiting for pod client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0 to disappear
Feb  9 01:22:16.932: INFO: Pod client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Feb  9 01:22:16.933: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-6731" for this suite. 02/09/23 01:22:16.941
------------------------------
â€¢ [4.110 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:22:12.839
    Feb  9 01:22:12.839: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename containers 02/09/23 01:22:12.84
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:12.861
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:12.865
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:73
    STEP: Creating a pod to test override command 02/09/23 01:22:12.869
    Feb  9 01:22:12.881: INFO: Waiting up to 5m0s for pod "client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0" in namespace "containers-6731" to be "Succeeded or Failed"
    Feb  9 01:22:12.887: INFO: Pod "client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0": Phase="Pending", Reason="", readiness=false. Elapsed: 5.43097ms
    Feb  9 01:22:14.895: INFO: Pod "client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013240077s
    Feb  9 01:22:16.895: INFO: Pod "client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013919411s
    STEP: Saw pod success 02/09/23 01:22:16.895
    Feb  9 01:22:16.896: INFO: Pod "client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0" satisfied condition "Succeeded or Failed"
    Feb  9 01:22:16.901: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0 container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 01:22:16.914
    Feb  9 01:22:16.927: INFO: Waiting for pod client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0 to disappear
    Feb  9 01:22:16.932: INFO: Pod client-containers-65ddad06-4c6d-4035-a0c9-d57cdc2717f0 no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:22:16.933: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-6731" for this suite. 02/09/23 01:22:16.941
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:22:16.951
Feb  9 01:22:16.951: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:22:16.952
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:16.97
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:16.974
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162
STEP: Creating the pod 02/09/23 01:22:16.979
Feb  9 01:22:16.993: INFO: Waiting up to 5m0s for pod "annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52" in namespace "projected-3767" to be "running and ready"
Feb  9 01:22:16.999: INFO: Pod "annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52": Phase="Pending", Reason="", readiness=false. Elapsed: 5.734158ms
Feb  9 01:22:16.999: INFO: The phase of Pod annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:22:19.006: INFO: Pod "annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52": Phase="Running", Reason="", readiness=true. Elapsed: 2.012894532s
Feb  9 01:22:19.006: INFO: The phase of Pod annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52 is Running (Ready = true)
Feb  9 01:22:19.006: INFO: Pod "annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52" satisfied condition "running and ready"
Feb  9 01:22:19.540: INFO: Successfully updated pod "annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Feb  9 01:22:21.567: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3767" for this suite. 02/09/23 01:22:21.575
------------------------------
â€¢ [4.638 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:22:16.951
    Feb  9 01:22:16.951: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:22:16.952
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:16.97
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:16.974
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should update annotations on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:162
    STEP: Creating the pod 02/09/23 01:22:16.979
    Feb  9 01:22:16.993: INFO: Waiting up to 5m0s for pod "annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52" in namespace "projected-3767" to be "running and ready"
    Feb  9 01:22:16.999: INFO: Pod "annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52": Phase="Pending", Reason="", readiness=false. Elapsed: 5.734158ms
    Feb  9 01:22:16.999: INFO: The phase of Pod annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:22:19.006: INFO: Pod "annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52": Phase="Running", Reason="", readiness=true. Elapsed: 2.012894532s
    Feb  9 01:22:19.006: INFO: The phase of Pod annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52 is Running (Ready = true)
    Feb  9 01:22:19.006: INFO: Pod "annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52" satisfied condition "running and ready"
    Feb  9 01:22:19.540: INFO: Successfully updated pod "annotationupdate03e506c7-0476-4b9b-baba-960a3d996a52"
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:22:21.567: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3767" for this suite. 02/09/23 01:22:21.575
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:22:21.59
Feb  9 01:22:21.590: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:22:21.591
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:21.611
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:21.625
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:22:21.645
Feb  9 01:22:21.665: INFO: Waiting up to 5m0s for pod "downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512" in namespace "projected-4773" to be "Succeeded or Failed"
Feb  9 01:22:21.677: INFO: Pod "downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512": Phase="Pending", Reason="", readiness=false. Elapsed: 11.795621ms
Feb  9 01:22:23.684: INFO: Pod "downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018472947s
Feb  9 01:22:25.685: INFO: Pod "downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019580762s
STEP: Saw pod success 02/09/23 01:22:25.685
Feb  9 01:22:25.685: INFO: Pod "downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512" satisfied condition "Succeeded or Failed"
Feb  9 01:22:25.692: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512 container client-container: <nil>
STEP: delete the pod 02/09/23 01:22:25.704
Feb  9 01:22:25.728: INFO: Waiting for pod downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512 to disappear
Feb  9 01:22:25.736: INFO: Pod downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Feb  9 01:22:25.736: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4773" for this suite. 02/09/23 01:22:25.744
------------------------------
â€¢ [4.167 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:22:21.59
    Feb  9 01:22:21.590: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:22:21.591
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:21.611
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:21.625
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's memory limit [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:207
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:22:21.645
    Feb  9 01:22:21.665: INFO: Waiting up to 5m0s for pod "downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512" in namespace "projected-4773" to be "Succeeded or Failed"
    Feb  9 01:22:21.677: INFO: Pod "downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512": Phase="Pending", Reason="", readiness=false. Elapsed: 11.795621ms
    Feb  9 01:22:23.684: INFO: Pod "downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018472947s
    Feb  9 01:22:25.685: INFO: Pod "downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019580762s
    STEP: Saw pod success 02/09/23 01:22:25.685
    Feb  9 01:22:25.685: INFO: Pod "downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512" satisfied condition "Succeeded or Failed"
    Feb  9 01:22:25.692: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512 container client-container: <nil>
    STEP: delete the pod 02/09/23 01:22:25.704
    Feb  9 01:22:25.728: INFO: Waiting for pod downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512 to disappear
    Feb  9 01:22:25.736: INFO: Pod downwardapi-volume-903a6870-895e-45e9-8471-5846e6f01512 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:22:25.736: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4773" for this suite. 02/09/23 01:22:25.744
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:22:25.757
Feb  9 01:22:25.757: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:22:25.758
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:25.781
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:25.789
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:22:25.794
Feb  9 01:22:25.805: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a" in namespace "projected-4133" to be "Succeeded or Failed"
Feb  9 01:22:25.811: INFO: Pod "downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.780039ms
Feb  9 01:22:27.818: INFO: Pod "downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01223334s
Feb  9 01:22:29.821: INFO: Pod "downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015289148s
STEP: Saw pod success 02/09/23 01:22:29.821
Feb  9 01:22:29.821: INFO: Pod "downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a" satisfied condition "Succeeded or Failed"
Feb  9 01:22:29.827: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a container client-container: <nil>
STEP: delete the pod 02/09/23 01:22:29.839
Feb  9 01:22:29.853: INFO: Waiting for pod downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a to disappear
Feb  9 01:22:29.858: INFO: Pod downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Feb  9 01:22:29.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4133" for this suite. 02/09/23 01:22:29.866
------------------------------
â€¢ [4.118 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:22:25.757
    Feb  9 01:22:25.757: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:22:25.758
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:25.781
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:25.789
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's cpu limit [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:193
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:22:25.794
    Feb  9 01:22:25.805: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a" in namespace "projected-4133" to be "Succeeded or Failed"
    Feb  9 01:22:25.811: INFO: Pod "downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.780039ms
    Feb  9 01:22:27.818: INFO: Pod "downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01223334s
    Feb  9 01:22:29.821: INFO: Pod "downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015289148s
    STEP: Saw pod success 02/09/23 01:22:29.821
    Feb  9 01:22:29.821: INFO: Pod "downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a" satisfied condition "Succeeded or Failed"
    Feb  9 01:22:29.827: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a container client-container: <nil>
    STEP: delete the pod 02/09/23 01:22:29.839
    Feb  9 01:22:29.853: INFO: Waiting for pod downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a to disappear
    Feb  9 01:22:29.858: INFO: Pod downwardapi-volume-6327b612-5675-426d-87f8-e5990e05379a no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:22:29.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4133" for this suite. 02/09/23 01:22:29.866
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:22:29.877
Feb  9 01:22:29.877: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename resourcequota 02/09/23 01:22:29.878
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:29.899
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:29.903
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448
STEP: Counting existing ResourceQuota 02/09/23 01:22:29.907
STEP: Creating a ResourceQuota 02/09/23 01:22:34.914
STEP: Ensuring resource quota status is calculated 02/09/23 01:22:34.921
STEP: Creating a ReplicaSet 02/09/23 01:22:36.928
STEP: Ensuring resource quota status captures replicaset creation 02/09/23 01:22:36.941
STEP: Deleting a ReplicaSet 02/09/23 01:22:38.948
STEP: Ensuring resource quota status released usage 02/09/23 01:22:38.957
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Feb  9 01:22:40.964: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-5880" for this suite. 02/09/23 01:22:40.973
------------------------------
â€¢ [SLOW TEST] [11.105 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:22:29.877
    Feb  9 01:22:29.877: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename resourcequota 02/09/23 01:22:29.878
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:29.899
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:29.903
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
      test/e2e/apimachinery/resource_quota.go:448
    STEP: Counting existing ResourceQuota 02/09/23 01:22:29.907
    STEP: Creating a ResourceQuota 02/09/23 01:22:34.914
    STEP: Ensuring resource quota status is calculated 02/09/23 01:22:34.921
    STEP: Creating a ReplicaSet 02/09/23 01:22:36.928
    STEP: Ensuring resource quota status captures replicaset creation 02/09/23 01:22:36.941
    STEP: Deleting a ReplicaSet 02/09/23 01:22:38.948
    STEP: Ensuring resource quota status released usage 02/09/23 01:22:38.957
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:22:40.964: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-5880" for this suite. 02/09/23 01:22:40.973
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/apps/statefulset.go:697
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:22:40.983
Feb  9 01:22:40.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename statefulset 02/09/23 01:22:40.984
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:41.01
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:41.014
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-4943 02/09/23 01:22:41.019
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/apps/statefulset.go:697
STEP: Creating stateful set ss in namespace statefulset-4943 02/09/23 01:22:41.028
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4943 02/09/23 01:22:41.035
Feb  9 01:22:41.040: INFO: Found 0 stateful pods, waiting for 1
Feb  9 01:22:51.047: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod 02/09/23 01:22:51.047
Feb  9 01:22:51.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Feb  9 01:22:51.207: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Feb  9 01:22:51.207: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Feb  9 01:22:51.207: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Feb  9 01:22:51.213: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Feb  9 01:23:01.221: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Feb  9 01:23:01.221: INFO: Waiting for statefulset status.replicas updated to 0
Feb  9 01:23:01.246: INFO: POD   NODE                           PHASE    GRACE  CONDITIONS
Feb  9 01:23:01.246: INFO: ss-0  aks-nodes-15799032-vmss000000  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:22:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:22:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:22:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:22:41 +0000 UTC  }]
Feb  9 01:23:01.246: INFO: 
Feb  9 01:23:01.246: INFO: StatefulSet ss has not reached scale 3, at 1
Feb  9 01:23:02.254: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994405244s
Feb  9 01:23:03.266: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.986987565s
Feb  9 01:23:04.272: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.975340105s
Feb  9 01:23:05.280: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.968518133s
Feb  9 01:23:06.287: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.960707253s
Feb  9 01:23:07.294: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.953908282s
Feb  9 01:23:08.301: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.946623406s
Feb  9 01:23:09.308: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.939956635s
Feb  9 01:23:10.315: INFO: Verifying statefulset ss doesn't scale past 3 for another 932.35752ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4943 02/09/23 01:23:11.316
Feb  9 01:23:11.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Feb  9 01:23:11.497: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Feb  9 01:23:11.497: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Feb  9 01:23:11.497: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Feb  9 01:23:11.497: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Feb  9 01:23:11.655: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Feb  9 01:23:11.655: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Feb  9 01:23:11.655: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Feb  9 01:23:11.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Feb  9 01:23:11.811: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Feb  9 01:23:11.811: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Feb  9 01:23:11.811: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Feb  9 01:23:11.817: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
Feb  9 01:23:21.826: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Feb  9 01:23:21.826: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Feb  9 01:23:21.826: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod 02/09/23 01:23:21.826
Feb  9 01:23:21.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Feb  9 01:23:21.978: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Feb  9 01:23:21.978: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Feb  9 01:23:21.978: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Feb  9 01:23:21.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Feb  9 01:23:22.132: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Feb  9 01:23:22.132: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Feb  9 01:23:22.132: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Feb  9 01:23:22.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Feb  9 01:23:22.279: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Feb  9 01:23:22.279: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Feb  9 01:23:22.279: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Feb  9 01:23:22.279: INFO: Waiting for statefulset status.replicas updated to 0
Feb  9 01:23:22.284: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Feb  9 01:23:32.298: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Feb  9 01:23:32.298: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Feb  9 01:23:32.298: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Feb  9 01:23:32.318: INFO: POD   NODE                           PHASE    GRACE  CONDITIONS
Feb  9 01:23:32.318: INFO: ss-0  aks-nodes-15799032-vmss000000  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:22:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:22:41 +0000 UTC  }]
Feb  9 01:23:32.318: INFO: ss-1  aks-nodes-15799032-vmss000001  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:01 +0000 UTC  }]
Feb  9 01:23:32.318: INFO: ss-2  aks-nodes-15799032-vmss000002  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:01 +0000 UTC  }]
Feb  9 01:23:32.318: INFO: 
Feb  9 01:23:32.318: INFO: StatefulSet ss has not reached scale 0, at 3
Feb  9 01:23:33.324: INFO: POD   NODE                           PHASE    GRACE  CONDITIONS
Feb  9 01:23:33.324: INFO: ss-1  aks-nodes-15799032-vmss000001  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:01 +0000 UTC  }]
Feb  9 01:23:33.324: INFO: 
Feb  9 01:23:33.324: INFO: StatefulSet ss has not reached scale 0, at 1
Feb  9 01:23:34.331: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.987194613s
Feb  9 01:23:35.338: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.980504817s
Feb  9 01:23:36.344: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.974241022s
Feb  9 01:23:37.352: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.967089078s
Feb  9 01:23:38.359: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.96045384s
Feb  9 01:23:39.366: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.953152795s
Feb  9 01:23:40.373: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.945432544s
Feb  9 01:23:41.379: INFO: Verifying statefulset ss doesn't scale past 0 for another 938.785406ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4943 02/09/23 01:23:42.38
Feb  9 01:23:42.386: INFO: Scaling statefulset ss to 0
Feb  9 01:23:42.405: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Feb  9 01:23:42.411: INFO: Deleting all statefulset in ns statefulset-4943
Feb  9 01:23:42.418: INFO: Scaling statefulset ss to 0
Feb  9 01:23:42.436: INFO: Waiting for statefulset status.replicas updated to 0
Feb  9 01:23:42.442: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Feb  9 01:23:42.464: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-4943" for this suite. 02/09/23 01:23:42.475
------------------------------
â€¢ [SLOW TEST] [61.501 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/apps/statefulset.go:697

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:22:40.983
    Feb  9 01:22:40.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename statefulset 02/09/23 01:22:40.984
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:22:41.01
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:22:41.014
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-4943 02/09/23 01:22:41.019
    [It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
      test/e2e/apps/statefulset.go:697
    STEP: Creating stateful set ss in namespace statefulset-4943 02/09/23 01:22:41.028
    STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4943 02/09/23 01:22:41.035
    Feb  9 01:22:41.040: INFO: Found 0 stateful pods, waiting for 1
    Feb  9 01:22:51.047: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod 02/09/23 01:22:51.047
    Feb  9 01:22:51.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Feb  9 01:22:51.207: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Feb  9 01:22:51.207: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Feb  9 01:22:51.207: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Feb  9 01:22:51.213: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
    Feb  9 01:23:01.221: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Feb  9 01:23:01.221: INFO: Waiting for statefulset status.replicas updated to 0
    Feb  9 01:23:01.246: INFO: POD   NODE                           PHASE    GRACE  CONDITIONS
    Feb  9 01:23:01.246: INFO: ss-0  aks-nodes-15799032-vmss000000  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:22:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:22:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:22:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:22:41 +0000 UTC  }]
    Feb  9 01:23:01.246: INFO: 
    Feb  9 01:23:01.246: INFO: StatefulSet ss has not reached scale 3, at 1
    Feb  9 01:23:02.254: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994405244s
    Feb  9 01:23:03.266: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.986987565s
    Feb  9 01:23:04.272: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.975340105s
    Feb  9 01:23:05.280: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.968518133s
    Feb  9 01:23:06.287: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.960707253s
    Feb  9 01:23:07.294: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.953908282s
    Feb  9 01:23:08.301: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.946623406s
    Feb  9 01:23:09.308: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.939956635s
    Feb  9 01:23:10.315: INFO: Verifying statefulset ss doesn't scale past 3 for another 932.35752ms
    STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4943 02/09/23 01:23:11.316
    Feb  9 01:23:11.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Feb  9 01:23:11.497: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Feb  9 01:23:11.497: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Feb  9 01:23:11.497: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Feb  9 01:23:11.497: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Feb  9 01:23:11.655: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
    Feb  9 01:23:11.655: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Feb  9 01:23:11.655: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Feb  9 01:23:11.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Feb  9 01:23:11.811: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
    Feb  9 01:23:11.811: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Feb  9 01:23:11.811: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Feb  9 01:23:11.817: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
    Feb  9 01:23:21.826: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Feb  9 01:23:21.826: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Feb  9 01:23:21.826: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Scale down will not halt with unhealthy stateful pod 02/09/23 01:23:21.826
    Feb  9 01:23:21.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Feb  9 01:23:21.978: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Feb  9 01:23:21.978: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Feb  9 01:23:21.978: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Feb  9 01:23:21.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Feb  9 01:23:22.132: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Feb  9 01:23:22.132: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Feb  9 01:23:22.132: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Feb  9 01:23:22.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=statefulset-4943 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Feb  9 01:23:22.279: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Feb  9 01:23:22.279: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Feb  9 01:23:22.279: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Feb  9 01:23:22.279: INFO: Waiting for statefulset status.replicas updated to 0
    Feb  9 01:23:22.284: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
    Feb  9 01:23:32.298: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Feb  9 01:23:32.298: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
    Feb  9 01:23:32.298: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
    Feb  9 01:23:32.318: INFO: POD   NODE                           PHASE    GRACE  CONDITIONS
    Feb  9 01:23:32.318: INFO: ss-0  aks-nodes-15799032-vmss000000  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:22:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:22:41 +0000 UTC  }]
    Feb  9 01:23:32.318: INFO: ss-1  aks-nodes-15799032-vmss000001  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:01 +0000 UTC  }]
    Feb  9 01:23:32.318: INFO: ss-2  aks-nodes-15799032-vmss000002  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:01 +0000 UTC  }]
    Feb  9 01:23:32.318: INFO: 
    Feb  9 01:23:32.318: INFO: StatefulSet ss has not reached scale 0, at 3
    Feb  9 01:23:33.324: INFO: POD   NODE                           PHASE    GRACE  CONDITIONS
    Feb  9 01:23:33.324: INFO: ss-1  aks-nodes-15799032-vmss000001  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:23:01 +0000 UTC  }]
    Feb  9 01:23:33.324: INFO: 
    Feb  9 01:23:33.324: INFO: StatefulSet ss has not reached scale 0, at 1
    Feb  9 01:23:34.331: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.987194613s
    Feb  9 01:23:35.338: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.980504817s
    Feb  9 01:23:36.344: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.974241022s
    Feb  9 01:23:37.352: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.967089078s
    Feb  9 01:23:38.359: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.96045384s
    Feb  9 01:23:39.366: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.953152795s
    Feb  9 01:23:40.373: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.945432544s
    Feb  9 01:23:41.379: INFO: Verifying statefulset ss doesn't scale past 0 for another 938.785406ms
    STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4943 02/09/23 01:23:42.38
    Feb  9 01:23:42.386: INFO: Scaling statefulset ss to 0
    Feb  9 01:23:42.405: INFO: Waiting for statefulset status.replicas updated to 0
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Feb  9 01:23:42.411: INFO: Deleting all statefulset in ns statefulset-4943
    Feb  9 01:23:42.418: INFO: Scaling statefulset ss to 0
    Feb  9 01:23:42.436: INFO: Waiting for statefulset status.replicas updated to 0
    Feb  9 01:23:42.442: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:23:42.464: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-4943" for this suite. 02/09/23 01:23:42.475
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/network/proxy.go:380
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:23:42.489
Feb  9 01:23:42.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename proxy 02/09/23 01:23:42.49
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:23:42.51
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:23:42.514
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/network/proxy.go:380
Feb  9 01:23:42.519: INFO: Creating pod...
Feb  9 01:23:42.533: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-5604" to be "running"
Feb  9 01:23:42.538: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 5.659567ms
Feb  9 01:23:44.545: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.012261192s
Feb  9 01:23:44.545: INFO: Pod "agnhost" satisfied condition "running"
Feb  9 01:23:44.545: INFO: Creating service...
Feb  9 01:23:44.558: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=DELETE
Feb  9 01:23:44.573: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Feb  9 01:23:44.573: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=OPTIONS
Feb  9 01:23:44.581: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Feb  9 01:23:44.581: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=PATCH
Feb  9 01:23:44.588: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Feb  9 01:23:44.588: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=POST
Feb  9 01:23:44.595: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Feb  9 01:23:44.596: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=PUT
Feb  9 01:23:44.604: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Feb  9 01:23:44.604: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=DELETE
Feb  9 01:23:44.617: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Feb  9 01:23:44.617: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=OPTIONS
Feb  9 01:23:44.631: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Feb  9 01:23:44.631: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=PATCH
Feb  9 01:23:44.643: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Feb  9 01:23:44.643: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=POST
Feb  9 01:23:44.653: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Feb  9 01:23:44.653: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=PUT
Feb  9 01:23:44.663: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Feb  9 01:23:44.664: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=GET
Feb  9 01:23:44.669: INFO: http.Client request:GET StatusCode:301
Feb  9 01:23:44.669: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=GET
Feb  9 01:23:44.677: INFO: http.Client request:GET StatusCode:301
Feb  9 01:23:44.677: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=HEAD
Feb  9 01:23:44.682: INFO: http.Client request:HEAD StatusCode:301
Feb  9 01:23:44.682: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=HEAD
Feb  9 01:23:44.691: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Feb  9 01:23:44.691: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-5604" for this suite. 02/09/23 01:23:44.701
------------------------------
â€¢ [2.221 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    A set of valid responses are returned for both pod and service Proxy [Conformance]
    test/e2e/network/proxy.go:380

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:23:42.489
    Feb  9 01:23:42.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename proxy 02/09/23 01:23:42.49
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:23:42.51
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:23:42.514
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] A set of valid responses are returned for both pod and service Proxy [Conformance]
      test/e2e/network/proxy.go:380
    Feb  9 01:23:42.519: INFO: Creating pod...
    Feb  9 01:23:42.533: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-5604" to be "running"
    Feb  9 01:23:42.538: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 5.659567ms
    Feb  9 01:23:44.545: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.012261192s
    Feb  9 01:23:44.545: INFO: Pod "agnhost" satisfied condition "running"
    Feb  9 01:23:44.545: INFO: Creating service...
    Feb  9 01:23:44.558: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=DELETE
    Feb  9 01:23:44.573: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Feb  9 01:23:44.573: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=OPTIONS
    Feb  9 01:23:44.581: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Feb  9 01:23:44.581: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=PATCH
    Feb  9 01:23:44.588: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Feb  9 01:23:44.588: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=POST
    Feb  9 01:23:44.595: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Feb  9 01:23:44.596: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=PUT
    Feb  9 01:23:44.604: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Feb  9 01:23:44.604: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=DELETE
    Feb  9 01:23:44.617: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Feb  9 01:23:44.617: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=OPTIONS
    Feb  9 01:23:44.631: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Feb  9 01:23:44.631: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=PATCH
    Feb  9 01:23:44.643: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Feb  9 01:23:44.643: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=POST
    Feb  9 01:23:44.653: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Feb  9 01:23:44.653: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=PUT
    Feb  9 01:23:44.663: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Feb  9 01:23:44.664: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=GET
    Feb  9 01:23:44.669: INFO: http.Client request:GET StatusCode:301
    Feb  9 01:23:44.669: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=GET
    Feb  9 01:23:44.677: INFO: http.Client request:GET StatusCode:301
    Feb  9 01:23:44.677: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/pods/agnhost/proxy?method=HEAD
    Feb  9 01:23:44.682: INFO: http.Client request:HEAD StatusCode:301
    Feb  9 01:23:44.682: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-5604/services/e2e-proxy-test-service/proxy?method=HEAD
    Feb  9 01:23:44.691: INFO: http.Client request:HEAD StatusCode:301
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:23:44.691: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-5604" for this suite. 02/09/23 01:23:44.701
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:23:44.711
Feb  9 01:23:44.711: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 01:23:44.712
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:23:44.733
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:23:44.737
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 01:23:44.759
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:23:45.124
STEP: Deploying the webhook pod 02/09/23 01:23:45.138
STEP: Wait for the deployment to be ready 02/09/23 01:23:45.152
Feb  9 01:23:45.164: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 01:23:47.182
STEP: Verifying the service has paired with the endpoint 02/09/23 01:23:47.196
Feb  9 01:23:48.197: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API 02/09/23 01:23:48.204
STEP: create a namespace for the webhook 02/09/23 01:23:48.226
STEP: create a configmap should be unconditionally rejected by the webhook 02/09/23 01:23:48.236
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:23:48.305: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-6162" for this suite. 02/09/23 01:23:48.363
STEP: Destroying namespace "webhook-6162-markers" for this suite. 02/09/23 01:23:48.373
------------------------------
â€¢ [3.670 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:23:44.711
    Feb  9 01:23:44.711: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 01:23:44.712
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:23:44.733
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:23:44.737
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 01:23:44.759
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:23:45.124
    STEP: Deploying the webhook pod 02/09/23 01:23:45.138
    STEP: Wait for the deployment to be ready 02/09/23 01:23:45.152
    Feb  9 01:23:45.164: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 01:23:47.182
    STEP: Verifying the service has paired with the endpoint 02/09/23 01:23:47.196
    Feb  9 01:23:48.197: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should unconditionally reject operations on fail closed webhook [Conformance]
      test/e2e/apimachinery/webhook.go:239
    STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API 02/09/23 01:23:48.204
    STEP: create a namespace for the webhook 02/09/23 01:23:48.226
    STEP: create a configmap should be unconditionally rejected by the webhook 02/09/23 01:23:48.236
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:23:48.305: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-6162" for this suite. 02/09/23 01:23:48.363
    STEP: Destroying namespace "webhook-6162-markers" for this suite. 02/09/23 01:23:48.373
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:23:48.383
Feb  9 01:23:48.383: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename resourcequota 02/09/23 01:23:48.384
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:23:48.402
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:23:48.407
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884
STEP: Creating a ResourceQuota 02/09/23 01:23:48.411
STEP: Getting a ResourceQuota 02/09/23 01:23:48.417
STEP: Updating a ResourceQuota 02/09/23 01:23:48.435
STEP: Verifying a ResourceQuota was modified 02/09/23 01:23:48.441
STEP: Deleting a ResourceQuota 02/09/23 01:23:48.446
STEP: Verifying the deleted ResourceQuota 02/09/23 01:23:48.454
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Feb  9 01:23:48.460: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-364" for this suite. 02/09/23 01:23:48.467
------------------------------
â€¢ [0.092 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:23:48.383
    Feb  9 01:23:48.383: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename resourcequota 02/09/23 01:23:48.384
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:23:48.402
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:23:48.407
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to update and delete ResourceQuota. [Conformance]
      test/e2e/apimachinery/resource_quota.go:884
    STEP: Creating a ResourceQuota 02/09/23 01:23:48.411
    STEP: Getting a ResourceQuota 02/09/23 01:23:48.417
    STEP: Updating a ResourceQuota 02/09/23 01:23:48.435
    STEP: Verifying a ResourceQuota was modified 02/09/23 01:23:48.441
    STEP: Deleting a ResourceQuota 02/09/23 01:23:48.446
    STEP: Verifying the deleted ResourceQuota 02/09/23 01:23:48.454
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:23:48.460: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-364" for this suite. 02/09/23 01:23:48.467
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:23:48.481
Feb  9 01:23:48.481: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 01:23:48.482
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:23:48.5
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:23:48.505
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:23:48.577: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-4538" for this suite. 02/09/23 01:23:48.585
------------------------------
â€¢ [0.113 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:23:48.481
    Feb  9 01:23:48.481: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 01:23:48.482
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:23:48.5
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:23:48.505
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be immutable if `immutable` field is set [Conformance]
      test/e2e/common/storage/configmap_volume.go:504
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:23:48.577: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-4538" for this suite. 02/09/23 01:23:48.585
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:23:48.596
Feb  9 01:23:48.596: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:23:48.596
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:23:48.618
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:23:48.622
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194
Feb  9 01:23:48.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 02/09/23 01:23:50.303
Feb  9 01:23:50.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-3626 --namespace=crd-publish-openapi-3626 create -f -'
Feb  9 01:23:50.879: INFO: stderr: ""
Feb  9 01:23:50.879: INFO: stdout: "e2e-test-crd-publish-openapi-7990-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Feb  9 01:23:50.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-3626 --namespace=crd-publish-openapi-3626 delete e2e-test-crd-publish-openapi-7990-crds test-cr'
Feb  9 01:23:51.057: INFO: stderr: ""
Feb  9 01:23:51.057: INFO: stdout: "e2e-test-crd-publish-openapi-7990-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Feb  9 01:23:51.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-3626 --namespace=crd-publish-openapi-3626 apply -f -'
Feb  9 01:23:51.248: INFO: stderr: ""
Feb  9 01:23:51.248: INFO: stdout: "e2e-test-crd-publish-openapi-7990-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Feb  9 01:23:51.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-3626 --namespace=crd-publish-openapi-3626 delete e2e-test-crd-publish-openapi-7990-crds test-cr'
Feb  9 01:23:51.331: INFO: stderr: ""
Feb  9 01:23:51.331: INFO: stdout: "e2e-test-crd-publish-openapi-7990-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR 02/09/23 01:23:51.331
Feb  9 01:23:51.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-3626 explain e2e-test-crd-publish-openapi-7990-crds'
Feb  9 01:23:51.489: INFO: stderr: ""
Feb  9 01:23:51.489: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7990-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:23:53.078: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-3626" for this suite. 02/09/23 01:23:53.094
------------------------------
â€¢ [4.509 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:23:48.596
    Feb  9 01:23:48.596: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:23:48.596
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:23:48.618
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:23:48.622
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD preserving unknown fields at the schema root [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:194
    Feb  9 01:23:48.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 02/09/23 01:23:50.303
    Feb  9 01:23:50.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-3626 --namespace=crd-publish-openapi-3626 create -f -'
    Feb  9 01:23:50.879: INFO: stderr: ""
    Feb  9 01:23:50.879: INFO: stdout: "e2e-test-crd-publish-openapi-7990-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
    Feb  9 01:23:50.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-3626 --namespace=crd-publish-openapi-3626 delete e2e-test-crd-publish-openapi-7990-crds test-cr'
    Feb  9 01:23:51.057: INFO: stderr: ""
    Feb  9 01:23:51.057: INFO: stdout: "e2e-test-crd-publish-openapi-7990-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
    Feb  9 01:23:51.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-3626 --namespace=crd-publish-openapi-3626 apply -f -'
    Feb  9 01:23:51.248: INFO: stderr: ""
    Feb  9 01:23:51.248: INFO: stdout: "e2e-test-crd-publish-openapi-7990-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
    Feb  9 01:23:51.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-3626 --namespace=crd-publish-openapi-3626 delete e2e-test-crd-publish-openapi-7990-crds test-cr'
    Feb  9 01:23:51.331: INFO: stderr: ""
    Feb  9 01:23:51.331: INFO: stdout: "e2e-test-crd-publish-openapi-7990-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR 02/09/23 01:23:51.331
    Feb  9 01:23:51.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-3626 explain e2e-test-crd-publish-openapi-7990-crds'
    Feb  9 01:23:51.489: INFO: stderr: ""
    Feb  9 01:23:51.489: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7990-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:23:53.078: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-3626" for this suite. 02/09/23 01:23:53.094
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:23:53.105
Feb  9 01:23:53.105: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename endpointslice 02/09/23 01:23:53.106
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:23:53.127
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:23:53.131
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205
STEP: referencing a single matching pod 02/09/23 01:23:58.226
STEP: referencing matching pods with named port 02/09/23 01:24:03.239
STEP: creating empty Endpoints and EndpointSlices for no matching Pods 02/09/23 01:24:08.252
STEP: recreating EndpointSlices after they've been deleted 02/09/23 01:24:13.267
Feb  9 01:24:13.296: INFO: EndpointSlice for Service endpointslice-8260/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Feb  9 01:24:23.313: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-8260" for this suite. 02/09/23 01:24:23.321
------------------------------
â€¢ [SLOW TEST] [30.225 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:23:53.105
    Feb  9 01:23:53.105: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename endpointslice 02/09/23 01:23:53.106
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:23:53.127
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:23:53.131
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
      test/e2e/network/endpointslice.go:205
    STEP: referencing a single matching pod 02/09/23 01:23:58.226
    STEP: referencing matching pods with named port 02/09/23 01:24:03.239
    STEP: creating empty Endpoints and EndpointSlices for no matching Pods 02/09/23 01:24:08.252
    STEP: recreating EndpointSlices after they've been deleted 02/09/23 01:24:13.267
    Feb  9 01:24:13.296: INFO: EndpointSlice for Service endpointslice-8260/example-named-port not found
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:24:23.313: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-8260" for this suite. 02/09/23 01:24:23.321
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:24:23.331
Feb  9 01:24:23.331: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 01:24:23.332
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:24:23.355
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:24:23.359
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74
STEP: Creating configMap with name configmap-test-volume-6205923f-cd70-451d-95b3-b1705d6a22d9 02/09/23 01:24:23.364
STEP: Creating a pod to test consume configMaps 02/09/23 01:24:23.37
Feb  9 01:24:23.382: INFO: Waiting up to 5m0s for pod "pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f" in namespace "configmap-6591" to be "Succeeded or Failed"
Feb  9 01:24:23.389: INFO: Pod "pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f": Phase="Pending", Reason="", readiness=false. Elapsed: 6.218457ms
Feb  9 01:24:25.395: INFO: Pod "pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012951147s
Feb  9 01:24:27.399: INFO: Pod "pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016633218s
STEP: Saw pod success 02/09/23 01:24:27.399
Feb  9 01:24:27.399: INFO: Pod "pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f" satisfied condition "Succeeded or Failed"
Feb  9 01:24:27.404: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f container agnhost-container: <nil>
STEP: delete the pod 02/09/23 01:24:27.418
Feb  9 01:24:27.435: INFO: Waiting for pod pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f to disappear
Feb  9 01:24:27.441: INFO: Pod pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:24:27.441: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-6591" for this suite. 02/09/23 01:24:27.449
------------------------------
â€¢ [4.127 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:24:23.331
    Feb  9 01:24:23.331: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 01:24:23.332
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:24:23.355
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:24:23.359
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:74
    STEP: Creating configMap with name configmap-test-volume-6205923f-cd70-451d-95b3-b1705d6a22d9 02/09/23 01:24:23.364
    STEP: Creating a pod to test consume configMaps 02/09/23 01:24:23.37
    Feb  9 01:24:23.382: INFO: Waiting up to 5m0s for pod "pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f" in namespace "configmap-6591" to be "Succeeded or Failed"
    Feb  9 01:24:23.389: INFO: Pod "pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f": Phase="Pending", Reason="", readiness=false. Elapsed: 6.218457ms
    Feb  9 01:24:25.395: INFO: Pod "pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012951147s
    Feb  9 01:24:27.399: INFO: Pod "pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016633218s
    STEP: Saw pod success 02/09/23 01:24:27.399
    Feb  9 01:24:27.399: INFO: Pod "pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f" satisfied condition "Succeeded or Failed"
    Feb  9 01:24:27.404: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 01:24:27.418
    Feb  9 01:24:27.435: INFO: Waiting for pod pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f to disappear
    Feb  9 01:24:27.441: INFO: Pod pod-configmaps-5ee255f3-fab8-4a8c-ba8c-7ebee5e1e46f no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:24:27.441: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-6591" for this suite. 02/09/23 01:24:27.449
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:24:27.458
Feb  9 01:24:27.458: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename resourcequota 02/09/23 01:24:27.459
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:24:27.478
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:24:27.483
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010
STEP: Creating resourceQuota "e2e-rq-status-vffnd" 02/09/23 01:24:27.492
Feb  9 01:24:27.505: INFO: Resource quota "e2e-rq-status-vffnd" reports spec: hard cpu limit of 500m
Feb  9 01:24:27.505: INFO: Resource quota "e2e-rq-status-vffnd" reports spec: hard memory limit of 500Mi
STEP: Updating resourceQuota "e2e-rq-status-vffnd" /status 02/09/23 01:24:27.505
STEP: Confirm /status for "e2e-rq-status-vffnd" resourceQuota via watch 02/09/23 01:24:27.517
Feb  9 01:24:27.519: INFO: observed resourceQuota "e2e-rq-status-vffnd" in namespace "resourcequota-1282" with hard status: v1.ResourceList(nil)
Feb  9 01:24:27.519: INFO: Found resourceQuota "e2e-rq-status-vffnd" in namespace "resourcequota-1282" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
Feb  9 01:24:27.519: INFO: ResourceQuota "e2e-rq-status-vffnd" /status was updated
STEP: Patching hard spec values for cpu & memory 02/09/23 01:24:27.525
Feb  9 01:24:27.535: INFO: Resource quota "e2e-rq-status-vffnd" reports spec: hard cpu limit of 1
Feb  9 01:24:27.535: INFO: Resource quota "e2e-rq-status-vffnd" reports spec: hard memory limit of 1Gi
STEP: Patching "e2e-rq-status-vffnd" /status 02/09/23 01:24:27.535
STEP: Confirm /status for "e2e-rq-status-vffnd" resourceQuota via watch 02/09/23 01:24:27.542
Feb  9 01:24:27.544: INFO: observed resourceQuota "e2e-rq-status-vffnd" in namespace "resourcequota-1282" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
Feb  9 01:24:27.544: INFO: Found resourceQuota "e2e-rq-status-vffnd" in namespace "resourcequota-1282" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
Feb  9 01:24:27.544: INFO: ResourceQuota "e2e-rq-status-vffnd" /status was patched
STEP: Get "e2e-rq-status-vffnd" /status 02/09/23 01:24:27.544
Feb  9 01:24:27.551: INFO: Resourcequota "e2e-rq-status-vffnd" reports status: hard cpu of 1
Feb  9 01:24:27.551: INFO: Resourcequota "e2e-rq-status-vffnd" reports status: hard memory of 1Gi
STEP: Repatching "e2e-rq-status-vffnd" /status before checking Spec is unchanged 02/09/23 01:24:27.556
Feb  9 01:24:27.563: INFO: Resourcequota "e2e-rq-status-vffnd" reports status: hard cpu of 2
Feb  9 01:24:27.563: INFO: Resourcequota "e2e-rq-status-vffnd" reports status: hard memory of 2Gi
Feb  9 01:24:27.565: INFO: Found resourceQuota "e2e-rq-status-vffnd" in namespace "resourcequota-1282" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
Feb  9 01:27:32.579: INFO: ResourceQuota "e2e-rq-status-vffnd" Spec was unchanged and /status reset
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Feb  9 01:27:32.579: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-1282" for this suite. 02/09/23 01:27:32.587
------------------------------
â€¢ [SLOW TEST] [185.139 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:24:27.458
    Feb  9 01:24:27.458: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename resourcequota 02/09/23 01:24:27.459
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:24:27.478
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:24:27.483
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a resourcequota status [Conformance]
      test/e2e/apimachinery/resource_quota.go:1010
    STEP: Creating resourceQuota "e2e-rq-status-vffnd" 02/09/23 01:24:27.492
    Feb  9 01:24:27.505: INFO: Resource quota "e2e-rq-status-vffnd" reports spec: hard cpu limit of 500m
    Feb  9 01:24:27.505: INFO: Resource quota "e2e-rq-status-vffnd" reports spec: hard memory limit of 500Mi
    STEP: Updating resourceQuota "e2e-rq-status-vffnd" /status 02/09/23 01:24:27.505
    STEP: Confirm /status for "e2e-rq-status-vffnd" resourceQuota via watch 02/09/23 01:24:27.517
    Feb  9 01:24:27.519: INFO: observed resourceQuota "e2e-rq-status-vffnd" in namespace "resourcequota-1282" with hard status: v1.ResourceList(nil)
    Feb  9 01:24:27.519: INFO: Found resourceQuota "e2e-rq-status-vffnd" in namespace "resourcequota-1282" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
    Feb  9 01:24:27.519: INFO: ResourceQuota "e2e-rq-status-vffnd" /status was updated
    STEP: Patching hard spec values for cpu & memory 02/09/23 01:24:27.525
    Feb  9 01:24:27.535: INFO: Resource quota "e2e-rq-status-vffnd" reports spec: hard cpu limit of 1
    Feb  9 01:24:27.535: INFO: Resource quota "e2e-rq-status-vffnd" reports spec: hard memory limit of 1Gi
    STEP: Patching "e2e-rq-status-vffnd" /status 02/09/23 01:24:27.535
    STEP: Confirm /status for "e2e-rq-status-vffnd" resourceQuota via watch 02/09/23 01:24:27.542
    Feb  9 01:24:27.544: INFO: observed resourceQuota "e2e-rq-status-vffnd" in namespace "resourcequota-1282" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
    Feb  9 01:24:27.544: INFO: Found resourceQuota "e2e-rq-status-vffnd" in namespace "resourcequota-1282" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
    Feb  9 01:24:27.544: INFO: ResourceQuota "e2e-rq-status-vffnd" /status was patched
    STEP: Get "e2e-rq-status-vffnd" /status 02/09/23 01:24:27.544
    Feb  9 01:24:27.551: INFO: Resourcequota "e2e-rq-status-vffnd" reports status: hard cpu of 1
    Feb  9 01:24:27.551: INFO: Resourcequota "e2e-rq-status-vffnd" reports status: hard memory of 1Gi
    STEP: Repatching "e2e-rq-status-vffnd" /status before checking Spec is unchanged 02/09/23 01:24:27.556
    Feb  9 01:24:27.563: INFO: Resourcequota "e2e-rq-status-vffnd" reports status: hard cpu of 2
    Feb  9 01:24:27.563: INFO: Resourcequota "e2e-rq-status-vffnd" reports status: hard memory of 2Gi
    Feb  9 01:24:27.565: INFO: Found resourceQuota "e2e-rq-status-vffnd" in namespace "resourcequota-1282" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
    Feb  9 01:27:32.579: INFO: ResourceQuota "e2e-rq-status-vffnd" Spec was unchanged and /status reset
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:27:32.579: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-1282" for this suite. 02/09/23 01:27:32.587
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:27:32.598
Feb  9 01:27:32.598: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:27:32.598
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:32.617
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:32.622
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:27:32.626
Feb  9 01:27:32.642: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b" in namespace "projected-8713" to be "Succeeded or Failed"
Feb  9 01:27:32.648: INFO: Pod "downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.840434ms
Feb  9 01:27:34.654: INFO: Pod "downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012442444s
Feb  9 01:27:36.654: INFO: Pod "downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012235661s
STEP: Saw pod success 02/09/23 01:27:36.654
Feb  9 01:27:36.654: INFO: Pod "downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b" satisfied condition "Succeeded or Failed"
Feb  9 01:27:36.660: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b container client-container: <nil>
STEP: delete the pod 02/09/23 01:27:36.673
Feb  9 01:27:36.692: INFO: Waiting for pod downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b to disappear
Feb  9 01:27:36.698: INFO: Pod downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Feb  9 01:27:36.698: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8713" for this suite. 02/09/23 01:27:36.707
------------------------------
â€¢ [4.120 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:27:32.598
    Feb  9 01:27:32.598: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:27:32.598
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:32.617
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:32.622
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:261
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:27:32.626
    Feb  9 01:27:32.642: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b" in namespace "projected-8713" to be "Succeeded or Failed"
    Feb  9 01:27:32.648: INFO: Pod "downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.840434ms
    Feb  9 01:27:34.654: INFO: Pod "downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012442444s
    Feb  9 01:27:36.654: INFO: Pod "downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012235661s
    STEP: Saw pod success 02/09/23 01:27:36.654
    Feb  9 01:27:36.654: INFO: Pod "downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b" satisfied condition "Succeeded or Failed"
    Feb  9 01:27:36.660: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b container client-container: <nil>
    STEP: delete the pod 02/09/23 01:27:36.673
    Feb  9 01:27:36.692: INFO: Waiting for pod downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b to disappear
    Feb  9 01:27:36.698: INFO: Pod downwardapi-volume-f2bbaca9-7585-4e26-ba68-2b09b281022b no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:27:36.698: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8713" for this suite. 02/09/23 01:27:36.707
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:27:36.721
Feb  9 01:27:36.721: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 01:27:36.722
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:36.741
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:36.745
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89
STEP: Creating configMap with name configmap-test-volume-map-bdde3db0-cfd6-49bf-90e5-490d8bfed5b5 02/09/23 01:27:36.75
STEP: Creating a pod to test consume configMaps 02/09/23 01:27:36.759
Feb  9 01:27:36.771: INFO: Waiting up to 5m0s for pod "pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae" in namespace "configmap-8854" to be "Succeeded or Failed"
Feb  9 01:27:36.778: INFO: Pod "pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae": Phase="Pending", Reason="", readiness=false. Elapsed: 6.352235ms
Feb  9 01:27:38.784: INFO: Pod "pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012816819s
Feb  9 01:27:40.785: INFO: Pod "pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013650672s
STEP: Saw pod success 02/09/23 01:27:40.785
Feb  9 01:27:40.785: INFO: Pod "pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae" satisfied condition "Succeeded or Failed"
Feb  9 01:27:40.791: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae container agnhost-container: <nil>
STEP: delete the pod 02/09/23 01:27:40.804
Feb  9 01:27:40.824: INFO: Waiting for pod pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae to disappear
Feb  9 01:27:40.829: INFO: Pod pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:27:40.829: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8854" for this suite. 02/09/23 01:27:40.838
------------------------------
â€¢ [4.126 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:27:36.721
    Feb  9 01:27:36.721: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 01:27:36.722
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:36.741
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:36.745
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:89
    STEP: Creating configMap with name configmap-test-volume-map-bdde3db0-cfd6-49bf-90e5-490d8bfed5b5 02/09/23 01:27:36.75
    STEP: Creating a pod to test consume configMaps 02/09/23 01:27:36.759
    Feb  9 01:27:36.771: INFO: Waiting up to 5m0s for pod "pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae" in namespace "configmap-8854" to be "Succeeded or Failed"
    Feb  9 01:27:36.778: INFO: Pod "pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae": Phase="Pending", Reason="", readiness=false. Elapsed: 6.352235ms
    Feb  9 01:27:38.784: INFO: Pod "pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012816819s
    Feb  9 01:27:40.785: INFO: Pod "pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013650672s
    STEP: Saw pod success 02/09/23 01:27:40.785
    Feb  9 01:27:40.785: INFO: Pod "pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae" satisfied condition "Succeeded or Failed"
    Feb  9 01:27:40.791: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 01:27:40.804
    Feb  9 01:27:40.824: INFO: Waiting for pod pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae to disappear
    Feb  9 01:27:40.829: INFO: Pod pod-configmaps-bd48f375-7a38-4086-9df5-34b8a44f4eae no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:27:40.829: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8854" for this suite. 02/09/23 01:27:40.838
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:27:40.85
Feb  9 01:27:40.850: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename secrets 02/09/23 01:27:40.851
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:40.872
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:40.877
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57
STEP: Creating secret with name secret-test-cc254269-01ba-436f-a222-89c7fedbfcfc 02/09/23 01:27:40.881
STEP: Creating a pod to test consume secrets 02/09/23 01:27:40.888
Feb  9 01:27:40.901: INFO: Waiting up to 5m0s for pod "pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13" in namespace "secrets-8205" to be "Succeeded or Failed"
Feb  9 01:27:40.907: INFO: Pod "pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13": Phase="Pending", Reason="", readiness=false. Elapsed: 5.52523ms
Feb  9 01:27:42.914: INFO: Pod "pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012271716s
Feb  9 01:27:44.914: INFO: Pod "pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012991162s
STEP: Saw pod success 02/09/23 01:27:44.914
Feb  9 01:27:44.915: INFO: Pod "pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13" satisfied condition "Succeeded or Failed"
Feb  9 01:27:44.922: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13 container secret-volume-test: <nil>
STEP: delete the pod 02/09/23 01:27:44.935
Feb  9 01:27:44.959: INFO: Waiting for pod pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13 to disappear
Feb  9 01:27:44.964: INFO: Pod pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Feb  9 01:27:44.964: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-8205" for this suite. 02/09/23 01:27:44.973
------------------------------
â€¢ [4.133 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:27:40.85
    Feb  9 01:27:40.850: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename secrets 02/09/23 01:27:40.851
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:40.872
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:40.877
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:57
    STEP: Creating secret with name secret-test-cc254269-01ba-436f-a222-89c7fedbfcfc 02/09/23 01:27:40.881
    STEP: Creating a pod to test consume secrets 02/09/23 01:27:40.888
    Feb  9 01:27:40.901: INFO: Waiting up to 5m0s for pod "pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13" in namespace "secrets-8205" to be "Succeeded or Failed"
    Feb  9 01:27:40.907: INFO: Pod "pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13": Phase="Pending", Reason="", readiness=false. Elapsed: 5.52523ms
    Feb  9 01:27:42.914: INFO: Pod "pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012271716s
    Feb  9 01:27:44.914: INFO: Pod "pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012991162s
    STEP: Saw pod success 02/09/23 01:27:44.914
    Feb  9 01:27:44.915: INFO: Pod "pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13" satisfied condition "Succeeded or Failed"
    Feb  9 01:27:44.922: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13 container secret-volume-test: <nil>
    STEP: delete the pod 02/09/23 01:27:44.935
    Feb  9 01:27:44.959: INFO: Waiting for pod pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13 to disappear
    Feb  9 01:27:44.964: INFO: Pod pod-secrets-caab9b7f-546c-4180-98a0-d1613d5dfd13 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:27:44.964: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-8205" for this suite. 02/09/23 01:27:44.973
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:27:44.984
Feb  9 01:27:44.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename gc 02/09/23 01:27:44.986
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:45.007
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:45.012
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849
Feb  9 01:27:45.057: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ad0dcf5e-d2b9-49d8-8cd5-53b66d9d4a9f", Controller:(*bool)(0xc004263bf6), BlockOwnerDeletion:(*bool)(0xc004263bf7)}}
Feb  9 01:27:45.064: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"094e9ffb-abbc-4f52-9c0b-01979bc516f6", Controller:(*bool)(0xc006dd0196), BlockOwnerDeletion:(*bool)(0xc006dd0197)}}
Feb  9 01:27:45.072: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"e7fda7a4-7ec5-4f47-a94b-982abe0904e3", Controller:(*bool)(0xc006dd03be), BlockOwnerDeletion:(*bool)(0xc006dd03bf)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Feb  9 01:27:50.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-5258" for this suite. 02/09/23 01:27:50.098
------------------------------
â€¢ [SLOW TEST] [5.125 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:27:44.984
    Feb  9 01:27:44.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename gc 02/09/23 01:27:44.986
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:45.007
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:45.012
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should not be blocked by dependency circle [Conformance]
      test/e2e/apimachinery/garbage_collector.go:849
    Feb  9 01:27:45.057: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ad0dcf5e-d2b9-49d8-8cd5-53b66d9d4a9f", Controller:(*bool)(0xc004263bf6), BlockOwnerDeletion:(*bool)(0xc004263bf7)}}
    Feb  9 01:27:45.064: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"094e9ffb-abbc-4f52-9c0b-01979bc516f6", Controller:(*bool)(0xc006dd0196), BlockOwnerDeletion:(*bool)(0xc006dd0197)}}
    Feb  9 01:27:45.072: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"e7fda7a4-7ec5-4f47-a94b-982abe0904e3", Controller:(*bool)(0xc006dd03be), BlockOwnerDeletion:(*bool)(0xc006dd03bf)}}
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:27:50.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-5258" for this suite. 02/09/23 01:27:50.098
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts
  should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:27:50.109
Feb  9 01:27:50.109: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename svcaccounts 02/09/23 01:27:50.11
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:50.136
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:50.141
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810
STEP: Creating ServiceAccount "e2e-sa-p9t5b"  02/09/23 01:27:50.147
Feb  9 01:27:50.155: INFO: AutomountServiceAccountToken: false
STEP: Updating ServiceAccount "e2e-sa-p9t5b"  02/09/23 01:27:50.156
Feb  9 01:27:50.170: INFO: AutomountServiceAccountToken: true
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Feb  9 01:27:50.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-3215" for this suite. 02/09/23 01:27:50.177
------------------------------
â€¢ [0.078 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:27:50.109
    Feb  9 01:27:50.109: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename svcaccounts 02/09/23 01:27:50.11
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:50.136
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:50.141
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should update a ServiceAccount [Conformance]
      test/e2e/auth/service_accounts.go:810
    STEP: Creating ServiceAccount "e2e-sa-p9t5b"  02/09/23 01:27:50.147
    Feb  9 01:27:50.155: INFO: AutomountServiceAccountToken: false
    STEP: Updating ServiceAccount "e2e-sa-p9t5b"  02/09/23 01:27:50.156
    Feb  9 01:27:50.170: INFO: AutomountServiceAccountToken: true
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:27:50.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-3215" for this suite. 02/09/23 01:27:50.177
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:27:50.188
Feb  9 01:27:50.188: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename custom-resource-definition 02/09/23 01:27:50.189
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:50.207
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:50.211
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269
Feb  9 01:27:50.216: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:27:53.384: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-3805" for this suite. 02/09/23 01:27:53.394
------------------------------
â€¢ [3.215 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:27:50.188
    Feb  9 01:27:50.188: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename custom-resource-definition 02/09/23 01:27:50.189
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:50.207
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:50.211
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] custom resource defaulting for requests and from storage works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:269
    Feb  9 01:27:50.216: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:27:53.384: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-3805" for this suite. 02/09/23 01:27:53.394
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:27:53.407
Feb  9 01:27:53.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename job 02/09/23 01:27:53.408
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:53.43
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:53.434
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636
STEP: Creating a job 02/09/23 01:27:53.439
STEP: Ensure pods equal to parallelism count is attached to the job 02/09/23 01:27:53.446
STEP: patching /status 02/09/23 01:27:55.452
STEP: updating /status 02/09/23 01:27:55.462
STEP: get /status 02/09/23 01:27:55.475
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Feb  9 01:27:55.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-5898" for this suite. 02/09/23 01:27:55.49
------------------------------
â€¢ [2.095 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:27:53.407
    Feb  9 01:27:53.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename job 02/09/23 01:27:53.408
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:53.43
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:53.434
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a job status [Conformance]
      test/e2e/apps/job.go:636
    STEP: Creating a job 02/09/23 01:27:53.439
    STEP: Ensure pods equal to parallelism count is attached to the job 02/09/23 01:27:53.446
    STEP: patching /status 02/09/23 01:27:55.452
    STEP: updating /status 02/09/23 01:27:55.462
    STEP: get /status 02/09/23 01:27:55.475
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:27:55.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-5898" for this suite. 02/09/23 01:27:55.49
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:27:55.506
Feb  9 01:27:55.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 01:27:55.506
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:55.525
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:55.529
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167
STEP: Creating a pod to test emptydir 0644 on node default medium 02/09/23 01:27:55.534
Feb  9 01:27:55.549: INFO: Waiting up to 5m0s for pod "pod-8bd368d5-3cc8-4888-a0e4-b90b78499384" in namespace "emptydir-5690" to be "Succeeded or Failed"
Feb  9 01:27:55.554: INFO: Pod "pod-8bd368d5-3cc8-4888-a0e4-b90b78499384": Phase="Pending", Reason="", readiness=false. Elapsed: 5.895645ms
Feb  9 01:27:57.561: INFO: Pod "pod-8bd368d5-3cc8-4888-a0e4-b90b78499384": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012814757s
Feb  9 01:27:59.561: INFO: Pod "pod-8bd368d5-3cc8-4888-a0e4-b90b78499384": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012233445s
STEP: Saw pod success 02/09/23 01:27:59.561
Feb  9 01:27:59.561: INFO: Pod "pod-8bd368d5-3cc8-4888-a0e4-b90b78499384" satisfied condition "Succeeded or Failed"
Feb  9 01:27:59.566: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-8bd368d5-3cc8-4888-a0e4-b90b78499384 container test-container: <nil>
STEP: delete the pod 02/09/23 01:27:59.586
Feb  9 01:27:59.604: INFO: Waiting for pod pod-8bd368d5-3cc8-4888-a0e4-b90b78499384 to disappear
Feb  9 01:27:59.609: INFO: Pod pod-8bd368d5-3cc8-4888-a0e4-b90b78499384 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:27:59.609: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-5690" for this suite. 02/09/23 01:27:59.618
------------------------------
â€¢ [4.122 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:27:55.506
    Feb  9 01:27:55.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 01:27:55.506
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:55.525
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:55.529
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:167
    STEP: Creating a pod to test emptydir 0644 on node default medium 02/09/23 01:27:55.534
    Feb  9 01:27:55.549: INFO: Waiting up to 5m0s for pod "pod-8bd368d5-3cc8-4888-a0e4-b90b78499384" in namespace "emptydir-5690" to be "Succeeded or Failed"
    Feb  9 01:27:55.554: INFO: Pod "pod-8bd368d5-3cc8-4888-a0e4-b90b78499384": Phase="Pending", Reason="", readiness=false. Elapsed: 5.895645ms
    Feb  9 01:27:57.561: INFO: Pod "pod-8bd368d5-3cc8-4888-a0e4-b90b78499384": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012814757s
    Feb  9 01:27:59.561: INFO: Pod "pod-8bd368d5-3cc8-4888-a0e4-b90b78499384": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012233445s
    STEP: Saw pod success 02/09/23 01:27:59.561
    Feb  9 01:27:59.561: INFO: Pod "pod-8bd368d5-3cc8-4888-a0e4-b90b78499384" satisfied condition "Succeeded or Failed"
    Feb  9 01:27:59.566: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-8bd368d5-3cc8-4888-a0e4-b90b78499384 container test-container: <nil>
    STEP: delete the pod 02/09/23 01:27:59.586
    Feb  9 01:27:59.604: INFO: Waiting for pod pod-8bd368d5-3cc8-4888-a0e4-b90b78499384 to disappear
    Feb  9 01:27:59.609: INFO: Pod pod-8bd368d5-3cc8-4888-a0e4-b90b78499384 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:27:59.609: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-5690" for this suite. 02/09/23 01:27:59.618
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:27:59.628
Feb  9 01:27:59.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename init-container 02/09/23 01:27:59.629
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:59.649
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:59.652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334
STEP: creating the pod 02/09/23 01:27:59.658
Feb  9 01:27:59.658: INFO: PodSpec: initContainers in spec.initContainers
Feb  9 01:28:42.535: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-fa31d7aa-960c-48c9-8050-c30ec2eab913", GenerateName:"", Namespace:"init-container-225", SelfLink:"", UID:"7daea5af-01a1-40c0-9b81-0372ee7cca38", ResourceVersion:"33105", Generation:0, CreationTimestamp:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"658194683"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d77470), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.February, 9, 1, 28, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d774d0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-6hddt", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004accd00), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-6hddt", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-6hddt", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-6hddt", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004044510), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"aks-nodes-15799032-vmss000000", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004af8a80), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004044590)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0040445b0)}, v1.Toleration{Key:"node.kubernetes.io/memory-pressure", Operator:"Exists", Value:"", Effect:"NoSchedule", TolerationSeconds:(*int64)(nil)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0040445cc), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0040445d0), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0013a3990), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.224.0.4", PodIP:"10.244.0.248", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.0.248"}}, StartTime:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004af8b60)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004af8bd0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://0a651dec56970240e1cc9d91ae1b5fa2926774bf851b22f99f1017edd0145c4b", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004acce00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004accdc0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00404464f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:28:42.536: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-225" for this suite. 02/09/23 01:28:42.544
------------------------------
â€¢ [SLOW TEST] [42.926 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:27:59.628
    Feb  9 01:27:59.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename init-container 02/09/23 01:27:59.629
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:27:59.649
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:27:59.652
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
      test/e2e/common/node/init_container.go:334
    STEP: creating the pod 02/09/23 01:27:59.658
    Feb  9 01:27:59.658: INFO: PodSpec: initContainers in spec.initContainers
    Feb  9 01:28:42.535: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-fa31d7aa-960c-48c9-8050-c30ec2eab913", GenerateName:"", Namespace:"init-container-225", SelfLink:"", UID:"7daea5af-01a1-40c0-9b81-0372ee7cca38", ResourceVersion:"33105", Generation:0, CreationTimestamp:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"658194683"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d77470), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.February, 9, 1, 28, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d774d0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-6hddt", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004accd00), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-6hddt", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-6hddt", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-6hddt", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004044510), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"aks-nodes-15799032-vmss000000", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004af8a80), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004044590)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0040445b0)}, v1.Toleration{Key:"node.kubernetes.io/memory-pressure", Operator:"Exists", Value:"", Effect:"NoSchedule", TolerationSeconds:(*int64)(nil)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0040445cc), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0040445d0), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0013a3990), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.224.0.4", PodIP:"10.244.0.248", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.0.248"}}, StartTime:time.Date(2023, time.February, 9, 1, 27, 59, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004af8b60)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004af8bd0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://0a651dec56970240e1cc9d91ae1b5fa2926774bf851b22f99f1017edd0145c4b", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004acce00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004accdc0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00404464f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:28:42.536: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-225" for this suite. 02/09/23 01:28:42.544
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:28:42.557
Feb  9 01:28:42.557: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename job 02/09/23 01:28:42.558
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:28:42.582
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:28:42.586
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703
STEP: Creating a suspended job 02/09/23 01:28:42.596
STEP: Patching the Job 02/09/23 01:28:42.605
STEP: Watching for Job to be patched 02/09/23 01:28:42.627
Feb  9 01:28:42.630: INFO: Event ADDED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking:]
Feb  9 01:28:42.630: INFO: Event MODIFIED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking:]
Feb  9 01:28:42.630: INFO: Event MODIFIED found for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking:]
STEP: Updating the job 02/09/23 01:28:42.63
STEP: Watching for Job to be updated 02/09/23 01:28:42.645
Feb  9 01:28:42.647: INFO: Event MODIFIED found for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Feb  9 01:28:42.647: INFO: Found Job annotations: map[string]string{"batch.kubernetes.io/job-tracking":"", "updated":"true"}
STEP: Listing all Jobs with LabelSelector 02/09/23 01:28:42.647
Feb  9 01:28:42.653: INFO: Job: e2e-frj9t as labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t]
STEP: Waiting for job to complete 02/09/23 01:28:42.653
STEP: Delete a job collection with a labelselector 02/09/23 01:28:50.66
STEP: Watching for Job to be deleted 02/09/23 01:28:50.673
Feb  9 01:28:50.676: INFO: Event MODIFIED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Feb  9 01:28:50.676: INFO: Event MODIFIED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Feb  9 01:28:50.676: INFO: Event MODIFIED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Feb  9 01:28:50.676: INFO: Event MODIFIED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Feb  9 01:28:50.676: INFO: Event MODIFIED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Feb  9 01:28:50.676: INFO: Event DELETED found for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
STEP: Relist jobs to confirm deletion 02/09/23 01:28:50.676
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Feb  9 01:28:50.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-6188" for this suite. 02/09/23 01:28:50.691
------------------------------
â€¢ [SLOW TEST] [8.146 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:28:42.557
    Feb  9 01:28:42.557: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename job 02/09/23 01:28:42.558
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:28:42.582
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:28:42.586
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of a job [Conformance]
      test/e2e/apps/job.go:703
    STEP: Creating a suspended job 02/09/23 01:28:42.596
    STEP: Patching the Job 02/09/23 01:28:42.605
    STEP: Watching for Job to be patched 02/09/23 01:28:42.627
    Feb  9 01:28:42.630: INFO: Event ADDED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking:]
    Feb  9 01:28:42.630: INFO: Event MODIFIED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking:]
    Feb  9 01:28:42.630: INFO: Event MODIFIED found for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking:]
    STEP: Updating the job 02/09/23 01:28:42.63
    STEP: Watching for Job to be updated 02/09/23 01:28:42.645
    Feb  9 01:28:42.647: INFO: Event MODIFIED found for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Feb  9 01:28:42.647: INFO: Found Job annotations: map[string]string{"batch.kubernetes.io/job-tracking":"", "updated":"true"}
    STEP: Listing all Jobs with LabelSelector 02/09/23 01:28:42.647
    Feb  9 01:28:42.653: INFO: Job: e2e-frj9t as labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t]
    STEP: Waiting for job to complete 02/09/23 01:28:42.653
    STEP: Delete a job collection with a labelselector 02/09/23 01:28:50.66
    STEP: Watching for Job to be deleted 02/09/23 01:28:50.673
    Feb  9 01:28:50.676: INFO: Event MODIFIED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Feb  9 01:28:50.676: INFO: Event MODIFIED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Feb  9 01:28:50.676: INFO: Event MODIFIED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Feb  9 01:28:50.676: INFO: Event MODIFIED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Feb  9 01:28:50.676: INFO: Event MODIFIED observed for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Feb  9 01:28:50.676: INFO: Event DELETED found for Job e2e-frj9t in namespace job-6188 with labels: map[e2e-frj9t:patched e2e-job-label:e2e-frj9t] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    STEP: Relist jobs to confirm deletion 02/09/23 01:28:50.676
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:28:50.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-6188" for this suite. 02/09/23 01:28:50.691
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with projected pod [Conformance]
  test/e2e/storage/subpath.go:106
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:28:50.705
Feb  9 01:28:50.705: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename subpath 02/09/23 01:28:50.706
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:28:50.727
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:28:50.731
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 02/09/23 01:28:50.736
[It] should support subpaths with projected pod [Conformance]
  test/e2e/storage/subpath.go:106
STEP: Creating pod pod-subpath-test-projected-zq5j 02/09/23 01:28:50.751
STEP: Creating a pod to test atomic-volume-subpath 02/09/23 01:28:50.751
Feb  9 01:28:50.763: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-zq5j" in namespace "subpath-4549" to be "Succeeded or Failed"
Feb  9 01:28:50.769: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Pending", Reason="", readiness=false. Elapsed: 6.007504ms
Feb  9 01:28:52.777: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 2.013617167s
Feb  9 01:28:54.777: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 4.013272203s
Feb  9 01:28:56.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 6.012294682s
Feb  9 01:28:58.777: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 8.013725977s
Feb  9 01:29:00.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 10.012793262s
Feb  9 01:29:02.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 12.012385549s
Feb  9 01:29:04.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 14.012269226s
Feb  9 01:29:06.777: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 16.013574811s
Feb  9 01:29:08.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 18.012077182s
Feb  9 01:29:10.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 20.012085261s
Feb  9 01:29:12.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=false. Elapsed: 22.012787252s
Feb  9 01:29:14.777: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.013357477s
STEP: Saw pod success 02/09/23 01:29:14.777
Feb  9 01:29:14.777: INFO: Pod "pod-subpath-test-projected-zq5j" satisfied condition "Succeeded or Failed"
Feb  9 01:29:14.782: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-subpath-test-projected-zq5j container test-container-subpath-projected-zq5j: <nil>
STEP: delete the pod 02/09/23 01:29:14.795
Feb  9 01:29:14.809: INFO: Waiting for pod pod-subpath-test-projected-zq5j to disappear
Feb  9 01:29:14.814: INFO: Pod pod-subpath-test-projected-zq5j no longer exists
STEP: Deleting pod pod-subpath-test-projected-zq5j 02/09/23 01:29:14.814
Feb  9 01:29:14.814: INFO: Deleting pod "pod-subpath-test-projected-zq5j" in namespace "subpath-4549"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Feb  9 01:29:14.819: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-4549" for this suite. 02/09/23 01:29:14.828
------------------------------
â€¢ [SLOW TEST] [24.133 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/storage/subpath.go:106

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:28:50.705
    Feb  9 01:28:50.705: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename subpath 02/09/23 01:28:50.706
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:28:50.727
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:28:50.731
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 02/09/23 01:28:50.736
    [It] should support subpaths with projected pod [Conformance]
      test/e2e/storage/subpath.go:106
    STEP: Creating pod pod-subpath-test-projected-zq5j 02/09/23 01:28:50.751
    STEP: Creating a pod to test atomic-volume-subpath 02/09/23 01:28:50.751
    Feb  9 01:28:50.763: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-zq5j" in namespace "subpath-4549" to be "Succeeded or Failed"
    Feb  9 01:28:50.769: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Pending", Reason="", readiness=false. Elapsed: 6.007504ms
    Feb  9 01:28:52.777: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 2.013617167s
    Feb  9 01:28:54.777: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 4.013272203s
    Feb  9 01:28:56.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 6.012294682s
    Feb  9 01:28:58.777: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 8.013725977s
    Feb  9 01:29:00.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 10.012793262s
    Feb  9 01:29:02.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 12.012385549s
    Feb  9 01:29:04.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 14.012269226s
    Feb  9 01:29:06.777: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 16.013574811s
    Feb  9 01:29:08.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 18.012077182s
    Feb  9 01:29:10.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=true. Elapsed: 20.012085261s
    Feb  9 01:29:12.776: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Running", Reason="", readiness=false. Elapsed: 22.012787252s
    Feb  9 01:29:14.777: INFO: Pod "pod-subpath-test-projected-zq5j": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.013357477s
    STEP: Saw pod success 02/09/23 01:29:14.777
    Feb  9 01:29:14.777: INFO: Pod "pod-subpath-test-projected-zq5j" satisfied condition "Succeeded or Failed"
    Feb  9 01:29:14.782: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-subpath-test-projected-zq5j container test-container-subpath-projected-zq5j: <nil>
    STEP: delete the pod 02/09/23 01:29:14.795
    Feb  9 01:29:14.809: INFO: Waiting for pod pod-subpath-test-projected-zq5j to disappear
    Feb  9 01:29:14.814: INFO: Pod pod-subpath-test-projected-zq5j no longer exists
    STEP: Deleting pod pod-subpath-test-projected-zq5j 02/09/23 01:29:14.814
    Feb  9 01:29:14.814: INFO: Deleting pod "pod-subpath-test-projected-zq5j" in namespace "subpath-4549"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:29:14.819: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-4549" for this suite. 02/09/23 01:29:14.828
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:29:14.839
Feb  9 01:29:14.839: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-probe 02/09/23 01:29:14.84
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:29:14.865
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:29:14.869
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184
STEP: Creating pod liveness-1c3ce473-ac58-467f-ad2e-07e17036725e in namespace container-probe-9526 02/09/23 01:29:14.873
Feb  9 01:29:14.886: INFO: Waiting up to 5m0s for pod "liveness-1c3ce473-ac58-467f-ad2e-07e17036725e" in namespace "container-probe-9526" to be "not pending"
Feb  9 01:29:14.891: INFO: Pod "liveness-1c3ce473-ac58-467f-ad2e-07e17036725e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.614028ms
Feb  9 01:29:16.900: INFO: Pod "liveness-1c3ce473-ac58-467f-ad2e-07e17036725e": Phase="Running", Reason="", readiness=true. Elapsed: 2.01364499s
Feb  9 01:29:16.900: INFO: Pod "liveness-1c3ce473-ac58-467f-ad2e-07e17036725e" satisfied condition "not pending"
Feb  9 01:29:16.900: INFO: Started pod liveness-1c3ce473-ac58-467f-ad2e-07e17036725e in namespace container-probe-9526
STEP: checking the pod's current state and verifying that restartCount is present 02/09/23 01:29:16.9
Feb  9 01:29:16.905: INFO: Initial restart count of pod liveness-1c3ce473-ac58-467f-ad2e-07e17036725e is 0
STEP: deleting the pod 02/09/23 01:33:17.742
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Feb  9 01:33:17.760: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-9526" for this suite. 02/09/23 01:33:17.768
------------------------------
â€¢ [SLOW TEST] [242.938 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:29:14.839
    Feb  9 01:29:14.839: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-probe 02/09/23 01:29:14.84
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:29:14.865
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:29:14.869
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:184
    STEP: Creating pod liveness-1c3ce473-ac58-467f-ad2e-07e17036725e in namespace container-probe-9526 02/09/23 01:29:14.873
    Feb  9 01:29:14.886: INFO: Waiting up to 5m0s for pod "liveness-1c3ce473-ac58-467f-ad2e-07e17036725e" in namespace "container-probe-9526" to be "not pending"
    Feb  9 01:29:14.891: INFO: Pod "liveness-1c3ce473-ac58-467f-ad2e-07e17036725e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.614028ms
    Feb  9 01:29:16.900: INFO: Pod "liveness-1c3ce473-ac58-467f-ad2e-07e17036725e": Phase="Running", Reason="", readiness=true. Elapsed: 2.01364499s
    Feb  9 01:29:16.900: INFO: Pod "liveness-1c3ce473-ac58-467f-ad2e-07e17036725e" satisfied condition "not pending"
    Feb  9 01:29:16.900: INFO: Started pod liveness-1c3ce473-ac58-467f-ad2e-07e17036725e in namespace container-probe-9526
    STEP: checking the pod's current state and verifying that restartCount is present 02/09/23 01:29:16.9
    Feb  9 01:29:16.905: INFO: Initial restart count of pod liveness-1c3ce473-ac58-467f-ad2e-07e17036725e is 0
    STEP: deleting the pod 02/09/23 01:33:17.742
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:33:17.760: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-9526" for this suite. 02/09/23 01:33:17.768
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/scheduling/preemption.go:806
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:33:17.78
Feb  9 01:33:17.780: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename sched-preemption 02/09/23 01:33:17.781
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:33:17.803
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:33:17.808
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:96
Feb  9 01:33:17.830: INFO: Waiting up to 1m0s for all nodes to be ready
Feb  9 01:34:17.864: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:34:17.87
Feb  9 01:34:17.870: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename sched-preemption-path 02/09/23 01:34:17.87
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:34:17.894
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:34:17.898
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:763
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/scheduling/preemption.go:806
Feb  9 01:34:17.922: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
Feb  9 01:34:17.928: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/node/init/init.go:32
Feb  9 01:34:17.966: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:779
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:34:17.990: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] PriorityClass endpoints
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] PriorityClass endpoints
  dump namespaces | framework.go:196
[DeferCleanup (Each)] PriorityClass endpoints
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-path-5658" for this suite. 02/09/23 01:34:18.156
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-7608" for this suite. 02/09/23 01:34:18.169
------------------------------
â€¢ [SLOW TEST] [60.399 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:756
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/scheduling/preemption.go:806

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:33:17.78
    Feb  9 01:33:17.780: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename sched-preemption 02/09/23 01:33:17.781
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:33:17.803
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:33:17.808
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:96
    Feb  9 01:33:17.830: INFO: Waiting up to 1m0s for all nodes to be ready
    Feb  9 01:34:17.864: INFO: Waiting for terminating namespaces to be deleted...
    [BeforeEach] PriorityClass endpoints
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:34:17.87
    Feb  9 01:34:17.870: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename sched-preemption-path 02/09/23 01:34:17.87
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:34:17.894
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:34:17.898
    [BeforeEach] PriorityClass endpoints
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] PriorityClass endpoints
      test/e2e/scheduling/preemption.go:763
    [It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
      test/e2e/scheduling/preemption.go:806
    Feb  9 01:34:17.922: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
    Feb  9 01:34:17.928: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
    [AfterEach] PriorityClass endpoints
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:34:17.966: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] PriorityClass endpoints
      test/e2e/scheduling/preemption.go:779
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:34:17.990: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] PriorityClass endpoints
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] PriorityClass endpoints
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] PriorityClass endpoints
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-path-5658" for this suite. 02/09/23 01:34:18.156
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-7608" for this suite. 02/09/23 01:34:18.169
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:34:18.182
Feb  9 01:34:18.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 01:34:18.182
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:34:18.202
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:34:18.207
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124
STEP: Creating configMap with name configmap-test-upd-1f03492a-2bb5-4e04-91b5-6a65f5b0b169 02/09/23 01:34:18.218
STEP: Creating the pod 02/09/23 01:34:18.225
Feb  9 01:34:18.242: INFO: Waiting up to 5m0s for pod "pod-configmaps-29e3f163-350a-47bd-98bc-0b9ffdba3397" in namespace "configmap-6782" to be "running and ready"
Feb  9 01:34:18.249: INFO: Pod "pod-configmaps-29e3f163-350a-47bd-98bc-0b9ffdba3397": Phase="Pending", Reason="", readiness=false. Elapsed: 6.787995ms
Feb  9 01:34:18.249: INFO: The phase of Pod pod-configmaps-29e3f163-350a-47bd-98bc-0b9ffdba3397 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:34:20.256: INFO: Pod "pod-configmaps-29e3f163-350a-47bd-98bc-0b9ffdba3397": Phase="Running", Reason="", readiness=true. Elapsed: 2.014218034s
Feb  9 01:34:20.257: INFO: The phase of Pod pod-configmaps-29e3f163-350a-47bd-98bc-0b9ffdba3397 is Running (Ready = true)
Feb  9 01:34:20.257: INFO: Pod "pod-configmaps-29e3f163-350a-47bd-98bc-0b9ffdba3397" satisfied condition "running and ready"
STEP: Updating configmap configmap-test-upd-1f03492a-2bb5-4e04-91b5-6a65f5b0b169 02/09/23 01:34:20.275
STEP: waiting to observe update in volume 02/09/23 01:34:20.282
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:35:38.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-6782" for this suite. 02/09/23 01:35:38.867
------------------------------
â€¢ [SLOW TEST] [80.695 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:34:18.182
    Feb  9 01:34:18.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 01:34:18.182
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:34:18.202
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:34:18.207
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:124
    STEP: Creating configMap with name configmap-test-upd-1f03492a-2bb5-4e04-91b5-6a65f5b0b169 02/09/23 01:34:18.218
    STEP: Creating the pod 02/09/23 01:34:18.225
    Feb  9 01:34:18.242: INFO: Waiting up to 5m0s for pod "pod-configmaps-29e3f163-350a-47bd-98bc-0b9ffdba3397" in namespace "configmap-6782" to be "running and ready"
    Feb  9 01:34:18.249: INFO: Pod "pod-configmaps-29e3f163-350a-47bd-98bc-0b9ffdba3397": Phase="Pending", Reason="", readiness=false. Elapsed: 6.787995ms
    Feb  9 01:34:18.249: INFO: The phase of Pod pod-configmaps-29e3f163-350a-47bd-98bc-0b9ffdba3397 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:34:20.256: INFO: Pod "pod-configmaps-29e3f163-350a-47bd-98bc-0b9ffdba3397": Phase="Running", Reason="", readiness=true. Elapsed: 2.014218034s
    Feb  9 01:34:20.257: INFO: The phase of Pod pod-configmaps-29e3f163-350a-47bd-98bc-0b9ffdba3397 is Running (Ready = true)
    Feb  9 01:34:20.257: INFO: Pod "pod-configmaps-29e3f163-350a-47bd-98bc-0b9ffdba3397" satisfied condition "running and ready"
    STEP: Updating configmap configmap-test-upd-1f03492a-2bb5-4e04-91b5-6a65f5b0b169 02/09/23 01:34:20.275
    STEP: waiting to observe update in volume 02/09/23 01:34:20.282
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:35:38.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-6782" for this suite. 02/09/23 01:35:38.867
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:35:38.877
Feb  9 01:35:38.877: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename namespaces 02/09/23 01:35:38.878
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:38.899
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:35:38.903
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251
STEP: Creating a test namespace 02/09/23 01:35:38.907
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:38.926
STEP: Creating a service in the namespace 02/09/23 01:35:38.93
STEP: Deleting the namespace 02/09/23 01:35:38.944
STEP: Waiting for the namespace to be removed. 02/09/23 01:35:38.956
STEP: Recreating the namespace 02/09/23 01:35:44.963
STEP: Verifying there is no service in the namespace 02/09/23 01:35:44.984
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:35:44.989: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-7787" for this suite. 02/09/23 01:35:44.997
STEP: Destroying namespace "nsdeletetest-9249" for this suite. 02/09/23 01:35:45.007
Feb  9 01:35:45.013: INFO: Namespace nsdeletetest-9249 was already deleted
STEP: Destroying namespace "nsdeletetest-4326" for this suite. 02/09/23 01:35:45.013
------------------------------
â€¢ [SLOW TEST] [6.145 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:35:38.877
    Feb  9 01:35:38.877: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename namespaces 02/09/23 01:35:38.878
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:38.899
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:35:38.903
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should ensure that all services are removed when a namespace is deleted [Conformance]
      test/e2e/apimachinery/namespace.go:251
    STEP: Creating a test namespace 02/09/23 01:35:38.907
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:38.926
    STEP: Creating a service in the namespace 02/09/23 01:35:38.93
    STEP: Deleting the namespace 02/09/23 01:35:38.944
    STEP: Waiting for the namespace to be removed. 02/09/23 01:35:38.956
    STEP: Recreating the namespace 02/09/23 01:35:44.963
    STEP: Verifying there is no service in the namespace 02/09/23 01:35:44.984
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:35:44.989: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-7787" for this suite. 02/09/23 01:35:44.997
    STEP: Destroying namespace "nsdeletetest-9249" for this suite. 02/09/23 01:35:45.007
    Feb  9 01:35:45.013: INFO: Namespace nsdeletetest-9249 was already deleted
    STEP: Destroying namespace "nsdeletetest-4326" for this suite. 02/09/23 01:35:45.013
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:35:45.022
Feb  9 01:35:45.023: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 01:35:45.023
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:45.041
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:35:45.045
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169
STEP: creating a ConfigMap 02/09/23 01:35:45.05
STEP: fetching the ConfigMap 02/09/23 01:35:45.056
STEP: patching the ConfigMap 02/09/23 01:35:45.061
STEP: listing all ConfigMaps in all namespaces with a label selector 02/09/23 01:35:45.068
STEP: deleting the ConfigMap by collection with a label selector 02/09/23 01:35:45.075
STEP: listing all ConfigMaps in test namespace 02/09/23 01:35:45.086
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:35:45.093: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-2229" for this suite. 02/09/23 01:35:45.099
------------------------------
â€¢ [0.086 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:35:45.022
    Feb  9 01:35:45.023: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 01:35:45.023
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:45.041
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:35:45.045
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should run through a ConfigMap lifecycle [Conformance]
      test/e2e/common/node/configmap.go:169
    STEP: creating a ConfigMap 02/09/23 01:35:45.05
    STEP: fetching the ConfigMap 02/09/23 01:35:45.056
    STEP: patching the ConfigMap 02/09/23 01:35:45.061
    STEP: listing all ConfigMaps in all namespaces with a label selector 02/09/23 01:35:45.068
    STEP: deleting the ConfigMap by collection with a label selector 02/09/23 01:35:45.075
    STEP: listing all ConfigMaps in test namespace 02/09/23 01:35:45.086
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:35:45.093: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-2229" for this suite. 02/09/23 01:35:45.099
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:35:45.111
Feb  9 01:35:45.111: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:35:45.111
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:45.13
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:35:45.135
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:35:45.14
Feb  9 01:35:45.152: INFO: Waiting up to 5m0s for pod "downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776" in namespace "projected-2575" to be "Succeeded or Failed"
Feb  9 01:35:45.159: INFO: Pod "downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776": Phase="Pending", Reason="", readiness=false. Elapsed: 6.412353ms
Feb  9 01:35:47.165: INFO: Pod "downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012707398s
Feb  9 01:35:49.165: INFO: Pod "downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012667891s
STEP: Saw pod success 02/09/23 01:35:49.165
Feb  9 01:35:49.165: INFO: Pod "downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776" satisfied condition "Succeeded or Failed"
Feb  9 01:35:49.171: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776 container client-container: <nil>
STEP: delete the pod 02/09/23 01:35:49.181
Feb  9 01:35:49.195: INFO: Waiting for pod downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776 to disappear
Feb  9 01:35:49.201: INFO: Pod downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Feb  9 01:35:49.202: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-2575" for this suite. 02/09/23 01:35:49.209
------------------------------
â€¢ [4.107 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:35:45.111
    Feb  9 01:35:45.111: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:35:45.111
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:45.13
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:35:45.135
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's memory request [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:235
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:35:45.14
    Feb  9 01:35:45.152: INFO: Waiting up to 5m0s for pod "downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776" in namespace "projected-2575" to be "Succeeded or Failed"
    Feb  9 01:35:45.159: INFO: Pod "downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776": Phase="Pending", Reason="", readiness=false. Elapsed: 6.412353ms
    Feb  9 01:35:47.165: INFO: Pod "downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012707398s
    Feb  9 01:35:49.165: INFO: Pod "downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012667891s
    STEP: Saw pod success 02/09/23 01:35:49.165
    Feb  9 01:35:49.165: INFO: Pod "downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776" satisfied condition "Succeeded or Failed"
    Feb  9 01:35:49.171: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776 container client-container: <nil>
    STEP: delete the pod 02/09/23 01:35:49.181
    Feb  9 01:35:49.195: INFO: Waiting for pod downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776 to disappear
    Feb  9 01:35:49.201: INFO: Pod downwardapi-volume-53fa6258-84c3-4e10-a3d9-2ea07e5fd776 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:35:49.202: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-2575" for this suite. 02/09/23 01:35:49.209
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:35:49.218
Feb  9 01:35:49.218: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 01:35:49.219
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:49.241
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:35:49.245
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57
STEP: Creating configMap with name configmap-test-volume-41448c56-8a24-4f58-a3d4-5fba33c63bbc 02/09/23 01:35:49.249
STEP: Creating a pod to test consume configMaps 02/09/23 01:35:49.257
Feb  9 01:35:49.268: INFO: Waiting up to 5m0s for pod "pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b" in namespace "configmap-9759" to be "Succeeded or Failed"
Feb  9 01:35:49.274: INFO: Pod "pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.624834ms
Feb  9 01:35:51.281: INFO: Pod "pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012872702s
Feb  9 01:35:53.281: INFO: Pod "pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012584038s
STEP: Saw pod success 02/09/23 01:35:53.281
Feb  9 01:35:53.281: INFO: Pod "pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b" satisfied condition "Succeeded or Failed"
Feb  9 01:35:53.287: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b container agnhost-container: <nil>
STEP: delete the pod 02/09/23 01:35:53.304
Feb  9 01:35:53.321: INFO: Waiting for pod pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b to disappear
Feb  9 01:35:53.326: INFO: Pod pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:35:53.326: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-9759" for this suite. 02/09/23 01:35:53.334
------------------------------
â€¢ [4.125 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:35:49.218
    Feb  9 01:35:49.218: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 01:35:49.219
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:49.241
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:35:49.245
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:57
    STEP: Creating configMap with name configmap-test-volume-41448c56-8a24-4f58-a3d4-5fba33c63bbc 02/09/23 01:35:49.249
    STEP: Creating a pod to test consume configMaps 02/09/23 01:35:49.257
    Feb  9 01:35:49.268: INFO: Waiting up to 5m0s for pod "pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b" in namespace "configmap-9759" to be "Succeeded or Failed"
    Feb  9 01:35:49.274: INFO: Pod "pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.624834ms
    Feb  9 01:35:51.281: INFO: Pod "pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012872702s
    Feb  9 01:35:53.281: INFO: Pod "pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012584038s
    STEP: Saw pod success 02/09/23 01:35:53.281
    Feb  9 01:35:53.281: INFO: Pod "pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b" satisfied condition "Succeeded or Failed"
    Feb  9 01:35:53.287: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 01:35:53.304
    Feb  9 01:35:53.321: INFO: Waiting for pod pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b to disappear
    Feb  9 01:35:53.326: INFO: Pod pod-configmaps-e12aed2e-7cd0-479e-9460-4c7d8fccf15b no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:35:53.326: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-9759" for this suite. 02/09/23 01:35:53.334
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:35:53.347
Feb  9 01:35:53.347: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 01:35:53.347
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:53.366
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:35:53.37
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109
STEP: Creating configMap with name configmap-test-volume-map-d517bf09-3ea2-40bb-9337-0a5644d7181c 02/09/23 01:35:53.375
STEP: Creating a pod to test consume configMaps 02/09/23 01:35:53.381
Feb  9 01:35:53.392: INFO: Waiting up to 5m0s for pod "pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003" in namespace "configmap-3913" to be "Succeeded or Failed"
Feb  9 01:35:53.398: INFO: Pod "pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003": Phase="Pending", Reason="", readiness=false. Elapsed: 5.506859ms
Feb  9 01:35:55.406: INFO: Pod "pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013300955s
Feb  9 01:35:57.404: INFO: Pod "pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011588688s
STEP: Saw pod success 02/09/23 01:35:57.404
Feb  9 01:35:57.404: INFO: Pod "pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003" satisfied condition "Succeeded or Failed"
Feb  9 01:35:57.410: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003 container agnhost-container: <nil>
STEP: delete the pod 02/09/23 01:35:57.422
Feb  9 01:35:57.441: INFO: Waiting for pod pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003 to disappear
Feb  9 01:35:57.446: INFO: Pod pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:35:57.446: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-3913" for this suite. 02/09/23 01:35:57.453
------------------------------
â€¢ [4.117 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:35:53.347
    Feb  9 01:35:53.347: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 01:35:53.347
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:53.366
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:35:53.37
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:109
    STEP: Creating configMap with name configmap-test-volume-map-d517bf09-3ea2-40bb-9337-0a5644d7181c 02/09/23 01:35:53.375
    STEP: Creating a pod to test consume configMaps 02/09/23 01:35:53.381
    Feb  9 01:35:53.392: INFO: Waiting up to 5m0s for pod "pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003" in namespace "configmap-3913" to be "Succeeded or Failed"
    Feb  9 01:35:53.398: INFO: Pod "pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003": Phase="Pending", Reason="", readiness=false. Elapsed: 5.506859ms
    Feb  9 01:35:55.406: INFO: Pod "pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013300955s
    Feb  9 01:35:57.404: INFO: Pod "pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011588688s
    STEP: Saw pod success 02/09/23 01:35:57.404
    Feb  9 01:35:57.404: INFO: Pod "pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003" satisfied condition "Succeeded or Failed"
    Feb  9 01:35:57.410: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003 container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 01:35:57.422
    Feb  9 01:35:57.441: INFO: Waiting for pod pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003 to disappear
    Feb  9 01:35:57.446: INFO: Pod pod-configmaps-341d4295-c80a-46f7-a6a4-ea033b3f2003 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:35:57.446: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-3913" for this suite. 02/09/23 01:35:57.453
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1
  should proxy through a service and a pod  [Conformance]
  test/e2e/network/proxy.go:101
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:35:57.464
Feb  9 01:35:57.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename proxy 02/09/23 01:35:57.465
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:57.484
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:35:57.488
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/network/proxy.go:101
STEP: starting an echo server on multiple ports 02/09/23 01:35:57.507
STEP: creating replication controller proxy-service-fngxj in namespace proxy-7253 02/09/23 01:35:57.507
I0209 01:35:57.514456      20 runners.go:193] Created replication controller with name: proxy-service-fngxj, namespace: proxy-7253, replica count: 1
I0209 01:35:58.567372      20 runners.go:193] proxy-service-fngxj Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
I0209 01:35:59.567805      20 runners.go:193] proxy-service-fngxj Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Feb  9 01:35:59.574: INFO: setup took 2.080978949s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts 02/09/23 01:35:59.574
Feb  9 01:35:59.587: INFO: (0) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 12.798706ms)
Feb  9 01:35:59.587: INFO: (0) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 13.280518ms)
Feb  9 01:35:59.587: INFO: (0) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 13.264717ms)
Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 16.591396ms)
Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 16.622497ms)
Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 16.595697ms)
Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 16.838303ms)
Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 16.917505ms)
Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 16.744801ms)
Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 16.970306ms)
Feb  9 01:35:59.593: INFO: (0) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 19.154058ms)
Feb  9 01:35:59.594: INFO: (0) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 19.285661ms)
Feb  9 01:35:59.594: INFO: (0) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 19.713371ms)
Feb  9 01:35:59.594: INFO: (0) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 19.776072ms)
Feb  9 01:35:59.595: INFO: (0) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 20.130882ms)
Feb  9 01:35:59.595: INFO: (0) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 20.393188ms)
Feb  9 01:35:59.603: INFO: (1) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 7.898189ms)
Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 10.606354ms)
Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.973263ms)
Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 10.630454ms)
Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.213668ms)
Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 11.105866ms)
Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 10.638655ms)
Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.363571ms)
Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 11.166067ms)
Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.116366ms)
Feb  9 01:35:59.608: INFO: (1) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 12.888008ms)
Feb  9 01:35:59.609: INFO: (1) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 13.605925ms)
Feb  9 01:35:59.609: INFO: (1) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 13.80733ms)
Feb  9 01:35:59.609: INFO: (1) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 13.758729ms)
Feb  9 01:35:59.609: INFO: (1) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 13.898432ms)
Feb  9 01:35:59.611: INFO: (1) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 15.89148ms)
Feb  9 01:35:59.619: INFO: (2) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 7.551281ms)
Feb  9 01:35:59.622: INFO: (2) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 10.786658ms)
Feb  9 01:35:59.622: INFO: (2) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 10.48745ms)
Feb  9 01:35:59.622: INFO: (2) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.305446ms)
Feb  9 01:35:59.622: INFO: (2) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.992563ms)
Feb  9 01:35:59.622: INFO: (2) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 10.682456ms)
Feb  9 01:35:59.622: INFO: (2) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 10.676355ms)
Feb  9 01:35:59.623: INFO: (2) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 11.030464ms)
Feb  9 01:35:59.623: INFO: (2) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 10.957261ms)
Feb  9 01:35:59.623: INFO: (2) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 10.85926ms)
Feb  9 01:35:59.624: INFO: (2) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 12.857707ms)
Feb  9 01:35:59.625: INFO: (2) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 13.924033ms)
Feb  9 01:35:59.626: INFO: (2) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 13.916832ms)
Feb  9 01:35:59.626: INFO: (2) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 14.23144ms)
Feb  9 01:35:59.626: INFO: (2) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 14.20664ms)
Feb  9 01:35:59.626: INFO: (2) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 14.510747ms)
Feb  9 01:35:59.634: INFO: (3) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 7.871289ms)
Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 9.985539ms)
Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 10.504351ms)
Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 10.258645ms)
Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 10.345547ms)
Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 10.45855ms)
Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.321847ms)
Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 10.661355ms)
Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 10.097241ms)
Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 10.141642ms)
Feb  9 01:35:59.639: INFO: (3) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 12.249393ms)
Feb  9 01:35:59.639: INFO: (3) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 12.477898ms)
Feb  9 01:35:59.640: INFO: (3) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 13.142314ms)
Feb  9 01:35:59.640: INFO: (3) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 13.38642ms)
Feb  9 01:35:59.640: INFO: (3) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 13.762629ms)
Feb  9 01:35:59.640: INFO: (3) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 13.546124ms)
Feb  9 01:35:59.648: INFO: (4) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 7.995791ms)
Feb  9 01:35:59.650: INFO: (4) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 9.927337ms)
Feb  9 01:35:59.650: INFO: (4) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 9.878836ms)
Feb  9 01:35:59.651: INFO: (4) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 10.00744ms)
Feb  9 01:35:59.651: INFO: (4) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 9.923037ms)
Feb  9 01:35:59.651: INFO: (4) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.100742ms)
Feb  9 01:35:59.651: INFO: (4) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.047664ms)
Feb  9 01:35:59.651: INFO: (4) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 10.949662ms)
Feb  9 01:35:59.652: INFO: (4) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 11.198468ms)
Feb  9 01:35:59.652: INFO: (4) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 11.253569ms)
Feb  9 01:35:59.653: INFO: (4) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 12.185292ms)
Feb  9 01:35:59.655: INFO: (4) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 14.878856ms)
Feb  9 01:35:59.656: INFO: (4) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 15.270465ms)
Feb  9 01:35:59.656: INFO: (4) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.130361ms)
Feb  9 01:35:59.656: INFO: (4) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 15.364067ms)
Feb  9 01:35:59.656: INFO: (4) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 15.553872ms)
Feb  9 01:35:59.663: INFO: (5) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 7.177772ms)
Feb  9 01:35:59.680: INFO: (5) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 23.766568ms)
Feb  9 01:35:59.681: INFO: (5) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 24.049474ms)
Feb  9 01:35:59.681: INFO: (5) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 24.29238ms)
Feb  9 01:35:59.681: INFO: (5) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 24.707791ms)
Feb  9 01:35:59.681: INFO: (5) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 25.014398ms)
Feb  9 01:35:59.681: INFO: (5) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 25.0908ms)
Feb  9 01:35:59.682: INFO: (5) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 25.212003ms)
Feb  9 01:35:59.682: INFO: (5) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 25.507609ms)
Feb  9 01:35:59.682: INFO: (5) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 25.581312ms)
Feb  9 01:35:59.682: INFO: (5) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 25.729915ms)
Feb  9 01:35:59.682: INFO: (5) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 25.968021ms)
Feb  9 01:35:59.682: INFO: (5) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 26.099224ms)
Feb  9 01:35:59.683: INFO: (5) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 26.388931ms)
Feb  9 01:35:59.683: INFO: (5) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 26.104024ms)
Feb  9 01:35:59.683: INFO: (5) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 26.532735ms)
Feb  9 01:35:59.692: INFO: (6) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 7.901389ms)
Feb  9 01:35:59.696: INFO: (6) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 11.934985ms)
Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 12.199691ms)
Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 11.965186ms)
Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 12.285993ms)
Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 12.145891ms)
Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 12.408297ms)
Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 12.108489ms)
Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 13.236816ms)
Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 12.871207ms)
Feb  9 01:35:59.700: INFO: (6) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.990182ms)
Feb  9 01:35:59.701: INFO: (6) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 15.93648ms)
Feb  9 01:35:59.703: INFO: (6) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 18.598445ms)
Feb  9 01:35:59.703: INFO: (6) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 18.698547ms)
Feb  9 01:35:59.703: INFO: (6) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 18.728748ms)
Feb  9 01:35:59.704: INFO: (6) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 19.304962ms)
Feb  9 01:35:59.717: INFO: (7) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 12.616101ms)
Feb  9 01:35:59.718: INFO: (7) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 14.292342ms)
Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 14.551447ms)
Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 14.039236ms)
Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 14.118637ms)
Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 14.285942ms)
Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 14.399044ms)
Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 14.548047ms)
Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 14.516848ms)
Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 14.606149ms)
Feb  9 01:35:59.720: INFO: (7) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.368368ms)
Feb  9 01:35:59.720: INFO: (7) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 15.103561ms)
Feb  9 01:35:59.720: INFO: (7) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 15.181263ms)
Feb  9 01:35:59.721: INFO: (7) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 17.000907ms)
Feb  9 01:35:59.722: INFO: (7) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 17.095008ms)
Feb  9 01:35:59.722: INFO: (7) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 17.283914ms)
Feb  9 01:35:59.729: INFO: (8) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 7.286275ms)
Feb  9 01:35:59.731: INFO: (8) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 9.102817ms)
Feb  9 01:35:59.731: INFO: (8) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 9.251721ms)
Feb  9 01:35:59.731: INFO: (8) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 9.285822ms)
Feb  9 01:35:59.733: INFO: (8) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 10.676055ms)
Feb  9 01:35:59.734: INFO: (8) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 11.73538ms)
Feb  9 01:35:59.734: INFO: (8) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 11.73798ms)
Feb  9 01:35:59.734: INFO: (8) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 11.649679ms)
Feb  9 01:35:59.734: INFO: (8) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 12.266393ms)
Feb  9 01:35:59.734: INFO: (8) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 12.223893ms)
Feb  9 01:35:59.735: INFO: (8) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 12.593501ms)
Feb  9 01:35:59.735: INFO: (8) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 13.205016ms)
Feb  9 01:35:59.735: INFO: (8) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 13.41302ms)
Feb  9 01:35:59.737: INFO: (8) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 14.557948ms)
Feb  9 01:35:59.737: INFO: (8) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.03146ms)
Feb  9 01:35:59.738: INFO: (8) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 16.692299ms)
Feb  9 01:35:59.747: INFO: (9) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 8.609706ms)
Feb  9 01:35:59.748: INFO: (9) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 9.475426ms)
Feb  9 01:35:59.748: INFO: (9) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 9.527527ms)
Feb  9 01:35:59.749: INFO: (9) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 10.297446ms)
Feb  9 01:35:59.749: INFO: (9) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 9.988339ms)
Feb  9 01:35:59.749: INFO: (9) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.86166ms)
Feb  9 01:35:59.750: INFO: (9) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 10.811558ms)
Feb  9 01:35:59.750: INFO: (9) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 11.31157ms)
Feb  9 01:35:59.751: INFO: (9) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 11.996187ms)
Feb  9 01:35:59.751: INFO: (9) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 12.053788ms)
Feb  9 01:35:59.751: INFO: (9) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 12.812706ms)
Feb  9 01:35:59.753: INFO: (9) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 14.405944ms)
Feb  9 01:35:59.753: INFO: (9) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 14.680151ms)
Feb  9 01:35:59.754: INFO: (9) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.004058ms)
Feb  9 01:35:59.755: INFO: (9) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.86688ms)
Feb  9 01:35:59.755: INFO: (9) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 15.799478ms)
Feb  9 01:35:59.763: INFO: (10) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 8.093693ms)
Feb  9 01:35:59.765: INFO: (10) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 10.209344ms)
Feb  9 01:35:59.766: INFO: (10) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 10.46885ms)
Feb  9 01:35:59.766: INFO: (10) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.504151ms)
Feb  9 01:35:59.767: INFO: (10) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 11.624478ms)
Feb  9 01:35:59.767: INFO: (10) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 11.577977ms)
Feb  9 01:35:59.767: INFO: (10) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.853783ms)
Feb  9 01:35:59.767: INFO: (10) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 11.784582ms)
Feb  9 01:35:59.767: INFO: (10) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 11.70948ms)
Feb  9 01:35:59.767: INFO: (10) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 12.025187ms)
Feb  9 01:35:59.771: INFO: (10) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.294266ms)
Feb  9 01:35:59.771: INFO: (10) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 15.527671ms)
Feb  9 01:35:59.771: INFO: (10) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 15.412968ms)
Feb  9 01:35:59.771: INFO: (10) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.604473ms)
Feb  9 01:35:59.771: INFO: (10) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 15.583673ms)
Feb  9 01:35:59.771: INFO: (10) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 15.616773ms)
Feb  9 01:35:59.779: INFO: (11) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 7.692184ms)
Feb  9 01:35:59.780: INFO: (11) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 9.104118ms)
Feb  9 01:35:59.781: INFO: (11) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 9.545428ms)
Feb  9 01:35:59.782: INFO: (11) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 10.632154ms)
Feb  9 01:35:59.782: INFO: (11) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 10.563452ms)
Feb  9 01:35:59.782: INFO: (11) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 10.530751ms)
Feb  9 01:35:59.782: INFO: (11) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.640754ms)
Feb  9 01:35:59.783: INFO: (11) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.512575ms)
Feb  9 01:35:59.783: INFO: (11) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 11.607078ms)
Feb  9 01:35:59.783: INFO: (11) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 11.612077ms)
Feb  9 01:35:59.784: INFO: (11) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 12.528699ms)
Feb  9 01:35:59.789: INFO: (11) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 17.809126ms)
Feb  9 01:35:59.789: INFO: (11) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 17.949429ms)
Feb  9 01:35:59.789: INFO: (11) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 17.936829ms)
Feb  9 01:35:59.789: INFO: (11) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 18.118633ms)
Feb  9 01:35:59.797: INFO: (11) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 25.567711ms)
Feb  9 01:35:59.835: INFO: (12) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 37.921407ms)
Feb  9 01:35:59.835: INFO: (12) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 37.856605ms)
Feb  9 01:35:59.835: INFO: (12) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 38.428619ms)
Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 38.298615ms)
Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 38.246014ms)
Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 38.593322ms)
Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 38.90813ms)
Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 39.032033ms)
Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 38.91293ms)
Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 39.568546ms)
Feb  9 01:35:59.837: INFO: (12) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 39.461944ms)
Feb  9 01:35:59.837: INFO: (12) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 39.381542ms)
Feb  9 01:35:59.837: INFO: (12) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 39.881354ms)
Feb  9 01:35:59.841: INFO: (12) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 43.664144ms)
Feb  9 01:35:59.841: INFO: (12) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 43.477039ms)
Feb  9 01:35:59.841: INFO: (12) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 43.597142ms)
Feb  9 01:35:59.852: INFO: (13) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.032463ms)
Feb  9 01:35:59.852: INFO: (13) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.058065ms)
Feb  9 01:35:59.852: INFO: (13) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 11.462874ms)
Feb  9 01:35:59.853: INFO: (13) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 11.576777ms)
Feb  9 01:35:59.853: INFO: (13) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.833183ms)
Feb  9 01:35:59.853: INFO: (13) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 11.530676ms)
Feb  9 01:35:59.856: INFO: (13) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 14.776453ms)
Feb  9 01:35:59.858: INFO: (13) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 16.857603ms)
Feb  9 01:35:59.858: INFO: (13) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 16.926905ms)
Feb  9 01:35:59.858: INFO: (13) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 17.127409ms)
Feb  9 01:35:59.859: INFO: (13) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 17.862427ms)
Feb  9 01:35:59.861: INFO: (13) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 19.260561ms)
Feb  9 01:35:59.861: INFO: (13) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 19.262261ms)
Feb  9 01:35:59.861: INFO: (13) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 19.202759ms)
Feb  9 01:35:59.861: INFO: (13) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 19.778573ms)
Feb  9 01:35:59.861: INFO: (13) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 19.713871ms)
Feb  9 01:35:59.874: INFO: (14) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 12.026788ms)
Feb  9 01:35:59.874: INFO: (14) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 12.10029ms)
Feb  9 01:35:59.874: INFO: (14) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 12.12159ms)
Feb  9 01:35:59.874: INFO: (14) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 12.106389ms)
Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 15.434569ms)
Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 15.533171ms)
Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.722776ms)
Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 15.597473ms)
Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 15.620874ms)
Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 15.942181ms)
Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 15.822978ms)
Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 15.977982ms)
Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.936181ms)
Feb  9 01:35:59.878: INFO: (14) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 15.933681ms)
Feb  9 01:35:59.882: INFO: (14) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 19.947177ms)
Feb  9 01:35:59.882: INFO: (14) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 20.169982ms)
Feb  9 01:35:59.889: INFO: (15) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 7.289874ms)
Feb  9 01:35:59.892: INFO: (15) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 9.880336ms)
Feb  9 01:35:59.894: INFO: (15) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 11.382472ms)
Feb  9 01:35:59.894: INFO: (15) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.854384ms)
Feb  9 01:35:59.894: INFO: (15) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 11.783081ms)
Feb  9 01:35:59.894: INFO: (15) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.662379ms)
Feb  9 01:35:59.894: INFO: (15) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 11.617378ms)
Feb  9 01:35:59.895: INFO: (15) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 12.918609ms)
Feb  9 01:35:59.895: INFO: (15) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 12.781705ms)
Feb  9 01:35:59.895: INFO: (15) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 12.96131ms)
Feb  9 01:35:59.895: INFO: (15) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 13.420421ms)
Feb  9 01:35:59.896: INFO: (15) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 13.903232ms)
Feb  9 01:35:59.897: INFO: (15) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 14.23454ms)
Feb  9 01:35:59.897: INFO: (15) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.05416ms)
Feb  9 01:35:59.898: INFO: (15) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.90358ms)
Feb  9 01:35:59.898: INFO: (15) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 15.673474ms)
Feb  9 01:35:59.916: INFO: (16) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 17.842027ms)
Feb  9 01:35:59.916: INFO: (16) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 17.622822ms)
Feb  9 01:35:59.924: INFO: (16) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 25.092ms)
Feb  9 01:35:59.924: INFO: (16) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 25.1059ms)
Feb  9 01:35:59.924: INFO: (16) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 24.987898ms)
Feb  9 01:35:59.924: INFO: (16) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 25.533711ms)
Feb  9 01:35:59.924: INFO: (16) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 25.203403ms)
Feb  9 01:35:59.924: INFO: (16) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 25.774817ms)
Feb  9 01:35:59.925: INFO: (16) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 26.154625ms)
Feb  9 01:35:59.925: INFO: (16) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 26.004921ms)
Feb  9 01:35:59.925: INFO: (16) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 26.429932ms)
Feb  9 01:35:59.925: INFO: (16) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 26.267128ms)
Feb  9 01:35:59.926: INFO: (16) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 27.782864ms)
Feb  9 01:35:59.927: INFO: (16) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 28.903791ms)
Feb  9 01:35:59.929: INFO: (16) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 30.457028ms)
Feb  9 01:35:59.929: INFO: (16) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 30.483128ms)
Feb  9 01:35:59.937: INFO: (17) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 7.761386ms)
Feb  9 01:35:59.941: INFO: (17) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 10.746757ms)
Feb  9 01:35:59.941: INFO: (17) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.377472ms)
Feb  9 01:35:59.941: INFO: (17) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.524275ms)
Feb  9 01:35:59.942: INFO: (17) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 12.525899ms)
Feb  9 01:35:59.942: INFO: (17) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 12.386496ms)
Feb  9 01:35:59.943: INFO: (17) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 12.579801ms)
Feb  9 01:35:59.943: INFO: (17) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 13.128914ms)
Feb  9 01:35:59.943: INFO: (17) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 13.217216ms)
Feb  9 01:35:59.943: INFO: (17) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 13.092813ms)
Feb  9 01:35:59.943: INFO: (17) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 13.507623ms)
Feb  9 01:35:59.946: INFO: (17) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 16.7175ms)
Feb  9 01:35:59.946: INFO: (17) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 16.496594ms)
Feb  9 01:35:59.946: INFO: (17) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 16.482794ms)
Feb  9 01:35:59.946: INFO: (17) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 16.886204ms)
Feb  9 01:35:59.946: INFO: (17) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 16.7528ms)
Feb  9 01:35:59.955: INFO: (18) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 8.111494ms)
Feb  9 01:35:59.956: INFO: (18) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 9.079317ms)
Feb  9 01:35:59.956: INFO: (18) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 9.59443ms)
Feb  9 01:35:59.957: INFO: (18) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 9.972538ms)
Feb  9 01:35:59.957: INFO: (18) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 9.791134ms)
Feb  9 01:35:59.957: INFO: (18) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 10.630254ms)
Feb  9 01:35:59.957: INFO: (18) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 10.779758ms)
Feb  9 01:35:59.958: INFO: (18) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 10.88516ms)
Feb  9 01:35:59.958: INFO: (18) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.120766ms)
Feb  9 01:35:59.958: INFO: (18) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.097965ms)
Feb  9 01:35:59.959: INFO: (18) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 11.915785ms)
Feb  9 01:35:59.961: INFO: (18) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 13.83783ms)
Feb  9 01:35:59.961: INFO: (18) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 14.190439ms)
Feb  9 01:35:59.961: INFO: (18) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 14.155238ms)
Feb  9 01:35:59.961: INFO: (18) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 14.65245ms)
Feb  9 01:35:59.962: INFO: (18) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 14.836055ms)
Feb  9 01:35:59.970: INFO: (19) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 8.410701ms)
Feb  9 01:35:59.973: INFO: (19) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.203568ms)
Feb  9 01:35:59.973: INFO: (19) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.163566ms)
Feb  9 01:35:59.973: INFO: (19) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 11.361171ms)
Feb  9 01:35:59.974: INFO: (19) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 11.468175ms)
Feb  9 01:35:59.974: INFO: (19) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.409673ms)
Feb  9 01:35:59.974: INFO: (19) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 12.068089ms)
Feb  9 01:35:59.974: INFO: (19) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.791981ms)
Feb  9 01:35:59.974: INFO: (19) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 11.983087ms)
Feb  9 01:35:59.974: INFO: (19) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 12.022687ms)
Feb  9 01:35:59.976: INFO: (19) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 14.287142ms)
Feb  9 01:35:59.977: INFO: (19) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 14.894656ms)
Feb  9 01:35:59.978: INFO: (19) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 15.434869ms)
Feb  9 01:35:59.978: INFO: (19) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.636374ms)
Feb  9 01:35:59.978: INFO: (19) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 15.384767ms)
Feb  9 01:35:59.978: INFO: (19) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.86578ms)
STEP: deleting ReplicationController proxy-service-fngxj in namespace proxy-7253, will wait for the garbage collector to delete the pods 02/09/23 01:35:59.978
Feb  9 01:36:00.051: INFO: Deleting ReplicationController proxy-service-fngxj took: 10.694956ms
Feb  9 01:36:00.152: INFO: Terminating ReplicationController proxy-service-fngxj pods took: 101.149418ms
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Feb  9 01:36:02.453: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-7253" for this suite. 02/09/23 01:36:02.462
------------------------------
â€¢ [SLOW TEST] [5.009 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/network/proxy.go:101

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:35:57.464
    Feb  9 01:35:57.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename proxy 02/09/23 01:35:57.465
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:35:57.484
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:35:57.488
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] should proxy through a service and a pod  [Conformance]
      test/e2e/network/proxy.go:101
    STEP: starting an echo server on multiple ports 02/09/23 01:35:57.507
    STEP: creating replication controller proxy-service-fngxj in namespace proxy-7253 02/09/23 01:35:57.507
    I0209 01:35:57.514456      20 runners.go:193] Created replication controller with name: proxy-service-fngxj, namespace: proxy-7253, replica count: 1
    I0209 01:35:58.567372      20 runners.go:193] proxy-service-fngxj Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
    I0209 01:35:59.567805      20 runners.go:193] proxy-service-fngxj Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Feb  9 01:35:59.574: INFO: setup took 2.080978949s, starting test cases
    STEP: running 16 cases, 20 attempts per case, 320 total attempts 02/09/23 01:35:59.574
    Feb  9 01:35:59.587: INFO: (0) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 12.798706ms)
    Feb  9 01:35:59.587: INFO: (0) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 13.280518ms)
    Feb  9 01:35:59.587: INFO: (0) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 13.264717ms)
    Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 16.591396ms)
    Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 16.622497ms)
    Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 16.595697ms)
    Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 16.838303ms)
    Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 16.917505ms)
    Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 16.744801ms)
    Feb  9 01:35:59.591: INFO: (0) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 16.970306ms)
    Feb  9 01:35:59.593: INFO: (0) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 19.154058ms)
    Feb  9 01:35:59.594: INFO: (0) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 19.285661ms)
    Feb  9 01:35:59.594: INFO: (0) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 19.713371ms)
    Feb  9 01:35:59.594: INFO: (0) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 19.776072ms)
    Feb  9 01:35:59.595: INFO: (0) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 20.130882ms)
    Feb  9 01:35:59.595: INFO: (0) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 20.393188ms)
    Feb  9 01:35:59.603: INFO: (1) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 7.898189ms)
    Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 10.606354ms)
    Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.973263ms)
    Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 10.630454ms)
    Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.213668ms)
    Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 11.105866ms)
    Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 10.638655ms)
    Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.363571ms)
    Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 11.166067ms)
    Feb  9 01:35:59.606: INFO: (1) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.116366ms)
    Feb  9 01:35:59.608: INFO: (1) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 12.888008ms)
    Feb  9 01:35:59.609: INFO: (1) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 13.605925ms)
    Feb  9 01:35:59.609: INFO: (1) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 13.80733ms)
    Feb  9 01:35:59.609: INFO: (1) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 13.758729ms)
    Feb  9 01:35:59.609: INFO: (1) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 13.898432ms)
    Feb  9 01:35:59.611: INFO: (1) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 15.89148ms)
    Feb  9 01:35:59.619: INFO: (2) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 7.551281ms)
    Feb  9 01:35:59.622: INFO: (2) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 10.786658ms)
    Feb  9 01:35:59.622: INFO: (2) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 10.48745ms)
    Feb  9 01:35:59.622: INFO: (2) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.305446ms)
    Feb  9 01:35:59.622: INFO: (2) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.992563ms)
    Feb  9 01:35:59.622: INFO: (2) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 10.682456ms)
    Feb  9 01:35:59.622: INFO: (2) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 10.676355ms)
    Feb  9 01:35:59.623: INFO: (2) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 11.030464ms)
    Feb  9 01:35:59.623: INFO: (2) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 10.957261ms)
    Feb  9 01:35:59.623: INFO: (2) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 10.85926ms)
    Feb  9 01:35:59.624: INFO: (2) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 12.857707ms)
    Feb  9 01:35:59.625: INFO: (2) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 13.924033ms)
    Feb  9 01:35:59.626: INFO: (2) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 13.916832ms)
    Feb  9 01:35:59.626: INFO: (2) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 14.23144ms)
    Feb  9 01:35:59.626: INFO: (2) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 14.20664ms)
    Feb  9 01:35:59.626: INFO: (2) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 14.510747ms)
    Feb  9 01:35:59.634: INFO: (3) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 7.871289ms)
    Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 9.985539ms)
    Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 10.504351ms)
    Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 10.258645ms)
    Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 10.345547ms)
    Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 10.45855ms)
    Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.321847ms)
    Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 10.661355ms)
    Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 10.097241ms)
    Feb  9 01:35:59.637: INFO: (3) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 10.141642ms)
    Feb  9 01:35:59.639: INFO: (3) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 12.249393ms)
    Feb  9 01:35:59.639: INFO: (3) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 12.477898ms)
    Feb  9 01:35:59.640: INFO: (3) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 13.142314ms)
    Feb  9 01:35:59.640: INFO: (3) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 13.38642ms)
    Feb  9 01:35:59.640: INFO: (3) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 13.762629ms)
    Feb  9 01:35:59.640: INFO: (3) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 13.546124ms)
    Feb  9 01:35:59.648: INFO: (4) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 7.995791ms)
    Feb  9 01:35:59.650: INFO: (4) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 9.927337ms)
    Feb  9 01:35:59.650: INFO: (4) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 9.878836ms)
    Feb  9 01:35:59.651: INFO: (4) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 10.00744ms)
    Feb  9 01:35:59.651: INFO: (4) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 9.923037ms)
    Feb  9 01:35:59.651: INFO: (4) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.100742ms)
    Feb  9 01:35:59.651: INFO: (4) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.047664ms)
    Feb  9 01:35:59.651: INFO: (4) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 10.949662ms)
    Feb  9 01:35:59.652: INFO: (4) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 11.198468ms)
    Feb  9 01:35:59.652: INFO: (4) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 11.253569ms)
    Feb  9 01:35:59.653: INFO: (4) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 12.185292ms)
    Feb  9 01:35:59.655: INFO: (4) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 14.878856ms)
    Feb  9 01:35:59.656: INFO: (4) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 15.270465ms)
    Feb  9 01:35:59.656: INFO: (4) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.130361ms)
    Feb  9 01:35:59.656: INFO: (4) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 15.364067ms)
    Feb  9 01:35:59.656: INFO: (4) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 15.553872ms)
    Feb  9 01:35:59.663: INFO: (5) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 7.177772ms)
    Feb  9 01:35:59.680: INFO: (5) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 23.766568ms)
    Feb  9 01:35:59.681: INFO: (5) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 24.049474ms)
    Feb  9 01:35:59.681: INFO: (5) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 24.29238ms)
    Feb  9 01:35:59.681: INFO: (5) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 24.707791ms)
    Feb  9 01:35:59.681: INFO: (5) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 25.014398ms)
    Feb  9 01:35:59.681: INFO: (5) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 25.0908ms)
    Feb  9 01:35:59.682: INFO: (5) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 25.212003ms)
    Feb  9 01:35:59.682: INFO: (5) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 25.507609ms)
    Feb  9 01:35:59.682: INFO: (5) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 25.581312ms)
    Feb  9 01:35:59.682: INFO: (5) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 25.729915ms)
    Feb  9 01:35:59.682: INFO: (5) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 25.968021ms)
    Feb  9 01:35:59.682: INFO: (5) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 26.099224ms)
    Feb  9 01:35:59.683: INFO: (5) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 26.388931ms)
    Feb  9 01:35:59.683: INFO: (5) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 26.104024ms)
    Feb  9 01:35:59.683: INFO: (5) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 26.532735ms)
    Feb  9 01:35:59.692: INFO: (6) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 7.901389ms)
    Feb  9 01:35:59.696: INFO: (6) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 11.934985ms)
    Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 12.199691ms)
    Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 11.965186ms)
    Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 12.285993ms)
    Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 12.145891ms)
    Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 12.408297ms)
    Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 12.108489ms)
    Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 13.236816ms)
    Feb  9 01:35:59.697: INFO: (6) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 12.871207ms)
    Feb  9 01:35:59.700: INFO: (6) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.990182ms)
    Feb  9 01:35:59.701: INFO: (6) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 15.93648ms)
    Feb  9 01:35:59.703: INFO: (6) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 18.598445ms)
    Feb  9 01:35:59.703: INFO: (6) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 18.698547ms)
    Feb  9 01:35:59.703: INFO: (6) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 18.728748ms)
    Feb  9 01:35:59.704: INFO: (6) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 19.304962ms)
    Feb  9 01:35:59.717: INFO: (7) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 12.616101ms)
    Feb  9 01:35:59.718: INFO: (7) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 14.292342ms)
    Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 14.551447ms)
    Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 14.039236ms)
    Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 14.118637ms)
    Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 14.285942ms)
    Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 14.399044ms)
    Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 14.548047ms)
    Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 14.516848ms)
    Feb  9 01:35:59.719: INFO: (7) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 14.606149ms)
    Feb  9 01:35:59.720: INFO: (7) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.368368ms)
    Feb  9 01:35:59.720: INFO: (7) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 15.103561ms)
    Feb  9 01:35:59.720: INFO: (7) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 15.181263ms)
    Feb  9 01:35:59.721: INFO: (7) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 17.000907ms)
    Feb  9 01:35:59.722: INFO: (7) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 17.095008ms)
    Feb  9 01:35:59.722: INFO: (7) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 17.283914ms)
    Feb  9 01:35:59.729: INFO: (8) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 7.286275ms)
    Feb  9 01:35:59.731: INFO: (8) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 9.102817ms)
    Feb  9 01:35:59.731: INFO: (8) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 9.251721ms)
    Feb  9 01:35:59.731: INFO: (8) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 9.285822ms)
    Feb  9 01:35:59.733: INFO: (8) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 10.676055ms)
    Feb  9 01:35:59.734: INFO: (8) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 11.73538ms)
    Feb  9 01:35:59.734: INFO: (8) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 11.73798ms)
    Feb  9 01:35:59.734: INFO: (8) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 11.649679ms)
    Feb  9 01:35:59.734: INFO: (8) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 12.266393ms)
    Feb  9 01:35:59.734: INFO: (8) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 12.223893ms)
    Feb  9 01:35:59.735: INFO: (8) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 12.593501ms)
    Feb  9 01:35:59.735: INFO: (8) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 13.205016ms)
    Feb  9 01:35:59.735: INFO: (8) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 13.41302ms)
    Feb  9 01:35:59.737: INFO: (8) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 14.557948ms)
    Feb  9 01:35:59.737: INFO: (8) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.03146ms)
    Feb  9 01:35:59.738: INFO: (8) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 16.692299ms)
    Feb  9 01:35:59.747: INFO: (9) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 8.609706ms)
    Feb  9 01:35:59.748: INFO: (9) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 9.475426ms)
    Feb  9 01:35:59.748: INFO: (9) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 9.527527ms)
    Feb  9 01:35:59.749: INFO: (9) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 10.297446ms)
    Feb  9 01:35:59.749: INFO: (9) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 9.988339ms)
    Feb  9 01:35:59.749: INFO: (9) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.86166ms)
    Feb  9 01:35:59.750: INFO: (9) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 10.811558ms)
    Feb  9 01:35:59.750: INFO: (9) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 11.31157ms)
    Feb  9 01:35:59.751: INFO: (9) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 11.996187ms)
    Feb  9 01:35:59.751: INFO: (9) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 12.053788ms)
    Feb  9 01:35:59.751: INFO: (9) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 12.812706ms)
    Feb  9 01:35:59.753: INFO: (9) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 14.405944ms)
    Feb  9 01:35:59.753: INFO: (9) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 14.680151ms)
    Feb  9 01:35:59.754: INFO: (9) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.004058ms)
    Feb  9 01:35:59.755: INFO: (9) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.86688ms)
    Feb  9 01:35:59.755: INFO: (9) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 15.799478ms)
    Feb  9 01:35:59.763: INFO: (10) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 8.093693ms)
    Feb  9 01:35:59.765: INFO: (10) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 10.209344ms)
    Feb  9 01:35:59.766: INFO: (10) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 10.46885ms)
    Feb  9 01:35:59.766: INFO: (10) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.504151ms)
    Feb  9 01:35:59.767: INFO: (10) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 11.624478ms)
    Feb  9 01:35:59.767: INFO: (10) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 11.577977ms)
    Feb  9 01:35:59.767: INFO: (10) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.853783ms)
    Feb  9 01:35:59.767: INFO: (10) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 11.784582ms)
    Feb  9 01:35:59.767: INFO: (10) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 11.70948ms)
    Feb  9 01:35:59.767: INFO: (10) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 12.025187ms)
    Feb  9 01:35:59.771: INFO: (10) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.294266ms)
    Feb  9 01:35:59.771: INFO: (10) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 15.527671ms)
    Feb  9 01:35:59.771: INFO: (10) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 15.412968ms)
    Feb  9 01:35:59.771: INFO: (10) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.604473ms)
    Feb  9 01:35:59.771: INFO: (10) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 15.583673ms)
    Feb  9 01:35:59.771: INFO: (10) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 15.616773ms)
    Feb  9 01:35:59.779: INFO: (11) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 7.692184ms)
    Feb  9 01:35:59.780: INFO: (11) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 9.104118ms)
    Feb  9 01:35:59.781: INFO: (11) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 9.545428ms)
    Feb  9 01:35:59.782: INFO: (11) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 10.632154ms)
    Feb  9 01:35:59.782: INFO: (11) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 10.563452ms)
    Feb  9 01:35:59.782: INFO: (11) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 10.530751ms)
    Feb  9 01:35:59.782: INFO: (11) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 10.640754ms)
    Feb  9 01:35:59.783: INFO: (11) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.512575ms)
    Feb  9 01:35:59.783: INFO: (11) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 11.607078ms)
    Feb  9 01:35:59.783: INFO: (11) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 11.612077ms)
    Feb  9 01:35:59.784: INFO: (11) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 12.528699ms)
    Feb  9 01:35:59.789: INFO: (11) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 17.809126ms)
    Feb  9 01:35:59.789: INFO: (11) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 17.949429ms)
    Feb  9 01:35:59.789: INFO: (11) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 17.936829ms)
    Feb  9 01:35:59.789: INFO: (11) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 18.118633ms)
    Feb  9 01:35:59.797: INFO: (11) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 25.567711ms)
    Feb  9 01:35:59.835: INFO: (12) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 37.921407ms)
    Feb  9 01:35:59.835: INFO: (12) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 37.856605ms)
    Feb  9 01:35:59.835: INFO: (12) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 38.428619ms)
    Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 38.298615ms)
    Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 38.246014ms)
    Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 38.593322ms)
    Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 38.90813ms)
    Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 39.032033ms)
    Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 38.91293ms)
    Feb  9 01:35:59.836: INFO: (12) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 39.568546ms)
    Feb  9 01:35:59.837: INFO: (12) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 39.461944ms)
    Feb  9 01:35:59.837: INFO: (12) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 39.381542ms)
    Feb  9 01:35:59.837: INFO: (12) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 39.881354ms)
    Feb  9 01:35:59.841: INFO: (12) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 43.664144ms)
    Feb  9 01:35:59.841: INFO: (12) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 43.477039ms)
    Feb  9 01:35:59.841: INFO: (12) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 43.597142ms)
    Feb  9 01:35:59.852: INFO: (13) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.032463ms)
    Feb  9 01:35:59.852: INFO: (13) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.058065ms)
    Feb  9 01:35:59.852: INFO: (13) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 11.462874ms)
    Feb  9 01:35:59.853: INFO: (13) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 11.576777ms)
    Feb  9 01:35:59.853: INFO: (13) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.833183ms)
    Feb  9 01:35:59.853: INFO: (13) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 11.530676ms)
    Feb  9 01:35:59.856: INFO: (13) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 14.776453ms)
    Feb  9 01:35:59.858: INFO: (13) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 16.857603ms)
    Feb  9 01:35:59.858: INFO: (13) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 16.926905ms)
    Feb  9 01:35:59.858: INFO: (13) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 17.127409ms)
    Feb  9 01:35:59.859: INFO: (13) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 17.862427ms)
    Feb  9 01:35:59.861: INFO: (13) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 19.260561ms)
    Feb  9 01:35:59.861: INFO: (13) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 19.262261ms)
    Feb  9 01:35:59.861: INFO: (13) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 19.202759ms)
    Feb  9 01:35:59.861: INFO: (13) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 19.778573ms)
    Feb  9 01:35:59.861: INFO: (13) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 19.713871ms)
    Feb  9 01:35:59.874: INFO: (14) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 12.026788ms)
    Feb  9 01:35:59.874: INFO: (14) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 12.10029ms)
    Feb  9 01:35:59.874: INFO: (14) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 12.12159ms)
    Feb  9 01:35:59.874: INFO: (14) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 12.106389ms)
    Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 15.434569ms)
    Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 15.533171ms)
    Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.722776ms)
    Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 15.597473ms)
    Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 15.620874ms)
    Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 15.942181ms)
    Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 15.822978ms)
    Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 15.977982ms)
    Feb  9 01:35:59.877: INFO: (14) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.936181ms)
    Feb  9 01:35:59.878: INFO: (14) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 15.933681ms)
    Feb  9 01:35:59.882: INFO: (14) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 19.947177ms)
    Feb  9 01:35:59.882: INFO: (14) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 20.169982ms)
    Feb  9 01:35:59.889: INFO: (15) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 7.289874ms)
    Feb  9 01:35:59.892: INFO: (15) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 9.880336ms)
    Feb  9 01:35:59.894: INFO: (15) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 11.382472ms)
    Feb  9 01:35:59.894: INFO: (15) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.854384ms)
    Feb  9 01:35:59.894: INFO: (15) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 11.783081ms)
    Feb  9 01:35:59.894: INFO: (15) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.662379ms)
    Feb  9 01:35:59.894: INFO: (15) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 11.617378ms)
    Feb  9 01:35:59.895: INFO: (15) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 12.918609ms)
    Feb  9 01:35:59.895: INFO: (15) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 12.781705ms)
    Feb  9 01:35:59.895: INFO: (15) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 12.96131ms)
    Feb  9 01:35:59.895: INFO: (15) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 13.420421ms)
    Feb  9 01:35:59.896: INFO: (15) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 13.903232ms)
    Feb  9 01:35:59.897: INFO: (15) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 14.23454ms)
    Feb  9 01:35:59.897: INFO: (15) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.05416ms)
    Feb  9 01:35:59.898: INFO: (15) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.90358ms)
    Feb  9 01:35:59.898: INFO: (15) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 15.673474ms)
    Feb  9 01:35:59.916: INFO: (16) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 17.842027ms)
    Feb  9 01:35:59.916: INFO: (16) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 17.622822ms)
    Feb  9 01:35:59.924: INFO: (16) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 25.092ms)
    Feb  9 01:35:59.924: INFO: (16) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 25.1059ms)
    Feb  9 01:35:59.924: INFO: (16) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 24.987898ms)
    Feb  9 01:35:59.924: INFO: (16) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 25.533711ms)
    Feb  9 01:35:59.924: INFO: (16) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 25.203403ms)
    Feb  9 01:35:59.924: INFO: (16) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 25.774817ms)
    Feb  9 01:35:59.925: INFO: (16) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 26.154625ms)
    Feb  9 01:35:59.925: INFO: (16) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 26.004921ms)
    Feb  9 01:35:59.925: INFO: (16) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 26.429932ms)
    Feb  9 01:35:59.925: INFO: (16) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 26.267128ms)
    Feb  9 01:35:59.926: INFO: (16) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 27.782864ms)
    Feb  9 01:35:59.927: INFO: (16) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 28.903791ms)
    Feb  9 01:35:59.929: INFO: (16) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 30.457028ms)
    Feb  9 01:35:59.929: INFO: (16) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 30.483128ms)
    Feb  9 01:35:59.937: INFO: (17) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 7.761386ms)
    Feb  9 01:35:59.941: INFO: (17) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 10.746757ms)
    Feb  9 01:35:59.941: INFO: (17) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.377472ms)
    Feb  9 01:35:59.941: INFO: (17) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.524275ms)
    Feb  9 01:35:59.942: INFO: (17) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 12.525899ms)
    Feb  9 01:35:59.942: INFO: (17) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 12.386496ms)
    Feb  9 01:35:59.943: INFO: (17) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 12.579801ms)
    Feb  9 01:35:59.943: INFO: (17) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 13.128914ms)
    Feb  9 01:35:59.943: INFO: (17) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 13.217216ms)
    Feb  9 01:35:59.943: INFO: (17) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 13.092813ms)
    Feb  9 01:35:59.943: INFO: (17) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 13.507623ms)
    Feb  9 01:35:59.946: INFO: (17) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 16.7175ms)
    Feb  9 01:35:59.946: INFO: (17) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 16.496594ms)
    Feb  9 01:35:59.946: INFO: (17) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 16.482794ms)
    Feb  9 01:35:59.946: INFO: (17) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 16.886204ms)
    Feb  9 01:35:59.946: INFO: (17) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 16.7528ms)
    Feb  9 01:35:59.955: INFO: (18) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 8.111494ms)
    Feb  9 01:35:59.956: INFO: (18) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 9.079317ms)
    Feb  9 01:35:59.956: INFO: (18) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 9.59443ms)
    Feb  9 01:35:59.957: INFO: (18) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 9.972538ms)
    Feb  9 01:35:59.957: INFO: (18) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 9.791134ms)
    Feb  9 01:35:59.957: INFO: (18) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 10.630254ms)
    Feb  9 01:35:59.957: INFO: (18) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 10.779758ms)
    Feb  9 01:35:59.958: INFO: (18) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 10.88516ms)
    Feb  9 01:35:59.958: INFO: (18) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.120766ms)
    Feb  9 01:35:59.958: INFO: (18) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.097965ms)
    Feb  9 01:35:59.959: INFO: (18) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 11.915785ms)
    Feb  9 01:35:59.961: INFO: (18) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 13.83783ms)
    Feb  9 01:35:59.961: INFO: (18) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 14.190439ms)
    Feb  9 01:35:59.961: INFO: (18) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 14.155238ms)
    Feb  9 01:35:59.961: INFO: (18) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 14.65245ms)
    Feb  9 01:35:59.962: INFO: (18) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 14.836055ms)
    Feb  9 01:35:59.970: INFO: (19) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">test<... (200; 8.410701ms)
    Feb  9 01:35:59.973: INFO: (19) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.203568ms)
    Feb  9 01:35:59.973: INFO: (19) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.163566ms)
    Feb  9 01:35:59.973: INFO: (19) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:443/proxy/tlsrewritem... (200; 11.361171ms)
    Feb  9 01:35:59.974: INFO: (19) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:1080/proxy/rewriteme">... (200; 11.468175ms)
    Feb  9 01:35:59.974: INFO: (19) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:160/proxy/: foo (200; 11.409673ms)
    Feb  9 01:35:59.974: INFO: (19) /api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/: <a href="/api/v1/namespaces/proxy-7253/pods/proxy-service-fngxj-sjj7k/proxy/rewriteme">test</a> (200; 12.068089ms)
    Feb  9 01:35:59.974: INFO: (19) /api/v1/namespaces/proxy-7253/pods/http:proxy-service-fngxj-sjj7k:162/proxy/: bar (200; 11.791981ms)
    Feb  9 01:35:59.974: INFO: (19) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:460/proxy/: tls baz (200; 11.983087ms)
    Feb  9 01:35:59.974: INFO: (19) /api/v1/namespaces/proxy-7253/pods/https:proxy-service-fngxj-sjj7k:462/proxy/: tls qux (200; 12.022687ms)
    Feb  9 01:35:59.976: INFO: (19) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname2/proxy/: tls qux (200; 14.287142ms)
    Feb  9 01:35:59.977: INFO: (19) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname1/proxy/: foo (200; 14.894656ms)
    Feb  9 01:35:59.978: INFO: (19) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname1/proxy/: foo (200; 15.434869ms)
    Feb  9 01:35:59.978: INFO: (19) /api/v1/namespaces/proxy-7253/services/https:proxy-service-fngxj:tlsportname1/proxy/: tls baz (200; 15.636374ms)
    Feb  9 01:35:59.978: INFO: (19) /api/v1/namespaces/proxy-7253/services/http:proxy-service-fngxj:portname2/proxy/: bar (200; 15.384767ms)
    Feb  9 01:35:59.978: INFO: (19) /api/v1/namespaces/proxy-7253/services/proxy-service-fngxj:portname2/proxy/: bar (200; 15.86578ms)
    STEP: deleting ReplicationController proxy-service-fngxj in namespace proxy-7253, will wait for the garbage collector to delete the pods 02/09/23 01:35:59.978
    Feb  9 01:36:00.051: INFO: Deleting ReplicationController proxy-service-fngxj took: 10.694956ms
    Feb  9 01:36:00.152: INFO: Terminating ReplicationController proxy-service-fngxj pods took: 101.149418ms
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:36:02.453: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-7253" for this suite. 02/09/23 01:36:02.462
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-network] EndpointSliceMirroring
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53
[BeforeEach] [sig-network] EndpointSliceMirroring
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:36:02.473
Feb  9 01:36:02.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename endpointslicemirroring 02/09/23 01:36:02.474
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:02.496
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:02.501
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53
STEP: mirroring a new custom Endpoint 02/09/23 01:36:02.521
Feb  9 01:36:02.532: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint 02/09/23 01:36:04.539
Feb  9 01:36:04.552: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint 02/09/23 01:36:06.559
Feb  9 01:36:06.574: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/node/init/init.go:32
Feb  9 01:36:08.581: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslicemirroring-9415" for this suite. 02/09/23 01:36:08.589
------------------------------
â€¢ [SLOW TEST] [6.125 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSliceMirroring
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:36:02.473
    Feb  9 01:36:02.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename endpointslicemirroring 02/09/23 01:36:02.474
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:02.496
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:02.501
    [BeforeEach] [sig-network] EndpointSliceMirroring
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSliceMirroring
      test/e2e/network/endpointslicemirroring.go:41
    [It] should mirror a custom Endpoints resource through create update and delete [Conformance]
      test/e2e/network/endpointslicemirroring.go:53
    STEP: mirroring a new custom Endpoint 02/09/23 01:36:02.521
    Feb  9 01:36:02.532: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
    STEP: mirroring an update to a custom Endpoint 02/09/23 01:36:04.539
    Feb  9 01:36:04.552: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
    STEP: mirroring deletion of a custom Endpoint 02/09/23 01:36:06.559
    Feb  9 01:36:06.574: INFO: Waiting for 0 EndpointSlices to exist, got 1
    [AfterEach] [sig-network] EndpointSliceMirroring
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:36:08.581: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslicemirroring-9415" for this suite. 02/09/23 01:36:08.589
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:36:08.599
Feb  9 01:36:08.599: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:36:08.6
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:08.619
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:08.624
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:36:08.628
Feb  9 01:36:08.641: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006" in namespace "downward-api-6259" to be "Succeeded or Failed"
Feb  9 01:36:08.651: INFO: Pod "downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006": Phase="Pending", Reason="", readiness=false. Elapsed: 9.735326ms
Feb  9 01:36:10.657: INFO: Pod "downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015657316s
Feb  9 01:36:12.658: INFO: Pod "downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016542671s
STEP: Saw pod success 02/09/23 01:36:12.658
Feb  9 01:36:12.658: INFO: Pod "downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006" satisfied condition "Succeeded or Failed"
Feb  9 01:36:12.664: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006 container client-container: <nil>
STEP: delete the pod 02/09/23 01:36:12.678
Feb  9 01:36:12.695: INFO: Waiting for pod downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006 to disappear
Feb  9 01:36:12.701: INFO: Pod downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Feb  9 01:36:12.701: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-6259" for this suite. 02/09/23 01:36:12.709
------------------------------
â€¢ [4.120 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:36:08.599
    Feb  9 01:36:08.599: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:36:08.6
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:08.619
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:08.624
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's memory request [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:235
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:36:08.628
    Feb  9 01:36:08.641: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006" in namespace "downward-api-6259" to be "Succeeded or Failed"
    Feb  9 01:36:08.651: INFO: Pod "downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006": Phase="Pending", Reason="", readiness=false. Elapsed: 9.735326ms
    Feb  9 01:36:10.657: INFO: Pod "downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015657316s
    Feb  9 01:36:12.658: INFO: Pod "downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016542671s
    STEP: Saw pod success 02/09/23 01:36:12.658
    Feb  9 01:36:12.658: INFO: Pod "downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006" satisfied condition "Succeeded or Failed"
    Feb  9 01:36:12.664: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006 container client-container: <nil>
    STEP: delete the pod 02/09/23 01:36:12.678
    Feb  9 01:36:12.695: INFO: Waiting for pod downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006 to disappear
    Feb  9 01:36:12.701: INFO: Pod downwardapi-volume-1a207c7a-d17c-428e-b45b-09421dff4006 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:36:12.701: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-6259" for this suite. 02/09/23 01:36:12.709
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:36:12.722
Feb  9 01:36:12.722: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:36:12.723
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:12.743
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:12.747
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191
STEP: creating service in namespace services-7563 02/09/23 01:36:12.753
STEP: creating service affinity-clusterip in namespace services-7563 02/09/23 01:36:12.753
STEP: creating replication controller affinity-clusterip in namespace services-7563 02/09/23 01:36:12.768
I0209 01:36:12.775041      20 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-7563, replica count: 3
I0209 01:36:15.826031      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Feb  9 01:36:15.837: INFO: Creating new exec pod
Feb  9 01:36:15.849: INFO: Waiting up to 5m0s for pod "execpod-affinity4spl4" in namespace "services-7563" to be "running"
Feb  9 01:36:15.854: INFO: Pod "execpod-affinity4spl4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.279014ms
Feb  9 01:36:17.860: INFO: Pod "execpod-affinity4spl4": Phase="Running", Reason="", readiness=true. Elapsed: 2.0111296s
Feb  9 01:36:17.860: INFO: Pod "execpod-affinity4spl4" satisfied condition "running"
Feb  9 01:36:18.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7563 exec execpod-affinity4spl4 -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip 80'
Feb  9 01:36:19.020: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Feb  9 01:36:19.020: INFO: stdout: ""
Feb  9 01:36:19.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7563 exec execpod-affinity4spl4 -- /bin/sh -x -c nc -v -z -w 2 10.0.231.215 80'
Feb  9 01:36:19.182: INFO: stderr: "+ nc -v -z -w 2 10.0.231.215 80\nConnection to 10.0.231.215 80 port [tcp/http] succeeded!\n"
Feb  9 01:36:19.182: INFO: stdout: ""
Feb  9 01:36:19.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7563 exec execpod-affinity4spl4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.231.215:80/ ; done'
Feb  9 01:36:19.401: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n"
Feb  9 01:36:19.401: INFO: stdout: "\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv"
Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
Feb  9 01:36:19.402: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-7563, will wait for the garbage collector to delete the pods 02/09/23 01:36:19.42
Feb  9 01:36:19.488: INFO: Deleting ReplicationController affinity-clusterip took: 10.228821ms
Feb  9 01:36:19.589: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.942177ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:36:21.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-7563" for this suite. 02/09/23 01:36:21.721
------------------------------
â€¢ [SLOW TEST] [9.008 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:36:12.722
    Feb  9 01:36:12.722: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:36:12.723
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:12.743
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:12.747
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2191
    STEP: creating service in namespace services-7563 02/09/23 01:36:12.753
    STEP: creating service affinity-clusterip in namespace services-7563 02/09/23 01:36:12.753
    STEP: creating replication controller affinity-clusterip in namespace services-7563 02/09/23 01:36:12.768
    I0209 01:36:12.775041      20 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-7563, replica count: 3
    I0209 01:36:15.826031      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Feb  9 01:36:15.837: INFO: Creating new exec pod
    Feb  9 01:36:15.849: INFO: Waiting up to 5m0s for pod "execpod-affinity4spl4" in namespace "services-7563" to be "running"
    Feb  9 01:36:15.854: INFO: Pod "execpod-affinity4spl4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.279014ms
    Feb  9 01:36:17.860: INFO: Pod "execpod-affinity4spl4": Phase="Running", Reason="", readiness=true. Elapsed: 2.0111296s
    Feb  9 01:36:17.860: INFO: Pod "execpod-affinity4spl4" satisfied condition "running"
    Feb  9 01:36:18.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7563 exec execpod-affinity4spl4 -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip 80'
    Feb  9 01:36:19.020: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
    Feb  9 01:36:19.020: INFO: stdout: ""
    Feb  9 01:36:19.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7563 exec execpod-affinity4spl4 -- /bin/sh -x -c nc -v -z -w 2 10.0.231.215 80'
    Feb  9 01:36:19.182: INFO: stderr: "+ nc -v -z -w 2 10.0.231.215 80\nConnection to 10.0.231.215 80 port [tcp/http] succeeded!\n"
    Feb  9 01:36:19.182: INFO: stdout: ""
    Feb  9 01:36:19.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7563 exec execpod-affinity4spl4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.231.215:80/ ; done'
    Feb  9 01:36:19.401: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.231.215:80/\n"
    Feb  9 01:36:19.401: INFO: stdout: "\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv\naffinity-clusterip-pf9rv"
    Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.401: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.402: INFO: Received response from host: affinity-clusterip-pf9rv
    Feb  9 01:36:19.402: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-clusterip in namespace services-7563, will wait for the garbage collector to delete the pods 02/09/23 01:36:19.42
    Feb  9 01:36:19.488: INFO: Deleting ReplicationController affinity-clusterip took: 10.228821ms
    Feb  9 01:36:19.589: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.942177ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:36:21.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-7563" for this suite. 02/09/23 01:36:21.721
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] Job
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:36:21.732
Feb  9 01:36:21.732: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename job 02/09/23 01:36:21.733
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:21.752
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:21.756
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507
STEP: Creating a job 02/09/23 01:36:21.761
STEP: Ensuring active pods == parallelism 02/09/23 01:36:21.768
STEP: Orphaning one of the Job's Pods 02/09/23 01:36:23.775
Feb  9 01:36:24.296: INFO: Successfully updated pod "adopt-release-95d22"
STEP: Checking that the Job readopts the Pod 02/09/23 01:36:24.296
Feb  9 01:36:24.296: INFO: Waiting up to 15m0s for pod "adopt-release-95d22" in namespace "job-7841" to be "adopted"
Feb  9 01:36:24.303: INFO: Pod "adopt-release-95d22": Phase="Running", Reason="", readiness=true. Elapsed: 7.050652ms
Feb  9 01:36:26.311: INFO: Pod "adopt-release-95d22": Phase="Running", Reason="", readiness=true. Elapsed: 2.014748154s
Feb  9 01:36:26.311: INFO: Pod "adopt-release-95d22" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod 02/09/23 01:36:26.311
Feb  9 01:36:26.827: INFO: Successfully updated pod "adopt-release-95d22"
STEP: Checking that the Job releases the Pod 02/09/23 01:36:26.827
Feb  9 01:36:26.828: INFO: Waiting up to 15m0s for pod "adopt-release-95d22" in namespace "job-7841" to be "released"
Feb  9 01:36:26.835: INFO: Pod "adopt-release-95d22": Phase="Running", Reason="", readiness=true. Elapsed: 6.920948ms
Feb  9 01:36:28.842: INFO: Pod "adopt-release-95d22": Phase="Running", Reason="", readiness=true. Elapsed: 2.014050523s
Feb  9 01:36:28.842: INFO: Pod "adopt-release-95d22" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Feb  9 01:36:28.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-7841" for this suite. 02/09/23 01:36:28.85
------------------------------
â€¢ [SLOW TEST] [7.129 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:36:21.732
    Feb  9 01:36:21.732: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename job 02/09/23 01:36:21.733
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:21.752
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:21.756
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should adopt matching orphans and release non-matching pods [Conformance]
      test/e2e/apps/job.go:507
    STEP: Creating a job 02/09/23 01:36:21.761
    STEP: Ensuring active pods == parallelism 02/09/23 01:36:21.768
    STEP: Orphaning one of the Job's Pods 02/09/23 01:36:23.775
    Feb  9 01:36:24.296: INFO: Successfully updated pod "adopt-release-95d22"
    STEP: Checking that the Job readopts the Pod 02/09/23 01:36:24.296
    Feb  9 01:36:24.296: INFO: Waiting up to 15m0s for pod "adopt-release-95d22" in namespace "job-7841" to be "adopted"
    Feb  9 01:36:24.303: INFO: Pod "adopt-release-95d22": Phase="Running", Reason="", readiness=true. Elapsed: 7.050652ms
    Feb  9 01:36:26.311: INFO: Pod "adopt-release-95d22": Phase="Running", Reason="", readiness=true. Elapsed: 2.014748154s
    Feb  9 01:36:26.311: INFO: Pod "adopt-release-95d22" satisfied condition "adopted"
    STEP: Removing the labels from the Job's Pod 02/09/23 01:36:26.311
    Feb  9 01:36:26.827: INFO: Successfully updated pod "adopt-release-95d22"
    STEP: Checking that the Job releases the Pod 02/09/23 01:36:26.827
    Feb  9 01:36:26.828: INFO: Waiting up to 15m0s for pod "adopt-release-95d22" in namespace "job-7841" to be "released"
    Feb  9 01:36:26.835: INFO: Pod "adopt-release-95d22": Phase="Running", Reason="", readiness=true. Elapsed: 6.920948ms
    Feb  9 01:36:28.842: INFO: Pod "adopt-release-95d22": Phase="Running", Reason="", readiness=true. Elapsed: 2.014050523s
    Feb  9 01:36:28.842: INFO: Pod "adopt-release-95d22" satisfied condition "released"
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:36:28.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-7841" for this suite. 02/09/23 01:36:28.85
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:36:28.863
Feb  9 01:36:28.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename daemonsets 02/09/23 01:36:28.863
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:28.886
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:28.89
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862
STEP: Creating simple DaemonSet "daemon-set" 02/09/23 01:36:28.93
STEP: Check that daemon pods launch on every node of the cluster. 02/09/23 01:36:28.937
Feb  9 01:36:28.948: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:36:28.948: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:36:29.964: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Feb  9 01:36:29.964: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:36:30.965: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Feb  9 01:36:30.966: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Getting /status 02/09/23 01:36:30.971
Feb  9 01:36:30.977: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status 02/09/23 01:36:30.977
Feb  9 01:36:30.993: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated 02/09/23 01:36:30.993
Feb  9 01:36:30.995: INFO: Observed &DaemonSet event: ADDED
Feb  9 01:36:30.995: INFO: Observed &DaemonSet event: MODIFIED
Feb  9 01:36:30.996: INFO: Observed &DaemonSet event: MODIFIED
Feb  9 01:36:30.996: INFO: Observed &DaemonSet event: MODIFIED
Feb  9 01:36:30.996: INFO: Observed &DaemonSet event: MODIFIED
Feb  9 01:36:30.996: INFO: Observed &DaemonSet event: MODIFIED
Feb  9 01:36:30.996: INFO: Found daemon set daemon-set in namespace daemonsets-7761 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Feb  9 01:36:30.996: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status 02/09/23 01:36:30.996
STEP: watching for the daemon set status to be patched 02/09/23 01:36:31.004
Feb  9 01:36:31.006: INFO: Observed &DaemonSet event: ADDED
Feb  9 01:36:31.006: INFO: Observed &DaemonSet event: MODIFIED
Feb  9 01:36:31.006: INFO: Observed &DaemonSet event: MODIFIED
Feb  9 01:36:31.007: INFO: Observed &DaemonSet event: MODIFIED
Feb  9 01:36:31.007: INFO: Observed &DaemonSet event: MODIFIED
Feb  9 01:36:31.007: INFO: Observed &DaemonSet event: MODIFIED
Feb  9 01:36:31.007: INFO: Observed daemon set daemon-set in namespace daemonsets-7761 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Feb  9 01:36:31.007: INFO: Observed &DaemonSet event: MODIFIED
Feb  9 01:36:31.007: INFO: Found daemon set daemon-set in namespace daemonsets-7761 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Feb  9 01:36:31.007: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 02/09/23 01:36:31.012
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7761, will wait for the garbage collector to delete the pods 02/09/23 01:36:31.012
Feb  9 01:36:31.078: INFO: Deleting DaemonSet.extensions daemon-set took: 9.911112ms
Feb  9 01:36:31.179: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.963962ms
Feb  9 01:36:33.485: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:36:33.485: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Feb  9 01:36:33.491: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35704"},"items":null}

Feb  9 01:36:33.496: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35705"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:36:33.521: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-7761" for this suite. 02/09/23 01:36:33.528
------------------------------
â€¢ [4.674 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:36:28.863
    Feb  9 01:36:28.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename daemonsets 02/09/23 01:36:28.863
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:28.886
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:28.89
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should verify changes to a daemon set status [Conformance]
      test/e2e/apps/daemon_set.go:862
    STEP: Creating simple DaemonSet "daemon-set" 02/09/23 01:36:28.93
    STEP: Check that daemon pods launch on every node of the cluster. 02/09/23 01:36:28.937
    Feb  9 01:36:28.948: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:36:28.948: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:36:29.964: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Feb  9 01:36:29.964: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:36:30.965: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Feb  9 01:36:30.966: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    STEP: Getting /status 02/09/23 01:36:30.971
    Feb  9 01:36:30.977: INFO: Daemon Set daemon-set has Conditions: []
    STEP: updating the DaemonSet Status 02/09/23 01:36:30.977
    Feb  9 01:36:30.993: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the daemon set status to be updated 02/09/23 01:36:30.993
    Feb  9 01:36:30.995: INFO: Observed &DaemonSet event: ADDED
    Feb  9 01:36:30.995: INFO: Observed &DaemonSet event: MODIFIED
    Feb  9 01:36:30.996: INFO: Observed &DaemonSet event: MODIFIED
    Feb  9 01:36:30.996: INFO: Observed &DaemonSet event: MODIFIED
    Feb  9 01:36:30.996: INFO: Observed &DaemonSet event: MODIFIED
    Feb  9 01:36:30.996: INFO: Observed &DaemonSet event: MODIFIED
    Feb  9 01:36:30.996: INFO: Found daemon set daemon-set in namespace daemonsets-7761 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Feb  9 01:36:30.996: INFO: Daemon set daemon-set has an updated status
    STEP: patching the DaemonSet Status 02/09/23 01:36:30.996
    STEP: watching for the daemon set status to be patched 02/09/23 01:36:31.004
    Feb  9 01:36:31.006: INFO: Observed &DaemonSet event: ADDED
    Feb  9 01:36:31.006: INFO: Observed &DaemonSet event: MODIFIED
    Feb  9 01:36:31.006: INFO: Observed &DaemonSet event: MODIFIED
    Feb  9 01:36:31.007: INFO: Observed &DaemonSet event: MODIFIED
    Feb  9 01:36:31.007: INFO: Observed &DaemonSet event: MODIFIED
    Feb  9 01:36:31.007: INFO: Observed &DaemonSet event: MODIFIED
    Feb  9 01:36:31.007: INFO: Observed daemon set daemon-set in namespace daemonsets-7761 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Feb  9 01:36:31.007: INFO: Observed &DaemonSet event: MODIFIED
    Feb  9 01:36:31.007: INFO: Found daemon set daemon-set in namespace daemonsets-7761 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
    Feb  9 01:36:31.007: INFO: Daemon set daemon-set has a patched status
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 02/09/23 01:36:31.012
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7761, will wait for the garbage collector to delete the pods 02/09/23 01:36:31.012
    Feb  9 01:36:31.078: INFO: Deleting DaemonSet.extensions daemon-set took: 9.911112ms
    Feb  9 01:36:31.179: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.963962ms
    Feb  9 01:36:33.485: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:36:33.485: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Feb  9 01:36:33.491: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35704"},"items":null}

    Feb  9 01:36:33.496: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35705"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:36:33.521: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-7761" for this suite. 02/09/23 01:36:33.528
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-network] EndpointSlice
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:36:33.539
Feb  9 01:36:33.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename endpointslice 02/09/23 01:36:33.539
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:33.558
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:33.563
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353
STEP: getting /apis 02/09/23 01:36:33.568
STEP: getting /apis/discovery.k8s.io 02/09/23 01:36:33.572
STEP: getting /apis/discovery.k8s.iov1 02/09/23 01:36:33.575
STEP: creating 02/09/23 01:36:33.577
STEP: getting 02/09/23 01:36:33.597
STEP: listing 02/09/23 01:36:33.603
STEP: watching 02/09/23 01:36:33.609
Feb  9 01:36:33.609: INFO: starting watch
STEP: cluster-wide listing 02/09/23 01:36:33.611
STEP: cluster-wide watching 02/09/23 01:36:33.617
Feb  9 01:36:33.617: INFO: starting watch
STEP: patching 02/09/23 01:36:33.619
STEP: updating 02/09/23 01:36:33.627
Feb  9 01:36:33.645: INFO: waiting for watch events with expected annotations
Feb  9 01:36:33.645: INFO: saw patched and updated annotations
STEP: deleting 02/09/23 01:36:33.645
STEP: deleting a collection 02/09/23 01:36:33.665
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Feb  9 01:36:33.693: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-5587" for this suite. 02/09/23 01:36:33.7
------------------------------
â€¢ [0.171 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:36:33.539
    Feb  9 01:36:33.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename endpointslice 02/09/23 01:36:33.539
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:33.558
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:33.563
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should support creating EndpointSlice API operations [Conformance]
      test/e2e/network/endpointslice.go:353
    STEP: getting /apis 02/09/23 01:36:33.568
    STEP: getting /apis/discovery.k8s.io 02/09/23 01:36:33.572
    STEP: getting /apis/discovery.k8s.iov1 02/09/23 01:36:33.575
    STEP: creating 02/09/23 01:36:33.577
    STEP: getting 02/09/23 01:36:33.597
    STEP: listing 02/09/23 01:36:33.603
    STEP: watching 02/09/23 01:36:33.609
    Feb  9 01:36:33.609: INFO: starting watch
    STEP: cluster-wide listing 02/09/23 01:36:33.611
    STEP: cluster-wide watching 02/09/23 01:36:33.617
    Feb  9 01:36:33.617: INFO: starting watch
    STEP: patching 02/09/23 01:36:33.619
    STEP: updating 02/09/23 01:36:33.627
    Feb  9 01:36:33.645: INFO: waiting for watch events with expected annotations
    Feb  9 01:36:33.645: INFO: saw patched and updated annotations
    STEP: deleting 02/09/23 01:36:33.645
    STEP: deleting a collection 02/09/23 01:36:33.665
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:36:33.693: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-5587" for this suite. 02/09/23 01:36:33.7
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:36:33.712
Feb  9 01:36:33.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename var-expansion 02/09/23 01:36:33.713
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:33.732
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:33.737
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112
STEP: Creating a pod to test substitution in volume subpath 02/09/23 01:36:33.742
Feb  9 01:36:33.756: INFO: Waiting up to 5m0s for pod "var-expansion-29f67b9d-804f-4df3-a611-69892643b753" in namespace "var-expansion-9364" to be "Succeeded or Failed"
Feb  9 01:36:33.762: INFO: Pod "var-expansion-29f67b9d-804f-4df3-a611-69892643b753": Phase="Pending", Reason="", readiness=false. Elapsed: 6.069118ms
Feb  9 01:36:35.768: INFO: Pod "var-expansion-29f67b9d-804f-4df3-a611-69892643b753": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012480526s
Feb  9 01:36:37.769: INFO: Pod "var-expansion-29f67b9d-804f-4df3-a611-69892643b753": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013054819s
STEP: Saw pod success 02/09/23 01:36:37.769
Feb  9 01:36:37.769: INFO: Pod "var-expansion-29f67b9d-804f-4df3-a611-69892643b753" satisfied condition "Succeeded or Failed"
Feb  9 01:36:37.775: INFO: Trying to get logs from node aks-nodes-15799032-vmss000001 pod var-expansion-29f67b9d-804f-4df3-a611-69892643b753 container dapi-container: <nil>
STEP: delete the pod 02/09/23 01:36:37.789
Feb  9 01:36:37.807: INFO: Waiting for pod var-expansion-29f67b9d-804f-4df3-a611-69892643b753 to disappear
Feb  9 01:36:37.812: INFO: Pod var-expansion-29f67b9d-804f-4df3-a611-69892643b753 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Feb  9 01:36:37.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-9364" for this suite. 02/09/23 01:36:37.821
------------------------------
â€¢ [4.118 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:36:33.712
    Feb  9 01:36:33.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename var-expansion 02/09/23 01:36:33.713
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:33.732
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:33.737
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a volume subpath [Conformance]
      test/e2e/common/node/expansion.go:112
    STEP: Creating a pod to test substitution in volume subpath 02/09/23 01:36:33.742
    Feb  9 01:36:33.756: INFO: Waiting up to 5m0s for pod "var-expansion-29f67b9d-804f-4df3-a611-69892643b753" in namespace "var-expansion-9364" to be "Succeeded or Failed"
    Feb  9 01:36:33.762: INFO: Pod "var-expansion-29f67b9d-804f-4df3-a611-69892643b753": Phase="Pending", Reason="", readiness=false. Elapsed: 6.069118ms
    Feb  9 01:36:35.768: INFO: Pod "var-expansion-29f67b9d-804f-4df3-a611-69892643b753": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012480526s
    Feb  9 01:36:37.769: INFO: Pod "var-expansion-29f67b9d-804f-4df3-a611-69892643b753": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013054819s
    STEP: Saw pod success 02/09/23 01:36:37.769
    Feb  9 01:36:37.769: INFO: Pod "var-expansion-29f67b9d-804f-4df3-a611-69892643b753" satisfied condition "Succeeded or Failed"
    Feb  9 01:36:37.775: INFO: Trying to get logs from node aks-nodes-15799032-vmss000001 pod var-expansion-29f67b9d-804f-4df3-a611-69892643b753 container dapi-container: <nil>
    STEP: delete the pod 02/09/23 01:36:37.789
    Feb  9 01:36:37.807: INFO: Waiting for pod var-expansion-29f67b9d-804f-4df3-a611-69892643b753 to disappear
    Feb  9 01:36:37.812: INFO: Pod var-expansion-29f67b9d-804f-4df3-a611-69892643b753 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:36:37.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-9364" for this suite. 02/09/23 01:36:37.821
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] CSIInlineVolumes
  should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131
[BeforeEach] [sig-storage] CSIInlineVolumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:36:37.831
Feb  9 01:36:37.831: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename csiinlinevolumes 02/09/23 01:36:37.831
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:37.85
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:37.854
[BeforeEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131
STEP: creating 02/09/23 01:36:37.859
STEP: getting 02/09/23 01:36:37.884
STEP: listing in namespace 02/09/23 01:36:37.89
STEP: patching 02/09/23 01:36:37.896
STEP: deleting 02/09/23 01:36:37.905
[AfterEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:36:37.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  tear down framework | framework.go:193
STEP: Destroying namespace "csiinlinevolumes-782" for this suite. 02/09/23 01:36:37.929
------------------------------
â€¢ [0.108 seconds]
[sig-storage] CSIInlineVolumes
test/e2e/storage/utils/framework.go:23
  should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIInlineVolumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:36:37.831
    Feb  9 01:36:37.831: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename csiinlinevolumes 02/09/23 01:36:37.831
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:37.85
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:37.854
    [BeforeEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CSIVolumeSource in Pod API [Conformance]
      test/e2e/storage/csi_inline.go:131
    STEP: creating 02/09/23 01:36:37.859
    STEP: getting 02/09/23 01:36:37.884
    STEP: listing in namespace 02/09/23 01:36:37.89
    STEP: patching 02/09/23 01:36:37.896
    STEP: deleting 02/09/23 01:36:37.905
    [AfterEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:36:37.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "csiinlinevolumes-782" for this suite. 02/09/23 01:36:37.929
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:36:37.941
Feb  9 01:36:37.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename daemonsets 02/09/23 01:36:37.941
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:37.963
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:37.967
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194
Feb  9 01:36:38.001: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes. 02/09/23 01:36:38.011
Feb  9 01:36:38.017: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:36:38.017: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched. 02/09/23 01:36:38.017
Feb  9 01:36:38.050: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:36:38.050: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:36:39.057: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:36:39.057: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:36:40.057: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Feb  9 01:36:40.058: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled 02/09/23 01:36:40.063
Feb  9 01:36:40.102: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:36:40.102: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate 02/09/23 01:36:40.102
Feb  9 01:36:40.121: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:36:40.121: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:36:41.128: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:36:41.128: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:36:42.127: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:36:42.127: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:36:43.127: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:36:43.127: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:36:44.128: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Feb  9 01:36:44.128: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 02/09/23 01:36:44.139
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6798, will wait for the garbage collector to delete the pods 02/09/23 01:36:44.139
Feb  9 01:36:44.204: INFO: Deleting DaemonSet.extensions daemon-set took: 9.329289ms
Feb  9 01:36:44.304: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.17853ms
Feb  9 01:36:46.611: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:36:46.611: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Feb  9 01:36:46.616: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35911"},"items":null}

Feb  9 01:36:46.621: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35911"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:36:46.661: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-6798" for this suite. 02/09/23 01:36:46.667
------------------------------
â€¢ [SLOW TEST] [8.737 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:36:37.941
    Feb  9 01:36:37.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename daemonsets 02/09/23 01:36:37.941
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:37.963
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:37.967
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should run and stop complex daemon [Conformance]
      test/e2e/apps/daemon_set.go:194
    Feb  9 01:36:38.001: INFO: Creating daemon "daemon-set" with a node selector
    STEP: Initially, daemon pods should not be running on any nodes. 02/09/23 01:36:38.011
    Feb  9 01:36:38.017: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:36:38.017: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    STEP: Change node label to blue, check that daemon pod is launched. 02/09/23 01:36:38.017
    Feb  9 01:36:38.050: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:36:38.050: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:36:39.057: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:36:39.057: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:36:40.057: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Feb  9 01:36:40.058: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
    STEP: Update the node label to green, and wait for daemons to be unscheduled 02/09/23 01:36:40.063
    Feb  9 01:36:40.102: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:36:40.102: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate 02/09/23 01:36:40.102
    Feb  9 01:36:40.121: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:36:40.121: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:36:41.128: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:36:41.128: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:36:42.127: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:36:42.127: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:36:43.127: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:36:43.127: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:36:44.128: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Feb  9 01:36:44.128: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 02/09/23 01:36:44.139
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6798, will wait for the garbage collector to delete the pods 02/09/23 01:36:44.139
    Feb  9 01:36:44.204: INFO: Deleting DaemonSet.extensions daemon-set took: 9.329289ms
    Feb  9 01:36:44.304: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.17853ms
    Feb  9 01:36:46.611: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:36:46.611: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Feb  9 01:36:46.616: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35911"},"items":null}

    Feb  9 01:36:46.621: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35911"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:36:46.661: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-6798" for this suite. 02/09/23 01:36:46.667
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:36:46.682
Feb  9 01:36:46.682: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pods 02/09/23 01:36:46.682
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:46.702
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:46.706
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344
STEP: creating the pod 02/09/23 01:36:46.71
STEP: submitting the pod to kubernetes 02/09/23 01:36:46.711
Feb  9 01:36:46.722: INFO: Waiting up to 5m0s for pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0" in namespace "pods-6990" to be "running and ready"
Feb  9 01:36:46.728: INFO: Pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0": Phase="Pending", Reason="", readiness=false. Elapsed: 5.96282ms
Feb  9 01:36:46.728: INFO: The phase of Pod pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:36:48.734: INFO: Pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0": Phase="Running", Reason="", readiness=true. Elapsed: 2.011935056s
Feb  9 01:36:48.734: INFO: The phase of Pod pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0 is Running (Ready = true)
Feb  9 01:36:48.734: INFO: Pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0" satisfied condition "running and ready"
STEP: verifying the pod is in kubernetes 02/09/23 01:36:48.74
STEP: updating the pod 02/09/23 01:36:48.746
Feb  9 01:36:49.262: INFO: Successfully updated pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0"
Feb  9 01:36:49.262: INFO: Waiting up to 5m0s for pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0" in namespace "pods-6990" to be "running"
Feb  9 01:36:49.269: INFO: Pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0": Phase="Running", Reason="", readiness=true. Elapsed: 6.613988ms
Feb  9 01:36:49.269: INFO: Pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0" satisfied condition "running"
STEP: verifying the updated pod is in kubernetes 02/09/23 01:36:49.269
Feb  9 01:36:49.275: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Feb  9 01:36:49.275: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-6990" for this suite. 02/09/23 01:36:49.285
------------------------------
â€¢ [2.614 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:36:46.682
    Feb  9 01:36:46.682: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pods 02/09/23 01:36:46.682
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:46.702
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:46.706
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should be updated [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:344
    STEP: creating the pod 02/09/23 01:36:46.71
    STEP: submitting the pod to kubernetes 02/09/23 01:36:46.711
    Feb  9 01:36:46.722: INFO: Waiting up to 5m0s for pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0" in namespace "pods-6990" to be "running and ready"
    Feb  9 01:36:46.728: INFO: Pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0": Phase="Pending", Reason="", readiness=false. Elapsed: 5.96282ms
    Feb  9 01:36:46.728: INFO: The phase of Pod pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:36:48.734: INFO: Pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0": Phase="Running", Reason="", readiness=true. Elapsed: 2.011935056s
    Feb  9 01:36:48.734: INFO: The phase of Pod pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0 is Running (Ready = true)
    Feb  9 01:36:48.734: INFO: Pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0" satisfied condition "running and ready"
    STEP: verifying the pod is in kubernetes 02/09/23 01:36:48.74
    STEP: updating the pod 02/09/23 01:36:48.746
    Feb  9 01:36:49.262: INFO: Successfully updated pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0"
    Feb  9 01:36:49.262: INFO: Waiting up to 5m0s for pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0" in namespace "pods-6990" to be "running"
    Feb  9 01:36:49.269: INFO: Pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0": Phase="Running", Reason="", readiness=true. Elapsed: 6.613988ms
    Feb  9 01:36:49.269: INFO: Pod "pod-update-610b9692-fb0d-440d-bbde-b3f78749e0a0" satisfied condition "running"
    STEP: verifying the updated pod is in kubernetes 02/09/23 01:36:49.269
    Feb  9 01:36:49.275: INFO: Pod update OK
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:36:49.275: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-6990" for this suite. 02/09/23 01:36:49.285
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet
  Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:36:49.296
Feb  9 01:36:49.296: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename replicaset 02/09/23 01:36:49.296
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:49.315
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:49.32
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154
Feb  9 01:36:49.344: INFO: Pod name sample-pod: Found 0 pods out of 1
Feb  9 01:36:54.350: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 02/09/23 01:36:54.35
STEP: Scaling up "test-rs" replicaset  02/09/23 01:36:54.351
Feb  9 01:36:54.364: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet 02/09/23 01:36:54.364
W0209 01:36:54.374563      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Feb  9 01:36:54.376: INFO: observed ReplicaSet test-rs in namespace replicaset-6501 with ReadyReplicas 1, AvailableReplicas 1
Feb  9 01:36:54.394: INFO: observed ReplicaSet test-rs in namespace replicaset-6501 with ReadyReplicas 1, AvailableReplicas 1
Feb  9 01:36:54.412: INFO: observed ReplicaSet test-rs in namespace replicaset-6501 with ReadyReplicas 1, AvailableReplicas 1
Feb  9 01:36:54.418: INFO: observed ReplicaSet test-rs in namespace replicaset-6501 with ReadyReplicas 1, AvailableReplicas 1
Feb  9 01:36:55.562: INFO: observed ReplicaSet test-rs in namespace replicaset-6501 with ReadyReplicas 2, AvailableReplicas 2
Feb  9 01:36:55.650: INFO: observed Replicaset test-rs in namespace replicaset-6501 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Feb  9 01:36:55.650: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-6501" for this suite. 02/09/23 01:36:55.659
------------------------------
â€¢ [SLOW TEST] [6.372 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:36:49.296
    Feb  9 01:36:49.296: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename replicaset 02/09/23 01:36:49.296
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:49.315
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:49.32
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] Replace and Patch tests [Conformance]
      test/e2e/apps/replica_set.go:154
    Feb  9 01:36:49.344: INFO: Pod name sample-pod: Found 0 pods out of 1
    Feb  9 01:36:54.350: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 02/09/23 01:36:54.35
    STEP: Scaling up "test-rs" replicaset  02/09/23 01:36:54.351
    Feb  9 01:36:54.364: INFO: Updating replica set "test-rs"
    STEP: patching the ReplicaSet 02/09/23 01:36:54.364
    W0209 01:36:54.374563      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Feb  9 01:36:54.376: INFO: observed ReplicaSet test-rs in namespace replicaset-6501 with ReadyReplicas 1, AvailableReplicas 1
    Feb  9 01:36:54.394: INFO: observed ReplicaSet test-rs in namespace replicaset-6501 with ReadyReplicas 1, AvailableReplicas 1
    Feb  9 01:36:54.412: INFO: observed ReplicaSet test-rs in namespace replicaset-6501 with ReadyReplicas 1, AvailableReplicas 1
    Feb  9 01:36:54.418: INFO: observed ReplicaSet test-rs in namespace replicaset-6501 with ReadyReplicas 1, AvailableReplicas 1
    Feb  9 01:36:55.562: INFO: observed ReplicaSet test-rs in namespace replicaset-6501 with ReadyReplicas 2, AvailableReplicas 2
    Feb  9 01:36:55.650: INFO: observed Replicaset test-rs in namespace replicaset-6501 with ReadyReplicas 3 found true
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:36:55.650: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-6501" for this suite. 02/09/23 01:36:55.659
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] Pods
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:36:55.669
Feb  9 01:36:55.669: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pods 02/09/23 01:36:55.669
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:55.689
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:55.694
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536
Feb  9 01:36:55.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: creating the pod 02/09/23 01:36:55.699
STEP: submitting the pod to kubernetes 02/09/23 01:36:55.699
Feb  9 01:36:55.711: INFO: Waiting up to 5m0s for pod "pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7" in namespace "pods-9608" to be "running and ready"
Feb  9 01:36:55.717: INFO: Pod "pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7": Phase="Pending", Reason="", readiness=false. Elapsed: 5.728117ms
Feb  9 01:36:55.717: INFO: The phase of Pod pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:36:57.724: INFO: Pod "pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7": Phase="Running", Reason="", readiness=true. Elapsed: 2.013157811s
Feb  9 01:36:57.724: INFO: The phase of Pod pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7 is Running (Ready = true)
Feb  9 01:36:57.724: INFO: Pod "pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7" satisfied condition "running and ready"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Feb  9 01:36:57.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-9608" for this suite. 02/09/23 01:36:57.843
------------------------------
â€¢ [2.183 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:36:55.669
    Feb  9 01:36:55.669: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pods 02/09/23 01:36:55.669
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:55.689
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:55.694
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should support remote command execution over websockets [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:536
    Feb  9 01:36:55.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: creating the pod 02/09/23 01:36:55.699
    STEP: submitting the pod to kubernetes 02/09/23 01:36:55.699
    Feb  9 01:36:55.711: INFO: Waiting up to 5m0s for pod "pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7" in namespace "pods-9608" to be "running and ready"
    Feb  9 01:36:55.717: INFO: Pod "pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7": Phase="Pending", Reason="", readiness=false. Elapsed: 5.728117ms
    Feb  9 01:36:55.717: INFO: The phase of Pod pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:36:57.724: INFO: Pod "pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7": Phase="Running", Reason="", readiness=true. Elapsed: 2.013157811s
    Feb  9 01:36:57.724: INFO: The phase of Pod pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7 is Running (Ready = true)
    Feb  9 01:36:57.724: INFO: Pod "pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7" satisfied condition "running and ready"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:36:57.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-9608" for this suite. 02/09/23 01:36:57.843
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:36:57.857
Feb  9 01:36:57.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename sched-pred 02/09/23 01:36:57.858
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:57.879
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:57.884
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Feb  9 01:36:57.888: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Feb  9 01:36:57.900: INFO: Waiting for terminating namespaces to be deleted...
Feb  9 01:36:57.906: INFO: 
Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000000 before test
Feb  9 01:36:57.918: INFO: adopt-release-95d22 from job-7841 started at 2023-02-09 01:36:21 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.918: INFO: 	Container c ready: true, restart count 0
Feb  9 01:36:57.918: INFO: adopt-release-t5nrs from job-7841 started at 2023-02-09 01:36:27 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.918: INFO: 	Container c ready: true, restart count 0
Feb  9 01:36:57.918: INFO: adopt-release-x8px6 from job-7841 started at 2023-02-09 01:36:21 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.918: INFO: 	Container c ready: true, restart count 0
Feb  9 01:36:57.918: INFO: azure-ip-masq-agent-26zqc from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.918: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Feb  9 01:36:57.918: INFO: cloud-node-manager-khkh5 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.918: INFO: 	Container cloud-node-manager ready: true, restart count 0
Feb  9 01:36:57.918: INFO: csi-azuredisk-node-f98f4 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
Feb  9 01:36:57.918: INFO: 	Container azuredisk ready: true, restart count 0
Feb  9 01:36:57.918: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:36:57.918: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:36:57.919: INFO: csi-azurefile-node-kd8lb from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
Feb  9 01:36:57.919: INFO: 	Container azurefile ready: true, restart count 0
Feb  9 01:36:57.919: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:36:57.919: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:36:57.919: INFO: kube-proxy-hznqr from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.919: INFO: 	Container kube-proxy ready: true, restart count 0
Feb  9 01:36:57.919: INFO: pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7 from pods-9608 started at 2023-02-09 01:36:55 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.919: INFO: 	Container main ready: true, restart count 0
Feb  9 01:36:57.919: INFO: test-rs-2vm2l from replicaset-6501 started at 2023-02-09 01:36:54 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.919: INFO: 	Container httpd ready: true, restart count 0
Feb  9 01:36:57.919: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-ccznv from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:36:57.919: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:36:57.919: INFO: 	Container systemd-logs ready: true, restart count 0
Feb  9 01:36:57.919: INFO: 
Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000001 before test
Feb  9 01:36:57.929: INFO: pod-csi-inline-volumes from csiinlinevolumes-782 started at 2023-02-09 01:36:37 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.929: INFO: 	Container pod-csi-inline-volumes ready: false, restart count 0
Feb  9 01:36:57.929: INFO: azure-ip-masq-agent-9z68l from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.929: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Feb  9 01:36:57.929: INFO: cloud-node-manager-5mlpp from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.929: INFO: 	Container cloud-node-manager ready: true, restart count 0
Feb  9 01:36:57.929: INFO: coredns-78669d9946-89dxb from kube-system started at 2023-02-09 00:22:29 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.929: INFO: 	Container coredns ready: true, restart count 0
Feb  9 01:36:57.929: INFO: coredns-autoscaler-5b5c4f5b4f-9tnqp from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.929: INFO: 	Container autoscaler ready: true, restart count 0
Feb  9 01:36:57.929: INFO: csi-azuredisk-node-6tghn from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
Feb  9 01:36:57.929: INFO: 	Container azuredisk ready: true, restart count 0
Feb  9 01:36:57.929: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:36:57.929: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:36:57.929: INFO: csi-azurefile-node-cgcmb from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
Feb  9 01:36:57.929: INFO: 	Container azurefile ready: true, restart count 0
Feb  9 01:36:57.929: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:36:57.929: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:36:57.929: INFO: konnectivity-agent-6dd87768b6-5jd76 from kube-system started at 2023-02-09 00:41:56 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.929: INFO: 	Container konnectivity-agent ready: true, restart count 0
Feb  9 01:36:57.929: INFO: kube-proxy-tkwb2 from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.929: INFO: 	Container kube-proxy ready: true, restart count 0
Feb  9 01:36:57.929: INFO: metrics-server-5f6654d4df-mqppz from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
Feb  9 01:36:57.929: INFO: 	Container metrics-server ready: true, restart count 0
Feb  9 01:36:57.929: INFO: 	Container metrics-server-vpa ready: true, restart count 0
Feb  9 01:36:57.929: INFO: test-rs-rrg6x from replicaset-6501 started at 2023-02-09 01:36:49 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.929: INFO: 	Container httpd ready: true, restart count 0
Feb  9 01:36:57.929: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-hktzz from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:36:57.929: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:36:57.929: INFO: 	Container systemd-logs ready: true, restart count 0
Feb  9 01:36:57.929: INFO: 
Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000002 before test
Feb  9 01:36:57.939: INFO: azure-ip-masq-agent-g85z9 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.939: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Feb  9 01:36:57.939: INFO: cloud-node-manager-2mppx from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.939: INFO: 	Container cloud-node-manager ready: true, restart count 0
Feb  9 01:36:57.939: INFO: coredns-78669d9946-nmkmm from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.939: INFO: 	Container coredns ready: true, restart count 0
Feb  9 01:36:57.939: INFO: csi-azuredisk-node-drwdg from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
Feb  9 01:36:57.939: INFO: 	Container azuredisk ready: true, restart count 0
Feb  9 01:36:57.939: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:36:57.939: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:36:57.939: INFO: csi-azurefile-node-j6wh8 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
Feb  9 01:36:57.939: INFO: 	Container azurefile ready: true, restart count 0
Feb  9 01:36:57.939: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:36:57.939: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:36:57.939: INFO: konnectivity-agent-6dd87768b6-4wblz from kube-system started at 2023-02-09 00:41:54 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.939: INFO: 	Container konnectivity-agent ready: true, restart count 0
Feb  9 01:36:57.939: INFO: kube-proxy-k97mw from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.939: INFO: 	Container kube-proxy ready: true, restart count 0
Feb  9 01:36:57.939: INFO: metrics-server-5f6654d4df-cp5km from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
Feb  9 01:36:57.939: INFO: 	Container metrics-server ready: true, restart count 0
Feb  9 01:36:57.939: INFO: 	Container metrics-server-vpa ready: true, restart count 0
Feb  9 01:36:57.939: INFO: test-rs-vg5nn from replicaset-6501 started at 2023-02-09 01:36:54 +0000 UTC (2 container statuses recorded)
Feb  9 01:36:57.939: INFO: 	Container httpd ready: true, restart count 0
Feb  9 01:36:57.939: INFO: 	Container test-rs ready: true, restart count 0
Feb  9 01:36:57.939: INFO: sonobuoy from sonobuoy started at 2023-02-09 00:26:49 +0000 UTC (1 container statuses recorded)
Feb  9 01:36:57.939: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Feb  9 01:36:57.939: INFO: sonobuoy-e2e-job-2cb73ed04ae14ea3 from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:36:57.939: INFO: 	Container e2e ready: true, restart count 0
Feb  9 01:36:57.939: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:36:57.939: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-snxjd from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:36:57.939: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:36:57.939: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331
STEP: verifying the node has the label node aks-nodes-15799032-vmss000000 02/09/23 01:36:57.966
STEP: verifying the node has the label node aks-nodes-15799032-vmss000001 02/09/23 01:36:58.001
STEP: verifying the node has the label node aks-nodes-15799032-vmss000002 02/09/23 01:36:58.066
Feb  9 01:36:58.103: INFO: Pod pod-csi-inline-volumes requesting resource cpu=0m on Node aks-nodes-15799032-vmss000001
Feb  9 01:36:58.103: INFO: Pod adopt-release-95d22 requesting resource cpu=0m on Node aks-nodes-15799032-vmss000000
Feb  9 01:36:58.104: INFO: Pod adopt-release-t5nrs requesting resource cpu=0m on Node aks-nodes-15799032-vmss000000
Feb  9 01:36:58.104: INFO: Pod adopt-release-x8px6 requesting resource cpu=0m on Node aks-nodes-15799032-vmss000000
Feb  9 01:36:58.104: INFO: Pod azure-ip-masq-agent-26zqc requesting resource cpu=100m on Node aks-nodes-15799032-vmss000000
Feb  9 01:36:58.104: INFO: Pod azure-ip-masq-agent-9z68l requesting resource cpu=100m on Node aks-nodes-15799032-vmss000001
Feb  9 01:36:58.104: INFO: Pod azure-ip-masq-agent-g85z9 requesting resource cpu=100m on Node aks-nodes-15799032-vmss000002
Feb  9 01:36:58.104: INFO: Pod cloud-node-manager-2mppx requesting resource cpu=50m on Node aks-nodes-15799032-vmss000002
Feb  9 01:36:58.104: INFO: Pod cloud-node-manager-5mlpp requesting resource cpu=50m on Node aks-nodes-15799032-vmss000001
Feb  9 01:36:58.104: INFO: Pod cloud-node-manager-khkh5 requesting resource cpu=50m on Node aks-nodes-15799032-vmss000000
Feb  9 01:36:58.104: INFO: Pod coredns-78669d9946-89dxb requesting resource cpu=100m on Node aks-nodes-15799032-vmss000001
Feb  9 01:36:58.104: INFO: Pod coredns-78669d9946-nmkmm requesting resource cpu=100m on Node aks-nodes-15799032-vmss000002
Feb  9 01:36:58.104: INFO: Pod coredns-autoscaler-5b5c4f5b4f-9tnqp requesting resource cpu=20m on Node aks-nodes-15799032-vmss000001
Feb  9 01:36:58.104: INFO: Pod csi-azuredisk-node-6tghn requesting resource cpu=30m on Node aks-nodes-15799032-vmss000001
Feb  9 01:36:58.104: INFO: Pod csi-azuredisk-node-drwdg requesting resource cpu=30m on Node aks-nodes-15799032-vmss000002
Feb  9 01:36:58.105: INFO: Pod csi-azuredisk-node-f98f4 requesting resource cpu=30m on Node aks-nodes-15799032-vmss000000
Feb  9 01:36:58.105: INFO: Pod csi-azurefile-node-cgcmb requesting resource cpu=30m on Node aks-nodes-15799032-vmss000001
Feb  9 01:36:58.105: INFO: Pod csi-azurefile-node-j6wh8 requesting resource cpu=30m on Node aks-nodes-15799032-vmss000002
Feb  9 01:36:58.105: INFO: Pod csi-azurefile-node-kd8lb requesting resource cpu=30m on Node aks-nodes-15799032-vmss000000
Feb  9 01:36:58.105: INFO: Pod konnectivity-agent-6dd87768b6-4wblz requesting resource cpu=20m on Node aks-nodes-15799032-vmss000002
Feb  9 01:36:58.105: INFO: Pod konnectivity-agent-6dd87768b6-5jd76 requesting resource cpu=20m on Node aks-nodes-15799032-vmss000001
Feb  9 01:36:58.105: INFO: Pod kube-proxy-hznqr requesting resource cpu=100m on Node aks-nodes-15799032-vmss000000
Feb  9 01:36:58.105: INFO: Pod kube-proxy-k97mw requesting resource cpu=100m on Node aks-nodes-15799032-vmss000002
Feb  9 01:36:58.105: INFO: Pod kube-proxy-tkwb2 requesting resource cpu=100m on Node aks-nodes-15799032-vmss000001
Feb  9 01:36:58.105: INFO: Pod metrics-server-5f6654d4df-cp5km requesting resource cpu=51m on Node aks-nodes-15799032-vmss000002
Feb  9 01:36:58.105: INFO: Pod metrics-server-5f6654d4df-mqppz requesting resource cpu=51m on Node aks-nodes-15799032-vmss000001
Feb  9 01:36:58.105: INFO: Pod pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7 requesting resource cpu=0m on Node aks-nodes-15799032-vmss000000
Feb  9 01:36:58.105: INFO: Pod test-rs-2vm2l requesting resource cpu=0m on Node aks-nodes-15799032-vmss000000
Feb  9 01:36:58.105: INFO: Pod test-rs-rrg6x requesting resource cpu=0m on Node aks-nodes-15799032-vmss000001
Feb  9 01:36:58.105: INFO: Pod test-rs-vg5nn requesting resource cpu=0m on Node aks-nodes-15799032-vmss000002
Feb  9 01:36:58.105: INFO: Pod sonobuoy requesting resource cpu=0m on Node aks-nodes-15799032-vmss000002
Feb  9 01:36:58.105: INFO: Pod sonobuoy-e2e-job-2cb73ed04ae14ea3 requesting resource cpu=0m on Node aks-nodes-15799032-vmss000002
Feb  9 01:36:58.105: INFO: Pod sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-ccznv requesting resource cpu=0m on Node aks-nodes-15799032-vmss000000
Feb  9 01:36:58.105: INFO: Pod sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-hktzz requesting resource cpu=0m on Node aks-nodes-15799032-vmss000001
Feb  9 01:36:58.105: INFO: Pod sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-snxjd requesting resource cpu=0m on Node aks-nodes-15799032-vmss000002
STEP: Starting Pods to consume most of the cluster CPU. 02/09/23 01:36:58.105
Feb  9 01:36:58.105: INFO: Creating a pod which consumes cpu=1113m on Node aks-nodes-15799032-vmss000000
Feb  9 01:36:58.118: INFO: Creating a pod which consumes cpu=979m on Node aks-nodes-15799032-vmss000001
Feb  9 01:36:58.126: INFO: Creating a pod which consumes cpu=993m on Node aks-nodes-15799032-vmss000002
Feb  9 01:36:58.134: INFO: Waiting up to 5m0s for pod "filler-pod-95440b32-c989-493a-8235-d1d5dfbad044" in namespace "sched-pred-5751" to be "running"
Feb  9 01:36:58.140: INFO: Pod "filler-pod-95440b32-c989-493a-8235-d1d5dfbad044": Phase="Pending", Reason="", readiness=false. Elapsed: 5.568003ms
Feb  9 01:37:00.147: INFO: Pod "filler-pod-95440b32-c989-493a-8235-d1d5dfbad044": Phase="Running", Reason="", readiness=true. Elapsed: 2.012634851s
Feb  9 01:37:00.147: INFO: Pod "filler-pod-95440b32-c989-493a-8235-d1d5dfbad044" satisfied condition "running"
Feb  9 01:37:00.147: INFO: Waiting up to 5m0s for pod "filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7" in namespace "sched-pred-5751" to be "running"
Feb  9 01:37:00.153: INFO: Pod "filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7": Phase="Running", Reason="", readiness=true. Elapsed: 5.698906ms
Feb  9 01:37:00.153: INFO: Pod "filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7" satisfied condition "running"
Feb  9 01:37:00.153: INFO: Waiting up to 5m0s for pod "filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a" in namespace "sched-pred-5751" to be "running"
Feb  9 01:37:00.158: INFO: Pod "filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a": Phase="Running", Reason="", readiness=true. Elapsed: 5.463901ms
Feb  9 01:37:00.158: INFO: Pod "filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a" satisfied condition "running"
STEP: Creating another pod that requires unavailable amount of CPU. 02/09/23 01:37:00.158
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a.174204309aeca465], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5751/filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a to aks-nodes-15799032-vmss000002] 02/09/23 01:37:00.164
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a.17420430b5ac067b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 02/09/23 01:37:00.165
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a.17420430b68d31bd], Reason = [Created], Message = [Created container filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a] 02/09/23 01:37:00.165
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a.17420430bae8b706], Reason = [Started], Message = [Started container filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a] 02/09/23 01:37:00.165
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-95440b32-c989-493a-8235-d1d5dfbad044.1742043099f5caf1], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5751/filler-pod-95440b32-c989-493a-8235-d1d5dfbad044 to aks-nodes-15799032-vmss000000] 02/09/23 01:37:00.165
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-95440b32-c989-493a-8235-d1d5dfbad044.17420430b4ab7b4c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 02/09/23 01:37:00.165
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-95440b32-c989-493a-8235-d1d5dfbad044.17420430b51dc088], Reason = [Created], Message = [Created container filler-pod-95440b32-c989-493a-8235-d1d5dfbad044] 02/09/23 01:37:00.165
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-95440b32-c989-493a-8235-d1d5dfbad044.17420430b9e57a53], Reason = [Started], Message = [Started container filler-pod-95440b32-c989-493a-8235-d1d5dfbad044] 02/09/23 01:37:00.165
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7.174204309a6421fe], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5751/filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7 to aks-nodes-15799032-vmss000001] 02/09/23 01:37:00.165
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7.17420430b4b31007], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 02/09/23 01:37:00.165
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7.17420430b51eedd1], Reason = [Created], Message = [Created container filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7] 02/09/23 01:37:00.166
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7.17420430b9b2e0a0], Reason = [Started], Message = [Started container filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7] 02/09/23 01:37:00.166
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.174204311433c6ec], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod..] 02/09/23 01:37:00.179
STEP: removing the label node off the node aks-nodes-15799032-vmss000002 02/09/23 01:37:01.183
STEP: verifying the node doesn't have the label node 02/09/23 01:37:01.218
STEP: removing the label node off the node aks-nodes-15799032-vmss000000 02/09/23 01:37:01.227
STEP: verifying the node doesn't have the label node 02/09/23 01:37:01.256
STEP: removing the label node off the node aks-nodes-15799032-vmss000001 02/09/23 01:37:01.271
STEP: verifying the node doesn't have the label node 02/09/23 01:37:01.305
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:37:01.312: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-5751" for this suite. 02/09/23 01:37:01.319
------------------------------
â€¢ [3.472 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:36:57.857
    Feb  9 01:36:57.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename sched-pred 02/09/23 01:36:57.858
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:36:57.879
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:36:57.884
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Feb  9 01:36:57.888: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Feb  9 01:36:57.900: INFO: Waiting for terminating namespaces to be deleted...
    Feb  9 01:36:57.906: INFO: 
    Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000000 before test
    Feb  9 01:36:57.918: INFO: adopt-release-95d22 from job-7841 started at 2023-02-09 01:36:21 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.918: INFO: 	Container c ready: true, restart count 0
    Feb  9 01:36:57.918: INFO: adopt-release-t5nrs from job-7841 started at 2023-02-09 01:36:27 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.918: INFO: 	Container c ready: true, restart count 0
    Feb  9 01:36:57.918: INFO: adopt-release-x8px6 from job-7841 started at 2023-02-09 01:36:21 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.918: INFO: 	Container c ready: true, restart count 0
    Feb  9 01:36:57.918: INFO: azure-ip-masq-agent-26zqc from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.918: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
    Feb  9 01:36:57.918: INFO: cloud-node-manager-khkh5 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.918: INFO: 	Container cloud-node-manager ready: true, restart count 0
    Feb  9 01:36:57.918: INFO: csi-azuredisk-node-f98f4 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
    Feb  9 01:36:57.918: INFO: 	Container azuredisk ready: true, restart count 0
    Feb  9 01:36:57.918: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:36:57.918: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:36:57.919: INFO: csi-azurefile-node-kd8lb from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
    Feb  9 01:36:57.919: INFO: 	Container azurefile ready: true, restart count 0
    Feb  9 01:36:57.919: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:36:57.919: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:36:57.919: INFO: kube-proxy-hznqr from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.919: INFO: 	Container kube-proxy ready: true, restart count 0
    Feb  9 01:36:57.919: INFO: pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7 from pods-9608 started at 2023-02-09 01:36:55 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.919: INFO: 	Container main ready: true, restart count 0
    Feb  9 01:36:57.919: INFO: test-rs-2vm2l from replicaset-6501 started at 2023-02-09 01:36:54 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.919: INFO: 	Container httpd ready: true, restart count 0
    Feb  9 01:36:57.919: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-ccznv from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:36:57.919: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:36:57.919: INFO: 	Container systemd-logs ready: true, restart count 0
    Feb  9 01:36:57.919: INFO: 
    Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000001 before test
    Feb  9 01:36:57.929: INFO: pod-csi-inline-volumes from csiinlinevolumes-782 started at 2023-02-09 01:36:37 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.929: INFO: 	Container pod-csi-inline-volumes ready: false, restart count 0
    Feb  9 01:36:57.929: INFO: azure-ip-masq-agent-9z68l from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.929: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: cloud-node-manager-5mlpp from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.929: INFO: 	Container cloud-node-manager ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: coredns-78669d9946-89dxb from kube-system started at 2023-02-09 00:22:29 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.929: INFO: 	Container coredns ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: coredns-autoscaler-5b5c4f5b4f-9tnqp from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.929: INFO: 	Container autoscaler ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: csi-azuredisk-node-6tghn from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
    Feb  9 01:36:57.929: INFO: 	Container azuredisk ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: csi-azurefile-node-cgcmb from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
    Feb  9 01:36:57.929: INFO: 	Container azurefile ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: konnectivity-agent-6dd87768b6-5jd76 from kube-system started at 2023-02-09 00:41:56 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.929: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: kube-proxy-tkwb2 from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.929: INFO: 	Container kube-proxy ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: metrics-server-5f6654d4df-mqppz from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
    Feb  9 01:36:57.929: INFO: 	Container metrics-server ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: 	Container metrics-server-vpa ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: test-rs-rrg6x from replicaset-6501 started at 2023-02-09 01:36:49 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.929: INFO: 	Container httpd ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-hktzz from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:36:57.929: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: 	Container systemd-logs ready: true, restart count 0
    Feb  9 01:36:57.929: INFO: 
    Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000002 before test
    Feb  9 01:36:57.939: INFO: azure-ip-masq-agent-g85z9 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.939: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: cloud-node-manager-2mppx from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.939: INFO: 	Container cloud-node-manager ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: coredns-78669d9946-nmkmm from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.939: INFO: 	Container coredns ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: csi-azuredisk-node-drwdg from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
    Feb  9 01:36:57.939: INFO: 	Container azuredisk ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: csi-azurefile-node-j6wh8 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
    Feb  9 01:36:57.939: INFO: 	Container azurefile ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: konnectivity-agent-6dd87768b6-4wblz from kube-system started at 2023-02-09 00:41:54 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.939: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: kube-proxy-k97mw from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.939: INFO: 	Container kube-proxy ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: metrics-server-5f6654d4df-cp5km from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
    Feb  9 01:36:57.939: INFO: 	Container metrics-server ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: 	Container metrics-server-vpa ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: test-rs-vg5nn from replicaset-6501 started at 2023-02-09 01:36:54 +0000 UTC (2 container statuses recorded)
    Feb  9 01:36:57.939: INFO: 	Container httpd ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: 	Container test-rs ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: sonobuoy from sonobuoy started at 2023-02-09 00:26:49 +0000 UTC (1 container statuses recorded)
    Feb  9 01:36:57.939: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: sonobuoy-e2e-job-2cb73ed04ae14ea3 from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:36:57.939: INFO: 	Container e2e ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-snxjd from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:36:57.939: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:36:57.939: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates resource limits of pods that are allowed to run  [Conformance]
      test/e2e/scheduling/predicates.go:331
    STEP: verifying the node has the label node aks-nodes-15799032-vmss000000 02/09/23 01:36:57.966
    STEP: verifying the node has the label node aks-nodes-15799032-vmss000001 02/09/23 01:36:58.001
    STEP: verifying the node has the label node aks-nodes-15799032-vmss000002 02/09/23 01:36:58.066
    Feb  9 01:36:58.103: INFO: Pod pod-csi-inline-volumes requesting resource cpu=0m on Node aks-nodes-15799032-vmss000001
    Feb  9 01:36:58.103: INFO: Pod adopt-release-95d22 requesting resource cpu=0m on Node aks-nodes-15799032-vmss000000
    Feb  9 01:36:58.104: INFO: Pod adopt-release-t5nrs requesting resource cpu=0m on Node aks-nodes-15799032-vmss000000
    Feb  9 01:36:58.104: INFO: Pod adopt-release-x8px6 requesting resource cpu=0m on Node aks-nodes-15799032-vmss000000
    Feb  9 01:36:58.104: INFO: Pod azure-ip-masq-agent-26zqc requesting resource cpu=100m on Node aks-nodes-15799032-vmss000000
    Feb  9 01:36:58.104: INFO: Pod azure-ip-masq-agent-9z68l requesting resource cpu=100m on Node aks-nodes-15799032-vmss000001
    Feb  9 01:36:58.104: INFO: Pod azure-ip-masq-agent-g85z9 requesting resource cpu=100m on Node aks-nodes-15799032-vmss000002
    Feb  9 01:36:58.104: INFO: Pod cloud-node-manager-2mppx requesting resource cpu=50m on Node aks-nodes-15799032-vmss000002
    Feb  9 01:36:58.104: INFO: Pod cloud-node-manager-5mlpp requesting resource cpu=50m on Node aks-nodes-15799032-vmss000001
    Feb  9 01:36:58.104: INFO: Pod cloud-node-manager-khkh5 requesting resource cpu=50m on Node aks-nodes-15799032-vmss000000
    Feb  9 01:36:58.104: INFO: Pod coredns-78669d9946-89dxb requesting resource cpu=100m on Node aks-nodes-15799032-vmss000001
    Feb  9 01:36:58.104: INFO: Pod coredns-78669d9946-nmkmm requesting resource cpu=100m on Node aks-nodes-15799032-vmss000002
    Feb  9 01:36:58.104: INFO: Pod coredns-autoscaler-5b5c4f5b4f-9tnqp requesting resource cpu=20m on Node aks-nodes-15799032-vmss000001
    Feb  9 01:36:58.104: INFO: Pod csi-azuredisk-node-6tghn requesting resource cpu=30m on Node aks-nodes-15799032-vmss000001
    Feb  9 01:36:58.104: INFO: Pod csi-azuredisk-node-drwdg requesting resource cpu=30m on Node aks-nodes-15799032-vmss000002
    Feb  9 01:36:58.105: INFO: Pod csi-azuredisk-node-f98f4 requesting resource cpu=30m on Node aks-nodes-15799032-vmss000000
    Feb  9 01:36:58.105: INFO: Pod csi-azurefile-node-cgcmb requesting resource cpu=30m on Node aks-nodes-15799032-vmss000001
    Feb  9 01:36:58.105: INFO: Pod csi-azurefile-node-j6wh8 requesting resource cpu=30m on Node aks-nodes-15799032-vmss000002
    Feb  9 01:36:58.105: INFO: Pod csi-azurefile-node-kd8lb requesting resource cpu=30m on Node aks-nodes-15799032-vmss000000
    Feb  9 01:36:58.105: INFO: Pod konnectivity-agent-6dd87768b6-4wblz requesting resource cpu=20m on Node aks-nodes-15799032-vmss000002
    Feb  9 01:36:58.105: INFO: Pod konnectivity-agent-6dd87768b6-5jd76 requesting resource cpu=20m on Node aks-nodes-15799032-vmss000001
    Feb  9 01:36:58.105: INFO: Pod kube-proxy-hznqr requesting resource cpu=100m on Node aks-nodes-15799032-vmss000000
    Feb  9 01:36:58.105: INFO: Pod kube-proxy-k97mw requesting resource cpu=100m on Node aks-nodes-15799032-vmss000002
    Feb  9 01:36:58.105: INFO: Pod kube-proxy-tkwb2 requesting resource cpu=100m on Node aks-nodes-15799032-vmss000001
    Feb  9 01:36:58.105: INFO: Pod metrics-server-5f6654d4df-cp5km requesting resource cpu=51m on Node aks-nodes-15799032-vmss000002
    Feb  9 01:36:58.105: INFO: Pod metrics-server-5f6654d4df-mqppz requesting resource cpu=51m on Node aks-nodes-15799032-vmss000001
    Feb  9 01:36:58.105: INFO: Pod pod-exec-websocket-5a20d7ca-4b26-458e-85aa-01cdc23b55c7 requesting resource cpu=0m on Node aks-nodes-15799032-vmss000000
    Feb  9 01:36:58.105: INFO: Pod test-rs-2vm2l requesting resource cpu=0m on Node aks-nodes-15799032-vmss000000
    Feb  9 01:36:58.105: INFO: Pod test-rs-rrg6x requesting resource cpu=0m on Node aks-nodes-15799032-vmss000001
    Feb  9 01:36:58.105: INFO: Pod test-rs-vg5nn requesting resource cpu=0m on Node aks-nodes-15799032-vmss000002
    Feb  9 01:36:58.105: INFO: Pod sonobuoy requesting resource cpu=0m on Node aks-nodes-15799032-vmss000002
    Feb  9 01:36:58.105: INFO: Pod sonobuoy-e2e-job-2cb73ed04ae14ea3 requesting resource cpu=0m on Node aks-nodes-15799032-vmss000002
    Feb  9 01:36:58.105: INFO: Pod sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-ccznv requesting resource cpu=0m on Node aks-nodes-15799032-vmss000000
    Feb  9 01:36:58.105: INFO: Pod sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-hktzz requesting resource cpu=0m on Node aks-nodes-15799032-vmss000001
    Feb  9 01:36:58.105: INFO: Pod sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-snxjd requesting resource cpu=0m on Node aks-nodes-15799032-vmss000002
    STEP: Starting Pods to consume most of the cluster CPU. 02/09/23 01:36:58.105
    Feb  9 01:36:58.105: INFO: Creating a pod which consumes cpu=1113m on Node aks-nodes-15799032-vmss000000
    Feb  9 01:36:58.118: INFO: Creating a pod which consumes cpu=979m on Node aks-nodes-15799032-vmss000001
    Feb  9 01:36:58.126: INFO: Creating a pod which consumes cpu=993m on Node aks-nodes-15799032-vmss000002
    Feb  9 01:36:58.134: INFO: Waiting up to 5m0s for pod "filler-pod-95440b32-c989-493a-8235-d1d5dfbad044" in namespace "sched-pred-5751" to be "running"
    Feb  9 01:36:58.140: INFO: Pod "filler-pod-95440b32-c989-493a-8235-d1d5dfbad044": Phase="Pending", Reason="", readiness=false. Elapsed: 5.568003ms
    Feb  9 01:37:00.147: INFO: Pod "filler-pod-95440b32-c989-493a-8235-d1d5dfbad044": Phase="Running", Reason="", readiness=true. Elapsed: 2.012634851s
    Feb  9 01:37:00.147: INFO: Pod "filler-pod-95440b32-c989-493a-8235-d1d5dfbad044" satisfied condition "running"
    Feb  9 01:37:00.147: INFO: Waiting up to 5m0s for pod "filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7" in namespace "sched-pred-5751" to be "running"
    Feb  9 01:37:00.153: INFO: Pod "filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7": Phase="Running", Reason="", readiness=true. Elapsed: 5.698906ms
    Feb  9 01:37:00.153: INFO: Pod "filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7" satisfied condition "running"
    Feb  9 01:37:00.153: INFO: Waiting up to 5m0s for pod "filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a" in namespace "sched-pred-5751" to be "running"
    Feb  9 01:37:00.158: INFO: Pod "filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a": Phase="Running", Reason="", readiness=true. Elapsed: 5.463901ms
    Feb  9 01:37:00.158: INFO: Pod "filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a" satisfied condition "running"
    STEP: Creating another pod that requires unavailable amount of CPU. 02/09/23 01:37:00.158
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a.174204309aeca465], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5751/filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a to aks-nodes-15799032-vmss000002] 02/09/23 01:37:00.164
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a.17420430b5ac067b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 02/09/23 01:37:00.165
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a.17420430b68d31bd], Reason = [Created], Message = [Created container filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a] 02/09/23 01:37:00.165
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a.17420430bae8b706], Reason = [Started], Message = [Started container filler-pod-8f689c81-d378-41f7-a513-7d03aa75cd6a] 02/09/23 01:37:00.165
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-95440b32-c989-493a-8235-d1d5dfbad044.1742043099f5caf1], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5751/filler-pod-95440b32-c989-493a-8235-d1d5dfbad044 to aks-nodes-15799032-vmss000000] 02/09/23 01:37:00.165
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-95440b32-c989-493a-8235-d1d5dfbad044.17420430b4ab7b4c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 02/09/23 01:37:00.165
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-95440b32-c989-493a-8235-d1d5dfbad044.17420430b51dc088], Reason = [Created], Message = [Created container filler-pod-95440b32-c989-493a-8235-d1d5dfbad044] 02/09/23 01:37:00.165
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-95440b32-c989-493a-8235-d1d5dfbad044.17420430b9e57a53], Reason = [Started], Message = [Started container filler-pod-95440b32-c989-493a-8235-d1d5dfbad044] 02/09/23 01:37:00.165
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7.174204309a6421fe], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5751/filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7 to aks-nodes-15799032-vmss000001] 02/09/23 01:37:00.165
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7.17420430b4b31007], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 02/09/23 01:37:00.165
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7.17420430b51eedd1], Reason = [Created], Message = [Created container filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7] 02/09/23 01:37:00.166
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7.17420430b9b2e0a0], Reason = [Started], Message = [Started container filler-pod-c0ab3c30-335d-4f36-9513-ca45fe1720a7] 02/09/23 01:37:00.166
    STEP: Considering event: 
    Type = [Warning], Name = [additional-pod.174204311433c6ec], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod..] 02/09/23 01:37:00.179
    STEP: removing the label node off the node aks-nodes-15799032-vmss000002 02/09/23 01:37:01.183
    STEP: verifying the node doesn't have the label node 02/09/23 01:37:01.218
    STEP: removing the label node off the node aks-nodes-15799032-vmss000000 02/09/23 01:37:01.227
    STEP: verifying the node doesn't have the label node 02/09/23 01:37:01.256
    STEP: removing the label node off the node aks-nodes-15799032-vmss000001 02/09/23 01:37:01.271
    STEP: verifying the node doesn't have the label node 02/09/23 01:37:01.305
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:37:01.312: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-5751" for this suite. 02/09/23 01:37:01.319
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:37:01.33
Feb  9 01:37:01.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-probe 02/09/23 01:37:01.331
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:37:01.35
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:37:01.354
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215
STEP: Creating pod test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e in namespace container-probe-1761 02/09/23 01:37:01.358
Feb  9 01:37:01.371: INFO: Waiting up to 5m0s for pod "test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e" in namespace "container-probe-1761" to be "not pending"
Feb  9 01:37:01.377: INFO: Pod "test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.795708ms
Feb  9 01:37:03.385: INFO: Pod "test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e": Phase="Running", Reason="", readiness=true. Elapsed: 2.013388265s
Feb  9 01:37:03.385: INFO: Pod "test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e" satisfied condition "not pending"
Feb  9 01:37:03.385: INFO: Started pod test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e in namespace container-probe-1761
STEP: checking the pod's current state and verifying that restartCount is present 02/09/23 01:37:03.385
Feb  9 01:37:03.390: INFO: Initial restart count of pod test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e is 0
STEP: deleting the pod 02/09/23 01:41:04.221
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Feb  9 01:41:04.246: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-1761" for this suite. 02/09/23 01:41:04.255
------------------------------
â€¢ [SLOW TEST] [242.934 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:37:01.33
    Feb  9 01:37:01.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-probe 02/09/23 01:37:01.331
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:37:01.35
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:37:01.354
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:215
    STEP: Creating pod test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e in namespace container-probe-1761 02/09/23 01:37:01.358
    Feb  9 01:37:01.371: INFO: Waiting up to 5m0s for pod "test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e" in namespace "container-probe-1761" to be "not pending"
    Feb  9 01:37:01.377: INFO: Pod "test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.795708ms
    Feb  9 01:37:03.385: INFO: Pod "test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e": Phase="Running", Reason="", readiness=true. Elapsed: 2.013388265s
    Feb  9 01:37:03.385: INFO: Pod "test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e" satisfied condition "not pending"
    Feb  9 01:37:03.385: INFO: Started pod test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e in namespace container-probe-1761
    STEP: checking the pod's current state and verifying that restartCount is present 02/09/23 01:37:03.385
    Feb  9 01:37:03.390: INFO: Initial restart count of pod test-webserver-57cc8743-1d35-4b0e-9195-5128f16e5d3e is 0
    STEP: deleting the pod 02/09/23 01:41:04.221
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:41:04.246: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-1761" for this suite. 02/09/23 01:41:04.255
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop
  should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168
[BeforeEach] [sig-node] PreStop
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:41:04.265
Feb  9 01:41:04.265: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename prestop 02/09/23 01:41:04.266
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:04.285
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:04.29
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168
STEP: Creating server pod server in namespace prestop-4525 02/09/23 01:41:04.295
STEP: Waiting for pods to come up. 02/09/23 01:41:04.31
Feb  9 01:41:04.310: INFO: Waiting up to 5m0s for pod "server" in namespace "prestop-4525" to be "running"
Feb  9 01:41:04.316: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 5.468552ms
Feb  9 01:41:06.323: INFO: Pod "server": Phase="Running", Reason="", readiness=true. Elapsed: 2.012211279s
Feb  9 01:41:06.323: INFO: Pod "server" satisfied condition "running"
STEP: Creating tester pod tester in namespace prestop-4525 02/09/23 01:41:06.328
Feb  9 01:41:06.336: INFO: Waiting up to 5m0s for pod "tester" in namespace "prestop-4525" to be "running"
Feb  9 01:41:06.342: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 5.583853ms
Feb  9 01:41:08.348: INFO: Pod "tester": Phase="Running", Reason="", readiness=true. Elapsed: 2.011858581s
Feb  9 01:41:08.348: INFO: Pod "tester" satisfied condition "running"
STEP: Deleting pre-stop pod 02/09/23 01:41:08.348
Feb  9 01:41:13.373: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod 02/09/23 01:41:13.373
[AfterEach] [sig-node] PreStop
  test/e2e/framework/node/init/init.go:32
Feb  9 01:41:13.387: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PreStop
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PreStop
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PreStop
  tear down framework | framework.go:193
STEP: Destroying namespace "prestop-4525" for this suite. 02/09/23 01:41:13.395
------------------------------
â€¢ [SLOW TEST] [9.139 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PreStop
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:41:04.265
    Feb  9 01:41:04.265: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename prestop 02/09/23 01:41:04.266
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:04.285
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:04.29
    [BeforeEach] [sig-node] PreStop
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] PreStop
      test/e2e/node/pre_stop.go:159
    [It] should call prestop when killing a pod  [Conformance]
      test/e2e/node/pre_stop.go:168
    STEP: Creating server pod server in namespace prestop-4525 02/09/23 01:41:04.295
    STEP: Waiting for pods to come up. 02/09/23 01:41:04.31
    Feb  9 01:41:04.310: INFO: Waiting up to 5m0s for pod "server" in namespace "prestop-4525" to be "running"
    Feb  9 01:41:04.316: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 5.468552ms
    Feb  9 01:41:06.323: INFO: Pod "server": Phase="Running", Reason="", readiness=true. Elapsed: 2.012211279s
    Feb  9 01:41:06.323: INFO: Pod "server" satisfied condition "running"
    STEP: Creating tester pod tester in namespace prestop-4525 02/09/23 01:41:06.328
    Feb  9 01:41:06.336: INFO: Waiting up to 5m0s for pod "tester" in namespace "prestop-4525" to be "running"
    Feb  9 01:41:06.342: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 5.583853ms
    Feb  9 01:41:08.348: INFO: Pod "tester": Phase="Running", Reason="", readiness=true. Elapsed: 2.011858581s
    Feb  9 01:41:08.348: INFO: Pod "tester" satisfied condition "running"
    STEP: Deleting pre-stop pod 02/09/23 01:41:08.348
    Feb  9 01:41:13.373: INFO: Saw: {
    	"Hostname": "server",
    	"Sent": null,
    	"Received": {
    		"prestop": 1
    	},
    	"Errors": null,
    	"Log": [
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
    	],
    	"StillContactingPeers": true
    }
    STEP: Deleting the server pod 02/09/23 01:41:13.373
    [AfterEach] [sig-node] PreStop
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:41:13.387: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PreStop
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PreStop
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PreStop
      tear down framework | framework.go:193
    STEP: Destroying namespace "prestop-4525" for this suite. 02/09/23 01:41:13.395
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:41:13.407
Feb  9 01:41:13.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:41:13.407
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:13.427
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:13.431
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89
STEP: Creating configMap with name projected-configmap-test-volume-map-cb589f63-5ad5-4048-8419-0e40a394f376 02/09/23 01:41:13.435
STEP: Creating a pod to test consume configMaps 02/09/23 01:41:13.442
Feb  9 01:41:13.454: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9" in namespace "projected-2594" to be "Succeeded or Failed"
Feb  9 01:41:13.460: INFO: Pod "pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9": Phase="Pending", Reason="", readiness=false. Elapsed: 6.386761ms
Feb  9 01:41:15.466: INFO: Pod "pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01283273s
Feb  9 01:41:17.467: INFO: Pod "pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013674744s
STEP: Saw pod success 02/09/23 01:41:17.467
Feb  9 01:41:17.467: INFO: Pod "pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9" satisfied condition "Succeeded or Failed"
Feb  9 01:41:17.476: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9 container agnhost-container: <nil>
STEP: delete the pod 02/09/23 01:41:17.49
Feb  9 01:41:17.507: INFO: Waiting for pod pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9 to disappear
Feb  9 01:41:17.512: INFO: Pod pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:41:17.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-2594" for this suite. 02/09/23 01:41:17.52
------------------------------
â€¢ [4.123 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:41:13.407
    Feb  9 01:41:13.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:41:13.407
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:13.427
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:13.431
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:89
    STEP: Creating configMap with name projected-configmap-test-volume-map-cb589f63-5ad5-4048-8419-0e40a394f376 02/09/23 01:41:13.435
    STEP: Creating a pod to test consume configMaps 02/09/23 01:41:13.442
    Feb  9 01:41:13.454: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9" in namespace "projected-2594" to be "Succeeded or Failed"
    Feb  9 01:41:13.460: INFO: Pod "pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9": Phase="Pending", Reason="", readiness=false. Elapsed: 6.386761ms
    Feb  9 01:41:15.466: INFO: Pod "pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01283273s
    Feb  9 01:41:17.467: INFO: Pod "pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013674744s
    STEP: Saw pod success 02/09/23 01:41:17.467
    Feb  9 01:41:17.467: INFO: Pod "pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9" satisfied condition "Succeeded or Failed"
    Feb  9 01:41:17.476: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9 container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 01:41:17.49
    Feb  9 01:41:17.507: INFO: Waiting for pod pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9 to disappear
    Feb  9 01:41:17.512: INFO: Pod pod-projected-configmaps-b9e689d8-40c0-4718-a323-6714c9d5c2f9 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:41:17.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-2594" for this suite. 02/09/23 01:41:17.52
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:41:17.532
Feb  9 01:41:17.532: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 01:41:17.532
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:17.55
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:17.555
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 01:41:17.575
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:41:17.936
STEP: Deploying the webhook pod 02/09/23 01:41:17.944
STEP: Wait for the deployment to be ready 02/09/23 01:41:17.958
Feb  9 01:41:17.972: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 01:41:19.99
STEP: Verifying the service has paired with the endpoint 02/09/23 01:41:20.005
Feb  9 01:41:21.005: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341
Feb  9 01:41:21.011: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4179-crds.webhook.example.com via the AdmissionRegistration API 02/09/23 01:41:21.526
STEP: Creating a custom resource that should be mutated by the webhook 02/09/23 01:41:21.549
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:41:24.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-3399" for this suite. 02/09/23 01:41:24.228
STEP: Destroying namespace "webhook-3399-markers" for this suite. 02/09/23 01:41:24.237
------------------------------
â€¢ [SLOW TEST] [6.715 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:41:17.532
    Feb  9 01:41:17.532: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 01:41:17.532
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:17.55
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:17.555
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 01:41:17.575
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:41:17.936
    STEP: Deploying the webhook pod 02/09/23 01:41:17.944
    STEP: Wait for the deployment to be ready 02/09/23 01:41:17.958
    Feb  9 01:41:17.972: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 01:41:19.99
    STEP: Verifying the service has paired with the endpoint 02/09/23 01:41:20.005
    Feb  9 01:41:21.005: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource with pruning [Conformance]
      test/e2e/apimachinery/webhook.go:341
    Feb  9 01:41:21.011: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4179-crds.webhook.example.com via the AdmissionRegistration API 02/09/23 01:41:21.526
    STEP: Creating a custom resource that should be mutated by the webhook 02/09/23 01:41:21.549
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:41:24.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-3399" for this suite. 02/09/23 01:41:24.228
    STEP: Destroying namespace "webhook-3399-markers" for this suite. 02/09/23 01:41:24.237
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:41:24.25
Feb  9 01:41:24.250: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 01:41:24.251
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:24.271
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:24.275
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177
STEP: Creating a pod to test emptydir 0666 on node default medium 02/09/23 01:41:24.28
Feb  9 01:41:24.292: INFO: Waiting up to 5m0s for pod "pod-404f65e0-4b36-413c-96e9-417596205a21" in namespace "emptydir-8839" to be "Succeeded or Failed"
Feb  9 01:41:24.298: INFO: Pod "pod-404f65e0-4b36-413c-96e9-417596205a21": Phase="Pending", Reason="", readiness=false. Elapsed: 5.906854ms
Feb  9 01:41:26.305: INFO: Pod "pod-404f65e0-4b36-413c-96e9-417596205a21": Phase="Succeeded", Reason="", readiness=false. Elapsed: 2.012762575s
STEP: Saw pod success 02/09/23 01:41:26.305
Feb  9 01:41:26.305: INFO: Pod "pod-404f65e0-4b36-413c-96e9-417596205a21" satisfied condition "Succeeded or Failed"
Feb  9 01:41:26.310: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-404f65e0-4b36-413c-96e9-417596205a21 container test-container: <nil>
STEP: delete the pod 02/09/23 01:41:26.323
Feb  9 01:41:26.340: INFO: Waiting for pod pod-404f65e0-4b36-413c-96e9-417596205a21 to disappear
Feb  9 01:41:26.345: INFO: Pod pod-404f65e0-4b36-413c-96e9-417596205a21 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:41:26.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-8839" for this suite. 02/09/23 01:41:26.353
------------------------------
â€¢ [2.112 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:41:24.25
    Feb  9 01:41:24.250: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 01:41:24.251
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:24.271
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:24.275
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:177
    STEP: Creating a pod to test emptydir 0666 on node default medium 02/09/23 01:41:24.28
    Feb  9 01:41:24.292: INFO: Waiting up to 5m0s for pod "pod-404f65e0-4b36-413c-96e9-417596205a21" in namespace "emptydir-8839" to be "Succeeded or Failed"
    Feb  9 01:41:24.298: INFO: Pod "pod-404f65e0-4b36-413c-96e9-417596205a21": Phase="Pending", Reason="", readiness=false. Elapsed: 5.906854ms
    Feb  9 01:41:26.305: INFO: Pod "pod-404f65e0-4b36-413c-96e9-417596205a21": Phase="Succeeded", Reason="", readiness=false. Elapsed: 2.012762575s
    STEP: Saw pod success 02/09/23 01:41:26.305
    Feb  9 01:41:26.305: INFO: Pod "pod-404f65e0-4b36-413c-96e9-417596205a21" satisfied condition "Succeeded or Failed"
    Feb  9 01:41:26.310: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-404f65e0-4b36-413c-96e9-417596205a21 container test-container: <nil>
    STEP: delete the pod 02/09/23 01:41:26.323
    Feb  9 01:41:26.340: INFO: Waiting for pod pod-404f65e0-4b36-413c-96e9-417596205a21 to disappear
    Feb  9 01:41:26.345: INFO: Pod pod-404f65e0-4b36-413c-96e9-417596205a21 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:41:26.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-8839" for this suite. 02/09/23 01:41:26.353
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:41:26.364
Feb  9 01:41:26.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:41:26.365
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:26.383
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:26.387
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:41:26.392
Feb  9 01:41:26.405: INFO: Waiting up to 5m0s for pod "downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5" in namespace "projected-9738" to be "Succeeded or Failed"
Feb  9 01:41:26.410: INFO: Pod "downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5": Phase="Pending", Reason="", readiness=false. Elapsed: 5.709053ms
Feb  9 01:41:28.418: INFO: Pod "downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013108478s
Feb  9 01:41:30.417: INFO: Pod "downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012436153s
STEP: Saw pod success 02/09/23 01:41:30.417
Feb  9 01:41:30.417: INFO: Pod "downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5" satisfied condition "Succeeded or Failed"
Feb  9 01:41:30.423: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5 container client-container: <nil>
STEP: delete the pod 02/09/23 01:41:30.435
Feb  9 01:41:30.453: INFO: Waiting for pod downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5 to disappear
Feb  9 01:41:30.458: INFO: Pod downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Feb  9 01:41:30.458: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-9738" for this suite. 02/09/23 01:41:30.466
------------------------------
â€¢ [4.113 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:41:26.364
    Feb  9 01:41:26.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:41:26.365
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:26.383
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:26.387
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:68
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:41:26.392
    Feb  9 01:41:26.405: INFO: Waiting up to 5m0s for pod "downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5" in namespace "projected-9738" to be "Succeeded or Failed"
    Feb  9 01:41:26.410: INFO: Pod "downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5": Phase="Pending", Reason="", readiness=false. Elapsed: 5.709053ms
    Feb  9 01:41:28.418: INFO: Pod "downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013108478s
    Feb  9 01:41:30.417: INFO: Pod "downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012436153s
    STEP: Saw pod success 02/09/23 01:41:30.417
    Feb  9 01:41:30.417: INFO: Pod "downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5" satisfied condition "Succeeded or Failed"
    Feb  9 01:41:30.423: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5 container client-container: <nil>
    STEP: delete the pod 02/09/23 01:41:30.435
    Feb  9 01:41:30.453: INFO: Waiting for pod downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5 to disappear
    Feb  9 01:41:30.458: INFO: Pod downwardapi-volume-e8ad2a2b-9e27-4fc0-8410-207fc695e8a5 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:41:30.458: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-9738" for this suite. 02/09/23 01:41:30.466
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/node/pods.go:161
[BeforeEach] [sig-node] Pods Extended
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:41:30.479
Feb  9 01:41:30.479: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pods 02/09/23 01:41:30.48
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:30.499
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:30.503
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/node/pods.go:161
STEP: creating the pod 02/09/23 01:41:30.508
STEP: submitting the pod to kubernetes 02/09/23 01:41:30.508
STEP: verifying QOS class is set on the pod 02/09/23 01:41:30.521
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/node/init/init.go:32
Feb  9 01:41:30.528: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods Extended
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods Extended
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods Extended
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-7991" for this suite. 02/09/23 01:41:30.535
------------------------------
â€¢ [0.065 seconds]
[sig-node] Pods Extended
test/e2e/node/framework.go:23
  Pods Set QOS Class
  test/e2e/node/pods.go:150
    should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
    test/e2e/node/pods.go:161

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods Extended
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:41:30.479
    Feb  9 01:41:30.479: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pods 02/09/23 01:41:30.48
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:30.499
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:30.503
    [BeforeEach] [sig-node] Pods Extended
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Pods Set QOS Class
      test/e2e/node/pods.go:152
    [It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
      test/e2e/node/pods.go:161
    STEP: creating the pod 02/09/23 01:41:30.508
    STEP: submitting the pod to kubernetes 02/09/23 01:41:30.508
    STEP: verifying QOS class is set on the pod 02/09/23 01:41:30.521
    [AfterEach] [sig-node] Pods Extended
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:41:30.528: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods Extended
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods Extended
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods Extended
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-7991" for this suite. 02/09/23 01:41:30.535
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/scheduling/preemption.go:616
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:41:30.546
Feb  9 01:41:30.546: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename sched-preemption 02/09/23 01:41:30.547
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:30.565
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:30.569
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:96
Feb  9 01:41:30.592: INFO: Waiting up to 1m0s for all nodes to be ready
Feb  9 01:42:30.638: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:42:30.644
Feb  9 01:42:30.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename sched-preemption-path 02/09/23 01:42:30.645
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:42:30.666
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:42:30.67
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:569
STEP: Finding an available node 02/09/23 01:42:30.674
STEP: Trying to launch a pod without a label to get a node which can launch it. 02/09/23 01:42:30.674
Feb  9 01:42:30.686: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-preemption-path-5783" to be "running"
Feb  9 01:42:30.693: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 6.366147ms
Feb  9 01:42:32.700: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.013336293s
Feb  9 01:42:32.700: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 02/09/23 01:42:32.705
Feb  9 01:42:32.721: INFO: found a healthy node: aks-nodes-15799032-vmss000000
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/scheduling/preemption.go:616
Feb  9 01:42:40.824: INFO: pods created so far: [1 1 1]
Feb  9 01:42:40.824: INFO: length of pods created so far: 3
Feb  9 01:42:42.840: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/node/init/init.go:32
Feb  9 01:42:49.841: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:543
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:42:49.898: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] PreemptionExecutionPath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] PreemptionExecutionPath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] PreemptionExecutionPath
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-path-5783" for this suite. 02/09/23 01:42:49.973
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-702" for this suite. 02/09/23 01:42:49.985
------------------------------
â€¢ [SLOW TEST] [79.449 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:531
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/scheduling/preemption.go:616

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:41:30.546
    Feb  9 01:41:30.546: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename sched-preemption 02/09/23 01:41:30.547
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:41:30.565
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:41:30.569
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:96
    Feb  9 01:41:30.592: INFO: Waiting up to 1m0s for all nodes to be ready
    Feb  9 01:42:30.638: INFO: Waiting for terminating namespaces to be deleted...
    [BeforeEach] PreemptionExecutionPath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:42:30.644
    Feb  9 01:42:30.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename sched-preemption-path 02/09/23 01:42:30.645
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:42:30.666
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:42:30.67
    [BeforeEach] PreemptionExecutionPath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] PreemptionExecutionPath
      test/e2e/scheduling/preemption.go:569
    STEP: Finding an available node 02/09/23 01:42:30.674
    STEP: Trying to launch a pod without a label to get a node which can launch it. 02/09/23 01:42:30.674
    Feb  9 01:42:30.686: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-preemption-path-5783" to be "running"
    Feb  9 01:42:30.693: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 6.366147ms
    Feb  9 01:42:32.700: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.013336293s
    Feb  9 01:42:32.700: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 02/09/23 01:42:32.705
    Feb  9 01:42:32.721: INFO: found a healthy node: aks-nodes-15799032-vmss000000
    [It] runs ReplicaSets to verify preemption running path [Conformance]
      test/e2e/scheduling/preemption.go:616
    Feb  9 01:42:40.824: INFO: pods created so far: [1 1 1]
    Feb  9 01:42:40.824: INFO: length of pods created so far: 3
    Feb  9 01:42:42.840: INFO: pods created so far: [2 2 1]
    [AfterEach] PreemptionExecutionPath
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:42:49.841: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] PreemptionExecutionPath
      test/e2e/scheduling/preemption.go:543
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:42:49.898: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] PreemptionExecutionPath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] PreemptionExecutionPath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] PreemptionExecutionPath
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-path-5783" for this suite. 02/09/23 01:42:49.973
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-702" for this suite. 02/09/23 01:42:49.985
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController
  should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:42:49.996
Feb  9 01:42:49.996: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename replication-controller 02/09/23 01:42:49.997
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:42:50.016
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:42:50.021
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402
STEP: Creating ReplicationController "e2e-rc-swp7x" 02/09/23 01:42:50.025
Feb  9 01:42:50.033: INFO: Get Replication Controller "e2e-rc-swp7x" to confirm replicas
Feb  9 01:42:51.039: INFO: Get Replication Controller "e2e-rc-swp7x" to confirm replicas
Feb  9 01:42:51.046: INFO: Found 1 replicas for "e2e-rc-swp7x" replication controller
STEP: Getting scale subresource for ReplicationController "e2e-rc-swp7x" 02/09/23 01:42:51.046
STEP: Updating a scale subresource 02/09/23 01:42:51.051
STEP: Verifying replicas where modified for replication controller "e2e-rc-swp7x" 02/09/23 01:42:51.058
Feb  9 01:42:51.058: INFO: Get Replication Controller "e2e-rc-swp7x" to confirm replicas
Feb  9 01:42:52.064: INFO: Get Replication Controller "e2e-rc-swp7x" to confirm replicas
Feb  9 01:42:52.070: INFO: Found 2 replicas for "e2e-rc-swp7x" replication controller
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Feb  9 01:42:52.070: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-8700" for this suite. 02/09/23 01:42:52.079
------------------------------
â€¢ [2.092 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:42:49.996
    Feb  9 01:42:49.996: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename replication-controller 02/09/23 01:42:49.997
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:42:50.016
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:42:50.021
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should get and update a ReplicationController scale [Conformance]
      test/e2e/apps/rc.go:402
    STEP: Creating ReplicationController "e2e-rc-swp7x" 02/09/23 01:42:50.025
    Feb  9 01:42:50.033: INFO: Get Replication Controller "e2e-rc-swp7x" to confirm replicas
    Feb  9 01:42:51.039: INFO: Get Replication Controller "e2e-rc-swp7x" to confirm replicas
    Feb  9 01:42:51.046: INFO: Found 1 replicas for "e2e-rc-swp7x" replication controller
    STEP: Getting scale subresource for ReplicationController "e2e-rc-swp7x" 02/09/23 01:42:51.046
    STEP: Updating a scale subresource 02/09/23 01:42:51.051
    STEP: Verifying replicas where modified for replication controller "e2e-rc-swp7x" 02/09/23 01:42:51.058
    Feb  9 01:42:51.058: INFO: Get Replication Controller "e2e-rc-swp7x" to confirm replicas
    Feb  9 01:42:52.064: INFO: Get Replication Controller "e2e-rc-swp7x" to confirm replicas
    Feb  9 01:42:52.070: INFO: Found 2 replicas for "e2e-rc-swp7x" replication controller
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:42:52.070: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-8700" for this suite. 02/09/23 01:42:52.079
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122
[BeforeEach] [sig-api-machinery] Discovery
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:42:52.09
Feb  9 01:42:52.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename discovery 02/09/23 01:42:52.091
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:42:52.11
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:42:52.114
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert 02/09/23 01:42:52.121
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122
Feb  9 01:42:52.573: INFO: Checking APIGroup: apiregistration.k8s.io
Feb  9 01:42:52.575: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Feb  9 01:42:52.575: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Feb  9 01:42:52.575: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Feb  9 01:42:52.575: INFO: Checking APIGroup: apps
Feb  9 01:42:52.577: INFO: PreferredVersion.GroupVersion: apps/v1
Feb  9 01:42:52.577: INFO: Versions found [{apps/v1 v1}]
Feb  9 01:42:52.577: INFO: apps/v1 matches apps/v1
Feb  9 01:42:52.577: INFO: Checking APIGroup: events.k8s.io
Feb  9 01:42:52.579: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Feb  9 01:42:52.579: INFO: Versions found [{events.k8s.io/v1 v1}]
Feb  9 01:42:52.579: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Feb  9 01:42:52.579: INFO: Checking APIGroup: authentication.k8s.io
Feb  9 01:42:52.581: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Feb  9 01:42:52.581: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Feb  9 01:42:52.581: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Feb  9 01:42:52.581: INFO: Checking APIGroup: authorization.k8s.io
Feb  9 01:42:52.582: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Feb  9 01:42:52.582: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Feb  9 01:42:52.583: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Feb  9 01:42:52.583: INFO: Checking APIGroup: autoscaling
Feb  9 01:42:52.584: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Feb  9 01:42:52.584: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
Feb  9 01:42:52.584: INFO: autoscaling/v2 matches autoscaling/v2
Feb  9 01:42:52.584: INFO: Checking APIGroup: batch
Feb  9 01:42:52.586: INFO: PreferredVersion.GroupVersion: batch/v1
Feb  9 01:42:52.586: INFO: Versions found [{batch/v1 v1}]
Feb  9 01:42:52.586: INFO: batch/v1 matches batch/v1
Feb  9 01:42:52.586: INFO: Checking APIGroup: certificates.k8s.io
Feb  9 01:42:52.588: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Feb  9 01:42:52.588: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Feb  9 01:42:52.588: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Feb  9 01:42:52.588: INFO: Checking APIGroup: networking.k8s.io
Feb  9 01:42:52.590: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Feb  9 01:42:52.590: INFO: Versions found [{networking.k8s.io/v1 v1}]
Feb  9 01:42:52.590: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Feb  9 01:42:52.590: INFO: Checking APIGroup: policy
Feb  9 01:42:52.592: INFO: PreferredVersion.GroupVersion: policy/v1
Feb  9 01:42:52.592: INFO: Versions found [{policy/v1 v1}]
Feb  9 01:42:52.592: INFO: policy/v1 matches policy/v1
Feb  9 01:42:52.592: INFO: Checking APIGroup: rbac.authorization.k8s.io
Feb  9 01:42:52.593: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Feb  9 01:42:52.593: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Feb  9 01:42:52.593: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Feb  9 01:42:52.593: INFO: Checking APIGroup: storage.k8s.io
Feb  9 01:42:52.595: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Feb  9 01:42:52.595: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Feb  9 01:42:52.595: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Feb  9 01:42:52.595: INFO: Checking APIGroup: admissionregistration.k8s.io
Feb  9 01:42:52.597: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Feb  9 01:42:52.597: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Feb  9 01:42:52.597: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Feb  9 01:42:52.597: INFO: Checking APIGroup: apiextensions.k8s.io
Feb  9 01:42:52.599: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Feb  9 01:42:52.599: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Feb  9 01:42:52.599: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Feb  9 01:42:52.599: INFO: Checking APIGroup: scheduling.k8s.io
Feb  9 01:42:52.601: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Feb  9 01:42:52.601: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Feb  9 01:42:52.601: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Feb  9 01:42:52.601: INFO: Checking APIGroup: coordination.k8s.io
Feb  9 01:42:52.603: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Feb  9 01:42:52.603: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Feb  9 01:42:52.603: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Feb  9 01:42:52.603: INFO: Checking APIGroup: node.k8s.io
Feb  9 01:42:52.604: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Feb  9 01:42:52.604: INFO: Versions found [{node.k8s.io/v1 v1}]
Feb  9 01:42:52.604: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Feb  9 01:42:52.604: INFO: Checking APIGroup: discovery.k8s.io
Feb  9 01:42:52.606: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Feb  9 01:42:52.606: INFO: Versions found [{discovery.k8s.io/v1 v1}]
Feb  9 01:42:52.606: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Feb  9 01:42:52.606: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Feb  9 01:42:52.608: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
Feb  9 01:42:52.608: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
Feb  9 01:42:52.608: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
Feb  9 01:42:52.608: INFO: Checking APIGroup: snapshot.storage.k8s.io
Feb  9 01:42:52.610: INFO: PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
Feb  9 01:42:52.610: INFO: Versions found [{snapshot.storage.k8s.io/v1 v1} {snapshot.storage.k8s.io/v1beta1 v1beta1}]
Feb  9 01:42:52.610: INFO: snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
Feb  9 01:42:52.610: INFO: Checking APIGroup: metrics.k8s.io
Feb  9 01:42:52.612: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
Feb  9 01:42:52.612: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
Feb  9 01:42:52.612: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/node/init/init.go:32
Feb  9 01:42:52.612: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  tear down framework | framework.go:193
STEP: Destroying namespace "discovery-5964" for this suite. 02/09/23 01:42:52.621
------------------------------
â€¢ [0.542 seconds]
[sig-api-machinery] Discovery
test/e2e/apimachinery/framework.go:23
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Discovery
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:42:52.09
    Feb  9 01:42:52.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename discovery 02/09/23 01:42:52.091
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:42:52.11
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:42:52.114
    [BeforeEach] [sig-api-machinery] Discovery
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Discovery
      test/e2e/apimachinery/discovery.go:43
    STEP: Setting up server cert 02/09/23 01:42:52.121
    [It] should validate PreferredVersion for each APIGroup [Conformance]
      test/e2e/apimachinery/discovery.go:122
    Feb  9 01:42:52.573: INFO: Checking APIGroup: apiregistration.k8s.io
    Feb  9 01:42:52.575: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
    Feb  9 01:42:52.575: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
    Feb  9 01:42:52.575: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
    Feb  9 01:42:52.575: INFO: Checking APIGroup: apps
    Feb  9 01:42:52.577: INFO: PreferredVersion.GroupVersion: apps/v1
    Feb  9 01:42:52.577: INFO: Versions found [{apps/v1 v1}]
    Feb  9 01:42:52.577: INFO: apps/v1 matches apps/v1
    Feb  9 01:42:52.577: INFO: Checking APIGroup: events.k8s.io
    Feb  9 01:42:52.579: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
    Feb  9 01:42:52.579: INFO: Versions found [{events.k8s.io/v1 v1}]
    Feb  9 01:42:52.579: INFO: events.k8s.io/v1 matches events.k8s.io/v1
    Feb  9 01:42:52.579: INFO: Checking APIGroup: authentication.k8s.io
    Feb  9 01:42:52.581: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
    Feb  9 01:42:52.581: INFO: Versions found [{authentication.k8s.io/v1 v1}]
    Feb  9 01:42:52.581: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
    Feb  9 01:42:52.581: INFO: Checking APIGroup: authorization.k8s.io
    Feb  9 01:42:52.582: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
    Feb  9 01:42:52.582: INFO: Versions found [{authorization.k8s.io/v1 v1}]
    Feb  9 01:42:52.583: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
    Feb  9 01:42:52.583: INFO: Checking APIGroup: autoscaling
    Feb  9 01:42:52.584: INFO: PreferredVersion.GroupVersion: autoscaling/v2
    Feb  9 01:42:52.584: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
    Feb  9 01:42:52.584: INFO: autoscaling/v2 matches autoscaling/v2
    Feb  9 01:42:52.584: INFO: Checking APIGroup: batch
    Feb  9 01:42:52.586: INFO: PreferredVersion.GroupVersion: batch/v1
    Feb  9 01:42:52.586: INFO: Versions found [{batch/v1 v1}]
    Feb  9 01:42:52.586: INFO: batch/v1 matches batch/v1
    Feb  9 01:42:52.586: INFO: Checking APIGroup: certificates.k8s.io
    Feb  9 01:42:52.588: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
    Feb  9 01:42:52.588: INFO: Versions found [{certificates.k8s.io/v1 v1}]
    Feb  9 01:42:52.588: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
    Feb  9 01:42:52.588: INFO: Checking APIGroup: networking.k8s.io
    Feb  9 01:42:52.590: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
    Feb  9 01:42:52.590: INFO: Versions found [{networking.k8s.io/v1 v1}]
    Feb  9 01:42:52.590: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
    Feb  9 01:42:52.590: INFO: Checking APIGroup: policy
    Feb  9 01:42:52.592: INFO: PreferredVersion.GroupVersion: policy/v1
    Feb  9 01:42:52.592: INFO: Versions found [{policy/v1 v1}]
    Feb  9 01:42:52.592: INFO: policy/v1 matches policy/v1
    Feb  9 01:42:52.592: INFO: Checking APIGroup: rbac.authorization.k8s.io
    Feb  9 01:42:52.593: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
    Feb  9 01:42:52.593: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
    Feb  9 01:42:52.593: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
    Feb  9 01:42:52.593: INFO: Checking APIGroup: storage.k8s.io
    Feb  9 01:42:52.595: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
    Feb  9 01:42:52.595: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
    Feb  9 01:42:52.595: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
    Feb  9 01:42:52.595: INFO: Checking APIGroup: admissionregistration.k8s.io
    Feb  9 01:42:52.597: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
    Feb  9 01:42:52.597: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
    Feb  9 01:42:52.597: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
    Feb  9 01:42:52.597: INFO: Checking APIGroup: apiextensions.k8s.io
    Feb  9 01:42:52.599: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
    Feb  9 01:42:52.599: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
    Feb  9 01:42:52.599: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
    Feb  9 01:42:52.599: INFO: Checking APIGroup: scheduling.k8s.io
    Feb  9 01:42:52.601: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
    Feb  9 01:42:52.601: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
    Feb  9 01:42:52.601: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
    Feb  9 01:42:52.601: INFO: Checking APIGroup: coordination.k8s.io
    Feb  9 01:42:52.603: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
    Feb  9 01:42:52.603: INFO: Versions found [{coordination.k8s.io/v1 v1}]
    Feb  9 01:42:52.603: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
    Feb  9 01:42:52.603: INFO: Checking APIGroup: node.k8s.io
    Feb  9 01:42:52.604: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
    Feb  9 01:42:52.604: INFO: Versions found [{node.k8s.io/v1 v1}]
    Feb  9 01:42:52.604: INFO: node.k8s.io/v1 matches node.k8s.io/v1
    Feb  9 01:42:52.604: INFO: Checking APIGroup: discovery.k8s.io
    Feb  9 01:42:52.606: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
    Feb  9 01:42:52.606: INFO: Versions found [{discovery.k8s.io/v1 v1}]
    Feb  9 01:42:52.606: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
    Feb  9 01:42:52.606: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
    Feb  9 01:42:52.608: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
    Feb  9 01:42:52.608: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
    Feb  9 01:42:52.608: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
    Feb  9 01:42:52.608: INFO: Checking APIGroup: snapshot.storage.k8s.io
    Feb  9 01:42:52.610: INFO: PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
    Feb  9 01:42:52.610: INFO: Versions found [{snapshot.storage.k8s.io/v1 v1} {snapshot.storage.k8s.io/v1beta1 v1beta1}]
    Feb  9 01:42:52.610: INFO: snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
    Feb  9 01:42:52.610: INFO: Checking APIGroup: metrics.k8s.io
    Feb  9 01:42:52.612: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
    Feb  9 01:42:52.612: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
    Feb  9 01:42:52.612: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
    [AfterEach] [sig-api-machinery] Discovery
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:42:52.612: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      tear down framework | framework.go:193
    STEP: Destroying namespace "discovery-5964" for this suite. 02/09/23 01:42:52.621
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:42:52.636
Feb  9 01:42:52.636: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 01:42:52.637
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:42:52.656
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:42:52.66
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45
STEP: Creating configMap configmap-5774/configmap-test-d8e521be-194b-4e46-b5b2-7abd17c43dd2 02/09/23 01:42:52.665
STEP: Creating a pod to test consume configMaps 02/09/23 01:42:52.671
Feb  9 01:42:52.683: INFO: Waiting up to 5m0s for pod "pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87" in namespace "configmap-5774" to be "Succeeded or Failed"
Feb  9 01:42:52.689: INFO: Pod "pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87": Phase="Pending", Reason="", readiness=false. Elapsed: 5.326731ms
Feb  9 01:42:54.696: INFO: Pod "pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012399559s
Feb  9 01:42:56.697: INFO: Pod "pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01323296s
STEP: Saw pod success 02/09/23 01:42:56.697
Feb  9 01:42:56.697: INFO: Pod "pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87" satisfied condition "Succeeded or Failed"
Feb  9 01:42:56.702: INFO: Trying to get logs from node aks-nodes-15799032-vmss000001 pod pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87 container env-test: <nil>
STEP: delete the pod 02/09/23 01:42:56.715
Feb  9 01:42:56.744: INFO: Waiting for pod pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87 to disappear
Feb  9 01:42:56.750: INFO: Pod pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:42:56.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-5774" for this suite. 02/09/23 01:42:56.758
------------------------------
â€¢ [4.131 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:42:52.636
    Feb  9 01:42:52.636: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 01:42:52.637
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:42:52.656
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:42:52.66
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via environment variable [NodeConformance] [Conformance]
      test/e2e/common/node/configmap.go:45
    STEP: Creating configMap configmap-5774/configmap-test-d8e521be-194b-4e46-b5b2-7abd17c43dd2 02/09/23 01:42:52.665
    STEP: Creating a pod to test consume configMaps 02/09/23 01:42:52.671
    Feb  9 01:42:52.683: INFO: Waiting up to 5m0s for pod "pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87" in namespace "configmap-5774" to be "Succeeded or Failed"
    Feb  9 01:42:52.689: INFO: Pod "pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87": Phase="Pending", Reason="", readiness=false. Elapsed: 5.326731ms
    Feb  9 01:42:54.696: INFO: Pod "pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012399559s
    Feb  9 01:42:56.697: INFO: Pod "pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01323296s
    STEP: Saw pod success 02/09/23 01:42:56.697
    Feb  9 01:42:56.697: INFO: Pod "pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87" satisfied condition "Succeeded or Failed"
    Feb  9 01:42:56.702: INFO: Trying to get logs from node aks-nodes-15799032-vmss000001 pod pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87 container env-test: <nil>
    STEP: delete the pod 02/09/23 01:42:56.715
    Feb  9 01:42:56.744: INFO: Waiting for pod pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87 to disappear
    Feb  9 01:42:56.750: INFO: Pod pod-configmaps-7e706c56-6138-4e9d-92f4-ad5f9f191b87 no longer exists
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:42:56.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-5774" for this suite. 02/09/23 01:42:56.758
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] Daemon set [Serial]
  should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:42:56.767
Feb  9 01:42:56.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename daemonsets 02/09/23 01:42:56.768
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:42:56.786
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:42:56.791
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432
Feb  9 01:42:56.831: INFO: Create a RollingUpdate DaemonSet
Feb  9 01:42:56.837: INFO: Check that daemon pods launch on every node of the cluster
Feb  9 01:42:56.854: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:42:56.854: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:42:57.867: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Feb  9 01:42:57.867: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:42:58.868: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Feb  9 01:42:58.868: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
Feb  9 01:42:58.868: INFO: Update the DaemonSet to trigger a rollout
Feb  9 01:42:58.880: INFO: Updating DaemonSet daemon-set
Feb  9 01:43:01.909: INFO: Roll back the DaemonSet before rollout is complete
Feb  9 01:43:01.922: INFO: Updating DaemonSet daemon-set
Feb  9 01:43:01.922: INFO: Make sure DaemonSet rollback is complete
Feb  9 01:43:01.928: INFO: Wrong image for pod: daemon-set-nkzm5. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
Feb  9 01:43:01.928: INFO: Pod daemon-set-nkzm5 is not available
Feb  9 01:43:03.941: INFO: Pod daemon-set-dlstx is not available
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 02/09/23 01:43:03.961
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6143, will wait for the garbage collector to delete the pods 02/09/23 01:43:03.961
Feb  9 01:43:04.026: INFO: Deleting DaemonSet.extensions daemon-set took: 9.193072ms
Feb  9 01:43:04.126: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.307578ms
Feb  9 01:43:05.333: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:43:05.333: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Feb  9 01:43:05.338: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38300"},"items":null}

Feb  9 01:43:05.344: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38300"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:43:05.367: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-6143" for this suite. 02/09/23 01:43:05.373
------------------------------
â€¢ [SLOW TEST] [8.616 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:42:56.767
    Feb  9 01:42:56.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename daemonsets 02/09/23 01:42:56.768
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:42:56.786
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:42:56.791
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should rollback without unnecessary restarts [Conformance]
      test/e2e/apps/daemon_set.go:432
    Feb  9 01:42:56.831: INFO: Create a RollingUpdate DaemonSet
    Feb  9 01:42:56.837: INFO: Check that daemon pods launch on every node of the cluster
    Feb  9 01:42:56.854: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:42:56.854: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:42:57.867: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Feb  9 01:42:57.867: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:42:58.868: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Feb  9 01:42:58.868: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    Feb  9 01:42:58.868: INFO: Update the DaemonSet to trigger a rollout
    Feb  9 01:42:58.880: INFO: Updating DaemonSet daemon-set
    Feb  9 01:43:01.909: INFO: Roll back the DaemonSet before rollout is complete
    Feb  9 01:43:01.922: INFO: Updating DaemonSet daemon-set
    Feb  9 01:43:01.922: INFO: Make sure DaemonSet rollback is complete
    Feb  9 01:43:01.928: INFO: Wrong image for pod: daemon-set-nkzm5. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
    Feb  9 01:43:01.928: INFO: Pod daemon-set-nkzm5 is not available
    Feb  9 01:43:03.941: INFO: Pod daemon-set-dlstx is not available
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 02/09/23 01:43:03.961
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6143, will wait for the garbage collector to delete the pods 02/09/23 01:43:03.961
    Feb  9 01:43:04.026: INFO: Deleting DaemonSet.extensions daemon-set took: 9.193072ms
    Feb  9 01:43:04.126: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.307578ms
    Feb  9 01:43:05.333: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:43:05.333: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Feb  9 01:43:05.338: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38300"},"items":null}

    Feb  9 01:43:05.344: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38300"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:43:05.367: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-6143" for this suite. 02/09/23 01:43:05.373
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:43:05.385
Feb  9 01:43:05.385: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 01:43:05.386
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:05.406
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:05.41
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 01:43:05.43
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:43:05.754
STEP: Deploying the webhook pod 02/09/23 01:43:05.761
STEP: Wait for the deployment to be ready 02/09/23 01:43:05.774
Feb  9 01:43:05.785: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 01:43:07.804
STEP: Verifying the service has paired with the endpoint 02/09/23 01:43:07.818
Feb  9 01:43:08.818: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209
STEP: Registering the webhook via the AdmissionRegistration API 02/09/23 01:43:08.825
STEP: create a pod 02/09/23 01:43:08.847
Feb  9 01:43:08.858: INFO: Waiting up to 5m0s for pod "to-be-attached-pod" in namespace "webhook-4066" to be "running"
Feb  9 01:43:08.865: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 7.112954ms
Feb  9 01:43:10.872: INFO: Pod "to-be-attached-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.01391751s
Feb  9 01:43:10.872: INFO: Pod "to-be-attached-pod" satisfied condition "running"
STEP: 'kubectl attach' the pod, should be denied by the webhook 02/09/23 01:43:10.872
Feb  9 01:43:10.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=webhook-4066 attach --namespace=webhook-4066 to-be-attached-pod -i -c=container1'
Feb  9 01:43:10.971: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:43:10.982: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-4066" for this suite. 02/09/23 01:43:11.041
STEP: Destroying namespace "webhook-4066-markers" for this suite. 02/09/23 01:43:11.051
------------------------------
â€¢ [SLOW TEST] [5.674 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:43:05.385
    Feb  9 01:43:05.385: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 01:43:05.386
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:05.406
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:05.41
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 01:43:05.43
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:43:05.754
    STEP: Deploying the webhook pod 02/09/23 01:43:05.761
    STEP: Wait for the deployment to be ready 02/09/23 01:43:05.774
    Feb  9 01:43:05.785: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 01:43:07.804
    STEP: Verifying the service has paired with the endpoint 02/09/23 01:43:07.818
    Feb  9 01:43:08.818: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny attaching pod [Conformance]
      test/e2e/apimachinery/webhook.go:209
    STEP: Registering the webhook via the AdmissionRegistration API 02/09/23 01:43:08.825
    STEP: create a pod 02/09/23 01:43:08.847
    Feb  9 01:43:08.858: INFO: Waiting up to 5m0s for pod "to-be-attached-pod" in namespace "webhook-4066" to be "running"
    Feb  9 01:43:08.865: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 7.112954ms
    Feb  9 01:43:10.872: INFO: Pod "to-be-attached-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.01391751s
    Feb  9 01:43:10.872: INFO: Pod "to-be-attached-pod" satisfied condition "running"
    STEP: 'kubectl attach' the pod, should be denied by the webhook 02/09/23 01:43:10.872
    Feb  9 01:43:10.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=webhook-4066 attach --namespace=webhook-4066 to-be-attached-pod -i -c=container1'
    Feb  9 01:43:10.971: INFO: rc: 1
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:43:10.982: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-4066" for this suite. 02/09/23 01:43:11.041
    STEP: Destroying namespace "webhook-4066-markers" for this suite. 02/09/23 01:43:11.051
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:43:11.062
Feb  9 01:43:11.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 01:43:11.063
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:11.08
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:11.085
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117
STEP: Creating a pod to test emptydir 0777 on tmpfs 02/09/23 01:43:11.089
Feb  9 01:43:11.101: INFO: Waiting up to 5m0s for pod "pod-301ccdb1-3df3-4867-8284-ff268b48f8d2" in namespace "emptydir-6407" to be "Succeeded or Failed"
Feb  9 01:43:11.106: INFO: Pod "pod-301ccdb1-3df3-4867-8284-ff268b48f8d2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.117538ms
Feb  9 01:43:13.113: INFO: Pod "pod-301ccdb1-3df3-4867-8284-ff268b48f8d2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011975095s
Feb  9 01:43:15.113: INFO: Pod "pod-301ccdb1-3df3-4867-8284-ff268b48f8d2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012500658s
STEP: Saw pod success 02/09/23 01:43:15.113
Feb  9 01:43:15.113: INFO: Pod "pod-301ccdb1-3df3-4867-8284-ff268b48f8d2" satisfied condition "Succeeded or Failed"
Feb  9 01:43:15.119: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-301ccdb1-3df3-4867-8284-ff268b48f8d2 container test-container: <nil>
STEP: delete the pod 02/09/23 01:43:15.132
Feb  9 01:43:15.146: INFO: Waiting for pod pod-301ccdb1-3df3-4867-8284-ff268b48f8d2 to disappear
Feb  9 01:43:15.152: INFO: Pod pod-301ccdb1-3df3-4867-8284-ff268b48f8d2 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:43:15.152: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-6407" for this suite. 02/09/23 01:43:15.161
------------------------------
â€¢ [4.108 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:43:11.062
    Feb  9 01:43:11.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 01:43:11.063
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:11.08
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:11.085
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:117
    STEP: Creating a pod to test emptydir 0777 on tmpfs 02/09/23 01:43:11.089
    Feb  9 01:43:11.101: INFO: Waiting up to 5m0s for pod "pod-301ccdb1-3df3-4867-8284-ff268b48f8d2" in namespace "emptydir-6407" to be "Succeeded or Failed"
    Feb  9 01:43:11.106: INFO: Pod "pod-301ccdb1-3df3-4867-8284-ff268b48f8d2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.117538ms
    Feb  9 01:43:13.113: INFO: Pod "pod-301ccdb1-3df3-4867-8284-ff268b48f8d2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011975095s
    Feb  9 01:43:15.113: INFO: Pod "pod-301ccdb1-3df3-4867-8284-ff268b48f8d2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012500658s
    STEP: Saw pod success 02/09/23 01:43:15.113
    Feb  9 01:43:15.113: INFO: Pod "pod-301ccdb1-3df3-4867-8284-ff268b48f8d2" satisfied condition "Succeeded or Failed"
    Feb  9 01:43:15.119: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-301ccdb1-3df3-4867-8284-ff268b48f8d2 container test-container: <nil>
    STEP: delete the pod 02/09/23 01:43:15.132
    Feb  9 01:43:15.146: INFO: Waiting for pod pod-301ccdb1-3df3-4867-8284-ff268b48f8d2 to disappear
    Feb  9 01:43:15.152: INFO: Pod pod-301ccdb1-3df3-4867-8284-ff268b48f8d2 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:43:15.152: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-6407" for this suite. 02/09/23 01:43:15.161
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:43:15.171
Feb  9 01:43:15.171: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename var-expansion 02/09/23 01:43:15.172
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:15.19
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:15.194
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44
STEP: Creating a pod to test env composition 02/09/23 01:43:15.198
Feb  9 01:43:15.209: INFO: Waiting up to 5m0s for pod "var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2" in namespace "var-expansion-4577" to be "Succeeded or Failed"
Feb  9 01:43:15.215: INFO: Pod "var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.689942ms
Feb  9 01:43:17.222: INFO: Pod "var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012331501s
Feb  9 01:43:19.221: INFO: Pod "var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011968009s
STEP: Saw pod success 02/09/23 01:43:19.221
Feb  9 01:43:19.222: INFO: Pod "var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2" satisfied condition "Succeeded or Failed"
Feb  9 01:43:19.227: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2 container dapi-container: <nil>
STEP: delete the pod 02/09/23 01:43:19.24
Feb  9 01:43:19.256: INFO: Waiting for pod var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2 to disappear
Feb  9 01:43:19.262: INFO: Pod var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Feb  9 01:43:19.262: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-4577" for this suite. 02/09/23 01:43:19.27
------------------------------
â€¢ [4.108 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:43:15.171
    Feb  9 01:43:15.171: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename var-expansion 02/09/23 01:43:15.172
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:15.19
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:15.194
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:44
    STEP: Creating a pod to test env composition 02/09/23 01:43:15.198
    Feb  9 01:43:15.209: INFO: Waiting up to 5m0s for pod "var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2" in namespace "var-expansion-4577" to be "Succeeded or Failed"
    Feb  9 01:43:15.215: INFO: Pod "var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.689942ms
    Feb  9 01:43:17.222: INFO: Pod "var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012331501s
    Feb  9 01:43:19.221: INFO: Pod "var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011968009s
    STEP: Saw pod success 02/09/23 01:43:19.221
    Feb  9 01:43:19.222: INFO: Pod "var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2" satisfied condition "Succeeded or Failed"
    Feb  9 01:43:19.227: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2 container dapi-container: <nil>
    STEP: delete the pod 02/09/23 01:43:19.24
    Feb  9 01:43:19.256: INFO: Waiting for pod var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2 to disappear
    Feb  9 01:43:19.262: INFO: Pod var-expansion-4df92737-619b-4d63-a17f-c1376bb6dcf2 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:43:19.262: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-4577" for this suite. 02/09/23 01:43:19.27
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:43:19.279
Feb  9 01:43:19.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:43:19.28
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:19.3
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:19.304
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:43:19.309
Feb  9 01:43:19.322: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b" in namespace "projected-8775" to be "Succeeded or Failed"
Feb  9 01:43:19.328: INFO: Pod "downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.002045ms
Feb  9 01:43:21.334: INFO: Pod "downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011957599s
Feb  9 01:43:23.335: INFO: Pod "downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013013003s
STEP: Saw pod success 02/09/23 01:43:23.335
Feb  9 01:43:23.335: INFO: Pod "downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b" satisfied condition "Succeeded or Failed"
Feb  9 01:43:23.341: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b container client-container: <nil>
STEP: delete the pod 02/09/23 01:43:23.353
Feb  9 01:43:23.367: INFO: Waiting for pod downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b to disappear
Feb  9 01:43:23.372: INFO: Pod downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Feb  9 01:43:23.372: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8775" for this suite. 02/09/23 01:43:23.38
------------------------------
â€¢ [4.110 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:43:19.279
    Feb  9 01:43:19.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:43:19.28
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:19.3
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:19.304
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's cpu request [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:221
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:43:19.309
    Feb  9 01:43:19.322: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b" in namespace "projected-8775" to be "Succeeded or Failed"
    Feb  9 01:43:19.328: INFO: Pod "downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.002045ms
    Feb  9 01:43:21.334: INFO: Pod "downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011957599s
    Feb  9 01:43:23.335: INFO: Pod "downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013013003s
    STEP: Saw pod success 02/09/23 01:43:23.335
    Feb  9 01:43:23.335: INFO: Pod "downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b" satisfied condition "Succeeded or Failed"
    Feb  9 01:43:23.341: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b container client-container: <nil>
    STEP: delete the pod 02/09/23 01:43:23.353
    Feb  9 01:43:23.367: INFO: Waiting for pod downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b to disappear
    Feb  9 01:43:23.372: INFO: Pod downwardapi-volume-ab7ccdab-5c64-49de-8254-4e39c00da71b no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:43:23.372: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8775" for this suite. 02/09/23 01:43:23.38
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should provide secure master service  [Conformance]
  test/e2e/network/service.go:777
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:43:23.394
Feb  9 01:43:23.394: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:43:23.394
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:23.418
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:23.423
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should provide secure master service  [Conformance]
  test/e2e/network/service.go:777
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:43:23.432: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-1124" for this suite. 02/09/23 01:43:23.438
------------------------------
â€¢ [0.054 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should provide secure master service  [Conformance]
  test/e2e/network/service.go:777

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:43:23.394
    Feb  9 01:43:23.394: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:43:23.394
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:23.418
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:23.423
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should provide secure master service  [Conformance]
      test/e2e/network/service.go:777
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:43:23.432: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-1124" for this suite. 02/09/23 01:43:23.438
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:43:23.45
Feb  9 01:43:23.450: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename dns 02/09/23 01:43:23.45
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:23.47
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:23.474
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5444.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-5444.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
 02/09/23 01:43:23.479
STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5444.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5444.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
 02/09/23 01:43:23.479
STEP: creating a pod to probe /etc/hosts 02/09/23 01:43:23.479
STEP: submitting the pod to kubernetes 02/09/23 01:43:23.479
Feb  9 01:43:23.492: INFO: Waiting up to 15m0s for pod "dns-test-51c10083-a2a5-426d-9411-5fc21f7d01e1" in namespace "dns-5444" to be "running"
Feb  9 01:43:23.498: INFO: Pod "dns-test-51c10083-a2a5-426d-9411-5fc21f7d01e1": Phase="Pending", Reason="", readiness=false. Elapsed: 6.494349ms
Feb  9 01:43:25.505: INFO: Pod "dns-test-51c10083-a2a5-426d-9411-5fc21f7d01e1": Phase="Running", Reason="", readiness=true. Elapsed: 2.013164292s
Feb  9 01:43:25.505: INFO: Pod "dns-test-51c10083-a2a5-426d-9411-5fc21f7d01e1" satisfied condition "running"
STEP: retrieving the pod 02/09/23 01:43:25.505
STEP: looking for the results for each expected name from probers 02/09/23 01:43:25.511
Feb  9 01:43:25.545: INFO: DNS probes using dns-5444/dns-test-51c10083-a2a5-426d-9411-5fc21f7d01e1 succeeded

STEP: deleting the pod 02/09/23 01:43:25.545
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Feb  9 01:43:25.563: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-5444" for this suite. 02/09/23 01:43:25.571
------------------------------
â€¢ [2.132 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:43:23.45
    Feb  9 01:43:23.450: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename dns 02/09/23 01:43:23.45
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:23.47
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:23.474
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide /etc/hosts entries for the cluster [Conformance]
      test/e2e/network/dns.go:117
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5444.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-5444.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
     02/09/23 01:43:23.479
    STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5444.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5444.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
     02/09/23 01:43:23.479
    STEP: creating a pod to probe /etc/hosts 02/09/23 01:43:23.479
    STEP: submitting the pod to kubernetes 02/09/23 01:43:23.479
    Feb  9 01:43:23.492: INFO: Waiting up to 15m0s for pod "dns-test-51c10083-a2a5-426d-9411-5fc21f7d01e1" in namespace "dns-5444" to be "running"
    Feb  9 01:43:23.498: INFO: Pod "dns-test-51c10083-a2a5-426d-9411-5fc21f7d01e1": Phase="Pending", Reason="", readiness=false. Elapsed: 6.494349ms
    Feb  9 01:43:25.505: INFO: Pod "dns-test-51c10083-a2a5-426d-9411-5fc21f7d01e1": Phase="Running", Reason="", readiness=true. Elapsed: 2.013164292s
    Feb  9 01:43:25.505: INFO: Pod "dns-test-51c10083-a2a5-426d-9411-5fc21f7d01e1" satisfied condition "running"
    STEP: retrieving the pod 02/09/23 01:43:25.505
    STEP: looking for the results for each expected name from probers 02/09/23 01:43:25.511
    Feb  9 01:43:25.545: INFO: DNS probes using dns-5444/dns-test-51c10083-a2a5-426d-9411-5fc21f7d01e1 succeeded

    STEP: deleting the pod 02/09/23 01:43:25.545
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:43:25.563: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-5444" for this suite. 02/09/23 01:43:25.571
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with configmap pod [Conformance]
  test/e2e/storage/subpath.go:70
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:43:25.583
Feb  9 01:43:25.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename subpath 02/09/23 01:43:25.584
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:25.606
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:25.61
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 02/09/23 01:43:25.615
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/storage/subpath.go:70
STEP: Creating pod pod-subpath-test-configmap-q2kl 02/09/23 01:43:25.627
STEP: Creating a pod to test atomic-volume-subpath 02/09/23 01:43:25.627
Feb  9 01:43:25.639: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-q2kl" in namespace "subpath-8055" to be "Succeeded or Failed"
Feb  9 01:43:25.645: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Pending", Reason="", readiness=false. Elapsed: 5.963144ms
Feb  9 01:43:27.652: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 2.012738488s
Feb  9 01:43:29.652: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 4.012740548s
Feb  9 01:43:31.651: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 6.012060673s
Feb  9 01:43:33.652: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 8.012634806s
Feb  9 01:43:35.652: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 10.012612935s
Feb  9 01:43:37.652: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 12.013176024s
Feb  9 01:43:39.651: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 14.011565905s
Feb  9 01:43:41.651: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 16.011939994s
Feb  9 01:43:43.651: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 18.011826448s
Feb  9 01:43:45.653: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 20.013977262s
Feb  9 01:43:47.652: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=false. Elapsed: 22.012838609s
Feb  9 01:43:49.653: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.013525789s
STEP: Saw pod success 02/09/23 01:43:49.653
Feb  9 01:43:49.653: INFO: Pod "pod-subpath-test-configmap-q2kl" satisfied condition "Succeeded or Failed"
Feb  9 01:43:49.658: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-subpath-test-configmap-q2kl container test-container-subpath-configmap-q2kl: <nil>
STEP: delete the pod 02/09/23 01:43:49.672
Feb  9 01:43:49.686: INFO: Waiting for pod pod-subpath-test-configmap-q2kl to disappear
Feb  9 01:43:49.691: INFO: Pod pod-subpath-test-configmap-q2kl no longer exists
STEP: Deleting pod pod-subpath-test-configmap-q2kl 02/09/23 01:43:49.691
Feb  9 01:43:49.691: INFO: Deleting pod "pod-subpath-test-configmap-q2kl" in namespace "subpath-8055"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Feb  9 01:43:49.696: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-8055" for this suite. 02/09/23 01:43:49.705
------------------------------
â€¢ [SLOW TEST] [24.131 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/storage/subpath.go:70

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:43:25.583
    Feb  9 01:43:25.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename subpath 02/09/23 01:43:25.584
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:25.606
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:25.61
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 02/09/23 01:43:25.615
    [It] should support subpaths with configmap pod [Conformance]
      test/e2e/storage/subpath.go:70
    STEP: Creating pod pod-subpath-test-configmap-q2kl 02/09/23 01:43:25.627
    STEP: Creating a pod to test atomic-volume-subpath 02/09/23 01:43:25.627
    Feb  9 01:43:25.639: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-q2kl" in namespace "subpath-8055" to be "Succeeded or Failed"
    Feb  9 01:43:25.645: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Pending", Reason="", readiness=false. Elapsed: 5.963144ms
    Feb  9 01:43:27.652: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 2.012738488s
    Feb  9 01:43:29.652: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 4.012740548s
    Feb  9 01:43:31.651: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 6.012060673s
    Feb  9 01:43:33.652: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 8.012634806s
    Feb  9 01:43:35.652: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 10.012612935s
    Feb  9 01:43:37.652: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 12.013176024s
    Feb  9 01:43:39.651: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 14.011565905s
    Feb  9 01:43:41.651: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 16.011939994s
    Feb  9 01:43:43.651: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 18.011826448s
    Feb  9 01:43:45.653: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=true. Elapsed: 20.013977262s
    Feb  9 01:43:47.652: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Running", Reason="", readiness=false. Elapsed: 22.012838609s
    Feb  9 01:43:49.653: INFO: Pod "pod-subpath-test-configmap-q2kl": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.013525789s
    STEP: Saw pod success 02/09/23 01:43:49.653
    Feb  9 01:43:49.653: INFO: Pod "pod-subpath-test-configmap-q2kl" satisfied condition "Succeeded or Failed"
    Feb  9 01:43:49.658: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-subpath-test-configmap-q2kl container test-container-subpath-configmap-q2kl: <nil>
    STEP: delete the pod 02/09/23 01:43:49.672
    Feb  9 01:43:49.686: INFO: Waiting for pod pod-subpath-test-configmap-q2kl to disappear
    Feb  9 01:43:49.691: INFO: Pod pod-subpath-test-configmap-q2kl no longer exists
    STEP: Deleting pod pod-subpath-test-configmap-q2kl 02/09/23 01:43:49.691
    Feb  9 01:43:49.691: INFO: Deleting pod "pod-subpath-test-configmap-q2kl" in namespace "subpath-8055"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:43:49.696: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-8055" for this suite. 02/09/23 01:43:49.705
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/apps/disruption.go:87
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:43:49.714
Feb  9 01:43:49.714: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename disruption 02/09/23 01:43:49.715
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:49.733
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:49.738
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:43:49.742
Feb  9 01:43:49.742: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename disruption-2 02/09/23 01:43:49.743
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:49.762
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:49.766
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/metrics/init/init.go:31
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/apps/disruption.go:87
STEP: Waiting for the pdb to be processed 02/09/23 01:43:49.777
STEP: Waiting for the pdb to be processed 02/09/23 01:43:49.789
STEP: Waiting for the pdb to be processed 02/09/23 01:43:49.8
STEP: listing a collection of PDBs across all namespaces 02/09/23 01:43:51.812
STEP: listing a collection of PDBs in namespace disruption-1450 02/09/23 01:43:51.818
STEP: deleting a collection of PDBs 02/09/23 01:43:51.823
STEP: Waiting for the PDB collection to be deleted 02/09/23 01:43:51.842
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/node/init/init.go:32
Feb  9 01:43:51.848: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Feb  9 01:43:51.856: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  dump namespaces | framework.go:196
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-2-7374" for this suite. 02/09/23 01:43:51.862
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-1450" for this suite. 02/09/23 01:43:51.871
------------------------------
â€¢ [2.166 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  Listing PodDisruptionBudgets for all namespaces
  test/e2e/apps/disruption.go:78
    should list and delete a collection of PodDisruptionBudgets [Conformance]
    test/e2e/apps/disruption.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:43:49.714
    Feb  9 01:43:49.714: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename disruption 02/09/23 01:43:49.715
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:49.733
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:49.738
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [BeforeEach] Listing PodDisruptionBudgets for all namespaces
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:43:49.742
    Feb  9 01:43:49.742: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename disruption-2 02/09/23 01:43:49.743
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:49.762
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:49.766
    [BeforeEach] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/metrics/init/init.go:31
    [It] should list and delete a collection of PodDisruptionBudgets [Conformance]
      test/e2e/apps/disruption.go:87
    STEP: Waiting for the pdb to be processed 02/09/23 01:43:49.777
    STEP: Waiting for the pdb to be processed 02/09/23 01:43:49.789
    STEP: Waiting for the pdb to be processed 02/09/23 01:43:49.8
    STEP: listing a collection of PDBs across all namespaces 02/09/23 01:43:51.812
    STEP: listing a collection of PDBs in namespace disruption-1450 02/09/23 01:43:51.818
    STEP: deleting a collection of PDBs 02/09/23 01:43:51.823
    STEP: Waiting for the PDB collection to be deleted 02/09/23 01:43:51.842
    [AfterEach] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:43:51.848: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:43:51.856: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-2-7374" for this suite. 02/09/23 01:43:51.862
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-1450" for this suite. 02/09/23 01:43:51.871
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:43:51.884
Feb  9 01:43:51.884: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:43:51.885
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:51.909
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:51.914
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302
STEP: creating service nodeport-test with type=NodePort in namespace services-5167 02/09/23 01:43:51.918
STEP: creating replication controller nodeport-test in namespace services-5167 02/09/23 01:43:51.941
I0209 01:43:51.948724      20 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-5167, replica count: 2
I0209 01:43:55.000452      20 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Feb  9 01:43:55.000: INFO: Creating new exec pod
Feb  9 01:43:55.012: INFO: Waiting up to 5m0s for pod "execpods4mlf" in namespace "services-5167" to be "running"
Feb  9 01:43:55.019: INFO: Pod "execpods4mlf": Phase="Pending", Reason="", readiness=false. Elapsed: 6.519978ms
Feb  9 01:43:57.026: INFO: Pod "execpods4mlf": Phase="Running", Reason="", readiness=true. Elapsed: 2.013336884s
Feb  9 01:43:57.026: INFO: Pod "execpods4mlf" satisfied condition "running"
Feb  9 01:43:58.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-5167 exec execpods4mlf -- /bin/sh -x -c nc -v -z -w 2 nodeport-test 80'
Feb  9 01:43:58.205: INFO: stderr: "+ nc -v -z -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Feb  9 01:43:58.205: INFO: stdout: ""
Feb  9 01:43:58.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-5167 exec execpods4mlf -- /bin/sh -x -c nc -v -z -w 2 10.0.163.245 80'
Feb  9 01:43:58.350: INFO: stderr: "+ nc -v -z -w 2 10.0.163.245 80\nConnection to 10.0.163.245 80 port [tcp/http] succeeded!\n"
Feb  9 01:43:58.350: INFO: stdout: ""
Feb  9 01:43:58.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-5167 exec execpods4mlf -- /bin/sh -x -c nc -v -z -w 2 10.224.0.5 30816'
Feb  9 01:43:58.504: INFO: stderr: "+ nc -v -z -w 2 10.224.0.5 30816\nConnection to 10.224.0.5 30816 port [tcp/*] succeeded!\n"
Feb  9 01:43:58.504: INFO: stdout: ""
Feb  9 01:43:58.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-5167 exec execpods4mlf -- /bin/sh -x -c nc -v -z -w 2 10.224.0.6 30816'
Feb  9 01:43:58.679: INFO: stderr: "+ nc -v -z -w 2 10.224.0.6 30816\nConnection to 10.224.0.6 30816 port [tcp/*] succeeded!\n"
Feb  9 01:43:58.679: INFO: stdout: ""
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:43:58.679: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-5167" for this suite. 02/09/23 01:43:58.688
------------------------------
â€¢ [SLOW TEST] [6.813 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:43:51.884
    Feb  9 01:43:51.884: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:43:51.885
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:51.909
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:51.914
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to create a functioning NodePort service [Conformance]
      test/e2e/network/service.go:1302
    STEP: creating service nodeport-test with type=NodePort in namespace services-5167 02/09/23 01:43:51.918
    STEP: creating replication controller nodeport-test in namespace services-5167 02/09/23 01:43:51.941
    I0209 01:43:51.948724      20 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-5167, replica count: 2
    I0209 01:43:55.000452      20 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Feb  9 01:43:55.000: INFO: Creating new exec pod
    Feb  9 01:43:55.012: INFO: Waiting up to 5m0s for pod "execpods4mlf" in namespace "services-5167" to be "running"
    Feb  9 01:43:55.019: INFO: Pod "execpods4mlf": Phase="Pending", Reason="", readiness=false. Elapsed: 6.519978ms
    Feb  9 01:43:57.026: INFO: Pod "execpods4mlf": Phase="Running", Reason="", readiness=true. Elapsed: 2.013336884s
    Feb  9 01:43:57.026: INFO: Pod "execpods4mlf" satisfied condition "running"
    Feb  9 01:43:58.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-5167 exec execpods4mlf -- /bin/sh -x -c nc -v -z -w 2 nodeport-test 80'
    Feb  9 01:43:58.205: INFO: stderr: "+ nc -v -z -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
    Feb  9 01:43:58.205: INFO: stdout: ""
    Feb  9 01:43:58.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-5167 exec execpods4mlf -- /bin/sh -x -c nc -v -z -w 2 10.0.163.245 80'
    Feb  9 01:43:58.350: INFO: stderr: "+ nc -v -z -w 2 10.0.163.245 80\nConnection to 10.0.163.245 80 port [tcp/http] succeeded!\n"
    Feb  9 01:43:58.350: INFO: stdout: ""
    Feb  9 01:43:58.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-5167 exec execpods4mlf -- /bin/sh -x -c nc -v -z -w 2 10.224.0.5 30816'
    Feb  9 01:43:58.504: INFO: stderr: "+ nc -v -z -w 2 10.224.0.5 30816\nConnection to 10.224.0.5 30816 port [tcp/*] succeeded!\n"
    Feb  9 01:43:58.504: INFO: stdout: ""
    Feb  9 01:43:58.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-5167 exec execpods4mlf -- /bin/sh -x -c nc -v -z -w 2 10.224.0.6 30816'
    Feb  9 01:43:58.679: INFO: stderr: "+ nc -v -z -w 2 10.224.0.6 30816\nConnection to 10.224.0.6 30816 port [tcp/*] succeeded!\n"
    Feb  9 01:43:58.679: INFO: stdout: ""
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:43:58.679: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-5167" for this suite. 02/09/23 01:43:58.688
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:43:58.698
Feb  9 01:43:58.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename custom-resource-definition 02/09/23 01:43:58.699
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:58.718
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:58.722
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198
STEP: fetching the /apis discovery document 02/09/23 01:43:58.726
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document 02/09/23 01:43:58.728
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document 02/09/23 01:43:58.729
STEP: fetching the /apis/apiextensions.k8s.io discovery document 02/09/23 01:43:58.729
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document 02/09/23 01:43:58.731
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document 02/09/23 01:43:58.731
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document 02/09/23 01:43:58.733
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:43:58.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-6262" for this suite. 02/09/23 01:43:58.739
------------------------------
â€¢ [0.050 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:43:58.698
    Feb  9 01:43:58.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename custom-resource-definition 02/09/23 01:43:58.699
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:58.718
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:58.722
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] should include custom resource definition resources in discovery documents [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:198
    STEP: fetching the /apis discovery document 02/09/23 01:43:58.726
    STEP: finding the apiextensions.k8s.io API group in the /apis discovery document 02/09/23 01:43:58.728
    STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document 02/09/23 01:43:58.729
    STEP: fetching the /apis/apiextensions.k8s.io discovery document 02/09/23 01:43:58.729
    STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document 02/09/23 01:43:58.731
    STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document 02/09/23 01:43:58.731
    STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document 02/09/23 01:43:58.733
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:43:58.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-6262" for this suite. 02/09/23 01:43:58.739
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:43:58.774
Feb  9 01:43:58.774: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename resourcequota 02/09/23 01:43:58.775
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:58.795
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:58.799
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100
STEP: Counting existing ResourceQuota 02/09/23 01:43:58.803
STEP: Creating a ResourceQuota 02/09/23 01:44:03.809
STEP: Ensuring resource quota status is calculated 02/09/23 01:44:03.816
STEP: Creating a Service 02/09/23 01:44:05.824
STEP: Creating a NodePort Service 02/09/23 01:44:05.844
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota 02/09/23 01:44:05.871
STEP: Ensuring resource quota status captures service creation 02/09/23 01:44:05.904
STEP: Deleting Services 02/09/23 01:44:07.911
STEP: Ensuring resource quota status released usage 02/09/23 01:44:07.958
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Feb  9 01:44:09.965: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-3197" for this suite. 02/09/23 01:44:09.972
------------------------------
â€¢ [SLOW TEST] [11.208 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:43:58.774
    Feb  9 01:43:58.774: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename resourcequota 02/09/23 01:43:58.775
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:43:58.795
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:43:58.799
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a service. [Conformance]
      test/e2e/apimachinery/resource_quota.go:100
    STEP: Counting existing ResourceQuota 02/09/23 01:43:58.803
    STEP: Creating a ResourceQuota 02/09/23 01:44:03.809
    STEP: Ensuring resource quota status is calculated 02/09/23 01:44:03.816
    STEP: Creating a Service 02/09/23 01:44:05.824
    STEP: Creating a NodePort Service 02/09/23 01:44:05.844
    STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota 02/09/23 01:44:05.871
    STEP: Ensuring resource quota status captures service creation 02/09/23 01:44:05.904
    STEP: Deleting Services 02/09/23 01:44:07.911
    STEP: Ensuring resource quota status released usage 02/09/23 01:44:07.958
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:44:09.965: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-3197" for this suite. 02/09/23 01:44:09.972
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:44:09.985
Feb  9 01:44:09.985: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:44:09.986
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:44:10.004
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:44:10.009
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:44:10.014
Feb  9 01:44:10.026: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3" in namespace "downward-api-6130" to be "Succeeded or Failed"
Feb  9 01:44:10.032: INFO: Pod "downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3": Phase="Pending", Reason="", readiness=false. Elapsed: 5.655825ms
Feb  9 01:44:12.039: INFO: Pod "downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012772636s
Feb  9 01:44:14.039: INFO: Pod "downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012215912s
STEP: Saw pod success 02/09/23 01:44:14.039
Feb  9 01:44:14.039: INFO: Pod "downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3" satisfied condition "Succeeded or Failed"
Feb  9 01:44:14.044: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3 container client-container: <nil>
STEP: delete the pod 02/09/23 01:44:14.057
Feb  9 01:44:14.076: INFO: Waiting for pod downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3 to disappear
Feb  9 01:44:14.086: INFO: Pod downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Feb  9 01:44:14.087: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-6130" for this suite. 02/09/23 01:44:14.094
------------------------------
â€¢ [4.118 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:44:09.985
    Feb  9 01:44:09.985: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:44:09.986
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:44:10.004
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:44:10.009
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide podname only [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:53
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:44:10.014
    Feb  9 01:44:10.026: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3" in namespace "downward-api-6130" to be "Succeeded or Failed"
    Feb  9 01:44:10.032: INFO: Pod "downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3": Phase="Pending", Reason="", readiness=false. Elapsed: 5.655825ms
    Feb  9 01:44:12.039: INFO: Pod "downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012772636s
    Feb  9 01:44:14.039: INFO: Pod "downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012215912s
    STEP: Saw pod success 02/09/23 01:44:14.039
    Feb  9 01:44:14.039: INFO: Pod "downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3" satisfied condition "Succeeded or Failed"
    Feb  9 01:44:14.044: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3 container client-container: <nil>
    STEP: delete the pod 02/09/23 01:44:14.057
    Feb  9 01:44:14.076: INFO: Waiting for pod downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3 to disappear
    Feb  9 01:44:14.086: INFO: Pod downwardapi-volume-f7a1a4ac-5e2d-4909-bb42-5b00570367a3 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:44:14.087: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-6130" for this suite. 02/09/23 01:44:14.094
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:44:14.104
Feb  9 01:44:14.104: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:44:14.105
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:44:14.127
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:44:14.131
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219
STEP: fetching services 02/09/23 01:44:14.135
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:44:14.141: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-4687" for this suite. 02/09/23 01:44:14.147
------------------------------
â€¢ [0.053 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:44:14.104
    Feb  9 01:44:14.104: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:44:14.105
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:44:14.127
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:44:14.131
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should find a service from listing all namespaces [Conformance]
      test/e2e/network/service.go:3219
    STEP: fetching services 02/09/23 01:44:14.135
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:44:14.141: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-4687" for this suite. 02/09/23 01:44:14.147
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial]
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:44:14.159
Feb  9 01:44:14.160: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename taint-single-pod 02/09/23 01:44:14.16
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:44:14.177
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:44:14.182
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:170
Feb  9 01:44:14.186: INFO: Waiting up to 1m0s for all nodes to be ready
Feb  9 01:45:14.211: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293
Feb  9 01:45:14.217: INFO: Starting informer...
STEP: Starting pod... 02/09/23 01:45:14.217
Feb  9 01:45:14.443: INFO: Pod is running on aks-nodes-15799032-vmss000000. Tainting Node
STEP: Trying to apply a taint on the Node 02/09/23 01:45:14.443
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 02/09/23 01:45:14.462
STEP: Waiting short time to make sure Pod is queued for deletion 02/09/23 01:45:14.468
Feb  9 01:45:14.468: INFO: Pod wasn't evicted. Proceeding
Feb  9 01:45:14.468: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 02/09/23 01:45:14.487
STEP: Waiting some time to make sure that toleration time passed. 02/09/23 01:45:14.493
Feb  9 01:46:29.498: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:46:29.498: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "taint-single-pod-8718" for this suite. 02/09/23 01:46:29.507
------------------------------
â€¢ [SLOW TEST] [135.357 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:44:14.159
    Feb  9 01:44:14.160: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename taint-single-pod 02/09/23 01:44:14.16
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:44:14.177
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:44:14.182
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/node/taints.go:170
    Feb  9 01:44:14.186: INFO: Waiting up to 1m0s for all nodes to be ready
    Feb  9 01:45:14.211: INFO: Waiting for terminating namespaces to be deleted...
    [It] removing taint cancels eviction [Disruptive] [Conformance]
      test/e2e/node/taints.go:293
    Feb  9 01:45:14.217: INFO: Starting informer...
    STEP: Starting pod... 02/09/23 01:45:14.217
    Feb  9 01:45:14.443: INFO: Pod is running on aks-nodes-15799032-vmss000000. Tainting Node
    STEP: Trying to apply a taint on the Node 02/09/23 01:45:14.443
    STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 02/09/23 01:45:14.462
    STEP: Waiting short time to make sure Pod is queued for deletion 02/09/23 01:45:14.468
    Feb  9 01:45:14.468: INFO: Pod wasn't evicted. Proceeding
    Feb  9 01:45:14.468: INFO: Removing taint from Node
    STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 02/09/23 01:45:14.487
    STEP: Waiting some time to make sure that toleration time passed. 02/09/23 01:45:14.493
    Feb  9 01:46:29.498: INFO: Pod wasn't evicted. Test successful
    [AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:46:29.498: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "taint-single-pod-8718" for this suite. 02/09/23 01:46:29.507
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:46:29.517
Feb  9 01:46:29.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename sched-pred 02/09/23 01:46:29.518
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:46:29.537
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:46:29.545
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Feb  9 01:46:29.550: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Feb  9 01:46:29.562: INFO: Waiting for terminating namespaces to be deleted...
Feb  9 01:46:29.567: INFO: 
Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000000 before test
Feb  9 01:46:29.579: INFO: azure-ip-masq-agent-26zqc from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.579: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Feb  9 01:46:29.579: INFO: cloud-node-manager-khkh5 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.579: INFO: 	Container cloud-node-manager ready: true, restart count 0
Feb  9 01:46:29.579: INFO: csi-azuredisk-node-f98f4 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
Feb  9 01:46:29.579: INFO: 	Container azuredisk ready: true, restart count 0
Feb  9 01:46:29.579: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:46:29.579: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:46:29.579: INFO: csi-azurefile-node-kd8lb from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
Feb  9 01:46:29.579: INFO: 	Container azurefile ready: true, restart count 0
Feb  9 01:46:29.579: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:46:29.579: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:46:29.579: INFO: kube-proxy-hznqr from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.579: INFO: 	Container kube-proxy ready: true, restart count 0
Feb  9 01:46:29.579: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-ccznv from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:46:29.579: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:46:29.579: INFO: 	Container systemd-logs ready: true, restart count 0
Feb  9 01:46:29.579: INFO: taint-eviction-4 from taint-single-pod-8718 started at 2023-02-09 01:45:14 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.579: INFO: 	Container pause ready: true, restart count 0
Feb  9 01:46:29.579: INFO: 
Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000001 before test
Feb  9 01:46:29.588: INFO: azure-ip-masq-agent-9z68l from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.588: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Feb  9 01:46:29.588: INFO: cloud-node-manager-5mlpp from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.588: INFO: 	Container cloud-node-manager ready: true, restart count 0
Feb  9 01:46:29.588: INFO: coredns-78669d9946-89dxb from kube-system started at 2023-02-09 00:22:29 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.588: INFO: 	Container coredns ready: true, restart count 0
Feb  9 01:46:29.588: INFO: coredns-autoscaler-5b5c4f5b4f-9tnqp from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.588: INFO: 	Container autoscaler ready: true, restart count 0
Feb  9 01:46:29.588: INFO: csi-azuredisk-node-6tghn from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
Feb  9 01:46:29.588: INFO: 	Container azuredisk ready: true, restart count 0
Feb  9 01:46:29.588: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:46:29.588: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:46:29.588: INFO: csi-azurefile-node-cgcmb from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
Feb  9 01:46:29.588: INFO: 	Container azurefile ready: true, restart count 0
Feb  9 01:46:29.588: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:46:29.588: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:46:29.588: INFO: konnectivity-agent-6dd87768b6-5jd76 from kube-system started at 2023-02-09 00:41:56 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.588: INFO: 	Container konnectivity-agent ready: true, restart count 0
Feb  9 01:46:29.588: INFO: kube-proxy-tkwb2 from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.588: INFO: 	Container kube-proxy ready: true, restart count 0
Feb  9 01:46:29.588: INFO: metrics-server-5f6654d4df-mqppz from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
Feb  9 01:46:29.588: INFO: 	Container metrics-server ready: true, restart count 0
Feb  9 01:46:29.588: INFO: 	Container metrics-server-vpa ready: true, restart count 0
Feb  9 01:46:29.588: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-hktzz from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:46:29.588: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:46:29.588: INFO: 	Container systemd-logs ready: true, restart count 0
Feb  9 01:46:29.588: INFO: 
Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000002 before test
Feb  9 01:46:29.599: INFO: azure-ip-masq-agent-g85z9 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.599: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Feb  9 01:46:29.599: INFO: cloud-node-manager-2mppx from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.599: INFO: 	Container cloud-node-manager ready: true, restart count 0
Feb  9 01:46:29.599: INFO: coredns-78669d9946-nmkmm from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.599: INFO: 	Container coredns ready: true, restart count 0
Feb  9 01:46:29.599: INFO: csi-azuredisk-node-drwdg from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
Feb  9 01:46:29.599: INFO: 	Container azuredisk ready: true, restart count 0
Feb  9 01:46:29.599: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:46:29.599: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:46:29.599: INFO: csi-azurefile-node-j6wh8 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
Feb  9 01:46:29.599: INFO: 	Container azurefile ready: true, restart count 0
Feb  9 01:46:29.599: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:46:29.599: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:46:29.599: INFO: konnectivity-agent-6dd87768b6-4wblz from kube-system started at 2023-02-09 00:41:54 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.599: INFO: 	Container konnectivity-agent ready: true, restart count 0
Feb  9 01:46:29.599: INFO: kube-proxy-k97mw from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.599: INFO: 	Container kube-proxy ready: true, restart count 0
Feb  9 01:46:29.599: INFO: metrics-server-5f6654d4df-cp5km from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
Feb  9 01:46:29.599: INFO: 	Container metrics-server ready: true, restart count 0
Feb  9 01:46:29.599: INFO: 	Container metrics-server-vpa ready: true, restart count 0
Feb  9 01:46:29.599: INFO: sonobuoy from sonobuoy started at 2023-02-09 00:26:49 +0000 UTC (1 container statuses recorded)
Feb  9 01:46:29.599: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Feb  9 01:46:29.599: INFO: sonobuoy-e2e-job-2cb73ed04ae14ea3 from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:46:29.599: INFO: 	Container e2e ready: true, restart count 0
Feb  9 01:46:29.599: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:46:29.599: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-snxjd from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:46:29.599: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:46:29.599: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704
STEP: Trying to launch a pod without a label to get a node which can launch it. 02/09/23 01:46:29.599
Feb  9 01:46:29.611: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-7540" to be "running"
Feb  9 01:46:29.617: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 6.04372ms
Feb  9 01:46:31.624: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.012645576s
Feb  9 01:46:31.624: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 02/09/23 01:46:31.63
STEP: Trying to apply a random label on the found node. 02/09/23 01:46:31.652
STEP: verifying the node has the label kubernetes.io/e2e-e8a439d8-b03a-42a4-b60d-fa95ae0e6f0e 95 02/09/23 01:46:31.668
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled 02/09/23 01:46:31.674
Feb  9 01:46:31.682: INFO: Waiting up to 5m0s for pod "pod4" in namespace "sched-pred-7540" to be "not pending"
Feb  9 01:46:31.687: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.668119ms
Feb  9 01:46:33.694: INFO: Pod "pod4": Phase="Running", Reason="", readiness=true. Elapsed: 2.011870074s
Feb  9 01:46:33.694: INFO: Pod "pod4" satisfied condition "not pending"
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.224.0.4 on the node which pod4 resides and expect not scheduled 02/09/23 01:46:33.694
Feb  9 01:46:33.702: INFO: Waiting up to 5m0s for pod "pod5" in namespace "sched-pred-7540" to be "not pending"
Feb  9 01:46:33.708: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5.568519ms
Feb  9 01:46:35.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013472493s
Feb  9 01:46:37.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013455224s
Feb  9 01:46:39.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.012533047s
Feb  9 01:46:41.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.012059568s
Feb  9 01:46:43.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.012251152s
Feb  9 01:46:45.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.01226935s
Feb  9 01:46:47.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 14.012148246s
Feb  9 01:46:49.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 16.012418144s
Feb  9 01:46:51.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.013522331s
Feb  9 01:46:53.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 20.012716204s
Feb  9 01:46:55.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.01275008s
Feb  9 01:46:57.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 24.013055058s
Feb  9 01:46:59.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 26.012654218s
Feb  9 01:47:01.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 28.0132015s
Feb  9 01:47:03.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 30.013110278s
Feb  9 01:47:05.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 32.012383353s
Feb  9 01:47:07.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 34.012944231s
Feb  9 01:47:09.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 36.013954098s
Feb  9 01:47:11.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 38.011165145s
Feb  9 01:47:13.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 40.012313413s
Feb  9 01:47:15.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 42.01345123s
Feb  9 01:47:17.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 44.013114799s
Feb  9 01:47:19.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 46.012719434s
Feb  9 01:47:21.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 48.012271248s
Feb  9 01:47:23.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 50.012300236s
Feb  9 01:47:25.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 52.012970182s
Feb  9 01:47:27.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 54.013514128s
Feb  9 01:47:29.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 56.01265267s
Feb  9 01:47:31.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 58.012761439s
Feb  9 01:47:33.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.011593732s
Feb  9 01:47:35.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.012516728s
Feb  9 01:47:37.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.012337623s
Feb  9 01:47:39.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.012726481s
Feb  9 01:47:41.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.012264776s
Feb  9 01:47:43.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.011434171s
Feb  9 01:47:45.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.012778773s
Feb  9 01:47:47.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.012466733s
Feb  9 01:47:49.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.01293019s
Feb  9 01:47:51.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.011967242s
Feb  9 01:47:53.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.011590896s
Feb  9 01:47:55.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.012586036s
Feb  9 01:47:57.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.013093243s
Feb  9 01:47:59.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.012110044s
Feb  9 01:48:01.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.012961153s
Feb  9 01:48:03.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.012248651s
Feb  9 01:48:05.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.012107231s
Feb  9 01:48:07.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.012810816s
Feb  9 01:48:09.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.012302095s
Feb  9 01:48:11.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.011787061s
Feb  9 01:48:13.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.013177751s
Feb  9 01:48:15.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.012218632s
Feb  9 01:48:17.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.012237416s
Feb  9 01:48:19.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.012813438s
Feb  9 01:48:21.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.012030181s
Feb  9 01:48:23.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.011859427s
Feb  9 01:48:25.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.012210774s
Feb  9 01:48:27.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.012916475s
Feb  9 01:48:29.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.012990404s
Feb  9 01:48:31.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.013498234s
Feb  9 01:48:33.717: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.014271266s
Feb  9 01:48:35.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m2.012441989s
Feb  9 01:48:37.717: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m4.014427744s
Feb  9 01:48:39.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m6.01253898s
Feb  9 01:48:41.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m8.012048422s
Feb  9 01:48:43.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m10.01226759s
Feb  9 01:48:45.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m12.012031596s
Feb  9 01:48:47.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m14.012623107s
Feb  9 01:48:49.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m16.011820975s
Feb  9 01:48:51.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m18.011854789s
Feb  9 01:48:53.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m20.012633131s
Feb  9 01:48:55.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m22.013427974s
Feb  9 01:48:57.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m24.013740414s
Feb  9 01:48:59.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m26.013183483s
Feb  9 01:49:01.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m28.012606597s
Feb  9 01:49:03.717: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m30.014324923s
Feb  9 01:49:05.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m32.012415929s
Feb  9 01:49:07.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m34.01283587s
Feb  9 01:49:09.721: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m36.018440085s
Feb  9 01:49:11.721: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m38.018692359s
Feb  9 01:49:13.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m40.011833807s
Feb  9 01:49:15.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m42.011635149s
Feb  9 01:49:17.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m44.013178481s
Feb  9 01:49:19.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m46.01196541s
Feb  9 01:49:21.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m48.013630759s
Feb  9 01:49:23.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m50.012476528s
Feb  9 01:49:25.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m52.013884816s
Feb  9 01:49:27.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m54.012910289s
Feb  9 01:49:29.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m56.012567265s
Feb  9 01:49:31.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m58.012802313s
Feb  9 01:49:33.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m0.012406456s
Feb  9 01:49:35.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m2.011882595s
Feb  9 01:49:37.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m4.011992557s
Feb  9 01:49:39.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m6.011966408s
Feb  9 01:49:41.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m8.011951657s
Feb  9 01:49:43.721: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m10.018253461s
Feb  9 01:49:45.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m12.012963097s
Feb  9 01:49:47.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m14.013453402s
Feb  9 01:49:49.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m16.011895517s
Feb  9 01:49:51.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m18.013631363s
Feb  9 01:49:53.718: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m20.015317508s
Feb  9 01:49:55.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m22.012465325s
Feb  9 01:49:57.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m24.013727546s
Feb  9 01:49:59.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m26.012114955s
Feb  9 01:50:01.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m28.012365237s
Feb  9 01:50:03.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m30.012011174s
Feb  9 01:50:05.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m32.01217436s
Feb  9 01:50:07.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m34.012915269s
Feb  9 01:50:09.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m36.012245323s
Feb  9 01:50:11.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m38.012852676s
Feb  9 01:50:13.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m40.011638804s
Feb  9 01:50:15.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m42.012569691s
Feb  9 01:50:17.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m44.011567973s
Feb  9 01:50:19.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m46.012054715s
Feb  9 01:50:21.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m48.013231061s
Feb  9 01:50:23.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m50.01250084s
Feb  9 01:50:25.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m52.011730979s
Feb  9 01:50:27.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m54.013066512s
Feb  9 01:50:29.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m56.011701519s
Feb  9 01:50:31.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m58.012946821s
Feb  9 01:50:33.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m0.013511398s
Feb  9 01:50:35.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m2.013220611s
Feb  9 01:50:37.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m4.013055443s
Feb  9 01:50:39.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m6.012500755s
Feb  9 01:50:41.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m8.012354383s
Feb  9 01:50:43.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m10.012000905s
Feb  9 01:50:45.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m12.012054133s
Feb  9 01:50:47.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m14.012967791s
Feb  9 01:50:49.717: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m16.01473288s
Feb  9 01:50:51.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m18.013533248s
Feb  9 01:50:53.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m20.011993005s
Feb  9 01:50:55.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m22.012220924s
Feb  9 01:50:57.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m24.012255694s
Feb  9 01:50:59.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m26.012220541s
Feb  9 01:51:01.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m28.011267954s
Feb  9 01:51:03.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m30.012325824s
Feb  9 01:51:05.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m32.012451345s
Feb  9 01:51:07.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m34.012466962s
Feb  9 01:51:09.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m36.012833364s
Feb  9 01:51:11.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m38.011866228s
Feb  9 01:51:13.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m40.012701943s
Feb  9 01:51:15.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m42.012752757s
Feb  9 01:51:17.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m44.011864126s
Feb  9 01:51:19.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m46.012183731s
Feb  9 01:51:21.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m48.012047522s
Feb  9 01:51:23.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m50.011477117s
Feb  9 01:51:25.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m52.012448093s
Feb  9 01:51:27.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m54.013653475s
Feb  9 01:51:29.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m56.012069007s
Feb  9 01:51:31.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m58.011964744s
Feb  9 01:51:33.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.012025475s
Feb  9 01:51:33.720: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.017638014s
STEP: removing the label kubernetes.io/e2e-e8a439d8-b03a-42a4-b60d-fa95ae0e6f0e off the node aks-nodes-15799032-vmss000000 02/09/23 01:51:33.72
STEP: verifying the node doesn't have the label kubernetes.io/e2e-e8a439d8-b03a-42a4-b60d-fa95ae0e6f0e 02/09/23 01:51:33.744
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:51:33.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-7540" for this suite. 02/09/23 01:51:33.759
------------------------------
â€¢ [SLOW TEST] [304.251 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:46:29.517
    Feb  9 01:46:29.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename sched-pred 02/09/23 01:46:29.518
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:46:29.537
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:46:29.545
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Feb  9 01:46:29.550: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Feb  9 01:46:29.562: INFO: Waiting for terminating namespaces to be deleted...
    Feb  9 01:46:29.567: INFO: 
    Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000000 before test
    Feb  9 01:46:29.579: INFO: azure-ip-masq-agent-26zqc from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.579: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
    Feb  9 01:46:29.579: INFO: cloud-node-manager-khkh5 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.579: INFO: 	Container cloud-node-manager ready: true, restart count 0
    Feb  9 01:46:29.579: INFO: csi-azuredisk-node-f98f4 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
    Feb  9 01:46:29.579: INFO: 	Container azuredisk ready: true, restart count 0
    Feb  9 01:46:29.579: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:46:29.579: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:46:29.579: INFO: csi-azurefile-node-kd8lb from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
    Feb  9 01:46:29.579: INFO: 	Container azurefile ready: true, restart count 0
    Feb  9 01:46:29.579: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:46:29.579: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:46:29.579: INFO: kube-proxy-hznqr from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.579: INFO: 	Container kube-proxy ready: true, restart count 0
    Feb  9 01:46:29.579: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-ccznv from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:46:29.579: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:46:29.579: INFO: 	Container systemd-logs ready: true, restart count 0
    Feb  9 01:46:29.579: INFO: taint-eviction-4 from taint-single-pod-8718 started at 2023-02-09 01:45:14 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.579: INFO: 	Container pause ready: true, restart count 0
    Feb  9 01:46:29.579: INFO: 
    Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000001 before test
    Feb  9 01:46:29.588: INFO: azure-ip-masq-agent-9z68l from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.588: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: cloud-node-manager-5mlpp from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.588: INFO: 	Container cloud-node-manager ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: coredns-78669d9946-89dxb from kube-system started at 2023-02-09 00:22:29 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.588: INFO: 	Container coredns ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: coredns-autoscaler-5b5c4f5b4f-9tnqp from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.588: INFO: 	Container autoscaler ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: csi-azuredisk-node-6tghn from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
    Feb  9 01:46:29.588: INFO: 	Container azuredisk ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: csi-azurefile-node-cgcmb from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
    Feb  9 01:46:29.588: INFO: 	Container azurefile ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: konnectivity-agent-6dd87768b6-5jd76 from kube-system started at 2023-02-09 00:41:56 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.588: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: kube-proxy-tkwb2 from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.588: INFO: 	Container kube-proxy ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: metrics-server-5f6654d4df-mqppz from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
    Feb  9 01:46:29.588: INFO: 	Container metrics-server ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: 	Container metrics-server-vpa ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-hktzz from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:46:29.588: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: 	Container systemd-logs ready: true, restart count 0
    Feb  9 01:46:29.588: INFO: 
    Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000002 before test
    Feb  9 01:46:29.599: INFO: azure-ip-masq-agent-g85z9 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.599: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: cloud-node-manager-2mppx from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.599: INFO: 	Container cloud-node-manager ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: coredns-78669d9946-nmkmm from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.599: INFO: 	Container coredns ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: csi-azuredisk-node-drwdg from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
    Feb  9 01:46:29.599: INFO: 	Container azuredisk ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: csi-azurefile-node-j6wh8 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
    Feb  9 01:46:29.599: INFO: 	Container azurefile ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: konnectivity-agent-6dd87768b6-4wblz from kube-system started at 2023-02-09 00:41:54 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.599: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: kube-proxy-k97mw from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.599: INFO: 	Container kube-proxy ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: metrics-server-5f6654d4df-cp5km from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
    Feb  9 01:46:29.599: INFO: 	Container metrics-server ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: 	Container metrics-server-vpa ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: sonobuoy from sonobuoy started at 2023-02-09 00:26:49 +0000 UTC (1 container statuses recorded)
    Feb  9 01:46:29.599: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: sonobuoy-e2e-job-2cb73ed04ae14ea3 from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:46:29.599: INFO: 	Container e2e ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-snxjd from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:46:29.599: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:46:29.599: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
      test/e2e/scheduling/predicates.go:704
    STEP: Trying to launch a pod without a label to get a node which can launch it. 02/09/23 01:46:29.599
    Feb  9 01:46:29.611: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-7540" to be "running"
    Feb  9 01:46:29.617: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 6.04372ms
    Feb  9 01:46:31.624: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.012645576s
    Feb  9 01:46:31.624: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 02/09/23 01:46:31.63
    STEP: Trying to apply a random label on the found node. 02/09/23 01:46:31.652
    STEP: verifying the node has the label kubernetes.io/e2e-e8a439d8-b03a-42a4-b60d-fa95ae0e6f0e 95 02/09/23 01:46:31.668
    STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled 02/09/23 01:46:31.674
    Feb  9 01:46:31.682: INFO: Waiting up to 5m0s for pod "pod4" in namespace "sched-pred-7540" to be "not pending"
    Feb  9 01:46:31.687: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.668119ms
    Feb  9 01:46:33.694: INFO: Pod "pod4": Phase="Running", Reason="", readiness=true. Elapsed: 2.011870074s
    Feb  9 01:46:33.694: INFO: Pod "pod4" satisfied condition "not pending"
    STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.224.0.4 on the node which pod4 resides and expect not scheduled 02/09/23 01:46:33.694
    Feb  9 01:46:33.702: INFO: Waiting up to 5m0s for pod "pod5" in namespace "sched-pred-7540" to be "not pending"
    Feb  9 01:46:33.708: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5.568519ms
    Feb  9 01:46:35.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013472493s
    Feb  9 01:46:37.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013455224s
    Feb  9 01:46:39.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.012533047s
    Feb  9 01:46:41.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.012059568s
    Feb  9 01:46:43.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.012251152s
    Feb  9 01:46:45.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.01226935s
    Feb  9 01:46:47.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 14.012148246s
    Feb  9 01:46:49.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 16.012418144s
    Feb  9 01:46:51.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.013522331s
    Feb  9 01:46:53.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 20.012716204s
    Feb  9 01:46:55.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.01275008s
    Feb  9 01:46:57.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 24.013055058s
    Feb  9 01:46:59.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 26.012654218s
    Feb  9 01:47:01.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 28.0132015s
    Feb  9 01:47:03.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 30.013110278s
    Feb  9 01:47:05.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 32.012383353s
    Feb  9 01:47:07.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 34.012944231s
    Feb  9 01:47:09.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 36.013954098s
    Feb  9 01:47:11.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 38.011165145s
    Feb  9 01:47:13.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 40.012313413s
    Feb  9 01:47:15.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 42.01345123s
    Feb  9 01:47:17.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 44.013114799s
    Feb  9 01:47:19.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 46.012719434s
    Feb  9 01:47:21.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 48.012271248s
    Feb  9 01:47:23.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 50.012300236s
    Feb  9 01:47:25.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 52.012970182s
    Feb  9 01:47:27.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 54.013514128s
    Feb  9 01:47:29.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 56.01265267s
    Feb  9 01:47:31.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 58.012761439s
    Feb  9 01:47:33.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.011593732s
    Feb  9 01:47:35.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.012516728s
    Feb  9 01:47:37.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.012337623s
    Feb  9 01:47:39.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.012726481s
    Feb  9 01:47:41.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.012264776s
    Feb  9 01:47:43.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.011434171s
    Feb  9 01:47:45.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.012778773s
    Feb  9 01:47:47.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.012466733s
    Feb  9 01:47:49.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.01293019s
    Feb  9 01:47:51.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.011967242s
    Feb  9 01:47:53.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.011590896s
    Feb  9 01:47:55.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.012586036s
    Feb  9 01:47:57.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.013093243s
    Feb  9 01:47:59.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.012110044s
    Feb  9 01:48:01.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.012961153s
    Feb  9 01:48:03.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.012248651s
    Feb  9 01:48:05.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.012107231s
    Feb  9 01:48:07.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.012810816s
    Feb  9 01:48:09.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.012302095s
    Feb  9 01:48:11.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.011787061s
    Feb  9 01:48:13.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.013177751s
    Feb  9 01:48:15.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.012218632s
    Feb  9 01:48:17.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.012237416s
    Feb  9 01:48:19.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.012813438s
    Feb  9 01:48:21.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.012030181s
    Feb  9 01:48:23.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.011859427s
    Feb  9 01:48:25.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.012210774s
    Feb  9 01:48:27.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.012916475s
    Feb  9 01:48:29.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.012990404s
    Feb  9 01:48:31.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.013498234s
    Feb  9 01:48:33.717: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.014271266s
    Feb  9 01:48:35.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m2.012441989s
    Feb  9 01:48:37.717: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m4.014427744s
    Feb  9 01:48:39.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m6.01253898s
    Feb  9 01:48:41.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m8.012048422s
    Feb  9 01:48:43.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m10.01226759s
    Feb  9 01:48:45.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m12.012031596s
    Feb  9 01:48:47.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m14.012623107s
    Feb  9 01:48:49.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m16.011820975s
    Feb  9 01:48:51.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m18.011854789s
    Feb  9 01:48:53.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m20.012633131s
    Feb  9 01:48:55.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m22.013427974s
    Feb  9 01:48:57.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m24.013740414s
    Feb  9 01:48:59.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m26.013183483s
    Feb  9 01:49:01.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m28.012606597s
    Feb  9 01:49:03.717: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m30.014324923s
    Feb  9 01:49:05.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m32.012415929s
    Feb  9 01:49:07.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m34.01283587s
    Feb  9 01:49:09.721: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m36.018440085s
    Feb  9 01:49:11.721: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m38.018692359s
    Feb  9 01:49:13.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m40.011833807s
    Feb  9 01:49:15.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m42.011635149s
    Feb  9 01:49:17.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m44.013178481s
    Feb  9 01:49:19.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m46.01196541s
    Feb  9 01:49:21.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m48.013630759s
    Feb  9 01:49:23.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m50.012476528s
    Feb  9 01:49:25.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m52.013884816s
    Feb  9 01:49:27.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m54.012910289s
    Feb  9 01:49:29.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m56.012567265s
    Feb  9 01:49:31.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m58.012802313s
    Feb  9 01:49:33.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m0.012406456s
    Feb  9 01:49:35.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m2.011882595s
    Feb  9 01:49:37.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m4.011992557s
    Feb  9 01:49:39.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m6.011966408s
    Feb  9 01:49:41.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m8.011951657s
    Feb  9 01:49:43.721: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m10.018253461s
    Feb  9 01:49:45.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m12.012963097s
    Feb  9 01:49:47.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m14.013453402s
    Feb  9 01:49:49.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m16.011895517s
    Feb  9 01:49:51.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m18.013631363s
    Feb  9 01:49:53.718: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m20.015317508s
    Feb  9 01:49:55.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m22.012465325s
    Feb  9 01:49:57.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m24.013727546s
    Feb  9 01:49:59.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m26.012114955s
    Feb  9 01:50:01.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m28.012365237s
    Feb  9 01:50:03.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m30.012011174s
    Feb  9 01:50:05.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m32.01217436s
    Feb  9 01:50:07.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m34.012915269s
    Feb  9 01:50:09.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m36.012245323s
    Feb  9 01:50:11.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m38.012852676s
    Feb  9 01:50:13.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m40.011638804s
    Feb  9 01:50:15.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m42.012569691s
    Feb  9 01:50:17.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m44.011567973s
    Feb  9 01:50:19.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m46.012054715s
    Feb  9 01:50:21.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m48.013231061s
    Feb  9 01:50:23.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m50.01250084s
    Feb  9 01:50:25.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m52.011730979s
    Feb  9 01:50:27.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m54.013066512s
    Feb  9 01:50:29.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m56.011701519s
    Feb  9 01:50:31.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m58.012946821s
    Feb  9 01:50:33.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m0.013511398s
    Feb  9 01:50:35.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m2.013220611s
    Feb  9 01:50:37.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m4.013055443s
    Feb  9 01:50:39.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m6.012500755s
    Feb  9 01:50:41.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m8.012354383s
    Feb  9 01:50:43.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m10.012000905s
    Feb  9 01:50:45.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m12.012054133s
    Feb  9 01:50:47.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m14.012967791s
    Feb  9 01:50:49.717: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m16.01473288s
    Feb  9 01:50:51.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m18.013533248s
    Feb  9 01:50:53.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m20.011993005s
    Feb  9 01:50:55.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m22.012220924s
    Feb  9 01:50:57.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m24.012255694s
    Feb  9 01:50:59.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m26.012220541s
    Feb  9 01:51:01.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m28.011267954s
    Feb  9 01:51:03.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m30.012325824s
    Feb  9 01:51:05.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m32.012451345s
    Feb  9 01:51:07.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m34.012466962s
    Feb  9 01:51:09.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m36.012833364s
    Feb  9 01:51:11.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m38.011866228s
    Feb  9 01:51:13.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m40.012701943s
    Feb  9 01:51:15.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m42.012752757s
    Feb  9 01:51:17.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m44.011864126s
    Feb  9 01:51:19.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m46.012183731s
    Feb  9 01:51:21.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m48.012047522s
    Feb  9 01:51:23.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m50.011477117s
    Feb  9 01:51:25.715: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m52.012448093s
    Feb  9 01:51:27.716: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m54.013653475s
    Feb  9 01:51:29.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m56.012069007s
    Feb  9 01:51:31.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m58.011964744s
    Feb  9 01:51:33.714: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.012025475s
    Feb  9 01:51:33.720: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.017638014s
    STEP: removing the label kubernetes.io/e2e-e8a439d8-b03a-42a4-b60d-fa95ae0e6f0e off the node aks-nodes-15799032-vmss000000 02/09/23 01:51:33.72
    STEP: verifying the node doesn't have the label kubernetes.io/e2e-e8a439d8-b03a-42a4-b60d-fa95ae0e6f0e 02/09/23 01:51:33.744
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:51:33.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-7540" for this suite. 02/09/23 01:51:33.759
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance]
  will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:51:33.771
Feb  9 01:51:33.771: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename ephemeral-containers-test 02/09/23 01:51:33.772
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:33.796
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:33.801
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/common/node/ephemeral_containers.go:38
[It] will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45
STEP: creating a target pod 02/09/23 01:51:33.805
Feb  9 01:51:33.821: INFO: Waiting up to 5m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-2710" to be "running and ready"
Feb  9 01:51:33.829: INFO: Pod "ephemeral-containers-target-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 8.275507ms
Feb  9 01:51:33.829: INFO: The phase of Pod ephemeral-containers-target-pod is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:51:35.836: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.015350952s
Feb  9 01:51:35.836: INFO: The phase of Pod ephemeral-containers-target-pod is Running (Ready = true)
Feb  9 01:51:35.836: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "running and ready"
STEP: adding an ephemeral container 02/09/23 01:51:35.842
Feb  9 01:51:35.859: INFO: Waiting up to 1m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-2710" to be "container debugger running"
Feb  9 01:51:35.865: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 5.331361ms
Feb  9 01:51:37.872: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.012359494s
Feb  9 01:51:39.872: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.012718603s
Feb  9 01:51:39.872: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "container debugger running"
STEP: checking pod container endpoints 02/09/23 01:51:39.872
Feb  9 01:51:39.872: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2710 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Feb  9 01:51:39.872: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:51:39.872: INFO: ExecWithOptions: Clientset creation
Feb  9 01:51:39.873: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/ephemeral-containers-test-2710/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
Feb  9 01:51:39.959: INFO: Exec stderr: ""
[AfterEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:51:39.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "ephemeral-containers-test-2710" for this suite. 02/09/23 01:51:39.979
------------------------------
â€¢ [SLOW TEST] [6.217 seconds]
[sig-node] Ephemeral Containers [NodeConformance]
test/e2e/common/node/framework.go:23
  will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:51:33.771
    Feb  9 01:51:33.771: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename ephemeral-containers-test 02/09/23 01:51:33.772
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:33.796
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:33.801
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/common/node/ephemeral_containers.go:38
    [It] will start an ephemeral container in an existing pod [Conformance]
      test/e2e/common/node/ephemeral_containers.go:45
    STEP: creating a target pod 02/09/23 01:51:33.805
    Feb  9 01:51:33.821: INFO: Waiting up to 5m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-2710" to be "running and ready"
    Feb  9 01:51:33.829: INFO: Pod "ephemeral-containers-target-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 8.275507ms
    Feb  9 01:51:33.829: INFO: The phase of Pod ephemeral-containers-target-pod is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:51:35.836: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.015350952s
    Feb  9 01:51:35.836: INFO: The phase of Pod ephemeral-containers-target-pod is Running (Ready = true)
    Feb  9 01:51:35.836: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "running and ready"
    STEP: adding an ephemeral container 02/09/23 01:51:35.842
    Feb  9 01:51:35.859: INFO: Waiting up to 1m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-2710" to be "container debugger running"
    Feb  9 01:51:35.865: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 5.331361ms
    Feb  9 01:51:37.872: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.012359494s
    Feb  9 01:51:39.872: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.012718603s
    Feb  9 01:51:39.872: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "container debugger running"
    STEP: checking pod container endpoints 02/09/23 01:51:39.872
    Feb  9 01:51:39.872: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2710 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Feb  9 01:51:39.872: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:51:39.872: INFO: ExecWithOptions: Clientset creation
    Feb  9 01:51:39.873: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/ephemeral-containers-test-2710/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
    Feb  9 01:51:39.959: INFO: Exec stderr: ""
    [AfterEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:51:39.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "ephemeral-containers-test-2710" for this suite. 02/09/23 01:51:39.979
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:51:39.989
Feb  9 01:51:39.989: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename secrets 02/09/23 01:51:39.99
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:40.009
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:40.013
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95
STEP: creating secret secrets-9590/secret-test-b8d66143-0350-41bd-aebf-b892d4e8b10d 02/09/23 01:51:40.018
STEP: Creating a pod to test consume secrets 02/09/23 01:51:40.024
Feb  9 01:51:40.036: INFO: Waiting up to 5m0s for pod "pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129" in namespace "secrets-9590" to be "Succeeded or Failed"
Feb  9 01:51:40.043: INFO: Pod "pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129": Phase="Pending", Reason="", readiness=false. Elapsed: 7.31582ms
Feb  9 01:51:42.050: INFO: Pod "pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013596038s
Feb  9 01:51:44.051: INFO: Pod "pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015096614s
STEP: Saw pod success 02/09/23 01:51:44.051
Feb  9 01:51:44.051: INFO: Pod "pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129" satisfied condition "Succeeded or Failed"
Feb  9 01:51:44.057: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129 container env-test: <nil>
STEP: delete the pod 02/09/23 01:51:44.071
Feb  9 01:51:44.085: INFO: Waiting for pod pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129 to disappear
Feb  9 01:51:44.091: INFO: Pod pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Feb  9 01:51:44.091: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-9590" for this suite. 02/09/23 01:51:44.1
------------------------------
â€¢ [4.119 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:51:39.989
    Feb  9 01:51:39.989: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename secrets 02/09/23 01:51:39.99
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:40.009
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:40.013
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via the environment [NodeConformance] [Conformance]
      test/e2e/common/node/secrets.go:95
    STEP: creating secret secrets-9590/secret-test-b8d66143-0350-41bd-aebf-b892d4e8b10d 02/09/23 01:51:40.018
    STEP: Creating a pod to test consume secrets 02/09/23 01:51:40.024
    Feb  9 01:51:40.036: INFO: Waiting up to 5m0s for pod "pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129" in namespace "secrets-9590" to be "Succeeded or Failed"
    Feb  9 01:51:40.043: INFO: Pod "pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129": Phase="Pending", Reason="", readiness=false. Elapsed: 7.31582ms
    Feb  9 01:51:42.050: INFO: Pod "pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013596038s
    Feb  9 01:51:44.051: INFO: Pod "pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015096614s
    STEP: Saw pod success 02/09/23 01:51:44.051
    Feb  9 01:51:44.051: INFO: Pod "pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129" satisfied condition "Succeeded or Failed"
    Feb  9 01:51:44.057: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129 container env-test: <nil>
    STEP: delete the pod 02/09/23 01:51:44.071
    Feb  9 01:51:44.085: INFO: Waiting for pod pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129 to disappear
    Feb  9 01:51:44.091: INFO: Pod pod-configmaps-2709ec05-2697-4b07-bacb-807fd22a8129 no longer exists
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:51:44.091: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-9590" for this suite. 02/09/23 01:51:44.1
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:51:44.111
Feb  9 01:51:44.111: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:51:44.112
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:44.138
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:44.142
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:51:44.147
Feb  9 01:51:44.159: INFO: Waiting up to 5m0s for pod "downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5" in namespace "downward-api-9591" to be "Succeeded or Failed"
Feb  9 01:51:44.165: INFO: Pod "downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5": Phase="Pending", Reason="", readiness=false. Elapsed: 5.539166ms
Feb  9 01:51:46.172: INFO: Pod "downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012786014s
Feb  9 01:51:48.172: INFO: Pod "downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012478534s
STEP: Saw pod success 02/09/23 01:51:48.172
Feb  9 01:51:48.172: INFO: Pod "downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5" satisfied condition "Succeeded or Failed"
Feb  9 01:51:48.178: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5 container client-container: <nil>
STEP: delete the pod 02/09/23 01:51:48.192
Feb  9 01:51:48.206: INFO: Waiting for pod downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5 to disappear
Feb  9 01:51:48.211: INFO: Pod downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Feb  9 01:51:48.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-9591" for this suite. 02/09/23 01:51:48.22
------------------------------
â€¢ [4.118 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:51:44.111
    Feb  9 01:51:44.111: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:51:44.112
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:44.138
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:44.142
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:84
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:51:44.147
    Feb  9 01:51:44.159: INFO: Waiting up to 5m0s for pod "downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5" in namespace "downward-api-9591" to be "Succeeded or Failed"
    Feb  9 01:51:44.165: INFO: Pod "downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5": Phase="Pending", Reason="", readiness=false. Elapsed: 5.539166ms
    Feb  9 01:51:46.172: INFO: Pod "downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012786014s
    Feb  9 01:51:48.172: INFO: Pod "downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012478534s
    STEP: Saw pod success 02/09/23 01:51:48.172
    Feb  9 01:51:48.172: INFO: Pod "downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5" satisfied condition "Succeeded or Failed"
    Feb  9 01:51:48.178: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5 container client-container: <nil>
    STEP: delete the pod 02/09/23 01:51:48.192
    Feb  9 01:51:48.206: INFO: Waiting for pod downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5 to disappear
    Feb  9 01:51:48.211: INFO: Pod downwardapi-volume-9cbd0c93-a3b4-4e15-852d-8fb25830e4a5 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:51:48.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-9591" for this suite. 02/09/23 01:51:48.22
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:51:48.23
Feb  9 01:51:48.230: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename cronjob 02/09/23 01:51:48.231
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:48.25
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:48.255
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319
STEP: Creating a cronjob 02/09/23 01:51:48.259
STEP: creating 02/09/23 01:51:48.259
STEP: getting 02/09/23 01:51:48.267
STEP: listing 02/09/23 01:51:48.273
STEP: watching 02/09/23 01:51:48.279
Feb  9 01:51:48.279: INFO: starting watch
STEP: cluster-wide listing 02/09/23 01:51:48.281
STEP: cluster-wide watching 02/09/23 01:51:48.287
Feb  9 01:51:48.287: INFO: starting watch
STEP: patching 02/09/23 01:51:48.289
STEP: updating 02/09/23 01:51:48.296
Feb  9 01:51:48.310: INFO: waiting for watch events with expected annotations
Feb  9 01:51:48.310: INFO: saw patched and updated annotations
STEP: patching /status 02/09/23 01:51:48.31
STEP: updating /status 02/09/23 01:51:48.317
STEP: get /status 02/09/23 01:51:48.333
STEP: deleting 02/09/23 01:51:48.345
STEP: deleting a collection 02/09/23 01:51:48.374
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Feb  9 01:51:48.393: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-3583" for this suite. 02/09/23 01:51:48.399
------------------------------
â€¢ [0.178 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:51:48.23
    Feb  9 01:51:48.230: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename cronjob 02/09/23 01:51:48.231
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:48.25
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:48.255
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CronJob API operations [Conformance]
      test/e2e/apps/cronjob.go:319
    STEP: Creating a cronjob 02/09/23 01:51:48.259
    STEP: creating 02/09/23 01:51:48.259
    STEP: getting 02/09/23 01:51:48.267
    STEP: listing 02/09/23 01:51:48.273
    STEP: watching 02/09/23 01:51:48.279
    Feb  9 01:51:48.279: INFO: starting watch
    STEP: cluster-wide listing 02/09/23 01:51:48.281
    STEP: cluster-wide watching 02/09/23 01:51:48.287
    Feb  9 01:51:48.287: INFO: starting watch
    STEP: patching 02/09/23 01:51:48.289
    STEP: updating 02/09/23 01:51:48.296
    Feb  9 01:51:48.310: INFO: waiting for watch events with expected annotations
    Feb  9 01:51:48.310: INFO: saw patched and updated annotations
    STEP: patching /status 02/09/23 01:51:48.31
    STEP: updating /status 02/09/23 01:51:48.317
    STEP: get /status 02/09/23 01:51:48.333
    STEP: deleting 02/09/23 01:51:48.345
    STEP: deleting a collection 02/09/23 01:51:48.374
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:51:48.393: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-3583" for this suite. 02/09/23 01:51:48.399
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:51:48.411
Feb  9 01:51:48.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename var-expansion 02/09/23 01:51:48.412
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:48.437
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:48.442
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73
STEP: Creating a pod to test substitution in container's command 02/09/23 01:51:48.446
Feb  9 01:51:48.461: INFO: Waiting up to 5m0s for pod "var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97" in namespace "var-expansion-1050" to be "Succeeded or Failed"
Feb  9 01:51:48.467: INFO: Pod "var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97": Phase="Pending", Reason="", readiness=false. Elapsed: 5.34026ms
Feb  9 01:51:50.473: INFO: Pod "var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011979388s
Feb  9 01:51:52.473: INFO: Pod "var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011662108s
STEP: Saw pod success 02/09/23 01:51:52.473
Feb  9 01:51:52.473: INFO: Pod "var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97" satisfied condition "Succeeded or Failed"
Feb  9 01:51:52.479: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97 container dapi-container: <nil>
STEP: delete the pod 02/09/23 01:51:52.493
Feb  9 01:51:52.512: INFO: Waiting for pod var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97 to disappear
Feb  9 01:51:52.518: INFO: Pod var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Feb  9 01:51:52.518: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-1050" for this suite. 02/09/23 01:51:52.526
------------------------------
â€¢ [4.125 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:51:48.411
    Feb  9 01:51:48.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename var-expansion 02/09/23 01:51:48.412
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:48.437
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:48.442
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a container's command [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:73
    STEP: Creating a pod to test substitution in container's command 02/09/23 01:51:48.446
    Feb  9 01:51:48.461: INFO: Waiting up to 5m0s for pod "var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97" in namespace "var-expansion-1050" to be "Succeeded or Failed"
    Feb  9 01:51:48.467: INFO: Pod "var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97": Phase="Pending", Reason="", readiness=false. Elapsed: 5.34026ms
    Feb  9 01:51:50.473: INFO: Pod "var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011979388s
    Feb  9 01:51:52.473: INFO: Pod "var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011662108s
    STEP: Saw pod success 02/09/23 01:51:52.473
    Feb  9 01:51:52.473: INFO: Pod "var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97" satisfied condition "Succeeded or Failed"
    Feb  9 01:51:52.479: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97 container dapi-container: <nil>
    STEP: delete the pod 02/09/23 01:51:52.493
    Feb  9 01:51:52.512: INFO: Waiting for pod var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97 to disappear
    Feb  9 01:51:52.518: INFO: Pod var-expansion-855f69a1-369b-4a4f-ba60-4b85fcb18a97 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:51:52.518: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-1050" for this suite. 02/09/23 01:51:52.526
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:51:52.539
Feb  9 01:51:52.540: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename dns 02/09/23 01:51:52.54
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:52.56
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:52.564
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248
STEP: Creating a test headless service 02/09/23 01:51:52.569
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6252.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-6252.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
 02/09/23 01:51:52.575
STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6252.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6252.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
 02/09/23 01:51:52.575
STEP: creating a pod to probe DNS 02/09/23 01:51:52.575
STEP: submitting the pod to kubernetes 02/09/23 01:51:52.576
Feb  9 01:51:52.589: INFO: Waiting up to 15m0s for pod "dns-test-b7ce2f46-028e-446a-8666-3f0e829bcf30" in namespace "dns-6252" to be "running"
Feb  9 01:51:52.595: INFO: Pod "dns-test-b7ce2f46-028e-446a-8666-3f0e829bcf30": Phase="Pending", Reason="", readiness=false. Elapsed: 6.284489ms
Feb  9 01:51:54.602: INFO: Pod "dns-test-b7ce2f46-028e-446a-8666-3f0e829bcf30": Phase="Running", Reason="", readiness=true. Elapsed: 2.013306627s
Feb  9 01:51:54.602: INFO: Pod "dns-test-b7ce2f46-028e-446a-8666-3f0e829bcf30" satisfied condition "running"
STEP: retrieving the pod 02/09/23 01:51:54.602
STEP: looking for the results for each expected name from probers 02/09/23 01:51:54.609
Feb  9 01:51:54.644: INFO: DNS probes using dns-6252/dns-test-b7ce2f46-028e-446a-8666-3f0e829bcf30 succeeded

STEP: deleting the pod 02/09/23 01:51:54.644
STEP: deleting the test headless service 02/09/23 01:51:54.662
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Feb  9 01:51:54.679: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-6252" for this suite. 02/09/23 01:51:54.687
------------------------------
â€¢ [2.157 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:51:52.539
    Feb  9 01:51:52.540: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename dns 02/09/23 01:51:52.54
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:52.56
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:52.564
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for pods for Hostname [Conformance]
      test/e2e/network/dns.go:248
    STEP: Creating a test headless service 02/09/23 01:51:52.569
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6252.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-6252.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
     02/09/23 01:51:52.575
    STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6252.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6252.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
     02/09/23 01:51:52.575
    STEP: creating a pod to probe DNS 02/09/23 01:51:52.575
    STEP: submitting the pod to kubernetes 02/09/23 01:51:52.576
    Feb  9 01:51:52.589: INFO: Waiting up to 15m0s for pod "dns-test-b7ce2f46-028e-446a-8666-3f0e829bcf30" in namespace "dns-6252" to be "running"
    Feb  9 01:51:52.595: INFO: Pod "dns-test-b7ce2f46-028e-446a-8666-3f0e829bcf30": Phase="Pending", Reason="", readiness=false. Elapsed: 6.284489ms
    Feb  9 01:51:54.602: INFO: Pod "dns-test-b7ce2f46-028e-446a-8666-3f0e829bcf30": Phase="Running", Reason="", readiness=true. Elapsed: 2.013306627s
    Feb  9 01:51:54.602: INFO: Pod "dns-test-b7ce2f46-028e-446a-8666-3f0e829bcf30" satisfied condition "running"
    STEP: retrieving the pod 02/09/23 01:51:54.602
    STEP: looking for the results for each expected name from probers 02/09/23 01:51:54.609
    Feb  9 01:51:54.644: INFO: DNS probes using dns-6252/dns-test-b7ce2f46-028e-446a-8666-3f0e829bcf30 succeeded

    STEP: deleting the pod 02/09/23 01:51:54.644
    STEP: deleting the test headless service 02/09/23 01:51:54.662
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:51:54.679: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-6252" for this suite. 02/09/23 01:51:54.687
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] Aggregator
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100
[BeforeEach] [sig-api-machinery] Aggregator
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:51:54.698
Feb  9 01:51:54.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename aggregator 02/09/23 01:51:54.699
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:54.72
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:54.724
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:78
Feb  9 01:51:54.729: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100
STEP: Registering the sample API server. 02/09/23 01:51:54.729
Feb  9 01:51:55.133: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
Feb  9 01:51:57.196: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:51:59.204: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:52:01.203: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:52:03.203: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:52:05.202: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:52:07.202: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:52:09.204: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:52:11.202: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:52:13.203: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:52:15.203: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Feb  9 01:52:17.343: INFO: Waited 133.014329ms for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com 02/09/23 01:52:17.426
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' 02/09/23 01:52:17.432
STEP: List APIServices 02/09/23 01:52:17.44
Feb  9 01:52:17.449: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:68
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/node/init/init.go:32
Feb  9 01:52:17.630: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  tear down framework | framework.go:193
STEP: Destroying namespace "aggregator-6153" for this suite. 02/09/23 01:52:17.641
------------------------------
â€¢ [SLOW TEST] [22.979 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Aggregator
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:51:54.698
    Feb  9 01:51:54.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename aggregator 02/09/23 01:51:54.699
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:51:54.72
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:51:54.724
    [BeforeEach] [sig-api-machinery] Aggregator
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Aggregator
      test/e2e/apimachinery/aggregator.go:78
    Feb  9 01:51:54.729: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    [It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
      test/e2e/apimachinery/aggregator.go:100
    STEP: Registering the sample API server. 02/09/23 01:51:54.729
    Feb  9 01:51:55.133: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
    Feb  9 01:51:57.196: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:51:59.204: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:52:01.203: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:52:03.203: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:52:05.202: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:52:07.202: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:52:09.204: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:52:11.202: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:52:13.203: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:52:15.203: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 51, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Feb  9 01:52:17.343: INFO: Waited 133.014329ms for the sample-apiserver to be ready to handle requests.
    STEP: Read Status for v1alpha1.wardle.example.com 02/09/23 01:52:17.426
    STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' 02/09/23 01:52:17.432
    STEP: List APIServices 02/09/23 01:52:17.44
    Feb  9 01:52:17.449: INFO: Found v1alpha1.wardle.example.com in APIServiceList
    [AfterEach] [sig-api-machinery] Aggregator
      test/e2e/apimachinery/aggregator.go:68
    [AfterEach] [sig-api-machinery] Aggregator
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:52:17.630: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      tear down framework | framework.go:193
    STEP: Destroying namespace "aggregator-6153" for this suite. 02/09/23 01:52:17.641
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:52:17.678
Feb  9 01:52:17.678: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:52:17.679
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:17.698
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:17.703
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174
STEP: Creating configMap with name cm-test-opt-del-95a9db06-3922-417b-bca4-3bf4bf603be1 02/09/23 01:52:17.714
STEP: Creating configMap with name cm-test-opt-upd-58133958-6898-41d7-b9ac-6e632f2d857e 02/09/23 01:52:17.721
STEP: Creating the pod 02/09/23 01:52:17.727
Feb  9 01:52:17.741: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-9d44bdee-b33e-4ef4-983e-eba5b8980851" in namespace "projected-4861" to be "running and ready"
Feb  9 01:52:17.746: INFO: Pod "pod-projected-configmaps-9d44bdee-b33e-4ef4-983e-eba5b8980851": Phase="Pending", Reason="", readiness=false. Elapsed: 5.655963ms
Feb  9 01:52:17.747: INFO: The phase of Pod pod-projected-configmaps-9d44bdee-b33e-4ef4-983e-eba5b8980851 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:52:19.753: INFO: Pod "pod-projected-configmaps-9d44bdee-b33e-4ef4-983e-eba5b8980851": Phase="Running", Reason="", readiness=true. Elapsed: 2.011948589s
Feb  9 01:52:19.753: INFO: The phase of Pod pod-projected-configmaps-9d44bdee-b33e-4ef4-983e-eba5b8980851 is Running (Ready = true)
Feb  9 01:52:19.753: INFO: Pod "pod-projected-configmaps-9d44bdee-b33e-4ef4-983e-eba5b8980851" satisfied condition "running and ready"
STEP: Deleting configmap cm-test-opt-del-95a9db06-3922-417b-bca4-3bf4bf603be1 02/09/23 01:52:19.796
STEP: Updating configmap cm-test-opt-upd-58133958-6898-41d7-b9ac-6e632f2d857e 02/09/23 01:52:19.805
STEP: Creating configMap with name cm-test-opt-create-a06f4215-463e-4de1-9b98-d2bb246aeea1 02/09/23 01:52:19.811
STEP: waiting to observe update in volume 02/09/23 01:52:19.817
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:52:23.906: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4861" for this suite. 02/09/23 01:52:23.917
------------------------------
â€¢ [SLOW TEST] [6.249 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:52:17.678
    Feb  9 01:52:17.678: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:52:17.679
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:17.698
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:17.703
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:174
    STEP: Creating configMap with name cm-test-opt-del-95a9db06-3922-417b-bca4-3bf4bf603be1 02/09/23 01:52:17.714
    STEP: Creating configMap with name cm-test-opt-upd-58133958-6898-41d7-b9ac-6e632f2d857e 02/09/23 01:52:17.721
    STEP: Creating the pod 02/09/23 01:52:17.727
    Feb  9 01:52:17.741: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-9d44bdee-b33e-4ef4-983e-eba5b8980851" in namespace "projected-4861" to be "running and ready"
    Feb  9 01:52:17.746: INFO: Pod "pod-projected-configmaps-9d44bdee-b33e-4ef4-983e-eba5b8980851": Phase="Pending", Reason="", readiness=false. Elapsed: 5.655963ms
    Feb  9 01:52:17.747: INFO: The phase of Pod pod-projected-configmaps-9d44bdee-b33e-4ef4-983e-eba5b8980851 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:52:19.753: INFO: Pod "pod-projected-configmaps-9d44bdee-b33e-4ef4-983e-eba5b8980851": Phase="Running", Reason="", readiness=true. Elapsed: 2.011948589s
    Feb  9 01:52:19.753: INFO: The phase of Pod pod-projected-configmaps-9d44bdee-b33e-4ef4-983e-eba5b8980851 is Running (Ready = true)
    Feb  9 01:52:19.753: INFO: Pod "pod-projected-configmaps-9d44bdee-b33e-4ef4-983e-eba5b8980851" satisfied condition "running and ready"
    STEP: Deleting configmap cm-test-opt-del-95a9db06-3922-417b-bca4-3bf4bf603be1 02/09/23 01:52:19.796
    STEP: Updating configmap cm-test-opt-upd-58133958-6898-41d7-b9ac-6e632f2d857e 02/09/23 01:52:19.805
    STEP: Creating configMap with name cm-test-opt-create-a06f4215-463e-4de1-9b98-d2bb246aeea1 02/09/23 01:52:19.811
    STEP: waiting to observe update in volume 02/09/23 01:52:19.817
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:52:23.906: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4861" for this suite. 02/09/23 01:52:23.917
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions
  should check if v1 is in available api versions  [Conformance]
  test/e2e/kubectl/kubectl.go:824
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:52:23.932
Feb  9 01:52:23.932: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:52:23.933
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:23.952
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:23.957
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/kubectl/kubectl.go:824
STEP: validating api versions 02/09/23 01:52:23.962
Feb  9 01:52:23.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1782 api-versions'
Feb  9 01:52:24.035: INFO: stderr: ""
Feb  9 01:52:24.035: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:52:24.035: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1782" for this suite. 02/09/23 01:52:24.043
------------------------------
â€¢ [0.121 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl api-versions
  test/e2e/kubectl/kubectl.go:818
    should check if v1 is in available api versions  [Conformance]
    test/e2e/kubectl/kubectl.go:824

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:52:23.932
    Feb  9 01:52:23.932: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:52:23.933
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:23.952
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:23.957
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if v1 is in available api versions  [Conformance]
      test/e2e/kubectl/kubectl.go:824
    STEP: validating api versions 02/09/23 01:52:23.962
    Feb  9 01:52:23.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-1782 api-versions'
    Feb  9 01:52:24.035: INFO: stderr: ""
    Feb  9 01:52:24.035: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:52:24.035: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1782" for this suite. 02/09/23 01:52:24.043
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:52:24.054
Feb  9 01:52:24.054: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:52:24.055
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:24.074
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:24.078
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation 02/09/23 01:52:24.083
Feb  9 01:52:24.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation 02/09/23 01:52:30.281
Feb  9 01:52:30.281: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:52:31.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:52:38.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-8025" for this suite. 02/09/23 01:52:38.15
------------------------------
â€¢ [SLOW TEST] [14.106 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:52:24.054
    Feb  9 01:52:24.054: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:52:24.055
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:24.074
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:24.078
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of same group but different versions [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:309
    STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation 02/09/23 01:52:24.083
    Feb  9 01:52:24.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation 02/09/23 01:52:30.281
    Feb  9 01:52:30.281: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:52:31.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:52:38.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-8025" for this suite. 02/09/23 01:52:38.15
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] DNS
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:52:38.163
Feb  9 01:52:38.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename dns 02/09/23 01:52:38.163
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:38.184
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:38.189
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290
STEP: Creating a test headless service 02/09/23 01:52:38.198
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-3986.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-3986.svc.cluster.local;sleep 1; done
 02/09/23 01:52:38.205
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3986.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3986.svc.cluster.local;sleep 1; done
 02/09/23 01:52:38.205
STEP: creating a pod to probe DNS 02/09/23 01:52:38.205
STEP: submitting the pod to kubernetes 02/09/23 01:52:38.205
Feb  9 01:52:38.218: INFO: Waiting up to 15m0s for pod "dns-test-ec66d8bf-c99a-484b-8d41-af6520116765" in namespace "dns-3986" to be "running"
Feb  9 01:52:38.225: INFO: Pod "dns-test-ec66d8bf-c99a-484b-8d41-af6520116765": Phase="Pending", Reason="", readiness=false. Elapsed: 6.712158ms
Feb  9 01:52:40.232: INFO: Pod "dns-test-ec66d8bf-c99a-484b-8d41-af6520116765": Phase="Running", Reason="", readiness=true. Elapsed: 2.013877195s
Feb  9 01:52:40.232: INFO: Pod "dns-test-ec66d8bf-c99a-484b-8d41-af6520116765" satisfied condition "running"
STEP: retrieving the pod 02/09/23 01:52:40.232
STEP: looking for the results for each expected name from probers 02/09/23 01:52:40.238
Feb  9 01:52:40.248: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local from pod dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765: the server could not find the requested resource (get pods dns-test-ec66d8bf-c99a-484b-8d41-af6520116765)
Feb  9 01:52:40.257: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local from pod dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765: the server could not find the requested resource (get pods dns-test-ec66d8bf-c99a-484b-8d41-af6520116765)
Feb  9 01:52:40.271: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-3986.svc.cluster.local from pod dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765: the server could not find the requested resource (get pods dns-test-ec66d8bf-c99a-484b-8d41-af6520116765)
Feb  9 01:52:40.288: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local from pod dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765: the server could not find the requested resource (get pods dns-test-ec66d8bf-c99a-484b-8d41-af6520116765)
Feb  9 01:52:40.296: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local from pod dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765: the server could not find the requested resource (get pods dns-test-ec66d8bf-c99a-484b-8d41-af6520116765)
Feb  9 01:52:40.304: INFO: Unable to read jessie_udp@dns-test-service-2.dns-3986.svc.cluster.local from pod dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765: the server could not find the requested resource (get pods dns-test-ec66d8bf-c99a-484b-8d41-af6520116765)
Feb  9 01:52:40.312: INFO: Lookups using dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3986.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local jessie_udp@dns-test-service-2.dns-3986.svc.cluster.local]

Feb  9 01:52:45.380: INFO: DNS probes using dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765 succeeded

STEP: deleting the pod 02/09/23 01:52:45.38
STEP: deleting the test headless service 02/09/23 01:52:45.401
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Feb  9 01:52:45.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-3986" for this suite. 02/09/23 01:52:45.424
------------------------------
â€¢ [SLOW TEST] [7.271 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:52:38.163
    Feb  9 01:52:38.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename dns 02/09/23 01:52:38.163
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:38.184
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:38.189
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for pods for Subdomain [Conformance]
      test/e2e/network/dns.go:290
    STEP: Creating a test headless service 02/09/23 01:52:38.198
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-3986.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-3986.svc.cluster.local;sleep 1; done
     02/09/23 01:52:38.205
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3986.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3986.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3986.svc.cluster.local;sleep 1; done
     02/09/23 01:52:38.205
    STEP: creating a pod to probe DNS 02/09/23 01:52:38.205
    STEP: submitting the pod to kubernetes 02/09/23 01:52:38.205
    Feb  9 01:52:38.218: INFO: Waiting up to 15m0s for pod "dns-test-ec66d8bf-c99a-484b-8d41-af6520116765" in namespace "dns-3986" to be "running"
    Feb  9 01:52:38.225: INFO: Pod "dns-test-ec66d8bf-c99a-484b-8d41-af6520116765": Phase="Pending", Reason="", readiness=false. Elapsed: 6.712158ms
    Feb  9 01:52:40.232: INFO: Pod "dns-test-ec66d8bf-c99a-484b-8d41-af6520116765": Phase="Running", Reason="", readiness=true. Elapsed: 2.013877195s
    Feb  9 01:52:40.232: INFO: Pod "dns-test-ec66d8bf-c99a-484b-8d41-af6520116765" satisfied condition "running"
    STEP: retrieving the pod 02/09/23 01:52:40.232
    STEP: looking for the results for each expected name from probers 02/09/23 01:52:40.238
    Feb  9 01:52:40.248: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local from pod dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765: the server could not find the requested resource (get pods dns-test-ec66d8bf-c99a-484b-8d41-af6520116765)
    Feb  9 01:52:40.257: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local from pod dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765: the server could not find the requested resource (get pods dns-test-ec66d8bf-c99a-484b-8d41-af6520116765)
    Feb  9 01:52:40.271: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-3986.svc.cluster.local from pod dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765: the server could not find the requested resource (get pods dns-test-ec66d8bf-c99a-484b-8d41-af6520116765)
    Feb  9 01:52:40.288: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local from pod dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765: the server could not find the requested resource (get pods dns-test-ec66d8bf-c99a-484b-8d41-af6520116765)
    Feb  9 01:52:40.296: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local from pod dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765: the server could not find the requested resource (get pods dns-test-ec66d8bf-c99a-484b-8d41-af6520116765)
    Feb  9 01:52:40.304: INFO: Unable to read jessie_udp@dns-test-service-2.dns-3986.svc.cluster.local from pod dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765: the server could not find the requested resource (get pods dns-test-ec66d8bf-c99a-484b-8d41-af6520116765)
    Feb  9 01:52:40.312: INFO: Lookups using dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3986.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3986.svc.cluster.local jessie_udp@dns-test-service-2.dns-3986.svc.cluster.local]

    Feb  9 01:52:45.380: INFO: DNS probes using dns-3986/dns-test-ec66d8bf-c99a-484b-8d41-af6520116765 succeeded

    STEP: deleting the pod 02/09/23 01:52:45.38
    STEP: deleting the test headless service 02/09/23 01:52:45.401
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:52:45.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-3986" for this suite. 02/09/23 01:52:45.424
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:52:45.437
Feb  9 01:52:45.437: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:52:45.437
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:45.458
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:45.463
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166
STEP: Creating a pod to test downward api env vars 02/09/23 01:52:45.467
Feb  9 01:52:45.480: INFO: Waiting up to 5m0s for pod "downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6" in namespace "downward-api-9117" to be "Succeeded or Failed"
Feb  9 01:52:45.487: INFO: Pod "downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6": Phase="Pending", Reason="", readiness=false. Elapsed: 6.372422ms
Feb  9 01:52:47.494: INFO: Pod "downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013271549s
Feb  9 01:52:49.494: INFO: Pod "downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014115108s
STEP: Saw pod success 02/09/23 01:52:49.495
Feb  9 01:52:49.495: INFO: Pod "downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6" satisfied condition "Succeeded or Failed"
Feb  9 01:52:49.501: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6 container dapi-container: <nil>
STEP: delete the pod 02/09/23 01:52:49.513
Feb  9 01:52:49.527: INFO: Waiting for pod downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6 to disappear
Feb  9 01:52:49.533: INFO: Pod downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Feb  9 01:52:49.533: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-9117" for this suite. 02/09/23 01:52:49.542
------------------------------
â€¢ [4.115 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:52:45.437
    Feb  9 01:52:45.437: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:52:45.437
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:45.458
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:45.463
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:166
    STEP: Creating a pod to test downward api env vars 02/09/23 01:52:45.467
    Feb  9 01:52:45.480: INFO: Waiting up to 5m0s for pod "downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6" in namespace "downward-api-9117" to be "Succeeded or Failed"
    Feb  9 01:52:45.487: INFO: Pod "downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6": Phase="Pending", Reason="", readiness=false. Elapsed: 6.372422ms
    Feb  9 01:52:47.494: INFO: Pod "downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013271549s
    Feb  9 01:52:49.494: INFO: Pod "downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014115108s
    STEP: Saw pod success 02/09/23 01:52:49.495
    Feb  9 01:52:49.495: INFO: Pod "downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6" satisfied condition "Succeeded or Failed"
    Feb  9 01:52:49.501: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6 container dapi-container: <nil>
    STEP: delete the pod 02/09/23 01:52:49.513
    Feb  9 01:52:49.527: INFO: Waiting for pod downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6 to disappear
    Feb  9 01:52:49.533: INFO: Pod downward-api-46ba7eaa-4045-4048-a8dd-e8822f516fd6 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:52:49.533: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-9117" for this suite. 02/09/23 01:52:49.542
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server
  should support --unix-socket=/path  [Conformance]
  test/e2e/kubectl/kubectl.go:1812
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:52:49.554
Feb  9 01:52:49.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:52:49.555
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:49.579
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:49.583
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/kubectl/kubectl.go:1812
STEP: Starting the proxy 02/09/23 01:52:49.588
Feb  9 01:52:49.588: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5415 proxy --unix-socket=/tmp/kubectl-proxy-unix1215948241/test'
STEP: retrieving proxy /api/ output 02/09/23 01:52:49.631
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:52:49.632: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-5415" for this suite. 02/09/23 01:52:49.638
------------------------------
â€¢ [0.094 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Proxy server
  test/e2e/kubectl/kubectl.go:1780
    should support --unix-socket=/path  [Conformance]
    test/e2e/kubectl/kubectl.go:1812

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:52:49.554
    Feb  9 01:52:49.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:52:49.555
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:49.579
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:49.583
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should support --unix-socket=/path  [Conformance]
      test/e2e/kubectl/kubectl.go:1812
    STEP: Starting the proxy 02/09/23 01:52:49.588
    Feb  9 01:52:49.588: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5415 proxy --unix-socket=/tmp/kubectl-proxy-unix1215948241/test'
    STEP: retrieving proxy /api/ output 02/09/23 01:52:49.631
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:52:49.632: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-5415" for this suite. 02/09/23 01:52:49.638
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets
  should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:52:49.648
Feb  9 01:52:49.648: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename secrets 02/09/23 01:52:49.649
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:49.668
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:49.673
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154
STEP: creating a secret 02/09/23 01:52:49.677
STEP: listing secrets in all namespaces to ensure that there are more than zero 02/09/23 01:52:49.684
STEP: patching the secret 02/09/23 01:52:49.69
STEP: deleting the secret using a LabelSelector 02/09/23 01:52:49.702
STEP: listing secrets in all namespaces, searching for label name and value in patch 02/09/23 01:52:49.72
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Feb  9 01:52:49.727: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-178" for this suite. 02/09/23 01:52:49.734
------------------------------
â€¢ [0.097 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:52:49.648
    Feb  9 01:52:49.648: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename secrets 02/09/23 01:52:49.649
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:49.668
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:49.673
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should patch a secret [Conformance]
      test/e2e/common/node/secrets.go:154
    STEP: creating a secret 02/09/23 01:52:49.677
    STEP: listing secrets in all namespaces to ensure that there are more than zero 02/09/23 01:52:49.684
    STEP: patching the secret 02/09/23 01:52:49.69
    STEP: deleting the secret using a LabelSelector 02/09/23 01:52:49.702
    STEP: listing secrets in all namespaces, searching for label name and value in patch 02/09/23 01:52:49.72
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:52:49.727: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-178" for this suite. 02/09/23 01:52:49.734
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:52:49.748
Feb  9 01:52:49.748: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename init-container 02/09/23 01:52:49.748
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:49.769
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:49.773
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177
STEP: creating the pod 02/09/23 01:52:49.778
Feb  9 01:52:49.778: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:52:54.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-6434" for this suite. 02/09/23 01:52:54.515
------------------------------
â€¢ [4.776 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:52:49.748
    Feb  9 01:52:49.748: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename init-container 02/09/23 01:52:49.748
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:49.769
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:49.773
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should invoke init containers on a RestartNever pod [Conformance]
      test/e2e/common/node/init_container.go:177
    STEP: creating the pod 02/09/23 01:52:49.778
    Feb  9 01:52:49.778: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:52:54.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-6434" for this suite. 02/09/23 01:52:54.515
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:52:54.527
Feb  9 01:52:54.527: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename podtemplate 02/09/23 01:52:54.528
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:54.546
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:54.551
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Feb  9 01:52:54.611: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-4518" for this suite. 02/09/23 01:52:54.617
------------------------------
â€¢ [0.103 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:52:54.527
    Feb  9 01:52:54.527: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename podtemplate 02/09/23 01:52:54.528
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:54.546
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:54.551
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should run the lifecycle of PodTemplates [Conformance]
      test/e2e/common/node/podtemplates.go:53
    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:52:54.611: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-4518" for this suite. 02/09/23 01:52:54.617
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-scheduling] LimitRange
  should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239
[BeforeEach] [sig-scheduling] LimitRange
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:52:54.632
Feb  9 01:52:54.632: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename limitrange 02/09/23 01:52:54.633
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:54.65
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:54.655
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:31
[It] should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239
STEP: Creating LimitRange "e2e-limitrange-btcdx" in namespace "limitrange-8017" 02/09/23 01:52:54.66
STEP: Creating another limitRange in another namespace 02/09/23 01:52:54.667
Feb  9 01:52:54.690: INFO: Namespace "e2e-limitrange-btcdx-6120" created
Feb  9 01:52:54.690: INFO: Creating LimitRange "e2e-limitrange-btcdx" in namespace "e2e-limitrange-btcdx-6120"
STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-btcdx" 02/09/23 01:52:54.697
Feb  9 01:52:54.704: INFO: Found 2 limitRanges
STEP: Patching LimitRange "e2e-limitrange-btcdx" in "limitrange-8017" namespace 02/09/23 01:52:54.704
Feb  9 01:52:54.713: INFO: LimitRange "e2e-limitrange-btcdx" has been patched
STEP: Delete LimitRange "e2e-limitrange-btcdx" by Collection with labelSelector: "e2e-limitrange-btcdx=patched" 02/09/23 01:52:54.713
STEP: Confirm that the limitRange "e2e-limitrange-btcdx" has been deleted 02/09/23 01:52:54.726
Feb  9 01:52:54.726: INFO: Requesting list of LimitRange to confirm quantity
Feb  9 01:52:54.731: INFO: Found 0 LimitRange with label "e2e-limitrange-btcdx=patched"
Feb  9 01:52:54.731: INFO: LimitRange "e2e-limitrange-btcdx" has been deleted.
STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-btcdx" 02/09/23 01:52:54.731
Feb  9 01:52:54.738: INFO: Found 1 limitRange
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/node/init/init.go:32
Feb  9 01:52:54.738: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  tear down framework | framework.go:193
STEP: Destroying namespace "limitrange-8017" for this suite. 02/09/23 01:52:54.745
STEP: Destroying namespace "e2e-limitrange-btcdx-6120" for this suite. 02/09/23 01:52:54.754
------------------------------
â€¢ [0.132 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] LimitRange
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:52:54.632
    Feb  9 01:52:54.632: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename limitrange 02/09/23 01:52:54.633
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:54.65
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:54.655
    [BeforeEach] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:31
    [It] should list, patch and delete a LimitRange by collection [Conformance]
      test/e2e/scheduling/limit_range.go:239
    STEP: Creating LimitRange "e2e-limitrange-btcdx" in namespace "limitrange-8017" 02/09/23 01:52:54.66
    STEP: Creating another limitRange in another namespace 02/09/23 01:52:54.667
    Feb  9 01:52:54.690: INFO: Namespace "e2e-limitrange-btcdx-6120" created
    Feb  9 01:52:54.690: INFO: Creating LimitRange "e2e-limitrange-btcdx" in namespace "e2e-limitrange-btcdx-6120"
    STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-btcdx" 02/09/23 01:52:54.697
    Feb  9 01:52:54.704: INFO: Found 2 limitRanges
    STEP: Patching LimitRange "e2e-limitrange-btcdx" in "limitrange-8017" namespace 02/09/23 01:52:54.704
    Feb  9 01:52:54.713: INFO: LimitRange "e2e-limitrange-btcdx" has been patched
    STEP: Delete LimitRange "e2e-limitrange-btcdx" by Collection with labelSelector: "e2e-limitrange-btcdx=patched" 02/09/23 01:52:54.713
    STEP: Confirm that the limitRange "e2e-limitrange-btcdx" has been deleted 02/09/23 01:52:54.726
    Feb  9 01:52:54.726: INFO: Requesting list of LimitRange to confirm quantity
    Feb  9 01:52:54.731: INFO: Found 0 LimitRange with label "e2e-limitrange-btcdx=patched"
    Feb  9 01:52:54.731: INFO: LimitRange "e2e-limitrange-btcdx" has been deleted.
    STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-btcdx" 02/09/23 01:52:54.731
    Feb  9 01:52:54.738: INFO: Found 1 limitRange
    [AfterEach] [sig-scheduling] LimitRange
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:52:54.738: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      tear down framework | framework.go:193
    STEP: Destroying namespace "limitrange-8017" for this suite. 02/09/23 01:52:54.745
    STEP: Destroying namespace "e2e-limitrange-btcdx-6120" for this suite. 02/09/23 01:52:54.754
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Pods
  should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:52:54.766
Feb  9 01:52:54.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pods 02/09/23 01:52:54.767
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:54.786
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:54.791
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083
STEP: Create a pod 02/09/23 01:52:54.796
Feb  9 01:52:54.811: INFO: Waiting up to 5m0s for pod "pod-xb84q" in namespace "pods-6115" to be "running"
Feb  9 01:52:54.817: INFO: Pod "pod-xb84q": Phase="Pending", Reason="", readiness=false. Elapsed: 6.179036ms
Feb  9 01:52:56.825: INFO: Pod "pod-xb84q": Phase="Running", Reason="", readiness=true. Elapsed: 2.014389669s
Feb  9 01:52:56.825: INFO: Pod "pod-xb84q" satisfied condition "running"
STEP: patching /status 02/09/23 01:52:56.825
Feb  9 01:52:56.835: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Feb  9 01:52:56.835: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-6115" for this suite. 02/09/23 01:52:56.844
------------------------------
â€¢ [2.086 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:52:54.766
    Feb  9 01:52:54.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pods 02/09/23 01:52:54.767
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:54.786
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:54.791
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should patch a pod status [Conformance]
      test/e2e/common/node/pods.go:1083
    STEP: Create a pod 02/09/23 01:52:54.796
    Feb  9 01:52:54.811: INFO: Waiting up to 5m0s for pod "pod-xb84q" in namespace "pods-6115" to be "running"
    Feb  9 01:52:54.817: INFO: Pod "pod-xb84q": Phase="Pending", Reason="", readiness=false. Elapsed: 6.179036ms
    Feb  9 01:52:56.825: INFO: Pod "pod-xb84q": Phase="Running", Reason="", readiness=true. Elapsed: 2.014389669s
    Feb  9 01:52:56.825: INFO: Pod "pod-xb84q" satisfied condition "running"
    STEP: patching /status 02/09/23 01:52:56.825
    Feb  9 01:52:56.835: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:52:56.835: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-6115" for this suite. 02/09/23 01:52:56.844
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:52:56.853
Feb  9 01:52:56.853: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 01:52:56.854
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:56.875
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:56.879
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137
STEP: Creating a pod to test emptydir 0666 on tmpfs 02/09/23 01:52:56.884
Feb  9 01:52:56.901: INFO: Waiting up to 5m0s for pod "pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830" in namespace "emptydir-3413" to be "Succeeded or Failed"
Feb  9 01:52:56.907: INFO: Pod "pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830": Phase="Pending", Reason="", readiness=false. Elapsed: 5.385918ms
Feb  9 01:52:58.915: INFO: Pod "pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830": Phase="Running", Reason="", readiness=false. Elapsed: 2.013277265s
Feb  9 01:53:00.914: INFO: Pod "pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012824698s
STEP: Saw pod success 02/09/23 01:53:00.914
Feb  9 01:53:00.915: INFO: Pod "pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830" satisfied condition "Succeeded or Failed"
Feb  9 01:53:00.920: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830 container test-container: <nil>
STEP: delete the pod 02/09/23 01:53:00.933
Feb  9 01:53:00.951: INFO: Waiting for pod pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830 to disappear
Feb  9 01:53:00.956: INFO: Pod pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:53:00.956: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-3413" for this suite. 02/09/23 01:53:00.965
------------------------------
â€¢ [4.121 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:52:56.853
    Feb  9 01:52:56.853: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 01:52:56.854
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:52:56.875
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:52:56.879
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:137
    STEP: Creating a pod to test emptydir 0666 on tmpfs 02/09/23 01:52:56.884
    Feb  9 01:52:56.901: INFO: Waiting up to 5m0s for pod "pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830" in namespace "emptydir-3413" to be "Succeeded or Failed"
    Feb  9 01:52:56.907: INFO: Pod "pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830": Phase="Pending", Reason="", readiness=false. Elapsed: 5.385918ms
    Feb  9 01:52:58.915: INFO: Pod "pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830": Phase="Running", Reason="", readiness=false. Elapsed: 2.013277265s
    Feb  9 01:53:00.914: INFO: Pod "pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012824698s
    STEP: Saw pod success 02/09/23 01:53:00.914
    Feb  9 01:53:00.915: INFO: Pod "pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830" satisfied condition "Succeeded or Failed"
    Feb  9 01:53:00.920: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830 container test-container: <nil>
    STEP: delete the pod 02/09/23 01:53:00.933
    Feb  9 01:53:00.951: INFO: Waiting for pod pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830 to disappear
    Feb  9 01:53:00.956: INFO: Pod pod-1b3e6d14-89b7-4c3e-a710-e73b96fe6830 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:53:00.956: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-3413" for this suite. 02/09/23 01:53:00.965
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:53:00.975
Feb  9 01:53:00.975: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 01:53:00.976
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:53:00.996
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:53:01.001
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240
STEP: Creating configMap with name cm-test-opt-del-b9d0a4b4-824f-4307-8ec6-2ee26ea7fb3a 02/09/23 01:53:01.012
STEP: Creating configMap with name cm-test-opt-upd-b6182b0d-893c-4a64-b952-0c9581d9bacb 02/09/23 01:53:01.019
STEP: Creating the pod 02/09/23 01:53:01.025
Feb  9 01:53:01.037: INFO: Waiting up to 5m0s for pod "pod-configmaps-b66bc8c6-a68f-45a7-a6df-07b999392235" in namespace "configmap-2984" to be "running and ready"
Feb  9 01:53:01.050: INFO: Pod "pod-configmaps-b66bc8c6-a68f-45a7-a6df-07b999392235": Phase="Pending", Reason="", readiness=false. Elapsed: 12.245305ms
Feb  9 01:53:01.050: INFO: The phase of Pod pod-configmaps-b66bc8c6-a68f-45a7-a6df-07b999392235 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:53:03.056: INFO: Pod "pod-configmaps-b66bc8c6-a68f-45a7-a6df-07b999392235": Phase="Running", Reason="", readiness=true. Elapsed: 2.01864488s
Feb  9 01:53:03.056: INFO: The phase of Pod pod-configmaps-b66bc8c6-a68f-45a7-a6df-07b999392235 is Running (Ready = true)
Feb  9 01:53:03.056: INFO: Pod "pod-configmaps-b66bc8c6-a68f-45a7-a6df-07b999392235" satisfied condition "running and ready"
STEP: Deleting configmap cm-test-opt-del-b9d0a4b4-824f-4307-8ec6-2ee26ea7fb3a 02/09/23 01:53:03.098
STEP: Updating configmap cm-test-opt-upd-b6182b0d-893c-4a64-b952-0c9581d9bacb 02/09/23 01:53:03.108
STEP: Creating configMap with name cm-test-opt-create-45541fb4-3d38-4770-8796-68416bead91a 02/09/23 01:53:03.115
STEP: waiting to observe update in volume 02/09/23 01:53:03.121
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:53:07.190: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-2984" for this suite. 02/09/23 01:53:07.198
------------------------------
â€¢ [SLOW TEST] [6.232 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:53:00.975
    Feb  9 01:53:00.975: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 01:53:00.976
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:53:00.996
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:53:01.001
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:240
    STEP: Creating configMap with name cm-test-opt-del-b9d0a4b4-824f-4307-8ec6-2ee26ea7fb3a 02/09/23 01:53:01.012
    STEP: Creating configMap with name cm-test-opt-upd-b6182b0d-893c-4a64-b952-0c9581d9bacb 02/09/23 01:53:01.019
    STEP: Creating the pod 02/09/23 01:53:01.025
    Feb  9 01:53:01.037: INFO: Waiting up to 5m0s for pod "pod-configmaps-b66bc8c6-a68f-45a7-a6df-07b999392235" in namespace "configmap-2984" to be "running and ready"
    Feb  9 01:53:01.050: INFO: Pod "pod-configmaps-b66bc8c6-a68f-45a7-a6df-07b999392235": Phase="Pending", Reason="", readiness=false. Elapsed: 12.245305ms
    Feb  9 01:53:01.050: INFO: The phase of Pod pod-configmaps-b66bc8c6-a68f-45a7-a6df-07b999392235 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:53:03.056: INFO: Pod "pod-configmaps-b66bc8c6-a68f-45a7-a6df-07b999392235": Phase="Running", Reason="", readiness=true. Elapsed: 2.01864488s
    Feb  9 01:53:03.056: INFO: The phase of Pod pod-configmaps-b66bc8c6-a68f-45a7-a6df-07b999392235 is Running (Ready = true)
    Feb  9 01:53:03.056: INFO: Pod "pod-configmaps-b66bc8c6-a68f-45a7-a6df-07b999392235" satisfied condition "running and ready"
    STEP: Deleting configmap cm-test-opt-del-b9d0a4b4-824f-4307-8ec6-2ee26ea7fb3a 02/09/23 01:53:03.098
    STEP: Updating configmap cm-test-opt-upd-b6182b0d-893c-4a64-b952-0c9581d9bacb 02/09/23 01:53:03.108
    STEP: Creating configMap with name cm-test-opt-create-45541fb4-3d38-4770-8796-68416bead91a 02/09/23 01:53:03.115
    STEP: waiting to observe update in volume 02/09/23 01:53:03.121
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:53:07.190: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-2984" for this suite. 02/09/23 01:53:07.198
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:53:07.208
Feb  9 01:53:07.208: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename deployment 02/09/23 01:53:07.209
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:53:07.229
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:53:07.233
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185
STEP: creating a Deployment 02/09/23 01:53:07.244
STEP: waiting for Deployment to be created 02/09/23 01:53:07.251
STEP: waiting for all Replicas to be Ready 02/09/23 01:53:07.253
Feb  9 01:53:07.255: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Feb  9 01:53:07.255: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Feb  9 01:53:07.262: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Feb  9 01:53:07.262: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Feb  9 01:53:07.274: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Feb  9 01:53:07.274: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Feb  9 01:53:07.298: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Feb  9 01:53:07.298: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Feb  9 01:53:07.910: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Feb  9 01:53:07.910: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Feb  9 01:53:08.556: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment 02/09/23 01:53:08.556
W0209 01:53:08.565584      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Feb  9 01:53:08.568: INFO: observed event type ADDED
STEP: waiting for Replicas to scale 02/09/23 01:53:08.568
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
Feb  9 01:53:08.575: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
Feb  9 01:53:08.575: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
Feb  9 01:53:08.590: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
Feb  9 01:53:08.590: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
Feb  9 01:53:08.598: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
Feb  9 01:53:08.598: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
Feb  9 01:53:08.614: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
Feb  9 01:53:08.614: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
Feb  9 01:53:09.923: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
Feb  9 01:53:09.923: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
Feb  9 01:53:09.948: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
STEP: listing Deployments 02/09/23 01:53:09.948
Feb  9 01:53:09.956: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment 02/09/23 01:53:09.956
Feb  9 01:53:09.970: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
STEP: fetching the DeploymentStatus 02/09/23 01:53:09.971
Feb  9 01:53:09.980: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Feb  9 01:53:09.980: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Feb  9 01:53:09.995: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Feb  9 01:53:10.011: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Feb  9 01:53:10.017: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Feb  9 01:53:10.567: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Feb  9 01:53:10.928: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
Feb  9 01:53:10.963: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Feb  9 01:53:10.986: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Feb  9 01:53:11.618: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus 02/09/23 01:53:11.64
STEP: fetching the DeploymentStatus 02/09/23 01:53:11.649
Feb  9 01:53:11.660: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
Feb  9 01:53:11.660: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
Feb  9 01:53:11.660: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 3
Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 3
STEP: deleting the Deployment 02/09/23 01:53:11.661
Feb  9 01:53:11.679: INFO: observed event type MODIFIED
Feb  9 01:53:11.679: INFO: observed event type MODIFIED
Feb  9 01:53:11.679: INFO: observed event type MODIFIED
Feb  9 01:53:11.679: INFO: observed event type MODIFIED
Feb  9 01:53:11.679: INFO: observed event type MODIFIED
Feb  9 01:53:11.680: INFO: observed event type MODIFIED
Feb  9 01:53:11.680: INFO: observed event type MODIFIED
Feb  9 01:53:11.680: INFO: observed event type MODIFIED
Feb  9 01:53:11.680: INFO: observed event type MODIFIED
Feb  9 01:53:11.680: INFO: observed event type MODIFIED
Feb  9 01:53:11.680: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Feb  9 01:53:11.686: INFO: Log out all the ReplicaSets if there is no deployment created
Feb  9 01:53:11.693: INFO: ReplicaSet "test-deployment-7b7876f9d6":
&ReplicaSet{ObjectMeta:{test-deployment-7b7876f9d6  deployment-6384  1fa7895d-b5cc-4925-a2d9-45df68bd229b 42041 2 2023-02-09 01:53:09 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment 650236a8-9a6b-45d8-8cad-fd2bb2b3c638 0xc006fc2877 0xc006fc2878}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:53:10 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"650236a8-9a6b-45d8-8cad-fd2bb2b3c638\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:53:11 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7b7876f9d6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006fc2900 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

Feb  9 01:53:11.700: INFO: pod: "test-deployment-7b7876f9d6-4jnfl":
&Pod{ObjectMeta:{test-deployment-7b7876f9d6-4jnfl test-deployment-7b7876f9d6- deployment-6384  146540dc-6f6a-48c7-8d4b-2358d029136e 42040 0 2023-02-09 01:53:10 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 1fa7895d-b5cc-4925-a2d9-45df68bd229b 0xc003e946f7 0xc003e946f8}] [] [{kube-controller-manager Update v1 2023-02-09 01:53:10 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1fa7895d-b5cc-4925-a2d9-45df68bd229b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:53:11 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.60\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dd2jr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dd2jr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:10 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.60,StartTime:2023-02-09 01:53:10 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:53:11 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://56b4e30f38b6bb156598884c16198942e0bc535b1da7e882721d62a45f347feb,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.60,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Feb  9 01:53:11.700: INFO: pod: "test-deployment-7b7876f9d6-p8j2q":
&Pod{ObjectMeta:{test-deployment-7b7876f9d6-p8j2q test-deployment-7b7876f9d6- deployment-6384  eae9fa10-9f61-4a45-9019-fab2764f0cf7 42007 0 2023-02-09 01:53:09 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 1fa7895d-b5cc-4925-a2d9-45df68bd229b 0xc003e948d7 0xc003e948d8}] [] [{kube-controller-manager Update v1 2023-02-09 01:53:09 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1fa7895d-b5cc-4925-a2d9-45df68bd229b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:53:10 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.120\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-j7qqq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-j7qqq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:09 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.120,StartTime:2023-02-09 01:53:09 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:53:10 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://b1668e7c5d4539fba29b48f85176110aa4270f5a029bdc525a8587d208fe4a30,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.120,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Feb  9 01:53:11.700: INFO: ReplicaSet "test-deployment-7df74c55ff":
&ReplicaSet{ObjectMeta:{test-deployment-7df74c55ff  deployment-6384  1bfb3692-0692-4c14-b2c6-733a6ed1beee 42048 4 2023-02-09 01:53:08 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment 650236a8-9a6b-45d8-8cad-fd2bb2b3c638 0xc006fc2967 0xc006fc2968}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:53:11 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"650236a8-9a6b-45d8-8cad-fd2bb2b3c638\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:53:11 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7df74c55ff,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/pause:3.9 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006fc2a10 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Feb  9 01:53:11.707: INFO: pod: "test-deployment-7df74c55ff-jh7sn":
&Pod{ObjectMeta:{test-deployment-7df74c55ff-jh7sn test-deployment-7df74c55ff- deployment-6384  246b7319-e71c-442a-a755-ddbdd84c31b9 42045 0 2023-02-09 01:53:09 +0000 UTC 2023-02-09 01:53:12 +0000 UTC 0xc006fc2dc0 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7df74c55ff 1bfb3692-0692-4c14-b2c6-733a6ed1beee 0xc006fc2df7 0xc006fc2df8}] [] [{kube-controller-manager Update v1 2023-02-09 01:53:09 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1bfb3692-0692-4c14-b2c6-733a6ed1beee\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:53:10 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9g7ts,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9g7ts,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:09 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.59,StartTime:2023-02-09 01:53:09 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:53:10 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097,ContainerID:containerd://cdaf8cd5d5e6a29d8f617de05aee1998cf0fd2c056b7c40256642c9b1b1c3c38,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.59,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Feb  9 01:53:11.707: INFO: pod: "test-deployment-7df74c55ff-tvqbt":
&Pod{ObjectMeta:{test-deployment-7df74c55ff-tvqbt test-deployment-7df74c55ff- deployment-6384  930d16f4-cba0-4999-8a9f-82ce59240102 42014 0 2023-02-09 01:53:08 +0000 UTC 2023-02-09 01:53:11 +0000 UTC 0xc006fc2fd0 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7df74c55ff 1bfb3692-0692-4c14-b2c6-733a6ed1beee 0xc006fc3007 0xc006fc3008}] [] [{kube-controller-manager Update v1 2023-02-09 01:53:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1bfb3692-0692-4c14-b2c6-733a6ed1beee\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:53:09 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.119\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-79ggf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-79ggf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.119,StartTime:2023-02-09 01:53:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:53:09 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097,ContainerID:containerd://beececc7ccf2e153022ab46503f61b2cec53af6c7c2b5680eeccda75057e5e3f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.119,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Feb  9 01:53:11.707: INFO: ReplicaSet "test-deployment-f4dbc4647":
&ReplicaSet{ObjectMeta:{test-deployment-f4dbc4647  deployment-6384  1cb93ecb-02ee-4855-ae52-82b9ce4a30ef 41968 3 2023-02-09 01:53:07 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment 650236a8-9a6b-45d8-8cad-fd2bb2b3c638 0xc006fc2a77 0xc006fc2a78}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:53:09 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"650236a8-9a6b-45d8-8cad-fd2bb2b3c638\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:53:09 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: f4dbc4647,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006fc2b00 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Feb  9 01:53:11.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-6384" for this suite. 02/09/23 01:53:11.724
------------------------------
â€¢ [4.526 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:53:07.208
    Feb  9 01:53:07.208: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename deployment 02/09/23 01:53:07.209
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:53:07.229
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:53:07.233
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] should run the lifecycle of a Deployment [Conformance]
      test/e2e/apps/deployment.go:185
    STEP: creating a Deployment 02/09/23 01:53:07.244
    STEP: waiting for Deployment to be created 02/09/23 01:53:07.251
    STEP: waiting for all Replicas to be Ready 02/09/23 01:53:07.253
    Feb  9 01:53:07.255: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Feb  9 01:53:07.255: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Feb  9 01:53:07.262: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Feb  9 01:53:07.262: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Feb  9 01:53:07.274: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Feb  9 01:53:07.274: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Feb  9 01:53:07.298: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Feb  9 01:53:07.298: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Feb  9 01:53:07.910: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment-static:true]
    Feb  9 01:53:07.910: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment-static:true]
    Feb  9 01:53:08.556: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2 and labels map[test-deployment-static:true]
    STEP: patching the Deployment 02/09/23 01:53:08.556
    W0209 01:53:08.565584      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Feb  9 01:53:08.568: INFO: observed event type ADDED
    STEP: waiting for Replicas to scale 02/09/23 01:53:08.568
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 0
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
    Feb  9 01:53:08.570: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
    Feb  9 01:53:08.575: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
    Feb  9 01:53:08.575: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
    Feb  9 01:53:08.590: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
    Feb  9 01:53:08.590: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
    Feb  9 01:53:08.598: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
    Feb  9 01:53:08.598: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
    Feb  9 01:53:08.614: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
    Feb  9 01:53:08.614: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
    Feb  9 01:53:09.923: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
    Feb  9 01:53:09.923: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
    Feb  9 01:53:09.948: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
    STEP: listing Deployments 02/09/23 01:53:09.948
    Feb  9 01:53:09.956: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
    STEP: updating the Deployment 02/09/23 01:53:09.956
    Feb  9 01:53:09.970: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
    STEP: fetching the DeploymentStatus 02/09/23 01:53:09.971
    Feb  9 01:53:09.980: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Feb  9 01:53:09.980: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Feb  9 01:53:09.995: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Feb  9 01:53:10.011: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Feb  9 01:53:10.017: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Feb  9 01:53:10.567: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Feb  9 01:53:10.928: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
    Feb  9 01:53:10.963: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Feb  9 01:53:10.986: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Feb  9 01:53:11.618: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
    STEP: patching the DeploymentStatus 02/09/23 01:53:11.64
    STEP: fetching the DeploymentStatus 02/09/23 01:53:11.649
    Feb  9 01:53:11.660: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
    Feb  9 01:53:11.660: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
    Feb  9 01:53:11.660: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
    Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
    Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 1
    Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
    Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 3
    Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
    Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 2
    Feb  9 01:53:11.661: INFO: observed Deployment test-deployment in namespace deployment-6384 with ReadyReplicas 3
    STEP: deleting the Deployment 02/09/23 01:53:11.661
    Feb  9 01:53:11.679: INFO: observed event type MODIFIED
    Feb  9 01:53:11.679: INFO: observed event type MODIFIED
    Feb  9 01:53:11.679: INFO: observed event type MODIFIED
    Feb  9 01:53:11.679: INFO: observed event type MODIFIED
    Feb  9 01:53:11.679: INFO: observed event type MODIFIED
    Feb  9 01:53:11.680: INFO: observed event type MODIFIED
    Feb  9 01:53:11.680: INFO: observed event type MODIFIED
    Feb  9 01:53:11.680: INFO: observed event type MODIFIED
    Feb  9 01:53:11.680: INFO: observed event type MODIFIED
    Feb  9 01:53:11.680: INFO: observed event type MODIFIED
    Feb  9 01:53:11.680: INFO: observed event type MODIFIED
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Feb  9 01:53:11.686: INFO: Log out all the ReplicaSets if there is no deployment created
    Feb  9 01:53:11.693: INFO: ReplicaSet "test-deployment-7b7876f9d6":
    &ReplicaSet{ObjectMeta:{test-deployment-7b7876f9d6  deployment-6384  1fa7895d-b5cc-4925-a2d9-45df68bd229b 42041 2 2023-02-09 01:53:09 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment 650236a8-9a6b-45d8-8cad-fd2bb2b3c638 0xc006fc2877 0xc006fc2878}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:53:10 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"650236a8-9a6b-45d8-8cad-fd2bb2b3c638\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:53:11 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7b7876f9d6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006fc2900 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

    Feb  9 01:53:11.700: INFO: pod: "test-deployment-7b7876f9d6-4jnfl":
    &Pod{ObjectMeta:{test-deployment-7b7876f9d6-4jnfl test-deployment-7b7876f9d6- deployment-6384  146540dc-6f6a-48c7-8d4b-2358d029136e 42040 0 2023-02-09 01:53:10 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 1fa7895d-b5cc-4925-a2d9-45df68bd229b 0xc003e946f7 0xc003e946f8}] [] [{kube-controller-manager Update v1 2023-02-09 01:53:10 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1fa7895d-b5cc-4925-a2d9-45df68bd229b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:53:11 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.60\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dd2jr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dd2jr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:10 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.60,StartTime:2023-02-09 01:53:10 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:53:11 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://56b4e30f38b6bb156598884c16198942e0bc535b1da7e882721d62a45f347feb,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.60,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Feb  9 01:53:11.700: INFO: pod: "test-deployment-7b7876f9d6-p8j2q":
    &Pod{ObjectMeta:{test-deployment-7b7876f9d6-p8j2q test-deployment-7b7876f9d6- deployment-6384  eae9fa10-9f61-4a45-9019-fab2764f0cf7 42007 0 2023-02-09 01:53:09 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 1fa7895d-b5cc-4925-a2d9-45df68bd229b 0xc003e948d7 0xc003e948d8}] [] [{kube-controller-manager Update v1 2023-02-09 01:53:09 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1fa7895d-b5cc-4925-a2d9-45df68bd229b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:53:10 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.120\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-j7qqq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-j7qqq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:09 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.120,StartTime:2023-02-09 01:53:09 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:53:10 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://b1668e7c5d4539fba29b48f85176110aa4270f5a029bdc525a8587d208fe4a30,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.120,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Feb  9 01:53:11.700: INFO: ReplicaSet "test-deployment-7df74c55ff":
    &ReplicaSet{ObjectMeta:{test-deployment-7df74c55ff  deployment-6384  1bfb3692-0692-4c14-b2c6-733a6ed1beee 42048 4 2023-02-09 01:53:08 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment 650236a8-9a6b-45d8-8cad-fd2bb2b3c638 0xc006fc2967 0xc006fc2968}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:53:11 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"650236a8-9a6b-45d8-8cad-fd2bb2b3c638\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:53:11 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7df74c55ff,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/pause:3.9 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006fc2a10 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

    Feb  9 01:53:11.707: INFO: pod: "test-deployment-7df74c55ff-jh7sn":
    &Pod{ObjectMeta:{test-deployment-7df74c55ff-jh7sn test-deployment-7df74c55ff- deployment-6384  246b7319-e71c-442a-a755-ddbdd84c31b9 42045 0 2023-02-09 01:53:09 +0000 UTC 2023-02-09 01:53:12 +0000 UTC 0xc006fc2dc0 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7df74c55ff 1bfb3692-0692-4c14-b2c6-733a6ed1beee 0xc006fc2df7 0xc006fc2df8}] [] [{kube-controller-manager Update v1 2023-02-09 01:53:09 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1bfb3692-0692-4c14-b2c6-733a6ed1beee\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:53:10 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9g7ts,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9g7ts,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:09 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.59,StartTime:2023-02-09 01:53:09 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:53:10 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097,ContainerID:containerd://cdaf8cd5d5e6a29d8f617de05aee1998cf0fd2c056b7c40256642c9b1b1c3c38,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.59,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Feb  9 01:53:11.707: INFO: pod: "test-deployment-7df74c55ff-tvqbt":
    &Pod{ObjectMeta:{test-deployment-7df74c55ff-tvqbt test-deployment-7df74c55ff- deployment-6384  930d16f4-cba0-4999-8a9f-82ce59240102 42014 0 2023-02-09 01:53:08 +0000 UTC 2023-02-09 01:53:11 +0000 UTC 0xc006fc2fd0 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7df74c55ff 1bfb3692-0692-4c14-b2c6-733a6ed1beee 0xc006fc3007 0xc006fc3008}] [] [{kube-controller-manager Update v1 2023-02-09 01:53:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1bfb3692-0692-4c14-b2c6-733a6ed1beee\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:53:09 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.119\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-79ggf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-79ggf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:53:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.119,StartTime:2023-02-09 01:53:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:53:09 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097,ContainerID:containerd://beececc7ccf2e153022ab46503f61b2cec53af6c7c2b5680eeccda75057e5e3f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.119,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Feb  9 01:53:11.707: INFO: ReplicaSet "test-deployment-f4dbc4647":
    &ReplicaSet{ObjectMeta:{test-deployment-f4dbc4647  deployment-6384  1cb93ecb-02ee-4855-ae52-82b9ce4a30ef 41968 3 2023-02-09 01:53:07 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment 650236a8-9a6b-45d8-8cad-fd2bb2b3c638 0xc006fc2a77 0xc006fc2a78}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:53:09 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"650236a8-9a6b-45d8-8cad-fd2bb2b3c638\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:53:09 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: f4dbc4647,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006fc2b00 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:53:11.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-6384" for this suite. 02/09/23 01:53:11.724
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial]
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:222
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:53:11.737
Feb  9 01:53:11.737: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename sched-preemption 02/09/23 01:53:11.738
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:53:11.757
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:53:11.762
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:96
Feb  9 01:53:11.785: INFO: Waiting up to 1m0s for all nodes to be ready
Feb  9 01:54:11.818: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:222
STEP: Create pods that use 4/5 of node resources. 02/09/23 01:54:11.824
Feb  9 01:54:11.855: INFO: Created pod: pod0-0-sched-preemption-low-priority
Feb  9 01:54:11.874: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Feb  9 01:54:11.898: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Feb  9 01:54:11.906: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Feb  9 01:54:11.930: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Feb  9 01:54:11.938: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled. 02/09/23 01:54:11.938
Feb  9 01:54:11.938: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-2820" to be "running"
Feb  9 01:54:11.944: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 5.84579ms
Feb  9 01:54:13.951: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012694137s
Feb  9 01:54:15.951: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 4.012989484s
Feb  9 01:54:17.950: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 6.01229409s
Feb  9 01:54:19.951: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 8.012701966s
Feb  9 01:54:21.951: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 10.01252597s
Feb  9 01:54:21.951: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
Feb  9 01:54:21.951: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-2820" to be "running"
Feb  9 01:54:21.956: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.353296ms
Feb  9 01:54:21.956: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
Feb  9 01:54:21.956: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-2820" to be "running"
Feb  9 01:54:21.961: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 5.205893ms
Feb  9 01:54:23.968: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.011507012s
Feb  9 01:54:23.968: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
Feb  9 01:54:23.968: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-2820" to be "running"
Feb  9 01:54:23.976: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 8.437551ms
Feb  9 01:54:23.976: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
Feb  9 01:54:23.976: INFO: Waiting up to 5m0s for pod "pod2-0-sched-preemption-medium-priority" in namespace "sched-preemption-2820" to be "running"
Feb  9 01:54:23.982: INFO: Pod "pod2-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.683301ms
Feb  9 01:54:23.982: INFO: Pod "pod2-0-sched-preemption-medium-priority" satisfied condition "running"
Feb  9 01:54:23.982: INFO: Waiting up to 5m0s for pod "pod2-1-sched-preemption-medium-priority" in namespace "sched-preemption-2820" to be "running"
Feb  9 01:54:23.987: INFO: Pod "pod2-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.319495ms
Feb  9 01:54:23.987: INFO: Pod "pod2-1-sched-preemption-medium-priority" satisfied condition "running"
STEP: Run a critical pod that use same resources as that of a lower priority pod 02/09/23 01:54:23.987
Feb  9 01:54:24.005: INFO: Waiting up to 2m0s for pod "critical-pod" in namespace "kube-system" to be "running"
Feb  9 01:54:24.012: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 7.632636ms
Feb  9 01:54:26.020: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015621486s
Feb  9 01:54:28.020: INFO: Pod "critical-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.015038309s
Feb  9 01:54:28.020: INFO: Pod "critical-pod" satisfied condition "running"
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:54:28.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-2820" for this suite. 02/09/23 01:54:28.158
------------------------------
â€¢ [SLOW TEST] [76.431 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:222

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:53:11.737
    Feb  9 01:53:11.737: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename sched-preemption 02/09/23 01:53:11.738
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:53:11.757
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:53:11.762
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:96
    Feb  9 01:53:11.785: INFO: Waiting up to 1m0s for all nodes to be ready
    Feb  9 01:54:11.818: INFO: Waiting for terminating namespaces to be deleted...
    [It] validates lower priority pod preemption by critical pod [Conformance]
      test/e2e/scheduling/preemption.go:222
    STEP: Create pods that use 4/5 of node resources. 02/09/23 01:54:11.824
    Feb  9 01:54:11.855: INFO: Created pod: pod0-0-sched-preemption-low-priority
    Feb  9 01:54:11.874: INFO: Created pod: pod0-1-sched-preemption-medium-priority
    Feb  9 01:54:11.898: INFO: Created pod: pod1-0-sched-preemption-medium-priority
    Feb  9 01:54:11.906: INFO: Created pod: pod1-1-sched-preemption-medium-priority
    Feb  9 01:54:11.930: INFO: Created pod: pod2-0-sched-preemption-medium-priority
    Feb  9 01:54:11.938: INFO: Created pod: pod2-1-sched-preemption-medium-priority
    STEP: Wait for pods to be scheduled. 02/09/23 01:54:11.938
    Feb  9 01:54:11.938: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-2820" to be "running"
    Feb  9 01:54:11.944: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 5.84579ms
    Feb  9 01:54:13.951: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012694137s
    Feb  9 01:54:15.951: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 4.012989484s
    Feb  9 01:54:17.950: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 6.01229409s
    Feb  9 01:54:19.951: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 8.012701966s
    Feb  9 01:54:21.951: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 10.01252597s
    Feb  9 01:54:21.951: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
    Feb  9 01:54:21.951: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-2820" to be "running"
    Feb  9 01:54:21.956: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.353296ms
    Feb  9 01:54:21.956: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
    Feb  9 01:54:21.956: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-2820" to be "running"
    Feb  9 01:54:21.961: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 5.205893ms
    Feb  9 01:54:23.968: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.011507012s
    Feb  9 01:54:23.968: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
    Feb  9 01:54:23.968: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-2820" to be "running"
    Feb  9 01:54:23.976: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 8.437551ms
    Feb  9 01:54:23.976: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
    Feb  9 01:54:23.976: INFO: Waiting up to 5m0s for pod "pod2-0-sched-preemption-medium-priority" in namespace "sched-preemption-2820" to be "running"
    Feb  9 01:54:23.982: INFO: Pod "pod2-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.683301ms
    Feb  9 01:54:23.982: INFO: Pod "pod2-0-sched-preemption-medium-priority" satisfied condition "running"
    Feb  9 01:54:23.982: INFO: Waiting up to 5m0s for pod "pod2-1-sched-preemption-medium-priority" in namespace "sched-preemption-2820" to be "running"
    Feb  9 01:54:23.987: INFO: Pod "pod2-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 5.319495ms
    Feb  9 01:54:23.987: INFO: Pod "pod2-1-sched-preemption-medium-priority" satisfied condition "running"
    STEP: Run a critical pod that use same resources as that of a lower priority pod 02/09/23 01:54:23.987
    Feb  9 01:54:24.005: INFO: Waiting up to 2m0s for pod "critical-pod" in namespace "kube-system" to be "running"
    Feb  9 01:54:24.012: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 7.632636ms
    Feb  9 01:54:26.020: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015621486s
    Feb  9 01:54:28.020: INFO: Pod "critical-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.015038309s
    Feb  9 01:54:28.020: INFO: Pod "critical-pod" satisfied condition "running"
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:54:28.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-2820" for this suite. 02/09/23 01:54:28.158
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] Deployment
  deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:54:28.17
Feb  9 01:54:28.170: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename deployment 02/09/23 01:54:28.171
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:28.189
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:28.194
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160
Feb  9 01:54:28.199: INFO: Creating deployment "webserver-deployment"
Feb  9 01:54:28.207: INFO: Waiting for observed generation 1
Feb  9 01:54:30.220: INFO: Waiting for all required pods to come up
Feb  9 01:54:30.228: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running 02/09/23 01:54:30.228
Feb  9 01:54:30.228: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-lqfv6" in namespace "deployment-4271" to be "running"
Feb  9 01:54:30.228: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-zkv84" in namespace "deployment-4271" to be "running"
Feb  9 01:54:30.234: INFO: Pod "webserver-deployment-7f5969cbc7-lqfv6": Phase="Pending", Reason="", readiness=false. Elapsed: 5.485196ms
Feb  9 01:54:30.235: INFO: Pod "webserver-deployment-7f5969cbc7-zkv84": Phase="Pending", Reason="", readiness=false. Elapsed: 6.699318ms
Feb  9 01:54:32.242: INFO: Pod "webserver-deployment-7f5969cbc7-lqfv6": Phase="Running", Reason="", readiness=true. Elapsed: 2.013601428s
Feb  9 01:54:32.242: INFO: Pod "webserver-deployment-7f5969cbc7-lqfv6" satisfied condition "running"
Feb  9 01:54:32.243: INFO: Pod "webserver-deployment-7f5969cbc7-zkv84": Phase="Running", Reason="", readiness=true. Elapsed: 2.014043636s
Feb  9 01:54:32.243: INFO: Pod "webserver-deployment-7f5969cbc7-zkv84" satisfied condition "running"
Feb  9 01:54:32.243: INFO: Waiting for deployment "webserver-deployment" to complete
Feb  9 01:54:32.254: INFO: Updating deployment "webserver-deployment" with a non-existent image
Feb  9 01:54:32.267: INFO: Updating deployment webserver-deployment
Feb  9 01:54:32.267: INFO: Waiting for observed generation 2
Feb  9 01:54:34.280: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Feb  9 01:54:34.287: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Feb  9 01:54:34.293: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Feb  9 01:54:34.310: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Feb  9 01:54:34.310: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Feb  9 01:54:34.317: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Feb  9 01:54:34.327: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Feb  9 01:54:34.327: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Feb  9 01:54:34.341: INFO: Updating deployment webserver-deployment
Feb  9 01:54:34.341: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Feb  9 01:54:34.353: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Feb  9 01:54:36.367: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Feb  9 01:54:36.379: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-4271  ffffaea7-6827-421c-9d54-7a31d3c83a55 42919 3 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003ba7198 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:33,UpdatedReplicas:13,AvailableReplicas:8,UnavailableReplicas:25,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-02-09 01:54:34 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-d9f79cb5" is progressing.,LastUpdateTime:2023-02-09 01:54:34 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Feb  9 01:54:36.385: INFO: New ReplicaSet "webserver-deployment-d9f79cb5" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-d9f79cb5  deployment-4271  23315300-aa67-4f93-b144-dac4293cd139 42914 3 2023-02-09 01:54:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment ffffaea7-6827-421c-9d54-7a31d3c83a55 0xc003ba76a7 0xc003ba76a8}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ffffaea7-6827-421c-9d54-7a31d3c83a55\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: d9f79cb5,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003ba7748 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:13,FullyLabeledReplicas:13,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Feb  9 01:54:36.385: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Feb  9 01:54:36.386: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-7f5969cbc7  deployment-4271  17de2e9a-c245-4d5b-a16c-076b7d3afc8d 42917 3 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment ffffaea7-6827-421c-9d54-7a31d3c83a55 0xc003ba75b7 0xc003ba75b8}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ffffaea7-6827-421c-9d54-7a31d3c83a55\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003ba7648 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:20,FullyLabeledReplicas:20,ObservedGeneration:3,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Feb  9 01:54:36.396: INFO: Pod "webserver-deployment-7f5969cbc7-46qx7" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-46qx7 webserver-deployment-7f5969cbc7- deployment-4271  e10ccb81-92c0-4ebf-8711-12bc5cd33279 42668 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b400b7 0xc003b400b8}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.102\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-c2sm4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-c2sm4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:10.244.2.102,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://7f64e3b8e9491fb54a35652a743d09386769420e4ae8afdb12dcf9c6ca16acef,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.102,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.396: INFO: Pod "webserver-deployment-7f5969cbc7-67mlt" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-67mlt webserver-deployment-7f5969cbc7- deployment-4271  4ce23e6d-4aed-45b6-85da-c661707a69b3 42840 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b40290 0xc003b40291}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vtgdr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vtgdr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.396: INFO: Pod "webserver-deployment-7f5969cbc7-6gmf4" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-6gmf4 webserver-deployment-7f5969cbc7- deployment-4271  66fc79ca-9637-4e65-ac39-c46571ef138b 42898 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b403e0 0xc003b403e1}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-c9s8t,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-c9s8t,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.397: INFO: Pod "webserver-deployment-7f5969cbc7-6pz94" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-6pz94 webserver-deployment-7f5969cbc7- deployment-4271  a0e98899-bce2-41df-8612-1487b24714fe 42893 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b40830 0xc003b40831}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pkskr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pkskr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.397: INFO: Pod "webserver-deployment-7f5969cbc7-dvhnb" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-dvhnb webserver-deployment-7f5969cbc7- deployment-4271  d34c4150-0e92-46b1-b8f0-e2b4079e716f 42979 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b40e80 0xc003b40e81}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z2s8l,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z2s8l,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.397: INFO: Pod "webserver-deployment-7f5969cbc7-fbp9f" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-fbp9f webserver-deployment-7f5969cbc7- deployment-4271  e9e0a355-0ce8-49d7-86b8-1cd4954a9ede 42876 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41380 0xc003b41381}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-276t5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-276t5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.397: INFO: Pod "webserver-deployment-7f5969cbc7-hz655" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-hz655 webserver-deployment-7f5969cbc7- deployment-4271  bbee66bf-a3d7-4faf-873a-af6e360636f2 42890 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41610 0xc003b41611}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p9wb6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p9wb6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.397: INFO: Pod "webserver-deployment-7f5969cbc7-k647v" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-k647v webserver-deployment-7f5969cbc7- deployment-4271  50fff7b0-6041-4da6-ba63-2fb6b6d98ac1 42671 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41760 0xc003b41761}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.65\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9bplj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9bplj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.65,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://d6b2f8ca541296e1a87d024bbc810cad535aa44c0310b3d33baf3c646e154c8e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.65,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.398: INFO: Pod "webserver-deployment-7f5969cbc7-lk48m" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-lk48m webserver-deployment-7f5969cbc7- deployment-4271  064b0211-3057-4327-9fbd-47668a689efe 42665 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41930 0xc003b41931}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.100\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-czscs,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-czscs,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:10.244.2.100,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://f74d8bf0abd498f35cf984791ea544f42b860133d507d24a61557cc2b3379107,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.100,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.398: INFO: Pod "webserver-deployment-7f5969cbc7-mmxmh" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-mmxmh webserver-deployment-7f5969cbc7- deployment-4271  5693c24b-a6a1-4886-9560-2dea67bab820 42645 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41b00 0xc003b41b01}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.123\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nbvpj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nbvpj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.123,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://79b496145d976d87401dc69630ebbe863494481b5c33cfc55c36f9c06601b649,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.123,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.398: INFO: Pod "webserver-deployment-7f5969cbc7-rmvzf" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-rmvzf webserver-deployment-7f5969cbc7- deployment-4271  996e3bcf-d8fb-4e20-a404-bbb336fe3573 42982 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41cd0 0xc003b41cd1}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-snj6h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-snj6h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.398: INFO: Pod "webserver-deployment-7f5969cbc7-rxg5b" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-rxg5b webserver-deployment-7f5969cbc7- deployment-4271  03d78157-f514-4ee5-af95-be185c4cdb33 42662 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41e80 0xc003b41e81}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.101\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jndl4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jndl4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:10.244.2.101,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:29 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://3a24222c0d816294b0b979b35391b906917ced498f59bc292c812f0d1ae075d6,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.101,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.398: INFO: Pod "webserver-deployment-7f5969cbc7-t4nhl" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-t4nhl webserver-deployment-7f5969cbc7- deployment-4271  e32bdca6-357a-458a-954f-b80838c16a16 42889 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc2340 0xc006fc2341}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4j9fv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4j9fv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.398: INFO: Pod "webserver-deployment-7f5969cbc7-t6v5j" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-t6v5j webserver-deployment-7f5969cbc7- deployment-4271  aa7c20e9-50b9-4ba1-8a38-45a8d1100263 42655 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc2490 0xc006fc2491}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.124\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p5s9q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p5s9q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.124,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://40f72232f30933c657955bc615754fa3e767e956bae22d30501301f855811008,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.124,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.399: INFO: Pod "webserver-deployment-7f5969cbc7-tjsjg" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-tjsjg webserver-deployment-7f5969cbc7- deployment-4271  47de108f-1e77-4adb-be08-be21b02ce3c9 42859 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc2670 0xc006fc2671}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f856v,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f856v,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.399: INFO: Pod "webserver-deployment-7f5969cbc7-vdth5" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-vdth5 webserver-deployment-7f5969cbc7- deployment-4271  b0846bab-6d74-45f4-8ab9-53e6ace30be1 42641 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc27c0 0xc006fc27c1}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.125\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-g4wcl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-g4wcl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.125,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://311a06fe71546eb120b09718f310f99da11a6400b56cf49fb84718c1c74e8a42,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.125,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.399: INFO: Pod "webserver-deployment-7f5969cbc7-x8hjp" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-x8hjp webserver-deployment-7f5969cbc7- deployment-4271  79eb8d98-caac-41a5-86d8-57cadd42a588 42913 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc29c0 0xc006fc29c1}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-r8w6h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-r8w6h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.399: INFO: Pod "webserver-deployment-7f5969cbc7-xppqq" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-xppqq webserver-deployment-7f5969cbc7- deployment-4271  fa31b996-ab31-4f19-9451-b33d464e819f 42862 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc2b80 0xc006fc2b81}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bwdjg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bwdjg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.399: INFO: Pod "webserver-deployment-7f5969cbc7-z2fcr" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-z2fcr webserver-deployment-7f5969cbc7- deployment-4271  77f2d504-6166-4429-b6a3-c6511b3aef84 42839 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc2cd0 0xc006fc2cd1}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mzk6w,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mzk6w,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.399: INFO: Pod "webserver-deployment-7f5969cbc7-zkv84" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-zkv84 webserver-deployment-7f5969cbc7- deployment-4271  bb65f188-0e65-422b-98b1-9c9c36a00e2d 42682 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc2e30 0xc006fc2e31}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:30 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.67\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vkv8f,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vkv8f,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.67,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:29 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c1ade1dc7decb04a526593b128e90dd64b214bc114f9fe4221dd7457cb0b1205,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.67,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.400: INFO: Pod "webserver-deployment-d9f79cb5-4jvw9" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-4jvw9 webserver-deployment-d9f79cb5- deployment-4271  102d0f06-06ae-4da5-bb3b-fbc4615e713d 42891 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc2fff 0xc006fc3010}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vl7j5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vl7j5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.400: INFO: Pod "webserver-deployment-d9f79cb5-drmln" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-drmln webserver-deployment-d9f79cb5- deployment-4271  9838d026-7b03-41c3-abe4-43f7a148290e 42820 0 2023-02-09 01:54:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc316f 0xc006fc3180}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.68\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ntctc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ntctc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.68,StartTime:2023-02-09 01:54:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.68,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.400: INFO: Pod "webserver-deployment-d9f79cb5-fnrs8" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-fnrs8 webserver-deployment-d9f79cb5- deployment-4271  ea074614-c2e4-47aa-8675-96fabffd4193 42765 0 2023-02-09 01:54:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc337f 0xc006fc3390}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:33 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.126\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vch75,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vch75,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.126,StartTime:2023-02-09 01:54:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.126,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.400: INFO: Pod "webserver-deployment-d9f79cb5-jbfjm" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-jbfjm webserver-deployment-d9f79cb5- deployment-4271  a5b9af08-bcc0-4c59-a856-4bcde0c0c101 42848 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc357f 0xc006fc3590}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2tz8m,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2tz8m,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.401: INFO: Pod "webserver-deployment-d9f79cb5-jjgkb" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-jjgkb webserver-deployment-d9f79cb5- deployment-4271  dacadb7d-778c-44cd-ac03-5493c18310ad 42869 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc36df 0xc006fc36f0}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5dnsz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5dnsz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.401: INFO: Pod "webserver-deployment-d9f79cb5-jlh65" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-jlh65 webserver-deployment-d9f79cb5- deployment-4271  6400c165-c3db-469a-b21d-65b369774255 42918 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc383f 0xc006fc3850}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gjnr6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gjnr6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.401: INFO: Pod "webserver-deployment-d9f79cb5-kr49x" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-kr49x webserver-deployment-d9f79cb5- deployment-4271  4a544d97-158c-4827-a467-b03bbc368ef9 42900 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc3a0f 0xc006fc3a20}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mwfsl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mwfsl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.401: INFO: Pod "webserver-deployment-d9f79cb5-nvgjw" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-nvgjw webserver-deployment-d9f79cb5- deployment-4271  cd3691d7-f1a4-4e0a-b433-13bacc16e4da 42768 0 2023-02-09 01:54:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc3bdf 0xc006fc3bf0}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:33 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.127\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h7757,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h7757,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.127,StartTime:2023-02-09 01:54:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.127,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.401: INFO: Pod "webserver-deployment-d9f79cb5-pmcc6" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-pmcc6 webserver-deployment-d9f79cb5- deployment-4271  68c5ecb2-33a9-469f-b43e-07cf946ca1bc 42810 0 2023-02-09 01:54:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc3ddf 0xc006fc3df0}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:33 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.103\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pjjhw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pjjhw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:10.244.2.103,StartTime:2023-02-09 01:54:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.103,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.401: INFO: Pod "webserver-deployment-d9f79cb5-qh6t4" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-qh6t4 webserver-deployment-d9f79cb5- deployment-4271  3bddfea6-30b1-4b02-ab7b-8affb107c419 42872 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc3fdf 0xc006fc3ff0}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tftm8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tftm8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.402: INFO: Pod "webserver-deployment-d9f79cb5-sfl9p" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-sfl9p webserver-deployment-d9f79cb5- deployment-4271  d5774e67-a79c-49da-a8bc-323e38404c8d 42847 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc003e9413f 0xc003e94150}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2nzxj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2nzxj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.402: INFO: Pod "webserver-deployment-d9f79cb5-vtbzw" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-vtbzw webserver-deployment-d9f79cb5- deployment-4271  b67e9f87-4c71-40eb-9b98-9b092efe8e48 42813 0 2023-02-09 01:54:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc003e9430f 0xc003e94320}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:33 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.69\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-58l2h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-58l2h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.69,StartTime:2023-02-09 01:54:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.69,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Feb  9 01:54:36.402: INFO: Pod "webserver-deployment-d9f79cb5-w48sx" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-w48sx webserver-deployment-d9f79cb5- deployment-4271  3ed0f415-5011-4069-bfcb-1637633d279b 42910 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc003e9450f 0xc003e94520}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2n85m,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2n85m,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Feb  9 01:54:36.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-4271" for this suite. 02/09/23 01:54:36.409
------------------------------
â€¢ [SLOW TEST] [8.248 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:54:28.17
    Feb  9 01:54:28.170: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename deployment 02/09/23 01:54:28.171
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:28.189
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:28.194
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should support proportional scaling [Conformance]
      test/e2e/apps/deployment.go:160
    Feb  9 01:54:28.199: INFO: Creating deployment "webserver-deployment"
    Feb  9 01:54:28.207: INFO: Waiting for observed generation 1
    Feb  9 01:54:30.220: INFO: Waiting for all required pods to come up
    Feb  9 01:54:30.228: INFO: Pod name httpd: Found 10 pods out of 10
    STEP: ensuring each pod is running 02/09/23 01:54:30.228
    Feb  9 01:54:30.228: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-lqfv6" in namespace "deployment-4271" to be "running"
    Feb  9 01:54:30.228: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-zkv84" in namespace "deployment-4271" to be "running"
    Feb  9 01:54:30.234: INFO: Pod "webserver-deployment-7f5969cbc7-lqfv6": Phase="Pending", Reason="", readiness=false. Elapsed: 5.485196ms
    Feb  9 01:54:30.235: INFO: Pod "webserver-deployment-7f5969cbc7-zkv84": Phase="Pending", Reason="", readiness=false. Elapsed: 6.699318ms
    Feb  9 01:54:32.242: INFO: Pod "webserver-deployment-7f5969cbc7-lqfv6": Phase="Running", Reason="", readiness=true. Elapsed: 2.013601428s
    Feb  9 01:54:32.242: INFO: Pod "webserver-deployment-7f5969cbc7-lqfv6" satisfied condition "running"
    Feb  9 01:54:32.243: INFO: Pod "webserver-deployment-7f5969cbc7-zkv84": Phase="Running", Reason="", readiness=true. Elapsed: 2.014043636s
    Feb  9 01:54:32.243: INFO: Pod "webserver-deployment-7f5969cbc7-zkv84" satisfied condition "running"
    Feb  9 01:54:32.243: INFO: Waiting for deployment "webserver-deployment" to complete
    Feb  9 01:54:32.254: INFO: Updating deployment "webserver-deployment" with a non-existent image
    Feb  9 01:54:32.267: INFO: Updating deployment webserver-deployment
    Feb  9 01:54:32.267: INFO: Waiting for observed generation 2
    Feb  9 01:54:34.280: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
    Feb  9 01:54:34.287: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
    Feb  9 01:54:34.293: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
    Feb  9 01:54:34.310: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
    Feb  9 01:54:34.310: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
    Feb  9 01:54:34.317: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
    Feb  9 01:54:34.327: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
    Feb  9 01:54:34.327: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
    Feb  9 01:54:34.341: INFO: Updating deployment webserver-deployment
    Feb  9 01:54:34.341: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
    Feb  9 01:54:34.353: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
    Feb  9 01:54:36.367: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Feb  9 01:54:36.379: INFO: Deployment "webserver-deployment":
    &Deployment{ObjectMeta:{webserver-deployment  deployment-4271  ffffaea7-6827-421c-9d54-7a31d3c83a55 42919 3 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003ba7198 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:33,UpdatedReplicas:13,AvailableReplicas:8,UnavailableReplicas:25,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-02-09 01:54:34 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-d9f79cb5" is progressing.,LastUpdateTime:2023-02-09 01:54:34 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

    Feb  9 01:54:36.385: INFO: New ReplicaSet "webserver-deployment-d9f79cb5" of Deployment "webserver-deployment":
    &ReplicaSet{ObjectMeta:{webserver-deployment-d9f79cb5  deployment-4271  23315300-aa67-4f93-b144-dac4293cd139 42914 3 2023-02-09 01:54:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment ffffaea7-6827-421c-9d54-7a31d3c83a55 0xc003ba76a7 0xc003ba76a8}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ffffaea7-6827-421c-9d54-7a31d3c83a55\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: d9f79cb5,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003ba7748 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:13,FullyLabeledReplicas:13,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Feb  9 01:54:36.385: INFO: All old ReplicaSets of Deployment "webserver-deployment":
    Feb  9 01:54:36.386: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-7f5969cbc7  deployment-4271  17de2e9a-c245-4d5b-a16c-076b7d3afc8d 42917 3 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment ffffaea7-6827-421c-9d54-7a31d3c83a55 0xc003ba75b7 0xc003ba75b8}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ffffaea7-6827-421c-9d54-7a31d3c83a55\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003ba7648 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:20,FullyLabeledReplicas:20,ObservedGeneration:3,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
    Feb  9 01:54:36.396: INFO: Pod "webserver-deployment-7f5969cbc7-46qx7" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-46qx7 webserver-deployment-7f5969cbc7- deployment-4271  e10ccb81-92c0-4ebf-8711-12bc5cd33279 42668 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b400b7 0xc003b400b8}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.102\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-c2sm4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-c2sm4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:10.244.2.102,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://7f64e3b8e9491fb54a35652a743d09386769420e4ae8afdb12dcf9c6ca16acef,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.102,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.396: INFO: Pod "webserver-deployment-7f5969cbc7-67mlt" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-67mlt webserver-deployment-7f5969cbc7- deployment-4271  4ce23e6d-4aed-45b6-85da-c661707a69b3 42840 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b40290 0xc003b40291}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vtgdr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vtgdr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.396: INFO: Pod "webserver-deployment-7f5969cbc7-6gmf4" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-6gmf4 webserver-deployment-7f5969cbc7- deployment-4271  66fc79ca-9637-4e65-ac39-c46571ef138b 42898 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b403e0 0xc003b403e1}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-c9s8t,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-c9s8t,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.397: INFO: Pod "webserver-deployment-7f5969cbc7-6pz94" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-6pz94 webserver-deployment-7f5969cbc7- deployment-4271  a0e98899-bce2-41df-8612-1487b24714fe 42893 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b40830 0xc003b40831}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pkskr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pkskr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.397: INFO: Pod "webserver-deployment-7f5969cbc7-dvhnb" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-dvhnb webserver-deployment-7f5969cbc7- deployment-4271  d34c4150-0e92-46b1-b8f0-e2b4079e716f 42979 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b40e80 0xc003b40e81}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z2s8l,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z2s8l,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.397: INFO: Pod "webserver-deployment-7f5969cbc7-fbp9f" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-fbp9f webserver-deployment-7f5969cbc7- deployment-4271  e9e0a355-0ce8-49d7-86b8-1cd4954a9ede 42876 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41380 0xc003b41381}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-276t5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-276t5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.397: INFO: Pod "webserver-deployment-7f5969cbc7-hz655" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-hz655 webserver-deployment-7f5969cbc7- deployment-4271  bbee66bf-a3d7-4faf-873a-af6e360636f2 42890 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41610 0xc003b41611}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p9wb6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p9wb6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.397: INFO: Pod "webserver-deployment-7f5969cbc7-k647v" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-k647v webserver-deployment-7f5969cbc7- deployment-4271  50fff7b0-6041-4da6-ba63-2fb6b6d98ac1 42671 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41760 0xc003b41761}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.65\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9bplj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9bplj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.65,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://d6b2f8ca541296e1a87d024bbc810cad535aa44c0310b3d33baf3c646e154c8e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.65,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.398: INFO: Pod "webserver-deployment-7f5969cbc7-lk48m" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-lk48m webserver-deployment-7f5969cbc7- deployment-4271  064b0211-3057-4327-9fbd-47668a689efe 42665 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41930 0xc003b41931}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.100\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-czscs,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-czscs,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:10.244.2.100,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://f74d8bf0abd498f35cf984791ea544f42b860133d507d24a61557cc2b3379107,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.100,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.398: INFO: Pod "webserver-deployment-7f5969cbc7-mmxmh" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-mmxmh webserver-deployment-7f5969cbc7- deployment-4271  5693c24b-a6a1-4886-9560-2dea67bab820 42645 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41b00 0xc003b41b01}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.123\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nbvpj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nbvpj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.123,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://79b496145d976d87401dc69630ebbe863494481b5c33cfc55c36f9c06601b649,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.123,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.398: INFO: Pod "webserver-deployment-7f5969cbc7-rmvzf" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-rmvzf webserver-deployment-7f5969cbc7- deployment-4271  996e3bcf-d8fb-4e20-a404-bbb336fe3573 42982 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41cd0 0xc003b41cd1}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-snj6h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-snj6h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.398: INFO: Pod "webserver-deployment-7f5969cbc7-rxg5b" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-rxg5b webserver-deployment-7f5969cbc7- deployment-4271  03d78157-f514-4ee5-af95-be185c4cdb33 42662 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc003b41e80 0xc003b41e81}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.101\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jndl4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jndl4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:10.244.2.101,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:29 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://3a24222c0d816294b0b979b35391b906917ced498f59bc292c812f0d1ae075d6,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.101,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.398: INFO: Pod "webserver-deployment-7f5969cbc7-t4nhl" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-t4nhl webserver-deployment-7f5969cbc7- deployment-4271  e32bdca6-357a-458a-954f-b80838c16a16 42889 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc2340 0xc006fc2341}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4j9fv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4j9fv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.398: INFO: Pod "webserver-deployment-7f5969cbc7-t6v5j" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-t6v5j webserver-deployment-7f5969cbc7- deployment-4271  aa7c20e9-50b9-4ba1-8a38-45a8d1100263 42655 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc2490 0xc006fc2491}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.124\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p5s9q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p5s9q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.124,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://40f72232f30933c657955bc615754fa3e767e956bae22d30501301f855811008,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.124,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.399: INFO: Pod "webserver-deployment-7f5969cbc7-tjsjg" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-tjsjg webserver-deployment-7f5969cbc7- deployment-4271  47de108f-1e77-4adb-be08-be21b02ce3c9 42859 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc2670 0xc006fc2671}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f856v,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f856v,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.399: INFO: Pod "webserver-deployment-7f5969cbc7-vdth5" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-vdth5 webserver-deployment-7f5969cbc7- deployment-4271  b0846bab-6d74-45f4-8ab9-53e6ace30be1 42641 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc27c0 0xc006fc27c1}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.125\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-g4wcl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-g4wcl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.125,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://311a06fe71546eb120b09718f310f99da11a6400b56cf49fb84718c1c74e8a42,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.125,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.399: INFO: Pod "webserver-deployment-7f5969cbc7-x8hjp" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-x8hjp webserver-deployment-7f5969cbc7- deployment-4271  79eb8d98-caac-41a5-86d8-57cadd42a588 42913 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc29c0 0xc006fc29c1}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-r8w6h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-r8w6h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.399: INFO: Pod "webserver-deployment-7f5969cbc7-xppqq" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-xppqq webserver-deployment-7f5969cbc7- deployment-4271  fa31b996-ab31-4f19-9451-b33d464e819f 42862 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc2b80 0xc006fc2b81}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bwdjg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bwdjg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.399: INFO: Pod "webserver-deployment-7f5969cbc7-z2fcr" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-z2fcr webserver-deployment-7f5969cbc7- deployment-4271  77f2d504-6166-4429-b6a3-c6511b3aef84 42839 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc2cd0 0xc006fc2cd1}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mzk6w,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mzk6w,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.399: INFO: Pod "webserver-deployment-7f5969cbc7-zkv84" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-zkv84 webserver-deployment-7f5969cbc7- deployment-4271  bb65f188-0e65-422b-98b1-9c9c36a00e2d 42682 0 2023-02-09 01:54:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 17de2e9a-c245-4d5b-a16c-076b7d3afc8d 0xc006fc2e30 0xc006fc2e31}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17de2e9a-c245-4d5b-a16c-076b7d3afc8d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:30 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.67\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vkv8f,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vkv8f,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.67,StartTime:2023-02-09 01:54:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:54:29 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c1ade1dc7decb04a526593b128e90dd64b214bc114f9fe4221dd7457cb0b1205,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.67,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.400: INFO: Pod "webserver-deployment-d9f79cb5-4jvw9" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-4jvw9 webserver-deployment-d9f79cb5- deployment-4271  102d0f06-06ae-4da5-bb3b-fbc4615e713d 42891 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc2fff 0xc006fc3010}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vl7j5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vl7j5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.400: INFO: Pod "webserver-deployment-d9f79cb5-drmln" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-drmln webserver-deployment-d9f79cb5- deployment-4271  9838d026-7b03-41c3-abe4-43f7a148290e 42820 0 2023-02-09 01:54:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc316f 0xc006fc3180}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.68\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ntctc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ntctc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.68,StartTime:2023-02-09 01:54:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.68,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.400: INFO: Pod "webserver-deployment-d9f79cb5-fnrs8" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-fnrs8 webserver-deployment-d9f79cb5- deployment-4271  ea074614-c2e4-47aa-8675-96fabffd4193 42765 0 2023-02-09 01:54:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc337f 0xc006fc3390}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:33 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.126\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vch75,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vch75,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.126,StartTime:2023-02-09 01:54:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.126,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.400: INFO: Pod "webserver-deployment-d9f79cb5-jbfjm" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-jbfjm webserver-deployment-d9f79cb5- deployment-4271  a5b9af08-bcc0-4c59-a856-4bcde0c0c101 42848 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc357f 0xc006fc3590}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2tz8m,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2tz8m,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.401: INFO: Pod "webserver-deployment-d9f79cb5-jjgkb" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-jjgkb webserver-deployment-d9f79cb5- deployment-4271  dacadb7d-778c-44cd-ac03-5493c18310ad 42869 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc36df 0xc006fc36f0}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5dnsz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5dnsz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.401: INFO: Pod "webserver-deployment-d9f79cb5-jlh65" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-jlh65 webserver-deployment-d9f79cb5- deployment-4271  6400c165-c3db-469a-b21d-65b369774255 42918 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc383f 0xc006fc3850}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gjnr6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gjnr6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.401: INFO: Pod "webserver-deployment-d9f79cb5-kr49x" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-kr49x webserver-deployment-d9f79cb5- deployment-4271  4a544d97-158c-4827-a467-b03bbc368ef9 42900 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc3a0f 0xc006fc3a20}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mwfsl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mwfsl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.401: INFO: Pod "webserver-deployment-d9f79cb5-nvgjw" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-nvgjw webserver-deployment-d9f79cb5- deployment-4271  cd3691d7-f1a4-4e0a-b433-13bacc16e4da 42768 0 2023-02-09 01:54:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc3bdf 0xc006fc3bf0}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:33 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.127\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h7757,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h7757,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.5,PodIP:10.244.1.127,StartTime:2023-02-09 01:54:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.127,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.401: INFO: Pod "webserver-deployment-d9f79cb5-pmcc6" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-pmcc6 webserver-deployment-d9f79cb5- deployment-4271  68c5ecb2-33a9-469f-b43e-07cf946ca1bc 42810 0 2023-02-09 01:54:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc3ddf 0xc006fc3df0}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:33 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.103\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pjjhw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pjjhw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:10.244.2.103,StartTime:2023-02-09 01:54:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.103,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.401: INFO: Pod "webserver-deployment-d9f79cb5-qh6t4" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-qh6t4 webserver-deployment-d9f79cb5- deployment-4271  3bddfea6-30b1-4b02-ab7b-8affb107c419 42872 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc006fc3fdf 0xc006fc3ff0}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tftm8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tftm8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.402: INFO: Pod "webserver-deployment-d9f79cb5-sfl9p" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-sfl9p webserver-deployment-d9f79cb5- deployment-4271  d5774e67-a79c-49da-a8bc-323e38404c8d 42847 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc003e9413f 0xc003e94150}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2nzxj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2nzxj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.402: INFO: Pod "webserver-deployment-d9f79cb5-vtbzw" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-vtbzw webserver-deployment-d9f79cb5- deployment-4271  b67e9f87-4c71-40eb-9b98-9b092efe8e48 42813 0 2023-02-09 01:54:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc003e9430f 0xc003e94320}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:33 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.69\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-58l2h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-58l2h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.69,StartTime:2023-02-09 01:54:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.69,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Feb  9 01:54:36.402: INFO: Pod "webserver-deployment-d9f79cb5-w48sx" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-w48sx webserver-deployment-d9f79cb5- deployment-4271  3ed0f415-5011-4069-bfcb-1637633d279b 42910 0 2023-02-09 01:54:34 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 23315300-aa67-4f93-b144-dac4293cd139 0xc003e9450f 0xc003e94520}] [] [{kube-controller-manager Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"23315300-aa67-4f93-b144-dac4293cd139\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:54:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2n85m,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2n85m,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:54:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.6,PodIP:,StartTime:2023-02-09 01:54:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:54:36.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-4271" for this suite. 02/09/23 01:54:36.409
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass
   should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:54:36.422
Feb  9 01:54:36.422: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename runtimeclass 02/09/23 01:54:36.423
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:36.441
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:36.445
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189
STEP: getting /apis 02/09/23 01:54:36.449
STEP: getting /apis/node.k8s.io 02/09/23 01:54:36.453
STEP: getting /apis/node.k8s.io/v1 02/09/23 01:54:36.455
STEP: creating 02/09/23 01:54:36.457
STEP: watching 02/09/23 01:54:36.477
Feb  9 01:54:36.478: INFO: starting watch
STEP: getting 02/09/23 01:54:36.488
STEP: listing 02/09/23 01:54:36.494
STEP: patching 02/09/23 01:54:36.499
STEP: updating 02/09/23 01:54:36.505
Feb  9 01:54:36.518: INFO: waiting for watch events with expected annotations
STEP: deleting 02/09/23 01:54:36.518
STEP: deleting a collection 02/09/23 01:54:36.539
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Feb  9 01:54:36.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-2187" for this suite. 02/09/23 01:54:36.572
------------------------------
â€¢ [0.160 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
   should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:54:36.422
    Feb  9 01:54:36.422: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename runtimeclass 02/09/23 01:54:36.423
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:36.441
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:36.445
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It]  should support RuntimeClasses API operations [Conformance]
      test/e2e/common/node/runtimeclass.go:189
    STEP: getting /apis 02/09/23 01:54:36.449
    STEP: getting /apis/node.k8s.io 02/09/23 01:54:36.453
    STEP: getting /apis/node.k8s.io/v1 02/09/23 01:54:36.455
    STEP: creating 02/09/23 01:54:36.457
    STEP: watching 02/09/23 01:54:36.477
    Feb  9 01:54:36.478: INFO: starting watch
    STEP: getting 02/09/23 01:54:36.488
    STEP: listing 02/09/23 01:54:36.494
    STEP: patching 02/09/23 01:54:36.499
    STEP: updating 02/09/23 01:54:36.505
    Feb  9 01:54:36.518: INFO: waiting for watch events with expected annotations
    STEP: deleting 02/09/23 01:54:36.518
    STEP: deleting a collection 02/09/23 01:54:36.539
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:54:36.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-2187" for this suite. 02/09/23 01:54:36.572
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:54:36.583
Feb  9 01:54:36.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:54:36.584
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:36.602
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:36.607
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153
Feb  9 01:54:36.611: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 02/09/23 01:54:38.808
Feb  9 01:54:38.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-8358 --namespace=crd-publish-openapi-8358 create -f -'
Feb  9 01:54:39.352: INFO: stderr: ""
Feb  9 01:54:39.352: INFO: stdout: "e2e-test-crd-publish-openapi-5481-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Feb  9 01:54:39.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-8358 --namespace=crd-publish-openapi-8358 delete e2e-test-crd-publish-openapi-5481-crds test-cr'
Feb  9 01:54:39.433: INFO: stderr: ""
Feb  9 01:54:39.433: INFO: stdout: "e2e-test-crd-publish-openapi-5481-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Feb  9 01:54:39.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-8358 --namespace=crd-publish-openapi-8358 apply -f -'
Feb  9 01:54:39.606: INFO: stderr: ""
Feb  9 01:54:39.607: INFO: stdout: "e2e-test-crd-publish-openapi-5481-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Feb  9 01:54:39.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-8358 --namespace=crd-publish-openapi-8358 delete e2e-test-crd-publish-openapi-5481-crds test-cr'
Feb  9 01:54:39.685: INFO: stderr: ""
Feb  9 01:54:39.685: INFO: stdout: "e2e-test-crd-publish-openapi-5481-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema 02/09/23 01:54:39.685
Feb  9 01:54:39.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-8358 explain e2e-test-crd-publish-openapi-5481-crds'
Feb  9 01:54:39.856: INFO: stderr: ""
Feb  9 01:54:39.856: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5481-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:54:41.557: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-8358" for this suite. 02/09/23 01:54:41.576
------------------------------
â€¢ [SLOW TEST] [5.005 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:54:36.583
    Feb  9 01:54:36.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:54:36.584
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:36.602
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:36.607
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD without validation schema [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:153
    Feb  9 01:54:36.611: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 02/09/23 01:54:38.808
    Feb  9 01:54:38.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-8358 --namespace=crd-publish-openapi-8358 create -f -'
    Feb  9 01:54:39.352: INFO: stderr: ""
    Feb  9 01:54:39.352: INFO: stdout: "e2e-test-crd-publish-openapi-5481-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
    Feb  9 01:54:39.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-8358 --namespace=crd-publish-openapi-8358 delete e2e-test-crd-publish-openapi-5481-crds test-cr'
    Feb  9 01:54:39.433: INFO: stderr: ""
    Feb  9 01:54:39.433: INFO: stdout: "e2e-test-crd-publish-openapi-5481-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
    Feb  9 01:54:39.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-8358 --namespace=crd-publish-openapi-8358 apply -f -'
    Feb  9 01:54:39.606: INFO: stderr: ""
    Feb  9 01:54:39.607: INFO: stdout: "e2e-test-crd-publish-openapi-5481-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
    Feb  9 01:54:39.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-8358 --namespace=crd-publish-openapi-8358 delete e2e-test-crd-publish-openapi-5481-crds test-cr'
    Feb  9 01:54:39.685: INFO: stderr: ""
    Feb  9 01:54:39.685: INFO: stdout: "e2e-test-crd-publish-openapi-5481-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR without validation schema 02/09/23 01:54:39.685
    Feb  9 01:54:39.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=crd-publish-openapi-8358 explain e2e-test-crd-publish-openapi-5481-crds'
    Feb  9 01:54:39.856: INFO: stderr: ""
    Feb  9 01:54:39.856: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5481-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:54:41.557: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-8358" for this suite. 02/09/23 01:54:41.576
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:54:41.589
Feb  9 01:54:41.589: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 01:54:41.59
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:41.614
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:41.62
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 01:54:41.654
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:54:42.199
STEP: Deploying the webhook pod 02/09/23 01:54:42.208
STEP: Wait for the deployment to be ready 02/09/23 01:54:42.228
Feb  9 01:54:42.244: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Feb  9 01:54:44.264: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 54, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 54, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 54, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 54, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 02/09/23 01:54:46.272
STEP: Verifying the service has paired with the endpoint 02/09/23 01:54:46.287
Feb  9 01:54:47.288: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API 02/09/23 01:54:47.294
STEP: create a configmap that should be updated by the webhook 02/09/23 01:54:47.315
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:54:47.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-4877" for this suite. 02/09/23 01:54:47.399
STEP: Destroying namespace "webhook-4877-markers" for this suite. 02/09/23 01:54:47.41
------------------------------
â€¢ [SLOW TEST] [5.833 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:54:41.589
    Feb  9 01:54:41.589: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 01:54:41.59
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:41.614
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:41.62
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 01:54:41.654
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:54:42.199
    STEP: Deploying the webhook pod 02/09/23 01:54:42.208
    STEP: Wait for the deployment to be ready 02/09/23 01:54:42.228
    Feb  9 01:54:42.244: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Feb  9 01:54:44.264: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.February, 9, 1, 54, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 54, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.February, 9, 1, 54, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.February, 9, 1, 54, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 02/09/23 01:54:46.272
    STEP: Verifying the service has paired with the endpoint 02/09/23 01:54:46.287
    Feb  9 01:54:47.288: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate configmap [Conformance]
      test/e2e/apimachinery/webhook.go:252
    STEP: Registering the mutating configmap webhook via the AdmissionRegistration API 02/09/23 01:54:47.294
    STEP: create a configmap that should be updated by the webhook 02/09/23 01:54:47.315
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:54:47.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-4877" for this suite. 02/09/23 01:54:47.399
    STEP: Destroying namespace "webhook-4877-markers" for this suite. 02/09/23 01:54:47.41
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] Ingress API
  should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552
[BeforeEach] [sig-network] Ingress API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:54:47.424
Feb  9 01:54:47.424: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename ingress 02/09/23 01:54:47.425
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:47.44
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:47.443
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/metrics/init/init.go:31
[It] should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552
STEP: getting /apis 02/09/23 01:54:47.447
STEP: getting /apis/networking.k8s.io 02/09/23 01:54:47.451
STEP: getting /apis/networking.k8s.iov1 02/09/23 01:54:47.452
STEP: creating 02/09/23 01:54:47.454
STEP: getting 02/09/23 01:54:47.475
STEP: listing 02/09/23 01:54:47.48
STEP: watching 02/09/23 01:54:47.485
Feb  9 01:54:47.485: INFO: starting watch
STEP: cluster-wide listing 02/09/23 01:54:47.487
STEP: cluster-wide watching 02/09/23 01:54:47.492
Feb  9 01:54:47.492: INFO: starting watch
STEP: patching 02/09/23 01:54:47.494
STEP: updating 02/09/23 01:54:47.5
Feb  9 01:54:47.511: INFO: waiting for watch events with expected annotations
Feb  9 01:54:47.511: INFO: saw patched and updated annotations
STEP: patching /status 02/09/23 01:54:47.511
STEP: updating /status 02/09/23 01:54:47.518
STEP: get /status 02/09/23 01:54:47.53
STEP: deleting 02/09/23 01:54:47.535
STEP: deleting a collection 02/09/23 01:54:47.552
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/node/init/init.go:32
Feb  9 01:54:47.574: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Ingress API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Ingress API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Ingress API
  tear down framework | framework.go:193
STEP: Destroying namespace "ingress-1897" for this suite. 02/09/23 01:54:47.581
------------------------------
â€¢ [0.165 seconds]
[sig-network] Ingress API
test/e2e/network/common/framework.go:23
  should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Ingress API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:54:47.424
    Feb  9 01:54:47.424: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename ingress 02/09/23 01:54:47.425
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:47.44
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:47.443
    [BeforeEach] [sig-network] Ingress API
      test/e2e/framework/metrics/init/init.go:31
    [It] should support creating Ingress API operations [Conformance]
      test/e2e/network/ingress.go:552
    STEP: getting /apis 02/09/23 01:54:47.447
    STEP: getting /apis/networking.k8s.io 02/09/23 01:54:47.451
    STEP: getting /apis/networking.k8s.iov1 02/09/23 01:54:47.452
    STEP: creating 02/09/23 01:54:47.454
    STEP: getting 02/09/23 01:54:47.475
    STEP: listing 02/09/23 01:54:47.48
    STEP: watching 02/09/23 01:54:47.485
    Feb  9 01:54:47.485: INFO: starting watch
    STEP: cluster-wide listing 02/09/23 01:54:47.487
    STEP: cluster-wide watching 02/09/23 01:54:47.492
    Feb  9 01:54:47.492: INFO: starting watch
    STEP: patching 02/09/23 01:54:47.494
    STEP: updating 02/09/23 01:54:47.5
    Feb  9 01:54:47.511: INFO: waiting for watch events with expected annotations
    Feb  9 01:54:47.511: INFO: saw patched and updated annotations
    STEP: patching /status 02/09/23 01:54:47.511
    STEP: updating /status 02/09/23 01:54:47.518
    STEP: get /status 02/09/23 01:54:47.53
    STEP: deleting 02/09/23 01:54:47.535
    STEP: deleting a collection 02/09/23 01:54:47.552
    [AfterEach] [sig-network] Ingress API
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:54:47.574: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Ingress API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Ingress API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Ingress API
      tear down framework | framework.go:193
    STEP: Destroying namespace "ingress-1897" for this suite. 02/09/23 01:54:47.581
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:54:47.594
Feb  9 01:54:47.594: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pods 02/09/23 01:54:47.594
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:47.609
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:47.614
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896
STEP: creating a Pod with a static label 02/09/23 01:54:47.628
STEP: watching for Pod to be ready 02/09/23 01:54:47.641
Feb  9 01:54:47.643: INFO: observed Pod pod-test in namespace pods-5163 in phase Pending with labels: map[test-pod-static:true] & conditions []
Feb  9 01:54:47.647: INFO: observed Pod pod-test in namespace pods-5163 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC  }]
Feb  9 01:54:47.660: INFO: observed Pod pod-test in namespace pods-5163 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC  }]
Feb  9 01:54:48.901: INFO: Found Pod pod-test in namespace pods-5163 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:48 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:48 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data 02/09/23 01:54:48.908
STEP: getting the Pod and ensuring that it's patched 02/09/23 01:54:48.918
STEP: replacing the Pod's status Ready condition to False 02/09/23 01:54:48.923
STEP: check the Pod again to ensure its Ready conditions are False 02/09/23 01:54:48.939
STEP: deleting the Pod via a Collection with a LabelSelector 02/09/23 01:54:48.939
STEP: watching for the Pod to be deleted 02/09/23 01:54:48.952
Feb  9 01:54:48.954: INFO: observed event type MODIFIED
Feb  9 01:54:50.907: INFO: observed event type MODIFIED
Feb  9 01:54:51.913: INFO: observed event type MODIFIED
Feb  9 01:54:51.923: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Feb  9 01:54:51.936: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-5163" for this suite. 02/09/23 01:54:51.944
------------------------------
â€¢ [4.367 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:54:47.594
    Feb  9 01:54:47.594: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pods 02/09/23 01:54:47.594
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:47.609
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:47.614
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should run through the lifecycle of Pods and PodStatus [Conformance]
      test/e2e/common/node/pods.go:896
    STEP: creating a Pod with a static label 02/09/23 01:54:47.628
    STEP: watching for Pod to be ready 02/09/23 01:54:47.641
    Feb  9 01:54:47.643: INFO: observed Pod pod-test in namespace pods-5163 in phase Pending with labels: map[test-pod-static:true] & conditions []
    Feb  9 01:54:47.647: INFO: observed Pod pod-test in namespace pods-5163 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC  }]
    Feb  9 01:54:47.660: INFO: observed Pod pod-test in namespace pods-5163 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC  }]
    Feb  9 01:54:48.901: INFO: Found Pod pod-test in namespace pods-5163 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:48 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:48 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-02-09 01:54:47 +0000 UTC  }]
    STEP: patching the Pod with a new Label and updated data 02/09/23 01:54:48.908
    STEP: getting the Pod and ensuring that it's patched 02/09/23 01:54:48.918
    STEP: replacing the Pod's status Ready condition to False 02/09/23 01:54:48.923
    STEP: check the Pod again to ensure its Ready conditions are False 02/09/23 01:54:48.939
    STEP: deleting the Pod via a Collection with a LabelSelector 02/09/23 01:54:48.939
    STEP: watching for the Pod to be deleted 02/09/23 01:54:48.952
    Feb  9 01:54:48.954: INFO: observed event type MODIFIED
    Feb  9 01:54:50.907: INFO: observed event type MODIFIED
    Feb  9 01:54:51.913: INFO: observed event type MODIFIED
    Feb  9 01:54:51.923: INFO: observed event type MODIFIED
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:54:51.936: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-5163" for this suite. 02/09/23 01:54:51.944
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Pods
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:54:51.962
Feb  9 01:54:51.962: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename pods 02/09/23 01:54:51.963
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:51.979
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:51.985
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444
Feb  9 01:54:52.001: INFO: Waiting up to 5m0s for pod "server-envvars-9b444def-0790-4e7e-ab52-30610307e51b" in namespace "pods-8506" to be "running and ready"
Feb  9 01:54:52.007: INFO: Pod "server-envvars-9b444def-0790-4e7e-ab52-30610307e51b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.365558ms
Feb  9 01:54:52.007: INFO: The phase of Pod server-envvars-9b444def-0790-4e7e-ab52-30610307e51b is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:54:54.014: INFO: Pod "server-envvars-9b444def-0790-4e7e-ab52-30610307e51b": Phase="Running", Reason="", readiness=true. Elapsed: 2.013074267s
Feb  9 01:54:54.014: INFO: The phase of Pod server-envvars-9b444def-0790-4e7e-ab52-30610307e51b is Running (Ready = true)
Feb  9 01:54:54.014: INFO: Pod "server-envvars-9b444def-0790-4e7e-ab52-30610307e51b" satisfied condition "running and ready"
Feb  9 01:54:54.044: INFO: Waiting up to 5m0s for pod "client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d" in namespace "pods-8506" to be "Succeeded or Failed"
Feb  9 01:54:54.051: INFO: Pod "client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d": Phase="Pending", Reason="", readiness=false. Elapsed: 7.091265ms
Feb  9 01:54:56.058: INFO: Pod "client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01444238s
Feb  9 01:54:58.058: INFO: Pod "client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013535048s
STEP: Saw pod success 02/09/23 01:54:58.058
Feb  9 01:54:58.058: INFO: Pod "client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d" satisfied condition "Succeeded or Failed"
Feb  9 01:54:58.065: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d container env3cont: <nil>
STEP: delete the pod 02/09/23 01:54:58.079
Feb  9 01:54:58.094: INFO: Waiting for pod client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d to disappear
Feb  9 01:54:58.100: INFO: Pod client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Feb  9 01:54:58.100: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-8506" for this suite. 02/09/23 01:54:58.107
------------------------------
â€¢ [SLOW TEST] [6.154 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:54:51.962
    Feb  9 01:54:51.962: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename pods 02/09/23 01:54:51.963
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:51.979
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:51.985
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should contain environment variables for services [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:444
    Feb  9 01:54:52.001: INFO: Waiting up to 5m0s for pod "server-envvars-9b444def-0790-4e7e-ab52-30610307e51b" in namespace "pods-8506" to be "running and ready"
    Feb  9 01:54:52.007: INFO: Pod "server-envvars-9b444def-0790-4e7e-ab52-30610307e51b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.365558ms
    Feb  9 01:54:52.007: INFO: The phase of Pod server-envvars-9b444def-0790-4e7e-ab52-30610307e51b is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:54:54.014: INFO: Pod "server-envvars-9b444def-0790-4e7e-ab52-30610307e51b": Phase="Running", Reason="", readiness=true. Elapsed: 2.013074267s
    Feb  9 01:54:54.014: INFO: The phase of Pod server-envvars-9b444def-0790-4e7e-ab52-30610307e51b is Running (Ready = true)
    Feb  9 01:54:54.014: INFO: Pod "server-envvars-9b444def-0790-4e7e-ab52-30610307e51b" satisfied condition "running and ready"
    Feb  9 01:54:54.044: INFO: Waiting up to 5m0s for pod "client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d" in namespace "pods-8506" to be "Succeeded or Failed"
    Feb  9 01:54:54.051: INFO: Pod "client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d": Phase="Pending", Reason="", readiness=false. Elapsed: 7.091265ms
    Feb  9 01:54:56.058: INFO: Pod "client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01444238s
    Feb  9 01:54:58.058: INFO: Pod "client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013535048s
    STEP: Saw pod success 02/09/23 01:54:58.058
    Feb  9 01:54:58.058: INFO: Pod "client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d" satisfied condition "Succeeded or Failed"
    Feb  9 01:54:58.065: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d container env3cont: <nil>
    STEP: delete the pod 02/09/23 01:54:58.079
    Feb  9 01:54:58.094: INFO: Waiting for pod client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d to disappear
    Feb  9 01:54:58.100: INFO: Pod client-envvars-b7c0f189-40c1-4bc4-8bb1-242b2fff3c7d no longer exists
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:54:58.100: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-8506" for this suite. 02/09/23 01:54:58.107
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application
  should create and stop a working application  [Conformance]
  test/e2e/kubectl/kubectl.go:394
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:54:58.117
Feb  9 01:54:58.117: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:54:58.117
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:58.133
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:58.139
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should create and stop a working application  [Conformance]
  test/e2e/kubectl/kubectl.go:394
STEP: creating all guestbook components 02/09/23 01:54:58.143
Feb  9 01:54:58.144: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Feb  9 01:54:58.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 create -f -'
Feb  9 01:54:58.689: INFO: stderr: ""
Feb  9 01:54:58.689: INFO: stdout: "service/agnhost-replica created\n"
Feb  9 01:54:58.689: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Feb  9 01:54:58.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 create -f -'
Feb  9 01:54:58.894: INFO: stderr: ""
Feb  9 01:54:58.894: INFO: stdout: "service/agnhost-primary created\n"
Feb  9 01:54:58.894: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Feb  9 01:54:58.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 create -f -'
Feb  9 01:54:59.132: INFO: stderr: ""
Feb  9 01:54:59.132: INFO: stdout: "service/frontend created\n"
Feb  9 01:54:59.132: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Feb  9 01:54:59.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 create -f -'
Feb  9 01:54:59.299: INFO: stderr: ""
Feb  9 01:54:59.299: INFO: stdout: "deployment.apps/frontend created\n"
Feb  9 01:54:59.299: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Feb  9 01:54:59.299: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 create -f -'
Feb  9 01:54:59.477: INFO: stderr: ""
Feb  9 01:54:59.477: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Feb  9 01:54:59.477: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Feb  9 01:54:59.477: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 create -f -'
Feb  9 01:54:59.665: INFO: stderr: ""
Feb  9 01:54:59.665: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app 02/09/23 01:54:59.665
Feb  9 01:54:59.665: INFO: Waiting for all frontend pods to be Running.
Feb  9 01:55:04.716: INFO: Waiting for frontend to serve content.
Feb  9 01:55:04.740: INFO: Trying to add a new entry to the guestbook.
Feb  9 01:55:04.761: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources 02/09/23 01:55:04.776
Feb  9 01:55:04.776: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 delete --grace-period=0 --force -f -'
Feb  9 01:55:04.866: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Feb  9 01:55:04.866: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources 02/09/23 01:55:04.866
Feb  9 01:55:04.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 delete --grace-period=0 --force -f -'
Feb  9 01:55:04.973: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Feb  9 01:55:04.973: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources 02/09/23 01:55:04.973
Feb  9 01:55:04.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 delete --grace-period=0 --force -f -'
Feb  9 01:55:05.075: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Feb  9 01:55:05.075: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources 02/09/23 01:55:05.075
Feb  9 01:55:05.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 delete --grace-period=0 --force -f -'
Feb  9 01:55:05.152: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Feb  9 01:55:05.152: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources 02/09/23 01:55:05.152
Feb  9 01:55:05.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 delete --grace-period=0 --force -f -'
Feb  9 01:55:05.235: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Feb  9 01:55:05.235: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources 02/09/23 01:55:05.239
Feb  9 01:55:05.239: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 delete --grace-period=0 --force -f -'
Feb  9 01:55:05.344: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Feb  9 01:55:05.344: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:05.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-5154" for this suite. 02/09/23 01:55:05.352
------------------------------
â€¢ [SLOW TEST] [7.244 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:369
    should create and stop a working application  [Conformance]
    test/e2e/kubectl/kubectl.go:394

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:54:58.117
    Feb  9 01:54:58.117: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:54:58.117
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:54:58.133
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:54:58.139
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should create and stop a working application  [Conformance]
      test/e2e/kubectl/kubectl.go:394
    STEP: creating all guestbook components 02/09/23 01:54:58.143
    Feb  9 01:54:58.144: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: agnhost-replica
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      ports:
      - port: 6379
      selector:
        app: agnhost
        role: replica
        tier: backend

    Feb  9 01:54:58.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 create -f -'
    Feb  9 01:54:58.689: INFO: stderr: ""
    Feb  9 01:54:58.689: INFO: stdout: "service/agnhost-replica created\n"
    Feb  9 01:54:58.689: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: agnhost-primary
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      ports:
      - port: 6379
        targetPort: 6379
      selector:
        app: agnhost
        role: primary
        tier: backend

    Feb  9 01:54:58.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 create -f -'
    Feb  9 01:54:58.894: INFO: stderr: ""
    Feb  9 01:54:58.894: INFO: stdout: "service/agnhost-primary created\n"
    Feb  9 01:54:58.894: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: frontend
      labels:
        app: guestbook
        tier: frontend
    spec:
      # if your cluster supports it, uncomment the following to automatically create
      # an external load-balanced IP for the frontend service.
      # type: LoadBalancer
      ports:
      - port: 80
      selector:
        app: guestbook
        tier: frontend

    Feb  9 01:54:58.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 create -f -'
    Feb  9 01:54:59.132: INFO: stderr: ""
    Feb  9 01:54:59.132: INFO: stdout: "service/frontend created\n"
    Feb  9 01:54:59.132: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: frontend
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: guestbook
          tier: frontend
      template:
        metadata:
          labels:
            app: guestbook
            tier: frontend
        spec:
          containers:
          - name: guestbook-frontend
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--backend-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 80

    Feb  9 01:54:59.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 create -f -'
    Feb  9 01:54:59.299: INFO: stderr: ""
    Feb  9 01:54:59.299: INFO: stdout: "deployment.apps/frontend created\n"
    Feb  9 01:54:59.299: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: agnhost-primary
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: agnhost
          role: primary
          tier: backend
      template:
        metadata:
          labels:
            app: agnhost
            role: primary
            tier: backend
        spec:
          containers:
          - name: primary
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--http-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 6379

    Feb  9 01:54:59.299: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 create -f -'
    Feb  9 01:54:59.477: INFO: stderr: ""
    Feb  9 01:54:59.477: INFO: stdout: "deployment.apps/agnhost-primary created\n"
    Feb  9 01:54:59.477: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: agnhost-replica
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: agnhost
          role: replica
          tier: backend
      template:
        metadata:
          labels:
            app: agnhost
            role: replica
            tier: backend
        spec:
          containers:
          - name: replica
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 6379

    Feb  9 01:54:59.477: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 create -f -'
    Feb  9 01:54:59.665: INFO: stderr: ""
    Feb  9 01:54:59.665: INFO: stdout: "deployment.apps/agnhost-replica created\n"
    STEP: validating guestbook app 02/09/23 01:54:59.665
    Feb  9 01:54:59.665: INFO: Waiting for all frontend pods to be Running.
    Feb  9 01:55:04.716: INFO: Waiting for frontend to serve content.
    Feb  9 01:55:04.740: INFO: Trying to add a new entry to the guestbook.
    Feb  9 01:55:04.761: INFO: Verifying that added entry can be retrieved.
    STEP: using delete to clean up resources 02/09/23 01:55:04.776
    Feb  9 01:55:04.776: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 delete --grace-period=0 --force -f -'
    Feb  9 01:55:04.866: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Feb  9 01:55:04.866: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
    STEP: using delete to clean up resources 02/09/23 01:55:04.866
    Feb  9 01:55:04.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 delete --grace-period=0 --force -f -'
    Feb  9 01:55:04.973: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Feb  9 01:55:04.973: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
    STEP: using delete to clean up resources 02/09/23 01:55:04.973
    Feb  9 01:55:04.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 delete --grace-period=0 --force -f -'
    Feb  9 01:55:05.075: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Feb  9 01:55:05.075: INFO: stdout: "service \"frontend\" force deleted\n"
    STEP: using delete to clean up resources 02/09/23 01:55:05.075
    Feb  9 01:55:05.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 delete --grace-period=0 --force -f -'
    Feb  9 01:55:05.152: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Feb  9 01:55:05.152: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
    STEP: using delete to clean up resources 02/09/23 01:55:05.152
    Feb  9 01:55:05.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 delete --grace-period=0 --force -f -'
    Feb  9 01:55:05.235: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Feb  9 01:55:05.235: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
    STEP: using delete to clean up resources 02/09/23 01:55:05.239
    Feb  9 01:55:05.239: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5154 delete --grace-period=0 --force -f -'
    Feb  9 01:55:05.344: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Feb  9 01:55:05.344: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:05.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-5154" for this suite. 02/09/23 01:55:05.352
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:05.361
Feb  9 01:55:05.361: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:55:05.361
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:05.378
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:05.382
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56
STEP: Creating projection with secret that has name projected-secret-test-b2002f73-9c06-4447-806c-d099f8068d32 02/09/23 01:55:05.385
STEP: Creating a pod to test consume secrets 02/09/23 01:55:05.391
Feb  9 01:55:05.404: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761" in namespace "projected-1906" to be "Succeeded or Failed"
Feb  9 01:55:05.410: INFO: Pod "pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761": Phase="Pending", Reason="", readiness=false. Elapsed: 6.035378ms
Feb  9 01:55:07.416: INFO: Pod "pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761": Phase="Running", Reason="", readiness=true. Elapsed: 2.012722743s
Feb  9 01:55:09.418: INFO: Pod "pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013958092s
STEP: Saw pod success 02/09/23 01:55:09.418
Feb  9 01:55:09.418: INFO: Pod "pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761" satisfied condition "Succeeded or Failed"
Feb  9 01:55:09.423: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761 container projected-secret-volume-test: <nil>
STEP: delete the pod 02/09/23 01:55:09.434
Feb  9 01:55:09.456: INFO: Waiting for pod pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761 to disappear
Feb  9 01:55:09.462: INFO: Pod pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:09.462: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1906" for this suite. 02/09/23 01:55:09.469
------------------------------
â€¢ [4.118 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:05.361
    Feb  9 01:55:05.361: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:55:05.361
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:05.378
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:05.382
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:56
    STEP: Creating projection with secret that has name projected-secret-test-b2002f73-9c06-4447-806c-d099f8068d32 02/09/23 01:55:05.385
    STEP: Creating a pod to test consume secrets 02/09/23 01:55:05.391
    Feb  9 01:55:05.404: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761" in namespace "projected-1906" to be "Succeeded or Failed"
    Feb  9 01:55:05.410: INFO: Pod "pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761": Phase="Pending", Reason="", readiness=false. Elapsed: 6.035378ms
    Feb  9 01:55:07.416: INFO: Pod "pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761": Phase="Running", Reason="", readiness=true. Elapsed: 2.012722743s
    Feb  9 01:55:09.418: INFO: Pod "pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013958092s
    STEP: Saw pod success 02/09/23 01:55:09.418
    Feb  9 01:55:09.418: INFO: Pod "pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761" satisfied condition "Succeeded or Failed"
    Feb  9 01:55:09.423: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761 container projected-secret-volume-test: <nil>
    STEP: delete the pod 02/09/23 01:55:09.434
    Feb  9 01:55:09.456: INFO: Waiting for pod pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761 to disappear
    Feb  9 01:55:09.462: INFO: Pod pod-projected-secrets-0a59b308-4d70-4c6b-9f03-372bbbba7761 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:09.462: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1906" for this suite. 02/09/23 01:55:09.469
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:09.481
Feb  9 01:55:09.481: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename daemonsets 02/09/23 01:55:09.482
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:09.5
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:09.504
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294
STEP: Creating a simple DaemonSet "daemon-set" 02/09/23 01:55:09.537
STEP: Check that daemon pods launch on every node of the cluster. 02/09/23 01:55:09.544
Feb  9 01:55:09.556: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:55:09.556: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:55:10.570: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Feb  9 01:55:10.570: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:55:11.571: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Feb  9 01:55:11.571: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. 02/09/23 01:55:11.576
Feb  9 01:55:11.606: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Feb  9 01:55:11.606: INFO: Node aks-nodes-15799032-vmss000002 is running 0 daemon pod, expected 1
Feb  9 01:55:12.622: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Feb  9 01:55:12.622: INFO: Node aks-nodes-15799032-vmss000002 is running 0 daemon pod, expected 1
Feb  9 01:55:13.619: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Feb  9 01:55:13.619: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted. 02/09/23 01:55:13.619
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 02/09/23 01:55:13.63
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-120, will wait for the garbage collector to delete the pods 02/09/23 01:55:13.63
Feb  9 01:55:13.695: INFO: Deleting DaemonSet.extensions daemon-set took: 9.767643ms
Feb  9 01:55:13.795: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.779283ms
Feb  9 01:55:16.101: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:55:16.101: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Feb  9 01:55:16.106: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"44013"},"items":null}

Feb  9 01:55:16.111: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"44013"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:16.136: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-120" for this suite. 02/09/23 01:55:16.143
------------------------------
â€¢ [SLOW TEST] [6.670 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:09.481
    Feb  9 01:55:09.481: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename daemonsets 02/09/23 01:55:09.482
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:09.5
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:09.504
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should retry creating failed daemon pods [Conformance]
      test/e2e/apps/daemon_set.go:294
    STEP: Creating a simple DaemonSet "daemon-set" 02/09/23 01:55:09.537
    STEP: Check that daemon pods launch on every node of the cluster. 02/09/23 01:55:09.544
    Feb  9 01:55:09.556: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:55:09.556: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:55:10.570: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Feb  9 01:55:10.570: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:55:11.571: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Feb  9 01:55:11.571: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. 02/09/23 01:55:11.576
    Feb  9 01:55:11.606: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Feb  9 01:55:11.606: INFO: Node aks-nodes-15799032-vmss000002 is running 0 daemon pod, expected 1
    Feb  9 01:55:12.622: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Feb  9 01:55:12.622: INFO: Node aks-nodes-15799032-vmss000002 is running 0 daemon pod, expected 1
    Feb  9 01:55:13.619: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Feb  9 01:55:13.619: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    STEP: Wait for the failed daemon pod to be completely deleted. 02/09/23 01:55:13.619
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 02/09/23 01:55:13.63
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-120, will wait for the garbage collector to delete the pods 02/09/23 01:55:13.63
    Feb  9 01:55:13.695: INFO: Deleting DaemonSet.extensions daemon-set took: 9.767643ms
    Feb  9 01:55:13.795: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.779283ms
    Feb  9 01:55:16.101: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:55:16.101: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Feb  9 01:55:16.106: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"44013"},"items":null}

    Feb  9 01:55:16.111: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"44013"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:16.136: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-120" for this suite. 02/09/23 01:55:16.143
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:16.154
Feb  9 01:55:16.154: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename replication-controller 02/09/23 01:55:16.155
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:16.17
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:16.174
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67
STEP: Creating replication controller my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887 02/09/23 01:55:16.179
Feb  9 01:55:16.191: INFO: Pod name my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887: Found 0 pods out of 1
Feb  9 01:55:21.198: INFO: Pod name my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887: Found 1 pods out of 1
Feb  9 01:55:21.198: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887" are running
Feb  9 01:55:21.198: INFO: Waiting up to 5m0s for pod "my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887-c5jsc" in namespace "replication-controller-9344" to be "running"
Feb  9 01:55:21.204: INFO: Pod "my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887-c5jsc": Phase="Running", Reason="", readiness=true. Elapsed: 5.158088ms
Feb  9 01:55:21.204: INFO: Pod "my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887-c5jsc" satisfied condition "running"
Feb  9 01:55:21.204: INFO: Pod "my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887-c5jsc" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:55:16 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:55:16 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:55:16 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:55:16 +0000 UTC Reason: Message:}])
Feb  9 01:55:21.204: INFO: Trying to dial the pod
Feb  9 01:55:26.230: INFO: Controller my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887: Got expected result from replica 1 [my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887-c5jsc]: "my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887-c5jsc", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:26.230: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-9344" for this suite. 02/09/23 01:55:26.237
------------------------------
â€¢ [SLOW TEST] [10.093 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:16.154
    Feb  9 01:55:16.154: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename replication-controller 02/09/23 01:55:16.155
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:16.17
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:16.174
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should serve a basic image on each replica with a public image  [Conformance]
      test/e2e/apps/rc.go:67
    STEP: Creating replication controller my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887 02/09/23 01:55:16.179
    Feb  9 01:55:16.191: INFO: Pod name my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887: Found 0 pods out of 1
    Feb  9 01:55:21.198: INFO: Pod name my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887: Found 1 pods out of 1
    Feb  9 01:55:21.198: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887" are running
    Feb  9 01:55:21.198: INFO: Waiting up to 5m0s for pod "my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887-c5jsc" in namespace "replication-controller-9344" to be "running"
    Feb  9 01:55:21.204: INFO: Pod "my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887-c5jsc": Phase="Running", Reason="", readiness=true. Elapsed: 5.158088ms
    Feb  9 01:55:21.204: INFO: Pod "my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887-c5jsc" satisfied condition "running"
    Feb  9 01:55:21.204: INFO: Pod "my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887-c5jsc" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:55:16 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:55:16 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:55:16 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-02-09 01:55:16 +0000 UTC Reason: Message:}])
    Feb  9 01:55:21.204: INFO: Trying to dial the pod
    Feb  9 01:55:26.230: INFO: Controller my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887: Got expected result from replica 1 [my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887-c5jsc]: "my-hostname-basic-75d348bb-08d2-41c7-a508-339164f3a887-c5jsc", 1 of 1 required successes so far
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:26.230: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-9344" for this suite. 02/09/23 01:55:26.237
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:26.249
Feb  9 01:55:26.249: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 01:55:26.249
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:26.264
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:26.268
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 01:55:26.288
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:55:26.727
STEP: Deploying the webhook pod 02/09/23 01:55:26.734
STEP: Wait for the deployment to be ready 02/09/23 01:55:26.752
Feb  9 01:55:26.769: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 01:55:28.786
STEP: Verifying the service has paired with the endpoint 02/09/23 01:55:28.801
Feb  9 01:55:29.801: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 02/09/23 01:55:29.807
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 02/09/23 01:55:29.833
STEP: Creating a dummy validating-webhook-configuration object 02/09/23 01:55:29.852
STEP: Deleting the validating-webhook-configuration, which should be possible to remove 02/09/23 01:55:29.862
STEP: Creating a dummy mutating-webhook-configuration object 02/09/23 01:55:29.871
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove 02/09/23 01:55:29.881
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:29.917: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-2092" for this suite. 02/09/23 01:55:29.976
STEP: Destroying namespace "webhook-2092-markers" for this suite. 02/09/23 01:55:29.985
------------------------------
â€¢ [3.745 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:26.249
    Feb  9 01:55:26.249: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 01:55:26.249
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:26.264
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:26.268
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 01:55:26.288
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:55:26.727
    STEP: Deploying the webhook pod 02/09/23 01:55:26.734
    STEP: Wait for the deployment to be ready 02/09/23 01:55:26.752
    Feb  9 01:55:26.769: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 01:55:28.786
    STEP: Verifying the service has paired with the endpoint 02/09/23 01:55:28.801
    Feb  9 01:55:29.801: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
      test/e2e/apimachinery/webhook.go:277
    STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 02/09/23 01:55:29.807
    STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 02/09/23 01:55:29.833
    STEP: Creating a dummy validating-webhook-configuration object 02/09/23 01:55:29.852
    STEP: Deleting the validating-webhook-configuration, which should be possible to remove 02/09/23 01:55:29.862
    STEP: Creating a dummy mutating-webhook-configuration object 02/09/23 01:55:29.871
    STEP: Deleting the mutating-webhook-configuration, which should be possible to remove 02/09/23 01:55:29.881
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:29.917: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-2092" for this suite. 02/09/23 01:55:29.976
    STEP: Destroying namespace "webhook-2092-markers" for this suite. 02/09/23 01:55:29.985
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server
  should support proxy with --port 0  [Conformance]
  test/e2e/kubectl/kubectl.go:1787
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:29.994
Feb  9 01:55:29.994: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:55:29.995
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:30.008
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:30.012
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should support proxy with --port 0  [Conformance]
  test/e2e/kubectl/kubectl.go:1787
STEP: starting the proxy server 02/09/23 01:55:30.016
Feb  9 01:55:30.017: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5189 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output 02/09/23 01:55:30.06
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:30.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-5189" for this suite. 02/09/23 01:55:30.078
------------------------------
â€¢ [0.098 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Proxy server
  test/e2e/kubectl/kubectl.go:1780
    should support proxy with --port 0  [Conformance]
    test/e2e/kubectl/kubectl.go:1787

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:29.994
    Feb  9 01:55:29.994: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:55:29.995
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:30.008
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:30.012
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should support proxy with --port 0  [Conformance]
      test/e2e/kubectl/kubectl.go:1787
    STEP: starting the proxy server 02/09/23 01:55:30.016
    Feb  9 01:55:30.017: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-5189 proxy -p 0 --disable-filter'
    STEP: curling proxy /api/ output 02/09/23 01:55:30.06
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:30.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-5189" for this suite. 02/09/23 01:55:30.078
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:30.092
Feb  9 01:55:30.092: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename svcaccounts 02/09/23 01:55:30.093
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:30.111
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:30.115
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78
Feb  9 01:55:30.135: INFO: Waiting up to 5m0s for pod "pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c" in namespace "svcaccounts-7485" to be "running"
Feb  9 01:55:30.142: INFO: Pod "pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.624001ms
Feb  9 01:55:32.149: INFO: Pod "pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c": Phase="Running", Reason="", readiness=true. Elapsed: 2.013732734s
Feb  9 01:55:32.149: INFO: Pod "pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c" satisfied condition "running"
STEP: reading a file in the container 02/09/23 01:55:32.149
Feb  9 01:55:32.149: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7485 pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container 02/09/23 01:55:32.341
Feb  9 01:55:32.342: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7485 pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container 02/09/23 01:55:32.507
Feb  9 01:55:32.507: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7485 pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Feb  9 01:55:32.664: INFO: Got root ca configmap in namespace "svcaccounts-7485"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:32.673: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-7485" for this suite. 02/09/23 01:55:32.706
------------------------------
â€¢ [2.633 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:30.092
    Feb  9 01:55:30.092: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename svcaccounts 02/09/23 01:55:30.093
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:30.111
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:30.115
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should mount an API token into pods  [Conformance]
      test/e2e/auth/service_accounts.go:78
    Feb  9 01:55:30.135: INFO: Waiting up to 5m0s for pod "pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c" in namespace "svcaccounts-7485" to be "running"
    Feb  9 01:55:30.142: INFO: Pod "pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.624001ms
    Feb  9 01:55:32.149: INFO: Pod "pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c": Phase="Running", Reason="", readiness=true. Elapsed: 2.013732734s
    Feb  9 01:55:32.149: INFO: Pod "pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c" satisfied condition "running"
    STEP: reading a file in the container 02/09/23 01:55:32.149
    Feb  9 01:55:32.149: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7485 pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
    STEP: reading a file in the container 02/09/23 01:55:32.341
    Feb  9 01:55:32.342: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7485 pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
    STEP: reading a file in the container 02/09/23 01:55:32.507
    Feb  9 01:55:32.507: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7485 pod-service-account-b6d7fd33-4f20-4540-9b49-cdf13e0ed82c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
    Feb  9 01:55:32.664: INFO: Got root ca configmap in namespace "svcaccounts-7485"
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:32.673: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-7485" for this suite. 02/09/23 01:55:32.706
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175
[BeforeEach] [sig-instrumentation] Events
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:32.726
Feb  9 01:55:32.726: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename events 02/09/23 01:55:32.727
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:32.78
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:32.784
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175
STEP: Create set of events 02/09/23 01:55:32.789
Feb  9 01:55:32.798: INFO: created test-event-1
Feb  9 01:55:32.803: INFO: created test-event-2
Feb  9 01:55:32.809: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace 02/09/23 01:55:32.809
STEP: delete collection of events 02/09/23 01:55:32.814
Feb  9 01:55:32.814: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity 02/09/23 01:55:32.847
Feb  9 01:55:32.847: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:32.852: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events
  tear down framework | framework.go:193
STEP: Destroying namespace "events-8499" for this suite. 02/09/23 01:55:32.859
------------------------------
â€¢ [0.142 seconds]
[sig-instrumentation] Events
test/e2e/instrumentation/common/framework.go:23
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:32.726
    Feb  9 01:55:32.726: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename events 02/09/23 01:55:32.727
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:32.78
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:32.784
    [BeforeEach] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a collection of events [Conformance]
      test/e2e/instrumentation/core_events.go:175
    STEP: Create set of events 02/09/23 01:55:32.789
    Feb  9 01:55:32.798: INFO: created test-event-1
    Feb  9 01:55:32.803: INFO: created test-event-2
    Feb  9 01:55:32.809: INFO: created test-event-3
    STEP: get a list of Events with a label in the current namespace 02/09/23 01:55:32.809
    STEP: delete collection of events 02/09/23 01:55:32.814
    Feb  9 01:55:32.814: INFO: requesting DeleteCollection of events
    STEP: check that the list of events matches the requested quantity 02/09/23 01:55:32.847
    Feb  9 01:55:32.847: INFO: requesting list of events to confirm quantity
    [AfterEach] [sig-instrumentation] Events
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:32.852: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-8499" for this suite. 02/09/23 01:55:32.859
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:32.871
Feb  9 01:55:32.871: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 01:55:32.872
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:32.887
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:32.891
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47
STEP: Creating configMap with name configmap-test-volume-147cdbe4-a43d-4d71-8778-b3139190bdc9 02/09/23 01:55:32.897
STEP: Creating a pod to test consume configMaps 02/09/23 01:55:32.904
Feb  9 01:55:32.915: INFO: Waiting up to 5m0s for pod "pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7" in namespace "configmap-4949" to be "Succeeded or Failed"
Feb  9 01:55:32.921: INFO: Pod "pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7": Phase="Pending", Reason="", readiness=false. Elapsed: 6.136393ms
Feb  9 01:55:34.927: INFO: Pod "pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011876542s
Feb  9 01:55:36.928: INFO: Pod "pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01231361s
STEP: Saw pod success 02/09/23 01:55:36.928
Feb  9 01:55:36.928: INFO: Pod "pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7" satisfied condition "Succeeded or Failed"
Feb  9 01:55:36.933: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7 container agnhost-container: <nil>
STEP: delete the pod 02/09/23 01:55:36.945
Feb  9 01:55:36.960: INFO: Waiting for pod pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7 to disappear
Feb  9 01:55:36.965: INFO: Pod pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:36.965: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-4949" for this suite. 02/09/23 01:55:36.973
------------------------------
â€¢ [4.112 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:32.871
    Feb  9 01:55:32.871: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 01:55:32.872
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:32.887
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:32.891
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:47
    STEP: Creating configMap with name configmap-test-volume-147cdbe4-a43d-4d71-8778-b3139190bdc9 02/09/23 01:55:32.897
    STEP: Creating a pod to test consume configMaps 02/09/23 01:55:32.904
    Feb  9 01:55:32.915: INFO: Waiting up to 5m0s for pod "pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7" in namespace "configmap-4949" to be "Succeeded or Failed"
    Feb  9 01:55:32.921: INFO: Pod "pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7": Phase="Pending", Reason="", readiness=false. Elapsed: 6.136393ms
    Feb  9 01:55:34.927: INFO: Pod "pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011876542s
    Feb  9 01:55:36.928: INFO: Pod "pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01231361s
    STEP: Saw pod success 02/09/23 01:55:36.928
    Feb  9 01:55:36.928: INFO: Pod "pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7" satisfied condition "Succeeded or Failed"
    Feb  9 01:55:36.933: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7 container agnhost-container: <nil>
    STEP: delete the pod 02/09/23 01:55:36.945
    Feb  9 01:55:36.960: INFO: Waiting for pod pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7 to disappear
    Feb  9 01:55:36.965: INFO: Pod pod-configmaps-eb744114-88fe-4cd5-99d2-ec457a4abca7 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:36.965: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-4949" for this suite. 02/09/23 01:55:36.973
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] DisruptionController
  should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:36.984
Feb  9 01:55:36.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename disruption 02/09/23 01:55:36.984
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:36.998
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:37.002
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108
STEP: creating the pdb 02/09/23 01:55:37.006
STEP: Waiting for the pdb to be processed 02/09/23 01:55:37.012
STEP: updating the pdb 02/09/23 01:55:39.023
STEP: Waiting for the pdb to be processed 02/09/23 01:55:39.035
STEP: patching the pdb 02/09/23 01:55:41.047
STEP: Waiting for the pdb to be processed 02/09/23 01:55:41.06
STEP: Waiting for the pdb to be deleted 02/09/23 01:55:41.075
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:41.080: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-5395" for this suite. 02/09/23 01:55:41.088
------------------------------
â€¢ [4.114 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:36.984
    Feb  9 01:55:36.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename disruption 02/09/23 01:55:36.984
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:36.998
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:37.002
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should create a PodDisruptionBudget [Conformance]
      test/e2e/apps/disruption.go:108
    STEP: creating the pdb 02/09/23 01:55:37.006
    STEP: Waiting for the pdb to be processed 02/09/23 01:55:37.012
    STEP: updating the pdb 02/09/23 01:55:39.023
    STEP: Waiting for the pdb to be processed 02/09/23 01:55:39.035
    STEP: patching the pdb 02/09/23 01:55:41.047
    STEP: Waiting for the pdb to be processed 02/09/23 01:55:41.06
    STEP: Waiting for the pdb to be deleted 02/09/23 01:55:41.075
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:41.080: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-5395" for this suite. 02/09/23 01:55:41.088
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:41.103
Feb  9 01:55:41.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:55:41.104
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:41.119
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:41.124
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438
STEP: creating a service externalname-service with the type=ExternalName in namespace services-3129 02/09/23 01:55:41.128
STEP: changing the ExternalName service to type=ClusterIP 02/09/23 01:55:41.135
STEP: creating replication controller externalname-service in namespace services-3129 02/09/23 01:55:41.156
I0209 01:55:41.163438      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3129, replica count: 2
I0209 01:55:44.214084      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Feb  9 01:55:44.214: INFO: Creating new exec pod
Feb  9 01:55:44.222: INFO: Waiting up to 5m0s for pod "execpodkwxpr" in namespace "services-3129" to be "running"
Feb  9 01:55:44.227: INFO: Pod "execpodkwxpr": Phase="Pending", Reason="", readiness=false. Elapsed: 4.962471ms
Feb  9 01:55:46.234: INFO: Pod "execpodkwxpr": Phase="Running", Reason="", readiness=true. Elapsed: 2.012034115s
Feb  9 01:55:46.235: INFO: Pod "execpodkwxpr" satisfied condition "running"
Feb  9 01:55:47.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-3129 exec execpodkwxpr -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
Feb  9 01:55:47.386: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Feb  9 01:55:47.386: INFO: stdout: ""
Feb  9 01:55:47.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-3129 exec execpodkwxpr -- /bin/sh -x -c nc -v -z -w 2 10.0.255.59 80'
Feb  9 01:55:47.575: INFO: stderr: "+ nc -v -z -w 2 10.0.255.59 80\nConnection to 10.0.255.59 80 port [tcp/http] succeeded!\n"
Feb  9 01:55:47.575: INFO: stdout: ""
Feb  9 01:55:47.575: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:47.609: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-3129" for this suite. 02/09/23 01:55:47.619
------------------------------
â€¢ [SLOW TEST] [6.526 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:41.103
    Feb  9 01:55:41.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:55:41.104
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:41.119
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:41.124
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ExternalName to ClusterIP [Conformance]
      test/e2e/network/service.go:1438
    STEP: creating a service externalname-service with the type=ExternalName in namespace services-3129 02/09/23 01:55:41.128
    STEP: changing the ExternalName service to type=ClusterIP 02/09/23 01:55:41.135
    STEP: creating replication controller externalname-service in namespace services-3129 02/09/23 01:55:41.156
    I0209 01:55:41.163438      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3129, replica count: 2
    I0209 01:55:44.214084      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Feb  9 01:55:44.214: INFO: Creating new exec pod
    Feb  9 01:55:44.222: INFO: Waiting up to 5m0s for pod "execpodkwxpr" in namespace "services-3129" to be "running"
    Feb  9 01:55:44.227: INFO: Pod "execpodkwxpr": Phase="Pending", Reason="", readiness=false. Elapsed: 4.962471ms
    Feb  9 01:55:46.234: INFO: Pod "execpodkwxpr": Phase="Running", Reason="", readiness=true. Elapsed: 2.012034115s
    Feb  9 01:55:46.235: INFO: Pod "execpodkwxpr" satisfied condition "running"
    Feb  9 01:55:47.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-3129 exec execpodkwxpr -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
    Feb  9 01:55:47.386: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
    Feb  9 01:55:47.386: INFO: stdout: ""
    Feb  9 01:55:47.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-3129 exec execpodkwxpr -- /bin/sh -x -c nc -v -z -w 2 10.0.255.59 80'
    Feb  9 01:55:47.575: INFO: stderr: "+ nc -v -z -w 2 10.0.255.59 80\nConnection to 10.0.255.59 80 port [tcp/http] succeeded!\n"
    Feb  9 01:55:47.575: INFO: stdout: ""
    Feb  9 01:55:47.575: INFO: Cleaning up the ExternalName to ClusterIP test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:47.609: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-3129" for this suite. 02/09/23 01:55:47.619
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:47.629
Feb  9 01:55:47.629: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 01:55:47.63
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:47.646
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:47.65
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217
STEP: Creating a pod to test emptydir 0777 on node default medium 02/09/23 01:55:47.654
Feb  9 01:55:47.667: INFO: Waiting up to 5m0s for pod "pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb" in namespace "emptydir-4390" to be "Succeeded or Failed"
Feb  9 01:55:47.672: INFO: Pod "pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.928938ms
Feb  9 01:55:49.680: INFO: Pod "pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012451248s
Feb  9 01:55:51.679: INFO: Pod "pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011599495s
STEP: Saw pod success 02/09/23 01:55:51.679
Feb  9 01:55:51.679: INFO: Pod "pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb" satisfied condition "Succeeded or Failed"
Feb  9 01:55:51.685: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb container test-container: <nil>
STEP: delete the pod 02/09/23 01:55:51.698
Feb  9 01:55:51.712: INFO: Waiting for pod pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb to disappear
Feb  9 01:55:51.718: INFO: Pod pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:51.718: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-4390" for this suite. 02/09/23 01:55:51.727
------------------------------
â€¢ [4.106 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:47.629
    Feb  9 01:55:47.629: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 01:55:47.63
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:47.646
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:47.65
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:217
    STEP: Creating a pod to test emptydir 0777 on node default medium 02/09/23 01:55:47.654
    Feb  9 01:55:47.667: INFO: Waiting up to 5m0s for pod "pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb" in namespace "emptydir-4390" to be "Succeeded or Failed"
    Feb  9 01:55:47.672: INFO: Pod "pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.928938ms
    Feb  9 01:55:49.680: INFO: Pod "pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012451248s
    Feb  9 01:55:51.679: INFO: Pod "pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011599495s
    STEP: Saw pod success 02/09/23 01:55:51.679
    Feb  9 01:55:51.679: INFO: Pod "pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb" satisfied condition "Succeeded or Failed"
    Feb  9 01:55:51.685: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb container test-container: <nil>
    STEP: delete the pod 02/09/23 01:55:51.698
    Feb  9 01:55:51.712: INFO: Waiting for pod pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb to disappear
    Feb  9 01:55:51.718: INFO: Pod pod-8961645d-4e4b-40cb-ae1e-ced1ac9a40bb no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:51.718: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-4390" for this suite. 02/09/23 01:55:51.727
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:51.738
Feb  9 01:55:51.738: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename dns 02/09/23 01:55:51.738
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:51.753
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:51.758
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
 02/09/23 01:55:51.762
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
 02/09/23 01:55:51.762
STEP: creating a pod to probe DNS 02/09/23 01:55:51.762
STEP: submitting the pod to kubernetes 02/09/23 01:55:51.762
Feb  9 01:55:51.775: INFO: Waiting up to 15m0s for pod "dns-test-7e28dfd4-bf26-47bf-9dbc-0b159c1413de" in namespace "dns-5930" to be "running"
Feb  9 01:55:51.783: INFO: Pod "dns-test-7e28dfd4-bf26-47bf-9dbc-0b159c1413de": Phase="Pending", Reason="", readiness=false. Elapsed: 8.638366ms
Feb  9 01:55:53.790: INFO: Pod "dns-test-7e28dfd4-bf26-47bf-9dbc-0b159c1413de": Phase="Running", Reason="", readiness=true. Elapsed: 2.015117156s
Feb  9 01:55:53.790: INFO: Pod "dns-test-7e28dfd4-bf26-47bf-9dbc-0b159c1413de" satisfied condition "running"
STEP: retrieving the pod 02/09/23 01:55:53.79
STEP: looking for the results for each expected name from probers 02/09/23 01:55:53.795
Feb  9 01:55:53.828: INFO: DNS probes using dns-5930/dns-test-7e28dfd4-bf26-47bf-9dbc-0b159c1413de succeeded

STEP: deleting the pod 02/09/23 01:55:53.828
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:53.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-5930" for this suite. 02/09/23 01:55:53.85
------------------------------
â€¢ [2.124 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:51.738
    Feb  9 01:55:51.738: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename dns 02/09/23 01:55:51.738
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:51.753
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:51.758
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for the cluster  [Conformance]
      test/e2e/network/dns.go:50
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
     02/09/23 01:55:51.762
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
     02/09/23 01:55:51.762
    STEP: creating a pod to probe DNS 02/09/23 01:55:51.762
    STEP: submitting the pod to kubernetes 02/09/23 01:55:51.762
    Feb  9 01:55:51.775: INFO: Waiting up to 15m0s for pod "dns-test-7e28dfd4-bf26-47bf-9dbc-0b159c1413de" in namespace "dns-5930" to be "running"
    Feb  9 01:55:51.783: INFO: Pod "dns-test-7e28dfd4-bf26-47bf-9dbc-0b159c1413de": Phase="Pending", Reason="", readiness=false. Elapsed: 8.638366ms
    Feb  9 01:55:53.790: INFO: Pod "dns-test-7e28dfd4-bf26-47bf-9dbc-0b159c1413de": Phase="Running", Reason="", readiness=true. Elapsed: 2.015117156s
    Feb  9 01:55:53.790: INFO: Pod "dns-test-7e28dfd4-bf26-47bf-9dbc-0b159c1413de" satisfied condition "running"
    STEP: retrieving the pod 02/09/23 01:55:53.79
    STEP: looking for the results for each expected name from probers 02/09/23 01:55:53.795
    Feb  9 01:55:53.828: INFO: DNS probes using dns-5930/dns-test-7e28dfd4-bf26-47bf-9dbc-0b159c1413de succeeded

    STEP: deleting the pod 02/09/23 01:55:53.828
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:53.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-5930" for this suite. 02/09/23 01:55:53.85
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:53.865
Feb  9 01:55:53.865: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:55:53.865
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:53.88
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:53.884
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:55:53.888
Feb  9 01:55:53.904: INFO: Waiting up to 5m0s for pod "downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c" in namespace "projected-7589" to be "Succeeded or Failed"
Feb  9 01:55:53.911: INFO: Pod "downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.620596ms
Feb  9 01:55:55.918: INFO: Pod "downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013771805s
Feb  9 01:55:57.918: INFO: Pod "downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013860051s
STEP: Saw pod success 02/09/23 01:55:57.918
Feb  9 01:55:57.918: INFO: Pod "downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c" satisfied condition "Succeeded or Failed"
Feb  9 01:55:57.923: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c container client-container: <nil>
STEP: delete the pod 02/09/23 01:55:57.937
Feb  9 01:55:57.954: INFO: Waiting for pod downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c to disappear
Feb  9 01:55:57.959: INFO: Pod downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Feb  9 01:55:57.960: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7589" for this suite. 02/09/23 01:55:57.972
------------------------------
â€¢ [4.116 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:53.865
    Feb  9 01:55:53.865: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:55:53.865
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:53.88
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:53.884
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide podname only [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:53
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:55:53.888
    Feb  9 01:55:53.904: INFO: Waiting up to 5m0s for pod "downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c" in namespace "projected-7589" to be "Succeeded or Failed"
    Feb  9 01:55:53.911: INFO: Pod "downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.620596ms
    Feb  9 01:55:55.918: INFO: Pod "downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013771805s
    Feb  9 01:55:57.918: INFO: Pod "downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013860051s
    STEP: Saw pod success 02/09/23 01:55:57.918
    Feb  9 01:55:57.918: INFO: Pod "downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c" satisfied condition "Succeeded or Failed"
    Feb  9 01:55:57.923: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c container client-container: <nil>
    STEP: delete the pod 02/09/23 01:55:57.937
    Feb  9 01:55:57.954: INFO: Waiting for pod downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c to disappear
    Feb  9 01:55:57.959: INFO: Pod downwardapi-volume-291cc98f-38ec-4cf8-8806-da13ec23ce8c no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:55:57.960: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7589" for this suite. 02/09/23 01:55:57.972
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:55:57.983
Feb  9 01:55:57.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename replicaset 02/09/23 01:55:57.984
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:57.999
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:58.003
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131
STEP: Given a Pod with a 'name' label pod-adoption-release is created 02/09/23 01:55:58.007
Feb  9 01:55:58.020: INFO: Waiting up to 5m0s for pod "pod-adoption-release" in namespace "replicaset-2348" to be "running and ready"
Feb  9 01:55:58.026: INFO: Pod "pod-adoption-release": Phase="Pending", Reason="", readiness=false. Elapsed: 5.876583ms
Feb  9 01:55:58.026: INFO: The phase of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:56:00.032: INFO: Pod "pod-adoption-release": Phase="Running", Reason="", readiness=true. Elapsed: 2.012317917s
Feb  9 01:56:00.032: INFO: The phase of Pod pod-adoption-release is Running (Ready = true)
Feb  9 01:56:00.032: INFO: Pod "pod-adoption-release" satisfied condition "running and ready"
STEP: When a replicaset with a matching selector is created 02/09/23 01:56:00.038
STEP: Then the orphan pod is adopted 02/09/23 01:56:00.045
STEP: When the matched label of one of its pods change 02/09/23 01:56:01.057
Feb  9 01:56:01.066: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released 02/09/23 01:56:01.08
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Feb  9 01:56:02.093: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-2348" for this suite. 02/09/23 01:56:02.102
------------------------------
â€¢ [4.128 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:55:57.983
    Feb  9 01:55:57.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename replicaset 02/09/23 01:55:57.984
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:55:57.999
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:55:58.003
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should adopt matching pods on creation and release no longer matching pods [Conformance]
      test/e2e/apps/replica_set.go:131
    STEP: Given a Pod with a 'name' label pod-adoption-release is created 02/09/23 01:55:58.007
    Feb  9 01:55:58.020: INFO: Waiting up to 5m0s for pod "pod-adoption-release" in namespace "replicaset-2348" to be "running and ready"
    Feb  9 01:55:58.026: INFO: Pod "pod-adoption-release": Phase="Pending", Reason="", readiness=false. Elapsed: 5.876583ms
    Feb  9 01:55:58.026: INFO: The phase of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:56:00.032: INFO: Pod "pod-adoption-release": Phase="Running", Reason="", readiness=true. Elapsed: 2.012317917s
    Feb  9 01:56:00.032: INFO: The phase of Pod pod-adoption-release is Running (Ready = true)
    Feb  9 01:56:00.032: INFO: Pod "pod-adoption-release" satisfied condition "running and ready"
    STEP: When a replicaset with a matching selector is created 02/09/23 01:56:00.038
    STEP: Then the orphan pod is adopted 02/09/23 01:56:00.045
    STEP: When the matched label of one of its pods change 02/09/23 01:56:01.057
    Feb  9 01:56:01.066: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
    STEP: Then the pod is released 02/09/23 01:56:01.08
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:56:02.093: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-2348" for this suite. 02/09/23 01:56:02.102
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:134
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:56:02.112
Feb  9 01:56:02.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-lifecycle-hook 02/09/23 01:56:02.113
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:02.129
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:02.133
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 02/09/23 01:56:02.144
Feb  9 01:56:02.158: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-2822" to be "running and ready"
Feb  9 01:56:02.168: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 10.329645ms
Feb  9 01:56:02.168: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:56:04.175: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.017765711s
Feb  9 01:56:04.175: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Feb  9 01:56:04.175: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:134
STEP: create the pod with lifecycle hook 02/09/23 01:56:04.18
Feb  9 01:56:04.189: INFO: Waiting up to 5m0s for pod "pod-with-poststart-exec-hook" in namespace "container-lifecycle-hook-2822" to be "running and ready"
Feb  9 01:56:04.195: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 5.934575ms
Feb  9 01:56:04.195: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:56:06.202: INFO: Pod "pod-with-poststart-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.0132321s
Feb  9 01:56:06.202: INFO: The phase of Pod pod-with-poststart-exec-hook is Running (Ready = true)
Feb  9 01:56:06.202: INFO: Pod "pod-with-poststart-exec-hook" satisfied condition "running and ready"
STEP: check poststart hook 02/09/23 01:56:06.208
STEP: delete the pod with lifecycle hook 02/09/23 01:56:06.22
Feb  9 01:56:06.231: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Feb  9 01:56:06.236: INFO: Pod pod-with-poststart-exec-hook still exists
Feb  9 01:56:08.237: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Feb  9 01:56:08.243: INFO: Pod pod-with-poststart-exec-hook still exists
Feb  9 01:56:10.237: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Feb  9 01:56:10.243: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Feb  9 01:56:10.243: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-2822" for this suite. 02/09/23 01:56:10.251
------------------------------
â€¢ [SLOW TEST] [8.150 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:134

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:56:02.112
    Feb  9 01:56:02.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-lifecycle-hook 02/09/23 01:56:02.113
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:02.129
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:02.133
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 02/09/23 01:56:02.144
    Feb  9 01:56:02.158: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-2822" to be "running and ready"
    Feb  9 01:56:02.168: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 10.329645ms
    Feb  9 01:56:02.168: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:56:04.175: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.017765711s
    Feb  9 01:56:04.175: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Feb  9 01:56:04.175: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute poststart exec hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:134
    STEP: create the pod with lifecycle hook 02/09/23 01:56:04.18
    Feb  9 01:56:04.189: INFO: Waiting up to 5m0s for pod "pod-with-poststart-exec-hook" in namespace "container-lifecycle-hook-2822" to be "running and ready"
    Feb  9 01:56:04.195: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 5.934575ms
    Feb  9 01:56:04.195: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:56:06.202: INFO: Pod "pod-with-poststart-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.0132321s
    Feb  9 01:56:06.202: INFO: The phase of Pod pod-with-poststart-exec-hook is Running (Ready = true)
    Feb  9 01:56:06.202: INFO: Pod "pod-with-poststart-exec-hook" satisfied condition "running and ready"
    STEP: check poststart hook 02/09/23 01:56:06.208
    STEP: delete the pod with lifecycle hook 02/09/23 01:56:06.22
    Feb  9 01:56:06.231: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Feb  9 01:56:06.236: INFO: Pod pod-with-poststart-exec-hook still exists
    Feb  9 01:56:08.237: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Feb  9 01:56:08.243: INFO: Pod pod-with-poststart-exec-hook still exists
    Feb  9 01:56:10.237: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Feb  9 01:56:10.243: INFO: Pod pod-with-poststart-exec-hook no longer exists
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:56:10.243: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-2822" for this suite. 02/09/23 01:56:10.251
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:56:10.263
Feb  9 01:56:10.263: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename webhook 02/09/23 01:56:10.264
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:10.279
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:10.284
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 02/09/23 01:56:10.305
STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:56:10.526
STEP: Deploying the webhook pod 02/09/23 01:56:10.537
STEP: Wait for the deployment to be ready 02/09/23 01:56:10.55
Feb  9 01:56:10.561: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 02/09/23 01:56:12.581
STEP: Verifying the service has paired with the endpoint 02/09/23 01:56:12.61
Feb  9 01:56:13.611: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308
STEP: Registering the crd webhook via the AdmissionRegistration API 02/09/23 01:56:13.617
STEP: Creating a custom resource definition that should be denied by the webhook 02/09/23 01:56:13.639
Feb  9 01:56:13.639: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:56:13.663: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-11" for this suite. 02/09/23 01:56:13.718
STEP: Destroying namespace "webhook-11-markers" for this suite. 02/09/23 01:56:13.727
------------------------------
â€¢ [3.472 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:56:10.263
    Feb  9 01:56:10.263: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename webhook 02/09/23 01:56:10.264
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:10.279
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:10.284
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 02/09/23 01:56:10.305
    STEP: Create role binding to let webhook read extension-apiserver-authentication 02/09/23 01:56:10.526
    STEP: Deploying the webhook pod 02/09/23 01:56:10.537
    STEP: Wait for the deployment to be ready 02/09/23 01:56:10.55
    Feb  9 01:56:10.561: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 02/09/23 01:56:12.581
    STEP: Verifying the service has paired with the endpoint 02/09/23 01:56:12.61
    Feb  9 01:56:13.611: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should deny crd creation [Conformance]
      test/e2e/apimachinery/webhook.go:308
    STEP: Registering the crd webhook via the AdmissionRegistration API 02/09/23 01:56:13.617
    STEP: Creating a custom resource definition that should be denied by the webhook 02/09/23 01:56:13.639
    Feb  9 01:56:13.639: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:56:13.663: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-11" for this suite. 02/09/23 01:56:13.718
    STEP: Destroying namespace "webhook-11-markers" for this suite. 02/09/23 01:56:13.727
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:56:13.735
Feb  9 01:56:13.735: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 01:56:13.737
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:13.752
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:13.757
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157
STEP: Creating a pod to test emptydir volume type on node default medium 02/09/23 01:56:13.761
Feb  9 01:56:13.773: INFO: Waiting up to 5m0s for pod "pod-fd83149f-59f7-431d-8f42-425091c2f501" in namespace "emptydir-4878" to be "Succeeded or Failed"
Feb  9 01:56:13.779: INFO: Pod "pod-fd83149f-59f7-431d-8f42-425091c2f501": Phase="Pending", Reason="", readiness=false. Elapsed: 5.947646ms
Feb  9 01:56:15.785: INFO: Pod "pod-fd83149f-59f7-431d-8f42-425091c2f501": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012024346s
Feb  9 01:56:17.785: INFO: Pod "pod-fd83149f-59f7-431d-8f42-425091c2f501": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012644784s
STEP: Saw pod success 02/09/23 01:56:17.786
Feb  9 01:56:17.786: INFO: Pod "pod-fd83149f-59f7-431d-8f42-425091c2f501" satisfied condition "Succeeded or Failed"
Feb  9 01:56:17.791: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-fd83149f-59f7-431d-8f42-425091c2f501 container test-container: <nil>
STEP: delete the pod 02/09/23 01:56:17.808
Feb  9 01:56:17.827: INFO: Waiting for pod pod-fd83149f-59f7-431d-8f42-425091c2f501 to disappear
Feb  9 01:56:17.833: INFO: Pod pod-fd83149f-59f7-431d-8f42-425091c2f501 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:56:17.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-4878" for this suite. 02/09/23 01:56:17.842
------------------------------
â€¢ [4.115 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:56:13.735
    Feb  9 01:56:13.735: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 01:56:13.737
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:13.752
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:13.757
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:157
    STEP: Creating a pod to test emptydir volume type on node default medium 02/09/23 01:56:13.761
    Feb  9 01:56:13.773: INFO: Waiting up to 5m0s for pod "pod-fd83149f-59f7-431d-8f42-425091c2f501" in namespace "emptydir-4878" to be "Succeeded or Failed"
    Feb  9 01:56:13.779: INFO: Pod "pod-fd83149f-59f7-431d-8f42-425091c2f501": Phase="Pending", Reason="", readiness=false. Elapsed: 5.947646ms
    Feb  9 01:56:15.785: INFO: Pod "pod-fd83149f-59f7-431d-8f42-425091c2f501": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012024346s
    Feb  9 01:56:17.785: INFO: Pod "pod-fd83149f-59f7-431d-8f42-425091c2f501": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012644784s
    STEP: Saw pod success 02/09/23 01:56:17.786
    Feb  9 01:56:17.786: INFO: Pod "pod-fd83149f-59f7-431d-8f42-425091c2f501" satisfied condition "Succeeded or Failed"
    Feb  9 01:56:17.791: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-fd83149f-59f7-431d-8f42-425091c2f501 container test-container: <nil>
    STEP: delete the pod 02/09/23 01:56:17.808
    Feb  9 01:56:17.827: INFO: Waiting for pod pod-fd83149f-59f7-431d-8f42-425091c2f501 to disappear
    Feb  9 01:56:17.833: INFO: Pod pod-fd83149f-59f7-431d-8f42-425091c2f501 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:56:17.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-4878" for this suite. 02/09/23 01:56:17.842
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:56:17.854
Feb  9 01:56:17.854: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:56:17.855
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:17.871
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:17.875
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217
STEP: Creating a pod to test downward api env vars 02/09/23 01:56:17.879
Feb  9 01:56:17.892: INFO: Waiting up to 5m0s for pod "downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0" in namespace "downward-api-8946" to be "Succeeded or Failed"
Feb  9 01:56:17.898: INFO: Pod "downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.11917ms
Feb  9 01:56:19.905: INFO: Pod "downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013495596s
Feb  9 01:56:21.904: INFO: Pod "downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012572278s
STEP: Saw pod success 02/09/23 01:56:21.904
Feb  9 01:56:21.905: INFO: Pod "downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0" satisfied condition "Succeeded or Failed"
Feb  9 01:56:21.910: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0 container dapi-container: <nil>
STEP: delete the pod 02/09/23 01:56:21.923
Feb  9 01:56:21.936: INFO: Waiting for pod downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0 to disappear
Feb  9 01:56:21.942: INFO: Pod downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Feb  9 01:56:21.942: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-8946" for this suite. 02/09/23 01:56:21.956
------------------------------
â€¢ [4.112 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:56:17.854
    Feb  9 01:56:17.854: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:56:17.855
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:17.871
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:17.875
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:217
    STEP: Creating a pod to test downward api env vars 02/09/23 01:56:17.879
    Feb  9 01:56:17.892: INFO: Waiting up to 5m0s for pod "downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0" in namespace "downward-api-8946" to be "Succeeded or Failed"
    Feb  9 01:56:17.898: INFO: Pod "downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.11917ms
    Feb  9 01:56:19.905: INFO: Pod "downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013495596s
    Feb  9 01:56:21.904: INFO: Pod "downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012572278s
    STEP: Saw pod success 02/09/23 01:56:21.904
    Feb  9 01:56:21.905: INFO: Pod "downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0" satisfied condition "Succeeded or Failed"
    Feb  9 01:56:21.910: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0 container dapi-container: <nil>
    STEP: delete the pod 02/09/23 01:56:21.923
    Feb  9 01:56:21.936: INFO: Waiting for pod downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0 to disappear
    Feb  9 01:56:21.942: INFO: Pod downward-api-6741ed19-15a5-49e2-a2e0-3caa526d95d0 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:56:21.942: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-8946" for this suite. 02/09/23 01:56:21.956
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PodTemplates
  should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:56:21.968
Feb  9 01:56:21.968: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename podtemplate 02/09/23 01:56:21.968
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:21.985
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:21.989
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176
STEP: Create a pod template 02/09/23 01:56:21.993
STEP: Replace a pod template 02/09/23 01:56:21.999
Feb  9 01:56:22.010: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Feb  9 01:56:22.011: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-1348" for this suite. 02/09/23 01:56:22.018
------------------------------
â€¢ [0.059 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:56:21.968
    Feb  9 01:56:21.968: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename podtemplate 02/09/23 01:56:21.968
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:21.985
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:21.989
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should replace a pod template [Conformance]
      test/e2e/common/node/podtemplates.go:176
    STEP: Create a pod template 02/09/23 01:56:21.993
    STEP: Replace a pod template 02/09/23 01:56:21.999
    Feb  9 01:56:22.010: INFO: Found updated podtemplate annotation: "true"

    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:56:22.011: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-1348" for this suite. 02/09/23 01:56:22.018
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:56:22.027
Feb  9 01:56:22.027: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 01:56:22.028
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:22.043
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:22.047
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138
STEP: Creating configMap that has name configmap-test-emptyKey-f2d1dc98-4913-4b84-ab2f-5f666246b580 02/09/23 01:56:22.052
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:56:22.054: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-5942" for this suite. 02/09/23 01:56:22.06
------------------------------
â€¢ [0.042 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:56:22.027
    Feb  9 01:56:22.027: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 01:56:22.028
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:22.043
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:22.047
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail to create ConfigMap with empty key [Conformance]
      test/e2e/common/node/configmap.go:138
    STEP: Creating configMap that has name configmap-test-emptyKey-f2d1dc98-4913-4b84-ab2f-5f666246b580 02/09/23 01:56:22.052
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:56:22.054: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-5942" for this suite. 02/09/23 01:56:22.06
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:56:22.071
Feb  9 01:56:22.071: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename secrets 02/09/23 01:56:22.072
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:22.086
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:22.095
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Feb  9 01:56:22.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-2970" for this suite. 02/09/23 01:56:22.168
------------------------------
â€¢ [0.107 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:56:22.071
    Feb  9 01:56:22.071: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename secrets 02/09/23 01:56:22.072
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:22.086
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:22.095
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be immutable if `immutable` field is set [Conformance]
      test/e2e/common/storage/secrets_volume.go:386
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:56:22.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-2970" for this suite. 02/09/23 01:56:22.168
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with secret pod [Conformance]
  test/e2e/storage/subpath.go:60
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:56:22.179
Feb  9 01:56:22.179: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename subpath 02/09/23 01:56:22.18
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:22.195
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:22.2
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 02/09/23 01:56:22.205
[It] should support subpaths with secret pod [Conformance]
  test/e2e/storage/subpath.go:60
STEP: Creating pod pod-subpath-test-secret-2s7z 02/09/23 01:56:22.217
STEP: Creating a pod to test atomic-volume-subpath 02/09/23 01:56:22.217
Feb  9 01:56:22.230: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-2s7z" in namespace "subpath-6534" to be "Succeeded or Failed"
Feb  9 01:56:22.235: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Pending", Reason="", readiness=false. Elapsed: 5.248155ms
Feb  9 01:56:24.242: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 2.012736425s
Feb  9 01:56:26.243: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 4.013409524s
Feb  9 01:56:28.242: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 6.012259933s
Feb  9 01:56:30.242: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 8.012052038s
Feb  9 01:56:32.242: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 10.012266849s
Feb  9 01:56:34.241: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 12.01170425s
Feb  9 01:56:36.241: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 14.011687518s
Feb  9 01:56:38.241: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 16.011709301s
Feb  9 01:56:40.243: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 18.013309001s
Feb  9 01:56:42.243: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 20.013306284s
Feb  9 01:56:44.242: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=false. Elapsed: 22.012142414s
Feb  9 01:56:46.242: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.012644774s
STEP: Saw pod success 02/09/23 01:56:46.242
Feb  9 01:56:46.242: INFO: Pod "pod-subpath-test-secret-2s7z" satisfied condition "Succeeded or Failed"
Feb  9 01:56:46.248: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-subpath-test-secret-2s7z container test-container-subpath-secret-2s7z: <nil>
STEP: delete the pod 02/09/23 01:56:46.258
Feb  9 01:56:46.275: INFO: Waiting for pod pod-subpath-test-secret-2s7z to disappear
Feb  9 01:56:46.281: INFO: Pod pod-subpath-test-secret-2s7z no longer exists
STEP: Deleting pod pod-subpath-test-secret-2s7z 02/09/23 01:56:46.281
Feb  9 01:56:46.281: INFO: Deleting pod "pod-subpath-test-secret-2s7z" in namespace "subpath-6534"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Feb  9 01:56:46.286: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-6534" for this suite. 02/09/23 01:56:46.294
------------------------------
â€¢ [SLOW TEST] [24.125 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/storage/subpath.go:60

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:56:22.179
    Feb  9 01:56:22.179: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename subpath 02/09/23 01:56:22.18
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:22.195
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:22.2
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 02/09/23 01:56:22.205
    [It] should support subpaths with secret pod [Conformance]
      test/e2e/storage/subpath.go:60
    STEP: Creating pod pod-subpath-test-secret-2s7z 02/09/23 01:56:22.217
    STEP: Creating a pod to test atomic-volume-subpath 02/09/23 01:56:22.217
    Feb  9 01:56:22.230: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-2s7z" in namespace "subpath-6534" to be "Succeeded or Failed"
    Feb  9 01:56:22.235: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Pending", Reason="", readiness=false. Elapsed: 5.248155ms
    Feb  9 01:56:24.242: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 2.012736425s
    Feb  9 01:56:26.243: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 4.013409524s
    Feb  9 01:56:28.242: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 6.012259933s
    Feb  9 01:56:30.242: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 8.012052038s
    Feb  9 01:56:32.242: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 10.012266849s
    Feb  9 01:56:34.241: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 12.01170425s
    Feb  9 01:56:36.241: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 14.011687518s
    Feb  9 01:56:38.241: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 16.011709301s
    Feb  9 01:56:40.243: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 18.013309001s
    Feb  9 01:56:42.243: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=true. Elapsed: 20.013306284s
    Feb  9 01:56:44.242: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Running", Reason="", readiness=false. Elapsed: 22.012142414s
    Feb  9 01:56:46.242: INFO: Pod "pod-subpath-test-secret-2s7z": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.012644774s
    STEP: Saw pod success 02/09/23 01:56:46.242
    Feb  9 01:56:46.242: INFO: Pod "pod-subpath-test-secret-2s7z" satisfied condition "Succeeded or Failed"
    Feb  9 01:56:46.248: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-subpath-test-secret-2s7z container test-container-subpath-secret-2s7z: <nil>
    STEP: delete the pod 02/09/23 01:56:46.258
    Feb  9 01:56:46.275: INFO: Waiting for pod pod-subpath-test-secret-2s7z to disappear
    Feb  9 01:56:46.281: INFO: Pod pod-subpath-test-secret-2s7z no longer exists
    STEP: Deleting pod pod-subpath-test-secret-2s7z 02/09/23 01:56:46.281
    Feb  9 01:56:46.281: INFO: Deleting pod "pod-subpath-test-secret-2s7z" in namespace "subpath-6534"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:56:46.286: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-6534" for this suite. 02/09/23 01:56:46.294
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:56:46.305
Feb  9 01:56:46.305: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename sched-pred 02/09/23 01:56:46.306
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:46.321
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:46.325
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Feb  9 01:56:46.328: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Feb  9 01:56:46.340: INFO: Waiting for terminating namespaces to be deleted...
Feb  9 01:56:46.345: INFO: 
Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000000 before test
Feb  9 01:56:46.357: INFO: azure-ip-masq-agent-26zqc from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.357: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Feb  9 01:56:46.357: INFO: cloud-node-manager-khkh5 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.357: INFO: 	Container cloud-node-manager ready: true, restart count 0
Feb  9 01:56:46.357: INFO: csi-azuredisk-node-f98f4 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
Feb  9 01:56:46.357: INFO: 	Container azuredisk ready: true, restart count 0
Feb  9 01:56:46.357: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:56:46.357: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:56:46.357: INFO: csi-azurefile-node-kd8lb from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
Feb  9 01:56:46.357: INFO: 	Container azurefile ready: true, restart count 0
Feb  9 01:56:46.357: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:56:46.357: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:56:46.357: INFO: kube-proxy-hznqr from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.357: INFO: 	Container kube-proxy ready: true, restart count 0
Feb  9 01:56:46.357: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-ccznv from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:56:46.357: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:56:46.357: INFO: 	Container systemd-logs ready: true, restart count 0
Feb  9 01:56:46.357: INFO: 
Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000001 before test
Feb  9 01:56:46.368: INFO: azure-ip-masq-agent-9z68l from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.368: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Feb  9 01:56:46.368: INFO: cloud-node-manager-5mlpp from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.368: INFO: 	Container cloud-node-manager ready: true, restart count 0
Feb  9 01:56:46.368: INFO: coredns-78669d9946-89dxb from kube-system started at 2023-02-09 00:22:29 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.368: INFO: 	Container coredns ready: true, restart count 0
Feb  9 01:56:46.368: INFO: coredns-autoscaler-5b5c4f5b4f-9tnqp from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.368: INFO: 	Container autoscaler ready: true, restart count 0
Feb  9 01:56:46.368: INFO: csi-azuredisk-node-6tghn from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
Feb  9 01:56:46.368: INFO: 	Container azuredisk ready: true, restart count 0
Feb  9 01:56:46.368: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:56:46.368: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:56:46.368: INFO: csi-azurefile-node-cgcmb from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
Feb  9 01:56:46.368: INFO: 	Container azurefile ready: true, restart count 0
Feb  9 01:56:46.368: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:56:46.368: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:56:46.369: INFO: konnectivity-agent-6dd87768b6-5jd76 from kube-system started at 2023-02-09 00:41:56 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.369: INFO: 	Container konnectivity-agent ready: true, restart count 0
Feb  9 01:56:46.369: INFO: kube-proxy-tkwb2 from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.369: INFO: 	Container kube-proxy ready: true, restart count 0
Feb  9 01:56:46.369: INFO: metrics-server-5f6654d4df-mqppz from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
Feb  9 01:56:46.369: INFO: 	Container metrics-server ready: true, restart count 0
Feb  9 01:56:46.369: INFO: 	Container metrics-server-vpa ready: true, restart count 0
Feb  9 01:56:46.369: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-hktzz from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:56:46.369: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:56:46.369: INFO: 	Container systemd-logs ready: true, restart count 0
Feb  9 01:56:46.369: INFO: 
Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000002 before test
Feb  9 01:56:46.378: INFO: azure-ip-masq-agent-g85z9 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.378: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Feb  9 01:56:46.378: INFO: cloud-node-manager-2mppx from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.378: INFO: 	Container cloud-node-manager ready: true, restart count 0
Feb  9 01:56:46.378: INFO: coredns-78669d9946-nmkmm from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.378: INFO: 	Container coredns ready: true, restart count 0
Feb  9 01:56:46.378: INFO: csi-azuredisk-node-drwdg from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
Feb  9 01:56:46.378: INFO: 	Container azuredisk ready: true, restart count 0
Feb  9 01:56:46.378: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:56:46.378: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:56:46.378: INFO: csi-azurefile-node-j6wh8 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
Feb  9 01:56:46.378: INFO: 	Container azurefile ready: true, restart count 0
Feb  9 01:56:46.378: INFO: 	Container liveness-probe ready: true, restart count 0
Feb  9 01:56:46.378: INFO: 	Container node-driver-registrar ready: true, restart count 0
Feb  9 01:56:46.378: INFO: konnectivity-agent-6dd87768b6-4wblz from kube-system started at 2023-02-09 00:41:54 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.378: INFO: 	Container konnectivity-agent ready: true, restart count 0
Feb  9 01:56:46.378: INFO: kube-proxy-k97mw from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.378: INFO: 	Container kube-proxy ready: true, restart count 0
Feb  9 01:56:46.378: INFO: metrics-server-5f6654d4df-cp5km from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
Feb  9 01:56:46.378: INFO: 	Container metrics-server ready: true, restart count 0
Feb  9 01:56:46.378: INFO: 	Container metrics-server-vpa ready: true, restart count 0
Feb  9 01:56:46.378: INFO: sonobuoy from sonobuoy started at 2023-02-09 00:26:49 +0000 UTC (1 container statuses recorded)
Feb  9 01:56:46.378: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Feb  9 01:56:46.378: INFO: sonobuoy-e2e-job-2cb73ed04ae14ea3 from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:56:46.378: INFO: 	Container e2e ready: true, restart count 0
Feb  9 01:56:46.378: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:56:46.378: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-snxjd from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
Feb  9 01:56:46.378: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Feb  9 01:56:46.378: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466
STEP: Trying to launch a pod without a label to get a node which can launch it. 02/09/23 01:56:46.379
Feb  9 01:56:46.391: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-7839" to be "running"
Feb  9 01:56:46.400: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 9.30831ms
Feb  9 01:56:48.406: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.015643539s
Feb  9 01:56:48.406: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 02/09/23 01:56:48.412
STEP: Trying to apply a random label on the found node. 02/09/23 01:56:48.43
STEP: verifying the node has the label kubernetes.io/e2e-9b1b00b7-39c4-4f50-b4c7-2dfb864dde69 42 02/09/23 01:56:48.446
STEP: Trying to relaunch the pod, now with labels. 02/09/23 01:56:48.452
Feb  9 01:56:48.459: INFO: Waiting up to 5m0s for pod "with-labels" in namespace "sched-pred-7839" to be "not pending"
Feb  9 01:56:48.464: INFO: Pod "with-labels": Phase="Pending", Reason="", readiness=false. Elapsed: 4.949058ms
Feb  9 01:56:50.471: INFO: Pod "with-labels": Phase="Running", Reason="", readiness=true. Elapsed: 2.012067596s
Feb  9 01:56:50.471: INFO: Pod "with-labels" satisfied condition "not pending"
STEP: removing the label kubernetes.io/e2e-9b1b00b7-39c4-4f50-b4c7-2dfb864dde69 off the node aks-nodes-15799032-vmss000000 02/09/23 01:56:50.477
STEP: verifying the node doesn't have the label kubernetes.io/e2e-9b1b00b7-39c4-4f50-b4c7-2dfb864dde69 02/09/23 01:56:50.5
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:56:50.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-7839" for this suite. 02/09/23 01:56:50.513
------------------------------
â€¢ [4.220 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:56:46.305
    Feb  9 01:56:46.305: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename sched-pred 02/09/23 01:56:46.306
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:46.321
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:46.325
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Feb  9 01:56:46.328: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Feb  9 01:56:46.340: INFO: Waiting for terminating namespaces to be deleted...
    Feb  9 01:56:46.345: INFO: 
    Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000000 before test
    Feb  9 01:56:46.357: INFO: azure-ip-masq-agent-26zqc from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.357: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
    Feb  9 01:56:46.357: INFO: cloud-node-manager-khkh5 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.357: INFO: 	Container cloud-node-manager ready: true, restart count 0
    Feb  9 01:56:46.357: INFO: csi-azuredisk-node-f98f4 from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
    Feb  9 01:56:46.357: INFO: 	Container azuredisk ready: true, restart count 0
    Feb  9 01:56:46.357: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:56:46.357: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:56:46.357: INFO: csi-azurefile-node-kd8lb from kube-system started at 2023-02-09 00:21:06 +0000 UTC (3 container statuses recorded)
    Feb  9 01:56:46.357: INFO: 	Container azurefile ready: true, restart count 0
    Feb  9 01:56:46.357: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:56:46.357: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:56:46.357: INFO: kube-proxy-hznqr from kube-system started at 2023-02-09 00:21:06 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.357: INFO: 	Container kube-proxy ready: true, restart count 0
    Feb  9 01:56:46.357: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-ccznv from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:56:46.357: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:56:46.357: INFO: 	Container systemd-logs ready: true, restart count 0
    Feb  9 01:56:46.357: INFO: 
    Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000001 before test
    Feb  9 01:56:46.368: INFO: azure-ip-masq-agent-9z68l from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.368: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
    Feb  9 01:56:46.368: INFO: cloud-node-manager-5mlpp from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.368: INFO: 	Container cloud-node-manager ready: true, restart count 0
    Feb  9 01:56:46.368: INFO: coredns-78669d9946-89dxb from kube-system started at 2023-02-09 00:22:29 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.368: INFO: 	Container coredns ready: true, restart count 0
    Feb  9 01:56:46.368: INFO: coredns-autoscaler-5b5c4f5b4f-9tnqp from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.368: INFO: 	Container autoscaler ready: true, restart count 0
    Feb  9 01:56:46.368: INFO: csi-azuredisk-node-6tghn from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
    Feb  9 01:56:46.368: INFO: 	Container azuredisk ready: true, restart count 0
    Feb  9 01:56:46.368: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:56:46.368: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:56:46.368: INFO: csi-azurefile-node-cgcmb from kube-system started at 2023-02-09 00:21:13 +0000 UTC (3 container statuses recorded)
    Feb  9 01:56:46.368: INFO: 	Container azurefile ready: true, restart count 0
    Feb  9 01:56:46.368: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:56:46.368: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:56:46.369: INFO: konnectivity-agent-6dd87768b6-5jd76 from kube-system started at 2023-02-09 00:41:56 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.369: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Feb  9 01:56:46.369: INFO: kube-proxy-tkwb2 from kube-system started at 2023-02-09 00:21:13 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.369: INFO: 	Container kube-proxy ready: true, restart count 0
    Feb  9 01:56:46.369: INFO: metrics-server-5f6654d4df-mqppz from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
    Feb  9 01:56:46.369: INFO: 	Container metrics-server ready: true, restart count 0
    Feb  9 01:56:46.369: INFO: 	Container metrics-server-vpa ready: true, restart count 0
    Feb  9 01:56:46.369: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-hktzz from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:56:46.369: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:56:46.369: INFO: 	Container systemd-logs ready: true, restart count 0
    Feb  9 01:56:46.369: INFO: 
    Logging pods the apiserver thinks is on node aks-nodes-15799032-vmss000002 before test
    Feb  9 01:56:46.378: INFO: azure-ip-masq-agent-g85z9 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.378: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: cloud-node-manager-2mppx from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.378: INFO: 	Container cloud-node-manager ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: coredns-78669d9946-nmkmm from kube-system started at 2023-02-09 00:53:45 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.378: INFO: 	Container coredns ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: csi-azuredisk-node-drwdg from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
    Feb  9 01:56:46.378: INFO: 	Container azuredisk ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: csi-azurefile-node-j6wh8 from kube-system started at 2023-02-09 00:21:27 +0000 UTC (3 container statuses recorded)
    Feb  9 01:56:46.378: INFO: 	Container azurefile ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: 	Container liveness-probe ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: konnectivity-agent-6dd87768b6-4wblz from kube-system started at 2023-02-09 00:41:54 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.378: INFO: 	Container konnectivity-agent ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: kube-proxy-k97mw from kube-system started at 2023-02-09 00:21:27 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.378: INFO: 	Container kube-proxy ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: metrics-server-5f6654d4df-cp5km from kube-system started at 2023-02-09 00:25:42 +0000 UTC (2 container statuses recorded)
    Feb  9 01:56:46.378: INFO: 	Container metrics-server ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: 	Container metrics-server-vpa ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: sonobuoy from sonobuoy started at 2023-02-09 00:26:49 +0000 UTC (1 container statuses recorded)
    Feb  9 01:56:46.378: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: sonobuoy-e2e-job-2cb73ed04ae14ea3 from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:56:46.378: INFO: 	Container e2e ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: sonobuoy-systemd-logs-daemon-set-5c1ec2d8a5be47cc-snxjd from sonobuoy started at 2023-02-09 00:26:51 +0000 UTC (2 container statuses recorded)
    Feb  9 01:56:46.378: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Feb  9 01:56:46.378: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates that NodeSelector is respected if matching  [Conformance]
      test/e2e/scheduling/predicates.go:466
    STEP: Trying to launch a pod without a label to get a node which can launch it. 02/09/23 01:56:46.379
    Feb  9 01:56:46.391: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-7839" to be "running"
    Feb  9 01:56:46.400: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 9.30831ms
    Feb  9 01:56:48.406: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.015643539s
    Feb  9 01:56:48.406: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 02/09/23 01:56:48.412
    STEP: Trying to apply a random label on the found node. 02/09/23 01:56:48.43
    STEP: verifying the node has the label kubernetes.io/e2e-9b1b00b7-39c4-4f50-b4c7-2dfb864dde69 42 02/09/23 01:56:48.446
    STEP: Trying to relaunch the pod, now with labels. 02/09/23 01:56:48.452
    Feb  9 01:56:48.459: INFO: Waiting up to 5m0s for pod "with-labels" in namespace "sched-pred-7839" to be "not pending"
    Feb  9 01:56:48.464: INFO: Pod "with-labels": Phase="Pending", Reason="", readiness=false. Elapsed: 4.949058ms
    Feb  9 01:56:50.471: INFO: Pod "with-labels": Phase="Running", Reason="", readiness=true. Elapsed: 2.012067596s
    Feb  9 01:56:50.471: INFO: Pod "with-labels" satisfied condition "not pending"
    STEP: removing the label kubernetes.io/e2e-9b1b00b7-39c4-4f50-b4c7-2dfb864dde69 off the node aks-nodes-15799032-vmss000000 02/09/23 01:56:50.477
    STEP: verifying the node doesn't have the label kubernetes.io/e2e-9b1b00b7-39c4-4f50-b4c7-2dfb864dde69 02/09/23 01:56:50.5
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:56:50.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-7839" for this suite. 02/09/23 01:56:50.513
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:56:50.526
Feb  9 01:56:50.527: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:56:50.527
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:50.542
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:50.546
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67
STEP: Creating projection with secret that has name projected-secret-test-efa15542-2a8d-41e5-85cf-4941ce4466f2 02/09/23 01:56:50.551
STEP: Creating a pod to test consume secrets 02/09/23 01:56:50.556
Feb  9 01:56:50.569: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21" in namespace "projected-1073" to be "Succeeded or Failed"
Feb  9 01:56:50.574: INFO: Pod "pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21": Phase="Pending", Reason="", readiness=false. Elapsed: 5.539465ms
Feb  9 01:56:52.581: INFO: Pod "pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012243377s
Feb  9 01:56:54.581: INFO: Pod "pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012222615s
STEP: Saw pod success 02/09/23 01:56:54.581
Feb  9 01:56:54.581: INFO: Pod "pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21" satisfied condition "Succeeded or Failed"
Feb  9 01:56:54.586: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21 container projected-secret-volume-test: <nil>
STEP: delete the pod 02/09/23 01:56:54.598
Feb  9 01:56:54.614: INFO: Waiting for pod pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21 to disappear
Feb  9 01:56:54.619: INFO: Pod pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Feb  9 01:56:54.619: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1073" for this suite. 02/09/23 01:56:54.626
------------------------------
â€¢ [4.110 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:56:50.526
    Feb  9 01:56:50.527: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:56:50.527
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:50.542
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:50.546
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:67
    STEP: Creating projection with secret that has name projected-secret-test-efa15542-2a8d-41e5-85cf-4941ce4466f2 02/09/23 01:56:50.551
    STEP: Creating a pod to test consume secrets 02/09/23 01:56:50.556
    Feb  9 01:56:50.569: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21" in namespace "projected-1073" to be "Succeeded or Failed"
    Feb  9 01:56:50.574: INFO: Pod "pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21": Phase="Pending", Reason="", readiness=false. Elapsed: 5.539465ms
    Feb  9 01:56:52.581: INFO: Pod "pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012243377s
    Feb  9 01:56:54.581: INFO: Pod "pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012222615s
    STEP: Saw pod success 02/09/23 01:56:54.581
    Feb  9 01:56:54.581: INFO: Pod "pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21" satisfied condition "Succeeded or Failed"
    Feb  9 01:56:54.586: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21 container projected-secret-volume-test: <nil>
    STEP: delete the pod 02/09/23 01:56:54.598
    Feb  9 01:56:54.614: INFO: Waiting for pod pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21 to disappear
    Feb  9 01:56:54.619: INFO: Pod pod-projected-secrets-f3ec6c10-3bbb-40f2-84b9-a17cb01b9d21 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:56:54.619: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1073" for this suite. 02/09/23 01:56:54.626
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] Garbage collector
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:56:54.636
Feb  9 01:56:54.636: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename gc 02/09/23 01:56:54.637
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:54.652
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:54.656
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312
STEP: create the rc 02/09/23 01:56:54.66
STEP: delete the rc 02/09/23 01:56:59.673
STEP: wait for all pods to be garbage collected 02/09/23 01:56:59.683
STEP: Gathering metrics 02/09/23 01:57:04.696
W0209 01:57:04.709208      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Feb  9 01:57:04.709: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Feb  9 01:57:04.709: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-9881" for this suite. 02/09/23 01:57:04.716
------------------------------
â€¢ [SLOW TEST] [10.089 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:56:54.636
    Feb  9 01:56:54.636: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename gc 02/09/23 01:56:54.637
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:56:54.652
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:56:54.656
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete pods created by rc when not orphaning [Conformance]
      test/e2e/apimachinery/garbage_collector.go:312
    STEP: create the rc 02/09/23 01:56:54.66
    STEP: delete the rc 02/09/23 01:56:59.673
    STEP: wait for all pods to be garbage collected 02/09/23 01:56:59.683
    STEP: Gathering metrics 02/09/23 01:57:04.696
    W0209 01:57:04.709208      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Feb  9 01:57:04.709: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:57:04.709: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-9881" for this suite. 02/09/23 01:57:04.716
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] RuntimeClass
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:57:04.727
Feb  9 01:57:04.727: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename runtimeclass 02/09/23 01:57:04.728
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:57:04.758
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:57:04.762
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104
Feb  9 01:57:04.783: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-4173 to be scheduled
Feb  9 01:57:04.793: INFO: 1 pods are not scheduled: [runtimeclass-4173/test-runtimeclass-runtimeclass-4173-preconfigured-handler-qfxqp(436fe544-2676-49bc-9366-630b9dc9839f)]
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Feb  9 01:57:06.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-4173" for this suite. 02/09/23 01:57:06.818
------------------------------
â€¢ [2.100 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:57:04.727
    Feb  9 01:57:04.727: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename runtimeclass 02/09/23 01:57:04.728
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:57:04.758
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:57:04.762
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:104
    Feb  9 01:57:04.783: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-4173 to be scheduled
    Feb  9 01:57:04.793: INFO: 1 pods are not scheduled: [runtimeclass-4173/test-runtimeclass-runtimeclass-4173-preconfigured-handler-qfxqp(436fe544-2676-49bc-9366-630b9dc9839f)]
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:57:06.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-4173" for this suite. 02/09/23 01:57:06.818
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:57:06.829
Feb  9 01:57:06.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename replicaset 02/09/23 01:57:06.83
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:57:06.849
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:57:06.852
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota 02/09/23 01:57:06.856
Feb  9 01:57:06.871: INFO: Pod name sample-pod: Found 0 pods out of 1
Feb  9 01:57:11.877: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 02/09/23 01:57:11.877
STEP: getting scale subresource 02/09/23 01:57:11.877
STEP: updating a scale subresource 02/09/23 01:57:11.882
STEP: verifying the replicaset Spec.Replicas was modified 02/09/23 01:57:11.889
STEP: Patch a scale subresource 02/09/23 01:57:11.894
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Feb  9 01:57:11.911: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-2598" for this suite. 02/09/23 01:57:11.918
------------------------------
â€¢ [SLOW TEST] [5.099 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:57:06.829
    Feb  9 01:57:06.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename replicaset 02/09/23 01:57:06.83
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:57:06.849
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:57:06.852
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] Replicaset should have a working scale subresource [Conformance]
      test/e2e/apps/replica_set.go:143
    STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota 02/09/23 01:57:06.856
    Feb  9 01:57:06.871: INFO: Pod name sample-pod: Found 0 pods out of 1
    Feb  9 01:57:11.877: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 02/09/23 01:57:11.877
    STEP: getting scale subresource 02/09/23 01:57:11.877
    STEP: updating a scale subresource 02/09/23 01:57:11.882
    STEP: verifying the replicaset Spec.Replicas was modified 02/09/23 01:57:11.889
    STEP: Patch a scale subresource 02/09/23 01:57:11.894
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:57:11.911: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-2598" for this suite. 02/09/23 01:57:11.918
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] Projected configMap
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:57:11.929
Feb  9 01:57:11.929: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename projected 02/09/23 01:57:11.93
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:57:11.948
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:57:11.952
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124
STEP: Creating projection with configMap that has name projected-configmap-test-upd-e0fbc67c-85ee-4247-9b2a-e5e86328c5d8 02/09/23 01:57:11.962
STEP: Creating the pod 02/09/23 01:57:11.969
Feb  9 01:57:11.982: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-3038a4d9-750c-4c2b-b90a-e43ed03e4063" in namespace "projected-9101" to be "running and ready"
Feb  9 01:57:11.988: INFO: Pod "pod-projected-configmaps-3038a4d9-750c-4c2b-b90a-e43ed03e4063": Phase="Pending", Reason="", readiness=false. Elapsed: 6.456265ms
Feb  9 01:57:11.988: INFO: The phase of Pod pod-projected-configmaps-3038a4d9-750c-4c2b-b90a-e43ed03e4063 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:57:13.995: INFO: Pod "pod-projected-configmaps-3038a4d9-750c-4c2b-b90a-e43ed03e4063": Phase="Running", Reason="", readiness=true. Elapsed: 2.013787131s
Feb  9 01:57:13.995: INFO: The phase of Pod pod-projected-configmaps-3038a4d9-750c-4c2b-b90a-e43ed03e4063 is Running (Ready = true)
Feb  9 01:57:13.995: INFO: Pod "pod-projected-configmaps-3038a4d9-750c-4c2b-b90a-e43ed03e4063" satisfied condition "running and ready"
STEP: Updating configmap projected-configmap-test-upd-e0fbc67c-85ee-4247-9b2a-e5e86328c5d8 02/09/23 01:57:14.012
STEP: waiting to observe update in volume 02/09/23 01:57:14.019
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:57:16.044: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-9101" for this suite. 02/09/23 01:57:16.052
------------------------------
â€¢ [4.132 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:57:11.929
    Feb  9 01:57:11.929: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename projected 02/09/23 01:57:11.93
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:57:11.948
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:57:11.952
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:124
    STEP: Creating projection with configMap that has name projected-configmap-test-upd-e0fbc67c-85ee-4247-9b2a-e5e86328c5d8 02/09/23 01:57:11.962
    STEP: Creating the pod 02/09/23 01:57:11.969
    Feb  9 01:57:11.982: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-3038a4d9-750c-4c2b-b90a-e43ed03e4063" in namespace "projected-9101" to be "running and ready"
    Feb  9 01:57:11.988: INFO: Pod "pod-projected-configmaps-3038a4d9-750c-4c2b-b90a-e43ed03e4063": Phase="Pending", Reason="", readiness=false. Elapsed: 6.456265ms
    Feb  9 01:57:11.988: INFO: The phase of Pod pod-projected-configmaps-3038a4d9-750c-4c2b-b90a-e43ed03e4063 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:57:13.995: INFO: Pod "pod-projected-configmaps-3038a4d9-750c-4c2b-b90a-e43ed03e4063": Phase="Running", Reason="", readiness=true. Elapsed: 2.013787131s
    Feb  9 01:57:13.995: INFO: The phase of Pod pod-projected-configmaps-3038a4d9-750c-4c2b-b90a-e43ed03e4063 is Running (Ready = true)
    Feb  9 01:57:13.995: INFO: Pod "pod-projected-configmaps-3038a4d9-750c-4c2b-b90a-e43ed03e4063" satisfied condition "running and ready"
    STEP: Updating configmap projected-configmap-test-upd-e0fbc67c-85ee-4247-9b2a-e5e86328c5d8 02/09/23 01:57:14.012
    STEP: waiting to observe update in volume 02/09/23 01:57:14.019
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:57:16.044: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-9101" for this suite. 02/09/23 01:57:16.052
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] Downward API volume
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:57:16.062
Feb  9 01:57:16.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename downward-api 02/09/23 01:57:16.063
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:57:16.08
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:57:16.084
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68
STEP: Creating a pod to test downward API volume plugin 02/09/23 01:57:16.088
Feb  9 01:57:16.100: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb" in namespace "downward-api-9103" to be "Succeeded or Failed"
Feb  9 01:57:16.106: INFO: Pod "downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb": Phase="Pending", Reason="", readiness=false. Elapsed: 6.396401ms
Feb  9 01:57:18.115: INFO: Pod "downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014683239s
Feb  9 01:57:20.114: INFO: Pod "downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01393809s
STEP: Saw pod success 02/09/23 01:57:20.114
Feb  9 01:57:20.114: INFO: Pod "downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb" satisfied condition "Succeeded or Failed"
Feb  9 01:57:20.119: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb container client-container: <nil>
STEP: delete the pod 02/09/23 01:57:20.132
Feb  9 01:57:20.156: INFO: Waiting for pod downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb to disappear
Feb  9 01:57:20.161: INFO: Pod downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Feb  9 01:57:20.161: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-9103" for this suite. 02/09/23 01:57:20.168
------------------------------
â€¢ [4.116 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:57:16.062
    Feb  9 01:57:16.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename downward-api 02/09/23 01:57:16.063
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:57:16.08
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:57:16.084
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:68
    STEP: Creating a pod to test downward API volume plugin 02/09/23 01:57:16.088
    Feb  9 01:57:16.100: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb" in namespace "downward-api-9103" to be "Succeeded or Failed"
    Feb  9 01:57:16.106: INFO: Pod "downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb": Phase="Pending", Reason="", readiness=false. Elapsed: 6.396401ms
    Feb  9 01:57:18.115: INFO: Pod "downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014683239s
    Feb  9 01:57:20.114: INFO: Pod "downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01393809s
    STEP: Saw pod success 02/09/23 01:57:20.114
    Feb  9 01:57:20.114: INFO: Pod "downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb" satisfied condition "Succeeded or Failed"
    Feb  9 01:57:20.119: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb container client-container: <nil>
    STEP: delete the pod 02/09/23 01:57:20.132
    Feb  9 01:57:20.156: INFO: Waiting for pod downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb to disappear
    Feb  9 01:57:20.161: INFO: Pod downwardapi-volume-8ae21b6b-817e-4eef-88c4-b75c544031cb no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:57:20.161: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-9103" for this suite. 02/09/23 01:57:20.168
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:57:20.181
Feb  9 01:57:20.181: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename deployment 02/09/23 01:57:20.181
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:57:20.198
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:57:20.202
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105
Feb  9 01:57:20.206: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Feb  9 01:57:20.220: INFO: Pod name sample-pod: Found 0 pods out of 1
Feb  9 01:57:25.226: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 02/09/23 01:57:25.226
Feb  9 01:57:25.227: INFO: Creating deployment "test-rolling-update-deployment"
Feb  9 01:57:25.233: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Feb  9 01:57:25.244: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Feb  9 01:57:27.257: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Feb  9 01:57:27.262: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Feb  9 01:57:27.278: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-1933  00ab478e-5391-49a9-9e68-0fc73537f6e4 45497 1 2023-02-09 01:57:25 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] [] [{e2e.test Update apps/v1 2023-02-09 01:57:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:57:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0017b9668 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-02-09 01:57:25 +0000 UTC,LastTransitionTime:2023-02-09 01:57:25 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-7549d9f46d" has successfully progressed.,LastUpdateTime:2023-02-09 01:57:26 +0000 UTC,LastTransitionTime:2023-02-09 01:57:25 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Feb  9 01:57:27.283: INFO: New ReplicaSet "test-rolling-update-deployment-7549d9f46d" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-7549d9f46d  deployment-1933  17e6314b-d19d-4d38-9f76-2f1dd9caf489 45487 1 2023-02-09 01:57:25 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 00ab478e-5391-49a9-9e68-0fc73537f6e4 0xc0017b9b47 0xc0017b9b48}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:57:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"00ab478e-5391-49a9-9e68-0fc73537f6e4\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:57:26 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 7549d9f46d,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0017b9bf8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Feb  9 01:57:27.283: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Feb  9 01:57:27.283: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-1933  47d6fc8c-9456-41af-a217-48be2d696903 45496 2 2023-02-09 01:57:20 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 00ab478e-5391-49a9-9e68-0fc73537f6e4 0xc0017b9a17 0xc0017b9a18}] [] [{e2e.test Update apps/v1 2023-02-09 01:57:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:57:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"00ab478e-5391-49a9-9e68-0fc73537f6e4\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:57:26 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0017b9ad8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Feb  9 01:57:27.289: INFO: Pod "test-rolling-update-deployment-7549d9f46d-6v5hr" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-7549d9f46d-6v5hr test-rolling-update-deployment-7549d9f46d- deployment-1933  89818dcd-da13-46b7-a225-cc5752c062cc 45486 0 2023-02-09 01:57:25 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [{apps/v1 ReplicaSet test-rolling-update-deployment-7549d9f46d 17e6314b-d19d-4d38-9f76-2f1dd9caf489 0xc003167967 0xc003167968}] [] [{kube-controller-manager Update v1 2023-02-09 01:57:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17e6314b-d19d-4d38-9f76-2f1dd9caf489\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:57:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.110\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wv2jk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wv2jk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:57:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:57:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:57:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:57:25 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.110,StartTime:2023-02-09 01:57:25 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:57:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://606b540707ad9bf2ed7d3e696bb782e2760defb8cc328a89f8c572a7cc509174,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.110,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Feb  9 01:57:27.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-1933" for this suite. 02/09/23 01:57:27.303
------------------------------
â€¢ [SLOW TEST] [7.132 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:57:20.181
    Feb  9 01:57:20.181: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename deployment 02/09/23 01:57:20.181
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:57:20.198
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:57:20.202
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
      test/e2e/apps/deployment.go:105
    Feb  9 01:57:20.206: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
    Feb  9 01:57:20.220: INFO: Pod name sample-pod: Found 0 pods out of 1
    Feb  9 01:57:25.226: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 02/09/23 01:57:25.226
    Feb  9 01:57:25.227: INFO: Creating deployment "test-rolling-update-deployment"
    Feb  9 01:57:25.233: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
    Feb  9 01:57:25.244: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
    Feb  9 01:57:27.257: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
    Feb  9 01:57:27.262: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Feb  9 01:57:27.278: INFO: Deployment "test-rolling-update-deployment":
    &Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-1933  00ab478e-5391-49a9-9e68-0fc73537f6e4 45497 1 2023-02-09 01:57:25 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] [] [{e2e.test Update apps/v1 2023-02-09 01:57:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:57:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0017b9668 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-02-09 01:57:25 +0000 UTC,LastTransitionTime:2023-02-09 01:57:25 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-7549d9f46d" has successfully progressed.,LastUpdateTime:2023-02-09 01:57:26 +0000 UTC,LastTransitionTime:2023-02-09 01:57:25 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Feb  9 01:57:27.283: INFO: New ReplicaSet "test-rolling-update-deployment-7549d9f46d" of Deployment "test-rolling-update-deployment":
    &ReplicaSet{ObjectMeta:{test-rolling-update-deployment-7549d9f46d  deployment-1933  17e6314b-d19d-4d38-9f76-2f1dd9caf489 45487 1 2023-02-09 01:57:25 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 00ab478e-5391-49a9-9e68-0fc73537f6e4 0xc0017b9b47 0xc0017b9b48}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:57:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"00ab478e-5391-49a9-9e68-0fc73537f6e4\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:57:26 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 7549d9f46d,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0017b9bf8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Feb  9 01:57:27.283: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
    Feb  9 01:57:27.283: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-1933  47d6fc8c-9456-41af-a217-48be2d696903 45496 2 2023-02-09 01:57:20 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 00ab478e-5391-49a9-9e68-0fc73537f6e4 0xc0017b9a17 0xc0017b9a18}] [] [{e2e.test Update apps/v1 2023-02-09 01:57:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:57:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"00ab478e-5391-49a9-9e68-0fc73537f6e4\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:57:26 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0017b9ad8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Feb  9 01:57:27.289: INFO: Pod "test-rolling-update-deployment-7549d9f46d-6v5hr" is available:
    &Pod{ObjectMeta:{test-rolling-update-deployment-7549d9f46d-6v5hr test-rolling-update-deployment-7549d9f46d- deployment-1933  89818dcd-da13-46b7-a225-cc5752c062cc 45486 0 2023-02-09 01:57:25 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [{apps/v1 ReplicaSet test-rolling-update-deployment-7549d9f46d 17e6314b-d19d-4d38-9f76-2f1dd9caf489 0xc003167967 0xc003167968}] [] [{kube-controller-manager Update v1 2023-02-09 01:57:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17e6314b-d19d-4d38-9f76-2f1dd9caf489\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:57:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.110\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wv2jk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wv2jk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:57:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:57:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:57:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:57:25 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:10.244.0.110,StartTime:2023-02-09 01:57:25 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-02-09 01:57:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://606b540707ad9bf2ed7d3e696bb782e2760defb8cc328a89f8c572a7cc509174,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.110,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:57:27.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-1933" for this suite. 02/09/23 01:57:27.303
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:57:27.315
Feb  9 01:57:27.315: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename container-probe 02/09/23 01:57:27.316
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:57:27.332
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:57:27.335
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Feb  9 01:58:27.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-9479" for this suite. 02/09/23 01:58:27.366
------------------------------
â€¢ [SLOW TEST] [60.060 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:57:27.315
    Feb  9 01:57:27.315: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename container-probe 02/09/23 01:57:27.316
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:57:27.332
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:57:27.335
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:108
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:58:27.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-9479" for this suite. 02/09/23 01:58:27.366
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:58:27.379
Feb  9 01:58:27.379: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:58:27.38
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:58:27.395
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:58:27.398
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557
STEP: creating a service nodeport-service with the type=NodePort in namespace services-7115 02/09/23 01:58:27.402
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 02/09/23 01:58:27.421
STEP: creating service externalsvc in namespace services-7115 02/09/23 01:58:27.421
STEP: creating replication controller externalsvc in namespace services-7115 02/09/23 01:58:27.434
I0209 01:58:27.440829      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7115, replica count: 2
I0209 01:58:30.492309      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName 02/09/23 01:58:30.498
Feb  9 01:58:30.525: INFO: Creating new exec pod
Feb  9 01:58:30.533: INFO: Waiting up to 5m0s for pod "execpodrxmnr" in namespace "services-7115" to be "running"
Feb  9 01:58:30.539: INFO: Pod "execpodrxmnr": Phase="Pending", Reason="", readiness=false. Elapsed: 5.435215ms
Feb  9 01:58:32.545: INFO: Pod "execpodrxmnr": Phase="Running", Reason="", readiness=true. Elapsed: 2.011057277s
Feb  9 01:58:32.545: INFO: Pod "execpodrxmnr" satisfied condition "running"
Feb  9 01:58:32.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7115 exec execpodrxmnr -- /bin/sh -x -c nslookup nodeport-service.services-7115.svc.cluster.local'
Feb  9 01:58:32.727: INFO: stderr: "+ nslookup nodeport-service.services-7115.svc.cluster.local\n"
Feb  9 01:58:32.727: INFO: stdout: "Server:\t\t10.0.0.10\nAddress:\t10.0.0.10#53\n\nnodeport-service.services-7115.svc.cluster.local\tcanonical name = externalsvc.services-7115.svc.cluster.local.\nName:\texternalsvc.services-7115.svc.cluster.local\nAddress: 10.0.174.4\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-7115, will wait for the garbage collector to delete the pods 02/09/23 01:58:32.727
Feb  9 01:58:32.792: INFO: Deleting ReplicationController externalsvc took: 9.224985ms
Feb  9 01:58:32.893: INFO: Terminating ReplicationController externalsvc pods took: 100.103223ms
Feb  9 01:58:34.716: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:58:34.731: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-7115" for this suite. 02/09/23 01:58:34.74
------------------------------
â€¢ [SLOW TEST] [7.370 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:58:27.379
    Feb  9 01:58:27.379: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:58:27.38
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:58:27.395
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:58:27.398
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from NodePort to ExternalName [Conformance]
      test/e2e/network/service.go:1557
    STEP: creating a service nodeport-service with the type=NodePort in namespace services-7115 02/09/23 01:58:27.402
    STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 02/09/23 01:58:27.421
    STEP: creating service externalsvc in namespace services-7115 02/09/23 01:58:27.421
    STEP: creating replication controller externalsvc in namespace services-7115 02/09/23 01:58:27.434
    I0209 01:58:27.440829      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7115, replica count: 2
    I0209 01:58:30.492309      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    STEP: changing the NodePort service to type=ExternalName 02/09/23 01:58:30.498
    Feb  9 01:58:30.525: INFO: Creating new exec pod
    Feb  9 01:58:30.533: INFO: Waiting up to 5m0s for pod "execpodrxmnr" in namespace "services-7115" to be "running"
    Feb  9 01:58:30.539: INFO: Pod "execpodrxmnr": Phase="Pending", Reason="", readiness=false. Elapsed: 5.435215ms
    Feb  9 01:58:32.545: INFO: Pod "execpodrxmnr": Phase="Running", Reason="", readiness=true. Elapsed: 2.011057277s
    Feb  9 01:58:32.545: INFO: Pod "execpodrxmnr" satisfied condition "running"
    Feb  9 01:58:32.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-7115 exec execpodrxmnr -- /bin/sh -x -c nslookup nodeport-service.services-7115.svc.cluster.local'
    Feb  9 01:58:32.727: INFO: stderr: "+ nslookup nodeport-service.services-7115.svc.cluster.local\n"
    Feb  9 01:58:32.727: INFO: stdout: "Server:\t\t10.0.0.10\nAddress:\t10.0.0.10#53\n\nnodeport-service.services-7115.svc.cluster.local\tcanonical name = externalsvc.services-7115.svc.cluster.local.\nName:\texternalsvc.services-7115.svc.cluster.local\nAddress: 10.0.174.4\n\n"
    STEP: deleting ReplicationController externalsvc in namespace services-7115, will wait for the garbage collector to delete the pods 02/09/23 01:58:32.727
    Feb  9 01:58:32.792: INFO: Deleting ReplicationController externalsvc took: 9.224985ms
    Feb  9 01:58:32.893: INFO: Terminating ReplicationController externalsvc pods took: 100.103223ms
    Feb  9 01:58:34.716: INFO: Cleaning up the NodePort to ExternalName test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:58:34.731: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-7115" for this suite. 02/09/23 01:58:34.74
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:58:34.749
Feb  9 01:58:34.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename emptydir 02/09/23 01:58:34.75
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:58:34.766
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:58:34.771
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127
STEP: Creating a pod to test emptydir 0644 on tmpfs 02/09/23 01:58:34.775
Feb  9 01:58:34.792: INFO: Waiting up to 5m0s for pod "pod-47832374-d078-4621-b0ba-cd364a6930a3" in namespace "emptydir-7233" to be "Succeeded or Failed"
Feb  9 01:58:34.798: INFO: Pod "pod-47832374-d078-4621-b0ba-cd364a6930a3": Phase="Pending", Reason="", readiness=false. Elapsed: 5.764754ms
Feb  9 01:58:36.805: INFO: Pod "pod-47832374-d078-4621-b0ba-cd364a6930a3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012745968s
Feb  9 01:58:38.804: INFO: Pod "pod-47832374-d078-4621-b0ba-cd364a6930a3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011769891s
STEP: Saw pod success 02/09/23 01:58:38.804
Feb  9 01:58:38.804: INFO: Pod "pod-47832374-d078-4621-b0ba-cd364a6930a3" satisfied condition "Succeeded or Failed"
Feb  9 01:58:38.810: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-47832374-d078-4621-b0ba-cd364a6930a3 container test-container: <nil>
STEP: delete the pod 02/09/23 01:58:38.822
Feb  9 01:58:38.837: INFO: Waiting for pod pod-47832374-d078-4621-b0ba-cd364a6930a3 to disappear
Feb  9 01:58:38.842: INFO: Pod pod-47832374-d078-4621-b0ba-cd364a6930a3 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Feb  9 01:58:38.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-7233" for this suite. 02/09/23 01:58:38.851
------------------------------
â€¢ [4.111 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:58:34.749
    Feb  9 01:58:34.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename emptydir 02/09/23 01:58:34.75
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:58:34.766
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:58:34.771
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:127
    STEP: Creating a pod to test emptydir 0644 on tmpfs 02/09/23 01:58:34.775
    Feb  9 01:58:34.792: INFO: Waiting up to 5m0s for pod "pod-47832374-d078-4621-b0ba-cd364a6930a3" in namespace "emptydir-7233" to be "Succeeded or Failed"
    Feb  9 01:58:34.798: INFO: Pod "pod-47832374-d078-4621-b0ba-cd364a6930a3": Phase="Pending", Reason="", readiness=false. Elapsed: 5.764754ms
    Feb  9 01:58:36.805: INFO: Pod "pod-47832374-d078-4621-b0ba-cd364a6930a3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012745968s
    Feb  9 01:58:38.804: INFO: Pod "pod-47832374-d078-4621-b0ba-cd364a6930a3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011769891s
    STEP: Saw pod success 02/09/23 01:58:38.804
    Feb  9 01:58:38.804: INFO: Pod "pod-47832374-d078-4621-b0ba-cd364a6930a3" satisfied condition "Succeeded or Failed"
    Feb  9 01:58:38.810: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-47832374-d078-4621-b0ba-cd364a6930a3 container test-container: <nil>
    STEP: delete the pod 02/09/23 01:58:38.822
    Feb  9 01:58:38.837: INFO: Waiting for pod pod-47832374-d078-4621-b0ba-cd364a6930a3 to disappear
    Feb  9 01:58:38.842: INFO: Pod pod-47832374-d078-4621-b0ba-cd364a6930a3 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:58:38.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-7233" for this suite. 02/09/23 01:58:38.851
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-network] Services
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:58:38.863
Feb  9 01:58:38.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:58:38.863
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:58:38.878
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:58:38.882
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6842 02/09/23 01:58:38.886
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 02/09/23 01:58:38.899
STEP: creating service externalsvc in namespace services-6842 02/09/23 01:58:38.903
STEP: creating replication controller externalsvc in namespace services-6842 02/09/23 01:58:38.936
I0209 01:58:38.956537      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6842, replica count: 2
I0209 01:58:42.008358      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName 02/09/23 01:58:42.014
Feb  9 01:58:42.044: INFO: Creating new exec pod
Feb  9 01:58:42.051: INFO: Waiting up to 5m0s for pod "execpod9js67" in namespace "services-6842" to be "running"
Feb  9 01:58:42.056: INFO: Pod "execpod9js67": Phase="Pending", Reason="", readiness=false. Elapsed: 4.943245ms
Feb  9 01:58:44.063: INFO: Pod "execpod9js67": Phase="Running", Reason="", readiness=true. Elapsed: 2.011866299s
Feb  9 01:58:44.063: INFO: Pod "execpod9js67" satisfied condition "running"
Feb  9 01:58:44.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-6842 exec execpod9js67 -- /bin/sh -x -c nslookup clusterip-service.services-6842.svc.cluster.local'
Feb  9 01:58:44.249: INFO: stderr: "+ nslookup clusterip-service.services-6842.svc.cluster.local\n"
Feb  9 01:58:44.249: INFO: stdout: "Server:\t\t10.0.0.10\nAddress:\t10.0.0.10#53\n\nclusterip-service.services-6842.svc.cluster.local\tcanonical name = externalsvc.services-6842.svc.cluster.local.\nName:\texternalsvc.services-6842.svc.cluster.local\nAddress: 10.0.243.252\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-6842, will wait for the garbage collector to delete the pods 02/09/23 01:58:44.249
Feb  9 01:58:44.319: INFO: Deleting ReplicationController externalsvc took: 9.685986ms
Feb  9 01:58:44.420: INFO: Terminating ReplicationController externalsvc pods took: 101.041194ms
Feb  9 01:58:46.644: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:58:46.658: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6842" for this suite. 02/09/23 01:58:46.666
------------------------------
â€¢ [SLOW TEST] [7.813 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:58:38.863
    Feb  9 01:58:38.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:58:38.863
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:58:38.878
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:58:38.882
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ClusterIP to ExternalName [Conformance]
      test/e2e/network/service.go:1515
    STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6842 02/09/23 01:58:38.886
    STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 02/09/23 01:58:38.899
    STEP: creating service externalsvc in namespace services-6842 02/09/23 01:58:38.903
    STEP: creating replication controller externalsvc in namespace services-6842 02/09/23 01:58:38.936
    I0209 01:58:38.956537      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6842, replica count: 2
    I0209 01:58:42.008358      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    STEP: changing the ClusterIP service to type=ExternalName 02/09/23 01:58:42.014
    Feb  9 01:58:42.044: INFO: Creating new exec pod
    Feb  9 01:58:42.051: INFO: Waiting up to 5m0s for pod "execpod9js67" in namespace "services-6842" to be "running"
    Feb  9 01:58:42.056: INFO: Pod "execpod9js67": Phase="Pending", Reason="", readiness=false. Elapsed: 4.943245ms
    Feb  9 01:58:44.063: INFO: Pod "execpod9js67": Phase="Running", Reason="", readiness=true. Elapsed: 2.011866299s
    Feb  9 01:58:44.063: INFO: Pod "execpod9js67" satisfied condition "running"
    Feb  9 01:58:44.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-6842 exec execpod9js67 -- /bin/sh -x -c nslookup clusterip-service.services-6842.svc.cluster.local'
    Feb  9 01:58:44.249: INFO: stderr: "+ nslookup clusterip-service.services-6842.svc.cluster.local\n"
    Feb  9 01:58:44.249: INFO: stdout: "Server:\t\t10.0.0.10\nAddress:\t10.0.0.10#53\n\nclusterip-service.services-6842.svc.cluster.local\tcanonical name = externalsvc.services-6842.svc.cluster.local.\nName:\texternalsvc.services-6842.svc.cluster.local\nAddress: 10.0.243.252\n\n"
    STEP: deleting ReplicationController externalsvc in namespace services-6842, will wait for the garbage collector to delete the pods 02/09/23 01:58:44.249
    Feb  9 01:58:44.319: INFO: Deleting ReplicationController externalsvc took: 9.685986ms
    Feb  9 01:58:44.420: INFO: Terminating ReplicationController externalsvc pods took: 101.041194ms
    Feb  9 01:58:46.644: INFO: Cleaning up the ClusterIP to ExternalName test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:58:46.658: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6842" for this suite. 02/09/23 01:58:46.666
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:58:46.678
Feb  9 01:58:46.678: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename resourcequota 02/09/23 01:58:46.679
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:58:46.697
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:58:46.701
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690
STEP: Creating a ResourceQuota with terminating scope 02/09/23 01:58:46.706
STEP: Ensuring ResourceQuota status is calculated 02/09/23 01:58:46.712
STEP: Creating a ResourceQuota with not terminating scope 02/09/23 01:58:48.719
STEP: Ensuring ResourceQuota status is calculated 02/09/23 01:58:48.726
STEP: Creating a long running pod 02/09/23 01:58:50.732
STEP: Ensuring resource quota with not terminating scope captures the pod usage 02/09/23 01:58:50.751
STEP: Ensuring resource quota with terminating scope ignored the pod usage 02/09/23 01:58:52.758
STEP: Deleting the pod 02/09/23 01:58:54.764
STEP: Ensuring resource quota status released the pod usage 02/09/23 01:58:54.782
STEP: Creating a terminating pod 02/09/23 01:58:56.789
STEP: Ensuring resource quota with terminating scope captures the pod usage 02/09/23 01:58:56.808
STEP: Ensuring resource quota with not terminating scope ignored the pod usage 02/09/23 01:58:58.815
STEP: Deleting the pod 02/09/23 01:59:00.822
STEP: Ensuring resource quota status released the pod usage 02/09/23 01:59:00.845
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Feb  9 01:59:02.853: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-5308" for this suite. 02/09/23 01:59:02.862
------------------------------
â€¢ [SLOW TEST] [16.196 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:58:46.678
    Feb  9 01:58:46.678: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename resourcequota 02/09/23 01:58:46.679
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:58:46.697
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:58:46.701
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify ResourceQuota with terminating scopes. [Conformance]
      test/e2e/apimachinery/resource_quota.go:690
    STEP: Creating a ResourceQuota with terminating scope 02/09/23 01:58:46.706
    STEP: Ensuring ResourceQuota status is calculated 02/09/23 01:58:46.712
    STEP: Creating a ResourceQuota with not terminating scope 02/09/23 01:58:48.719
    STEP: Ensuring ResourceQuota status is calculated 02/09/23 01:58:48.726
    STEP: Creating a long running pod 02/09/23 01:58:50.732
    STEP: Ensuring resource quota with not terminating scope captures the pod usage 02/09/23 01:58:50.751
    STEP: Ensuring resource quota with terminating scope ignored the pod usage 02/09/23 01:58:52.758
    STEP: Deleting the pod 02/09/23 01:58:54.764
    STEP: Ensuring resource quota status released the pod usage 02/09/23 01:58:54.782
    STEP: Creating a terminating pod 02/09/23 01:58:56.789
    STEP: Ensuring resource quota with terminating scope captures the pod usage 02/09/23 01:58:56.808
    STEP: Ensuring resource quota with not terminating scope ignored the pod usage 02/09/23 01:58:58.815
    STEP: Deleting the pod 02/09/23 01:59:00.822
    STEP: Ensuring resource quota status released the pod usage 02/09/23 01:59:00.845
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:59:02.853: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-5308" for this suite. 02/09/23 01:59:02.862
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:59:02.876
Feb  9 01:59:02.876: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename watch 02/09/23 01:59:02.876
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:02.893
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:02.904
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142
STEP: creating a new configmap 02/09/23 01:59:02.908
STEP: modifying the configmap once 02/09/23 01:59:02.92
STEP: modifying the configmap a second time 02/09/23 01:59:02.931
STEP: deleting the configmap 02/09/23 01:59:02.957
STEP: creating a watch on configmaps from the resource version returned by the first update 02/09/23 01:59:02.965
STEP: Expecting to observe notifications for all changes to the configmap after the first update 02/09/23 01:59:02.967
Feb  9 01:59:02.967: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9853  385d0bf2-9847-4092-b353-f71751cdf6c4 46210 0 2023-02-09 01:59:02 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-02-09 01:59:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Feb  9 01:59:02.967: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9853  385d0bf2-9847-4092-b353-f71751cdf6c4 46211 0 2023-02-09 01:59:02 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-02-09 01:59:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Feb  9 01:59:02.968: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-9853" for this suite. 02/09/23 01:59:02.974
------------------------------
â€¢ [0.107 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:59:02.876
    Feb  9 01:59:02.876: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename watch 02/09/23 01:59:02.876
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:02.893
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:02.904
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to start watching from a specific resource version [Conformance]
      test/e2e/apimachinery/watch.go:142
    STEP: creating a new configmap 02/09/23 01:59:02.908
    STEP: modifying the configmap once 02/09/23 01:59:02.92
    STEP: modifying the configmap a second time 02/09/23 01:59:02.931
    STEP: deleting the configmap 02/09/23 01:59:02.957
    STEP: creating a watch on configmaps from the resource version returned by the first update 02/09/23 01:59:02.965
    STEP: Expecting to observe notifications for all changes to the configmap after the first update 02/09/23 01:59:02.967
    Feb  9 01:59:02.967: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9853  385d0bf2-9847-4092-b353-f71751cdf6c4 46210 0 2023-02-09 01:59:02 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-02-09 01:59:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Feb  9 01:59:02.967: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9853  385d0bf2-9847-4092-b353-f71751cdf6c4 46211 0 2023-02-09 01:59:02 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-02-09 01:59:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:59:02.968: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-9853" for this suite. 02/09/23 01:59:02.974
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:59:02.984
Feb  9 01:59:02.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:59:02.984
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:03
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:03.005
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation 02/09/23 01:59:03.008
Feb  9 01:59:03.009: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
Feb  9 01:59:04.631: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:59:10.916: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-1696" for this suite. 02/09/23 01:59:10.934
------------------------------
â€¢ [SLOW TEST] [7.960 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:59:02.984
    Feb  9 01:59:02.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename crd-publish-openapi 02/09/23 01:59:02.984
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:03
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:03.005
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of different groups [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:276
    STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation 02/09/23 01:59:03.008
    Feb  9 01:59:03.009: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    Feb  9 01:59:04.631: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:59:10.916: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-1696" for this suite. 02/09/23 01:59:10.934
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:59:10.944
Feb  9 01:59:10.945: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename daemonsets 02/09/23 01:59:10.945
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:10.965
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:10.969
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166
STEP: Creating simple DaemonSet "daemon-set" 02/09/23 01:59:11.004
STEP: Check that daemon pods launch on every node of the cluster. 02/09/23 01:59:11.012
Feb  9 01:59:11.025: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:59:11.025: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:59:12.040: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Feb  9 01:59:12.040: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:59:13.041: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Feb  9 01:59:13.041: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived. 02/09/23 01:59:13.047
Feb  9 01:59:13.075: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Feb  9 01:59:13.075: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:59:14.097: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Feb  9 01:59:14.097: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:59:15.090: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Feb  9 01:59:15.090: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:59:16.090: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Feb  9 01:59:16.090: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:59:17.090: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Feb  9 01:59:17.090: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 02/09/23 01:59:17.098
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7016, will wait for the garbage collector to delete the pods 02/09/23 01:59:17.098
Feb  9 01:59:17.163: INFO: Deleting DaemonSet.extensions daemon-set took: 9.213578ms
Feb  9 01:59:17.265: INFO: Terminating DaemonSet.extensions daemon-set pods took: 102.094057ms
Feb  9 01:59:19.672: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:59:19.672: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Feb  9 01:59:19.678: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46388"},"items":null}

Feb  9 01:59:19.683: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46388"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:59:19.709: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-7016" for this suite. 02/09/23 01:59:19.717
------------------------------
â€¢ [SLOW TEST] [8.781 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:59:10.944
    Feb  9 01:59:10.945: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename daemonsets 02/09/23 01:59:10.945
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:10.965
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:10.969
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should run and stop simple daemon [Conformance]
      test/e2e/apps/daemon_set.go:166
    STEP: Creating simple DaemonSet "daemon-set" 02/09/23 01:59:11.004
    STEP: Check that daemon pods launch on every node of the cluster. 02/09/23 01:59:11.012
    Feb  9 01:59:11.025: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:59:11.025: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:59:12.040: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Feb  9 01:59:12.040: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:59:13.041: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Feb  9 01:59:13.041: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    STEP: Stop a daemon pod, check that the daemon pod is revived. 02/09/23 01:59:13.047
    Feb  9 01:59:13.075: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Feb  9 01:59:13.075: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:59:14.097: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Feb  9 01:59:14.097: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:59:15.090: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Feb  9 01:59:15.090: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:59:16.090: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Feb  9 01:59:16.090: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:59:17.090: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Feb  9 01:59:17.090: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 02/09/23 01:59:17.098
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7016, will wait for the garbage collector to delete the pods 02/09/23 01:59:17.098
    Feb  9 01:59:17.163: INFO: Deleting DaemonSet.extensions daemon-set took: 9.213578ms
    Feb  9 01:59:17.265: INFO: Terminating DaemonSet.extensions daemon-set pods took: 102.094057ms
    Feb  9 01:59:19.672: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:59:19.672: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Feb  9 01:59:19.678: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46388"},"items":null}

    Feb  9 01:59:19.683: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46388"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:59:19.709: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-7016" for this suite. 02/09/23 01:59:19.717
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:59:19.727
Feb  9 01:59:19.727: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:59:19.727
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:19.747
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:19.751
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228
STEP: creating service in namespace services-1121 02/09/23 01:59:19.756
STEP: creating service affinity-nodeport in namespace services-1121 02/09/23 01:59:19.756
STEP: creating replication controller affinity-nodeport in namespace services-1121 02/09/23 01:59:19.786
I0209 01:59:19.793748      20 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-1121, replica count: 3
I0209 01:59:22.844981      20 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Feb  9 01:59:22.864: INFO: Creating new exec pod
Feb  9 01:59:22.881: INFO: Waiting up to 5m0s for pod "execpod-affinity2lblg" in namespace "services-1121" to be "running"
Feb  9 01:59:22.887: INFO: Pod "execpod-affinity2lblg": Phase="Pending", Reason="", readiness=false. Elapsed: 6.439754ms
Feb  9 01:59:24.894: INFO: Pod "execpod-affinity2lblg": Phase="Running", Reason="", readiness=true. Elapsed: 2.013124737s
Feb  9 01:59:24.894: INFO: Pod "execpod-affinity2lblg" satisfied condition "running"
Feb  9 01:59:25.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-1121 exec execpod-affinity2lblg -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport 80'
Feb  9 01:59:26.072: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Feb  9 01:59:26.072: INFO: stdout: ""
Feb  9 01:59:26.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-1121 exec execpod-affinity2lblg -- /bin/sh -x -c nc -v -z -w 2 10.0.127.103 80'
Feb  9 01:59:26.214: INFO: stderr: "+ nc -v -z -w 2 10.0.127.103 80\nConnection to 10.0.127.103 80 port [tcp/http] succeeded!\n"
Feb  9 01:59:26.214: INFO: stdout: ""
Feb  9 01:59:26.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-1121 exec execpod-affinity2lblg -- /bin/sh -x -c nc -v -z -w 2 10.224.0.5 30102'
Feb  9 01:59:26.359: INFO: stderr: "+ nc -v -z -w 2 10.224.0.5 30102\nConnection to 10.224.0.5 30102 port [tcp/*] succeeded!\n"
Feb  9 01:59:26.359: INFO: stdout: ""
Feb  9 01:59:26.359: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-1121 exec execpod-affinity2lblg -- /bin/sh -x -c nc -v -z -w 2 10.224.0.6 30102'
Feb  9 01:59:26.510: INFO: stderr: "+ nc -v -z -w 2 10.224.0.6 30102\nConnection to 10.224.0.6 30102 port [tcp/*] succeeded!\n"
Feb  9 01:59:26.510: INFO: stdout: ""
Feb  9 01:59:26.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-1121 exec execpod-affinity2lblg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.224.0.4:30102/ ; done'
Feb  9 01:59:26.728: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n"
Feb  9 01:59:26.728: INFO: stdout: "\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j"
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
Feb  9 01:59:26.728: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-1121, will wait for the garbage collector to delete the pods 02/09/23 01:59:26.746
Feb  9 01:59:26.811: INFO: Deleting ReplicationController affinity-nodeport took: 9.707179ms
Feb  9 01:59:26.912: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.802719ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:59:28.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-1121" for this suite. 02/09/23 01:59:28.851
------------------------------
â€¢ [SLOW TEST] [9.135 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:59:19.727
    Feb  9 01:59:19.727: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:59:19.727
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:19.747
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:19.751
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2228
    STEP: creating service in namespace services-1121 02/09/23 01:59:19.756
    STEP: creating service affinity-nodeport in namespace services-1121 02/09/23 01:59:19.756
    STEP: creating replication controller affinity-nodeport in namespace services-1121 02/09/23 01:59:19.786
    I0209 01:59:19.793748      20 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-1121, replica count: 3
    I0209 01:59:22.844981      20 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Feb  9 01:59:22.864: INFO: Creating new exec pod
    Feb  9 01:59:22.881: INFO: Waiting up to 5m0s for pod "execpod-affinity2lblg" in namespace "services-1121" to be "running"
    Feb  9 01:59:22.887: INFO: Pod "execpod-affinity2lblg": Phase="Pending", Reason="", readiness=false. Elapsed: 6.439754ms
    Feb  9 01:59:24.894: INFO: Pod "execpod-affinity2lblg": Phase="Running", Reason="", readiness=true. Elapsed: 2.013124737s
    Feb  9 01:59:24.894: INFO: Pod "execpod-affinity2lblg" satisfied condition "running"
    Feb  9 01:59:25.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-1121 exec execpod-affinity2lblg -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport 80'
    Feb  9 01:59:26.072: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
    Feb  9 01:59:26.072: INFO: stdout: ""
    Feb  9 01:59:26.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-1121 exec execpod-affinity2lblg -- /bin/sh -x -c nc -v -z -w 2 10.0.127.103 80'
    Feb  9 01:59:26.214: INFO: stderr: "+ nc -v -z -w 2 10.0.127.103 80\nConnection to 10.0.127.103 80 port [tcp/http] succeeded!\n"
    Feb  9 01:59:26.214: INFO: stdout: ""
    Feb  9 01:59:26.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-1121 exec execpod-affinity2lblg -- /bin/sh -x -c nc -v -z -w 2 10.224.0.5 30102'
    Feb  9 01:59:26.359: INFO: stderr: "+ nc -v -z -w 2 10.224.0.5 30102\nConnection to 10.224.0.5 30102 port [tcp/*] succeeded!\n"
    Feb  9 01:59:26.359: INFO: stdout: ""
    Feb  9 01:59:26.359: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-1121 exec execpod-affinity2lblg -- /bin/sh -x -c nc -v -z -w 2 10.224.0.6 30102'
    Feb  9 01:59:26.510: INFO: stderr: "+ nc -v -z -w 2 10.224.0.6 30102\nConnection to 10.224.0.6 30102 port [tcp/*] succeeded!\n"
    Feb  9 01:59:26.510: INFO: stdout: ""
    Feb  9 01:59:26.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-1121 exec execpod-affinity2lblg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.224.0.4:30102/ ; done'
    Feb  9 01:59:26.728: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.224.0.4:30102/\n"
    Feb  9 01:59:26.728: INFO: stdout: "\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j\naffinity-nodeport-lf98j"
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Received response from host: affinity-nodeport-lf98j
    Feb  9 01:59:26.728: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-nodeport in namespace services-1121, will wait for the garbage collector to delete the pods 02/09/23 01:59:26.746
    Feb  9 01:59:26.811: INFO: Deleting ReplicationController affinity-nodeport took: 9.707179ms
    Feb  9 01:59:26.912: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.802719ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:59:28.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-1121" for this suite. 02/09/23 01:59:28.851
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/kubectl/kubectl.go:931
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:59:28.865
Feb  9 01:59:28.865: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename kubectl 02/09/23 01:59:28.866
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:28.889
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:28.893
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/kubectl/kubectl.go:931
STEP: create deployment with httpd image 02/09/23 01:59:28.899
Feb  9 01:59:28.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7511 create -f -'
Feb  9 01:59:29.406: INFO: stderr: ""
Feb  9 01:59:29.406: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image 02/09/23 01:59:29.406
Feb  9 01:59:29.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7511 diff -f -'
Feb  9 01:59:29.581: INFO: rc: 1
Feb  9 01:59:29.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7511 delete -f -'
Feb  9 01:59:29.680: INFO: stderr: ""
Feb  9 01:59:29.680: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Feb  9 01:59:29.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-7511" for this suite. 02/09/23 01:59:29.688
------------------------------
â€¢ [0.837 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl diff
  test/e2e/kubectl/kubectl.go:925
    should check if kubectl diff finds a difference for Deployments [Conformance]
    test/e2e/kubectl/kubectl.go:931

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:59:28.865
    Feb  9 01:59:28.865: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename kubectl 02/09/23 01:59:28.866
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:28.889
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:28.893
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl diff finds a difference for Deployments [Conformance]
      test/e2e/kubectl/kubectl.go:931
    STEP: create deployment with httpd image 02/09/23 01:59:28.899
    Feb  9 01:59:28.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7511 create -f -'
    Feb  9 01:59:29.406: INFO: stderr: ""
    Feb  9 01:59:29.406: INFO: stdout: "deployment.apps/httpd-deployment created\n"
    STEP: verify diff finds difference between live and declared image 02/09/23 01:59:29.406
    Feb  9 01:59:29.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7511 diff -f -'
    Feb  9 01:59:29.581: INFO: rc: 1
    Feb  9 01:59:29.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=kubectl-7511 delete -f -'
    Feb  9 01:59:29.680: INFO: stderr: ""
    Feb  9 01:59:29.680: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:59:29.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-7511" for this suite. 02/09/23 01:59:29.688
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:59:29.703
Feb  9 01:59:29.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename dns 02/09/23 01:59:29.703
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:29.722
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:29.727
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137
STEP: Creating a test headless service 02/09/23 01:59:29.731
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9266.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9266.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9266.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9266.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 232.183.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.183.232_udp@PTR;check="$$(dig +tcp +noall +answer +search 232.183.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.183.232_tcp@PTR;sleep 1; done
 02/09/23 01:59:29.751
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9266.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9266.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9266.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9266.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 232.183.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.183.232_udp@PTR;check="$$(dig +tcp +noall +answer +search 232.183.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.183.232_tcp@PTR;sleep 1; done
 02/09/23 01:59:29.751
STEP: creating a pod to probe DNS 02/09/23 01:59:29.751
STEP: submitting the pod to kubernetes 02/09/23 01:59:29.751
Feb  9 01:59:29.765: INFO: Waiting up to 15m0s for pod "dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a" in namespace "dns-9266" to be "running"
Feb  9 01:59:29.771: INFO: Pod "dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a": Phase="Pending", Reason="", readiness=false. Elapsed: 6.22075ms
Feb  9 01:59:31.778: INFO: Pod "dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a": Phase="Running", Reason="", readiness=true. Elapsed: 2.012511802s
Feb  9 01:59:31.778: INFO: Pod "dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a" satisfied condition "running"
STEP: retrieving the pod 02/09/23 01:59:31.778
STEP: looking for the results for each expected name from probers 02/09/23 01:59:31.783
Feb  9 01:59:31.796: INFO: Unable to read wheezy_udp@dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
Feb  9 01:59:31.805: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
Feb  9 01:59:31.812: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
Feb  9 01:59:31.820: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
Feb  9 01:59:31.859: INFO: Unable to read jessie_udp@dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
Feb  9 01:59:31.868: INFO: Unable to read jessie_tcp@dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
Feb  9 01:59:31.878: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
Feb  9 01:59:31.886: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
Feb  9 01:59:31.918: INFO: Lookups using dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a failed for: [wheezy_udp@dns-test-service.dns-9266.svc.cluster.local wheezy_tcp@dns-test-service.dns-9266.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local jessie_udp@dns-test-service.dns-9266.svc.cluster.local jessie_tcp@dns-test-service.dns-9266.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local]

Feb  9 01:59:37.037: INFO: DNS probes using dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a succeeded

STEP: deleting the pod 02/09/23 01:59:37.037
STEP: deleting the test service 02/09/23 01:59:37.055
STEP: deleting the test headless service 02/09/23 01:59:37.092
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Feb  9 01:59:37.107: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-9266" for this suite. 02/09/23 01:59:37.115
------------------------------
â€¢ [SLOW TEST] [7.421 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:59:29.703
    Feb  9 01:59:29.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename dns 02/09/23 01:59:29.703
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:29.722
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:29.727
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for services  [Conformance]
      test/e2e/network/dns.go:137
    STEP: Creating a test headless service 02/09/23 01:59:29.731
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9266.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9266.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9266.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9266.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 232.183.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.183.232_udp@PTR;check="$$(dig +tcp +noall +answer +search 232.183.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.183.232_tcp@PTR;sleep 1; done
     02/09/23 01:59:29.751
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9266.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9266.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9266.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9266.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9266.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 232.183.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.183.232_udp@PTR;check="$$(dig +tcp +noall +answer +search 232.183.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.183.232_tcp@PTR;sleep 1; done
     02/09/23 01:59:29.751
    STEP: creating a pod to probe DNS 02/09/23 01:59:29.751
    STEP: submitting the pod to kubernetes 02/09/23 01:59:29.751
    Feb  9 01:59:29.765: INFO: Waiting up to 15m0s for pod "dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a" in namespace "dns-9266" to be "running"
    Feb  9 01:59:29.771: INFO: Pod "dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a": Phase="Pending", Reason="", readiness=false. Elapsed: 6.22075ms
    Feb  9 01:59:31.778: INFO: Pod "dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a": Phase="Running", Reason="", readiness=true. Elapsed: 2.012511802s
    Feb  9 01:59:31.778: INFO: Pod "dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a" satisfied condition "running"
    STEP: retrieving the pod 02/09/23 01:59:31.778
    STEP: looking for the results for each expected name from probers 02/09/23 01:59:31.783
    Feb  9 01:59:31.796: INFO: Unable to read wheezy_udp@dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
    Feb  9 01:59:31.805: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
    Feb  9 01:59:31.812: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
    Feb  9 01:59:31.820: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
    Feb  9 01:59:31.859: INFO: Unable to read jessie_udp@dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
    Feb  9 01:59:31.868: INFO: Unable to read jessie_tcp@dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
    Feb  9 01:59:31.878: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
    Feb  9 01:59:31.886: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local from pod dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a: the server could not find the requested resource (get pods dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a)
    Feb  9 01:59:31.918: INFO: Lookups using dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a failed for: [wheezy_udp@dns-test-service.dns-9266.svc.cluster.local wheezy_tcp@dns-test-service.dns-9266.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local jessie_udp@dns-test-service.dns-9266.svc.cluster.local jessie_tcp@dns-test-service.dns-9266.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9266.svc.cluster.local]

    Feb  9 01:59:37.037: INFO: DNS probes using dns-9266/dns-test-e6aceff0-0e4c-43b0-b3a6-36b6d756b01a succeeded

    STEP: deleting the pod 02/09/23 01:59:37.037
    STEP: deleting the test service 02/09/23 01:59:37.055
    STEP: deleting the test headless service 02/09/23 01:59:37.092
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:59:37.107: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-9266" for this suite. 02/09/23 01:59:37.115
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] Deployment
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:59:37.127
Feb  9 01:59:37.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename deployment 02/09/23 01:59:37.128
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:37.148
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:37.151
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113
Feb  9 01:59:37.155: INFO: Creating deployment "test-recreate-deployment"
Feb  9 01:59:37.162: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Feb  9 01:59:37.173: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Feb  9 01:59:39.186: INFO: Waiting deployment "test-recreate-deployment" to complete
Feb  9 01:59:39.191: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Feb  9 01:59:39.204: INFO: Updating deployment test-recreate-deployment
Feb  9 01:59:39.204: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Feb  9 01:59:39.284: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-8463  79151e63-5ed9-4ec2-947f-9f7d4ed54968 46745 2 2023-02-09 01:59:37 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004608df8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-02-09 01:59:39 +0000 UTC,LastTransitionTime:2023-02-09 01:59:39 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cff6dc657" is progressing.,LastUpdateTime:2023-02-09 01:59:39 +0000 UTC,LastTransitionTime:2023-02-09 01:59:37 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Feb  9 01:59:39.290: INFO: New ReplicaSet "test-recreate-deployment-cff6dc657" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cff6dc657  deployment-8463  7cd44d2c-88d1-46f2-88f1-2fe9479c4574 46742 1 2023-02-09 01:59:39 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 79151e63-5ed9-4ec2-947f-9f7d4ed54968 0xc0046092a0 0xc0046092a1}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"79151e63-5ed9-4ec2-947f-9f7d4ed54968\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cff6dc657,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004609338 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Feb  9 01:59:39.290: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Feb  9 01:59:39.290: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-795566c5cb  deployment-8463  3249ad5a-8e7f-48e5-921e-938675fa9f7e 46733 2 2023-02-09 01:59:37 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 79151e63-5ed9-4ec2-947f-9f7d4ed54968 0xc004609187 0xc004609188}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"79151e63-5ed9-4ec2-947f-9f7d4ed54968\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 795566c5cb,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004609238 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Feb  9 01:59:39.296: INFO: Pod "test-recreate-deployment-cff6dc657-66g29" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cff6dc657-66g29 test-recreate-deployment-cff6dc657- deployment-8463  3b939afa-bc48-4438-beea-3c32bd9d62ec 46744 0 2023-02-09 01:59:39 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [{apps/v1 ReplicaSet test-recreate-deployment-cff6dc657 7cd44d2c-88d1-46f2-88f1-2fe9479c4574 0xc000cace20 0xc000cace21}] [] [{kube-controller-manager Update v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7cd44d2c-88d1-46f2-88f1-2fe9479c4574\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2tfkx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2tfkx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:59:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:59:39 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:59:39 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:59:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:,StartTime:2023-02-09 01:59:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Feb  9 01:59:39.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-8463" for this suite. 02/09/23 01:59:39.304
------------------------------
â€¢ [2.187 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:59:37.127
    Feb  9 01:59:37.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename deployment 02/09/23 01:59:37.128
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:37.148
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:37.151
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] RecreateDeployment should delete old pods and create new ones [Conformance]
      test/e2e/apps/deployment.go:113
    Feb  9 01:59:37.155: INFO: Creating deployment "test-recreate-deployment"
    Feb  9 01:59:37.162: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
    Feb  9 01:59:37.173: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
    Feb  9 01:59:39.186: INFO: Waiting deployment "test-recreate-deployment" to complete
    Feb  9 01:59:39.191: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
    Feb  9 01:59:39.204: INFO: Updating deployment test-recreate-deployment
    Feb  9 01:59:39.204: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Feb  9 01:59:39.284: INFO: Deployment "test-recreate-deployment":
    &Deployment{ObjectMeta:{test-recreate-deployment  deployment-8463  79151e63-5ed9-4ec2-947f-9f7d4ed54968 46745 2 2023-02-09 01:59:37 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004608df8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-02-09 01:59:39 +0000 UTC,LastTransitionTime:2023-02-09 01:59:39 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cff6dc657" is progressing.,LastUpdateTime:2023-02-09 01:59:39 +0000 UTC,LastTransitionTime:2023-02-09 01:59:37 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

    Feb  9 01:59:39.290: INFO: New ReplicaSet "test-recreate-deployment-cff6dc657" of Deployment "test-recreate-deployment":
    &ReplicaSet{ObjectMeta:{test-recreate-deployment-cff6dc657  deployment-8463  7cd44d2c-88d1-46f2-88f1-2fe9479c4574 46742 1 2023-02-09 01:59:39 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 79151e63-5ed9-4ec2-947f-9f7d4ed54968 0xc0046092a0 0xc0046092a1}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"79151e63-5ed9-4ec2-947f-9f7d4ed54968\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cff6dc657,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004609338 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Feb  9 01:59:39.290: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
    Feb  9 01:59:39.290: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-795566c5cb  deployment-8463  3249ad5a-8e7f-48e5-921e-938675fa9f7e 46733 2 2023-02-09 01:59:37 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 79151e63-5ed9-4ec2-947f-9f7d4ed54968 0xc004609187 0xc004609188}] [] [{kube-controller-manager Update apps/v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"79151e63-5ed9-4ec2-947f-9f7d4ed54968\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 795566c5cb,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004609238 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Feb  9 01:59:39.296: INFO: Pod "test-recreate-deployment-cff6dc657-66g29" is not available:
    &Pod{ObjectMeta:{test-recreate-deployment-cff6dc657-66g29 test-recreate-deployment-cff6dc657- deployment-8463  3b939afa-bc48-4438-beea-3c32bd9d62ec 46744 0 2023-02-09 01:59:39 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [{apps/v1 ReplicaSet test-recreate-deployment-cff6dc657 7cd44d2c-88d1-46f2-88f1-2fe9479c4574 0xc000cace20 0xc000cace21}] [] [{kube-controller-manager Update v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7cd44d2c-88d1-46f2-88f1-2fe9479c4574\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-02-09 01:59:39 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2tfkx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2tfkx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:aks-nodes-15799032-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:59:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:59:39 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:59:39 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-02-09 01:59:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.224.0.4,PodIP:,StartTime:2023-02-09 01:59:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:59:39.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-8463" for this suite. 02/09/23 01:59:39.304
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:59:39.316
Feb  9 01:59:39.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename namespaces 02/09/23 01:59:39.317
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:39.339
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:39.343
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394
STEP: Creating namespace "e2e-ns-ffs5x" 02/09/23 01:59:39.347
Feb  9 01:59:39.368: INFO: Namespace "e2e-ns-ffs5x-6642" has []v1.FinalizerName{"kubernetes"}
STEP: Adding e2e finalizer to namespace "e2e-ns-ffs5x-6642" 02/09/23 01:59:39.368
Feb  9 01:59:39.380: INFO: Namespace "e2e-ns-ffs5x-6642" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
STEP: Removing e2e finalizer from namespace "e2e-ns-ffs5x-6642" 02/09/23 01:59:39.38
Feb  9 01:59:39.393: INFO: Namespace "e2e-ns-ffs5x-6642" has []v1.FinalizerName{"kubernetes"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:59:39.393: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-1743" for this suite. 02/09/23 01:59:39.402
STEP: Destroying namespace "e2e-ns-ffs5x-6642" for this suite. 02/09/23 01:59:39.411
------------------------------
â€¢ [0.103 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:59:39.316
    Feb  9 01:59:39.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename namespaces 02/09/23 01:59:39.317
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:39.339
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:39.343
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply a finalizer to a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:394
    STEP: Creating namespace "e2e-ns-ffs5x" 02/09/23 01:59:39.347
    Feb  9 01:59:39.368: INFO: Namespace "e2e-ns-ffs5x-6642" has []v1.FinalizerName{"kubernetes"}
    STEP: Adding e2e finalizer to namespace "e2e-ns-ffs5x-6642" 02/09/23 01:59:39.368
    Feb  9 01:59:39.380: INFO: Namespace "e2e-ns-ffs5x-6642" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
    STEP: Removing e2e finalizer from namespace "e2e-ns-ffs5x-6642" 02/09/23 01:59:39.38
    Feb  9 01:59:39.393: INFO: Namespace "e2e-ns-ffs5x-6642" has []v1.FinalizerName{"kubernetes"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:59:39.393: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-1743" for this suite. 02/09/23 01:59:39.402
    STEP: Destroying namespace "e2e-ns-ffs5x-6642" for this suite. 02/09/23 01:59:39.411
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-network] Services
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:59:39.42
Feb  9 01:59:39.421: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename services 02/09/23 01:59:39.421
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:39.44
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:39.444
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848
STEP: creating service multi-endpoint-test in namespace services-9836 02/09/23 01:59:39.448
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9836 to expose endpoints map[] 02/09/23 01:59:39.466
Feb  9 01:59:39.480: INFO: successfully validated that service multi-endpoint-test in namespace services-9836 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-9836 02/09/23 01:59:39.48
Feb  9 01:59:39.495: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-9836" to be "running and ready"
Feb  9 01:59:39.501: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.735846ms
Feb  9 01:59:39.501: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:59:41.507: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.012633355s
Feb  9 01:59:41.507: INFO: The phase of Pod pod1 is Running (Ready = true)
Feb  9 01:59:41.507: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9836 to expose endpoints map[pod1:[100]] 02/09/23 01:59:41.513
Feb  9 01:59:41.531: INFO: successfully validated that service multi-endpoint-test in namespace services-9836 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-9836 02/09/23 01:59:41.531
Feb  9 01:59:41.539: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-9836" to be "running and ready"
Feb  9 01:59:41.546: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 6.10475ms
Feb  9 01:59:41.546: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Feb  9 01:59:43.552: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.012414353s
Feb  9 01:59:43.552: INFO: The phase of Pod pod2 is Running (Ready = true)
Feb  9 01:59:43.552: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9836 to expose endpoints map[pod1:[100] pod2:[101]] 02/09/23 01:59:43.558
Feb  9 01:59:43.585: INFO: successfully validated that service multi-endpoint-test in namespace services-9836 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods 02/09/23 01:59:43.585
Feb  9 01:59:43.585: INFO: Creating new exec pod
Feb  9 01:59:43.593: INFO: Waiting up to 5m0s for pod "execpodh2t8s" in namespace "services-9836" to be "running"
Feb  9 01:59:43.600: INFO: Pod "execpodh2t8s": Phase="Pending", Reason="", readiness=false. Elapsed: 6.30765ms
Feb  9 01:59:45.607: INFO: Pod "execpodh2t8s": Phase="Running", Reason="", readiness=true. Elapsed: 2.013430161s
Feb  9 01:59:45.607: INFO: Pod "execpodh2t8s" satisfied condition "running"
Feb  9 01:59:46.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-9836 exec execpodh2t8s -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 80'
Feb  9 01:59:46.768: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Feb  9 01:59:46.768: INFO: stdout: ""
Feb  9 01:59:46.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-9836 exec execpodh2t8s -- /bin/sh -x -c nc -v -z -w 2 10.0.121.28 80'
Feb  9 01:59:46.931: INFO: stderr: "+ nc -v -z -w 2 10.0.121.28 80\nConnection to 10.0.121.28 80 port [tcp/http] succeeded!\n"
Feb  9 01:59:46.931: INFO: stdout: ""
Feb  9 01:59:46.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-9836 exec execpodh2t8s -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 81'
Feb  9 01:59:47.103: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Feb  9 01:59:47.104: INFO: stdout: ""
Feb  9 01:59:47.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-9836 exec execpodh2t8s -- /bin/sh -x -c nc -v -z -w 2 10.0.121.28 81'
Feb  9 01:59:47.253: INFO: stderr: "+ nc -v -z -w 2 10.0.121.28 81\nConnection to 10.0.121.28 81 port [tcp/*] succeeded!\n"
Feb  9 01:59:47.253: INFO: stdout: ""
STEP: Deleting pod pod1 in namespace services-9836 02/09/23 01:59:47.253
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9836 to expose endpoints map[pod2:[101]] 02/09/23 01:59:47.276
Feb  9 01:59:47.294: INFO: successfully validated that service multi-endpoint-test in namespace services-9836 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-9836 02/09/23 01:59:47.294
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9836 to expose endpoints map[] 02/09/23 01:59:47.307
Feb  9 01:59:47.319: INFO: successfully validated that service multi-endpoint-test in namespace services-9836 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Feb  9 01:59:47.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-9836" for this suite. 02/09/23 01:59:47.351
------------------------------
â€¢ [SLOW TEST] [7.941 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:59:39.42
    Feb  9 01:59:39.421: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename services 02/09/23 01:59:39.421
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:39.44
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:39.444
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should serve multiport endpoints from pods  [Conformance]
      test/e2e/network/service.go:848
    STEP: creating service multi-endpoint-test in namespace services-9836 02/09/23 01:59:39.448
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9836 to expose endpoints map[] 02/09/23 01:59:39.466
    Feb  9 01:59:39.480: INFO: successfully validated that service multi-endpoint-test in namespace services-9836 exposes endpoints map[]
    STEP: Creating pod pod1 in namespace services-9836 02/09/23 01:59:39.48
    Feb  9 01:59:39.495: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-9836" to be "running and ready"
    Feb  9 01:59:39.501: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.735846ms
    Feb  9 01:59:39.501: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:59:41.507: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.012633355s
    Feb  9 01:59:41.507: INFO: The phase of Pod pod1 is Running (Ready = true)
    Feb  9 01:59:41.507: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9836 to expose endpoints map[pod1:[100]] 02/09/23 01:59:41.513
    Feb  9 01:59:41.531: INFO: successfully validated that service multi-endpoint-test in namespace services-9836 exposes endpoints map[pod1:[100]]
    STEP: Creating pod pod2 in namespace services-9836 02/09/23 01:59:41.531
    Feb  9 01:59:41.539: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-9836" to be "running and ready"
    Feb  9 01:59:41.546: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 6.10475ms
    Feb  9 01:59:41.546: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Feb  9 01:59:43.552: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.012414353s
    Feb  9 01:59:43.552: INFO: The phase of Pod pod2 is Running (Ready = true)
    Feb  9 01:59:43.552: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9836 to expose endpoints map[pod1:[100] pod2:[101]] 02/09/23 01:59:43.558
    Feb  9 01:59:43.585: INFO: successfully validated that service multi-endpoint-test in namespace services-9836 exposes endpoints map[pod1:[100] pod2:[101]]
    STEP: Checking if the Service forwards traffic to pods 02/09/23 01:59:43.585
    Feb  9 01:59:43.585: INFO: Creating new exec pod
    Feb  9 01:59:43.593: INFO: Waiting up to 5m0s for pod "execpodh2t8s" in namespace "services-9836" to be "running"
    Feb  9 01:59:43.600: INFO: Pod "execpodh2t8s": Phase="Pending", Reason="", readiness=false. Elapsed: 6.30765ms
    Feb  9 01:59:45.607: INFO: Pod "execpodh2t8s": Phase="Running", Reason="", readiness=true. Elapsed: 2.013430161s
    Feb  9 01:59:45.607: INFO: Pod "execpodh2t8s" satisfied condition "running"
    Feb  9 01:59:46.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-9836 exec execpodh2t8s -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 80'
    Feb  9 01:59:46.768: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
    Feb  9 01:59:46.768: INFO: stdout: ""
    Feb  9 01:59:46.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-9836 exec execpodh2t8s -- /bin/sh -x -c nc -v -z -w 2 10.0.121.28 80'
    Feb  9 01:59:46.931: INFO: stderr: "+ nc -v -z -w 2 10.0.121.28 80\nConnection to 10.0.121.28 80 port [tcp/http] succeeded!\n"
    Feb  9 01:59:46.931: INFO: stdout: ""
    Feb  9 01:59:46.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-9836 exec execpodh2t8s -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 81'
    Feb  9 01:59:47.103: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
    Feb  9 01:59:47.104: INFO: stdout: ""
    Feb  9 01:59:47.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2052226237 --namespace=services-9836 exec execpodh2t8s -- /bin/sh -x -c nc -v -z -w 2 10.0.121.28 81'
    Feb  9 01:59:47.253: INFO: stderr: "+ nc -v -z -w 2 10.0.121.28 81\nConnection to 10.0.121.28 81 port [tcp/*] succeeded!\n"
    Feb  9 01:59:47.253: INFO: stdout: ""
    STEP: Deleting pod pod1 in namespace services-9836 02/09/23 01:59:47.253
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9836 to expose endpoints map[pod2:[101]] 02/09/23 01:59:47.276
    Feb  9 01:59:47.294: INFO: successfully validated that service multi-endpoint-test in namespace services-9836 exposes endpoints map[pod2:[101]]
    STEP: Deleting pod pod2 in namespace services-9836 02/09/23 01:59:47.294
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9836 to expose endpoints map[] 02/09/23 01:59:47.307
    Feb  9 01:59:47.319: INFO: successfully validated that service multi-endpoint-test in namespace services-9836 exposes endpoints map[]
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:59:47.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-9836" for this suite. 02/09/23 01:59:47.351
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:59:47.369
Feb  9 01:59:47.369: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename daemonsets 02/09/23 01:59:47.37
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:47.389
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:47.393
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823
STEP: Creating simple DaemonSet "daemon-set" 02/09/23 01:59:47.428
STEP: Check that daemon pods launch on every node of the cluster. 02/09/23 01:59:47.435
Feb  9 01:59:47.446: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:59:47.446: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:59:48.459: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Feb  9 01:59:48.459: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
Feb  9 01:59:49.462: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Feb  9 01:59:49.462: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: listing all DeamonSets 02/09/23 01:59:49.467
STEP: DeleteCollection of the DaemonSets 02/09/23 01:59:49.475
STEP: Verify that ReplicaSets have been deleted 02/09/23 01:59:49.488
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
Feb  9 01:59:49.512: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46939"},"items":null}

Feb  9 01:59:49.518: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46939"},"items":[{"metadata":{"name":"daemon-set-884vh","generateName":"daemon-set-","namespace":"daemonsets-7081","uid":"227641b7-42b9-495c-8432-bc89ae1444fe","resourceVersion":"46937","creationTimestamp":"2023-02-09T01:59:47Z","deletionTimestamp":"2023-02-09T02:00:19Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8670c246-2485-4ab9-851e-c952dc02401f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-02-09T01:59:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8670c246-2485-4ab9-851e-c952dc02401f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-02-09T01:59:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.145\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4nb6x","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-4nb6x","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"aks-nodes-15799032-vmss000001","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["aks-nodes-15799032-vmss000001"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:47Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:48Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:48Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:47Z"}],"hostIP":"10.224.0.5","podIP":"10.244.1.145","podIPs":[{"ip":"10.244.1.145"}],"startTime":"2023-02-09T01:59:47Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-02-09T01:59:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1c11ac9729327dff533e3033c6fe6c942d2167574b6bbe7e5e7a201b89b028a0","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qrtzn","generateName":"daemon-set-","namespace":"daemonsets-7081","uid":"457d0cba-a3d4-49a9-be12-37e6598df9ce","resourceVersion":"46938","creationTimestamp":"2023-02-09T01:59:47Z","deletionTimestamp":"2023-02-09T02:00:19Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8670c246-2485-4ab9-851e-c952dc02401f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-02-09T01:59:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8670c246-2485-4ab9-851e-c952dc02401f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-02-09T01:59:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.126\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-tz49m","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-tz49m","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"aks-nodes-15799032-vmss000000","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["aks-nodes-15799032-vmss000000"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:47Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:48Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:48Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:47Z"}],"hostIP":"10.224.0.4","podIP":"10.244.0.126","podIPs":[{"ip":"10.244.0.126"}],"startTime":"2023-02-09T01:59:47Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-02-09T01:59:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://e134ff79cd6da5a76a9a782494da5e25b708cef341f42a592bd8b31e1ba7b36e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-sb457","generateName":"daemon-set-","namespace":"daemonsets-7081","uid":"25d8ad70-dc75-4868-862d-01df1b86c0e8","resourceVersion":"46939","creationTimestamp":"2023-02-09T01:59:47Z","deletionTimestamp":"2023-02-09T02:00:19Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8670c246-2485-4ab9-851e-c952dc02401f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-02-09T01:59:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8670c246-2485-4ab9-851e-c952dc02401f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-02-09T01:59:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.116\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-q4wnd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-q4wnd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"aks-nodes-15799032-vmss000002","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["aks-nodes-15799032-vmss000002"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:47Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:48Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:48Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:47Z"}],"hostIP":"10.224.0.6","podIP":"10.244.2.116","podIPs":[{"ip":"10.244.2.116"}],"startTime":"2023-02-09T01:59:47Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-02-09T01:59:48Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a6608c5878e620ce614031a093be6999750f098c7566e1c48cbfc283c4680278","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Feb  9 01:59:49.540: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-7081" for this suite. 02/09/23 01:59:49.546
------------------------------
â€¢ [2.187 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:59:47.369
    Feb  9 01:59:47.369: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename daemonsets 02/09/23 01:59:47.37
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:47.389
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:47.393
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should list and delete a collection of DaemonSets [Conformance]
      test/e2e/apps/daemon_set.go:823
    STEP: Creating simple DaemonSet "daemon-set" 02/09/23 01:59:47.428
    STEP: Check that daemon pods launch on every node of the cluster. 02/09/23 01:59:47.435
    Feb  9 01:59:47.446: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:59:47.446: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:59:48.459: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Feb  9 01:59:48.459: INFO: Node aks-nodes-15799032-vmss000000 is running 0 daemon pod, expected 1
    Feb  9 01:59:49.462: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Feb  9 01:59:49.462: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    STEP: listing all DeamonSets 02/09/23 01:59:49.467
    STEP: DeleteCollection of the DaemonSets 02/09/23 01:59:49.475
    STEP: Verify that ReplicaSets have been deleted 02/09/23 01:59:49.488
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    Feb  9 01:59:49.512: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46939"},"items":null}

    Feb  9 01:59:49.518: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46939"},"items":[{"metadata":{"name":"daemon-set-884vh","generateName":"daemon-set-","namespace":"daemonsets-7081","uid":"227641b7-42b9-495c-8432-bc89ae1444fe","resourceVersion":"46937","creationTimestamp":"2023-02-09T01:59:47Z","deletionTimestamp":"2023-02-09T02:00:19Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8670c246-2485-4ab9-851e-c952dc02401f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-02-09T01:59:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8670c246-2485-4ab9-851e-c952dc02401f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-02-09T01:59:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.145\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4nb6x","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-4nb6x","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"aks-nodes-15799032-vmss000001","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["aks-nodes-15799032-vmss000001"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:47Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:48Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:48Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:47Z"}],"hostIP":"10.224.0.5","podIP":"10.244.1.145","podIPs":[{"ip":"10.244.1.145"}],"startTime":"2023-02-09T01:59:47Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-02-09T01:59:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1c11ac9729327dff533e3033c6fe6c942d2167574b6bbe7e5e7a201b89b028a0","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qrtzn","generateName":"daemon-set-","namespace":"daemonsets-7081","uid":"457d0cba-a3d4-49a9-be12-37e6598df9ce","resourceVersion":"46938","creationTimestamp":"2023-02-09T01:59:47Z","deletionTimestamp":"2023-02-09T02:00:19Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8670c246-2485-4ab9-851e-c952dc02401f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-02-09T01:59:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8670c246-2485-4ab9-851e-c952dc02401f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-02-09T01:59:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.126\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-tz49m","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-tz49m","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"aks-nodes-15799032-vmss000000","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["aks-nodes-15799032-vmss000000"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:47Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:48Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:48Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:47Z"}],"hostIP":"10.224.0.4","podIP":"10.244.0.126","podIPs":[{"ip":"10.244.0.126"}],"startTime":"2023-02-09T01:59:47Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-02-09T01:59:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://e134ff79cd6da5a76a9a782494da5e25b708cef341f42a592bd8b31e1ba7b36e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-sb457","generateName":"daemon-set-","namespace":"daemonsets-7081","uid":"25d8ad70-dc75-4868-862d-01df1b86c0e8","resourceVersion":"46939","creationTimestamp":"2023-02-09T01:59:47Z","deletionTimestamp":"2023-02-09T02:00:19Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8670c246-2485-4ab9-851e-c952dc02401f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-02-09T01:59:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8670c246-2485-4ab9-851e-c952dc02401f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-02-09T01:59:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.116\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-q4wnd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-q4wnd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"aks-nodes-15799032-vmss000002","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["aks-nodes-15799032-vmss000002"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:47Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:48Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:48Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-02-09T01:59:47Z"}],"hostIP":"10.224.0.6","podIP":"10.244.2.116","podIPs":[{"ip":"10.244.2.116"}],"startTime":"2023-02-09T01:59:47Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-02-09T01:59:48Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a6608c5878e620ce614031a093be6999750f098c7566e1c48cbfc283c4680278","started":true}],"qosClass":"BestEffort"}}]}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:59:49.540: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-7081" for this suite. 02/09/23 01:59:49.546
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 02/09/23 01:59:49.557
Feb  9 01:59:49.557: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
STEP: Building a namespace api object, basename configmap 02/09/23 01:59:49.558
STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:49.578
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:49.587
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423
STEP: Creating configMap with name configmap-test-volume-336aa765-fcb9-47d9-afc1-bd9b9ba06150 02/09/23 01:59:49.591
STEP: Creating a pod to test consume configMaps 02/09/23 01:59:49.598
Feb  9 01:59:49.612: INFO: Waiting up to 5m0s for pod "pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18" in namespace "configmap-7074" to be "Succeeded or Failed"
Feb  9 01:59:49.618: INFO: Pod "pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18": Phase="Pending", Reason="", readiness=false. Elapsed: 5.917959ms
Feb  9 01:59:51.626: INFO: Pod "pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013708643s
Feb  9 01:59:53.625: INFO: Pod "pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012784733s
STEP: Saw pod success 02/09/23 01:59:53.625
Feb  9 01:59:53.625: INFO: Pod "pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18" satisfied condition "Succeeded or Failed"
Feb  9 01:59:53.631: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18 container configmap-volume-test: <nil>
STEP: delete the pod 02/09/23 01:59:53.648
Feb  9 01:59:53.666: INFO: Waiting for pod pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18 to disappear
Feb  9 01:59:53.673: INFO: Pod pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Feb  9 01:59:53.673: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-7074" for this suite. 02/09/23 01:59:53.681
------------------------------
â€¢ [4.134 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 02/09/23 01:59:49.557
    Feb  9 01:59:49.557: INFO: >>> kubeConfig: /tmp/kubeconfig-2052226237
    STEP: Building a namespace api object, basename configmap 02/09/23 01:59:49.558
    STEP: Waiting for a default service account to be provisioned in namespace 02/09/23 01:59:49.578
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 02/09/23 01:59:49.587
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:423
    STEP: Creating configMap with name configmap-test-volume-336aa765-fcb9-47d9-afc1-bd9b9ba06150 02/09/23 01:59:49.591
    STEP: Creating a pod to test consume configMaps 02/09/23 01:59:49.598
    Feb  9 01:59:49.612: INFO: Waiting up to 5m0s for pod "pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18" in namespace "configmap-7074" to be "Succeeded or Failed"
    Feb  9 01:59:49.618: INFO: Pod "pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18": Phase="Pending", Reason="", readiness=false. Elapsed: 5.917959ms
    Feb  9 01:59:51.626: INFO: Pod "pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013708643s
    Feb  9 01:59:53.625: INFO: Pod "pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012784733s
    STEP: Saw pod success 02/09/23 01:59:53.625
    Feb  9 01:59:53.625: INFO: Pod "pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18" satisfied condition "Succeeded or Failed"
    Feb  9 01:59:53.631: INFO: Trying to get logs from node aks-nodes-15799032-vmss000000 pod pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18 container configmap-volume-test: <nil>
    STEP: delete the pod 02/09/23 01:59:53.648
    Feb  9 01:59:53.666: INFO: Waiting for pod pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18 to disappear
    Feb  9 01:59:53.673: INFO: Pod pod-configmaps-59e90eb4-447f-4bed-aa8a-f9b31e20ec18 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Feb  9 01:59:53.673: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-7074" for this suite. 02/09/23 01:59:53.681
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
[SynchronizedAfterSuite] TOP-LEVEL
  test/e2e/e2e.go:88
[SynchronizedAfterSuite] TOP-LEVEL
  test/e2e/e2e.go:88
Feb  9 01:59:53.694: INFO: Running AfterSuite actions on node 1
Feb  9 01:59:53.694: INFO: Skipping dumping logs from cluster
------------------------------
[SynchronizedAfterSuite] PASSED [0.000 seconds]
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88

  Begin Captured GinkgoWriter Output >>
    [SynchronizedAfterSuite] TOP-LEVEL
      test/e2e/e2e.go:88
    [SynchronizedAfterSuite] TOP-LEVEL
      test/e2e/e2e.go:88
    Feb  9 01:59:53.694: INFO: Running AfterSuite actions on node 1
    Feb  9 01:59:53.694: INFO: Skipping dumping logs from cluster
  << End Captured GinkgoWriter Output
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:153
[ReportAfterSuite] TOP-LEVEL
  test/e2e/e2e_test.go:153
------------------------------
[ReportAfterSuite] PASSED [0.000 seconds]
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:153

  Begin Captured GinkgoWriter Output >>
    [ReportAfterSuite] TOP-LEVEL
      test/e2e/e2e_test.go:153
  << End Captured GinkgoWriter Output
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:529
[ReportAfterSuite] TOP-LEVEL
  test/e2e/framework/test_context.go:529
------------------------------
[ReportAfterSuite] PASSED [0.082 seconds]
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:529

  Begin Captured GinkgoWriter Output >>
    [ReportAfterSuite] TOP-LEVEL
      test/e2e/framework/test_context.go:529
  << End Captured GinkgoWriter Output
------------------------------

Ran 368 of 7069 Specs in 5573.932 seconds
SUCCESS! -- 368 Passed | 0 Failed | 0 Pending | 6701 Skipped
PASS

Ginkgo ran 1 suite in 1h32m54.274393093s
Test Suite Passed
[38;5;228mYou're using deprecated Ginkgo functionality:[0m
[38;5;228m=============================================[0m
  [38;5;11m--noColor is deprecated, use --no-color instead[0m
  [1mLearn more at:[0m [38;5;14m[4mhttps://onsi.github.io/ginkgo/MIGRATING_TO_V2#changed-command-line-flags[0m

[38;5;243mTo silence deprecations that can be silenced set the following environment variable:[0m
  [38;5;243mACK_GINKGO_DEPRECATIONS=2.4.0[0m

